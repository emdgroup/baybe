Search.setIndex({"alltitles": {"Acquisition function": [[402, "acquisition-function"]], "AcquisitionFunction": [[24, null]], "Active Learning": [[445, null]], "Added": [[441, "added"], [441, "id6"], [441, "id16"], [441, "id20"], [441, "id26"], [441, "id33"], [441, "id42"], [441, "id48"], [441, "id52"], [441, "id59"], [441, "id64"], [441, "id70"], [441, "id76"], [441, "id80"], [441, "id84"], [441, "id88"], [441, "id93"], [441, "id97"], [441, "id100"], [441, "id104"], [441, "id108"], [441, "id112"], [441, "id115"], [441, "id119"], [441, "id123"], [441, "id127"], [441, "id131"], [441, "id137"], [441, "id140"]], "Addendum: Description of transformation functions": [[424, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[462, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[460, null]], "Adding Measurements": [[447, "adding-measurements"]], "Adding Partial Results": [[446, "adding-partial-results"]], "AdditiveKernel": [[114, null]], "Advanced Example: Chemical Substances": [[439, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[422, "an-imaginary-use-case"]], "Array-Based Callables": [[457, null]], "Asynchronous Workflows": [[446, null]], "Auto-Replication": [[458, null]], "Automatic field conversion": [[456, "automatic-field-conversion"]], "Available Models": [[458, "available-models"]], "Available recommenders suitable for initial recommendation": [[402, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[402, "available-surrogate-models"]], "Backtesting": [[395, null], [435, null]], "BaseSequentialMetaRecommender": [[184, null]], "Basic Creation": [[447, "basic-creation"]], "Basic Instructions": [[449, "basic-instructions"]], "Basic Usage": [[451, "basic-usage"]], "Basic example for using BayBE": [[401, null]], "Basic string assembly": [[456, "basic-string-assembly"]], "BasicKernel": [[101, null]], "Basics": [[400, null], [447, "basics"]], "Batch Optimization": [[447, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[439, null]], "Bayesian Recommenders": [[454, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[280, null]], "BayesianRecommender": [[195, null]], "Bernoulli Multi Armed Bandit": [[422, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[253, null]], "BetaPrior": [[170, null]], "BinaryTarget": [[298, null]], "BotorchRecommender": [[197, null]], "Bound methods": [[412, "bound-methods"]], "Breaking Changes": [[441, "breaking-changes"], [441, "id25"], [441, "id32"]], "Building from the Product of Parameter Values": [[455, "building-from-the-product-of-parameter-values"], [455, "id2"]], "Building the Model": [[422, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[440, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[447, "caching-of-recommendations"]], "Campaign": [[31, null]], "Campaign Setup": [[425, "campaign-setup"]], "Campaign Stopping": [[413, null]], "Campaigns": [[447, null]], "Candidate Control in Discrete Spaces": [[447, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[450, null]], "CardinalityConstraint": [[34, null]], "CategoricalEncoding": [[147, null]], "CategoricalParameter": [[142, null], [453, "categoricalparameter"]], "Caution": [[450, null]], "Changed": [[441, "changed"], [441, "id2"], [441, "id4"], [441, "id7"], [441, "id11"], [441, "id17"], [441, "id21"], [441, "id27"], [441, "id34"], [441, "id39"], [441, "id43"], [441, "id49"], [441, "id53"], [441, "id56"], [441, "id60"], [441, "id65"], [441, "id71"], [441, "id77"], [441, "id81"], [441, "id85"], [441, "id89"], [441, "id94"], [441, "id98"], [441, "id101"], [441, "id105"], [441, "id109"], [441, "id113"], [441, "id116"], [441, "id120"], [441, "id124"], [441, "id128"], [441, "id132"]], "Changelog": [[441, null]], "Clustering Recommenders": [[454, "clustering-recommenders"]], "Code Design": [[442, "code-design"]], "ColumnTransformer": [[384, null]], "Comparing recommendations in both objects": [[431, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[458, "composite-surrogates"]], "CompositeKernel": [[102, null]], "CompositeSurrogate": [[260, null]], "Computational Challenges": [[448, null]], "Condition": [[40, null]], "Conditions": [[448, "conditions"]], "Constraint": [[35, null]], "Constraint Setup": [[419, "constraint-setup"]], "Constraints": [[448, null]], "Constraints Continuous": [[403, null]], "Constraints Discrete": [[406, null]], "Constraints Setup": [[420, "constraints-setup"]], "Construct the campaign and run some iterations": [[404, "construct-the-campaign-and-run-some-iterations"], [405, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[455, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[397, "constructing-campaigns-for-the-simulation-loop"], [398, "constructing-campaigns-for-the-simulation-loop"], [399, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[455, "constructing-from-a-dataframe"], [455, "id1"], [455, "id3"]], "Constructing hybrid recommenders": [[429, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[428, "constructing-the-campaign-and-performing-a-recommendation"], [429, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[429, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[448, "continuous-constraints"]], "Continuous Parameters": [[453, "continuous-parameters"]], "Continuous Subspaces": [[455, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[44, null], [448, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[36, null]], "ContinuousLinearConstraint": [[45, null], [448, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[37, null]], "ContinuousParameter": [[138, null]], "Contributing to BayBE": [[442, null]], "Contributors": [[443, null], [443, "id1"]], "Convenience construction and implicit conversion": [[452, null]], "Conventions for attrs classes": [[442, "conventions-for-attrs-classes"]], "Convert model to onnx": [[416, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[416, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[417, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[416, "create-campaign"]], "Creating Continuous Search Spaces": [[427, null]], "Creating a Campaign": [[447, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[455, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[432, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[407, "creating-and-printing-the-campaign"], [408, "creating-and-printing-the-campaign"], [410, "creating-and-printing-the-campaign"], [424, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[396, "creating-the-campaigns"]], "Creating the Objective": [[398, "creating-the-objective"]], "Creating the Optimization Objective": [[435, "creating-the-optimization-objective"], [436, "creating-the-optimization-objective"]], "Creating the Search Space": [[435, "creating-the-search-space"]], "Creating the Searchspace": [[436, "creating-the-searchspace"]], "Creating the campaign": [[402, "creating-the-campaign"], [417, "creating-the-campaign"], [431, "creating-the-campaign"]], "Creating the constraint": [[407, "creating-the-constraint"], [409, "creating-the-constraint"]], "Creating the constraints": [[408, "creating-the-constraints"], [410, "creating-the-constraints"]], "Creating the objective": [[424, "creating-the-objective"]], "Creating the recommender object": [[402, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[397, "creating-the-searchspace-and-the-objective"], [399, "creating-the-searchspace-and-the-objective"], [404, "creating-the-searchspace-and-the-objective"], [405, "creating-the-searchspace-and-the-objective"], [407, "creating-the-searchspace-and-the-objective"], [408, "creating-the-searchspace-and-the-objective"], [409, "creating-the-searchspace-and-the-objective"], [410, "creating-the-searchspace-and-the-objective"], [428, "creating-the-searchspace-and-the-objective"]], "Creation From a JSON Config": [[447, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[458, null]], "Custom Hooks": [[411, null]], "Custom Surrogates": [[415, null]], "CustomDiscreteParameter": [[145, null], [453, "customdiscreteparameter"]], "CustomEncoding": [[148, null]], "CustomONNXSurrogate": [[262, null]], "Dataframe deserialization": [[456, "dataframe-deserialization"]], "DefaultKernelFactory": [[276, null]], "Defining config dictionaries": [[433, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[413, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[414, "defining-the-hook"]], "Defining the Hooks": [[412, "defining-the-hooks"]], "Defining the Optimization Objective": [[439, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[396, "defining-the-optimization-problem"], [425, "defining-the-optimization-problem"]], "Defining the Search Space": [[439, "defining-the-search-space"]], "Defining the Tasks": [[435, "defining-the-tasks"], [436, "defining-the-tasks"]], "Defining the targets": [[424, "defining-the-targets"]], "Defining the test function": [[404, "defining-the-test-function"], [405, "defining-the-test-function"], [428, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[429, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[441, "deprecations"], [441, "id23"], [441, "id30"], [441, "id37"], [441, "id46"], [441, "id62"], [441, "id68"], [441, "id74"], [441, "id91"]], "Deserialization from configuration strings": [[456, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[126, null], [452, "desirabilityobjective"]], "Developer Tools": [[442, "developer-tools"]], "Discrete Constraints": [[448, "discrete-constraints"]], "Discrete Parameters": [[453, "discrete-parameters"]], "Discrete Subspaces": [[455, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[419, null]], "DiscreteCardinalityConstraint": [[51, null], [448, "discretecardinalityconstraint"]], "DiscreteConstraint": [[38, null]], "DiscreteCustomConstraint": [[52, null], [448, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[53, null], [448, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[54, null], [448, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[55, null], [448, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[56, null], [448, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[139, null]], "DiscretePermutationInvarianceConstraint": [[57, null], [448, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[58, null]], "DiscreteSamplingMethod": [[380, null]], "DiscreteSumConstraint": [[59, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[448, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[422, "discussion"]], "Disk Caching": [[449, "disk-caching"]], "Dummy": [[319, null]], "Duplicate Substances": [[419, "duplicate-substances"]], "Dynamic Exclusion": [[450, "dynamic-exclusion"]], "EDBOKernelFactory": [[278, null]], "EXPERIMENTAL: Floating Point Precision": [[449, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[462, null]], "Environment Variables": [[449, null]], "Equivalent copies": [[456, null]], "Estimation with Constraints": [[462, null]], "Example Searchspace and objective parameters": [[402, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[404, null]], "Example for creating campaigns from configs": [[432, null]], "Example for custom parameter passing in surrogate models": [[417, null]], "Example for full simulation loop using a table-based lookup mechanism": [[398, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[399, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[397, null]], "Example for linear constraints in a continuous searchspace": [[405, null]], "Example for surrogate model with a custom pretrained model": [[416, null]], "Example for the serialization of a campaign": [[431, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[428, null]], "Example for using custom constraints in discrete searchspaces": [[407, null]], "Example for using dependency constraints in discrete searchspaces": [[408, null]], "Example for using different strategies": [[402, null]], "Example for using exclusion constraints in discrete searchspaces": [[409, null]], "Example for using exclusion constraints incorporating sums and products": [[410, null]], "Example for using synthetic test functions in hybrid spaces": [[429, null]], "Example for using the multi target mode for the objective": [[424, null]], "Example for validation of a config file": [[433, null]], "Examples": [[437, null]], "Examples On This Page": [[451, null]], "Excluding Configurations": [[450, "excluding-configurations"]], "Expectations": [[460, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[416, "experiment-setup"], [417, "experiment-setup"]], "Experiment setup": [[407, "experiment-setup"], [408, "experiment-setup"], [409, "experiment-setup"], [410, "experiment-setup"], [431, "experiment-setup"]], "Experiment setup and creating the searchspace": [[424, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[449, null]], "Experimental Representation Limits": [[451, null]], "Experimental and Computational Representations": [[451, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.6.*)": [[441, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[441, "expired-deprecations-from-0-7"]], "Explainers": [[451, "explainers"]], "Extending BayBE\u2019s Functionality": [[442, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[458, "extracting-the-model-for-advanced-study"]], "FAQ": [[438, null]], "FPSRecommender": [[209, null]], "Fixed": [[441, "fixed"], [441, "id8"], [441, "id12"], [441, "id14"], [441, "id18"], [441, "id22"], [441, "id28"], [441, "id36"], [441, "id40"], [441, "id45"], [441, "id50"], [441, "id54"], [441, "id61"], [441, "id66"], [441, "id72"], [441, "id78"], [441, "id86"], [441, "id90"], [441, "id95"], [441, "id102"], [441, "id106"], [441, "id110"], [441, "id117"], [441, "id121"], [441, "id125"], [441, "id129"], [441, "id133"], [441, "id135"], [441, "id138"]], "For Label-Like Parameters: Values and Active Values": [[453, "label-like"]], "From GitHub": [[439, "from-github"]], "From Local Clone": [[439, "from-local-clone"]], "From Package Index": [[439, "from-package-index"]], "From the Default Constructor": [[455, "from-the-default-constructor"]], "Further Information": [[447, "further-information"]], "GammaPrior": [[171, null]], "GaussianMixtureClusteringRecommender": [[204, null]], "GaussianProcessPreset": [[273, null]], "GaussianProcessSurrogate": [[266, null]], "General Information": [[454, "general-information"]], "General Workflow": [[442, "general-workflow"]], "Generating Lookup Tables": [[435, "generating-lookup-tables"], [436, "generating-lookup-tables"]], "Getting Recommendations": [[447, "getting-recommendations"], [450, null]], "Getting a recommendation and adding measurements": [[401, "getting-a-recommendation-and-adding-measurements"]], "Global Uncertainty Reduction": [[445, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[172, null]], "HalfNormalPrior": [[173, null]], "Hook instance vs. target instance": [[412, null]], "Hybrid constraints": [[448, null]], "Imports": [[396, "imports"], [412, "imports"], [414, "imports"], [419, "imports"], [420, "imports"], [422, "imports"], [425, "imports"], [427, "imports"], [435, "imports"], [436, "imports"]], "Inclusion of initial data": [[397, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[255, null]], "Indices and Tables": [[439, "indices-and-tables"]], "Influence of Continuous Parameters": [[462, null]], "Insights": [[451, null]], "Installation Related Issues": [[440, "installation-related-issues"]], "Interval": [[364, null]], "Invoking alternative constructors": [[456, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[416, "iterate-with-recommendations-and-measurements"], [417, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[456, "json-de-serialization"]], "KMeansClusteringRecommender": [[205, null]], "Kernel": [[103, null]], "KernelFactory": [[268, null]], "Known Issues": [[440, null]], "License": [[444, null]], "Limitations": [[459, "limitations"]], "LinearKernel": [[105, null]], "Links for documentation": [[417, "links-for-documentation"]], "Local Uncertainty Reduction": [[445, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[174, null]], "Lookup functionality and data creation": [[397, "lookup-functionality-and-data-creation"], [398, "lookup-functionality-and-data-creation"], [399, "lookup-functionality-and-data-creation"]], "MATCH mode": [[459, "match-mode"]], "MIN and MAX mode": [[459, "min-and-max-mode"]], "Maintainers": [[443, "maintainers"]], "Mandatory target bounds": [[452, null]], "Manual verification of the constraint": [[407, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[408, "manual-verification-of-the-constraints"], [409, "manual-verification-of-the-constraints"], [410, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[446, "marking-experiments-as-pending"]], "MaternKernel": [[106, null]], "MeanPredictionSurrogate": [[282, null]], "Memory During Optimization": [[462, null]], "MemorySize": [[220, null]], "Meta Recommenders": [[450, null], [454, "meta-recommenders"]], "MetaRecommender": [[182, null]], "Method overrides": [[442, "method-overrides"]], "Missing Lookup Values": [[457, null]], "Mixtures": [[418, null]], "Model Interpretation in BO": [[451, null]], "Model Outputs": [[416, "model-outputs"], [417, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[419, null]], "Modeling a Mixture in Traditional Representation": [[420, null]], "Monitoring the Probability of Improvement": [[414, null]], "Monkeypatching": [[412, "monkeypatching"], [413, null], [414, "monkeypatching"]], "Multi Target": [[423, null]], "Multi-Armed Bandit": [[421, null]], "Multi-output Modeling": [[458, "multi-output-modeling"]], "NGBoostSurrogate": [[284, null]], "NaiveHybridSpaceRecommender": [[189, null]], "Necessary imports": [[416, "necessary-imports"], [417, "necessary-imports"], [431, "necessary-imports"], [432, "necessary-imports"], [433, "necessary-imports"]], "Necessary imports for this example": [[397, "necessary-imports-for-this-example"], [398, "necessary-imports-for-this-example"], [399, "necessary-imports-for-this-example"], [401, "necessary-imports-for-this-example"], [402, "necessary-imports-for-this-example"], [404, "necessary-imports-for-this-example"], [405, "necessary-imports-for-this-example"], [407, "necessary-imports-for-this-example"], [408, "necessary-imports-for-this-example"], [409, "necessary-imports-for-this-example"], [410, "necessary-imports-for-this-example"], [424, "necessary-imports-for-this-example"], [428, "necessary-imports-for-this-example"], [429, "necessary-imports-for-this-example"]], "Nesting objects": [[456, "nesting-objects"]], "Non-dominated Configurations": [[452, null]], "NonPredictiveRecommender": [[202, null]], "NormalPrior": [[175, null]], "NumericalContinuousParameter": [[152, null], [453, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[153, null], [453, "numericaldiscreteparameter"]], "NumericalTarget": [[304, null], [459, "numericaltarget"]], "Objective": [[121, null], [452, null]], "Optimizing a Custom Black-Box Function": [[396, null]], "Optional Dependencies": [[439, "optional-dependencies"]], "Optional Dependency": [[453, null]], "Optional: Defining the Optimization Strategy": [[439, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[419, null]], "PAMClusteringRecommender": [[206, null]], "Parameter": [[140, null]], "Parameter Encoding": [[453, null]], "Parameter Importance via SHAP": [[451, "parameter-importance-via-shap"]], "Parameter Names": [[453, null]], "Parameter Setup": [[419, "parameter-setup"], [420, "parameter-setup"]], "Parameter tolerances": [[447, null]], "ParameterEncoding": [[149, null]], "Parameters": [[453, null]], "Parameters for a full simulation loop": [[397, "parameters-for-a-full-simulation-loop"], [398, "parameters-for-a-full-simulation-loop"], [399, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[131, null], [452, "paretoobjective"]], "PartialAcquisitionFunction": [[26, null]], "Performing some iterations": [[424, "performing-some-iterations"]], "Performing the simulation loop": [[397, "performing-the-simulation-loop"]], "PeriodicKernel": [[107, null]], "Permanent Exclusion": [[450, "permanent-exclusion"]], "Permutation Invariance": [[419, "permutation-invariance"]], "PiecewisePolynomialKernel": [[108, null]], "PlainKernelFactory": [[269, null]], "Plots": [[451, "plots"]], "Plotting the Results": [[396, "plotting-the-results"], [413, "plotting-the-results"], [414, "plotting-the-results"]], "Polars": [[449, "polars"]], "PolynomialKernel": [[109, null]], "Posterior Statistics with Desirability Objectives": [[447, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Predictive Statistics": [[447, "predictive-statistics"]], "Prior": [[168, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[413, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[115, null]], "Pure Recommenders": [[454, "pure-recommenders"]], "PureRecommender": [[192, null]], "Purely Continuous Search Spaces": [[445, null]], "PyCharm vs. exceptiongroup": [[440, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[110, null]], "RFFKernel": [[111, null]], "RQKernel": [[112, null]], "RandomForestSurrogate": [[286, null]], "RandomRecommender": [[210, null]], "RecommenderProtocol": [[179, null]], "Recommenders": [[454, null]], "Registering Custom Hooks": [[412, null]], "Removed": [[441, "removed"], [441, "id9"], [441, "id29"], [441, "id35"], [441, "id44"], [441, "id57"], [441, "id67"], [441, "id73"], [441, "id82"]], "Representation of Data within Discrete Subspaces": [[455, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[462, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[455, "restricting-search-spaces-using-constraints"]], "Row Order": [[449, null]], "Running the Simulation": [[422, "running-the-simulation"]], "Running the Simulation Loop": [[396, "running-the-simulation-loop"]], "SHAPInsight": [[94, null]], "SKLearnClusteringRecommender": [[207, null]], "Sampling Recommenders": [[454, "sampling-recommenders"]], "Scalarizer": [[129, null]], "ScaleKernel": [[116, null]], "Search Space Creation": [[419, "search-space-creation"], [420, "search-space-creation"]], "Search Space Memory Estimation": [[462, "search-space-memory-estimation"]], "Search Spaces": [[455, null]], "SearchSpace": [[215, null]], "SearchSpaceType": [[216, null]], "Searchspaces": [[426, null]], "Seeing Transfer Learning in Action": [[460, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[447, null]], "SequentialMetaRecommender": [[185, null]], "SerialMixin": [[238, null]], "Serialization": [[430, null], [447, "serialization"], [456, null]], "Serialization and de-serialization": [[431, "serialization-and-de-serialization"]], "Settings": [[396, "settings"], [413, "settings"], [414, "settings"], [425, "settings"], [427, "settings"], [435, "settings"], [436, "settings"]], "Setup": [[401, "setup"], [422, "setup"]], "Signature components": [[412, null]], "Simplex Construction": [[419, null]], "Simulating Multiple Scenarios": [[457, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[457, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[457, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[413, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[413, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[457, null]], "Simulation Loop": [[435, "simulation-loop"], [436, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[425, null]], "SingleTargetObjective": [[133, null], [452, "singletargetobjective"]], "Slot-based Representation": [[420, null]], "SmoothedBoxPrior": [[176, null]], "StreamingSequentialMetaRecommender": [[186, null]], "Sub-Sampling Method": [[445, null]], "SubSelectionCondition": [[41, null], [448, "subselectioncondition"]], "SubspaceContinuous": [[213, null]], "SubspaceDiscrete": [[221, null]], "Substance Amounts": [[419, "substance-amounts"]], "SubstanceEncoding": [[150, null]], "SubstanceParameter": [[156, null], [453, "substanceparameter"]], "Suggested Fix": [[440, null], [440, null], [440, null], [440, null]], "Supported Acquisition Functions": [[446, null]], "Supported Recommenders": [[446, null]], "Surrogate": [[257, null]], "Surrogate Replication": [[458, "surrogate-replication"]], "SurrogateProtocol": [[258, null]], "Surrogates": [[458, null]], "Synchronizing Pull Requests": [[442, "synchronizing-pull-requests"]], "Target": [[296, null]], "TargetMode": [[301, null]], "TargetTransformation": [[302, null]], "Targets": [[459, null]], "TaskParameter": [[143, null], [453, "taskparameter"]], "Technology": [[460, null]], "Telemetry": [[449, "telemetry"]], "Telemetry Scope": [[449, null]], "Terminology": [[419, "terminology"], [456, null], [460, null]], "Terminology Continued": [[460, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[457, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[422, "the-black-box-model"]], "The Lookup Mechanism": [[457, "the-lookup-mechanism"]], "The Optimization Loop": [[439, "the-optimization-loop"]], "The Role of the TaskParameter": [[460, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[432, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[450, "the-recommend-call"]], "The type field": [[456, "the-type-field"]], "Theoretical Span": [[419, null]], "ThresholdCondition": [[42, null], [448, "thresholdcondition"]], "Trajectory-Based Control": [[450, null]], "Transfer Learning": [[434, null], [436, null], [460, null]], "Triggering the Hook": [[414, "triggering-the-hook"]], "Triggering the Hooks": [[412, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[187, null]], "Uninstalling Internet Packages": [[449, null]], "Unlocking Data Treasures Through Transfer Learning": [[460, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[321, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[461, null]], "Using Custom Models": [[458, "using-custom-models"]], "Using Explicit Bounds": [[455, "using-explicit-bounds"]], "Using None": [[457, "using-none"]], "Using a Callable": [[457, "using-a-callable"]], "Using a Dataframe": [[457, "using-a-dataframe"]], "Using abbreviations": [[456, "using-abbreviations"]], "Using configuration instead": [[416, "using-configuration-instead"], [417, "using-configuration-instead"]], "Using default values": [[456, "using-default-values"]], "Utilities": [[462, null]], "Validation of model parameters": [[417, "validation-of-model-parameters"]], "Verification of Constraints": [[419, "verification-of-constraints"], [420, "verification-of-constraints"]], "Verification of Span": [[419, "verification-of-span"]], "Verification of the two dictionaries": [[433, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[405, "verify-the-constraints"]], "Visualization": [[425, "visualization"]], "Windows \u2013 Torch Problems": [[440, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[404, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [405, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [429, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[442, "writing-docstrings"]], "Writing classes": [[442, "writing-classes"]], "[0.1.0] - 2022-10-01": [[441, "id139"]], "[0.10.0] - 2024-08-02": [[441, "id31"]], "[0.11.0] - 2024-09-09": [[441, "id24"]], "[0.11.1] - 2024-10-01": [[441, "id19"]], "[0.11.2] - 2024-10-11": [[441, "id15"]], "[0.11.3] - 2024-11-06": [[441, "id13"]], "[0.11.4] - 2025-01-27": [[441, "id10"]], "[0.12.0] - 2025-01-28": [[441, "id5"]], "[0.12.1] - 2025-01-29": [[441, "id3"]], "[0.12.2] - 2025-01-31": [[441, "id1"]], "[0.2.0] - 2022-11-10": [[441, "id136"]], "[0.2.1] - 2022-12-01": [[441, "id134"]], "[0.2.2] - 2023-01-13": [[441, "id130"]], "[0.2.3] - 2023-03-14": [[441, "id126"]], "[0.2.4] - 2023-03-24": [[441, "id122"]], "[0.3.0] - 2023-06-27": [[441, "id118"]], "[0.3.1] - 2023-07-17": [[441, "id114"]], "[0.3.2] - 2023-07-24": [[441, "id111"]], "[0.4.0] - 2023-08-16": [[441, "id107"]], "[0.4.1] - 2023-08-23": [[441, "id103"]], "[0.4.2] - 2023-08-29": [[441, "id99"]], "[0.5.0] - 2023-09-15": [[441, "id96"]], "[0.5.1] - 2023-10-19": [[441, "id92"]], "[0.6.0] - 2023-11-17": [[441, "id87"]], "[0.6.1] - 2023-11-27": [[441, "id83"]], "[0.7.0] - 2023-12-04": [[441, "id79"]], "[0.7.1] - 2023-12-07": [[441, "id75"]], "[0.7.2] - 2024-01-24": [[441, "id69"]], "[0.7.3] - 2024-02-09": [[441, "id63"]], "[0.7.4] - 2024-02-28": [[441, "id58"]], "[0.8.0] - 2024-02-29": [[441, "id55"]], "[0.8.1] - 2024-03-11": [[441, "id51"]], "[0.8.2] - 2024-03-27": [[441, "id47"]], "[0.9.0] - 2024-05-21": [[441, "id41"]], "[0.9.1] - 2024-06-04": [[441, "id38"]], "[Unreleased]": [[441, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[23, null]], "baybe.acquisition.partial": [[25, null]], "baybe.acquisition.utils": [[27, null]], "baybe.acquisition.utils.convert_acqf": [[28, null]], "baybe.acquisition.utils.str_to_acqf": [[29, null]], "baybe.campaign": [[30, null]], "baybe.constraints": [[32, null]], "baybe.constraints.base": [[33, null]], "baybe.constraints.conditions": [[39, null]], "baybe.constraints.continuous": [[43, null]], "baybe.constraints.deprecation": [[46, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[47, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[48, null]], "baybe.constraints.deprecation.structure_constraints": [[49, null]], "baybe.constraints.discrete": [[50, null]], "baybe.constraints.utils": [[60, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[61, null]], "baybe.constraints.validation": [[62, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[63, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[64, null]], "baybe.constraints.validation.validate_constraints": [[65, null]], "baybe.exceptions": [[66, null]], "baybe.exceptions.DeprecationError": [[67, null]], "baybe.exceptions.EmptySearchSpaceError": [[68, null]], "baybe.exceptions.IncompatibilityError": [[69, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, null]], "baybe.exceptions.IncompatibleArgumentError": [[71, null]], "baybe.exceptions.IncompatibleExplainerError": [[72, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, null]], "baybe.exceptions.IncompatibleSurrogateError": [[74, null]], "baybe.exceptions.InfeasibilityError": [[75, null]], "baybe.exceptions.InvalidSurrogateModelError": [[76, null]], "baybe.exceptions.InvalidTargetValueError": [[77, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[78, null]], "baybe.exceptions.ModelNotTrainedError": [[79, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[80, null]], "baybe.exceptions.NoRecommendersLeftError": [[81, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[82, null]], "baybe.exceptions.NothingToSimulateError": [[83, null]], "baybe.exceptions.NumericalUnderflowError": [[84, null]], "baybe.exceptions.OptionalImportError": [[85, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[86, null]], "baybe.exceptions.UnidentifiedSubclassError": [[87, null]], "baybe.exceptions.UnmatchedAttributeError": [[88, null]], "baybe.exceptions.UnusedObjectWarning": [[89, null]], "baybe.insights": [[90, null]], "baybe.insights.shap": [[91, null]], "baybe.insights.shap.EXPLAINERS": [[92, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[93, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[95, null]], "baybe.insights.shap.SHAP_PLOTS": [[96, null]], "baybe.insights.shap.is_shap_explainer": [[97, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[98, null]], "baybe.kernels": [[99, null]], "baybe.kernels.base": [[100, null]], "baybe.kernels.basic": [[104, null]], "baybe.kernels.composite": [[113, null]], "baybe.objective": [[117, null]], "baybe.objective.Objective": [[118, null]], "baybe.objectives": [[119, null]], "baybe.objectives.base": [[120, null]], "baybe.objectives.base.to_objective": [[122, null]], "baybe.objectives.deprecation": [[123, null]], "baybe.objectives.deprecation.structure_objective": [[124, null]], "baybe.objectives.desirability": [[125, null]], "baybe.objectives.desirability.scalarize": [[127, null]], "baybe.objectives.enum": [[128, null]], "baybe.objectives.pareto": [[130, null]], "baybe.objectives.single": [[132, null]], "baybe.objectives.validation": [[134, null]], "baybe.objectives.validation.validate_target_names": [[135, null]], "baybe.parameters": [[136, null]], "baybe.parameters.base": [[137, null]], "baybe.parameters.categorical": [[141, null]], "baybe.parameters.custom": [[144, null]], "baybe.parameters.enum": [[146, null]], "baybe.parameters.numerical": [[151, null]], "baybe.parameters.substance": [[154, null]], "baybe.parameters.substance.Smiles": [[155, null]], "baybe.parameters.utils": [[157, null]], "baybe.parameters.utils.activate_parameter": [[158, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[159, null]], "baybe.parameters.utils.is_inactive": [[160, null]], "baybe.parameters.utils.sort_parameters": [[161, null]], "baybe.parameters.validation": [[162, null]], "baybe.parameters.validation.validate_decorrelation": [[163, null]], "baybe.parameters.validation.validate_is_finite": [[164, null]], "baybe.parameters.validation.validate_unique_values": [[165, null]], "baybe.priors": [[166, null]], "baybe.priors.base": [[167, null]], "baybe.priors.basic": [[169, null]], "baybe.recommenders": [[177, null]], "baybe.recommenders.base": [[178, null]], "baybe.recommenders.meta": [[180, null]], "baybe.recommenders.meta.base": [[181, null]], "baybe.recommenders.meta.sequential": [[183, null]], "baybe.recommenders.naive": [[188, null]], "baybe.recommenders.pure": [[190, null]], "baybe.recommenders.pure.base": [[191, null]], "baybe.recommenders.pure.bayesian": [[193, null]], "baybe.recommenders.pure.bayesian.base": [[194, null]], "baybe.recommenders.pure.bayesian.botorch": [[196, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[198, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[199, null]], "baybe.recommenders.pure.nonpredictive": [[200, null]], "baybe.recommenders.pure.nonpredictive.base": [[201, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[203, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[208, null]], "baybe.searchspace": [[211, null]], "baybe.searchspace.continuous": [[212, null]], "baybe.searchspace.core": [[214, null]], "baybe.searchspace.core.to_searchspace": [[217, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[218, null]], "baybe.searchspace.discrete": [[219, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[222, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[223, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[224, null]], "baybe.searchspace.validation": [[225, null]], "baybe.searchspace.validation.get_transform_parameters": [[226, null]], "baybe.searchspace.validation.validate_parameter_names": [[227, null]], "baybe.searchspace.validation.validate_parameters": [[228, null]], "baybe.serialization": [[229, null]], "baybe.serialization.core": [[230, null]], "baybe.serialization.core.block_deserialization_hook": [[231, null]], "baybe.serialization.core.block_serialization_hook": [[232, null]], "baybe.serialization.core.converter": [[233, null]], "baybe.serialization.core.get_base_structure_hook": [[234, null]], "baybe.serialization.core.select_constructor_hook": [[235, null]], "baybe.serialization.core.unstructure_base": [[236, null]], "baybe.serialization.mixin": [[237, null]], "baybe.serialization.utils": [[239, null]], "baybe.serialization.utils.deserialize_dataframe": [[240, null]], "baybe.serialization.utils.serialize_dataframe": [[241, null]], "baybe.simulation": [[242, null]], "baybe.simulation.core": [[243, null]], "baybe.simulation.core.simulate_experiment": [[244, null]], "baybe.simulation.lookup": [[245, null]], "baybe.simulation.lookup.look_up_targets": [[246, null]], "baybe.simulation.scenarios": [[247, null]], "baybe.simulation.scenarios.simulate_scenarios": [[248, null]], "baybe.simulation.transfer_learning": [[249, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[250, null]], "baybe.surrogates": [[251, null]], "baybe.surrogates.bandit": [[252, null]], "baybe.surrogates.base": [[254, null]], "baybe.surrogates.base.PosteriorStatistic": [[256, null]], "baybe.surrogates.composite": [[259, null]], "baybe.surrogates.custom": [[261, null]], "baybe.surrogates.custom.register_custom_architecture": [[263, null]], "baybe.surrogates.gaussian_process": [[264, null]], "baybe.surrogates.gaussian_process.core": [[265, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[267, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[270, null]], "baybe.surrogates.gaussian_process.presets": [[271, null]], "baybe.surrogates.gaussian_process.presets.core": [[272, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[274, null]], "baybe.surrogates.gaussian_process.presets.default": [[275, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[277, null]], "baybe.surrogates.linear": [[279, null]], "baybe.surrogates.naive": [[281, null]], "baybe.surrogates.ngboost": [[283, null]], "baybe.surrogates.random_forest": [[285, null]], "baybe.surrogates.utils": [[287, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[288, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[289, null]], "baybe.surrogates.utils.catch_constant_targets": [[290, null]], "baybe.surrogates.validation": [[291, null]], "baybe.surrogates.validation.get_model_params_validator": [[292, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[293, null]], "baybe.targets": [[294, null]], "baybe.targets.base": [[295, null]], "baybe.targets.binary": [[297, null]], "baybe.targets.binary.ChoiceValue": [[299, null]], "baybe.targets.enum": [[300, null]], "baybe.targets.numerical": [[303, null]], "baybe.targets.transforms": [[305, null]], "baybe.targets.transforms.bell_transform": [[306, null]], "baybe.targets.transforms.linear_transform": [[307, null]], "baybe.targets.transforms.triangular_transform": [[308, null]], "baybe.telemetry": [[309, null]], "baybe.telemetry.get_user_details": [[310, null]], "baybe.telemetry.is_enabled": [[311, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[312, null]], "baybe.telemetry.telemetry_record_value": [[313, null]], "baybe.utils": [[314, null]], "baybe.utils.augmentation": [[315, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[316, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[317, null]], "baybe.utils.basic": [[318, null]], "baybe.utils.basic.UNSPECIFIED": [[320, null]], "baybe.utils.basic.convert_to_float": [[323, null]], "baybe.utils.basic.find_subclass": [[324, null]], "baybe.utils.basic.get_baseclasses": [[325, null]], "baybe.utils.basic.get_subclasses": [[326, null]], "baybe.utils.basic.group_duplicate_values": [[327, null]], "baybe.utils.basic.hilberts_factory": [[328, null]], "baybe.utils.basic.is_all_instance": [[329, null]], "baybe.utils.basic.match_attributes": [[330, null]], "baybe.utils.basic.refers_to": [[331, null]], "baybe.utils.basic.register_hooks": [[332, null]], "baybe.utils.basic.to_tuple": [[333, null]], "baybe.utils.boolean": [[334, null]], "baybe.utils.boolean.check_if_in": [[335, null]], "baybe.utils.boolean.is_abstract": [[336, null]], "baybe.utils.boolean.strtobool": [[337, null]], "baybe.utils.chemistry": [[338, null]], "baybe.utils.chemistry.get_canonical_smiles": [[339, null]], "baybe.utils.chemistry.get_fingerprint_class": [[340, null]], "baybe.utils.chemistry.name_to_smiles": [[341, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[342, null]], "baybe.utils.conversion": [[343, null]], "baybe.utils.conversion.fraction_to_float": [[344, null]], "baybe.utils.conversion.nonstring_to_tuple": [[345, null]], "baybe.utils.conversion.to_string": [[346, null]], "baybe.utils.dataframe": [[347, null]], "baybe.utils.dataframe.add_fake_measurements": [[348, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[349, null]], "baybe.utils.dataframe.add_parameter_noise": [[350, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[351, null]], "baybe.utils.dataframe.create_fake_input": [[352, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[353, null]], "baybe.utils.dataframe.df_drop_string_columns": [[354, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[355, null]], "baybe.utils.dataframe.filter_df": [[356, null]], "baybe.utils.dataframe.fuzzy_row_match": [[357, null]], "baybe.utils.dataframe.get_transform_objects": [[358, null]], "baybe.utils.dataframe.pretty_print_df": [[359, null]], "baybe.utils.dataframe.to_tensor": [[360, null]], "baybe.utils.dataframe.transform_target_columns": [[361, null]], "baybe.utils.interval": [[362, null]], "baybe.utils.interval.InfiniteIntervalError": [[363, null]], "baybe.utils.interval.convert_bounds": [[365, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[366, null]], "baybe.utils.memory": [[367, null]], "baybe.utils.memory.bytes_to_human_readable": [[368, null]], "baybe.utils.numerical": [[369, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[370, null]], "baybe.utils.numerical.DTypeFloatONNX": [[371, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[372, null]], "baybe.utils.numerical.closer_element": [[373, null]], "baybe.utils.numerical.closest_element": [[374, null]], "baybe.utils.numerical.geom_mean": [[375, null]], "baybe.utils.random": [[376, null]], "baybe.utils.random.set_random_seed": [[377, null]], "baybe.utils.random.temporary_seed": [[378, null]], "baybe.utils.sampling_algorithms": [[379, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[381, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[382, null]], "baybe.utils.scaling": [[383, null]], "baybe.utils.torch": [[385, null]], "baybe.utils.torch.DTypeFloatTorch": [[386, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[387, null]], "baybe.utils.validation": [[388, null]], "baybe.utils.validation.finite_float": [[389, null]], "baybe.utils.validation.non_inf_float": [[390, null]], "baybe.utils.validation.non_nan_float": [[391, null]], "baybe.utils.validation.validate_not_nan": [[392, null]], "baybe.utils.validation.validate_parameter_input": [[393, null]], "baybe.utils.validation.validate_target_input": [[394, null]], "classproperty": [[322, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[440, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNParEGO": [[12, null]], "qLogNoisyExpectedHypervolumeImprovement": [[13, null]], "qLogNoisyExpectedImprovement": [[14, null]], "qNegIntegratedPosteriorVariance": [[15, null]], "qNoisyExpectedHypervolumeImprovement": [[16, null]], "qNoisyExpectedImprovement": [[17, null]], "qPosteriorStandardDeviation": [[18, null]], "qProbabilityOfImprovement": [[19, null]], "qSimpleRegret": [[20, null]], "qThompsonSampling": [[21, null]], "qUpperConfidenceBound": [[22, null]], "\u201cPre-training\u201d stage": [[416, "pre-training-stage"]], "\u26a1 Quick Start": [[439, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[439, "maintainers"]], "\ud83d\udcbb Installation": [[439, "installation"]], "\ud83d\udcc4 License": [[439, "license"]], "\ud83d\udce1 Telemetry": [[439, "telemetry"]], "\ud83d\udd0b Batteries Included": [[439, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[439, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.conversion.to_string", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.conversion.to_string.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[75, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[76, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[77, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[78, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[79, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[80, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[81, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[82, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[83, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[84, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[85, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[86, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[87, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[88, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[89, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[94, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[101, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[102, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[103, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[105, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[106, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[107, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[109, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[110, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[111, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[112, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[114, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[115, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[116, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[126, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[131, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[133, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[140, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[168, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[170, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[171, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[172, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[173, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[174, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[175, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[176, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[179, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[192, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[220, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[258, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[276, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[278, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[296, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[298, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[304, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[322, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[319, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[363, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[384, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[75, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[76, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[77, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[78, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[79, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[80, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[81, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[82, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[83, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[84, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[85, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[86, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[87, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[88, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[89, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[147, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[148, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[150, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[363, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[176, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[24, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[158, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[139, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[142, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[143, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[156, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[348, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[349, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[350, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[114, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[192, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[192, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[192, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[170, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[351, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[176, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[94, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[116, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[114, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[115, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[101, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[288, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[289, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[273, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[23, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[25, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[27, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[30, "module-baybe.campaign", false]], "baybe.constraints": [[32, "module-baybe.constraints", false]], "baybe.constraints.base": [[33, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[39, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[43, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[46, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[50, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[60, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[62, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[66, "module-baybe.exceptions", false]], "baybe.insights": [[90, "module-baybe.insights", false]], "baybe.insights.shap": [[91, "module-baybe.insights.shap", false]], "baybe.kernels": [[99, "module-baybe.kernels", false]], "baybe.kernels.base": [[100, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[104, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[113, "module-baybe.kernels.composite", false]], "baybe.objective": [[117, "module-baybe.objective", false]], "baybe.objectives": [[119, "module-baybe.objectives", false]], "baybe.objectives.base": [[120, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[123, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[125, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[128, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[130, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[132, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[134, "module-baybe.objectives.validation", false]], "baybe.parameters": [[136, "module-baybe.parameters", false]], "baybe.parameters.base": [[137, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[141, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[144, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[146, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[151, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[154, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[157, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[162, "module-baybe.parameters.validation", false]], "baybe.priors": [[166, "module-baybe.priors", false]], "baybe.priors.base": [[167, "module-baybe.priors.base", false]], "baybe.priors.basic": [[169, "module-baybe.priors.basic", false]], "baybe.recommenders": [[177, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[178, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[180, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[181, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[183, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[188, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[190, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[191, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[193, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[194, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[196, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[198, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[200, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[201, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[203, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[208, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[211, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[212, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[214, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[219, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[225, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[229, "module-baybe.serialization", false]], "baybe.serialization.core": [[230, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[237, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[239, "module-baybe.serialization.utils", false]], "baybe.simulation": [[242, "module-baybe.simulation", false]], "baybe.simulation.core": [[243, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[245, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[247, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[249, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[251, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[252, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[254, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[259, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[261, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[264, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[265, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[267, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[271, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[272, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[275, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[277, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[279, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[281, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[283, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[285, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[287, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[291, "module-baybe.surrogates.validation", false]], "baybe.targets": [[294, "module-baybe.targets", false]], "baybe.targets.base": [[295, "module-baybe.targets.base", false]], "baybe.targets.binary": [[297, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[300, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[303, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[305, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[309, "module-baybe.telemetry", false]], "baybe.utils": [[314, "module-baybe.utils", false]], "baybe.utils.augmentation": [[315, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[318, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[334, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[338, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[343, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[347, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[362, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[367, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[369, "module-baybe.utils.numerical", false]], "baybe.utils.random": [[376, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[379, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[383, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[385, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[388, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[302, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[306, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[170, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[170, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[298, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[231, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[232, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[304, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[368, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[31, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[290, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[147, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[142, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[335, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[299, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[322, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[373, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[374, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[384, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[139, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[142, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[143, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[156, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[138, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[139, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[140, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[142, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[143, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[156, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[220, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[192, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[102, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[260, "baybe.surrogates.composite.CompositeSurrogate", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[171, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[40, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[215, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[36, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[47, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[48, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[138, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[28, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[365, "baybe.utils.interval.convert_bounds", false]], "convert_to_float() (in module baybe.utils.basic)": [[323, "baybe.utils.basic.convert_to_float", false]], "converter (in module baybe.serialization.core)": [[233, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[364, "baybe.utils.interval.Interval.create", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[352, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[148, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[145, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[148, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[276, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[67, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[240, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[126, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[316, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[317, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[353, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[354, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[355, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[215, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[139, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[380, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[370, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[371, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[386, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[319, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[278, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[68, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[139, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[142, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[143, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[215, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[220, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[94, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[94, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[92, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[298, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[381, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[356, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[324, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[389, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[258, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[384, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[380, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[344, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[94, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[101, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[102, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[103, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[105, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[106, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[107, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[109, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[110, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[111, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[112, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[114, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[115, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[116, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[121, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[126, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[131, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[133, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[138, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[139, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[140, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[142, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[143, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[156, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[168, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[170, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[171, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[172, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[173, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[174, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[175, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[176, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[238, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[257, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[296, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[298, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[304, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[364, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[101, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[102, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[103, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[105, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[106, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[107, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[109, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[110, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[111, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[112, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[114, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[115, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[116, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[121, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[126, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[131, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[133, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[138, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[139, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[140, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[142, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[143, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[156, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[168, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[170, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[171, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[172, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[173, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[174, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[175, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[176, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[238, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[257, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[296, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[298, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[304, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[364, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[94, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[94, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[357, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[171, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[273, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[129, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[375, "baybe.utils.numerical.geom_mean", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[234, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[325, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[339, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[340, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[292, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[159, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[326, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[358, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[226, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[310, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[327, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[172, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[328, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[69, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[71, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[72, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[73, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[74, "baybe.exceptions.IncompatibleSurrogateError", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infeasibilityerror": [[75, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[363, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[147, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[364, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[76, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[77, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[336, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[329, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[61, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[138, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[139, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[140, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[142, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[143, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[156, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[138, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[139, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[140, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[142, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[143, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[156, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[311, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[140, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[160, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[121, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[126, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[131, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[133, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[138, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[139, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[140, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[142, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[143, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[97, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[182, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[103, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[106, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[107, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[110, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[111, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[112, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[106, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[107, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[110, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[111, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[112, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[302, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[307, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[105, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[174, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[175, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[246, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[364, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[98, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[274, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[384, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[301, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[330, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[106, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[301, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[129, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[220, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[182, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[301, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimumcardinalityviolatedwarning": [[78, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[304, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[79, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [23, "module-baybe.acquisition.base", false], [25, "module-baybe.acquisition.partial", false], [27, "module-baybe.acquisition.utils", false], [30, "module-baybe.campaign", false], [32, "module-baybe.constraints", false], [33, "module-baybe.constraints.base", false], [39, "module-baybe.constraints.conditions", false], [43, "module-baybe.constraints.continuous", false], [46, "module-baybe.constraints.deprecation", false], [50, "module-baybe.constraints.discrete", false], [60, "module-baybe.constraints.utils", false], [62, "module-baybe.constraints.validation", false], [66, "module-baybe.exceptions", false], [90, "module-baybe.insights", false], [91, "module-baybe.insights.shap", false], [99, "module-baybe.kernels", false], [100, "module-baybe.kernels.base", false], [104, "module-baybe.kernels.basic", false], [113, "module-baybe.kernels.composite", false], [117, "module-baybe.objective", false], [119, "module-baybe.objectives", false], [120, "module-baybe.objectives.base", false], [123, "module-baybe.objectives.deprecation", false], [125, "module-baybe.objectives.desirability", false], [128, "module-baybe.objectives.enum", false], [130, "module-baybe.objectives.pareto", false], [132, "module-baybe.objectives.single", false], [134, "module-baybe.objectives.validation", false], [136, "module-baybe.parameters", false], [137, "module-baybe.parameters.base", false], [141, "module-baybe.parameters.categorical", false], [144, "module-baybe.parameters.custom", false], [146, "module-baybe.parameters.enum", false], [151, "module-baybe.parameters.numerical", false], [154, "module-baybe.parameters.substance", false], [157, "module-baybe.parameters.utils", false], [162, "module-baybe.parameters.validation", false], [166, "module-baybe.priors", false], [167, "module-baybe.priors.base", false], [169, "module-baybe.priors.basic", false], [177, "module-baybe.recommenders", false], [178, "module-baybe.recommenders.base", false], [180, "module-baybe.recommenders.meta", false], [181, "module-baybe.recommenders.meta.base", false], [183, "module-baybe.recommenders.meta.sequential", false], [188, "module-baybe.recommenders.naive", false], [190, "module-baybe.recommenders.pure", false], [191, "module-baybe.recommenders.pure.base", false], [193, "module-baybe.recommenders.pure.bayesian", false], [194, "module-baybe.recommenders.pure.bayesian.base", false], [196, "module-baybe.recommenders.pure.bayesian.botorch", false], [198, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [200, "module-baybe.recommenders.pure.nonpredictive", false], [201, "module-baybe.recommenders.pure.nonpredictive.base", false], [203, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [208, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [211, "module-baybe.searchspace", false], [212, "module-baybe.searchspace.continuous", false], [214, "module-baybe.searchspace.core", false], [219, "module-baybe.searchspace.discrete", false], [225, "module-baybe.searchspace.validation", false], [229, "module-baybe.serialization", false], [230, "module-baybe.serialization.core", false], [237, "module-baybe.serialization.mixin", false], [239, "module-baybe.serialization.utils", false], [242, "module-baybe.simulation", false], [243, "module-baybe.simulation.core", false], [245, "module-baybe.simulation.lookup", false], [247, "module-baybe.simulation.scenarios", false], [249, "module-baybe.simulation.transfer_learning", false], [251, "module-baybe.surrogates", false], [252, "module-baybe.surrogates.bandit", false], [254, "module-baybe.surrogates.base", false], [259, "module-baybe.surrogates.composite", false], [261, "module-baybe.surrogates.custom", false], [264, "module-baybe.surrogates.gaussian_process", false], [265, "module-baybe.surrogates.gaussian_process.core", false], [267, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [271, "module-baybe.surrogates.gaussian_process.presets", false], [272, "module-baybe.surrogates.gaussian_process.presets.core", false], [275, "module-baybe.surrogates.gaussian_process.presets.default", false], [277, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [279, "module-baybe.surrogates.linear", false], [281, "module-baybe.surrogates.naive", false], [283, "module-baybe.surrogates.ngboost", false], [285, "module-baybe.surrogates.random_forest", false], [287, "module-baybe.surrogates.utils", false], [291, "module-baybe.surrogates.validation", false], [294, "module-baybe.targets", false], [295, "module-baybe.targets.base", false], [297, "module-baybe.targets.binary", false], [300, "module-baybe.targets.enum", false], [303, "module-baybe.targets.numerical", false], [305, "module-baybe.targets.transforms", false], [309, "module-baybe.telemetry", false], [314, "module-baybe.utils", false], [315, "module-baybe.utils.augmentation", false], [318, "module-baybe.utils.basic", false], [334, "module-baybe.utils.boolean", false], [338, "module-baybe.utils.chemistry", false], [343, "module-baybe.utils.conversion", false], [347, "module-baybe.utils.dataframe", false], [362, "module-baybe.utils.interval", false], [367, "module-baybe.utils.memory", false], [369, "module-baybe.utils.numerical", false], [376, "module-baybe.utils.random", false], [379, "module-baybe.utils.sampling_algorithms", false], [383, "module-baybe.utils.scaling", false], [385, "module-baybe.utils.torch", false], [388, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[121, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[126, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[131, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[133, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[138, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[139, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[140, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[142, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[143, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[296, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[298, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[304, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[341, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[80, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[390, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[391, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[93, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[345, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[81, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[175, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[82, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[83, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[106, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[111, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[304, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[84, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[121, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[118, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[109, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[109, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[147, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[85, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[116, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[116, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[140, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[222, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[223, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[149, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[131, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[107, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[107, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[107, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[94, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[109, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[256, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[109, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[359, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[168, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[115, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[192, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[380, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[171, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[110, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[179, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[192, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[179, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[331, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[263, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[332, "baybe.utils.basic.register_hooks", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "rffkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[382, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[127, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[126, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[129, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[172, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[173, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[174, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[175, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[116, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[215, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[86, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[216, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[235, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[41, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[199, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[241, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[238, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[377, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[95, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[96, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[94, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[176, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[244, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[248, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[250, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[133, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[155, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[342, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[176, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[161, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[29, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[337, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[49, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[124, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[41, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[213, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[150, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[156, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[298, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[140, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[296, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[298, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[304, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[257, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[257, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[257, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[258, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[260, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[296, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[301, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[121, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[126, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[131, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[133, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[302, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[143, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[312, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[313, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[378, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[42, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[258, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[101, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[102, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[103, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[105, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[106, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[107, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[109, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[110, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[111, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[112, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[114, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[115, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[116, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[126, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[131, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[133, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[140, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[168, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[170, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[171, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[172, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[173, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[174, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[175, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[176, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[238, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[296, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[298, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[304, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[101, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[102, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[103, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[105, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[106, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[107, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[109, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[110, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[111, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[112, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[114, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[115, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[116, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[101, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[102, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[103, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[105, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[106, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[107, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[109, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[110, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[111, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[112, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[114, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[115, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[116, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[168, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[170, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[171, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[172, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[173, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[174, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[175, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[176, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[101, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[102, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[103, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[105, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[106, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[107, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[109, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[110, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[111, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[112, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[114, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[115, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[116, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[126, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[131, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[133, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[140, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[168, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[170, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[171, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[172, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[173, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[174, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[175, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[176, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[238, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[296, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[298, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[304, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[296, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[298, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[304, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[122, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[140, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[217, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.conversion)": [[346, "baybe.utils.conversion.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[360, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[333, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[126, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[131, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[133, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[296, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[298, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[304, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[384, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[361, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[304, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[302, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[308, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[87, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[88, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[320, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[321, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[236, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[89, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[364, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[366, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[94, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[63, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[64, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[65, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[293, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[163, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[164, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[392, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[393, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[227, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[228, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[218, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[224, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[394, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[135, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[165, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[139, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[142, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[143, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[156, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[105, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[105, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[372, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[387, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[126, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [30, 0, 0, "-", "campaign"], [32, 0, 0, "-", "constraints"], [66, 0, 0, "-", "exceptions"], [90, 0, 0, "-", "insights"], [99, 0, 0, "-", "kernels"], [117, 0, 0, "-", "objective"], [119, 0, 0, "-", "objectives"], [136, 0, 0, "-", "parameters"], [166, 0, 0, "-", "priors"], [177, 0, 0, "-", "recommenders"], [211, 0, 0, "-", "searchspace"], [229, 0, 0, "-", "serialization"], [242, 0, 0, "-", "simulation"], [251, 0, 0, "-", "surrogates"], [294, 0, 0, "-", "targets"], [309, 0, 0, "-", "telemetry"], [314, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [23, 0, 0, "-", "base"], [25, 0, 0, "-", "partial"], [27, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNParEGO"], [13, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [14, 1, 1, "", "qLogNoisyExpectedImprovement"], [15, 1, 1, "", "qNegIntegratedPosteriorVariance"], [16, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [17, 1, 1, "", "qNoisyExpectedImprovement"], [18, 1, 1, "", "qPosteriorStandardDeviation"], [19, 1, 1, "", "qProbabilityOfImprovement"], [20, 1, 1, "", "qSimpleRegret"], [21, 1, 1, "", "qThompsonSampling"], [22, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNParEGO": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "compute_ref_point"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "prune_baseline"], [13, 3, 1, "", "reference_point"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[13, 4, 1, "", "array"], [13, 4, 1, "", "factor"], [13, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "get_integration_points"], [15, 3, 1, "", "sampling_fraction"], [15, 3, 1, "", "sampling_method"], [15, 3, 1, "", "sampling_n_points"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[15, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "compute_ref_point"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "reference_point"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[16, 4, 1, "", "array"], [16, 4, 1, "", "factor"], [16, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "prune_baseline"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "n_mc_samples"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 3, 1, "", "beta"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[22, 4, 1, "", "string"]], "baybe.acquisition.base": [[24, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[24, 4, 1, "", "string"]], "baybe.acquisition.partial": [[26, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "botorch_acqf"], [26, 3, 1, "", "pin_discrete"], [26, 3, 1, "", "pinned_part"], [26, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[26, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[28, 5, 1, "", "convert_acqf"], [29, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[31, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "add_measurements"], [31, 3, 1, "", "allow_recommending_already_measured"], [31, 3, 1, "", "allow_recommending_already_recommended"], [31, 3, 1, "", "allow_recommending_pending_experiments"], [31, 2, 1, "", "from_config"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 2, 1, "", "get_surrogate"], [31, 6, 1, "", "measurements"], [31, 3, 1, "", "n_batches_done"], [31, 3, 1, "", "n_fits_done"], [31, 3, 1, "", "objective"], [31, 6, 1, "", "parameters"], [31, 2, 1, "", "posterior"], [31, 2, 1, "", "posterior_stats"], [31, 2, 1, "", "recommend"], [31, 3, 1, "", "recommender"], [31, 3, 1, "", "searchspace"], [31, 6, 1, "", "targets"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"], [31, 2, 1, "", "toggle_discrete_candidates"], [31, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[31, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[31, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_surrogate.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[31, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[31, 4, 1, "", "candidates"], [31, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[31, 4, 1, "", "complement"], [31, 4, 1, "", "constraints"], [31, 4, 1, "", "dry_run"], [31, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[31, 4, 1, "", "config_json"]], "baybe.constraints": [[33, 0, 0, "-", "base"], [39, 0, 0, "-", "conditions"], [43, 0, 0, "-", "continuous"], [46, 0, 0, "-", "deprecation"], [50, 0, 0, "-", "discrete"], [60, 0, 0, "-", "utils"], [62, 0, 0, "-", "validation"]], "baybe.constraints.base": [[34, 1, 1, "", "CardinalityConstraint"], [35, 1, 1, "", "Constraint"], [36, 1, 1, "", "ContinuousConstraint"], [37, 1, 1, "", "ContinuousNonlinearConstraint"], [38, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "max_cardinality"], [34, 3, 1, "", "min_cardinality"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "eval_during_augmentation"], [36, 3, 1, "", "eval_during_creation"], [36, 3, 1, "", "eval_during_modeling"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 6, 1, "", "is_continuous"], [36, 6, 1, "", "is_discrete"], [36, 3, 1, "", "numerical_only"], [36, 3, 1, "", "parameters"], [36, 2, 1, "", "summary"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 2, 1, "", "get_invalid"], [38, 2, 1, "", "get_invalid_polars"], [38, 2, 1, "", "get_valid"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[38, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[38, 4, 1, "", "df"]], "baybe.constraints.conditions": [[40, 1, 1, "", "Condition"], [41, 1, 1, "", "SubSelectionCondition"], [42, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[40, 2, 1, "", "evaluate"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"], [40, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[40, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[40, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "selection"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"], [41, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[41, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[41, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "evaluate"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 3, 1, "", "operator"], [42, 3, 1, "", "threshold"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"], [42, 2, 1, "", "to_polars"], [42, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[42, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[42, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[44, 1, 1, "", "ContinuousCardinalityConstraint"], [45, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "eval_during_augmentation"], [44, 3, 1, "", "eval_during_creation"], [44, 3, 1, "", "eval_during_modeling"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 2, 1, "", "get_absolute_thresholds"], [44, 2, 1, "", "inactive_parameter_combinations"], [44, 6, 1, "", "is_continuous"], [44, 6, 1, "", "is_discrete"], [44, 3, 1, "", "max_cardinality"], [44, 3, 1, "", "min_cardinality"], [44, 6, 1, "", "n_inactive_parameter_combinations"], [44, 3, 1, "", "numerical_only"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "relative_threshold"], [44, 2, 1, "", "sample_inactive_parameters"], [44, 2, 1, "", "summary"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[44, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[44, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[44, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[45, 2, 1, "", "__init__"], [45, 3, 1, "", "coefficients"], [45, 3, 1, "", "eval_during_augmentation"], [45, 3, 1, "", "eval_during_creation"], [45, 3, 1, "", "eval_during_modeling"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 6, 1, "", "is_continuous"], [45, 6, 1, "", "is_discrete"], [45, 6, 1, "", "is_eq"], [45, 3, 1, "", "numerical_only"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "rhs"], [45, 2, 1, "", "summary"], [45, 2, 1, "", "to_botorch"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[45, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[45, 4, 1, "", "idx_offset"], [45, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[47, 5, 1, "", "ContinuousLinearEqualityConstraint"], [48, 5, 1, "", "ContinuousLinearInequalityConstraint"], [49, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[51, 1, 1, "", "DiscreteCardinalityConstraint"], [52, 1, 1, "", "DiscreteCustomConstraint"], [53, 1, 1, "", "DiscreteDependenciesConstraint"], [54, 1, 1, "", "DiscreteExcludeConstraint"], [55, 1, 1, "", "DiscreteLinkedParametersConstraint"], [56, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [57, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [58, 1, 1, "", "DiscreteProductConstraint"], [59, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "max_cardinality"], [51, 3, 1, "", "min_cardinality"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"], [52, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "affected_parameters"], [53, 3, 1, "", "conditions"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 3, 1, "", "permutation_invariant"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "combiner"], [54, 3, 1, "", "conditions"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "dependencies"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "condition"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[58, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[59, 2, 1, "", "__init__"], [59, 3, 1, "", "condition"], [59, 3, 1, "", "eval_during_augmentation"], [59, 3, 1, "", "eval_during_creation"], [59, 3, 1, "", "eval_during_modeling"], [59, 2, 1, "", "from_dict"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_invalid"], [59, 2, 1, "", "get_invalid_polars"], [59, 2, 1, "", "get_valid"], [59, 6, 1, "", "is_continuous"], [59, 6, 1, "", "is_discrete"], [59, 3, 1, "", "numerical_only"], [59, 3, 1, "", "parameters"], [59, 2, 1, "", "summary"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[59, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[59, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[59, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[59, 4, 1, "", "df"]], "baybe.constraints.utils": [[61, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[61, 4, 1, "", "check_maximum"], [61, 4, 1, "", "check_minimum"], [61, 4, 1, "", "df"], [61, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[63, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [64, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [65, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[63, 4, 1, "", "constraint"], [63, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[64, 4, 1, "", "constraints"]], "baybe.exceptions": [[67, 7, 1, "", "DeprecationError"], [68, 7, 1, "", "EmptySearchSpaceError"], [69, 7, 1, "", "IncompatibilityError"], [70, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [71, 7, 1, "", "IncompatibleArgumentError"], [72, 7, 1, "", "IncompatibleExplainerError"], [73, 7, 1, "", "IncompatibleSearchSpaceError"], [74, 7, 1, "", "IncompatibleSurrogateError"], [75, 7, 1, "", "InfeasibilityError"], [76, 7, 1, "", "InvalidSurrogateModelError"], [77, 7, 1, "", "InvalidTargetValueError"], [78, 7, 1, "", "MinimumCardinalityViolatedWarning"], [79, 7, 1, "", "ModelNotTrainedError"], [80, 7, 1, "", "NoMCAcquisitionFunctionError"], [81, 7, 1, "", "NoRecommendersLeftError"], [82, 7, 1, "", "NotEnoughPointsLeftError"], [83, 7, 1, "", "NothingToSimulateError"], [84, 7, 1, "", "NumericalUnderflowError"], [85, 7, 1, "", "OptionalImportError"], [86, 7, 1, "", "SearchSpaceMatchWarning"], [87, 7, 1, "", "UnidentifiedSubclassError"], [88, 7, 1, "", "UnmatchedAttributeError"], [89, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.insights": [[91, 0, 0, "-", "shap"]], "baybe.insights.shap": [[92, 8, 1, "", "EXPLAINERS"], [93, 8, 1, "", "NON_SHAP_EXPLAINERS"], [94, 1, 1, "", "SHAPInsight"], [95, 8, 1, "", "SHAP_EXPLAINERS"], [96, 8, 1, "", "SHAP_PLOTS"], [97, 5, 1, "", "is_shap_explainer"], [98, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[94, 2, 1, "", "__init__"], [94, 3, 1, "", "background_data"], [94, 2, 1, "", "explain"], [94, 3, 1, "", "explainer"], [94, 2, 1, "", "from_campaign"], [94, 2, 1, "", "from_recommender"], [94, 2, 1, "", "from_surrogate"], [94, 2, 1, "", "plot"], [94, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[94, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[94, 4, 1, "", "campaign"], [94, 4, 1, "", "explainer_cls"], [94, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[94, 4, 1, "", "explainer_cls"], [94, 4, 1, "", "measurements"], [94, 4, 1, "", "objective"], [94, 4, 1, "", "recommender"], [94, 4, 1, "", "searchspace"], [94, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[94, 4, 1, "", "**kwargs"], [94, 4, 1, "", "data"], [94, 4, 1, "", "explanation_index"], [94, 4, 1, "", "plot_type"], [94, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[98, 4, 1, "", "data"], [98, 4, 1, "", "explainer_cls"], [98, 4, 1, "", "surrogate"], [98, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[100, 0, 0, "-", "base"], [104, 0, 0, "-", "basic"], [113, 0, 0, "-", "composite"]], "baybe.kernels.base": [[101, 1, 1, "", "BasicKernel"], [102, 1, 1, "", "CompositeKernel"], [103, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "from_dict"], [101, 2, 1, "", "from_json"], [101, 2, 1, "", "to_dict"], [101, 2, 1, "", "to_factory"], [101, 2, 1, "", "to_gpytorch"], [101, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[101, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[101, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "from_dict"], [102, 2, 1, "", "from_json"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "to_factory"], [102, 2, 1, "", "to_gpytorch"], [102, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[102, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[102, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "from_dict"], [103, 2, 1, "", "from_json"], [103, 2, 1, "", "to_dict"], [103, 2, 1, "", "to_factory"], [103, 2, 1, "", "to_gpytorch"], [103, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[103, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[103, 4, 1, "", "string"]], "baybe.kernels.basic": [[105, 1, 1, "", "LinearKernel"], [106, 1, 1, "", "MaternKernel"], [107, 1, 1, "", "PeriodicKernel"], [108, 1, 1, "", "PiecewisePolynomialKernel"], [109, 1, 1, "", "PolynomialKernel"], [110, 1, 1, "", "RBFKernel"], [111, 1, 1, "", "RFFKernel"], [112, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"], [105, 3, 1, "", "variance_initial_value"], [105, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 3, 1, "", "lengthscale_initial_value"], [106, 3, 1, "", "lengthscale_prior"], [106, 3, 1, "", "nu"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[106, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 3, 1, "", "lengthscale_initial_value"], [107, 3, 1, "", "lengthscale_prior"], [107, 3, 1, "", "period_length_initial_value"], [107, 3, 1, "", "period_length_prior"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[107, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 3, 1, "", "lengthscale_initial_value"], [108, 3, 1, "", "lengthscale_prior"], [108, 3, 1, "", "q"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 3, 1, "", "offset_initial_value"], [109, 3, 1, "", "offset_prior"], [109, 3, 1, "", "power"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 3, 1, "", "lengthscale_initial_value"], [110, 3, 1, "", "lengthscale_prior"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_factory"], [110, 2, 1, "", "to_gpytorch"], [110, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[110, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 3, 1, "", "lengthscale_initial_value"], [111, 3, 1, "", "lengthscale_prior"], [111, 3, 1, "", "num_samples"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[111, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "lengthscale_initial_value"], [112, 3, 1, "", "lengthscale_prior"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[112, 4, 1, "", "string"]], "baybe.kernels.composite": [[114, 1, 1, "", "AdditiveKernel"], [115, 1, 1, "", "ProductKernel"], [116, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[114, 2, 1, "", "__init__"], [114, 3, 1, "", "base_kernels"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_factory"], [114, 2, 1, "", "to_gpytorch"], [114, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[114, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[115, 2, 1, "", "__init__"], [115, 3, 1, "", "base_kernels"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_factory"], [115, 2, 1, "", "to_gpytorch"], [115, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[115, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[116, 2, 1, "", "__init__"], [116, 3, 1, "", "base_kernel"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 3, 1, "", "outputscale_initial_value"], [116, 3, 1, "", "outputscale_prior"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_factory"], [116, 2, 1, "", "to_gpytorch"], [116, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[116, 4, 1, "", "string"]], "baybe.objective": [[118, 5, 1, "", "Objective"]], "baybe.objectives": [[120, 0, 0, "-", "base"], [123, 0, 0, "-", "deprecation"], [125, 0, 0, "-", "desirability"], [128, 0, 0, "-", "enum"], [130, 0, 0, "-", "pareto"], [132, 0, 0, "-", "single"], [134, 0, 0, "-", "validation"]], "baybe.objectives.base": [[121, 1, 1, "", "Objective"], [122, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "from_dict"], [121, 2, 1, "", "from_json"], [121, 3, 1, "", "is_multi_output"], [121, 6, 1, "", "n_outputs"], [121, 6, 1, "", "targets"], [121, 2, 1, "", "to_dict"], [121, 2, 1, "", "to_json"], [121, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[121, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[121, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[121, 4, 1, "", "allow_extra"], [121, 4, 1, "", "allow_missing"], [121, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[124, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[126, 1, 1, "", "DesirabilityObjective"], [127, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "from_dict"], [126, 2, 1, "", "from_json"], [126, 3, 1, "", "is_multi_output"], [126, 6, 1, "", "n_outputs"], [126, 3, 1, "", "scalarizer"], [126, 6, 1, "", "targets"], [126, 2, 1, "", "to_dict"], [126, 2, 1, "", "to_json"], [126, 2, 1, "", "transform"], [126, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[126, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[126, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[126, 4, 1, "", "allow_extra"], [126, 4, 1, "", "allow_missing"], [126, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[127, 4, 1, "", "scalarizer"], [127, 4, 1, "", "values"], [127, 4, 1, "", "weights"]], "baybe.objectives.enum": [[129, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[129, 3, 1, "", "GEOM_MEAN"], [129, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[131, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "from_dict"], [131, 2, 1, "", "from_json"], [131, 3, 1, "", "is_multi_output"], [131, 6, 1, "", "n_outputs"], [131, 6, 1, "", "targets"], [131, 2, 1, "", "to_dict"], [131, 2, 1, "", "to_json"], [131, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[131, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[131, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[131, 4, 1, "", "allow_extra"], [131, 4, 1, "", "allow_missing"], [131, 4, 1, "", "df"]], "baybe.objectives.single": [[133, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "from_dict"], [133, 2, 1, "", "from_json"], [133, 3, 1, "", "is_multi_output"], [133, 6, 1, "", "n_outputs"], [133, 6, 1, "", "targets"], [133, 2, 1, "", "to_dict"], [133, 2, 1, "", "to_json"], [133, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[133, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[133, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[133, 4, 1, "", "allow_extra"], [133, 4, 1, "", "allow_missing"], [133, 4, 1, "", "df"]], "baybe.objectives.validation": [[135, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[137, 0, 0, "-", "base"], [141, 0, 0, "-", "categorical"], [144, 0, 0, "-", "custom"], [146, 0, 0, "-", "enum"], [151, 0, 0, "-", "numerical"], [154, 0, 0, "-", "substance"], [157, 0, 0, "-", "utils"], [162, 0, 0, "-", "validation"]], "baybe.parameters.base": [[138, 1, 1, "", "ContinuousParameter"], [139, 1, 1, "", "DiscreteParameter"], [140, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[138, 2, 1, "", "__init__"], [138, 6, 1, "", "comp_rep_columns"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 6, 1, "", "is_continuous"], [138, 6, 1, "", "is_discrete"], [138, 2, 1, "", "is_in_range"], [138, 3, 1, "", "is_numerical"], [138, 3, 1, "", "name"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_json"], [138, 2, 1, "", "to_searchspace"], [138, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[138, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[138, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[138, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[139, 2, 1, "", "__init__"], [139, 6, 1, "", "active_values"], [139, 6, 1, "", "comp_df"], [139, 6, 1, "", "comp_rep_columns"], [139, 3, 1, "", "encoding"], [139, 2, 1, "", "from_dict"], [139, 2, 1, "", "from_json"], [139, 6, 1, "", "is_continuous"], [139, 6, 1, "", "is_discrete"], [139, 2, 1, "", "is_in_range"], [139, 3, 1, "", "is_numerical"], [139, 3, 1, "", "name"], [139, 2, 1, "", "summary"], [139, 2, 1, "", "to_dict"], [139, 2, 1, "", "to_json"], [139, 2, 1, "", "to_searchspace"], [139, 2, 1, "", "to_subspace"], [139, 2, 1, "", "transform"], [139, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[139, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[139, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[139, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[139, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[140, 2, 1, "", "__init__"], [140, 6, 1, "", "comp_rep_columns"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 6, 1, "", "is_continuous"], [140, 6, 1, "", "is_discrete"], [140, 2, 1, "", "is_in_range"], [140, 3, 1, "", "is_numerical"], [140, 3, 1, "", "name"], [140, 2, 1, "", "summary"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_json"], [140, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[140, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[140, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[140, 4, 1, "", "item"]], "baybe.parameters.categorical": [[142, 1, 1, "", "CategoricalParameter"], [143, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "active_values"], [142, 6, 1, "", "comp_df"], [142, 6, 1, "", "comp_rep_columns"], [142, 3, 1, "", "encoding"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 2, 1, "", "to_subspace"], [142, 2, 1, "", "transform"], [142, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[142, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[142, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[143, 2, 1, "", "__init__"], [143, 6, 1, "", "active_values"], [143, 6, 1, "", "comp_df"], [143, 6, 1, "", "comp_rep_columns"], [143, 3, 1, "", "encoding"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_json"], [143, 6, 1, "", "is_continuous"], [143, 6, 1, "", "is_discrete"], [143, 2, 1, "", "is_in_range"], [143, 3, 1, "", "is_numerical"], [143, 3, 1, "", "name"], [143, 2, 1, "", "summary"], [143, 2, 1, "", "to_dict"], [143, 2, 1, "", "to_json"], [143, 2, 1, "", "to_searchspace"], [143, 2, 1, "", "to_subspace"], [143, 2, 1, "", "transform"], [143, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[143, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[143, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[143, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[143, 4, 1, "", "series"]], "baybe.parameters.custom": [[145, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[145, 2, 1, "", "__init__"], [145, 6, 1, "", "active_values"], [145, 6, 1, "", "comp_df"], [145, 6, 1, "", "comp_rep_columns"], [145, 3, 1, "", "data"], [145, 3, 1, "", "decorrelate"], [145, 3, 1, "", "encoding"], [145, 2, 1, "", "from_dict"], [145, 2, 1, "", "from_json"], [145, 6, 1, "", "is_continuous"], [145, 6, 1, "", "is_discrete"], [145, 2, 1, "", "is_in_range"], [145, 3, 1, "", "is_numerical"], [145, 3, 1, "", "name"], [145, 2, 1, "", "summary"], [145, 2, 1, "", "to_dict"], [145, 2, 1, "", "to_json"], [145, 2, 1, "", "to_searchspace"], [145, 2, 1, "", "to_subspace"], [145, 2, 1, "", "transform"], [145, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[145, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[145, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[145, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[145, 4, 1, "", "series"]], "baybe.parameters.enum": [[147, 1, 1, "", "CategoricalEncoding"], [148, 1, 1, "", "CustomEncoding"], [149, 1, 1, "", "ParameterEncoding"], [150, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[147, 3, 1, "", "INT"], [147, 3, 1, "", "OHE"], [147, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[148, 3, 1, "", "CUSTOM"], [148, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[150, 3, 1, "", "ATOMPAIR"], [150, 3, 1, "", "AUTOCORR"], [150, 3, 1, "", "AVALON"], [150, 3, 1, "", "BCUT2D"], [150, 3, 1, "", "E3FP"], [150, 3, 1, "", "ECFP"], [150, 3, 1, "", "ELECTROSHAPE"], [150, 3, 1, "", "ERG"], [150, 3, 1, "", "ESTATE"], [150, 3, 1, "", "FUNCTIONALGROUPS"], [150, 3, 1, "", "GETAWAY"], [150, 3, 1, "", "GHOSECRIPPEN"], [150, 3, 1, "", "KLEKOTAROTH"], [150, 3, 1, "", "LAGGNER"], [150, 3, 1, "", "LAYERED"], [150, 3, 1, "", "LINGO"], [150, 3, 1, "", "MACCS"], [150, 3, 1, "", "MAP"], [150, 3, 1, "", "MHFP"], [150, 3, 1, "", "MORDRED"], [150, 3, 1, "", "MORGAN_FP"], [150, 3, 1, "", "MORSE"], [150, 3, 1, "", "MQNS"], [150, 3, 1, "", "PATTERN"], [150, 3, 1, "", "PHARMACOPHORE"], [150, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [150, 3, 1, "", "PUBCHEM"], [150, 3, 1, "", "RDF"], [150, 3, 1, "", "RDKIT"], [150, 3, 1, "", "RDKIT2DDESCRIPTORS"], [150, 3, 1, "", "RDKITFINGERPRINT"], [150, 3, 1, "", "SECFP"], [150, 3, 1, "", "TOPOLOGICALTORSION"], [150, 3, 1, "", "USR"], [150, 3, 1, "", "USRCAT"], [150, 3, 1, "", "VSA"], [150, 3, 1, "", "WHIM"], [150, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[152, 1, 1, "", "NumericalContinuousParameter"], [153, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[152, 2, 1, "", "__init__"], [152, 3, 1, "", "bounds"], [152, 6, 1, "", "comp_rep_columns"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 6, 1, "", "is_continuous"], [152, 6, 1, "", "is_discrete"], [152, 2, 1, "", "is_in_range"], [152, 3, 1, "", "is_numerical"], [152, 3, 1, "", "name"], [152, 2, 1, "", "summary"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_json"], [152, 2, 1, "", "to_searchspace"], [152, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[152, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[152, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[152, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[153, 2, 1, "", "__init__"], [153, 6, 1, "", "active_values"], [153, 6, 1, "", "comp_df"], [153, 6, 1, "", "comp_rep_columns"], [153, 3, 1, "", "encoding"], [153, 2, 1, "", "from_dict"], [153, 2, 1, "", "from_json"], [153, 6, 1, "", "is_continuous"], [153, 6, 1, "", "is_discrete"], [153, 2, 1, "", "is_in_range"], [153, 3, 1, "", "is_numerical"], [153, 3, 1, "", "name"], [153, 2, 1, "", "summary"], [153, 2, 1, "", "to_dict"], [153, 2, 1, "", "to_json"], [153, 2, 1, "", "to_searchspace"], [153, 2, 1, "", "to_subspace"], [153, 3, 1, "", "tolerance"], [153, 2, 1, "", "transform"], [153, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[153, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[153, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[153, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[153, 4, 1, "", "series"]], "baybe.parameters.substance": [[155, 3, 1, "", "Smiles"], [156, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[156, 2, 1, "", "__init__"], [156, 6, 1, "", "active_values"], [156, 6, 1, "", "comp_df"], [156, 6, 1, "", "comp_rep_columns"], [156, 3, 1, "", "data"], [156, 3, 1, "", "decorrelate"], [156, 3, 1, "", "encoding"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 6, 1, "", "is_continuous"], [156, 6, 1, "", "is_discrete"], [156, 2, 1, "", "is_in_range"], [156, 3, 1, "", "is_numerical"], [156, 3, 1, "", "kwargs_conformer"], [156, 3, 1, "", "kwargs_fingerprint"], [156, 3, 1, "", "name"], [156, 2, 1, "", "summary"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_json"], [156, 2, 1, "", "to_searchspace"], [156, 2, 1, "", "to_subspace"], [156, 2, 1, "", "transform"], [156, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[156, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[156, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[156, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[156, 4, 1, "", "series"]], "baybe.parameters.utils": [[158, 5, 1, "", "activate_parameter"], [159, 5, 1, "", "get_parameters_from_dataframe"], [160, 5, 1, "", "is_inactive"], [161, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[158, 4, 1, "", "parameter"], [158, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[159, 4, 1, "", "df"], [159, 4, 1, "", "factory"], [159, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[160, 4, 1, "", "lower_threshold"], [160, 4, 1, "", "upper_threshold"], [160, 4, 1, "", "x"]], "baybe.parameters.validation": [[163, 5, 1, "", "validate_decorrelation"], [164, 5, 1, "", "validate_is_finite"], [165, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[167, 0, 0, "-", "base"], [169, 0, 0, "-", "basic"]], "baybe.priors.base": [[168, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "from_dict"], [168, 2, 1, "", "from_json"], [168, 2, 1, "", "to_dict"], [168, 2, 1, "", "to_gpytorch"], [168, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[168, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[168, 4, 1, "", "string"]], "baybe.priors.basic": [[170, 1, 1, "", "BetaPrior"], [171, 1, 1, "", "GammaPrior"], [172, 1, 1, "", "HalfCauchyPrior"], [173, 1, 1, "", "HalfNormalPrior"], [174, 1, 1, "", "LogNormalPrior"], [175, 1, 1, "", "NormalPrior"], [176, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[170, 2, 1, "", "__init__"], [170, 3, 1, "", "alpha"], [170, 3, 1, "", "beta"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_gpytorch"], [170, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[170, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[171, 2, 1, "", "__init__"], [171, 3, 1, "", "concentration"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 3, 1, "", "rate"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_gpytorch"], [171, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[171, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 3, 1, "", "scale"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_gpytorch"], [172, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[172, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 3, 1, "", "scale"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[173, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "loc"], [174, 3, 1, "", "scale"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[174, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "from_json"], [175, 3, 1, "", "loc"], [175, 3, 1, "", "scale"], [175, 2, 1, "", "to_dict"], [175, 2, 1, "", "to_gpytorch"], [175, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[175, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[175, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[176, 2, 1, "", "__init__"], [176, 3, 1, "", "a"], [176, 3, 1, "", "b"], [176, 2, 1, "", "from_dict"], [176, 2, 1, "", "from_json"], [176, 3, 1, "", "sigma"], [176, 2, 1, "", "to_dict"], [176, 2, 1, "", "to_gpytorch"], [176, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[176, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[176, 4, 1, "", "string"]], "baybe.recommenders": [[178, 0, 0, "-", "base"], [180, 0, 0, "-", "meta"], [188, 0, 0, "-", "naive"], [190, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[179, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[179, 2, 1, "", "__init__"], [179, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[179, 4, 1, "", "batch_size"], [179, 4, 1, "", "measurements"], [179, 4, 1, "", "objective"], [179, 4, 1, "", "pending_experiments"], [179, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[181, 0, 0, "-", "base"], [183, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[182, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "from_dict"], [182, 2, 1, "", "from_json"], [182, 2, 1, "", "get_current_recommender"], [182, 2, 1, "", "get_next_recommender"], [182, 2, 1, "", "get_non_meta_recommender"], [182, 6, 1, "", "is_stateful"], [182, 2, 1, "", "recommend"], [182, 2, 1, "", "select_recommender"], [182, 2, 1, "", "to_dict"], [182, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[182, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[182, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[184, 1, 1, "", "BaseSequentialMetaRecommender"], [185, 1, 1, "", "SequentialMetaRecommender"], [186, 1, 1, "", "StreamingSequentialMetaRecommender"], [187, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "get_current_recommender"], [184, 2, 1, "", "get_next_recommender"], [184, 2, 1, "", "get_non_meta_recommender"], [184, 6, 1, "", "is_stateful"], [184, 2, 1, "", "recommend"], [184, 2, 1, "", "select_recommender"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[184, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[184, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "get_current_recommender"], [185, 2, 1, "", "get_next_recommender"], [185, 2, 1, "", "get_non_meta_recommender"], [185, 6, 1, "", "is_stateful"], [185, 3, 1, "", "mode"], [185, 2, 1, "", "recommend"], [185, 3, 1, "", "recommenders"], [185, 2, 1, "", "select_recommender"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[185, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[185, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "from_dict"], [186, 2, 1, "", "from_json"], [186, 2, 1, "", "get_current_recommender"], [186, 2, 1, "", "get_next_recommender"], [186, 2, 1, "", "get_non_meta_recommender"], [186, 6, 1, "", "is_stateful"], [186, 2, 1, "", "recommend"], [186, 3, 1, "", "recommenders"], [186, 2, 1, "", "select_recommender"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[186, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[186, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "from_dict"], [187, 2, 1, "", "from_json"], [187, 2, 1, "", "get_current_recommender"], [187, 2, 1, "", "get_next_recommender"], [187, 2, 1, "", "get_non_meta_recommender"], [187, 3, 1, "", "initial_recommender"], [187, 6, 1, "", "is_stateful"], [187, 2, 1, "", "recommend"], [187, 3, 1, "", "recommender"], [187, 3, 1, "", "remain_switched"], [187, 2, 1, "", "select_recommender"], [187, 3, 1, "", "switch_after"], [187, 2, 1, "", "to_dict"], [187, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[187, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[187, 4, 1, "", "string"]], "baybe.recommenders.naive": [[189, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[189, 2, 1, "", "__init__"], [189, 6, 1, "", "allow_recommending_already_measured"], [189, 6, 1, "", "allow_recommending_pending_experiments"], [189, 6, 1, "", "allow_repeated_recommendations"], [189, 3, 1, "", "compatibility"], [189, 3, 1, "", "cont_recommender"], [189, 3, 1, "", "disc_recommender"], [189, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[189, 4, 1, "", "batch_size"], [189, 4, 1, "", "measurements"], [189, 4, 1, "", "objective"], [189, 4, 1, "", "pending_experiments"], [189, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[191, 0, 0, "-", "base"], [193, 0, 0, "-", "bayesian"], [200, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[192, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[192, 2, 1, "", "__init__"], [192, 6, 1, "", "allow_recommending_already_measured"], [192, 6, 1, "", "allow_recommending_pending_experiments"], [192, 6, 1, "", "allow_repeated_recommendations"], [192, 3, 1, "", "compatibility"], [192, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[192, 4, 1, "", "batch_size"], [192, 4, 1, "", "measurements"], [192, 4, 1, "", "objective"], [192, 4, 1, "", "pending_experiments"], [192, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[194, 0, 0, "-", "base"], [196, 0, 0, "-", "botorch"], [198, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[195, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[195, 2, 1, "", "__init__"], [195, 3, 1, "", "acquisition_function"], [195, 3, 1, "", "acquisition_function_cls"], [195, 6, 1, "", "allow_recommending_already_measured"], [195, 6, 1, "", "allow_recommending_pending_experiments"], [195, 6, 1, "", "allow_repeated_recommendations"], [195, 3, 1, "", "compatibility"], [195, 2, 1, "", "get_surrogate"], [195, 2, 1, "", "recommend"], [195, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[195, 4, 1, "", "batch_size"], [195, 4, 1, "", "measurements"], [195, 4, 1, "", "objective"], [195, 4, 1, "", "pending_experiments"], [195, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[197, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[197, 2, 1, "", "__init__"], [197, 3, 1, "", "acquisition_function"], [197, 3, 1, "", "acquisition_function_cls"], [197, 6, 1, "", "allow_recommending_already_measured"], [197, 6, 1, "", "allow_recommending_pending_experiments"], [197, 6, 1, "", "allow_repeated_recommendations"], [197, 3, 1, "", "compatibility"], [197, 2, 1, "", "get_surrogate"], [197, 3, 1, "", "hybrid_sampler"], [197, 3, 1, "", "max_n_subspaces"], [197, 3, 1, "", "n_raw_samples"], [197, 3, 1, "", "n_restarts"], [197, 2, 1, "", "recommend"], [197, 3, 1, "", "sampling_percentage"], [197, 3, 1, "", "sequential_continuous"], [197, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[197, 4, 1, "", "batch_size"], [197, 4, 1, "", "measurements"], [197, 4, 1, "", "objective"], [197, 4, 1, "", "pending_experiments"], [197, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[199, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[201, 0, 0, "-", "base"], [203, 0, 0, "-", "clustering"], [208, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[202, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[202, 2, 1, "", "__init__"], [202, 6, 1, "", "allow_recommending_already_measured"], [202, 6, 1, "", "allow_recommending_pending_experiments"], [202, 6, 1, "", "allow_repeated_recommendations"], [202, 3, 1, "", "compatibility"], [202, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[202, 4, 1, "", "batch_size"], [202, 4, 1, "", "measurements"], [202, 4, 1, "", "objective"], [202, 4, 1, "", "pending_experiments"], [202, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[204, 1, 1, "", "GaussianMixtureClusteringRecommender"], [205, 1, 1, "", "KMeansClusteringRecommender"], [206, 1, 1, "", "PAMClusteringRecommender"], [207, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[204, 2, 1, "", "__init__"], [204, 6, 1, "", "allow_recommending_already_measured"], [204, 6, 1, "", "allow_recommending_pending_experiments"], [204, 6, 1, "", "allow_repeated_recommendations"], [204, 3, 1, "", "compatibility"], [204, 3, 1, "", "model_cluster_num_parameter_name"], [204, 3, 1, "", "model_params"], [204, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[204, 4, 1, "", "batch_size"], [204, 4, 1, "", "measurements"], [204, 4, 1, "", "objective"], [204, 4, 1, "", "pending_experiments"], [204, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[205, 2, 1, "", "__init__"], [205, 6, 1, "", "allow_recommending_already_measured"], [205, 6, 1, "", "allow_recommending_pending_experiments"], [205, 6, 1, "", "allow_repeated_recommendations"], [205, 3, 1, "", "compatibility"], [205, 3, 1, "", "model_cluster_num_parameter_name"], [205, 3, 1, "", "model_params"], [205, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[205, 4, 1, "", "batch_size"], [205, 4, 1, "", "measurements"], [205, 4, 1, "", "objective"], [205, 4, 1, "", "pending_experiments"], [205, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[206, 2, 1, "", "__init__"], [206, 6, 1, "", "allow_recommending_already_measured"], [206, 6, 1, "", "allow_recommending_pending_experiments"], [206, 6, 1, "", "allow_repeated_recommendations"], [206, 3, 1, "", "compatibility"], [206, 3, 1, "", "model_cluster_num_parameter_name"], [206, 3, 1, "", "model_params"], [206, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[206, 4, 1, "", "batch_size"], [206, 4, 1, "", "measurements"], [206, 4, 1, "", "objective"], [206, 4, 1, "", "pending_experiments"], [206, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[207, 2, 1, "", "__init__"], [207, 6, 1, "", "allow_recommending_already_measured"], [207, 6, 1, "", "allow_recommending_pending_experiments"], [207, 6, 1, "", "allow_repeated_recommendations"], [207, 3, 1, "", "compatibility"], [207, 3, 1, "", "model_cluster_num_parameter_name"], [207, 3, 1, "", "model_params"], [207, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[207, 4, 1, "", "batch_size"], [207, 4, 1, "", "measurements"], [207, 4, 1, "", "objective"], [207, 4, 1, "", "pending_experiments"], [207, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[209, 1, 1, "", "FPSRecommender"], [210, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[209, 2, 1, "", "__init__"], [209, 6, 1, "", "allow_recommending_already_measured"], [209, 6, 1, "", "allow_recommending_pending_experiments"], [209, 6, 1, "", "allow_repeated_recommendations"], [209, 3, 1, "", "compatibility"], [209, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[209, 4, 1, "", "batch_size"], [209, 4, 1, "", "measurements"], [209, 4, 1, "", "objective"], [209, 4, 1, "", "pending_experiments"], [209, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[210, 2, 1, "", "__init__"], [210, 6, 1, "", "allow_recommending_already_measured"], [210, 6, 1, "", "allow_recommending_pending_experiments"], [210, 6, 1, "", "allow_repeated_recommendations"], [210, 3, 1, "", "compatibility"], [210, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[210, 4, 1, "", "batch_size"], [210, 4, 1, "", "measurements"], [210, 4, 1, "", "objective"], [210, 4, 1, "", "pending_experiments"], [210, 4, 1, "", "searchspace"]], "baybe.searchspace": [[212, 0, 0, "-", "continuous"], [214, 0, 0, "-", "core"], [219, 0, 0, "-", "discrete"], [225, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[213, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[213, 2, 1, "", "__init__"], [213, 6, 1, "", "comp_rep_bounds"], [213, 6, 1, "", "comp_rep_columns"], [213, 6, 1, "", "constraints_cardinality"], [213, 3, 1, "", "constraints_lin_eq"], [213, 3, 1, "", "constraints_lin_ineq"], [213, 3, 1, "", "constraints_nonlin"], [213, 2, 1, "", "empty"], [213, 2, 1, "", "from_bounds"], [213, 2, 1, "", "from_dataframe"], [213, 2, 1, "", "from_dict"], [213, 2, 1, "", "from_json"], [213, 2, 1, "", "from_parameter"], [213, 2, 1, "", "from_product"], [213, 6, 1, "", "full_factorial"], [213, 2, 1, "", "get_parameters_by_name"], [213, 2, 1, "", "inactive_parameter_combinations"], [213, 6, 1, "", "is_empty"], [213, 6, 1, "", "n_inactive_parameter_combinations"], [213, 6, 1, "", "parameter_names"], [213, 6, 1, "", "parameter_names_in_cardinality_constraints"], [213, 3, 1, "", "parameters"], [213, 2, 1, "", "sample_from_full_factorial"], [213, 2, 1, "", "sample_uniform"], [213, 2, 1, "", "samples_full_factorial"], [213, 2, 1, "", "samples_random"], [213, 6, 1, "", "scaling_bounds"], [213, 2, 1, "", "to_dict"], [213, 2, 1, "", "to_json"], [213, 2, 1, "", "to_searchspace"], [213, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[213, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[213, 4, 1, "", "df"], [213, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[213, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[213, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[213, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[213, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[213, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[213, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[215, 1, 1, "", "SearchSpace"], [216, 1, 1, "", "SearchSpaceType"], [217, 5, 1, "", "to_searchspace"], [218, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[215, 2, 1, "", "__init__"], [215, 6, 1, "", "comp_rep_bounds"], [215, 6, 1, "", "comp_rep_columns"], [215, 6, 1, "", "constraints"], [215, 6, 1, "", "constraints_augmentable"], [215, 3, 1, "", "continuous"], [215, 3, 1, "", "discrete"], [215, 2, 1, "", "estimate_product_space_size"], [215, 2, 1, "", "from_dataframe"], [215, 2, 1, "", "from_dict"], [215, 2, 1, "", "from_json"], [215, 2, 1, "", "from_parameter"], [215, 2, 1, "", "from_product"], [215, 2, 1, "", "get_comp_rep_parameter_indices"], [215, 2, 1, "", "get_parameters_by_name"], [215, 6, 1, "", "n_tasks"], [215, 6, 1, "", "parameter_names"], [215, 6, 1, "", "parameters"], [215, 6, 1, "", "scaling_bounds"], [215, 6, 1, "", "task_idx"], [215, 2, 1, "", "to_dict"], [215, 2, 1, "", "to_json"], [215, 2, 1, "", "transform"], [215, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[215, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[215, 4, 1, "", "df"], [215, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[215, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[215, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[215, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[215, 4, 1, "", "constraints"], [215, 4, 1, "", "empty_encoding"], [215, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[215, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[215, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[215, 4, 1, "", "allow_extra"], [215, 4, 1, "", "allow_missing"], [215, 4, 1, "", "data"], [215, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[216, 3, 1, "", "CONTINUOUS"], [216, 3, 1, "", "DISCRETE"], [216, 3, 1, "", "EITHER"], [216, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[220, 1, 1, "", "MemorySize"], [221, 1, 1, "", "SubspaceDiscrete"], [222, 5, 1, "", "parameter_cartesian_prod_pandas"], [223, 5, 1, "", "parameter_cartesian_prod_polars"], [224, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[220, 2, 1, "", "__init__"], [220, 3, 1, "", "comp_rep_bytes"], [220, 6, 1, "", "comp_rep_human_readable"], [220, 3, 1, "", "comp_rep_shape"], [220, 3, 1, "", "exp_rep_bytes"], [220, 6, 1, "", "exp_rep_human_readable"], [220, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[221, 2, 1, "", "__init__"], [221, 3, 1, "", "comp_rep"], [221, 6, 1, "", "comp_rep_bounds"], [221, 6, 1, "", "comp_rep_columns"], [221, 3, 1, "", "constraints"], [221, 2, 1, "", "empty"], [221, 3, 1, "", "empty_encoding"], [221, 2, 1, "", "estimate_product_space_size"], [221, 3, 1, "", "exp_rep"], [221, 2, 1, "", "from_dataframe"], [221, 2, 1, "", "from_dict"], [221, 2, 1, "", "from_json"], [221, 2, 1, "", "from_parameter"], [221, 2, 1, "", "from_product"], [221, 2, 1, "", "from_simplex"], [221, 2, 1, "", "get_candidates"], [221, 2, 1, "", "get_parameters_by_name"], [221, 6, 1, "", "is_empty"], [221, 6, 1, "", "metadata"], [221, 6, 1, "", "parameter_names"], [221, 3, 1, "", "parameters"], [221, 6, 1, "", "scaling_bounds"], [221, 2, 1, "", "to_dict"], [221, 2, 1, "", "to_json"], [221, 2, 1, "", "to_searchspace"], [221, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[221, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[221, 4, 1, "", "df"], [221, 4, 1, "", "empty_encoding"], [221, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[221, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[221, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[221, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[221, 4, 1, "", "boundary_only"], [221, 4, 1, "", "constraints"], [221, 4, 1, "", "max_nonzero"], [221, 4, 1, "", "max_sum"], [221, 4, 1, "", "min_nonzero"], [221, 4, 1, "", "product_parameters"], [221, 4, 1, "", "simplex_parameters"], [221, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[221, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[222, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[223, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[226, 5, 1, "", "get_transform_parameters"], [227, 5, 1, "", "validate_parameter_names"], [228, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[230, 0, 0, "-", "core"], [237, 0, 0, "-", "mixin"], [239, 0, 0, "-", "utils"]], "baybe.serialization.core": [[231, 5, 1, "", "block_deserialization_hook"], [232, 5, 1, "", "block_serialization_hook"], [233, 8, 1, "", "converter"], [234, 5, 1, "", "get_base_structure_hook"], [235, 5, 1, "", "select_constructor_hook"], [236, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[234, 4, 1, "", "base"], [234, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[236, 4, 1, "", "base"], [236, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[238, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[238, 2, 1, "", "from_dict"], [238, 2, 1, "", "from_json"], [238, 2, 1, "", "to_dict"], [238, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[238, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[238, 4, 1, "", "string"]], "baybe.serialization.utils": [[240, 5, 1, "", "deserialize_dataframe"], [241, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[243, 0, 0, "-", "core"], [245, 0, 0, "-", "lookup"], [247, 0, 0, "-", "scenarios"], [249, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[244, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[244, 4, 1, "", "batch_size"], [244, 4, 1, "", "campaign"], [244, 4, 1, "", "impute_mode"], [244, 4, 1, "", "initial_data"], [244, 4, 1, "", "lookup"], [244, 4, 1, "", "n_doe_iterations"], [244, 4, 1, "", "noise_percent"], [244, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[246, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[246, 4, 1, "", "impute_mode"], [246, 4, 1, "", "lookup"], [246, 4, 1, "", "queries"], [246, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[248, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[248, 4, 1, "", "batch_size"], [248, 4, 1, "", "groupby"], [248, 4, 1, "", "impute_mode"], [248, 4, 1, "", "initial_data"], [248, 4, 1, "", "lookup"], [248, 4, 1, "", "n_doe_iterations"], [248, 4, 1, "", "n_mc_iterations"], [248, 4, 1, "", "noise_percent"], [248, 4, 1, "", "random_seed"], [248, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[250, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[250, 4, 1, "", "batch_size"], [250, 4, 1, "", "campaign"], [250, 4, 1, "", "groupby"], [250, 4, 1, "", "lookup"], [250, 4, 1, "", "n_doe_iterations"], [250, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[252, 0, 0, "-", "bandit"], [254, 0, 0, "-", "base"], [259, 0, 0, "-", "composite"], [261, 0, 0, "-", "custom"], [264, 0, 0, "-", "gaussian_process"], [279, 0, 0, "-", "linear"], [281, 0, 0, "-", "naive"], [283, 0, 0, "-", "ngboost"], [285, 0, 0, "-", "random_forest"], [287, 0, 0, "-", "utils"], [291, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[253, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[253, 2, 1, "", "__init__"], [253, 2, 1, "", "fit"], [253, 2, 1, "", "from_dict"], [253, 2, 1, "", "from_json"], [253, 2, 1, "", "posterior"], [253, 2, 1, "", "posterior_means"], [253, 2, 1, "", "posterior_modes"], [253, 2, 1, "", "posterior_stats"], [253, 3, 1, "", "prior"], [253, 2, 1, "", "replicate"], [253, 3, 1, "", "supports_multi_output"], [253, 3, 1, "", "supports_transfer_learning"], [253, 2, 1, "", "to_botorch"], [253, 2, 1, "", "to_dict"], [253, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[253, 4, 1, "", "measurements"], [253, 4, 1, "", "objective"], [253, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[253, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[253, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[253, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[253, 4, 1, "", "candidates"], [253, 4, 1, "", "stats"]], "baybe.surrogates.base": [[255, 1, 1, "", "IndependentGaussianSurrogate"], [256, 8, 1, "", "PosteriorStatistic"], [257, 1, 1, "", "Surrogate"], [258, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[255, 2, 1, "", "__init__"], [255, 2, 1, "", "fit"], [255, 2, 1, "", "from_dict"], [255, 2, 1, "", "from_json"], [255, 2, 1, "", "posterior"], [255, 2, 1, "", "posterior_stats"], [255, 2, 1, "", "replicate"], [255, 3, 1, "", "supports_multi_output"], [255, 3, 1, "", "supports_transfer_learning"], [255, 2, 1, "", "to_botorch"], [255, 2, 1, "", "to_dict"], [255, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[255, 4, 1, "", "measurements"], [255, 4, 1, "", "objective"], [255, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[255, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[255, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[255, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[255, 4, 1, "", "candidates"], [255, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate": [[257, 2, 1, "", "__init__"], [257, 2, 1, "", "fit"], [257, 2, 1, "", "from_dict"], [257, 2, 1, "", "from_json"], [257, 2, 1, "", "posterior"], [257, 2, 1, "", "posterior_stats"], [257, 2, 1, "", "replicate"], [257, 3, 1, "", "supports_multi_output"], [257, 3, 1, "", "supports_transfer_learning"], [257, 2, 1, "", "to_botorch"], [257, 2, 1, "", "to_dict"], [257, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[257, 4, 1, "", "measurements"], [257, 4, 1, "", "objective"], [257, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[257, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[257, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[257, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[257, 4, 1, "", "candidates"], [257, 4, 1, "", "stats"]], "baybe.surrogates.base.SurrogateProtocol": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "fit"], [258, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[260, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "fit"], [260, 2, 1, "", "from_dict"], [260, 2, 1, "", "from_json"], [260, 2, 1, "", "from_replication"], [260, 2, 1, "", "posterior"], [260, 2, 1, "", "posterior_stats"], [260, 3, 1, "", "surrogates"], [260, 2, 1, "", "to_botorch"], [260, 2, 1, "", "to_dict"], [260, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[260, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[260, 4, 1, "", "string"]], "baybe.surrogates.custom": [[262, 1, 1, "", "CustomONNXSurrogate"], [263, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "default_model"], [262, 2, 1, "", "fit"], [262, 2, 1, "", "from_dict"], [262, 2, 1, "", "from_json"], [262, 3, 1, "", "onnx_input_name"], [262, 3, 1, "", "onnx_str"], [262, 2, 1, "", "posterior"], [262, 2, 1, "", "posterior_stats"], [262, 2, 1, "", "replicate"], [262, 3, 1, "", "supports_multi_output"], [262, 3, 1, "", "supports_transfer_learning"], [262, 2, 1, "", "to_botorch"], [262, 2, 1, "", "to_dict"], [262, 2, 1, "", "to_json"], [262, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[262, 4, 1, "", "measurements"], [262, 4, 1, "", "objective"], [262, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[262, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[262, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[262, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[262, 4, 1, "", "candidates"], [262, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[262, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[265, 0, 0, "-", "core"], [267, 0, 0, "-", "kernel_factory"], [271, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[266, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[266, 2, 1, "", "__init__"], [266, 2, 1, "", "fit"], [266, 2, 1, "", "from_dict"], [266, 2, 1, "", "from_json"], [266, 2, 1, "", "from_preset"], [266, 3, 1, "", "kernel_factory"], [266, 2, 1, "", "posterior"], [266, 2, 1, "", "posterior_stats"], [266, 2, 1, "", "replicate"], [266, 3, 1, "", "supports_multi_output"], [266, 3, 1, "", "supports_transfer_learning"], [266, 2, 1, "", "to_botorch"], [266, 2, 1, "", "to_dict"], [266, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[266, 4, 1, "", "measurements"], [266, 4, 1, "", "objective"], [266, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[266, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[266, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[266, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[266, 4, 1, "", "candidates"], [266, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.kernel_factory": [[268, 1, 1, "", "KernelFactory"], [269, 1, 1, "", "PlainKernelFactory"], [270, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[268, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[269, 2, 1, "", "__init__"], [269, 2, 1, "", "from_dict"], [269, 2, 1, "", "from_json"], [269, 3, 1, "", "kernel"], [269, 2, 1, "", "to_dict"], [269, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[269, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[269, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[272, 0, 0, "-", "core"], [275, 0, 0, "-", "default"], [277, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[273, 1, 1, "", "GaussianProcessPreset"], [274, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[273, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[276, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[276, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[278, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[278, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[280, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[280, 2, 1, "", "__init__"], [280, 2, 1, "", "fit"], [280, 2, 1, "", "from_dict"], [280, 2, 1, "", "from_json"], [280, 3, 1, "", "model_params"], [280, 2, 1, "", "posterior"], [280, 2, 1, "", "posterior_stats"], [280, 2, 1, "", "replicate"], [280, 3, 1, "", "supports_multi_output"], [280, 3, 1, "", "supports_transfer_learning"], [280, 2, 1, "", "to_botorch"], [280, 2, 1, "", "to_dict"], [280, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[280, 4, 1, "", "measurements"], [280, 4, 1, "", "objective"], [280, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[280, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[280, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[280, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[280, 4, 1, "", "candidates"], [280, 4, 1, "", "stats"]], "baybe.surrogates.naive": [[282, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[282, 2, 1, "", "__init__"], [282, 2, 1, "", "fit"], [282, 2, 1, "", "from_dict"], [282, 2, 1, "", "from_json"], [282, 2, 1, "", "posterior"], [282, 2, 1, "", "posterior_stats"], [282, 2, 1, "", "replicate"], [282, 3, 1, "", "supports_multi_output"], [282, 3, 1, "", "supports_transfer_learning"], [282, 2, 1, "", "to_botorch"], [282, 2, 1, "", "to_dict"], [282, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[282, 4, 1, "", "measurements"], [282, 4, 1, "", "objective"], [282, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[282, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[282, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[282, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[282, 4, 1, "", "candidates"], [282, 4, 1, "", "stats"]], "baybe.surrogates.ngboost": [[284, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[284, 2, 1, "", "__init__"], [284, 2, 1, "", "fit"], [284, 2, 1, "", "from_dict"], [284, 2, 1, "", "from_json"], [284, 3, 1, "", "model_params"], [284, 2, 1, "", "posterior"], [284, 2, 1, "", "posterior_stats"], [284, 2, 1, "", "replicate"], [284, 3, 1, "", "supports_multi_output"], [284, 3, 1, "", "supports_transfer_learning"], [284, 2, 1, "", "to_botorch"], [284, 2, 1, "", "to_dict"], [284, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[284, 4, 1, "", "measurements"], [284, 4, 1, "", "objective"], [284, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[284, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[284, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[284, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[284, 4, 1, "", "candidates"], [284, 4, 1, "", "stats"]], "baybe.surrogates.random_forest": [[286, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[286, 2, 1, "", "__init__"], [286, 2, 1, "", "fit"], [286, 2, 1, "", "from_dict"], [286, 2, 1, "", "from_json"], [286, 3, 1, "", "model_params"], [286, 2, 1, "", "posterior"], [286, 2, 1, "", "posterior_stats"], [286, 2, 1, "", "replicate"], [286, 3, 1, "", "supports_multi_output"], [286, 3, 1, "", "supports_transfer_learning"], [286, 2, 1, "", "to_botorch"], [286, 2, 1, "", "to_dict"], [286, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[286, 4, 1, "", "measurements"], [286, 4, 1, "", "objective"], [286, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[286, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[286, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[286, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[286, 4, 1, "", "candidates"], [286, 4, 1, "", "stats"]], "baybe.surrogates.utils": [[288, 5, 1, "", "batchify_ensemble_predictor"], [289, 5, 1, "", "batchify_mean_var_prediction"], [290, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[288, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[290, 4, 1, "", "cls"], [290, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[292, 5, 1, "", "get_model_params_validator"], [293, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[292, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[293, 4, 1, "", "model_cls"]], "baybe.targets": [[295, 0, 0, "-", "base"], [297, 0, 0, "-", "binary"], [300, 0, 0, "-", "enum"], [303, 0, 0, "-", "numerical"], [305, 0, 0, "-", "transforms"]], "baybe.targets.base": [[296, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[296, 2, 1, "", "__init__"], [296, 2, 1, "", "from_dict"], [296, 2, 1, "", "from_json"], [296, 3, 1, "", "name"], [296, 2, 1, "", "summary"], [296, 2, 1, "", "to_dict"], [296, 2, 1, "", "to_json"], [296, 2, 1, "", "to_objective"], [296, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[296, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[296, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[296, 4, 1, "", "series"]], "baybe.targets.binary": [[298, 1, 1, "", "BinaryTarget"], [299, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[298, 2, 1, "", "__init__"], [298, 3, 1, "", "failure_value"], [298, 2, 1, "", "from_dict"], [298, 2, 1, "", "from_json"], [298, 3, 1, "", "name"], [298, 3, 1, "", "success_value"], [298, 2, 1, "", "summary"], [298, 2, 1, "", "to_dict"], [298, 2, 1, "", "to_json"], [298, 2, 1, "", "to_objective"], [298, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[298, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[298, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[298, 4, 1, "", "series"]], "baybe.targets.enum": [[301, 1, 1, "", "TargetMode"], [302, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[301, 3, 1, "", "MATCH"], [301, 3, 1, "", "MAX"], [301, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[302, 3, 1, "", "BELL"], [302, 3, 1, "", "LINEAR"], [302, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[304, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[304, 2, 1, "", "__init__"], [304, 3, 1, "", "bounds"], [304, 2, 1, "", "from_dict"], [304, 2, 1, "", "from_json"], [304, 3, 1, "", "mode"], [304, 3, 1, "", "name"], [304, 2, 1, "", "summary"], [304, 2, 1, "", "to_dict"], [304, 2, 1, "", "to_json"], [304, 2, 1, "", "to_objective"], [304, 2, 1, "", "transform"], [304, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[304, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[304, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[304, 4, 1, "", "series"]], "baybe.targets.transforms": [[306, 5, 1, "", "bell_transform"], [307, 5, 1, "", "linear_transform"], [308, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[306, 4, 1, "", "arr"], [306, 4, 1, "", "lower"], [306, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[307, 4, 1, "", "arr"], [307, 4, 1, "", "descending"], [307, 4, 1, "", "lower"], [307, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[308, 4, 1, "", "arr"], [308, 4, 1, "", "lower"], [308, 4, 1, "", "upper"]], "baybe.telemetry": [[310, 5, 1, "", "get_user_details"], [311, 5, 1, "", "is_enabled"], [312, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [313, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[312, 4, 1, "", "cached_recommendation"], [312, 4, 1, "", "measurements"], [312, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[313, 4, 1, "", "instrument_name"], [313, 4, 1, "", "value"]], "baybe.utils": [[315, 0, 0, "-", "augmentation"], [318, 0, 0, "-", "basic"], [334, 0, 0, "-", "boolean"], [338, 0, 0, "-", "chemistry"], [343, 0, 0, "-", "conversion"], [347, 0, 0, "-", "dataframe"], [362, 0, 0, "-", "interval"], [367, 0, 0, "-", "memory"], [369, 0, 0, "-", "numerical"], [376, 0, 0, "-", "random"], [379, 0, 0, "-", "sampling_algorithms"], [383, 0, 0, "-", "scaling"], [385, 0, 0, "-", "torch"], [388, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[316, 5, 1, "", "df_apply_dependency_augmentation"], [317, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[316, 4, 1, "", "affected"], [316, 4, 1, "", "causing"], [316, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[317, 4, 1, "", "column_groups"], [317, 4, 1, "", "df"]], "baybe.utils.basic": [[319, 1, 1, "", "Dummy"], [320, 8, 1, "", "UNSPECIFIED"], [321, 1, 1, "", "UnspecifiedType"], [322, 1, 1, "", "classproperty"], [323, 5, 1, "", "convert_to_float"], [324, 5, 1, "", "find_subclass"], [325, 5, 1, "", "get_baseclasses"], [326, 5, 1, "", "get_subclasses"], [327, 5, 1, "", "group_duplicate_values"], [328, 5, 1, "", "hilberts_factory"], [329, 5, 1, "", "is_all_instance"], [330, 5, 1, "", "match_attributes"], [331, 5, 1, "", "refers_to"], [332, 5, 1, "", "register_hooks"], [333, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[319, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[322, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[325, 4, 1, "", "abstract"], [325, 4, 1, "", "cls"], [325, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[326, 4, 1, "", "abstract"], [326, 4, 1, "", "cls"], [326, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[327, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[330, 4, 1, "", "callable_"], [330, 4, 1, "", "ignore"], [330, 4, 1, "", "object"], [330, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[332, 4, 1, "", "post_hooks"], [332, 4, 1, "", "pre_hooks"], [332, 4, 1, "", "target"]], "baybe.utils.boolean": [[335, 5, 1, "", "check_if_in"], [336, 5, 1, "", "is_abstract"], [337, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[335, 4, 1, "", "allowed"], [335, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[336, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[337, 4, 1, "", "val"]], "baybe.utils.chemistry": [[339, 5, 1, "", "get_canonical_smiles"], [340, 5, 1, "", "get_fingerprint_class"], [341, 5, 1, "", "name_to_smiles"], [342, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[340, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[341, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[342, 4, 1, "", "encoding"], [342, 4, 1, "", "kwargs_conformer"], [342, 4, 1, "", "kwargs_fingerprint"], [342, 4, 1, "", "prefix"], [342, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[344, 5, 1, "", "fraction_to_float"], [345, 5, 1, "", "nonstring_to_tuple"], [346, 5, 1, "", "to_string"]], "baybe.utils.conversion.fraction_to_float.params": [[344, 4, 1, "", "value"]], "baybe.utils.conversion.to_string.params": [[346, 4, 1, "", "*fields"], [346, 4, 1, "", "header"], [346, 4, 1, "", "single_line"]], "baybe.utils.dataframe": [[348, 5, 1, "", "add_fake_measurements"], [349, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [350, 5, 1, "", "add_parameter_noise"], [351, 5, 1, "", "arrays_to_dataframes"], [352, 5, 1, "", "create_fake_input"], [353, 5, 1, "", "df_drop_single_value_columns"], [354, 5, 1, "", "df_drop_string_columns"], [355, 5, 1, "", "df_uncorrelated_features"], [356, 5, 1, "", "filter_df"], [357, 5, 1, "", "fuzzy_row_match"], [358, 5, 1, "", "get_transform_objects"], [359, 5, 1, "", "pretty_print_df"], [360, 5, 1, "", "to_tensor"], [361, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[348, 4, 1, "", "bad_intervals"], [348, 4, 1, "", "data"], [348, 4, 1, "", "good_intervals"], [348, 4, 1, "", "good_reference_values"], [348, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[349, 4, 1, "", "df"], [349, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[350, 4, 1, "", "data"], [350, 4, 1, "", "noise_level"], [350, 4, 1, "", "noise_type"], [350, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[351, 4, 1, "", "input_labels"], [351, 4, 1, "", "output_labels"], [351, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[352, 4, 1, "", "**kwargs"], [352, 4, 1, "", "n_rows"], [352, 4, 1, "", "parameters"], [352, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[353, 4, 1, "", "df"], [353, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[354, 4, 1, "", "df"], [354, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[355, 4, 1, "", "df"], [355, 4, 1, "", "exclude_list"], [355, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[356, 4, 1, "", "complement"], [356, 4, 1, "", "df"], [356, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[357, 4, 1, "", "left_df"], [357, 4, 1, "", "parameters"], [357, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[358, 4, 1, "", "allow_extra"], [358, 4, 1, "", "allow_missing"], [358, 4, 1, "", "df"], [358, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[359, 4, 1, "", "df"], [359, 4, 1, "", "max_columns"], [359, 4, 1, "", "max_colwidth"], [359, 4, 1, "", "max_rows"], [359, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[360, 4, 1, "", "*x"]], "baybe.utils.interval": [[363, 7, 1, "", "InfiniteIntervalError"], [364, 1, 1, "", "Interval"], [365, 5, 1, "", "convert_bounds"], [366, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[363, 2, 1, "", "__init__"], [363, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[364, 2, 1, "", "__init__"], [364, 6, 1, "", "center"], [364, 2, 1, "", "contains"], [364, 2, 1, "", "create"], [364, 2, 1, "", "from_dict"], [364, 2, 1, "", "from_json"], [364, 6, 1, "", "is_bounded"], [364, 6, 1, "", "is_degenerate"], [364, 6, 1, "", "is_fully_unbounded"], [364, 6, 1, "", "is_half_bounded"], [364, 6, 1, "", "is_left_bounded"], [364, 6, 1, "", "is_right_bounded"], [364, 3, 1, "", "lower"], [364, 2, 1, "", "to_dict"], [364, 2, 1, "", "to_json"], [364, 2, 1, "", "to_ndarray"], [364, 2, 1, "", "to_tensor"], [364, 2, 1, "", "to_tuple"], [364, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[364, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[364, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[364, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[365, 4, 1, "", "bounds"]], "baybe.utils.memory": [[368, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[368, 4, 1, "", "num"]], "baybe.utils.numerical": [[370, 3, 1, "", "DTypeFloatNumpy"], [371, 3, 1, "", "DTypeFloatONNX"], [372, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [373, 5, 1, "", "closer_element"], [374, 5, 1, "", "closest_element"], [375, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[373, 4, 1, "", "target"], [373, 4, 1, "", "x"], [373, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[374, 4, 1, "", "array"], [374, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[375, 4, 1, "", "arr"], [375, 4, 1, "", "weights"]], "baybe.utils.random": [[377, 5, 1, "", "set_random_seed"], [378, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[377, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[378, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[380, 1, 1, "", "DiscreteSamplingMethod"], [381, 5, 1, "", "farthest_point_sampling"], [382, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[380, 3, 1, "", "FPS"], [380, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[381, 4, 1, "", "initialization"], [381, 4, 1, "", "n_samples"], [381, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[382, 4, 1, "", "df"], [382, 4, 1, "", "method"], [382, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[384, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[384, 2, 1, "", "__init__"], [384, 2, 1, "", "fit"], [384, 3, 1, "", "mapping"], [384, 2, 1, "", "transform"]], "baybe.utils.torch": [[386, 8, 1, "", "DTypeFloatTorch"], [387, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[389, 5, 1, "", "finite_float"], [390, 5, 1, "", "non_inf_float"], [391, 5, 1, "", "non_nan_float"], [392, 5, 1, "", "validate_not_nan"], [393, 5, 1, "", "validate_parameter_input"], [394, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[393, 4, 1, "", "data"], [393, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [393, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[394, 4, 1, "", "data"], [394, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 197, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 328, 360, 364, 395, 398, 405, 409, 412, 413, 416, 417, 419, 420, 421, 422, 423, 425, 430, 434, 435, 436, 439, 440, 441, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 456, 457, 458, 460], "0": [8, 13, 16, 22, 31, 34, 44, 45, 51, 106, 145, 153, 156, 176, 184, 185, 186, 197, 221, 244, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 306, 307, 308, 316, 317, 337, 349, 350, 355, 356, 371, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 420, 422, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 439, 444, 445, 447, 448, 452, 453, 455, 456, 457, 459, 462], "00": [429, 455], "000": [409, 431], "0008809549999568844": 412, "001": [44, 349, 448], "003210": 427, "005": [397, 398, 399, 401, 402], "008392": 429, "01": [176, 404, 405, 410, 413, 428, 429, 436], "02": 436, "021": [278, 355], "023456": 420, "025716": 420, "030002": 424, "03213": [278, 355], "05": 436, "051279": 420, "051710": 420, "054932": 429, "057": [397, 398, 399, 401, 402, 412], "059623": 429, "06": [221, 290], "068617": 420, "071396": 420, "076071": 427, "08": 436, "080320": 420, "083944": 429, "085530": 420, "087870": 427, "089848": 427, "09653736976391157": 422, "0f": 413, "1": [13, 16, 26, 31, 44, 106, 127, 145, 156, 187, 197, 213, 244, 246, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 306, 307, 308, 313, 316, 317, 327, 337, 350, 352, 356, 371, 375, 381, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 420, 422, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 439, 440, 444, 447, 448, 452, 453, 455, 456, 457, 459, 462], "10": [13, 16, 197, 246, 278, 355, 396, 398, 407, 408, 409, 413, 416, 417, 419, 420, 422, 424, 425, 427, 431, 432, 433, 435, 436, 439, 446, 447, 453, 457, 462], "100": [402, 407, 408, 409, 410, 413, 416, 417, 419, 420, 424, 425, 431, 436, 451, 452, 453, 457, 459, 462], "1000": [425, 457], "102": 428, "1024": [150, 441, 453], "103378": 420, "1038": [278, 355], "105": [397, 398, 399, 401, 402, 412, 424, 455], "106137": 424, "107930": 420, "11": [322, 419, 440], "110": 424, "111": [416, 431], "111098": 420, "111111": 416, "111440": 424, "113488": 420, "1147": 409, "1148": 409, "1149": 409, "1150": 409, "115997": 427, "117626": 427, "12": [419, 420, 429, 442, 447, 455], "120": [397, 398, 399, 401, 402, 407, 409, 412, 429, 453], "120000": 428, "120698": 424, "122": 431, "126": [407, 409, 410, 440], "1268824": [397, 398, 399], "128": 10, "129708": 427, "13": [419, 420, 424, 435, 455], "130783": 427, "1337": [413, 414, 462], "135739": 424, "138": 429, "14": [419, 420, 429, 455], "140": 424, "143759": 427, "14448993259018328": 422, "1454": 441, "148": 424, "148799": 420, "15": [246, 409, 419, 420, 435, 436, 439, 447, 455], "150": [407, 410, 448], "1500": 453, "151": 409, "153": [397, 398, 399, 401, 402, 412], "154": 424, "16": [359, 371, 419, 420], "160808": 424, "163549": 420, "167691": 420, "169258": 420, "17": [419, 420], "170": 428, "177": 431, "18": [419, 420, 447], "180": [407, 424], "181": 424, "182": 424, "188": 431, "19": [419, 420], "192": 409, "192275": 420, "1e": [221, 290], "2": [8, 13, 16, 22, 106, 108, 127, 246, 316, 317, 327, 348, 356, 375, 381, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 413, 414, 416, 417, 419, 420, 422, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 439, 444, 447, 448, 452, 453, 455, 456, 457, 459], "20": [13, 16, 156, 246, 396, 397, 398, 399, 413, 414, 419, 420, 424, 441, 453, 460, 462], "200": [398, 407, 409, 416, 417, 422, 431], "2004": 444, "2007": 460, "201416": 420, "2021": 398, "2022": 439, "2025": 439, "208": 424, "208854": 429, "21": [419, 424, 432], "213535": 427, "22": [13, 16, 402, 419, 420, 424, 447], "221": 441, "222": 431, "23": [419, 420, 424, 447, 457], "236": 424, "236473": 420, "24": [408, 419, 455], "241": [428, 453], "244518": 427, "247652": 420, "25": [413, 419, 420, 428, 435, 455], "250": 445, "252640": 427, "253561": 420, "26": [419, 420, 455], "27": [419, 420, 455], "272982": 402, "274195": 420, "274647": 420, "277": 424, "278": 424, "279": 424, "279872": 427, "28": [401, 419, 424], "280": 424, "281449": 427, "283": 402, "284063": 427, "286130": 427, "29": [402, 419, 439], "296025": 427, "3": [246, 316, 317, 322, 327, 356, 359, 397, 398, 399, 402, 405, 407, 408, 409, 410, 412, 414, 417, 419, 420, 422, 424, 425, 427, 428, 429, 431, 432, 435, 436, 439, 440, 442, 444, 447, 448, 451, 453, 455, 456, 457, 459, 460], "30": [396, 410, 414, 419, 420, 453], "301649": 427, "3078f3": 441, "31": [419, 432], "317174": 424, "32": [408, 419, 420, 447, 453], "321542": 420, "33": [408, 419, 420, 424], "34": [408, 447], "35": [408, 419, 420], "351657": 420, "352442": 424, "36": 420, "361457": 420, "366177": 420, "372166": 424, "374769": 420, "376050": 428, "378404": 402, "38": [420, 424, 447], "39": 453, "391893": 420, "393492": 420, "394": 402, "3d": 414, "4": [13, 16, 150, 316, 317, 359, 404, 405, 407, 408, 409, 410, 414, 419, 420, 422, 424, 427, 428, 429, 439, 444, 447, 448, 453, 455], "40": [419, 424, 452, 453], "405756": 424, "407637": 428, "40x": 441, "41": 420, "410275": 427, "411999": 420, "42": [422, 425, 447], "426925": 420, "427441": 427, "428902": 420, "43": [420, 424], "434480": 420, "440311": 424, "445045": 420, "447": 407, "447777": 427, "448": 407, "448255": 420, "449": 407, "45": [419, 424, 459], "450": 407, "458413": 420, "46": 420, "460601": 420, "463478": 427, "468": 441, "468814": 424, "471453": 424, "479175": 420, "486545": 424, "489760": 424, "490800": 420, "495267": 424, "498646": 420, "4x": 441, "5": [106, 156, 316, 317, 397, 399, 401, 404, 407, 408, 409, 410, 413, 416, 417, 419, 420, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 439, 444, 445, 446, 447, 448, 453, 455, 457, 460, 462], "50": [410, 417, 419, 422, 435, 436, 444, 445, 453, 455, 459], "500": [414, 453], "5066666666666667": 422, "507095": 427, "509533": 420, "509973": 420, "51": 424, "515860": 420, "52": [420, 424], "525365": 420, "527463": 424, "527800": 424, "53": [420, 424], "5313": 333, "532188": 427, "54": [424, 439, 447], "55": [424, 459], "558776": 427, "56": [424, 447, 457], "561244": 420, "562724": 420, "564752": 424, "567339": 427, "568213": 427, "578885": 424, "579748": 427, "580444": 424, "59": [431, 439, 447], "590": 398, "594851": 420, "596182": 427, "597023": 420, "6": [316, 317, 359, 397, 398, 399, 407, 408, 409, 410, 419, 420, 422, 424, 427, 429, 431, 444, 448, 455], "60": [424, 452], "604967": 420, "610061": 429, "614276": 427, "62": [422, 428, 447], "624520": 424, "639965": 420, "64": 197, "648687": 420, "65": [422, 424], "653318": 420, "66368270ffd51418ec58bd793f2d9b1b": 460, "664995": 424, "667687": 420, "67": 420, "673450": 420, "680093": 424, "687958": 427, "69": [397, 398, 399], "690385": 420, "698357": 429, "699022": 424, "7": [156, 316, 317, 355, 408, 410, 414, 419, 420, 424, 425, 427, 429, 435, 444, 447, 453, 455], "70": 419, "706187": 427, "706667": 428, "709504": 420, "71": 453, "712626": 427, "715076": 424, "72": [424, 447], "730442": 428, "731445": 427, "741921": 420, "745": 462, "747299": 427, "75": [419, 428, 455], "753174": 424, "754716": 420, "757297": 420, "76": 429, "763512": 420, "766534": 420, "77": [402, 424], "773275": 424, "775989": 424, "778": 431, "779480": 424, "779678": 429, "781746": 401, "786960": 420, "79": 439, "793840": 424, "796235": 429, "7gz": 453, "7hf": 453, "8": [317, 397, 399, 407, 409, 410, 419, 420, 422, 424, 427, 439, 444, 448], "80": [420, 448], "800316": 420, "800716": 424, "815236": 420, "826626": 420, "829856": 424, "83": 447, "831997": 424, "834051": 420, "835683": 420, "8389": 333, "8417": 333, "842279": 402, "843504": 420, "85": 424, "856655": 420, "857": 409, "858393": 420, "861": 410, "861238": 429, "862": 410, "863": 410, "864": 410, "87": [401, 431, 447], "88": 431, "885442": 420, "8859": 416, "886847": 427, "887519": 420, "889": 431, "89": [398, 431], "8jq": 453, "9": [13, 16, 410, 414, 419, 420, 424, 427, 444, 447, 455, 456], "90": [397, 398, 399, 401, 402, 412, 431, 455], "91": 447, "910725": 424, "921623": 427, "923379": 420, "932557": 420, "942849": 427, "943839": 429, "946902": 420, "95": [401, 424], "952076": 424, "956132": 420, "96": 398, "973689": 420, "974229": 420, "975595": 420, "978586": 427, "982994": 401, "990765": 427, "996447": 429, "999": 448, "A": [0, 13, 16, 26, 31, 38, 40, 41, 42, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 73, 77, 79, 80, 81, 84, 87, 89, 94, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 124, 126, 127, 131, 133, 139, 142, 143, 145, 153, 156, 158, 159, 160, 169, 170, 171, 172, 173, 174, 175, 176, 179, 185, 186, 187, 189, 192, 195, 197, 199, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 222, 223, 238, 239, 244, 246, 248, 250, 253, 255, 257, 260, 262, 266, 268, 269, 276, 278, 280, 282, 284, 286, 292, 296, 298, 304, 306, 307, 308, 316, 322, 325, 326, 327, 330, 340, 348, 355, 356, 358, 368, 375, 379, 381, 384, 396, 408, 417, 419, 420, 422, 424, 432, 433, 438, 440, 441, 442, 444, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460], "AND": [54, 409, 444, 448], "AS": [439, 444], "And": 416, "As": [397, 398, 399, 414, 422, 424, 435, 436, 439, 440, 441, 447, 448, 451, 454, 455, 457], "But": 459, "By": [94, 126, 159, 221, 336, 356, 420, 442, 446, 449, 450, 452, 454, 455], "FOR": 444, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 166, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 244, 250, 253, 255, 257, 258, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 296, 298, 304, 309, 332, 357, 361, 364, 384, 397, 398, 399, 401, 402, 408, 412, 413, 414, 419, 420, 422, 424, 429, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462], "If": [6, 13, 15, 16, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 94, 98, 121, 126, 127, 131, 133, 135, 158, 159, 164, 165, 185, 186, 189, 197, 213, 215, 221, 227, 228, 244, 246, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 307, 312, 317, 325, 326, 330, 332, 335, 337, 340, 344, 346, 348, 349, 350, 352, 355, 356, 357, 358, 381, 382, 393, 394, 402, 404, 413, 419, 428, 429, 432, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 462], "In": [31, 45, 57, 158, 197, 215, 242, 244, 330, 359, 397, 398, 399, 401, 413, 414, 416, 419, 420, 422, 424, 425, 428, 429, 432, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462], "It": [26, 179, 186, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 261, 282, 348, 397, 401, 402, 408, 417, 419, 422, 424, 429, 431, 432, 433, 435, 446, 447, 448, 449, 453, 454, 455, 457, 462], "Its": [246, 416], "No": [357, 427, 438, 441], "Not": [444, 448], "OF": [439, 444], "OR": [439, 444], "Of": [402, 411, 437, 456], "On": [416, 422], "One": [147, 397, 399, 425, 439], "Or": 449, "Such": [402, 448, 451, 457], "That": [44, 215, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 307, 402, 407, 419, 442, 455, 457, 460], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 94, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 127, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 160, 166, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 233, 234, 236, 238, 242, 244, 246, 248, 253, 255, 257, 258, 260, 262, 266, 269, 280, 282, 284, 286, 288, 290, 292, 293, 296, 298, 301, 304, 306, 307, 308, 310, 312, 313, 316, 317, 322, 325, 326, 327, 330, 332, 335, 336, 337, 340, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 368, 373, 374, 375, 377, 378, 381, 382, 393, 394, 397, 398, 399, 402, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 424, 428, 429, 433, 435, 436, 438, 440, 441, 442, 444, 447, 448, 449, 451, 452, 453, 454, 455, 458, 459, 461, 462], "Then": 414, "There": [83, 290, 371, 419, 427, 439, 440, 442, 446, 450, 455, 458], "These": [310, 395, 398, 399, 400, 403, 406, 411, 415, 418, 421, 423, 426, 430, 434, 439, 442, 446, 448, 449, 453, 455], "To": [397, 402, 413, 414, 420, 422, 425, 431, 435, 436, 439, 440, 442, 446, 447, 448, 449, 450, 452, 453, 457, 458], "Will": 445, "With": [348, 413, 414, 419, 422, 425, 435, 436, 439, 446, 448, 453, 456], "_": [135, 164, 165, 218, 224, 231, 404, 413, 436], "__": 135, "__class__": [412, 422], "__excepthook__": 440, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 253, 255, 257, 258, 260, 262, 266, 268, 269, 276, 278, 280, 282, 284, 286, 296, 298, 304, 319, 322, 363, 364, 384, 455, 456], "__name__": [412, 422], "__new__": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 147, 148, 150, 363], "__str__": 441, "__version__": 441, "_amount": 419, "_arraylik": 351, "_c": 326, "_cumbest": 244, "_default_my_attribut": 442, "_discretelabellikeparamet": [142, 145, 156], "_expectedhypervolumeimprov": [13, 16], "_fit": 293, "_has_switch": 187, "_iterbest": 244, "_label": 419, "_measur": 244, "_n_last_measur": [184, 185, 186], "_nbase": 342, "_nestedsequ": [13, 16, 127, 160, 306, 307, 308, 374], "_no_tl": 435, "_option": 441, "_posterior": 293, "_step": [184, 185, 186], "_supportsarrai": [13, 16, 127, 160, 306, 307, 308, 374], "_surrogate_model": [413, 414], "_surrogategett": 260, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 226, 234, 235, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 327, 328, 329, 345, 358, 364], "_target": 441, "_tparamet": 159, "_tsurrog": 289, "_u": 327, "_validate_my_attribut": 442, "_was_us": [184, 185, 186], "a1": 317, "a2": 317, "ab": [410, 419], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 324, 331, 441, 461], "abc": [24, 34, 35, 36, 37, 38, 40, 101, 102, 103, 121, 139, 140, 168, 182, 192, 195, 202, 207, 255, 257, 296, 336], "abil": [445, 450, 460], "abl": [414, 440, 446, 448, 453, 456, 462], "about": [8, 26, 31, 140, 156, 296, 313, 397, 398, 399, 419, 428, 429, 439, 441, 442, 447, 451, 453, 455, 458], "abov": [290, 308, 336, 355, 396, 402, 409, 410, 412, 413, 420, 427, 439, 442, 444, 445, 446, 447, 448, 449, 450, 453, 456, 457, 458, 460], "absenc": 452, "absolut": [44, 153, 350, 439], "abstract": [24, 34, 35, 36, 37, 38, 40, 101, 102, 103, 121, 138, 139, 140, 168, 182, 192, 195, 202, 257, 296, 325, 326, 336, 441, 448, 460], "abstractli": 422, "acceler": [439, 441, 443, 460], "accept": [31, 185, 253, 255, 257, 262, 266, 280, 282, 284, 286, 351, 413, 414, 441, 444, 449, 452, 453, 457, 459], "access": [213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 397, 398, 399, 407, 412, 436, 441, 448, 453, 456], "accord": [44, 180, 420, 445, 448, 449, 454, 462], "accordingli": [197, 447, 450, 452, 456], "account": 446, "accumul": [170, 422, 460], "accur": 447, "acet": [397, 398, 399, 401, 402], "aceton": 419, "achiev": [21, 221, 414, 419, 422, 425, 439, 442, 445, 447, 448, 450, 458], "ack": 439, "acq_funct": 402, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 413, 414, 422], "acqf1": 456, "acqf2": 456, "acqf_valu": 413, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 70, 80, 195, 197, 407, 408, 409, 410, 413, 414, 422, 424, 431, 439, 441, 445, 452, 454, 456, 458], "acquisition_funct": [195, 197, 402, 422, 432, 433, 441], "acquisition_function_cl": [195, 197, 441], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 195, 197, 422, 441, 456], "across": [419, 422, 435, 446, 454, 460], "act": [419, 441, 444, 448, 457], "action": [21, 412, 422, 438, 441, 461], "activ": [15, 34, 158, 187, 197, 413, 414, 422, 439, 440, 441, 442, 448, 449, 450, 451, 454, 460, 461, 462], "activate_paramet": 441, "active_dim": [101, 102, 103, 106, 108, 110, 111, 112], "active_valu": [139, 142, 143, 145, 153, 156, 435, 436, 441, 450, 453, 460], "actual": [185, 215, 242, 428, 441, 451, 455, 457, 460, 462], "ad": [31, 221, 312, 316, 348, 381, 419, 420, 438, 442, 445, 449, 450, 458, 459, 461], "adapt": [186, 278, 337, 355], "add": [31, 236, 246, 348, 349, 402, 416, 417, 419, 424, 435, 439, 444, 446, 447, 448, 451, 455, 460, 462], "add_collection3d": 414, "add_fake_measur": [352, 401, 402, 407, 408, 409, 410, 416, 417, 424, 441, 446, 457, 462], "add_fake_result": 441, "add_measur": [31, 352, 401, 402, 404, 405, 407, 408, 409, 410, 414, 416, 417, 422, 424, 425, 428, 429, 439, 441, 446, 447, 449, 450], "add_noise_to_perturb_degenerate_row": 441, "add_parameter_nois": [352, 441, 462], "add_subplot": 414, "addendum": 444, "addit": [31, 94, 121, 126, 131, 133, 185, 197, 215, 236, 244, 246, 248, 350, 352, 397, 398, 399, 420, 428, 436, 439, 441, 443, 444, 447, 448, 449, 451, 452, 453, 455, 456, 457, 460, 462], "addition": [412, 420, 439, 451], "additiveexplain": [92, 95], "additivekernel": 441, "address": 457, "adher": [441, 442], "adjust": [158, 186, 398, 402, 428, 441, 450, 452], "adopt": 402, "adrian": [439, 443], "advanc": [186, 422, 440, 441, 449, 452, 456, 460, 461], "advantag": [419, 442], "advic": 442, "advis": [444, 457], "affect": [31, 53, 63, 65, 197, 213, 316, 412, 431, 438, 440, 448], "affected_paramet": [53, 407, 408, 409, 410, 419, 448], "affili": [439, 449], "afford": 447, "aforement": [215, 449], "after": [187, 332, 401, 402, 407, 408, 409, 410, 414, 424, 431, 439, 447, 451, 452, 453, 456], "afterward": 456, "again": [413, 446, 447, 448, 460], "against": [88, 312, 330, 419, 444, 450, 460], "agent": 420, "aggreg": 452, "agraw": 443, "agre": [439, 444, 451], "agreement": 444, "ai": [99, 166, 371], "aim": [447, 451], "akin": 446, "al": [398, 439, 453], "aldrich": 443, "alex": 443, "alexand": [439, 443], "algorithm": [190, 197, 348, 379, 381, 396, 419, 424, 439, 441, 446, 451, 454], "alia": [155, 199, 256, 453], "alias": 441, "align": [158, 213, 332, 413, 455, 460], "all": [23, 24, 33, 35, 40, 44, 53, 55, 61, 63, 94, 100, 101, 102, 103, 120, 121, 126, 137, 140, 145, 149, 156, 167, 168, 178, 181, 182, 185, 191, 192, 194, 197, 201, 202, 213, 215, 222, 223, 246, 253, 254, 257, 295, 296, 316, 329, 330, 348, 397, 398, 399, 402, 404, 405, 407, 408, 412, 413, 414, 419, 420, 422, 424, 427, 428, 435, 436, 439, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462], "allclos": [404, 405, 420], "alleg": 444, "allow": [21, 31, 34, 44, 51, 55, 121, 126, 131, 133, 153, 159, 186, 215, 221, 248, 313, 335, 357, 358, 393, 394, 397, 398, 399, 402, 419, 420, 435, 436, 439, 441, 445, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458, 459, 462], "allow_": [441, 450], "allow_extra": [121, 126, 131, 133, 213, 215, 221, 226, 358, 361, 424, 441], "allow_miss": [121, 126, 131, 133, 213, 215, 221, 226, 358, 361, 441], "allow_recommending_already_measur": [31, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 422, 432, 433, 438, 441, 447], "allow_recommending_already_recommend": [31, 422, 432, 433, 438, 441, 447], "allow_recommending_pending_experi": [31, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 441, 447], "allow_repeated_recommend": [189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 441], "almost": 398, "alon": [441, 444], "along": [375, 444, 453, 460], "alongsid": 444, "alpha": [170, 414, 425], "alphabet": [161, 441], "alreadi": [31, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 419, 429, 439, 441, 445, 446, 447, 450, 455, 457, 458, 460, 462], "also": [31, 44, 57, 94, 159, 253, 255, 257, 262, 266, 280, 282, 284, 286, 313, 330, 332, 348, 349, 350, 397, 404, 405, 413, 414, 416, 417, 419, 424, 425, 428, 429, 431, 435, 436, 439, 441, 442, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462], "alter": [419, 441, 447, 450], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 290, 375, 412, 419, 420, 427, 439, 441, 450, 458, 461, 462], "although": [419, 429, 432, 455, 457], "alwai": [15, 31, 40, 231, 232, 416, 419, 420, 439, 445, 447, 448, 457, 458, 460, 462], "ambigu": [153, 320, 321, 455], "amend": 448, "among": [34, 419, 439, 452, 460], "amount": [317, 382, 420, 435, 436, 446, 451, 453, 462], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 70, 71, 72, 74, 75, 76, 80, 85, 88, 89, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 122, 124, 126, 131, 133, 135, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 160, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 234, 236, 238, 242, 244, 246, 248, 253, 255, 257, 260, 262, 263, 266, 269, 280, 282, 284, 286, 288, 289, 296, 298, 304, 316, 320, 321, 328, 330, 332, 335, 341, 345, 346, 355, 356, 357, 359, 363, 364, 365, 374, 381, 382, 397, 399, 400, 402, 409, 410, 412, 413, 416, 417, 420, 424, 427, 431, 432, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "analog": [215, 348, 448, 455, 456], "analogi": [180, 454], "analysi": [439, 451, 458], "analyt": [3, 4, 7, 8, 80, 457, 460], "analyz": [439, 442, 451], "angl": 414, "ani": [13, 16, 64, 65, 94, 127, 138, 139, 140, 142, 143, 145, 156, 159, 160, 163, 164, 165, 231, 232, 236, 240, 241, 248, 280, 284, 286, 306, 307, 308, 313, 316, 329, 330, 332, 333, 335, 336, 346, 352, 357, 364, 366, 374, 389, 390, 391, 392, 394, 412, 419, 435, 436, 438, 439, 440, 441, 442, 444, 447, 449, 450, 453, 456, 457, 460], "annot": [332, 412, 444], "anonym": [439, 449], "anoth": [53, 365, 398, 408, 409, 416, 417, 419, 429, 442, 448, 460], "ansatz": 441, "answer": 447, "anti": 356, "anymor": [441, 460], "anyth": 337, "anywai": 458, "anywher": 404, "apach": [439, 444], "apart": [442, 447], "api": [439, 440, 456], "aplei": 451, "appar": 456, "appdata": 440, "appear": [330, 440, 441, 444, 456], "append": [414, 436], "appendix": 444, "appli": [31, 40, 41, 42, 57, 197, 215, 242, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 330, 341, 350, 352, 384, 402, 403, 406, 407, 409, 410, 412, 413, 419, 435, 440, 441, 444, 448, 451, 452, 454, 455, 456, 457, 458, 459, 460], "applic": [346, 439, 442, 444, 453, 454, 457], "approach": [221, 413, 422, 439, 442, 445, 447, 450, 452, 454, 456, 458, 460], "appropri": [47, 48, 118, 221, 422, 442, 444, 450, 455], "approxim": [10, 21, 448, 451], "ar": [6, 12, 13, 14, 16, 17, 31, 34, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 69, 78, 81, 82, 83, 94, 121, 126, 127, 131, 133, 139, 142, 143, 145, 153, 156, 158, 159, 160, 165, 179, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 244, 246, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 308, 310, 312, 313, 316, 317, 325, 326, 327, 329, 330, 332, 336, 337, 348, 349, 351, 352, 353, 357, 358, 381, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 417, 419, 420, 422, 424, 427, 428, 431, 432, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462], "arang": [404, 414, 453], "arbitrari": [186, 215, 366, 441, 448, 453, 454, 457, 460, 462], "arbitrarili": [452, 456], "architectur": [253, 255, 257, 262, 266, 280, 282, 284, 286, 293, 441, 458, 460], "ard_num_dim": [101, 102, 103, 106, 108, 110, 111, 112], "area": 414, "arg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 105, 107, 109, 114, 115, 116, 168, 170, 171, 172, 173, 174, 175, 176, 179, 199, 258, 263, 268, 363, 442], "argu": 419, "argument": [71, 89, 94, 99, 156, 159, 166, 182, 184, 185, 186, 187, 213, 221, 258, 260, 332, 352, 356, 402, 417, 424, 441, 448, 451, 453, 454, 455, 456, 457, 460], "aris": [56, 419, 441, 444, 448, 456, 462], "arithmet": [129, 452], "arizona": 443, "arm": [252, 253, 437, 443], "arm_index": 422, "around": [13, 16, 44, 206, 248, 250, 424, 441, 454, 456, 462], "arr": [306, 307, 308, 375, 425], "arrai": [13, 16, 127, 160, 306, 307, 308, 319, 351, 360, 370, 374, 375, 381, 414, 441, 454, 458], "arrays_to_datafram": [404, 405, 414, 425, 428, 429, 435, 436, 441, 457], "arriv": [439, 450], "artifici": 462, "aryl": [397, 398, 399, 401, 439, 453], "ascend": 424, "ask": [419, 439, 441, 442, 447, 450], "aspect": [400, 404, 405, 429, 446, 449], "assembl": [419, 456, 458], "assembli": [458, 461], "assert": [65, 135, 357, 407, 408, 409, 410, 416, 417, 419, 420, 427, 431, 441, 444, 447, 448, 456, 458], "assess": 457, "assign": [348, 413, 420, 427, 453], "associ": [215, 422, 444, 447, 449, 452, 460], "assum": [26, 45, 261, 332, 357, 358, 397, 398, 399, 402, 404, 405, 407, 408, 409, 410, 416, 417, 419, 422, 424, 428, 429, 431, 439, 444, 448, 450, 453, 456, 458, 459, 462], "assumpt": 457, "assur": 448, "asymmetr": 44, "asynchron": [439, 447, 461], "atol": [404, 405], "atompair": 150, "atompairfingerprint": 150, "attach": [26, 332, 412, 413, 414, 444], "attempt": [79, 85, 261, 422, 440, 441, 446, 448, 451, 454], "attent": 187, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 135, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 253, 255, 257, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 296, 298, 304, 330, 333, 364, 384, 392, 441], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 88, 91, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 129, 131, 133, 138, 139, 140, 142, 143, 145, 147, 148, 150, 152, 153, 154, 156, 159, 163, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 220, 221, 230, 234, 236, 253, 254, 255, 257, 260, 262, 266, 269, 273, 276, 278, 280, 282, 284, 286, 293, 296, 297, 298, 301, 302, 304, 318, 321, 330, 345, 358, 364, 369, 380, 384, 385, 388, 389, 390, 391, 392, 427, 441, 442, 444, 448, 454, 456, 458, 459], "audit": [439, 441, 442], "augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 215, 288, 289, 290, 441, 447], "author": 444, "authorship": 444, "auto": [12, 13, 14, 16, 17, 441, 443], "auto_tutori": 371, "autocorr": 150, "autocorrfingerprint": 150, "autodoc": 441, "automat": [31, 124, 197, 266, 396, 414, 428, 440, 441, 442, 451, 452, 454, 455, 458, 460, 461], "avail": [2, 129, 145, 147, 148, 150, 156, 185, 186, 244, 246, 273, 301, 302, 313, 380, 381, 382, 399, 401, 404, 405, 419, 424, 428, 429, 439, 440, 441, 442, 444, 446, 447, 449, 451, 453, 454, 455, 456, 457, 460, 461], "available_acq_funct": 402, "avalon": 150, "avalonfingerprint": 150, "averag": [282, 413, 414, 436, 453, 457], "avoid": [215, 333, 375, 441, 442, 446, 447, 453, 455], "awai": [13, 16, 158, 459], "awar": [419, 435, 436, 441, 445, 450, 456], "ax": [94, 396, 398, 413, 414, 425, 435, 436], "axes3d": 414, "axi": [213, 244, 375, 396, 404, 405, 410, 413, 414, 419, 420, 422, 424, 425, 428, 429, 435, 436, 455], "azim": 414, "azur": 441, "b": [44, 56, 176, 278, 316, 327, 355, 356, 398, 408, 417, 422, 432, 433, 438, 439, 442, 444, 447, 450, 453, 456], "b1": 317, "b2": 317, "back": [0, 431, 438, 441, 442, 450], "backend": 313, "background": [94, 98, 441, 451], "background_data": 94, "backport": 440, "backtest": [242, 243, 249, 397, 398, 399, 413, 434, 437, 439, 441, 454, 457], "backtick": 442, "backward": [117, 123, 198, 199, 215, 441], "bad": [424, 447, 449, 459], "bad_interv": 348, "badg": 441, "bai": 439, "baird": 443, "balanc": [126, 422, 439], "banana": 442, "bandit": [253, 402, 437, 439, 441, 443], "banner": 441, "bar": [94, 96, 416, 417, 419, 431, 432, 433, 439, 441, 451, 458], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 129, 131, 133, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 183, 184, 185, 186, 187, 189, 192, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 220, 221, 234, 236, 238, 253, 255, 257, 258, 260, 261, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 290, 292, 296, 298, 301, 302, 304, 319, 321, 322, 324, 325, 326, 351, 356, 364, 380, 381, 384, 396, 401, 402, 413, 414, 416, 418, 422, 437, 439, 441, 444, 445, 447, 448, 449, 451, 453, 454, 455, 456, 458], "base1": 420, "base2": 420, "base_data": 413, "base_kernel": [114, 115, 116], "base_nam": [396, 398, 413, 414, 435, 436], "base_predictor": 288, "base_smil": 413, "basefingerprinttransform": 340, "baselin": [396, 398, 435, 439, 453], "basesequentialmetarecommend": [185, 186], "bashrc": 449, "basi": [110, 439, 444, 451], "basic": [101, 105, 106, 107, 108, 109, 110, 111, 112, 170, 171, 172, 173, 174, 175, 176, 244, 319, 321, 322, 397, 398, 399, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 424, 428, 429, 430, 431, 434, 437, 441, 442, 450, 452, 453, 457, 461], "basic_transfer_learn": 436, "basickernel": [105, 106, 107, 108, 109, 110, 111, 112, 441], "batch": [31, 179, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 247, 288, 289, 402, 407, 408, 409, 410, 414, 424, 428, 429, 431, 435, 436, 441, 446, 450, 454, 457], "batch_quant": 441, "batch_shap": [101, 102, 103, 106, 108, 110, 111, 112], "batch_siz": [31, 44, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 244, 248, 250, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 420, 422, 424, 425, 428, 429, 431, 432, 435, 436, 439, 441, 446, 447, 449, 450, 457], "batchnr": 424, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 129, 131, 133, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 296, 298, 301, 302, 304, 319, 321, 322, 364, 380, 384, 395, 396, 397, 398, 399, 400, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462], "baybe_cach": 449, "baybe_cache_dir": [441, 449], "baybe_deactivate_polar": [441, 449], "baybe_debug_fake_hosthash": 441, "baybe_debug_fake_userhash": 441, "baybe_numpy_use_single_precis": [372, 441, 449], "baybe_telemetry_en": [439, 449], "baybe_telemetry_endpoint": [441, 449], "baybe_telemetry_host": 441, "baybe_telemetry_hostnam": [441, 449], "baybe_telemetry_usernam": [441, 449], "baybe_telemetry_vpn_check": [441, 449], "baybe_telemetry_vpn_check_timeout": [441, 449], "baybe_torch_use_single_precis": [387, 441, 449], "bayesian": [0, 189, 195, 197, 242, 244, 248, 250, 261, 280, 422, 441, 445, 447, 451, 458, 461], "bayesian_recommend": 414, "bayesianlinearmodel": 417, "bayesianlinearsurrog": [402, 458], "bayesianrecommend": [189, 197, 261, 441, 454], "bayesianridg": 416, "bcut2d": [150, 441], "bcut2dfingerprint": 150, "bcw07": 460, "becaus": [44, 83, 153, 158, 215, 221, 250, 336, 412, 413, 419, 436, 442, 445, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 460], "becom": [215, 419, 441, 445, 447, 448, 456, 459, 462], "been": [26, 79, 80, 185, 253, 255, 257, 262, 266, 280, 282, 284, 286, 357, 397, 398, 439, 440, 441, 444, 446, 447, 452, 454, 460], "beeswarm": [94, 96, 451], "befor": [79, 187, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 332, 396, 399, 402, 408, 413, 439, 441, 442, 449, 450, 453, 455], "begin": [185, 407, 409, 427, 431, 454, 458], "behalf": 444, "behav": [414, 431, 456], "behavior": [158, 197, 439, 441, 449, 452, 454, 455, 460], "behind": [452, 456, 457, 458, 459], "being": [13, 16, 116, 348, 422, 440, 441, 448, 449, 453, 455], "bell": [302, 306, 424, 459], "belong": [412, 456], "below": [187, 290, 308, 409, 412, 413, 419, 442, 444, 445, 447, 448, 452, 456, 458, 459, 460], "benchmark": [439, 441, 443], "benefici": [444, 445, 449], "benefit": [448, 460], "benzo": 460, "bernoulli": [253, 421, 437, 443], "besid": [439, 452, 459], "best": [12, 13, 14, 16, 17, 244, 246, 248, 399, 422, 439, 449, 454], "bet": 447, "beta": [8, 22, 170, 253, 402, 441, 445], "betabernoullimultiarmedbanditsurrog": [402, 422, 441], "betaprior": [253, 441], "better": [10, 348, 398, 441, 447, 448, 450, 452, 453], "between": [13, 16, 34, 53, 153, 186, 213, 221, 276, 356, 412, 414, 419, 422, 424, 425, 429, 435, 436, 439, 441, 442, 446, 447, 448, 449, 452, 453, 454, 455, 456, 459, 460], "beyond": [158, 439, 451], "bias": 453, "bin": 419, "binar": 441, "binari": [298, 394, 431, 439, 440, 441, 456], "binarytarget": [299, 422, 441], "bind": [412, 414, 444], "bit": [441, 453], "black": [242, 457, 460], "blackbox": [395, 396, 437], "blank": 442, "blob": 278, "block": [413, 419, 439, 440, 441, 449, 456], "blue": 425, "bodi": 412, "bonilla": 460, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 94, 97, 98, 121, 126, 127, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 160, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 226, 253, 255, 257, 262, 266, 280, 282, 284, 286, 298, 299, 306, 307, 308, 311, 325, 326, 330, 331, 336, 337, 346, 351, 356, 358, 361, 364, 374, 393, 422], "boolean": [13, 16, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 98, 138, 139, 140, 142, 143, 145, 152, 153, 156, 160, 182, 184, 185, 186, 187, 358, 447, 449], "boost": [284, 436], "both": [10, 13, 16, 158, 159, 215, 221, 250, 308, 332, 396, 408, 413, 416, 419, 420, 422, 424, 425, 435, 436, 439, 441, 442, 445, 448, 451, 453, 455, 456, 458, 459, 462], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 189, 197, 199, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 404, 405, 414, 429, 435, 436, 441, 449, 454], "botorch_acqf": [26, 413, 414], "botorch_function_wrapp": 441, "botorchrecommend": [189, 199, 402, 407, 408, 409, 410, 413, 414, 416, 417, 422, 424, 429, 431, 432, 433, 439, 441, 446, 447, 448, 450, 454], "bottom": 447, "bound": [8, 22, 34, 44, 152, 158, 159, 176, 213, 215, 221, 226, 289, 304, 305, 326, 332, 358, 364, 365, 396, 402, 404, 405, 414, 420, 424, 425, 427, 428, 429, 435, 436, 441, 453, 456, 459, 461, 462], "boundari": [44, 221, 306, 307, 424], "boundary_onli": [221, 419], "bounded": 441, "bounds_transform_func": 441, "box": [176, 242, 457, 460], "brain": [457, 460], "branch": [439, 442], "break": [261, 456], "brettpho": [397, 398, 399, 401, 402], "briefli": [457, 460], "bring": [439, 441], "bro": 278, "broad": 456, "broadcast": 160, "brute": [197, 454], "bu": [397, 398, 399, 401, 402], "bucket": 419, "budget": 447, "bug": [441, 442], "build": [213, 221, 261, 413, 419, 440, 441, 442, 448, 451, 456, 458, 460, 461, 462], "built": [221, 416, 439, 442, 447, 454, 458], "builtin": 322, "bump": 441, "button": 441, "butyl": [397, 398, 399, 401, 402], "butylphenylphosphin": [397, 398, 399, 401, 402], "butyornitril": [397, 398, 399, 401, 402], "bypass": [159, 413, 458], "byte": [13, 16, 127, 160, 220, 262, 306, 307, 308, 368, 374, 441, 462], "c": [56, 316, 327, 397, 398, 399, 401, 402, 407, 408, 409, 410, 417, 419, 432, 433, 439, 440, 444, 447, 450, 453, 455, 456], "c1": [397, 398, 399, 401, 402, 407, 408, 409, 410, 453], "c1c2": [397, 398, 399, 401, 402], "c1ccccc1": [397, 398, 399, 407, 409], "c1ccoc1": 448, "c2": [397, 398, 399, 401, 402, 407, 409, 410], "c2ccccc2": [397, 398, 399], "c2oc": [397, 398, 399, 401, 402], "c2p": [397, 398, 399, 401, 402], "c3": [397, 398, 399, 401, 402, 407, 409], "c3c": [397, 398, 399], "c3ccccc3": [397, 398, 399, 401, 402], "c4": [397, 398, 399, 407, 409], "c4ccccc4": [397, 398, 399, 401, 402], "c5": [407, 409], "c6": [407, 409], "c_": 425, "c_g2_min": 420, "c_g3_max": 420, "c_i": 448, "c_total_sum": 420, "cach": [312, 441, 456, 461], "cached_recommend": 312, "calcul": [31, 312, 375, 404, 414, 435, 447, 449, 453, 455], "calibr": 460, "call": [45, 89, 182, 184, 185, 186, 187, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 312, 313, 332, 351, 397, 398, 399, 412, 417, 419, 420, 432, 433, 439, 440, 441, 445, 447, 448, 449, 453, 456, 457, 458, 460, 461], "callabl": [52, 71, 88, 159, 234, 242, 244, 246, 248, 250, 288, 289, 292, 293, 322, 328, 330, 332, 351, 396, 412, 425, 441, 461], "callable_": 330, "campaign": [94, 244, 247, 248, 250, 348, 350, 352, 400, 401, 409, 411, 414, 422, 433, 435, 436, 437, 438, 439, 441, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462], "campaign1": 457, "campaign2": 457, "campaign_json": 447, "campaign_oh": 398, "campaign_par": 425, "campaign_rand": [397, 398, 399], "campaign_recr": 431, "campaign_stop": 413, "campaign_with_hook": 413, "campaign_y0": 425, "campaign_y1": 425, "campaignstoppedexcept": 413, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 56, 94, 139, 145, 153, 156, 160, 179, 186, 189, 190, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 242, 246, 253, 255, 257, 258, 260, 261, 262, 266, 280, 282, 284, 286, 290, 299, 311, 313, 330, 332, 336, 348, 350, 351, 371, 396, 397, 398, 399, 402, 403, 406, 407, 408, 409, 412, 413, 414, 416, 417, 419, 420, 422, 424, 425, 427, 428, 429, 432, 435, 436, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462], "canada": 443, "candid": [12, 13, 14, 16, 17, 31, 207, 209, 213, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 413, 436, 441, 445, 454, 455, 461], "candidates_comp_rep": 413, "cannot": [15, 87, 88, 158, 261, 262, 290, 337, 422, 441, 444, 446, 448, 449, 453, 454, 456, 458, 460], "canon": [339, 456], "capabl": [395, 421, 423, 430, 434, 436, 441, 443, 447, 452, 458, 460], "captur": 453, "cardin": [34, 44, 51, 61, 63, 64, 65, 78, 197, 213, 439, 441, 443, 448], "cardinalityconstraint": [44, 51, 441], "care": [49, 419, 442, 448, 451, 452, 458], "carefulli": 449, "carlo": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 80, 248, 396, 398, 399, 413, 422, 435, 436, 441, 446, 457], "carri": [332, 412, 444, 452], "cartesian": [215, 221, 222, 223, 439, 441, 450, 455], "case": [158, 186, 250, 290, 332, 348, 359, 413, 418, 419, 428, 429, 432, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 453, 456, 457, 458, 459, 460, 462], "cast": [45, 441], "cat": 356, "cat_1": 424, "cat_1_22": 424, "cat_1_33": 424, "cat_2": 424, "catch_constant_target": 441, "categor": [31, 142, 143, 147, 221, 228, 357, 439, 441, 453, 455, 459], "categori": [398, 413, 439, 441, 456, 459], "categorical_1": [424, 447], "categorical_2": [424, 447], "categorical_paramet": 456, "categorical_parameter_json": 456, "categorical_parameter_reconstruct": 456, "categoricalencod": [142, 143, 407, 408, 409, 410, 424, 431], "categoricalparamet": [143, 221, 398, 407, 408, 409, 410, 417, 422, 424, 431, 432, 433, 439, 441, 450, 451, 455, 456, 461], "cattr": [233, 234, 236, 433, 440, 441, 442], "cauchi": 172, "caus": [153, 316, 322, 441, 444], "caution": 460, "cc": [397, 398, 399, 401, 402, 407, 409, 410, 419, 453, 460], "cc1": [397, 398, 399, 401, 402, 453], "ccc": [407, 409, 417, 439], "cccc": [397, 398, 399, 401, 402, 407, 409], "ccccc": [407, 409, 432, 433], "cccccc": [407, 409], "cccccccco": [448, 453], "ccccoc": [397, 398, 399, 401, 402], "cco": 419, "ccoccoccn": [432, 433], "cdot": [448, 452], "ceil": 413, "cell": [416, 453, 457, 460], "cell_lin": 460, "center": [306, 308, 364, 424, 425, 447], "center_y0": 425, "center_y1": 425, "central": [441, 447], "certain": [31, 53, 88, 187, 234, 236, 242, 313, 329, 348, 408, 413, 422, 439, 442, 448, 450, 451, 454, 456, 460, 462], "cesium": [397, 398, 399, 401, 402], "chai": 460, "chain": [38, 182, 184, 185, 186, 187, 322, 448], "challeng": [442, 456], "chanc": 440, "chang": [53, 185, 348, 349, 350, 402, 419, 428, 439, 440, 442, 444, 447, 449, 451, 453, 455, 460], "charact": 444, "characterist": 322, "charg": 444, "chebyshev": 12, "check": [31, 61, 138, 139, 140, 142, 143, 145, 152, 153, 156, 160, 312, 329, 331, 334, 335, 336, 337, 357, 364, 373, 428, 429, 431, 439, 441, 442, 449, 451, 455, 456], "check_maximum": 61, "check_minimum": 61, "checker": 441, "checkout": 442, "chem": [439, 441, 453], "chemic": [341, 398, 401, 419, 441, 443, 448, 451, 453, 460], "cheminformat": [156, 439, 441], "chemistri": [145, 407, 409, 410], "child": [204, 205, 206, 207, 442], "chocol": 442, "choic": [244, 246, 381, 412, 419, 422, 429, 441, 448, 450, 452, 453, 454, 455, 456, 459], "choos": [180, 419, 420, 422, 424, 427, 428, 429, 438, 439, 444, 445, 447, 454, 458, 459], "chose": [428, 456], "chosen": [76, 189, 244, 246, 250, 377, 378, 402, 422, 441, 445, 448, 453, 455], "christoph": 460, "ci": [405, 435, 436, 441, 442], "circular": 453, "circumv": [440, 456], "cl": [49, 124, 231, 235, 290, 325, 326, 331, 336, 366], "claim": 444, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 87, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 125, 126, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 219, 220, 221, 234, 236, 237, 238, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 318, 319, 321, 322, 324, 325, 326, 331, 336, 340, 346, 362, 364, 379, 380, 383, 384, 402, 412, 413, 416, 422, 432, 441, 447, 448, 451, 452, 453, 454, 455, 456, 458], "classic": [422, 452], "classifi": 453, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 322, 364, 441], "classvalidationerror": [433, 440], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 253, 255, 257, 262, 266, 280, 282, 284, 286], "clean": [353, 354, 355, 440, 441, 442], "clear": [371, 460], "click": [422, 453], "clone": 442, "close": [244, 250, 301, 396, 413, 435, 436, 457], "closer": [13, 16, 373, 453], "closest": 374, "closest_el": 441, "closur": [242, 457], "cluster": [204, 205, 206, 207, 402, 441, 443, 461], "clustering_x": 441, "cmap": 414, "cn": [397, 398, 399, 401, 402], "co": 419, "co1": [397, 398, 399], "co2": [397, 398, 399], "co3": [397, 398, 399], "coars": [417, 431, 432, 433, 439], "coc": [417, 432, 433, 439], "cococ": [432, 433], "code": [261, 398, 417, 422, 428, 432, 433, 439, 440, 441, 444, 448, 449, 453, 457, 460, 462], "coeffici": [45, 47, 48, 404, 405, 420, 448], "coerc": 441, "collect": [31, 63, 64, 65, 104, 114, 115, 135, 159, 161, 169, 185, 187, 213, 221, 227, 228, 239, 246, 260, 314, 316, 318, 329, 330, 358, 379, 381, 396, 402, 414, 419, 422, 425, 435, 436, 439, 441, 447, 449], "color": [414, 425], "column": [40, 41, 42, 94, 121, 126, 127, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 159, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 244, 246, 248, 250, 316, 317, 349, 351, 353, 354, 355, 356, 357, 358, 359, 361, 384, 393, 394, 398, 401, 407, 408, 409, 410, 413, 419, 424, 425, 431, 435, 436, 441, 447, 455, 456, 457], "column_group": 317, "com": [278, 333, 355, 439, 441], "comb": 419, "combin": [44, 54, 159, 197, 213, 215, 221, 222, 223, 322, 341, 397, 398, 399, 407, 409, 412, 413, 419, 424, 439, 440, 444, 448, 450, 451, 452, 453, 454, 455, 457, 460, 462], "combinatori": [197, 462], "combine_func": 118, "come": [13, 16, 422, 439, 447, 448, 451, 456, 460, 462], "command": 440, "comment": 441, "commerci": 444, "commit": [439, 441, 442], "common": [169, 416, 420, 441, 442, 444, 447, 448, 453, 456], "commonli": 452, "commun": [444, 452, 460], "comp_df": [139, 142, 143, 145, 153, 156, 441], "comp_rep": [221, 414, 416, 441, 455], "comp_rep_bound": [213, 215, 221, 441], "comp_rep_byt": [220, 462], "comp_rep_column": [138, 139, 140, 142, 143, 145, 152, 153, 156, 213, 215, 221, 441], "comp_rep_human_read": [220, 462], "comp_rep_shap": [220, 462], "comp_rep_tensor": [413, 414], "compar": [159, 185, 396, 419, 420, 422, 425, 435, 439, 441, 442, 448, 450, 453, 459], "comparison": [413, 425, 435, 436, 454, 456], "compat": [117, 123, 135, 159, 189, 192, 195, 197, 198, 199, 202, 204, 205, 206, 207, 209, 210, 215, 216, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 332, 358, 392, 402, 407, 408, 409, 410, 412, 414, 424, 431, 441, 454, 458], "compens": 441, "compil": [440, 444], "complain": 442, "complaint": 442, "complement": [31, 356, 450], "complementari": 44, "complet": [414, 419, 446, 448, 450, 452, 456], "complex": [13, 16, 127, 160, 306, 307, 308, 374, 419, 431, 435, 436, 442, 445, 446, 448, 450, 457, 460], "compli": 444, "complianc": 439, "complic": [419, 460], "compon": [69, 419, 420, 442, 445, 447, 448, 449, 450, 456, 458, 460], "compos": [113, 260, 441, 456], "composit": [102, 114, 115, 116, 260, 461], "composite_a": 458, "composite_b": 458, "compositekernel": [114, 115, 116, 441], "compositesurrog": [253, 255, 257, 262, 266, 280, 282, 284, 286, 441, 458], "compound": 341, "comprehens": [439, 458], "compress": 456, "comput": [13, 16, 26, 31, 84, 94, 98, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 213, 215, 220, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 290, 296, 298, 304, 342, 375, 407, 408, 409, 410, 412, 419, 420, 424, 425, 431, 441, 444, 445, 447, 449, 453, 455, 456, 457, 461, 462], "computation": 197, "compute_ref_point": [13, 16], "concat": [404, 405, 413, 414, 424, 425, 428, 429, 435, 436], "concentr": [170, 171, 397, 398, 399, 401, 402, 407, 412, 413, 448], "concentrati": 407, "concentration_valu": 413, "concept": [316, 419, 452, 453, 456], "concis": 441, "concret": [441, 456], "conda": 441, "condit": [34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 348, 356, 398, 404, 408, 409, 410, 419, 425, 439, 441, 444, 460, 461], "conduct": [31, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 397, 398, 399, 439, 442, 447, 460], "confid": [8, 22, 402], "config": [416, 417, 430, 437, 441, 461], "config_json": 31, "configur": [13, 16, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 82, 83, 179, 186, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 242, 244, 250, 253, 255, 257, 258, 260, 262, 266, 272, 280, 282, 284, 286, 348, 381, 400, 401, 419, 426, 429, 433, 439, 440, 441, 444, 445, 446, 447, 448, 449, 453, 454, 455, 457, 459, 460, 461, 462], "confirm": 414, "conflict": [439, 442, 452], "conform": [156, 342, 453], "confront": [422, 439, 450], "conjunct": 458, "connect": [57, 348, 441, 449, 453, 459], "consequ": [399, 440, 448, 449, 454, 455, 457, 458], "consequenti": 444, "consid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 126, 139, 142, 143, 145, 153, 156, 158, 160, 185, 197, 215, 248, 348, 357, 358, 396, 419, 422, 424, 435, 436, 439, 441, 442, 446, 448, 450, 451, 452, 453, 456, 462], "consider": [215, 446], "consist": [180, 220, 414, 442, 444, 451], "consol": 440, "consolid": [441, 454], "consortium": 443, "conspicu": 444, "constant": [282, 290, 307, 424, 441, 442, 453, 455], "constitut": 444, "constrain": [441, 448, 459, 460], "constraint": [31, 34, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 140, 197, 213, 215, 221, 319, 416, 417, 424, 431, 432, 433, 437, 439, 441, 443, 449, 453, 461], "constraint_1": 409, "constraint_2": 409, "constraint_3": 409, "constraints_augment": 215, "constraints_cardin": 213, "constraints_lin_eq": 213, "constraints_lin_ineq": 213, "constraints_nonlin": 213, "constru": 444, "construct": [31, 213, 215, 221, 262, 292, 396, 425, 427, 435, 436, 439, 441, 445, 448, 451, 456, 458, 461], "constructor": [204, 205, 206, 207, 215, 235, 280, 284, 286, 419, 427, 432, 433, 441, 445, 447, 450, 452, 453, 458, 461, 462], "consult": 439, "consum": [185, 412], "consumpt": 449, "cont_ind": 429, "cont_indic": [428, 429], "cont_paramet": 429, "cont_recommend": [189, 429], "contact": [439, 443], "contain": [13, 16, 31, 34, 40, 41, 42, 44, 65, 68, 73, 94, 121, 126, 127, 131, 133, 135, 139, 142, 143, 145, 153, 156, 158, 159, 160, 164, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 222, 223, 227, 242, 244, 246, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 296, 298, 304, 306, 307, 308, 316, 317, 332, 342, 346, 348, 350, 356, 357, 364, 375, 381, 393, 394, 398, 399, 413, 414, 420, 422, 429, 435, 436, 440, 441, 442, 444, 447, 448, 450, 451, 454, 455, 456, 457, 462], "content": [159, 185, 215, 246, 349, 382, 441, 444, 456], "context": [158, 182, 184, 185, 186, 187, 242, 258, 260, 378, 412, 422, 427, 435, 436, 441, 447, 450, 451, 453, 456, 457, 458, 460, 462], "contextu": 460, "continu": [10, 15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 73, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 189, 197, 213, 215, 216, 221, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 402, 404, 407, 408, 409, 410, 420, 424, 425, 426, 429, 431, 437, 439, 441, 447, 449, 450, 454, 456, 457, 461], "continuous_subspac": 455, "continuouscardinalityconstraint": [63, 64, 213, 441, 461], "continuousconstraint": [37, 45, 213, 441, 448, 450], "continuouslinearconstraint": [213, 404, 405, 420, 441, 461], "continuouslinearequalityconstraint": 441, "continuouslinearinequalityconstraint": 441, "continuousnonlinearconstraint": [44, 213, 441], "continuousparamet": [152, 213, 441], "contour": 425, "contract": 444, "contrast": [221, 336, 420, 422, 446, 450, 452], "contribut": [439, 441, 444, 462], "contributor": [439, 444], "contributori": 444, "control": [13, 15, 16, 21, 159, 170, 197, 213, 221, 358, 424, 428, 439, 441, 444, 445, 448, 449, 452, 453, 454, 459, 461], "convei": 456, "conveni": [441, 455, 456, 458], "convent": 215, "converg": 451, "convers": [31, 186, 416, 427, 441, 444, 451, 458, 461], "convert": [28, 122, 217, 230, 323, 333, 337, 341, 344, 345, 359, 360, 365, 368, 371, 417, 432, 433, 441, 447, 449, 456, 457], "convert_sklearn": 416, "convert_sklearn_bayesian_ridg": 416, "convertibletofloat": [13, 16, 323], "cooki": 442, "coordin": [13, 16, 381], "copi": [158, 253, 255, 257, 262, 266, 280, 282, 284, 286, 413, 439, 441, 444, 462], "copyright": [439, 444], "core": [31, 213, 215, 216, 221, 248, 250, 253, 255, 257, 258, 260, 262, 266, 273, 280, 282, 284, 286, 402, 439, 441, 450, 459], "coregion": 460, "coretest": [441, 442], "corpu": 453, "correct": [31, 293, 414, 439, 441, 442, 456], "correctli": [419, 429, 441], "correl": [145, 156, 355, 453, 460], "correspond": [26, 31, 44, 121, 126, 131, 133, 158, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 234, 242, 244, 246, 253, 255, 256, 257, 262, 266, 280, 282, 284, 286, 306, 312, 332, 335, 337, 340, 341, 348, 351, 352, 358, 359, 361, 393, 394, 396, 401, 402, 419, 422, 425, 429, 435, 436, 439, 441, 442, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "correspondingli": 31, "corrupt": 350, "cost": [398, 422], "costli": [215, 218, 224, 447], "could": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 153, 344, 402, 412, 413, 419, 420, 436, 441, 446, 448, 453, 457, 459, 460], "count": [313, 413, 419, 448], "counterclaim": 444, "counterpart": [332, 455], "coupl": 414, "cours": [435, 436, 442, 456, 460], "cousin": 448, "cov": [441, 442], "cover": [336, 348, 448, 450], "coverag": [441, 442], "cp": [397, 398, 399], "craft": 457, "crash": [440, 441], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 94, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 159, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 222, 223, 238, 246, 253, 255, 257, 258, 260, 262, 266, 269, 274, 280, 282, 284, 286, 296, 298, 304, 346, 348, 351, 352, 364, 381, 401, 412, 413, 414, 419, 420, 425, 429, 430, 437, 438, 439, 440, 441, 442, 448, 449, 450, 451, 453, 456, 457, 458, 459, 461, 462], "create_example_plot": [396, 398, 413, 414, 435, 436, 441], "create_from_config": [416, 417], "create_pi_plot": 414, "creation": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 159, 218, 221, 224, 408, 410, 416, 417, 455, 456, 461], "criteria": 414, "criterion": [413, 445], "critic": 441, "cross": [435, 444], "crucial": [439, 459], "cube": 448, "cuda": 440, "cultur": [453, 460], "curran": 460, "current": [10, 31, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 248, 250, 261, 311, 371, 413, 414, 419, 445, 447, 448, 449, 450, 453, 457, 459, 460, 462], "curv": [306, 414, 424, 448, 459], "custom": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 138, 139, 140, 142, 143, 145, 148, 152, 153, 156, 159, 262, 293, 296, 298, 304, 332, 359, 395, 402, 406, 413, 422, 429, 437, 439, 441, 448, 453, 454, 457, 460, 461, 462], "custom_blackbox": 396, "custom_conversion_funct": 416, "custom_filt": 448, "custom_funct": 407, "customari": 444, "customconstraint": 407, "customdiscreteparamet": [441, 451, 461], "customdisreteparamet": 441, "customencod": 145, "customonnxsurrog": [402, 416, 441], "cycl": [185, 439, 441, 450], "cyclic": 185, "d": [13, 16, 26, 56, 127, 316, 327, 375, 381, 414, 417, 432, 433, 435, 436, 439, 444, 455, 460], "d401": 407, "damag": 444, "daniel": 443, "darmstadt": [439, 443, 449], "dashboard": 441, "data": [13, 15, 16, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 72, 86, 94, 98, 126, 131, 133, 145, 153, 156, 179, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 244, 248, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 298, 304, 313, 315, 319, 348, 350, 357, 370, 371, 382, 386, 393, 394, 395, 396, 401, 402, 404, 405, 407, 408, 409, 410, 413, 417, 419, 424, 425, 428, 431, 432, 433, 435, 436, 437, 438, 439, 441, 445, 446, 447, 448, 449, 451, 453, 454, 456, 457, 458, 461, 462], "data_typ": 416, "databas": [31, 424, 439, 456], "dataclass": [412, 422], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 86, 94, 98, 121, 126, 131, 133, 139, 142, 143, 145, 153, 156, 159, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 222, 223, 226, 240, 241, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 298, 304, 312, 316, 317, 341, 342, 382, 393, 394, 396, 397, 401, 402, 407, 408, 409, 410, 413, 414, 416, 417, 419, 420, 424, 425, 428, 431, 435, 436, 441, 446, 447, 448, 450, 453, 461, 462], "datapoint": 441, "dataset": [185, 242, 457], "datatyp": 441, "date": 444, "dditiv": 451, "de": [233, 430, 439, 440, 441, 442, 447, 448, 454, 461], "deactiv": [439, 441, 449], "deal": [399, 446, 453, 457], "debug": 441, "decid": [153, 419, 422, 429, 445], "declar": [53, 57, 65, 207, 408, 442, 448], "decod": 416, "decor": [116, 290, 322, 351, 412, 441, 442, 457], "decorrel": [145, 156, 163, 432, 433, 453], "decreas": [185, 307, 424, 456, 460], "deduc": [404, 405, 428], "dedupl": 441, "deep": 413, "deepcopi": 441, "deeper": 451, "deepli": 458, "def": [396, 407, 412, 413, 414, 419, 422, 425, 435, 442, 448, 457], "default": [13, 16, 42, 94, 126, 145, 156, 159, 189, 195, 197, 204, 205, 206, 207, 213, 215, 221, 233, 253, 273, 276, 356, 396, 397, 399, 402, 417, 424, 429, 439, 441, 442, 447, 448, 449, 451, 452, 453, 461], "default_campaign": 396, "default_model": 262, "defaultkernelfactori": [402, 407, 408, 409, 410, 424, 431], "defaultscal": 441, "defend": 444, "defin": [26, 31, 41, 44, 45, 52, 148, 158, 179, 185, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 221, 242, 266, 268, 269, 293, 350, 355, 356, 384, 397, 398, 399, 401, 407, 408, 409, 410, 416, 417, 422, 427, 441, 442, 444, 447, 448, 450, 453, 456, 457, 459], "definit": [213, 221, 336, 420, 425, 439, 441, 444, 452, 455], "degener": [349, 364, 441], "degr": 431, "degre": 456, "degree_c": [416, 417, 431], "deliber": 444, "delici": 442, "deliveri": 453, "demand": [31, 436], "demo": 441, "demonstr": [395, 396, 397, 400, 403, 406, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 426, 430, 431, 434, 435, 436, 441, 452, 455, 456, 460], "denot": 26, "densiti": 414, "depend": [53, 57, 85, 118, 215, 221, 242, 307, 316, 398, 402, 406, 419, 420, 427, 437, 438, 440, 441, 442, 448, 449, 450, 451, 455, 457, 458, 459, 460, 462], "dependenciesconstraint": 441, "deprec": [67, 150, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 221, 226, 263, 322, 407, 409, 410], "deprecationwarn": [407, 409, 410, 413], "depth": 455, "deriv": [204, 205, 206, 207, 221, 336, 444, 448, 455], "descend": 307, "describ": [204, 205, 206, 207, 253, 255, 257, 262, 266, 280, 282, 284, 286, 402, 407, 412, 413, 420, 422, 424, 425, 442, 444, 446, 447, 448, 452, 453, 456, 457], "descript": 442, "descriptor": [156, 342, 441, 451, 453, 460], "deseri": [231, 235, 240, 431, 440, 441, 447, 461], "deserialize_datafram": 456, "design": [0, 21, 26, 244, 351, 412, 416, 419, 422, 444, 445, 448, 450, 451, 452, 454, 456], "desir": [118, 126, 129, 352, 423, 424, 437, 439, 441, 445, 449, 451, 452, 454, 456, 459, 462], "desirabilityobject": [31, 424, 439, 441, 447, 456, 458, 461], "desktop": 441, "despit": 441, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 166, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 244, 248, 253, 255, 257, 258, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 296, 298, 304, 309, 310, 356, 361, 364, 384, 397, 399, 404, 405, 424, 429, 438, 439, 440, 441, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460], "detect": [319, 357, 440, 442], "determin": [13, 16, 31, 44, 94, 124, 187, 221, 336, 356, 368, 373, 381, 397, 419, 422, 441, 444, 449, 454], "determinist": 381, "detriment": 453, "dev": [439, 441, 442], "develop": [439, 441, 446, 453, 457], "deviat": [6, 18, 290, 357, 416, 441, 447], "df": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 121, 126, 131, 133, 159, 213, 215, 221, 226, 241, 246, 316, 317, 341, 349, 353, 354, 355, 356, 358, 359, 361, 382, 396, 407, 422, 439, 448, 455, 456, 457], "df_y": 425, "dfa": [316, 317], "di": [397, 398, 399, 401, 402, 443], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 124, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 204, 205, 206, 207, 213, 215, 218, 221, 224, 234, 235, 236, 238, 248, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 310, 327, 330, 342, 348, 364, 384, 413, 416, 435, 436, 441], "dict_bas": [397, 398, 399, 401, 402], "dict_ligand": [397, 398, 399, 401, 402], "dict_solv": [397, 398, 399, 401, 402, 407, 408, 409, 410, 419, 448], "dictat": [121, 126, 131, 133, 197, 215, 435, 436], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 234, 236, 238, 248, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 290, 296, 298, 304, 327, 330, 348, 364, 397, 398, 399, 401, 453, 457], "diff": 442, "differ": [13, 16, 55, 126, 197, 213, 215, 216, 221, 242, 250, 312, 317, 348, 350, 384, 398, 407, 412, 419, 422, 424, 425, 428, 429, 435, 436, 439, 441, 442, 444, 446, 447, 448, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460], "differenti": [457, 460], "difficult": 460, "digit": 359, "dilemma": 422, "dim": [26, 404, 405, 414, 416, 428, 429, 435, 436], "dimens": [26, 381, 396, 404, 405, 414, 416, 427, 428, 435, 436, 441, 453, 455, 458, 460], "dimension": [13, 16, 127, 138, 139, 140, 142, 143, 145, 152, 153, 156, 276, 351, 381, 396, 435, 436, 441], "dimethylisoxazol": 460, "direct": [13, 16, 397, 398, 399, 401, 439, 441, 444, 450, 453, 462], "directli": [13, 16, 336, 436, 439, 441, 448, 452, 456, 458], "directori": [429, 441], "disabl": [253, 255, 257, 262, 266, 280, 282, 284, 286, 311, 407, 409, 410, 441, 447, 450], "disadvantag": 456, "disappear": 441, "disc_ind": 429, "disc_indic": [428, 429], "disc_paramet": 429, "disc_recommend": [189, 429], "discard": [8, 419], "disclaim": 444, "discourag": 447, "discret": [15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 73, 138, 139, 140, 142, 143, 145, 152, 153, 156, 189, 197, 204, 205, 206, 207, 209, 213, 215, 216, 220, 221, 250, 380, 401, 404, 410, 413, 414, 416, 424, 426, 429, 431, 436, 437, 439, 441, 445, 450, 451, 454, 456, 457, 461, 462], "discrete_param": [414, 435, 436], "discrete_spac": [404, 405, 429], "discrete_subspac": 455, "discretecardinalityconstraint": [441, 461], "discreteconstraint": [31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 221, 441, 448, 450], "discretecust": 407, "discretecustomconstraint": [407, 441, 461], "discretedep": 408, "discretedependenciesconstraint": [57, 65, 408, 419, 461], "discreteexcl": 409, "discreteexcludeconstraint": [409, 441, 450, 461], "discretelinkedparametersconstraint": [441, 461], "discretenolabelduplicatesconstraint": [57, 419, 441, 461], "discreteparamet": [153, 221, 222, 223, 441], "discretepermutationinvarianceconstraint": [419, 461], "discreteprod": 410, "discreteproductconstraint": [410, 441, 461], "discretesamplingmethod": [15, 197, 382, 441, 445], "discretesumc": 410, "discretesumconstraint": [404, 410, 419, 441, 461], "discuss": [424, 444, 448, 455, 457], "disjoint": 221, "disk": [441, 461], "dispatch": 117, "displai": [359, 413, 444], "distanc": [153, 381], "distinct": [412, 447, 454], "distinguish": [349, 419, 441, 448, 453, 460], "distribut": [31, 166, 169, 253, 255, 257, 262, 266, 280, 282, 284, 286, 419, 424, 429, 439, 441, 444, 445, 446, 458], "distutil": 337, "div": 416, "divers": 458, "divid": 420, "divis": 375, "dll": 440, "dmac": [397, 398, 399, 401, 402], "dmf": 448, "do": [63, 215, 221, 261, 412, 416, 417, 419, 422, 429, 431, 432, 433, 435, 438, 439, 440, 444, 446, 448, 449, 450, 451, 453, 454, 456, 460, 461, 462], "do_baybe_work": 449, "doc": [99, 166, 322, 439, 441], "doc101": 442, "doc103": 442, "docstr": 441, "doctest": 441, "document": [31, 371, 416, 439, 441, 442, 443, 444, 447, 451, 457], "doe": [30, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 94, 158, 197, 242, 244, 246, 248, 253, 255, 257, 261, 262, 266, 280, 282, 284, 286, 293, 332, 341, 357, 371, 399, 402, 413, 416, 417, 419, 432, 433, 435, 436, 441, 442, 444, 448, 452, 454, 457, 458, 460, 462], "doi": [278, 355], "domain": [253, 255, 257, 262, 266, 280, 282, 284, 286, 396, 439, 441, 455, 457], "don": [438, 450], "done": [31, 356, 357, 399, 401, 407, 408, 409, 410, 416, 417, 424, 431, 441, 445, 447, 448, 449, 450], "doubl": [371, 442, 449], "down": [456, 462], "downsid": 186, "draft": 441, "dramat": 460, "drastic": 453, "draw": [10, 111, 213, 420, 422, 427], "draw_arm": 422, "drawback": 452, "drawn": [21, 197], "drive": [414, 460], "driven": [348, 445], "driver": 440, "drop": [353, 354, 355, 413, 441, 448], "dry_run": 31, "dtype": [13, 16, 127, 160, 306, 307, 308, 374], "due": [158, 313, 436, 439, 441, 445, 448, 449, 453, 454, 455, 456, 459], "duplic": [57, 165, 319, 327, 441, 448], "dure": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 215, 221, 242, 330, 381, 419, 422, 435, 436, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 455, 456, 457, 458], "dynam": [422, 441, 456, 461], "d\u00fcbendorf": 443, "e": [8, 21, 26, 31, 34, 44, 53, 55, 56, 73, 94, 97, 145, 159, 160, 187, 215, 221, 242, 313, 319, 325, 326, 342, 348, 356, 357, 364, 389, 397, 398, 399, 417, 419, 420, 422, 439, 440, 441, 442, 445, 446, 448, 449, 451, 453, 454, 455, 456, 457, 460, 462], "e3fp": 150, "e3fpfingerprint": 150, "each": [13, 16, 21, 31, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 121, 126, 131, 133, 159, 179, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 215, 244, 246, 248, 250, 253, 255, 257, 261, 262, 266, 280, 282, 284, 286, 317, 342, 348, 349, 357, 396, 398, 399, 402, 414, 419, 420, 422, 424, 425, 429, 435, 436, 442, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462], "eagerli": 441, "earli": [413, 441], "earlier": [31, 438, 440], "earn": 422, "earned_reward": 422, "easi": [341, 442, 456], "easier": [442, 462], "easiest": [439, 442], "easili": [413, 439, 442, 447, 450, 453, 455, 456, 460], "ecfp": [150, 398, 441, 453], "ecfpfingerprint": 150, "ecosystem": 456, "edbo": [276, 278, 355, 441], "edbokernelfactori": [276, 441], "edg": 158, "edit": [439, 442], "editor": 460, "editori": 444, "edwin": 460, "effect": [55, 182, 184, 185, 186, 187, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 412, 413, 422, 436, 441, 445, 448, 453, 454, 457, 460, 462], "effici": [221, 419, 439, 441, 455], "effortlessli": 457, "ei": [3, 402], "either": [26, 31, 216, 244, 250, 266, 290, 357, 398, 409, 424, 429, 439, 444, 452, 453, 454, 455, 457, 458], "elabor": 444, "elaps": 412, "elapsedtimeprint": 412, "electron": [443, 444], "electroshap": 150, "electroshapefingerprint": 150, "eleg": [435, 456], "element": [40, 41, 42, 52, 160, 250, 319, 329, 335, 346, 373, 374, 419, 435, 436, 441, 448, 457], "elev": 414, "elif": [428, 429], "elimin": [442, 445], "els": [336, 337, 396, 397, 398, 399, 404, 405, 407, 408, 410, 413, 414, 422, 425, 428, 429, 435, 436], "elsewher": 416, "emd": 443, "emdgroup": [309, 439], "emelin": 443, "emerg": 447, "empir": 422, "emploi": [31, 422, 454], "employe": [439, 449], "empow": 458, "empti": [98, 213, 215, 221, 228, 317, 332, 341, 356, 359, 393, 394, 419, 424, 429, 431, 441, 455], "empty_encod": [215, 221], "emptysearchspaceerror": 228, "emul": [21, 440, 441], "en": [99, 166], "enabl": [186, 311, 312, 397, 398, 399, 419, 435, 439, 440, 441, 447, 448, 449, 450, 451, 452, 454, 456, 457, 459, 460], "encod": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 152, 153, 156, 215, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 340, 342, 397, 398, 399, 401, 402, 407, 408, 409, 410, 413, 417, 419, 422, 424, 431, 432, 433, 435, 436, 439, 441, 448, 455, 456, 460], "encompass": 447, "encount": [158, 182, 184, 185, 186, 187, 381, 440, 441, 442, 452], "end": [0, 308, 364, 413, 417, 422, 424, 431, 444, 448, 456], "endeavor": 445, "endpoint": [441, 449], "enforc": [372, 387, 441, 442, 453], "engin": [440, 454, 456, 457, 462], "enhanc": [26, 439], "enlarg": 453, "enough": [213, 456], "ensembl": 288, "ensur": [158, 159, 397, 398, 399, 419, 420, 439, 448, 456, 457], "enter": [77, 221, 455], "entir": [312, 364, 382, 441, 442, 445, 449, 462], "entiti": 444, "entri": [38, 41, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 236, 253, 255, 257, 262, 266, 280, 282, 284, 286, 317, 348, 357, 382, 399, 407, 408, 409, 410, 419, 438, 441, 448, 449, 450, 451, 459, 462], "enum": [129, 147, 148, 149, 150, 216, 273, 301, 302, 321, 380, 441, 456], "enumer": [128, 146, 300, 414, 435, 436, 452], "env": [441, 442], "envar_nam": 449, "environ": [311, 372, 387, 396, 397, 398, 399, 405, 407, 408, 410, 413, 414, 416, 422, 425, 435, 436, 439, 440, 441, 442, 461], "envvar": 309, "envvar_nam": 449, "eq": [407, 419], "equal": [45, 126, 187, 213, 422, 424, 431, 441, 448, 452, 455, 456, 459], "equat": [45, 448, 457], "equidist": 453, "equip": 448, "equival": [21, 34, 57, 405, 427, 445, 448, 457], "erg": 150, "ergfingerprint": 150, "erron": 441, "error": [185, 195, 197, 244, 246, 248, 263, 330, 375, 399, 417, 422, 440, 441, 448, 452, 454], "esian": 439, "especi": 442, "essenti": [447, 454], "establish": [413, 435, 436, 460], "estat": 150, "estatefingerprint": 150, "ester": [397, 398, 399, 401, 402], "estim": [215, 220, 221, 253, 422, 441, 458, 461], "estimate_product_space_s": [215, 221, 462], "estimated_win_r": 422, "estimation_bia": 422, "estimation_vari": 422, "et": [398, 439, 453], "etc": [40, 41, 42, 140, 215, 296, 460], "ethanol": [419, 448], "euclidean": 381, "eval_during_augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_cr": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_model": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "evalu": [26, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 288, 289, 337, 428, 429, 441, 447, 449, 454, 457, 460], "even": [187, 290, 354, 435, 436, 444, 446, 447, 449, 453, 457, 458, 460, 462], "event": [31, 312, 413, 444], "everi": [446, 462], "everyth": [442, 448], "evolv": [414, 442], "ex": 451, "exabyt": 462, "exact": [31, 357, 412, 440, 441, 448, 452, 453, 458], "exactexplain": [92, 95, 451], "exactli": [13, 16, 44, 121, 126, 131, 133, 215, 419, 441, 446, 447, 455, 456], "exampl": [13, 16, 158, 159, 246, 316, 317, 327, 336, 356, 395, 396, 400, 403, 406, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 425, 426, 427, 430, 434, 435, 436, 440, 441, 442, 443, 444, 446, 447, 448, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462], "example_input_nam": 416, "exceed": 413, "exceedingli": 457, "except": [31, 332, 341, 345, 362, 363, 397, 398, 399, 413, 417, 432, 433, 439, 440, 441, 444, 450, 458], "excepthook": 440, "exceptiongroup": [63, 441], "excess": 462, "exclud": [31, 56, 353, 407, 408, 409, 410, 424, 431, 441, 444, 448, 461], "exclude_list": 355, "exclus": [54, 406, 437, 441, 444, 448, 457, 461], "execut": [31, 67, 244, 332, 396, 398, 440, 441, 442, 444, 449, 456, 457, 460], "exemplari": 447, "exercis": 444, "exhaust": [185, 197, 451, 454], "exist": [31, 116, 215, 312, 322, 332, 419, 440, 441, 442, 445, 447, 448, 450, 456, 458, 460], "exp_rep": [221, 407, 408, 409, 410, 419, 455], "exp_rep_byt": [220, 462], "exp_rep_human_read": [220, 462], "exp_rep_shap": [220, 462], "expect": [3, 4, 9, 11, 13, 14, 16, 17, 52, 258, 260, 268, 332, 351, 402, 408, 414, 416, 419, 420, 422, 433, 441, 442, 447, 448, 451, 452, 453, 456, 457, 459, 462], "expens": [10, 197, 404, 457], "experi": [0, 31, 179, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 397, 398, 399, 401, 402, 428, 429, 441, 445, 447, 448, 450, 452, 453, 454, 459, 460, 461], "experiment": [31, 98, 121, 126, 131, 133, 139, 142, 143, 145, 153, 156, 179, 182, 183, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 215, 220, 221, 242, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 296, 298, 304, 348, 350, 407, 408, 409, 410, 414, 424, 431, 439, 441, 445, 446, 448, 450, 452, 453, 455, 456, 457, 459, 460, 461, 462], "experimentalist": 438, "explain": [72, 93, 94, 95, 97, 98, 414, 441, 443, 458, 461], "explainer_cl": [94, 98, 451], "explan": [94, 98, 441, 447, 458], "explanation_index": [94, 451], "explicit": [159, 186, 412, 413, 417, 419, 427, 432, 433, 441, 442, 452, 456, 458, 460, 461], "explicitli": [213, 221, 412, 429, 436, 444, 450, 455, 460], "exploit": [8, 21, 422, 441], "explor": [8, 31, 422, 445, 454, 455, 460], "exploratori": 445, "exponenti": 221, "expos": [31, 412, 441], "exposur": 441, "expr": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "express": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 439, 441, 444, 448], "extend": [158, 450, 453, 460], "extens": [441, 454], "extra": [398, 439, 440, 441], "extract": [31, 182, 184, 185, 186, 187, 358, 414, 435, 451, 461], "extract_pi": 414, "f": [337, 396, 397, 398, 399, 404, 405, 407, 408, 409, 410, 412, 413, 414, 419, 420, 424, 427, 428, 429, 435, 436, 462], "f1": 457, "f2": 457, "fabian": 443, "face": [253, 255, 257, 262, 266, 280, 282, 284, 286, 420, 422], "facilit": 454, "fact": [21, 414, 419, 438, 448, 452], "factor": [13, 16, 159, 439, 447, 448, 462], "factori": [159, 213, 266, 267, 268, 269, 270, 276, 278, 328, 402, 407, 408, 409, 410, 424, 431, 441], "fail": [429, 433, 440, 441, 458], "failur": [298, 444], "failure_valu": 298, "fairli": 452, "fake": [246, 348, 352, 401, 402, 416, 417, 424, 441, 446, 457, 461], "fall": [158, 187, 413, 447, 459], "fallback": [124, 221, 366, 416, 441, 455], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 94, 98, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 184, 185, 186, 187, 213, 215, 221, 226, 253, 255, 257, 262, 266, 280, 282, 284, 286, 298, 307, 325, 326, 330, 336, 337, 346, 351, 356, 358, 361, 393, 402, 407, 408, 409, 410, 424, 431, 432, 433, 439, 441, 449], "famili": 448, "familiar": [397, 398, 399, 402, 404, 405, 407, 408, 409, 410, 416, 417, 424, 428, 429, 431], "fang": 443, "fantasi": 10, "far": 447, "farthest": [209, 380, 381, 402, 439, 441, 443, 445, 454], "farthest_point_sampl": 441, "fashion": [306, 308], "fast": [407, 409, 410, 455, 459], "faster": 221, "fault": 89, "faulti": 440, "favicon": 441, "favor": 441, "fc": [397, 398, 399], "feasibl": [75, 447, 451], "featur": [94, 111, 156, 355, 439, 440, 441, 442, 448, 451, 458, 460], "fed": [439, 451], "feder": 443, "fee": 444, "feed": [425, 438, 439, 450, 460], "feedback": 443, "feel": 413, "few": [396, 422, 441, 442, 445, 453, 456, 458, 460, 462], "field": [235, 345, 346, 441, 460, 461], "fifti": 444, "fig": [414, 425], "figsiz": 425, "figur": 414, "file": [397, 398, 399, 416, 417, 429, 439, 441, 444, 449, 456, 460], "filenotfounderror": [397, 398, 399, 413], "fill": [31, 246, 414], "filler": 448, "filter": [31, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 215, 221, 353, 356, 407, 419, 441, 448, 450, 455, 460, 462], "filter_attribut": 441, "filter_df": [31, 441], "filterwarn": 413, "final": [396, 398, 401, 413, 419, 436], "find": [215, 330, 374, 439, 445, 447, 448, 452, 460], "fine": [417, 431, 432, 433, 439], "finer": [159, 439], "fingerprint": [150, 156, 340, 342, 439, 441, 443, 453], "finish": 446, "finit": [185, 242, 250, 363, 389, 422, 453, 457], "first": [215, 248, 373, 381, 396, 398, 401, 402, 407, 412, 413, 416, 417, 419, 424, 425, 429, 433, 435, 436, 439, 440, 441, 447, 448, 452, 453, 454, 455, 460, 462], "fit": [31, 207, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 382, 384, 397, 398, 399, 407, 408, 409, 410, 416, 424, 431, 441, 444, 448, 453, 458], "fit_gpytorch_ml": 441, "fit_gpytorch_mll_torch": 441, "fitnr": 424, "fitzner": [439, 443], "fix": [242, 269, 413, 414, 419, 422, 425, 428, 429, 442, 447, 453, 457, 460, 462], "flag": [26, 31, 53, 94, 98, 121, 126, 131, 133, 197, 215, 216, 221, 351, 358, 438, 441, 447, 449, 450, 451, 454], "flake8": 441, "flexibl": [412, 427, 441, 456, 457], "flexibli": [452, 454], "float": [8, 13, 15, 16, 22, 31, 42, 44, 45, 47, 48, 105, 106, 107, 108, 109, 110, 111, 112, 116, 118, 126, 127, 145, 152, 153, 156, 160, 163, 164, 170, 171, 172, 173, 174, 175, 176, 197, 220, 221, 244, 248, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 290, 298, 299, 306, 307, 308, 313, 323, 344, 348, 349, 350, 355, 364, 368, 370, 371, 373, 374, 375, 386, 389, 390, 391, 412, 414, 416, 422, 424, 441, 442, 447, 461], "float64": 386, "floattensortyp": 416, "fly": [186, 456, 458], "fn": 322, "focu": 447, "focus": [133, 425, 429, 439], "folder": [398, 439, 442, 449, 458], "follow": [160, 182, 184, 185, 186, 187, 215, 244, 246, 248, 397, 398, 399, 402, 404, 405, 407, 408, 409, 410, 412, 413, 417, 422, 424, 429, 432, 433, 435, 436, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "footprint": [10, 215], "forbid": 392, "forc": [94, 96, 158, 197, 441, 442, 451, 454], "forest": [285, 286], "forgiv": 459, "fork": 442, "form": [221, 242, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 348, 438, 439, 444, 445, 447, 452, 453, 454, 455, 456, 457, 462], "formal": [420, 438], "format": [45, 310, 359, 365, 368, 416, 417, 431, 432, 439, 440, 441, 442, 447, 449, 456, 457], "format_except": 440, "former": [419, 441], "formul": 460, "formula": 419, "forrest": 441, "found": [87, 159, 213, 221, 330, 340, 371, 374, 413, 419, 424, 439, 440, 442, 447, 448, 454, 460], "foundat": 454, "four": 419, "fourier": 111, "fourth": 448, "fp": [380, 441, 445], "fp_size": [150, 453], "fpsrecommend": [402, 416, 417, 431, 432, 433, 439, 446, 454], "frac": [436, 452], "frac1": 408, "fraction": [15, 106, 344, 413, 445, 448, 449], "fraction1": 408, "fraction_1": 448, "fraction_2": 448, "fraction_3": 448, "fractur": 448, "frame": [350, 451, 462], "frame1": 408, "frame2": 408, "frame_1": 448, "frame_2": 448, "framea": 408, "framea_a": 408, "frameb": 408, "framework": [447, 453], "free": [442, 444, 449], "freedom": 456, "freeli": 419, "frequenc": 111, "frequent": 422, "fresh": 413, "frictionless": 456, "friendli": 441, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 150, 152, 153, 156, 158, 159, 166, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 238, 246, 248, 250, 253, 255, 257, 260, 262, 266, 269, 274, 278, 280, 282, 284, 286, 290, 296, 298, 304, 307, 308, 332, 336, 337, 341, 350, 351, 353, 355, 364, 375, 382, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 420, 422, 424, 425, 427, 428, 429, 430, 431, 433, 435, 436, 437, 438, 440, 442, 444, 445, 446, 448, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462], "from_bound": [213, 441, 455], "from_campaign": [94, 451], "from_config": [31, 432, 433, 447], "from_datafram": [213, 215, 221, 441, 450, 455, 456, 462], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 364, 416], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 364, 416, 417, 431, 447, 456], "from_paramet": [213, 215, 221, 441], "from_preset": 266, "from_product": [213, 215, 221, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 420, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 439, 441, 448, 450, 455, 456, 457], "from_recommend": [94, 451], "from_record": [456, 457], "from_repl": [260, 458], "from_simplex": [221, 419, 441, 450, 455, 462], "from_surrog": [94, 451], "front": 452, "frontier": 425, "frozenset": [44, 213, 419], "fsspec": 441, "fulfil": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 413, 419, 420], "full": [26, 213, 371, 395, 437, 441, 447, 450, 451, 453, 460, 461], "full_factori": 213, "full_lik": 414, "full_lookup": [397, 398, 399], "fulli": [419, 439, 441, 449, 450, 457], "fulltest": 442, "func": 442, "func_nam": 435, "funci": 441, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 39, 45, 46, 52, 60, 62, 70, 80, 89, 91, 94, 110, 117, 120, 123, 125, 130, 132, 134, 157, 158, 162, 195, 197, 198, 214, 219, 225, 229, 230, 238, 239, 242, 243, 245, 247, 248, 249, 254, 261, 267, 272, 287, 291, 292, 295, 302, 305, 306, 307, 308, 309, 312, 313, 315, 318, 334, 338, 343, 347, 350, 352, 357, 358, 359, 362, 367, 369, 376, 379, 388, 401, 407, 408, 409, 410, 412, 414, 419, 422, 425, 431, 435, 436, 439, 440, 441, 445, 447, 448, 450, 452, 454, 455, 457, 458, 459, 460, 462], "function_nam": [435, 436], "functionalgroup": 150, "functionalgroupsfingerprint": 150, "fundament": [453, 456], "furo": 441, "further": [13, 16, 357, 419, 420, 431, 439, 446, 450, 454, 455, 458, 460, 461], "furthermor": 424, "furyl": [397, 398, 399], "futur": [57, 215, 261, 407, 409, 410, 413, 435, 451, 459], "fuzzi": 312, "fuzzy_row_match": [312, 441], "g": [53, 55, 56, 73, 94, 97, 145, 159, 215, 221, 319, 342, 357, 422, 439, 440, 441, 442, 445, 446, 448, 449, 451, 453, 454, 455, 457, 462], "g1": 420, "g2": 420, "g3": 420, "gain": [221, 447, 451], "gamma": 171, "gammaprior": 441, "garbag": 441, "gather": [187, 435, 436, 445, 460], "gaussian": [99, 204, 255, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 306, 402, 424, 441, 448, 454, 460], "gaussian_kd": 414, "gaussian_process": [101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 266, 268, 269, 273, 276, 278, 402, 441], "gaussianmixtureclusteringrecommend": 454, "gaussianprocesspreset": [266, 274], "gaussianprocesssurrog": [274, 402, 407, 408, 409, 410, 414, 424, 431, 432, 433, 441, 458], "gcf": [397, 399], "ge": 405, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 149, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 253, 255, 257, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 296, 298, 304, 310, 336, 342, 349, 364, 376, 384, 396, 402, 412, 419, 425, 438, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462], "geom_mean": [118, 126, 129, 424, 452], "geometr": [129, 375, 424, 452], "germani": [439, 443, 449], "get": [31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 195, 197, 213, 266, 348, 402, 413, 419, 428, 429, 438, 439, 441, 446, 461, 462], "get_absolute_threshold": [44, 441], "get_candid": [221, 413], "get_cmap": 414, "get_comp_rep_parameter_indic": [215, 441], "get_current_recommend": [182, 184, 185, 186, 187, 441], "get_integration_point": 15, "get_invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_invalid_polar": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_lin": 413, "get_next_recommend": [182, 184, 185, 186, 187, 441], "get_non_meta_recommend": [182, 184, 185, 186, 187, 441], "get_parameters_by_nam": [213, 215, 221], "get_parameters_from_datafram": [213, 221], "get_subclass": 402, "get_surrog": [31, 94, 195, 197, 441, 451, 458], "get_transform_object": [361, 441], "get_transform_paramet": 441, "get_valid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 441], "getawai": 150, "getawayfingerprint": 150, "ghosecrippen": 150, "ghosecrippenfingerprint": 150, "git": [439, 442], "github": [278, 309, 333, 355, 416, 441, 442, 443], "give": [416, 417, 419, 436, 444, 447, 448, 452, 456], "given": [13, 16, 29, 31, 34, 40, 41, 42, 44, 65, 87, 94, 97, 98, 121, 126, 131, 133, 135, 156, 158, 159, 160, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 227, 242, 246, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 290, 301, 313, 317, 325, 326, 330, 331, 332, 335, 336, 339, 340, 344, 346, 348, 351, 358, 364, 365, 373, 375, 381, 384, 407, 408, 409, 410, 413, 419, 422, 424, 429, 435, 436, 441, 447, 455, 457, 458], "glass_transition_tempc": 453, "global": [15, 377, 441, 461, 462], "gmean": 375, "gmm": 204, "go": [316, 419, 439], "goal": [396, 422, 452, 460], "goe": 458, "good": [348, 413, 424, 447, 449, 459], "good_interv": 348, "good_reference_valu": 348, "goodwil": 444, "googl": [441, 442], "govern": 439, "gp": [253, 255, 257, 262, 266, 280, 282, 284, 286, 441], "gpytorch": [99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 166, 168, 170, 171, 172, 173, 174, 175, 176, 441], "grab": 438, "gradient": [10, 197, 284, 441, 449, 454], "grant": [441, 444], "granular": [417, 431, 432, 433, 439], "granularity_coar": 431, "granularity_fin": 431, "great": [422, 456], "greater": [187, 197], "greatli": 442, "greedi": [197, 441, 454], "grid": [425, 435, 436], "grid_d": [435, 436], "grossli": 444, "ground": 441, "group": [197, 317, 327, 384, 420, 439, 441, 447, 451], "groupbi": [248, 250], "grow": 462, "gt": [410, 419], "gu16": 453, "guarante": [441, 448, 449, 454], "guid": [401, 439, 440, 441, 442, 445, 447, 450, 452, 455, 457, 460], "guidelin": [441, 442, 445], "ha": [53, 75, 79, 80, 94, 185, 213, 215, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 316, 330, 332, 336, 349, 381, 382, 398, 402, 407, 408, 409, 410, 419, 424, 429, 431, 439, 441, 442, 444, 446, 447, 448, 451, 453, 455, 456, 457, 459, 460], "had": [242, 448, 453, 457], "half": [153, 172, 173, 364, 429, 446], "halfcauchyprior": 441, "halfnormalprior": 441, "hamster": 460, "hand": [45, 156, 420, 422, 425, 435, 436, 439, 447, 456, 458], "handi": 448, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 94, 131, 140, 244, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 362, 407, 408, 422, 424, 441, 447, 452, 462], "happen": [86, 185, 424, 429, 436, 440, 441, 442, 455, 456, 460], "happili": 452, "hard": [441, 460, 462], "harmless": 444, "hartmann": [414, 435, 436], "hasattr": [404, 405, 428, 429], "hash": [310, 439, 449, 453], "hashabledict": 441, "have": [26, 31, 38, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 121, 126, 131, 133, 156, 158, 207, 215, 242, 261, 293, 317, 327, 330, 348, 357, 358, 371, 397, 398, 401, 402, 407, 408, 412, 414, 419, 420, 422, 424, 428, 429, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 450, 452, 453, 454, 456, 457, 458, 460, 462], "head": 441, "header": 346, "heart": 460, "heatmap": [94, 96], "help": [422, 456, 457, 460], "helper": [412, 414, 416, 419, 456], "henc": [341, 419, 422, 431, 448, 453, 462], "here": [56, 371, 397, 399, 401, 404, 405, 412, 413, 417, 419, 420, 428, 429, 431, 435, 436, 438, 439, 440, 446, 448, 450, 452, 453, 454, 455, 456, 457, 459, 460], "herebi": 444, "herein": [444, 447], "heurist": 197, "hierarch": 456, "hierarchi": [87, 441, 442, 447, 456], "high": [276, 396, 422, 441, 442, 445, 447, 448, 453, 456], "higher": [156, 422, 440, 448, 451, 454], "highest": [445, 456], "highlight": 460, "hint": 442, "histogram": 313, "histor": 453, "histori": 442, "hoc": 452, "hold": [44, 327, 444, 456], "home": [407, 409, 410], "homepag": [439, 441], "hood": 453, "hook": [49, 124, 221, 230, 234, 332, 437, 440, 441, 442], "hopp": [439, 443], "host": [439, 441, 449], "hostnam": [310, 449], "hot": [147, 398, 422, 439, 441, 453], "how": [54, 244, 246, 357, 381, 396, 397, 399, 400, 401, 402, 403, 406, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 429, 431, 432, 433, 436, 439, 447, 448, 449, 452, 457, 458, 459, 460], "howev": [159, 221, 261, 332, 412, 419, 422, 428, 429, 438, 440, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 460, 462], "hrovatin": 443, "html": [99, 166, 309, 322, 371, 416, 441], "http": [99, 166, 278, 309, 322, 333, 355, 371, 439, 441, 444, 460], "hue": [396, 397, 398, 399, 413, 435, 436], "human": [220, 368, 431, 441, 443, 456], "hybrid": [25, 26, 73, 188, 189, 197, 210, 215, 216, 402, 403, 407, 408, 409, 410, 424, 426, 431, 437, 439, 441, 454, 455], "hybrid_recommend": 429, "hybrid_sampl": [197, 454], "hyperrectangl": [213, 455], "hypervolum": [13, 16], "hypothesi": [439, 441, 442], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 72, 73, 77, 79, 80, 81, 83, 94, 97, 98, 113, 116, 127, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 160, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 228, 242, 244, 246, 248, 250, 253, 255, 257, 258, 260, 261, 262, 266, 276, 280, 282, 284, 286, 290, 293, 301, 306, 307, 308, 311, 312, 313, 317, 320, 321, 322, 325, 326, 330, 332, 333, 335, 336, 337, 340, 341, 346, 348, 349, 350, 351, 352, 356, 357, 358, 359, 363, 364, 371, 373, 374, 381, 382, 389, 393, 394, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 420, 422, 424, 428, 429, 431, 432, 433, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462], "ideal": [446, 448, 457], "ident": [159, 316, 317, 450, 453, 456, 460], "identif": 422, "identifi": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 248, 327, 341, 357, 358, 413, 441, 448, 451, 452, 453, 455, 456, 457, 460], "idx_offset": 45, "ignor": [121, 126, 131, 133, 185, 197, 215, 244, 246, 248, 330, 355, 399, 413, 429, 441, 448, 456, 462], "ignore_exampl": 441, "ignore_list": 354, "ii": 444, "iii": 444, "illustr": [425, 427, 450], "iloc": 446, "imag": [422, 441], "imagin": [419, 422], "immedi": [412, 447], "immut": 441, "impact": [398, 436, 449], "imperfect": 350, "implement": [21, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 127, 179, 190, 250, 258, 334, 407, 413, 419, 435, 441, 442, 443, 445, 451, 454, 455, 457, 460], "impli": [419, 439, 444, 448, 453], "implicitli": 456, "import": [13, 16, 85, 94, 126, 246, 413, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462], "impos": [419, 420, 448], "imposs": [439, 449, 450, 456], "improv": [3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 402, 405, 411, 413, 437, 439, 441, 444, 449], "imput": [244, 246, 395, 399, 437, 439], "impute_mod": [244, 246, 248, 399, 457], "inabl": [439, 444], "inaccuraci": 439, "inact": [44, 158, 160, 197, 213, 441], "inactive_parameter_combin": [44, 213, 441], "inc": 460, "incident": 444, "includ": [63, 65, 121, 126, 131, 133, 158, 187, 244, 325, 326, 354, 397, 408, 417, 419, 432, 433, 436, 441, 442, 444, 445, 446, 448, 450, 462], "inclus": 444, "incom": 456, "incompat": [69, 70, 71, 72, 73, 74, 98, 262, 409, 448], "incompatibilityerror": 31, "incompatibleacquisitionfunctionerror": 446, "incompatibleexplainererror": 451, "incomplet": 441, "inconsist": 441, "incorpor": [444, 446, 458, 462], "incorrect": 441, "incorrectli": 441, "increas": [10, 185, 248, 307, 308, 424, 435, 436, 441, 445, 453, 460], "increment": 221, "incur": 444, "inde": 447, "indefinit": [185, 244], "indemn": 444, "indemnifi": 444, "indent": [346, 441], "independ": [189, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 416, 441, 454, 457, 458], "independentgaussiansurrog": [262, 280, 282, 284, 441], "index": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 215, 248, 260, 316, 317, 356, 357, 416, 417, 424, 429, 431, 441, 451, 453, 455, 457], "indexkernel": 441, "indic": [13, 16, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 94, 97, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 160, 182, 184, 185, 186, 187, 215, 253, 255, 257, 262, 266, 280, 282, 284, 286, 316, 317, 320, 321, 351, 381, 419, 429, 441, 444, 450, 454, 457, 458], "indirect": [325, 326, 444], "indistinguish": 419, "individu": [53, 54, 114, 115, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 244, 260, 359, 413, 420, 425, 444, 447, 450, 452, 454, 460], "induc": [44, 422], "industri": 460, "ineffici": 221, "inequ": [45, 213, 455], "inf": [8, 407, 408, 409, 410, 431], "infeas": [448, 450], "infer": [159, 262, 435, 436, 441, 455], "inferencesess": 262, "infin": 164, "infinit": [185, 186, 328, 363, 389, 390, 441, 453], "influenti": 460, "info": [313, 441], "inform": [26, 140, 296, 358, 397, 398, 399, 414, 419, 428, 429, 436, 439, 441, 442, 444, 446, 449, 450, 453, 455, 460, 461], "infring": 444, "ingest": [221, 244, 453, 454], "ingredi": [419, 420, 448], "inher": [21, 158, 253, 255, 257, 262, 266, 280, 282, 284, 286, 419, 458], "inherit": 442, "init": 292, "initi": [105, 106, 107, 108, 109, 110, 111, 112, 116, 187, 189, 197, 204, 205, 206, 207, 209, 221, 244, 248, 312, 381, 395, 407, 408, 409, 410, 413, 414, 424, 431, 436, 437, 441, 443, 447, 449, 453, 454, 456, 457, 460], "initial_data": [244, 248, 397, 436, 457], "initial_recommend": [187, 402, 413, 414, 416, 417, 422, 431, 432, 433, 439, 454], "initial_recommender_cl": 441, "initial_strategi": 441, "initial_typ": 416, "inject": 456, "inner": [180, 356, 451, 454, 456], "inplac": [398, 435, 436, 462], "input": [40, 41, 42, 127, 139, 142, 143, 145, 153, 156, 213, 215, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 296, 298, 304, 306, 327, 344, 345, 350, 351, 352, 356, 364, 366, 373, 381, 393, 394, 396, 416, 424, 425, 435, 436, 441, 452, 456, 457, 460], "input_dim": 416, "input_label": 351, "inputtransform": 384, "insid": [413, 416, 417, 440, 456], "insight": [94, 413, 439, 441, 443, 461], "inspect": [336, 412, 419], "instabl": [441, 448], "instal": [441, 442, 449, 451, 453, 462], "instanc": [40, 41, 42, 53, 56, 94, 187, 215, 348, 408, 413, 419, 420, 439, 440, 442, 446, 447, 448, 449, 451, 453, 455, 456, 457, 462], "instanti": [262, 413, 447], "instead": [182, 184, 185, 186, 187, 312, 341, 351, 407, 409, 410, 439, 440, 441, 447, 448, 452, 453, 456, 457, 459, 460, 462], "institut": [443, 444], "instruct": [439, 441, 459, 461], "instrument_nam": 313, "int": [10, 13, 15, 16, 21, 31, 34, 44, 45, 51, 94, 101, 102, 103, 106, 108, 109, 110, 111, 112, 121, 126, 127, 131, 133, 147, 160, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 244, 248, 250, 298, 299, 306, 307, 308, 313, 352, 359, 374, 377, 378, 381, 382, 384, 407, 409, 410, 419, 422, 424, 436, 442, 453], "integ": [34, 147, 215, 248, 429, 441, 442, 453], "integr": [15, 441, 442, 445, 447], "intend": [401, 412, 435, 442, 454], "intens": 453, "intention": 444, "interact": [30, 31, 401, 439, 440, 447, 450, 456], "interchang": 419, "interconnect": 447, "interest": [447, 451, 452, 453, 462], "interfac": [179, 258, 268, 412, 414, 441, 444, 447, 450, 451], "intermedi": [207, 381], "intern": [31, 45, 57, 185, 396, 413, 424, 441, 448, 449, 453, 454, 455, 456], "internet": 439, "internship": 443, "interplai": 441, "interpol": [106, 276, 441], "interpret": [13, 16, 215, 242, 344, 417, 419, 432, 433, 436, 449, 455, 457], "interrupt": 67, "intersect": 429, "interv": [31, 44, 152, 158, 160, 253, 255, 257, 262, 266, 280, 282, 284, 286, 304, 306, 307, 308, 424, 441, 447, 453, 456, 459], "intrins": 460, "introduc": [440, 441, 448, 453, 454, 457], "intuit": [447, 451], "invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 76, 221, 341, 382, 417, 432, 440, 447, 448, 455], "invalid_config": 433, "invalid_surrogate_model": 417, "invalid_typ": 433, "invari": [53, 56, 57, 316, 317, 448], "invers": [234, 456], "invert": [31, 356], "investig": [242, 457, 458], "invok": [457, 461, 462], "involv": [31, 221, 260, 412, 419, 439, 449, 451, 452, 453, 456, 460], "io": 309, "irrelev": [419, 441, 448], "irrevoc": 444, "is_bound": [364, 441], "is_cardinality_fulfil": 441, "is_continu": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 139, 140, 142, 143, 145, 152, 153, 156], "is_degener": 364, "is_discret": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 139, 140, 142, 143, 145, 152, 153, 156], "is_empti": [213, 221, 441], "is_eq": 45, "is_finit": 441, "is_fully_unbound": 364, "is_half_bound": 364, "is_in_rang": [138, 139, 140, 142, 143, 145, 152, 153, 156], "is_inact": 441, "is_left_bound": 364, "is_mc": 441, "is_multi_output": [121, 126, 131, 133, 441], "is_numer": [138, 139, 140, 142, 143, 145, 152, 153, 156, 441], "is_right_bound": 364, "is_stat": [182, 184, 185, 186, 187, 441, 450], "iso": 416, "isoxazol": 460, "issu": [261, 322, 333, 441, 444, 457, 462], "item": [41, 138, 139, 140, 142, 143, 145, 152, 153, 156, 419, 422, 435, 436, 453], "iter": [13, 16, 31, 44, 152, 185, 186, 213, 215, 244, 261, 304, 323, 328, 348, 350, 352, 365, 393, 394, 397, 407, 408, 409, 410, 413, 414, 422, 435, 436, 439, 441, 445, 447, 453, 454, 457, 458, 462], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 213, 215, 221, 238, 250, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 313, 316, 324, 332, 336, 348, 364, 368, 396, 402, 412, 414, 419, 420, 422, 436, 439, 440, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462], "itself": [253, 255, 257, 262, 266, 280, 282, 284, 286, 412, 435, 440, 460], "j": [398, 439, 453, 460], "jackiepho": [397, 398, 399], "januari": 444, "javadi": 443, "jin": 443, "join": [356, 440], "joint": [260, 447, 458], "jointli": [425, 447], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 364, 416, 417, 431, 432, 441, 461], "json_str": 456, "juli": 443, "julian": 443, "jump": [441, 460], "jupyt": 416, "just": [422, 438, 442, 456], "k": [153, 205, 381, 396, 397, 398, 399, 401, 402, 404, 405, 413, 419, 425, 427, 428, 429, 441, 450, 454, 462], "karin": 443, "kde": 414, "keep": [52, 156, 213, 221, 413, 441, 442], "kei": [327, 348, 398, 442, 451], "kept": [356, 453, 458], "kernel": [101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 266, 267, 268, 269, 270, 276, 278, 402, 407, 408, 409, 410, 424, 431, 441, 448, 460], "kernel_factori": [101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 266, 268, 269], "kernel_or_factori": 266, "kernelexplain": [92, 94, 95, 98, 451], "kernelfactori": [266, 269, 270, 276, 278, 441], "keyword": [94, 156, 399, 402, 429, 436, 441, 446, 448, 455, 457], "kgaa": [439, 443, 449], "kian": 460, "kickstart": 456, "kind": [197, 439, 441, 444, 448, 453, 454], "kiter": [407, 408, 409, 410, 424], "klekotaroth": 150, "klekotarothfingerprint": 150, "kmean": 402, "kmeansclusteringrecommend": [402, 454], "knob": 439, "know": [422, 432, 439, 440, 452, 456, 460], "knowledg": [8, 10, 439, 441, 460], "known": [448, 450, 458, 460], "koller": 460, "kwarg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 105, 107, 109, 114, 115, 116, 168, 170, 171, 172, 173, 174, 175, 176, 179, 199, 258, 263, 268, 342, 352, 363], "kwargs_conform": [156, 342, 453], "kwargs_fingerprint": [156, 342, 453], "l0": 34, "l1": 453, "l664": 278, "label": [56, 57, 145, 156, 313, 351, 419, 420, 425, 439, 441, 448, 450, 455, 457], "labelpad": 414, "laboratori": 425, "laggner": 150, "laggnerfingerprint": 150, "lambda": [407, 409, 410, 413, 419, 435, 458], "lanat": 451, "land": 441, "languag": [322, 420, 439], "larg": [156, 221, 404, 405, 420, 441, 449, 453, 457, 462], "larger": [106, 153, 382, 402, 409, 447, 448, 456, 460], "largest": [381, 422, 445], "last": [185, 422, 442, 447, 454], "last_call_tim": 412, "lastli": 414, "latent": 453, "later": [153, 440, 447, 456], "latest": [186, 439, 442, 447], "latter": [21, 31, 316, 336, 413, 419, 447, 452, 460], "law": [439, 444], "lawsuit": 444, "layer": 150, "layeredfingerprint": 150, "layout": 441, "lazi": [223, 385, 441], "lazili": [441, 449], "lazyfram": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 223], "le": 405, "le_method": 442, "lead": [84, 424, 441, 456], "lean": 442, "learn": [15, 249, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 402, 407, 408, 409, 410, 422, 424, 431, 435, 437, 439, 441, 448, 451, 453, 458, 459, 461], "least": [160, 185, 420, 439, 444, 446, 447], "leav": 456, "lee": 443, "left": [81, 82, 176, 244, 349, 357, 364, 408, 425, 441, 452], "left_df": 357, "leftov": 441, "legal": 444, "legend": [397, 399, 425], "len": [408, 413, 414, 419, 420, 422], "length": [107, 185, 186, 253], "lengthi": 447, "lengthscal": [106, 107, 108, 110, 111, 112], "lengthscale_initial_valu": [106, 107, 108, 110, 111, 112], "lengthscale_prior": [106, 107, 108, 110, 111, 112], "leq": 34, "less": [8, 317, 352, 413, 414, 422, 447, 462], "let": [396, 398, 412, 413, 414, 416, 417, 419, 420, 425, 427, 436, 439, 448, 452, 456], "level": [350, 441, 442, 446, 447, 448, 454, 456], "leverag": [413, 447, 454], "li": [160, 453], "liabil": 444, "liabl": 444, "lib": 440, "librari": 440, "licensor": 444, "lie": [31, 253, 255, 257, 262, 266, 280, 282, 284, 286, 348], "liebig": 443, "life": [439, 442, 443, 462], "lifecycl": 447, "ligand": [397, 398, 399, 401, 402, 413, 439, 451, 453], "ligand_data": 413, "ligand_smil": 413, "like": [13, 16, 160, 207, 248, 319, 414, 419, 422, 439, 440, 441, 442, 446, 447, 448, 450, 456, 457, 460, 462], "likelihood": 253, "lime": [94, 97, 451], "limetabular": [92, 93, 451], "limit": [8, 276, 313, 414, 439, 443, 444, 448, 455, 461], "line": [346, 364, 397, 399, 413, 422, 441, 442, 445, 447, 453, 457, 460], "linear": [45, 105, 213, 280, 302, 307, 402, 403, 424, 437, 441, 442, 451, 455, 459], "linear_model": 416, "linear_regressor": 416, "linearkernel": 441, "linearli": [276, 307, 308, 424, 441], "lineplot": [396, 397, 398, 399, 413, 435, 436], "lingo": 150, "lingofingerprint": 150, "link": [55, 440, 441, 444, 453], "linspac": [407, 408, 409, 410, 414, 416, 417, 419, 425, 428, 429, 431, 435, 436, 462], "lint": [439, 441, 442], "linter": [441, 442], "list": [34, 35, 36, 37, 38, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 118, 159, 165, 185, 186, 213, 215, 221, 222, 223, 226, 227, 228, 244, 248, 250, 312, 325, 326, 327, 335, 342, 348, 353, 354, 355, 358, 381, 397, 402, 407, 408, 409, 410, 414, 419, 420, 422, 424, 428, 429, 436, 439, 441, 442, 444, 448, 452, 453, 454, 455, 457], "liter": [31, 94, 118, 185, 244, 246, 248, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 350, 381, 442], "literatur": 441, "litig": 444, "littl": 440, "live": 458, "liver": [457, 460], "ll": 450, "load": [385, 413, 416, 432, 433, 440, 441], "loc": [174, 175, 397, 399, 425], "local": [440, 442, 449, 451, 461], "locat": [13, 16, 174, 175, 446, 449, 460], "lockfil": 441, "log": [174, 313, 402, 439, 449], "logarithm": [4, 11, 13, 14, 375], "logei": [4, 441], "logic": [180, 260, 348, 351, 396, 441, 448, 454, 457, 462], "lognormalprior": 441, "logo": 441, "long": [447, 456, 457], "longer": [158, 441], "look": [246, 402, 419, 422, 440, 445, 447, 448, 450, 451, 456, 457, 459], "look_up_target": 244, "lookup": [242, 244, 248, 250, 351, 357, 395, 396, 414, 425, 428, 437, 441, 451, 461], "lookup_df": 246, "lookup_test_task": 436, "lookup_training_task": 436, "lookup_valu": [404, 405, 414, 428, 429], "lookup_withmiss": 399, "loop": [242, 244, 250, 407, 408, 409, 410, 413, 424, 441, 446, 451, 457, 462], "loss": 444, "lost": 456, "lot": 427, "low": [276, 422, 440, 441, 451, 453, 456], "lower": [160, 176, 306, 307, 308, 364, 397, 399, 414, 424, 435, 436, 448, 453, 459], "lower_bound": 455, "lower_threshold": 160, "lst_exclud": 353, "lt": 440, "luxuri": 447, "m": 419, "m1": 440, "mac": 440, "macc": 150, "maccsfingerprint": 150, "machin": [422, 439, 440, 442, 445, 449, 453, 459, 460], "machineri": [21, 197, 440, 442, 450, 460, 462], "made": [85, 244, 381, 399, 439, 440, 444, 448, 449, 457], "magic": 460, "magnitud": [349, 350, 462], "mai": [31, 44, 121, 126, 131, 133, 215, 332, 438, 439, 444, 447, 450, 456, 457, 458], "mail": 444, "main": [30, 31, 439, 441], "maintain": [290, 442, 450, 452], "major": [441, 457], "make": [57, 197, 253, 255, 257, 262, 266, 280, 282, 284, 286, 288, 289, 290, 322, 349, 351, 397, 399, 402, 404, 419, 420, 439, 440, 441, 442, 444, 446, 447, 448, 450, 451, 453, 456, 458, 460, 462], "make_explainer_for_surrog": 94, "malfunct": 444, "manag": [30, 213, 214, 215, 221, 378, 441, 444, 457], "mandatori": [438, 441, 459], "mani": [197, 382, 419, 428, 429, 439, 447, 453, 456, 459, 460], "manipul": [441, 449], "manner": 449, "manual": [429, 440, 441, 456, 458], "map": [145, 150, 156, 246, 248, 260, 306, 307, 308, 330, 351, 384, 397, 398, 399, 424, 457, 459], "mapfingerprint": 150, "mapl": [92, 93, 94, 97, 451], "margin": 441, "mark": [444, 447, 460, 461], "markdown": [417, 432, 433, 441], "marker": [396, 397, 398, 399, 413, 435, 436, 441], "markers": [396, 398, 413, 425, 435, 436], "market": 422, "marketplac": 441, "martin": [439, 443], "mask_bad1": 407, "mask_bad2": 407, "mask_bad3": 407, "mask_good": [407, 448], "mass": 170, "master": 278, "match": [31, 86, 88, 139, 142, 143, 145, 153, 156, 159, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 296, 298, 301, 304, 312, 330, 332, 357, 358, 393, 412, 414, 424, 429, 439, 441, 446, 447, 450, 452, 456, 457, 461], "match_attribut": 441, "match_targeta": 459, "match_targetb": 459, "materi": [422, 443, 460], "matern": 106, "maternkernel": 441, "math": [413, 419], "mathemat": 441, "matmin": 440, "matplotlib": [397, 399, 414, 425, 441], "matter": [419, 427, 442, 452], "max": [246, 301, 349, 397, 398, 399, 401, 402, 407, 408, 409, 410, 413, 414, 416, 417, 422, 424, 425, 431, 432, 433, 439, 441, 452, 456, 457, 461], "max_cardin": [34, 44, 51, 448], "max_column": [359, 419], "max_colwidth": 359, "max_n_subspac": [197, 441, 448], "max_nonzero": 221, "max_row": [359, 419], "max_sum": [221, 419, 455], "max_target": 459, "max_yield": [397, 399], "maxim": [6, 13, 16, 301, 401, 414, 422, 424, 439, 441, 451, 459], "maximum": [6, 34, 44, 51, 61, 156, 197, 213, 215, 221, 306, 359, 419, 420, 424, 441, 448, 453, 455], "mc": [422, 446], "md": 441, "me2pph": [397, 398, 399], "mean": [5, 8, 21, 31, 57, 118, 129, 205, 242, 244, 246, 248, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 290, 375, 399, 402, 416, 422, 424, 425, 441, 442, 444, 445, 446, 447, 448, 450, 452, 453, 454, 456, 458, 461], "meaning": 452, "meaningless": [419, 445], "meanpredictionsurrog": [290, 402, 458], "meantim": [442, 448], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 94, 158, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 244, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 296, 298, 304, 312, 348, 352, 357, 397, 398, 399, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 424, 428, 429, 431, 438, 439, 441, 442, 445, 446, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461], "mechan": [31, 67, 126, 127, 129, 242, 245, 246, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 332, 356, 366, 381, 396, 412, 413, 414, 435, 436, 441, 444, 450, 451, 453, 455, 456, 458, 460, 461], "mechanist": 439, "media": [444, 453, 460], "mediocr": 459, "medium": [417, 431, 439, 444, 453], "medoid": [206, 441, 454], "meet": [348, 444], "mem_estim": 462, "member": [336, 448, 453], "memori": [10, 215, 220, 221, 441, 449, 461], "memorys": [215, 221, 462], "mention": 445, "merchant": 444, "merck": [439, 443, 449], "mere": [444, 452], "merg": 442, "meshgrid": [425, 435, 436], "messag": [86, 413], "meta": [31, 81, 182, 184, 185, 186, 187, 190, 407, 408, 409, 410, 424, 431, 439, 441, 461], "metadata": [31, 213, 221, 310, 441], "metarecommend": [184, 185, 186, 187, 441, 450], "methanol": 419, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 89, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 268, 269, 276, 278, 280, 282, 284, 286, 289, 292, 293, 296, 298, 304, 319, 322, 332, 336, 364, 380, 381, 382, 384, 414, 417, 432, 433, 438, 441, 443, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460], "methodtyp": [412, 413, 414], "methyldiphenylphosphin": [397, 398, 399], "methylisoxazol": 460, "metric": [422, 439, 449, 453], "mhfp": 150, "mhfpfingerprint": 150, "micromamba": 441, "middl": 450, "midpoint": 459, "might": [53, 57, 156, 215, 398, 402, 404, 408, 429, 436, 440, 446, 447, 448, 449, 451, 455, 457, 460, 462], "mimic": [99, 166, 448], "min": [301, 349, 396, 404, 405, 414, 424, 425, 428, 429, 435, 436, 439, 441, 452, 456, 461], "min_cardin": [34, 44, 51, 448], "min_nonzero": 221, "min_target": 459, "mind": [422, 458], "miniconda": 441, "minim": [6, 301, 424, 435, 436, 441, 448, 455, 459], "minimum": [34, 44, 51, 61, 78, 153, 213, 215, 221, 441, 448], "minimumcardinalityviolatedwarn": [441, 448], "minor": 441, "mirror": [13, 16, 447, 456], "miss": [244, 246, 399, 441, 442], "mistak": 442, "mix": [250, 419, 420, 439, 448, 453, 456, 460], "mixin": 238, "mixtur": [204, 437, 441, 448, 453, 454, 460, 462], "mobil": 441, "mode": [31, 118, 145, 156, 185, 244, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 301, 304, 307, 330, 348, 395, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 413, 414, 416, 417, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 441, 447, 452, 454, 456, 461], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 76, 79, 94, 98, 99, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 253, 255, 257, 258, 259, 260, 261, 262, 266, 280, 282, 284, 286, 290, 292, 293, 371, 404, 405, 415, 425, 435, 436, 439, 441, 443, 445, 446, 447, 448, 452, 453, 454, 456, 457, 459, 460, 461], "model_cl": 293, "model_cluster_num_parameter_nam": [204, 205, 206, 207], "model_from_config": 416, "model_from_python": 416, "model_init": 292, "model_json": 416, "model_param": [204, 205, 206, 207, 280, 284, 286, 417, 441], "modellist": 260, "modelnottrainederror": [253, 255, 257, 262, 266, 280, 282, 284, 286], "modif": [440, 444], "modifi": [186, 246, 290, 348, 349, 350, 441, 444, 462], "modul": [0, 1, 32, 90, 91, 99, 119, 136, 154, 166, 177, 180, 190, 193, 200, 211, 229, 230, 242, 251, 254, 264, 271, 294, 297, 314, 318, 369, 385, 388, 439, 440, 441, 442], "modular": 442, "molecul": [55, 156, 341, 419, 453], "molecular": [342, 453], "moment": [250, 276, 442], "monitor": [441, 449], "monkeypatch": 440, "mont": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 80, 248, 396, 398, 399, 413, 422, 435, 436, 441, 446, 457], "monte_carlo_run": [248, 413], "mordr": [150, 156, 397, 398, 399, 401, 402, 408, 413, 417, 419, 432, 433, 439, 441, 448, 453], "mordredcommun": 441, "mordredfingerprint": [150, 453], "more": [8, 10, 57, 65, 82, 156, 185, 186, 213, 215, 221, 228, 244, 290, 309, 312, 336, 346, 361, 399, 402, 414, 419, 420, 435, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 453, 455, 456, 457, 458, 459, 462], "morgan": 453, "morgan_fp": [150, 441], "mors": 150, "morsefingerprint": 150, "most": [221, 244, 400, 422, 439, 442, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462], "motiv": 441, "move": [13, 16, 158, 441, 456], "mpl_toolkit": 414, "mplot3d": 414, "mqn": 150, "mqnsfingerprint": 150, "mse": 422, "mu": [174, 175], "much": [398, 452, 453], "multi": [130, 252, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 425, 437, 439, 441, 443, 446, 460, 461], "multiarmedbandit": 422, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 40, 121, 126, 131, 133, 247, 248, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 350, 397, 398, 399, 408, 419, 422, 439, 441, 446, 448, 452, 458, 459, 460, 461], "multipli": 115, "multitask": 441, "must": [53, 121, 126, 131, 133, 215, 221, 246, 250, 332, 350, 393, 402, 412, 413, 419, 422, 424, 441, 442, 444, 445, 448, 449, 450, 452, 453, 457], "mutual": 457, "my_attribut": 442, "my_valu": 449, "mypi": [322, 333, 439, 441, 442], "mystr": 442, "n": [26, 253, 317, 337, 381, 397, 398, 399, 401, 402, 407, 408, 409, 410, 417, 419, 422, 424, 428, 429, 431], "n_arm": 422, "n_batches_don": 31, "n_cluster": [205, 206], "n_combin": 419, "n_combinations_actu": 419, "n_combinations_expect": 419, "n_compon": 204, "n_doe_iter": [244, 248, 250, 396, 397, 398, 399, 413, 414, 435, 436, 457], "n_duplic": 419, "n_estim": 417, "n_fits_don": 31, "n_grid_point": 425, "n_inactive_parameter_combin": [44, 213, 441], "n_interrupted_campaign": 413, "n_iter": [404, 405, 407, 408, 409, 410, 422, 424], "n_mc_iter": [248, 250, 396, 398, 399, 413, 435, 436, 457], "n_mc_run": 422, "n_mc_sampl": 21, "n_output": [121, 126, 131, 133, 441], "n_permut": 419, "n_pis_ov": 413, "n_pis_over_requir": 413, "n_point": [213, 382], "n_raw_sampl": [197, 441, 454], "n_restart": [197, 441, 454], "n_row": 352, "n_sampl": 381, "n_task": 215, "n_task_param": 441, "n_training_data": 425, "n_wrong_sum": 419, "nactivevalu": [407, 408, 409, 410, 424, 431], "naiv": [189, 282, 290, 402, 441, 455], "naivehybridrecommend": 441, "naivehybridspacerecommend": [429, 441, 454], "nake": [312, 449], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 44, 65, 135, 138, 139, 140, 142, 143, 145, 152, 153, 156, 159, 161, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 227, 236, 248, 260, 262, 296, 298, 304, 316, 324, 330, 331, 332, 341, 342, 346, 348, 353, 357, 358, 372, 387, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 420, 422, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 439, 441, 442, 444, 446, 447, 448, 449, 452, 455, 456, 457, 458, 459, 460, 462], "name_or_abbr": [324, 331], "namedtupl": 422, "namespac": [198, 441, 442], "nan": [164, 253, 389, 391, 392, 393, 394, 407, 408, 409, 410, 424, 431], "nativ": [416, 441, 458], "natur": [284, 398, 442, 448, 454, 456, 459], "navig": [439, 447], "nbase": 342, "nbviewer": 416, "nd": 439, "ndarrai": [13, 16, 127, 160, 306, 307, 308, 351, 360, 364, 375, 381, 414, 422, 425, 441, 457], "ne": 419, "nearli": 459, "necessari": [358, 412, 441, 442, 447, 448, 452, 453, 455, 457, 458], "necessarili": [444, 447, 448, 455, 460], "need": [26, 31, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 332, 357, 358, 397, 398, 399, 402, 407, 410, 412, 414, 416, 419, 422, 424, 435, 436, 438, 439, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 462], "neg": [15, 425, 441, 448], "negat": [6, 45, 436, 441, 460], "neglig": 444, "neither": [8, 250, 350], "neq": 34, "nest": [346, 447, 461], "neural": 460, "neurip": 460, "neutral": 8, "never": 409, "nevertheless": [336, 440], "new": [31, 47, 48, 118, 185, 187, 213, 246, 261, 306, 307, 308, 316, 355, 356, 401, 413, 414, 431, 439, 441, 442, 447, 448, 458, 460], "new_measur": 451, "new_rec": 447, "newli": [439, 442, 449, 450, 460], "next": [31, 396, 412, 414, 419, 420, 425, 431, 435, 436, 439, 445, 446, 447, 454, 456], "ngboost": [284, 402, 441], "ngboostmodel": 417, "ngboostsurrog": [402, 417, 458], "nice": [414, 440], "nicknam": 341, "nintern": 424, "no_duplicates_constraint": 419, "no_grad": 414, "no_tl": 435, "nois": [244, 349, 350, 436, 441, 461], "noise_level": 350, "noise_perc": [244, 248, 457], "noise_ratio": 349, "noise_std": [435, 436], "noise_typ": 350, "noisi": [13, 14, 16, 17, 352, 435, 439, 441, 460], "non": [64, 65, 93, 121, 126, 131, 133, 182, 184, 185, 186, 187, 189, 215, 244, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 330, 332, 336, 349, 382, 389, 390, 391, 393, 394, 419, 435, 439, 441, 444, 446, 448, 450, 451, 455, 456], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 42, 47, 48, 57, 63, 64, 65, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 116, 118, 126, 131, 133, 135, 139, 142, 143, 145, 152, 153, 156, 159, 163, 164, 165, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 218, 221, 224, 227, 228, 231, 232, 234, 236, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 292, 293, 298, 304, 312, 313, 320, 321, 332, 342, 348, 353, 354, 355, 359, 364, 365, 384, 389, 390, 391, 392, 393, 394, 402, 407, 408, 409, 410, 412, 413, 414, 416, 417, 424, 431, 455, 459, 461], "nonetheless": 460, "nonlinear": [37, 213], "nonpredict": [202, 204, 205, 206, 207, 209, 210], "nonpredictiverecommend": [207, 209, 210, 441], "nonzero": [34, 44, 221, 441], "noqa": [407, 442], "nor": [8, 350, 438], "norecommenderslefterror": [185, 186], "noreturn": [189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 263], "normal": [173, 174, 175, 407, 409, 410, 424, 440, 444, 452, 455], "normaliz": 452, "normalprior": 441, "not_a_param": 417, "notabl": [441, 450, 458], "note": [34, 44, 57, 215, 244, 248, 250, 261, 262, 348, 349, 350, 397, 398, 399, 402, 408, 412, 416, 417, 419, 424, 428, 429, 431, 432, 433, 438, 439, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458, 460], "notebook": 416, "noteworthi": 447, "noth": [15, 31, 34, 42, 44, 45, 51, 83, 126, 156, 187, 189, 195, 197, 204, 205, 206, 207, 213, 215, 221, 253, 266, 280, 284, 286, 304, 444, 453], "notic": [412, 442, 444, 456, 458], "notimplementederror": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 127, 158, 228, 231, 232, 250, 253, 255, 257, 261, 262, 266, 280, 282, 284, 286], "notwithstand": 444, "now": [396, 397, 398, 399, 401, 402, 407, 409, 412, 413, 414, 419, 420, 422, 424, 425, 427, 431, 432, 435, 436, 438, 439, 441, 460, 462], "np": [127, 404, 405, 407, 408, 409, 410, 414, 416, 417, 419, 420, 422, 425, 427, 428, 429, 431, 435, 436, 448, 453, 457, 462], "nrecommend": [401, 402, 424, 428, 429], "nu": 106, "num": [356, 368], "num_disc_1": [424, 447], "num_disc_2": 424, "num_experi": [244, 396, 397, 398, 399, 413, 435, 436], "num_fantasi": 10, "num_parameter_1": 410, "num_parameter_2": 410, "num_parameter_3": 410, "num_parameter_4": 410, "num_parameter_5": 410, "num_parameter_6": 410, "num_sampl": 111, "num_valu": 455, "number": [10, 15, 21, 31, 44, 111, 121, 126, 131, 133, 156, 179, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 244, 248, 250, 253, 352, 359, 364, 368, 376, 381, 382, 397, 398, 399, 404, 405, 407, 408, 409, 410, 414, 419, 422, 428, 435, 436, 439, 440, 441, 445, 447, 448, 449, 452, 453, 455, 456, 457, 462], "numer": [13, 16, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 84, 138, 139, 140, 142, 143, 145, 152, 153, 156, 160, 213, 221, 246, 304, 349, 350, 357, 382, 393, 394, 396, 401, 404, 419, 420, 439, 441, 448, 449, 451, 452, 453, 455, 457, 459], "numerical_measurements_must_be_within_toler": [31, 393, 441, 447], "numerical_onli": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "numericalcontinuousparamet": [45, 63, 158, 213, 396, 404, 405, 420, 425, 427, 429, 436, 455, 457, 461], "numericaldiscreteparamet": [221, 397, 398, 399, 401, 402, 404, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 424, 428, 429, 431, 432, 433, 435, 436, 439, 455, 456, 457, 461, 462], "numericaltarget": [246, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 413, 414, 416, 417, 424, 425, 428, 429, 431, 432, 433, 435, 436, 439, 441, 452, 456, 457, 461], "numericcontinu": 429, "numparam1": 410, "numparam2": 410, "numparam3": 410, "numparam4": 410, "numparam5": 410, "numparam6": 410, "numpi": [160, 351, 360, 364, 370, 372, 404, 405, 407, 408, 409, 410, 414, 416, 417, 419, 420, 422, 425, 427, 428, 429, 431, 435, 436, 441, 448, 457, 462], "nuniqu": 419, "nyou": [428, 429], "o": [396, 397, 398, 399, 401, 402, 405, 407, 408, 409, 410, 413, 414, 417, 419, 422, 425, 435, 436, 439, 448, 449, 453], "o2": [397, 398, 399], "obj": [163, 164, 165, 232], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 126, 129, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 159, 160, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 222, 223, 232, 233, 236, 238, 253, 255, 257, 258, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 319, 322, 330, 332, 350, 357, 358, 361, 364, 384, 396, 401, 412, 413, 414, 416, 417, 422, 425, 427, 429, 432, 433, 440, 441, 442, 444, 448, 450, 451, 454, 455, 457, 458, 459, 461, 462], "objective_json": 456, "oblig": 444, "observ": [242, 253, 255, 257, 262, 266, 280, 282, 284, 286, 422, 457, 459], "obsolet": 441, "obtain": [244, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 398, 414, 422, 425, 436, 439, 441, 447, 451, 452, 456, 460], "oc": [397, 398, 399, 401, 402], "oc1": [397, 398, 399], "occur": [56, 442], "occurr": 448, "octanol": [448, 453], "off": [8, 250, 337, 408, 439, 441, 448, 449, 452, 459], "offer": [332, 414, 419, 422, 428, 438, 439, 440, 444, 445, 450, 453, 454, 456, 457, 458, 460, 462], "offset": [45, 109], "offset_initial_valu": 109, "offset_prior": 109, "often": [420, 422, 440, 445, 448, 449, 450, 451, 453, 456, 462], "oftentim": [456, 457], "oh": [142, 147, 398, 408, 417, 422, 424, 431, 432, 433, 439, 455, 456], "ok": 424, "old": 460, "omit": [13, 16, 195, 197, 248, 332, 412, 439, 455, 456], "onc": [248, 413, 453, 457], "one": [13, 16, 21, 63, 65, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 160, 170, 179, 180, 185, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 215, 228, 246, 266, 290, 316, 317, 346, 352, 397, 398, 399, 402, 404, 419, 422, 424, 433, 435, 436, 438, 439, 440, 441, 442, 444, 446, 447, 448, 450, 452, 453, 455, 456, 457, 458, 459, 460], "onehot": 398, "ones": [215, 312, 357, 398, 429, 441, 446, 460], "ongo": [413, 460], "onli": [10, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 94, 106, 121, 126, 131, 133, 156, 215, 221, 246, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 312, 313, 332, 333, 336, 346, 348, 357, 364, 381, 382, 397, 402, 407, 408, 413, 414, 416, 417, 419, 428, 429, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 462], "onlin": 422, "onnx": [261, 262, 371, 415, 439, 441, 458], "onnx_input_nam": [262, 416], "onnx_str": [262, 416], "onto": [13, 16, 442], "open": [31, 44, 158, 160, 253, 255, 257, 262, 266, 280, 282, 284, 286, 439, 442], "opentelemetri": [439, 441, 449], "oper": [42, 45, 54, 234, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 351, 369, 404, 405, 409, 410, 419, 420, 440, 441, 446, 448, 449, 450, 451, 454, 456], "operator_convert": 416, "opposit": 448, "opt": [439, 449], "optim": [12, 21, 31, 44, 45, 75, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 244, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 348, 398, 400, 401, 404, 405, 413, 414, 419, 422, 424, 429, 441, 443, 445, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460], "optimize_acqf": [45, 197], "optimize_acqf_": 45, "optimize_acqf_discret": 197, "optimize_acqf_mix": 197, "option": [31, 85, 90, 94, 105, 106, 107, 108, 109, 110, 111, 112, 116, 126, 131, 133, 139, 142, 143, 145, 153, 156, 159, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 234, 236, 244, 248, 250, 280, 284, 286, 292, 298, 304, 332, 342, 348, 353, 354, 355, 399, 402, 416, 417, 422, 440, 441, 442, 445, 447, 448, 450, 451, 452, 455, 456, 457, 458, 459, 462], "oracl": 457, "orchestr": [442, 447], "order": [215, 221, 413, 422, 438, 439, 441, 442, 447, 448, 453, 456, 460], "ordin": 459, "org": [278, 322, 355, 416, 439, 444], "organ": 442, "origin": [26, 31, 158, 316, 317, 327, 351, 431, 438, 441, 442, 444, 454, 456, 458], "orthogon": 442, "oserror": 440, "other": [53, 113, 158, 213, 317, 397, 399, 401, 402, 404, 405, 413, 420, 422, 429, 435, 436, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 462], "otherwis": [45, 61, 138, 139, 140, 142, 143, 145, 152, 153, 156, 444, 445, 450, 452, 460], "our": [396, 407, 409, 412, 413, 414, 417, 419, 420, 422, 425, 427, 428, 429, 432, 433, 435, 436, 439, 442, 445, 447, 448, 450, 456, 457], "out": [221, 424, 436, 439, 444, 449, 452, 457, 460], "out_par": 425, "out_y0": 425, "out_y1": 425, "outcom": [179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 398, 439, 453, 459], "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 116, 121, 126, 131, 133, 253, 255, 257, 262, 266, 280, 282, 284, 286, 350, 351, 352, 396, 425, 435, 436, 440, 441, 443, 457, 461], "output_label": 351, "outputscal": 116, "outputscale_initial_valu": 116, "outputscale_prior": 116, "outsid": [31, 158, 186, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 307, 308, 348, 424, 441, 456], "outstand": 444, "over": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 213, 419, 438, 441, 445, 447, 450, 460], "overal": [215, 416, 417, 419, 420, 422, 441, 442, 447, 452, 460], "overlap": [64, 65, 158, 404, 405, 448], "overrid": [234, 236, 412, 441], "overridden": [412, 442], "overview": [439, 456], "overwritten": 429, "own": [189, 396, 420, 439, 440, 441, 442, 444, 448, 453], "owner": 444, "ownership": 444, "p": [396, 397, 398, 399, 401, 402, 404, 405, 412, 414, 428, 435, 436, 442, 450, 451, 458, 462], "p1": [455, 456, 457], "p1_json": 456, "p1_via_json": 456, "p2": [455, 456, 457], "p2_json": 456, "p2_via_json": 456, "p3c4": [397, 398, 399], "p_cont": 455, "p_disc": 455, "p_g1_amount": 420, "p_g2_amount": 420, "p_g3_amount": 420, "p_i": 34, "pack": 456, "packag": [94, 150, 310, 440, 441, 442, 453, 457, 458, 462], "page": [416, 439, 441, 442, 450], "pair": [316, 425, 439, 453], "pam": 206, "pamclusteringrecommend": 454, "panda": [52, 222, 240, 241, 246, 341, 360, 396, 397, 398, 399, 404, 405, 407, 413, 414, 419, 420, 424, 425, 428, 429, 435, 436, 441, 448, 449, 453, 455, 456, 457], "panic": 438, "paper": 460, "paper_fil": 460, "parallel": 442, "param": [415, 417, 437], "param1": [455, 457], "param2": [455, 457], "param_bounds_comp": 441, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 68, 82, 86, 94, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 127, 131, 133, 138, 139, 142, 143, 145, 147, 148, 149, 150, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 217, 220, 221, 222, 223, 226, 227, 228, 234, 236, 238, 242, 244, 246, 248, 250, 253, 255, 257, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 288, 290, 292, 293, 296, 298, 304, 306, 307, 308, 312, 313, 316, 317, 325, 326, 327, 330, 332, 335, 336, 337, 340, 341, 342, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 368, 373, 374, 375, 377, 378, 381, 382, 384, 393, 394, 396, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 422, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 439, 441, 442, 448, 449, 450, 452, 456, 457, 458, 460, 461], "parameter": [170, 171, 172, 173, 174, 175, 176], "parameter_json": 456, "parameter_nam": [213, 215, 221, 429], "parameter_names_in_cardinality_constraint": 213, "parameterencod": [139, 147, 148, 150, 153], "parametr": 448, "parent": 442, "pareto": [12, 131, 423, 437, 439, 441, 452], "paretoobject": [425, 439, 441, 461], "pars": [366, 441], "parser": 441, "part": [15, 26, 31, 40, 73, 190, 213, 215, 221, 348, 394, 417, 429, 432, 433, 435, 436, 441, 442, 444, 445, 446, 447, 448, 453, 454, 455, 456, 462], "parti": [444, 457], "partial": [26, 413, 461], "particl": 460, "particular": [31, 221, 242, 412, 425, 429, 438, 439, 440, 442, 444, 447, 452, 453, 455, 456, 457], "particularli": [332, 447], "partit": [206, 248, 250, 441, 454, 457], "partitionexplain": [92, 95], "pass": [31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 94, 156, 204, 205, 206, 207, 215, 221, 232, 266, 280, 284, 286, 352, 358, 419, 431, 436, 441, 442, 446, 450, 451, 452, 453, 456], "passthrough": [28, 122, 217, 270], "patch": 413, "patent": 444, "path": [398, 419, 441, 442, 449, 462], "pattern": [150, 442, 460], "patternfingerprint": 150, "pd": [3, 31, 246, 260, 316, 317, 356, 396, 397, 398, 399, 404, 405, 407, 413, 414, 419, 420, 424, 425, 428, 429, 435, 436, 441, 448, 450, 453, 455, 456, 457], "pdf": 460, "peek": 456, "pend": [26, 31, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 439, 441, 461], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 441, 446, 447], "per": [244, 260, 397, 398, 399, 402, 419, 424, 428, 435, 436, 441, 453, 455, 457], "percent": [244, 444], "percentag": [197, 312, 350, 402, 407, 408, 409, 410, 419, 424, 431, 436, 454], "perf_count": 412, "perfectli": 456, "perform": [197, 244, 312, 357, 398, 407, 408, 409, 410, 414, 419, 432, 435, 436, 438, 439, 441, 442, 444, 445, 447, 449, 451, 453, 454, 457, 458, 460], "period": 107, "period_length_initial_valu": 107, "period_length_prior": 107, "periodickernel": 441, "perm_inv_constraint": 419, "perman": 461, "permiss": [439, 444], "permut": [53, 56, 57, 317, 441, 448], "permutation_invari": 53, "permutationexplain": [92, 95], "perpetu": 444, "persist": [441, 443, 447, 449, 456, 458], "perspect": 456, "pertain": 444, "pharmacophor": 150, "pharmacophorefingerprint": 150, "phase": [187, 420], "phaseagent1": 420, "phaseagent2": 420, "phcpho": [397, 398, 399, 401, 402], "phenomenon": 447, "philosophi": 456, "physic": [451, 457], "physiochemicalproperti": 150, "physiochemicalpropertiesfingerprint": 150, "pi": [7, 402, 413, 414], "pi_max": 414, "pi_per_iter": 414, "pi_required_fract": 413, "pi_threshold": 413, "pickl": 441, "pictur": 439, "piec": [422, 439, 447, 448], "piecewis": 108, "piecewisepolynomialkernel": 441, "pin": [26, 441], "pin_discret": 26, "pinned_part": 26, "pip": [439, 441, 442, 451, 462], "pipelin": [435, 436, 441, 442], "pival": [397, 398, 399, 401, 402], "pl": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "place": [13, 16, 34, 246, 348, 349, 350, 416, 417, 419, 422, 440, 441, 442, 444, 447, 450, 453, 456, 460], "placehold": 319, "plai": [447, 451, 459], "plain": 270, "plainkernelfactori": [101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 266], "plan": [261, 450, 453], "platt": 460, "pleas": [416, 417, 439, 445, 451, 454], "plenti": 451, "plot": [94, 96, 244, 397, 399, 425, 436, 441, 458, 460, 461], "plot_abegin_convert_pipelin": 371, "plot_ebegin_float_doubl": 371, "plot_typ": 94, "plt": [397, 399, 414, 425], "plu": [246, 439], "plugin": 441, "pm": [5, 402], "png": [397, 399], "po16": 453, "poetri": 441, "point": [6, 13, 15, 16, 21, 26, 30, 31, 94, 153, 158, 179, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 357, 370, 371, 379, 380, 381, 382, 386, 397, 401, 402, 413, 420, 425, 428, 429, 435, 436, 438, 439, 441, 443, 445, 446, 447, 450, 451, 452, 454, 455, 461, 462], "points_per_dim": [414, 428, 429, 435, 436], "polar": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 223, 439, 441, 443, 461, 462], "poli": 414, "polici": 422, "polycollect": 414, "polym": 453, "polynomi": [108, 109], "polynomialkernel": 441, "polytop": 441, "popul": 419, "popular": [451, 453, 458], "posit": [13, 16, 94, 332, 381, 441, 448, 451, 452], "possibl": [31, 44, 159, 213, 221, 222, 223, 242, 332, 348, 399, 413, 414, 419, 424, 439, 441, 444, 447, 448, 449, 450, 453, 454, 455, 456, 457, 459, 460, 462], "possibli": 447, "post": [452, 453], "post_hook": [332, 412, 413, 414], "posterior": [5, 6, 15, 18, 21, 31, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 289, 402, 441, 445, 458], "posterior_mean": [253, 422], "posterior_mod": 253, "posterior_stat": [31, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 441, 447], "posteriorlist": 260, "posteriorstandarddevi": [422, 445], "postprocess": 341, "potassium": [397, 398, 399, 401, 402], "potenti": [215, 439, 440, 441, 442, 447, 448, 451, 452, 455, 462], "power": [109, 444, 448, 454], "pph3": [397, 398, 399], "pr": [441, 442], "practic": [445, 451, 454], "pre": [159, 185, 269, 415, 440, 441, 442], "pre_hook": [332, 412], "precis": [57, 185, 213, 312, 359, 371, 372, 387, 441, 461], "precomput": 145, "predefin": [447, 454], "predict": [31, 79, 207, 253, 255, 257, 262, 266, 280, 282, 284, 286, 439, 441, 445, 446, 452, 457, 458, 460, 461], "predictor": 288, "prefer": [31, 444, 450, 452, 456], "prefix": 342, "preliminari": 460, "prepar": [414, 442, 444, 462], "preprocess": 441, "presenc": [197, 440, 441], "present": [72, 94, 121, 126, 131, 133, 215, 316, 317, 332, 401, 422, 441, 448, 457, 462], "preset": [266, 273, 276, 278, 441], "pressur": [409, 416, 417, 431, 432, 433, 439, 448], "pretrain": [262, 415, 437], "pretti": 359, "pretty_print_df": [419, 441], "prevent": [158, 231, 232, 332, 440, 441, 442], "previou": [185, 413, 414, 441, 447, 449, 460], "previous": [312, 397, 398, 399, 401, 409, 446, 447], "price": 453, "primari": 447, "primarili": 445, "principl": [419, 422, 458], "print": [246, 346, 359, 397, 398, 399, 401, 402, 404, 405, 409, 412, 416, 417, 419, 420, 422, 427, 428, 429, 431, 432, 433, 439, 441, 455, 462], "print_parameter_names_hook": 412, "printer_inst": 412, "prior": [105, 106, 107, 108, 109, 110, 111, 112, 116, 170, 171, 172, 173, 174, 175, 176, 253, 276, 410, 439, 440, 441], "priori": [448, 456, 460], "privat": [441, 443], "probabilist": 445, "probability_of_improv": 414, "probabilityofimprov": [413, 414], "probabl": [7, 19, 21, 402, 411, 413, 437, 441], "problem": [75, 419, 420, 422, 435, 436, 441, 442, 447, 452, 456], "problemat": [336, 440, 453], "proce": [244, 401, 449], "procedur": [445, 460], "proceed": 460, "process": [31, 99, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 356, 381, 402, 412, 419, 422, 435, 436, 441, 442, 445, 446, 447, 448, 449, 450, 452, 453, 456, 460], "prod": 410, "prod_constraint": 410, "prod_i": 452, "produc": [121, 126, 127, 131, 133, 246, 439, 441, 442, 449, 457], "product": [58, 115, 215, 221, 222, 223, 328, 406, 437, 439, 441, 444, 448, 450, 461, 462], "product_paramet": [221, 419, 455], "productkernel": 441, "programmat": 419, "progress": [31, 183, 414, 441, 450], "prohibit": 445, "project": [414, 439, 441, 449], "promin": 444, "promis": [413, 446], "proper": 441, "properli": [26, 424, 440, 455], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 129, 131, 133, 138, 139, 140, 142, 143, 145, 147, 148, 150, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 220, 221, 253, 255, 257, 260, 262, 266, 269, 273, 276, 278, 280, 282, 284, 286, 296, 298, 301, 302, 304, 321, 322, 364, 380, 384, 441, 442, 448, 450, 453], "proport": 436, "propos": 447, "protobuf": 441, "protocol": [178, 179, 258, 268, 336, 441], "prototyp": 443, "provid": [13, 15, 16, 31, 45, 94, 98, 127, 145, 156, 159, 179, 185, 186, 189, 190, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 234, 238, 242, 244, 246, 248, 250, 253, 255, 257, 262, 266, 276, 278, 280, 282, 284, 286, 316, 328, 332, 344, 349, 350, 355, 358, 360, 381, 382, 396, 397, 398, 399, 412, 419, 425, 427, 428, 429, 432, 435, 436, 439, 441, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "prune": [12, 13, 14, 16, 17], "prune_baselin": [12, 13, 14, 16, 17], "pstd": [6, 441, 445], "pubchem": 150, "pubchemfingerprint": 150, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 129, 131, 133, 138, 139, 140, 142, 143, 145, 147, 148, 150, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 296, 298, 301, 302, 304, 319, 321, 322, 364, 380, 384, 441, 442], "publicli": 444, "publish": 441, "pull": [422, 441], "punish": 8, "pure": [8, 10, 15, 180, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 215, 250, 261, 382, 428, 441, 461], "purerecommend": [182, 184, 185, 186, 187, 189, 195, 202, 441], "purpl": 425, "purpos": [15, 412, 413, 416, 422, 439, 440, 442, 444, 450, 456, 462], "push": [44, 442], "put": [419, 422, 449, 453], "puzzl": 439, "py": [278, 407, 409, 410, 441, 449], "py312": 442, "pyarrow": 441, "pydant": 441, "pydoclint": [441, 442], "pydocstyl": 442, "pylint": 441, "pymatgen": 440, "pypi": [439, 441], "pyplot": [397, 399, 414, 425], "pyproject": 441, "pytest": [441, 442], "python": [30, 322, 333, 398, 417, 432, 433, 439, 440, 441, 442, 447, 449, 456], "python310": 440, "pytorch": 441, "pyupgrad": 441, "q": [108, 288, 289, 402, 446], "qei": [9, 402, 432, 433, 441], "qkg": [10, 441], "qlogei": [11, 402, 441], "qlogexpectedimprov": 402, "qlognehvi": [13, 16], "qlognei": [14, 441], "qlognoisyexpectedhypervolumeimprov": [441, 452], "qlognparego": 441, "qnegintegratedposteriorvari": 445, "qnehvi": 16, "qnei": [17, 441], "qnipv": [15, 441, 445], "qnoisyexpectedhypervolumeimprov": 441, "qpi": [19, 402], "qposteriorstandarddevi": 445, "qpstd": [18, 441, 445], "qsimpleregret": 21, "qsr": [20, 441], "qt": 21, "qthompsonsampl": [422, 441], "quadrat": [112, 396, 425], "qualiti": 442, "quantif": 460, "quantifi": [422, 445, 460], "quantil": [31, 253, 255, 256, 257, 262, 266, 280, 282, 284, 286, 447], "quantiti": [31, 55, 447, 449, 451, 452, 458, 462], "quantum": 145, "qucb": [22, 402, 441, 445], "queri": [180, 190, 242, 244, 246, 425, 439, 447, 449, 450, 457], "question": [442, 447, 460], "quickli": 448, "qupperconfidencebound": 445, "qvarucb": 441, "r": [44, 397, 398, 399, 401, 402], "radial": 110, "radiu": [150, 441, 453], "rais": [13, 15, 16, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 94, 98, 127, 135, 158, 159, 164, 165, 185, 186, 195, 197, 213, 215, 221, 227, 228, 231, 232, 244, 246, 250, 253, 255, 257, 261, 262, 263, 266, 280, 282, 284, 286, 293, 317, 330, 332, 335, 337, 340, 344, 345, 346, 348, 349, 350, 352, 357, 358, 381, 382, 393, 394, 412, 413, 414, 429, 440, 441, 442, 446, 454], "rand": 416, "random": [15, 111, 213, 215, 244, 246, 248, 285, 286, 348, 380, 381, 382, 396, 397, 398, 399, 402, 413, 414, 416, 420, 422, 425, 436, 439, 441, 445, 453, 454, 457, 462], "random_campaign": 396, "random_forest": [286, 402], "random_se": [244, 248, 413, 457], "randomforestmodel": 417, "randomforestsurrog": [402, 441, 458], "randomli": [197, 210, 396, 398, 425, 445, 451, 454], "randomrecommend": [396, 397, 398, 399, 402, 407, 408, 409, 410, 412, 413, 414, 420, 422, 424, 441, 446, 454], "rang": [44, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 296, 348, 349, 396, 404, 405, 407, 408, 409, 410, 414, 419, 422, 424, 427, 428, 429, 436, 439, 441, 448, 455, 456, 457, 459, 462], "rank": 459, "rare": 441, "rastrigin": [404, 405, 428, 429], "rate": [171, 253, 422], "rather": [431, 440, 445, 456], "ration": 112, "ravel": [425, 435, 436], "raw": [197, 456], "rbf": 110, "rbfkernel": 441, "rdf": 150, "rdffingerprint": 150, "rdkit": [150, 407, 409, 410, 441, 448, 453], "rdkit2ddescriptor": [150, 398, 407, 409, 410, 441], "rdkit2ddescriptorsfingerprint": 150, "rdkitfingerprint": 150, "re": [413, 428, 429, 442, 454], "reach": [306, 308, 424], "reachabl": 449, "reactant": [451, 453], "reaction": [398, 401, 439, 448, 451, 453, 460], "reactor": [446, 460], "reactora": 460, "reactorb": 460, "reactorc": 460, "read": [145, 215, 398, 401, 439, 441, 442], "read_excel": [397, 398, 399, 413], "readabl": [220, 359, 368, 431, 441, 443, 444, 456], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 244, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 442, 446], "readm": [441, 442], "reagent": [448, 453], "real": [364, 439, 447, 459], "realist": 457, "realiz": [242, 457], "reason": [42, 204, 205, 206, 207, 398, 428, 441, 444, 445, 446, 448, 449, 453, 457], "reassembl": 456, "rebas": 442, "rec": [407, 408, 409, 410, 424, 446, 447], "rec_finish": 446, "rec_next": 446, "rec_par": 425, "rec_pend": 446, "rec_y0": 425, "rec_y1": 425, "receiv": [444, 449, 456], "recip": 442, "recipi": 444, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 73, 81, 82, 94, 139, 142, 143, 145, 153, 156, 158, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 244, 258, 260, 261, 312, 348, 350, 352, 396, 397, 398, 399, 400, 404, 405, 407, 408, 409, 410, 412, 413, 414, 420, 422, 424, 425, 432, 433, 435, 436, 437, 438, 439, 441, 442, 445, 449, 451, 453, 457, 458, 460, 461, 462], "recommendation_orig": 431, "recommendation_recr": 431, "recommended_arm_idx": 422, "recommender_with_hook": 413, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 94, 182, 184, 185, 186, 187, 192, 258, 260, 412, 414, 438, 441, 446], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 364, 439, 447, 449, 456], "record": [31, 312, 313, 439, 449, 460], "recreat": [273, 431, 456], "recreate_model": 417, "recurs": [182, 184, 185, 186, 187, 325, 326], "red": 425, "redesign": 441, "redistribut": 444, "reduc": [156, 414, 422, 435, 436, 450, 453], "reduct": 461, "ref": 439, "refactor": 441, "refer": [13, 16, 242, 278, 331, 348, 357, 371, 397, 398, 399, 402, 404, 405, 407, 408, 409, 410, 412, 414, 416, 417, 419, 424, 428, 429, 431, 440, 441, 447, 451, 452, 453, 454, 455, 456, 457, 458, 460], "referenc": 442, "reference_point": [13, 16], "refin": [413, 439, 441, 447, 450], "reflect": [189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 414, 441, 442, 445, 448, 453], "regard": [34, 40, 404, 405, 442, 444], "regardless": 458, "regim": [441, 451], "region": 160, "regist": [332, 411, 413], "register_custom_architectur": 441, "register_hook": [411, 412, 413, 414, 441], "registr": 441, "regress": 280, "regressor": 416, "regret": [20, 21], "regroup": 441, "regular": [21, 158, 290, 427, 440, 441, 446, 460], "reinstal": 439, "rel": [13, 16, 44, 244, 349, 448, 452], "relat": [55, 121, 126, 128, 131, 133, 146, 215, 233, 300, 315, 429, 435, 436, 438, 439, 441, 447, 448, 449, 460], "relationship": [435, 436, 439, 442, 452, 460], "relative_perc": 350, "relative_threshold": [44, 441, 448], "releas": [439, 441], "relev": [53, 94, 246, 357, 358, 408, 419, 441, 442, 447, 448, 450, 460, 462], "reli": [440, 441, 452], "reliabl": 453, "reloc": 441, "remain": [56, 158, 187, 250, 307, 396, 402, 407, 408, 409, 410, 419, 422, 424, 429, 431, 435, 436, 444, 453, 456, 457], "remain_switch": [187, 441], "remaind": 382, "remind": 441, "remot": 442, "remov": [52, 55, 56, 215, 221, 419, 442, 448, 455], "renam": [398, 435, 436, 441, 442], "render": [94, 416], "reoccur": 460, "reorder": 441, "reorgan": 441, "repeat": [422, 441, 442, 446, 447], "repetit": [248, 402, 413], "rephras": 448, "replac": [428, 429, 441, 442], "replic": [253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 441, 456, 461], "repo": 441, "report": [179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 422, 440], "repositori": [398, 439, 442], "repr": 416, "repres": [13, 16, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 114, 115, 145, 215, 250, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 344, 360, 364, 368, 381, 396, 419, 420, 422, 425, 432, 433, 439, 441, 444, 447, 452, 453, 455, 457, 462], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 337, 339, 344, 346, 348, 359, 364, 407, 408, 409, 410, 416, 418, 424, 431, 441, 446, 447, 453, 456, 457, 461, 462], "reproduc": [413, 422, 425, 441, 444, 461], "reproduct": 444, "request": [31, 81, 82, 127, 185, 186, 187, 228, 253, 255, 256, 257, 262, 266, 269, 280, 282, 284, 286, 310, 352, 381, 382, 425, 438, 441, 446, 447, 450], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 45, 51, 80, 187, 221, 293, 332, 401, 412, 413, 416, 420, 422, 424, 428, 432, 438, 439, 440, 441, 442, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462], "rerun": 416, "reserv": [439, 442], "reset_index": 435, "reshap": 425, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 408, 410, 419, 456], "resolv": 341, "resort": [290, 442, 456, 462], "resource_track": 440, "resp": [216, 399, 429], "respect": [31, 197, 216, 244, 248, 311, 316, 348, 419, 420, 442, 447, 448, 450, 451, 452, 456, 457, 458, 459, 462], "respond": 438, "respons": [182, 184, 185, 186, 187, 444, 447, 454], "restart": [185, 197], "restor": 456, "restr": 21, "restrain": 453, "restrict": [215, 221, 242, 248, 250, 407, 420, 441, 450, 457, 460, 461], "result": [10, 13, 16, 31, 156, 158, 221, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 348, 356, 397, 398, 399, 401, 416, 417, 419, 420, 422, 424, 425, 427, 435, 436, 439, 441, 443, 444, 445, 447, 448, 449, 451, 453, 454, 456, 457, 460, 461, 462], "result_baselin": [435, 436], "result_fract": 436, "results_interrupt": 413, "results_uninterrupt": 413, "retain": [444, 448], "retrain": [261, 262, 458], "retriev": [215, 242, 324, 325, 326, 340, 442, 457], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 94, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 121, 122, 124, 126, 127, 131, 133, 135, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 160, 161, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 199, 202, 204, 205, 206, 207, 209, 210, 213, 215, 217, 218, 221, 222, 223, 224, 226, 227, 228, 231, 232, 234, 235, 236, 238, 240, 241, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 263, 266, 269, 270, 274, 280, 282, 284, 286, 288, 289, 290, 292, 293, 296, 298, 304, 306, 307, 308, 310, 311, 312, 313, 316, 317, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 373, 374, 375, 381, 382, 384, 389, 390, 391, 392, 393, 394, 396, 407, 413, 414, 416, 419, 422, 425, 435, 441, 447, 448, 457, 458, 462], "return_std": 416, "reus": [187, 441], "reuse_last": 185, "reveal": [414, 420, 436], "review": 442, "revis": [441, 444], "reward": [8, 422], "rework": 441, "rewrit": 441, "rff": 111, "rffkernel": 441, "rh": [45, 47, 48, 404, 405, 420, 448], "right": [45, 176, 357, 364, 397, 399, 408, 422, 439, 440, 442, 444, 448, 450, 452, 453, 459], "right_df": 357, "rihana": 443, "rim": 443, "risk": [8, 440, 444, 447], "roam": 440, "robust": [439, 441, 460], "robustli": 290, "role": [441, 442, 447, 451, 452, 457, 459, 461], "room": [414, 447], "root": [398, 439, 442, 448], "round": [359, 404, 416, 417, 448], "roundtrip": [441, 456], "rout": 456, "routin": 44, "row": [13, 16, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 127, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 246, 312, 316, 317, 349, 352, 356, 357, 359, 375, 397, 399, 407, 408, 409, 410, 419, 420, 424, 431, 441, 447, 450, 455, 457], "rowei": 460, "roya": 443, "royalti": 444, "rq": 112, "rqkernel": 441, "ruff": [441, 442], "rule": [412, 441], "run": [244, 248, 397, 398, 399, 413, 414, 435, 436, 439, 440, 441, 442, 447, 450, 453, 456, 457, 462], "run_full_initial_data": 397, "run_impute_mod": 399, "runner": [407, 409, 410], "runtim": [371, 440], "runtimeerror": [31, 185, 412], "rv": 422, "s3": 441, "s41586": [278, 355], "safe": [441, 442, 447], "safeti": 332, "sai": 448, "said": 442, "sake": 419, "same": [55, 135, 187, 221, 227, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 327, 402, 413, 416, 417, 419, 422, 425, 431, 440, 441, 448, 449, 450, 456, 457, 458, 460], "sampl": [10, 15, 21, 44, 197, 209, 210, 213, 313, 379, 380, 381, 382, 397, 402, 407, 408, 409, 410, 422, 424, 425, 427, 431, 436, 439, 441, 443, 451, 461], "sample_from_full_factori": [213, 441], "sample_inactive_paramet": 44, "sample_uniform": [213, 425, 427, 441, 457], "sampler": [402, 407, 408, 409, 410, 424, 431], "samples_full_factori": [213, 441], "samples_random": [213, 441], "sampling_algorithm": [380, 445], "sampling_fract": [15, 445], "sampling_method": [15, 445], "sampling_n_point": [15, 445], "sampling_percentag": [197, 454], "satisfi": [40, 41, 42, 221, 404, 405, 419], "save": [397, 399, 416, 441, 457], "savefig": [397, 399, 425], "sca": 425, "scalar": [12, 126, 424, 439, 441, 447, 452, 456], "scale": [116, 172, 173, 174, 175, 176, 213, 215, 221, 384, 424, 425, 435, 441, 445, 452], "scalekernel": 441, "scaler": 441, "scaling_bound": [213, 215, 221], "scatter": [94, 96], "scenario": [250, 396, 397, 398, 399, 413, 419, 435, 436, 446, 448, 452, 460, 461, 462], "scene": [452, 457, 458], "schema": 447, "schembl15068049": [397, 398, 399], "scheme": [441, 448], "scienc": [439, 443], "scientif": [441, 460], "scikit": [150, 439, 441, 443, 453], "scipi": [375, 414, 422, 441], "scm": 441, "scope": 396, "screen": [327, 460], "script": [341, 440, 441, 449, 462], "seaborn": [396, 397, 398, 399, 413, 435, 436], "seamlessli": 456, "search": [15, 26, 31, 38, 52, 55, 68, 73, 82, 86, 138, 139, 140, 142, 143, 145, 152, 153, 156, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 221, 225, 244, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 312, 357, 358, 396, 399, 401, 403, 406, 407, 408, 409, 410, 412, 413, 414, 422, 424, 426, 431, 436, 441, 443, 446, 447, 448, 449, 450, 451, 454, 456, 457, 461], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 94, 138, 139, 140, 142, 143, 145, 152, 153, 156, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 216, 220, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 396, 398, 401, 412, 413, 414, 416, 417, 419, 420, 422, 425, 427, 431, 432, 433, 435, 437, 439, 441, 447, 448, 449, 450, 451, 453, 455, 456, 457, 462], "searchspace1": 427, "searchspace2": 427, "searchspace3": 427, "searchspace_ful": 450, "searchspace_json": 456, "searchspace_reduc": 450, "searchspacetyp": [189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 215, 402, 407, 408, 409, 410, 413, 414, 424, 431, 455], "secfp": 150, "secfpfingerprint": 150, "second": [356, 373, 375, 416, 417, 424, 425, 433, 435, 448, 449, 451], "secondari": [439, 449], "section": [439, 441, 442, 444, 456], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 166, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 244, 248, 250, 253, 255, 257, 258, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 296, 298, 304, 309, 330, 336, 350, 356, 361, 364, 384, 397, 398, 399, 404, 405, 412, 413, 417, 420, 429, 438, 439, 442, 447, 449, 450, 451, 452, 453, 456, 457, 461], "seed": [244, 248, 377, 378, 413, 414, 422, 425, 439, 441, 462], "seek": [424, 452], "seem": [371, 433, 440], "seen": 445, "select": [6, 40, 41, 42, 70, 74, 80, 182, 184, 185, 186, 187, 190, 197, 207, 209, 253, 255, 257, 262, 266, 280, 282, 284, 286, 307, 356, 381, 402, 408, 409, 419, 420, 422, 429, 439, 441, 445, 447, 448, 451, 453, 454, 456, 458], "select_recommend": [182, 184, 185, 186, 187, 441], "selectivity_mean": 447, "selectivity_mod": 447, "selectivity_q_0": 447, "selectivity_std": 447, "self": [332, 345, 389, 390, 391, 392, 412, 413, 414, 422, 442], "sell": 444, "semant": [441, 456], "sens": [57, 131, 332, 336, 356, 448, 453, 458], "sent": 444, "sentinel": [320, 321], "separ": [248, 250, 290, 330, 384, 385, 414, 438, 441, 442, 444, 456], "sequenc": [31, 41, 45, 114, 115, 126, 131, 142, 143, 145, 156, 164, 185, 186, 213, 215, 221, 222, 223, 226, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 312, 316, 317, 332, 333, 342, 345, 351, 357, 358, 361, 375, 447, 452, 454], "sequenti": [184, 185, 186, 187, 197, 402, 407, 408, 409, 410, 424, 431, 441, 454], "sequential_continu": [197, 441, 454], "sequential_greedy_x": 441, "sequentialgreedyrecommend": 441, "sequentialmetarecommend": [186, 454], "sequentialstrategi": 441, "seri": [31, 40, 41, 42, 52, 139, 142, 143, 145, 153, 156, 296, 298, 304, 407, 419, 441, 448, 450], "serial": [186, 221, 238, 313, 416, 437, 440, 441, 442, 448, 454, 461], "serializ": [439, 448, 454], "serialize_datafram": 456, "serialized_df": 240, "serializetostr": 416, "serialmixin": [24, 31, 35, 40, 103, 121, 140, 168, 182, 213, 215, 221, 257, 260, 269, 296, 298, 304, 364, 441], "serv": [250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 357, 435, 436, 447, 448, 453], "servic": 444, "session": [262, 449, 456], "set": [13, 16, 31, 34, 42, 44, 55, 57, 64, 65, 94, 98, 156, 179, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 244, 248, 273, 311, 348, 355, 356, 377, 378, 397, 398, 399, 400, 402, 407, 409, 412, 417, 418, 419, 420, 422, 424, 429, 438, 439, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 462], "set_box_aspect": 414, "set_dash": 413, "set_random_se": [414, 422, 425, 462], "set_size_inch": [397, 399], "set_x_pend": 26, "set_xlabel": 414, "set_xtick": 414, "set_xticklabel": 414, "set_ylabel": 414, "set_ylim": 414, "set_zlabel": 414, "setpoint": 153, "setup": [244, 413, 448, 457, 462], "sever": [63, 159, 180, 396, 398, 402, 413, 416, 422, 424, 427, 436, 439, 441, 442, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 462], "sh": 451, "shall": [185, 350, 444, 452], "shap": [94, 439, 441, 443, 458, 461], "shap_valu": 458, "shape": [21, 213, 220, 302, 306, 308, 381, 425, 455, 462], "shapinsight": [92, 93, 95, 96, 441, 451], "shaplei": 94, "share": [253, 255, 257, 262, 266, 280, 282, 284, 286, 441, 444, 460], "shield": [278, 355, 398, 439, 453], "shift": 435, "shifted_hartmann": 435, "ship": [385, 449, 456], "shm": 440, "short": 442, "shortcut": [221, 455, 456], "shorten": [441, 442], "shot": 460, "should": [31, 44, 53, 94, 156, 187, 236, 248, 301, 316, 317, 348, 350, 354, 355, 359, 363, 364, 365, 373, 407, 409, 413, 416, 419, 420, 429, 433, 439, 441, 442, 446, 447, 448, 455, 457, 458, 460, 462], "show": [94, 397, 398, 399, 401, 402, 407, 408, 409, 416, 417, 419, 422, 429, 431, 432, 433, 435, 436, 448, 451], "showcas": 454, "shown": [413, 422, 436, 441, 447], "shrink": 414, "shutdown": 440, "side": [45, 158, 307, 441], "sigma": [173, 174, 175, 176, 306, 424, 443], "signal": [67, 452], "signatur": [88, 293, 330, 332, 414, 441, 442, 448, 456], "significantli": [221, 422, 435, 436, 448], "silenc": 442, "silent": [441, 448], "similar": [186, 440, 448, 449, 451, 453, 454, 455, 456, 460, 462], "similarli": [425, 453], "simpl": [20, 21, 322, 398, 412, 413, 420, 439, 441, 447, 454, 457, 459, 460], "simpler": [442, 456], "simplest": [455, 458], "simplex": [221, 461], "simplex_paramet": [221, 419, 455], "simpli": [336, 412, 413, 442, 448, 450, 452, 453, 454, 455, 456, 459, 460], "simplic": 332, "simplifi": 442, "simul": [83, 350, 409, 414, 439, 441, 460, 461], "simulate_experi": [248, 250, 457], "simulate_scenario": [250, 396, 397, 398, 399, 413, 435, 436, 457], "simulate_transfer_learn": [435, 457], "simulationresult": 422, "simultan": [452, 458], "sinc": [57, 158, 215, 261, 332, 397, 404, 405, 417, 428, 431, 432, 433, 435, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 460], "singer": 460, "singl": [21, 31, 40, 53, 94, 118, 133, 158, 213, 215, 221, 244, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 296, 298, 304, 346, 364, 372, 381, 387, 397, 398, 399, 408, 413, 419, 424, 435, 436, 439, 441, 447, 448, 449, 450, 451, 452, 453, 455, 458, 460, 461], "single_lin": 346, "single_y0": 425, "single_y1": 425, "singledispatch": 366, "singletargetobject": [31, 296, 298, 304, 397, 398, 399, 401, 402, 407, 408, 409, 410, 413, 416, 417, 431, 432, 433, 439, 441, 458, 461], "site": 440, "situat": [158, 407, 409, 419, 440, 442, 446, 448, 452, 453, 456, 457, 460], "six": [419, 420], "size": [21, 101, 102, 103, 106, 108, 110, 111, 112, 185, 187, 215, 220, 221, 313, 368, 414, 416, 422, 428, 429, 435, 436, 447, 456, 457, 460, 462], "sk": 416, "skeleton": 441, "skfp": 150, "skicit": 441, "skin": 457, "skip": [218, 224, 441, 447], "skl2onnx": 416, "sklearn": [207, 371, 416, 440], "sklearnclusteringrecommend": [204, 205, 206, 441, 446], "slightli": [242, 398, 419, 457], "slot": [418, 422, 437, 441, 448], "slot1_amount": 419, "slot1_label": 419, "slot2_amount": 419, "slot2_label": 419, "slot3_amount": 419, "slot3_label": 419, "slow": [407, 409, 410, 455], "slowest": 441, "small": [314, 318, 404, 419, 435, 436, 441, 445, 453], "smaller": [31, 422, 447, 460], "smallest": [213, 357, 455], "smart": 439, "smartli": 419, "smile": [156, 339, 341, 342, 439, 453], "smoke": 441, "smoke_test": [396, 397, 398, 399, 405, 407, 408, 410, 413, 414, 422, 425, 435, 436], "smooth": [106, 108, 176], "smoothedboxprior": 441, "smoother": 106, "sn": [396, 397, 398, 399, 413, 435, 436], "snippet": 449, "so": [31, 244, 261, 356, 399, 413, 419, 422, 428, 429, 439, 440, 447, 448, 449, 450, 452, 453, 454, 456, 459], "softwar": [439, 444], "sola": 443, "sole": 444, "solut": [75, 447, 448, 452, 455, 456, 460], "solv": [261, 408, 409, 419, 422], "solv_rdkit2ddesc": 409, "solvent": [397, 398, 399, 401, 402, 407, 408, 409, 410, 413, 417, 419, 420, 432, 433, 439, 448, 453], "solvent1": [419, 420], "solvent2": [419, 420], "solvent3": 419, "solvent4": 419, "solvent5": 419, "solvent8": 419, "solvent9": 419, "solvent_1": 448, "solvent_2": 448, "solvent_3": 448, "solvent_data": 413, "solvent_encoding1": 448, "solvent_encoding2": 448, "solvent_mordred_enc": 448, "solvent_rdkit2dd": [407, 410], "solvent_rdkit_enc": 448, "solvent_smil": 413, "solver": 457, "some": [53, 371, 397, 398, 399, 402, 407, 408, 409, 410, 413, 414, 416, 417, 419, 420, 425, 427, 428, 429, 431, 436, 446, 448, 449, 453, 454, 456, 457, 458, 462], "someth": [86, 433], "sometim": [448, 457], "somewhat": 449, "somewher": 447, "soon": [439, 447, 454], "sophist": [441, 450, 456], "sort": 161, "sourabh": 443, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 121, 122, 124, 126, 127, 129, 131, 133, 135, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 152, 153, 156, 158, 159, 160, 161, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 199, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 234, 235, 236, 238, 240, 241, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 263, 266, 268, 269, 270, 273, 274, 276, 278, 280, 282, 284, 286, 288, 289, 290, 292, 293, 296, 298, 301, 302, 304, 306, 307, 308, 310, 311, 312, 313, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 368, 373, 374, 375, 377, 378, 380, 381, 382, 384, 392, 393, 394, 439, 440, 441, 442, 444], "space": [10, 15, 25, 26, 31, 38, 45, 52, 55, 68, 73, 77, 82, 86, 138, 139, 140, 142, 143, 145, 152, 153, 156, 179, 188, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 221, 224, 225, 244, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 312, 357, 381, 396, 399, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 422, 424, 425, 426, 428, 431, 436, 437, 441, 443, 446, 448, 449, 450, 451, 453, 454, 456, 457, 461], "span": [61, 138, 139, 140, 142, 143, 145, 152, 153, 156, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 312, 412, 422, 427, 451], "speak": 460, "spec": [218, 224, 235], "special": [187, 439, 440, 444, 445, 450, 460, 462], "specif": [99, 159, 166, 207, 215, 218, 231, 248, 290, 324, 393, 412, 413, 428, 439, 442, 447, 448, 450, 453, 454, 455, 456, 457, 458, 459, 460], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 53, 87, 98, 145, 156, 158, 159, 160, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 234, 235, 244, 246, 248, 258, 306, 307, 308, 316, 331, 340, 348, 351, 357, 358, 381, 382, 398, 402, 404, 416, 417, 422, 424, 435, 439, 440, 441, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460], "speed": [221, 407, 409, 410, 435, 436, 449, 455], "speed_fast": 455, "speed_norm": 455, "speed_slow": 455, "speedup": [441, 460], "spell": 442, "spellcheck": 441, "sphinx": [441, 442], "split": [189, 446], "sporad": 441, "spread": 459, "sqrt": 448, "squar": [422, 425, 448], "squash": 442, "stabil": [441, 449], "stabl": [99, 166, 309], "stage": [447, 448, 456], "stand": 441, "standard": [6, 18, 290, 416, 441, 447, 453], "star": 419, "start": [244, 396, 412, 413, 414, 420, 422, 425, 440, 441, 446, 453, 454, 456, 457, 460], "startup": 441, "stat": [31, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 310, 414, 420, 422, 447], "state": [182, 184, 185, 186, 187, 413, 419, 438, 441, 444, 447, 450], "stateless": [422, 438, 441, 450], "statement": [359, 428, 439, 444], "static": [13, 16, 215, 221, 266, 439, 442, 460], "statist": [31, 253, 255, 256, 257, 262, 266, 280, 282, 284, 286, 313, 436, 439, 441, 449, 461], "statu": 447, "std": [31, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286], "std_threshold": 290, "stem": [440, 460], "step": [218, 224, 244, 419, 422, 438, 439, 442, 447, 452, 456, 458], "sterl": 443, "steven": 398, "still": [159, 348, 413, 422, 446, 448, 449, 451, 453, 458, 460, 462], "stop": [411, 437, 441, 442], "stop_on_pi": 413, "stoppag": 444, "storag": [447, 449, 456], "store": [26, 140, 290, 296, 414, 419, 422, 439, 441, 447, 462], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 127, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 159, 160, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 195, 197, 204, 205, 206, 207, 213, 215, 220, 221, 234, 238, 248, 250, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 299, 304, 306, 307, 308, 310, 313, 316, 317, 324, 330, 331, 337, 339, 341, 342, 344, 346, 348, 351, 354, 355, 359, 364, 368, 374, 417, 422, 432, 433, 435, 436], "straightforward": [459, 460], "strategi": [15, 197, 215, 242, 396, 422, 441], "stream": [328, 441, 449], "streamingsequentialmetarecommend": [185, 454], "streamingsequentialstrategi": 441, "streamlin": 442, "streamlit": [439, 441], "streibel": 443, "strict": 330, "strictli": [417, 432, 433], "stride": 404, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 155, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 337, 341, 342, 344, 345, 346, 354, 364, 416, 431, 441, 447, 448, 453, 459, 461], "strip": [244, 399], "strong": 441, "strongli": 447, "strtobool": [441, 449], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 49, 124, 234, 439, 440, 441, 442, 443, 447, 453, 456], "studi": [180, 439, 451, 454, 461], "style": [118, 435, 441, 442], "sub": [207, 441, 451, 456], "subclass": [87, 234, 324, 326, 336, 402, 441, 442, 454, 456], "subfold": 449, "subgraph": 453, "subgroup": 420, "subject": 444, "sublicens": 444, "submiss": [441, 444], "submit": [26, 310, 312, 439, 442, 444], "subpackag": [441, 442, 457], "subplot": 425, "subselectioncondit": [408, 409, 441, 450, 461], "subsequ": [187, 215, 221, 248, 341, 438, 444, 447, 456, 458], "subset": [31, 121, 126, 131, 133, 156, 215, 327, 358, 381, 447, 448, 450, 453], "subspac": [26, 61, 189, 197, 212, 213, 215, 217, 219, 221, 404, 407, 408, 409, 410, 424, 427, 429, 431, 441, 448, 454, 456, 461, 462], "subspace_continu": 61, "subspace_json": 456, "subspacecontinu": [31, 61, 138, 152, 215, 217, 427, 441, 455], "subspacediscret": [31, 139, 142, 143, 145, 153, 156, 215, 217, 220, 407, 408, 409, 410, 419, 424, 431, 441, 455, 456, 462], "substanc": [150, 156, 340, 398, 401, 407, 409, 410, 420, 441, 448, 451, 453, 460], "substance_12": 448, "substance_3": 448, "substance_43": 448, "substance_data": 441, "substance_encod": 398, "substanceencod": [156, 340, 342, 407, 408, 409, 410, 441, 453], "substanceparamet": [397, 398, 399, 401, 402, 407, 408, 409, 410, 413, 417, 419, 432, 433, 439, 441, 448, 449, 451, 455, 461], "substanti": [156, 462], "substrat": 460, "subtyp": 456, "success": [298, 381, 422, 456], "success_valu": 298, "suffic": 442, "suffici": [413, 455, 456], "suggest": [451, 457], "suit": 442, "suitabl": [207, 221, 244, 337, 442, 445, 447, 453, 457, 458, 460], "sum": [59, 114, 221, 396, 406, 407, 408, 409, 413, 419, 420, 422, 425, 437, 448, 452, 455], "sum_": [448, 452], "sum_constraint": 419, "sum_constraint_1": 410, "sum_constraint_2": 410, "sum_toler": 419, "summar": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 139, 140, 142, 143, 145, 152, 153, 156, 296, 298, 304], "summari": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 139, 140, 142, 143, 145, 152, 153, 156, 296, 298, 304, 441, 442], "superior": 445, "supersed": 444, "support": [10, 31, 92, 93, 94, 95, 96, 186, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 371, 402, 407, 408, 409, 410, 413, 414, 416, 419, 424, 431, 439, 441, 442, 443, 444, 448, 451, 453, 454, 455, 457, 458], "supports_batch": 441, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 253, 255, 257, 262, 266, 280, 282, 284, 286, 441, 458], "supports_pending_experi": 441, "supports_transfer_learn": [253, 255, 257, 262, 266, 280, 282, 284, 286, 458], "suppos": [312, 448], "sure": [419, 427, 439, 442], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 74, 76, 94, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 195, 197, 204, 205, 206, 207, 213, 215, 221, 253, 255, 258, 260, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 407, 408, 409, 410, 414, 422, 424, 431, 437, 439, 441, 443, 447, 448, 451, 453, 454, 460, 461], "surrogate_model": [195, 197, 402, 414, 416, 417, 422, 432, 433, 441], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 94, 195, 197, 257, 260, 441], "svg": 425, "sw": 408, "swiss": 443, "switch": [53, 183, 186, 187, 290, 402, 407, 408, 409, 410, 422, 424, 431, 439, 441, 448, 454], "switch1": 408, "switch2": 408, "switch2_left": 408, "switch2_right": 408, "switch_1": 448, "switch_2": 448, "switch_aft": [187, 432, 433, 454], "switzerland": 443, "sy": 440, "symmetri": 448, "syntax": [439, 441], "synthet": [404, 405, 414, 425, 435, 436], "system": [398, 422, 439, 440, 444, 449, 457, 460], "t": [288, 289, 329, 337, 397, 398, 399, 401, 402, 409, 414, 425, 435, 436, 438, 450, 453, 456, 457], "t1": [456, 457], "t2": 456, "t3": 456, "t_1": 452, "t_2": 452, "t_3": 452, "t_i": 452, "tab": 425, "tabl": [359, 441, 447, 448, 451], "tabular": 457, "tag": [439, 441, 456], "tailor": 447, "take": [8, 49, 106, 139, 153, 158, 159, 253, 255, 257, 262, 266, 276, 280, 282, 284, 286, 299, 412, 419, 441, 446, 447, 448, 452, 453, 454, 460], "taken": [185, 413, 441, 447, 450, 452], "tantamount": 445, "target": [12, 13, 16, 31, 77, 118, 121, 122, 126, 130, 131, 132, 133, 135, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 244, 245, 246, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 290, 298, 301, 302, 304, 332, 348, 351, 352, 358, 361, 373, 374, 376, 394, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 413, 414, 416, 417, 422, 428, 429, 431, 432, 433, 435, 436, 437, 439, 441, 446, 447, 449, 451, 456, 457, 458, 461], "target_1": [408, 409, 410, 424, 452, 459], "target_2": [424, 452, 459], "target_3": [424, 452], "target_3a": 459, "target_3b": 459, "target_a": 458, "target_b": 458, "target_cumbest": [396, 435, 436], "target_max": 447, "target_transform": 424, "targetmod": [304, 456, 459], "targetnam": 244, "targettransform": [304, 441, 459], "task": [143, 215, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 296, 298, 304, 422, 441, 447, 454, 456, 457, 460], "task_idx": [215, 441], "task_param": [435, 436, 457], "task_paramet": 456, "task_parameter_json": 456, "task_parameter_reconstruct": 456, "taskparamet": [228, 435, 436, 441, 450, 456, 457, 461], "tb": 462, "technic": [221, 446, 457, 460], "techniqu": [207, 454], "technologi": 443, "telemetri": [441, 443, 461], "tell": 311, "temp": [407, 409, 443], "temp_c": [397, 398, 399, 413], "temperatur": [397, 399, 401, 402, 407, 409, 412, 416, 417, 431, 448, 453, 455, 460], "temperature_resolut": 407, "temperature_valu": 413, "temporari": [117, 123, 198, 215, 378, 413, 441, 449, 456], "temporarili": [441, 462], "temporary_se": 462, "tempt": 460, "tenac": 441, "tend": 414, "tensor": [26, 45, 253, 288, 289, 351, 360, 364, 384, 386, 435, 441], "term": [109, 242, 413, 422, 442, 444, 447, 451, 455, 456, 457, 460], "termin": [413, 414, 440, 444], "terminologi": 461, "tert": [397, 398, 399, 401, 402], "test": [221, 244, 262, 348, 422, 435, 436, 439, 440, 441, 442, 447, 451, 457, 462], "test_funct": [404, 405, 414, 428, 429, 435, 436], "test_scenario": [397, 399], "testabl": [83, 244], "testfunct": [404, 405, 428, 429], "testfunctionclass": [404, 405, 428, 429], "text": [34, 416, 425, 444, 448, 449, 452], "th": [317, 448], "than": [31, 65, 82, 153, 185, 186, 187, 197, 213, 215, 228, 317, 336, 346, 352, 382, 398, 409, 413, 420, 445, 448, 449, 451, 453, 456, 458], "thei": [159, 180, 190, 307, 354, 358, 402, 410, 413, 419, 422, 427, 441, 442, 446, 447, 448, 451, 453, 454, 455, 456, 459, 460, 462], "them": [38, 276, 349, 402, 439, 440, 441, 442, 446, 448, 449, 450, 451, 453, 454, 456, 460], "theme": 441, "theori": 444, "therebi": 221, "therefor": [44, 187, 253, 255, 257, 262, 266, 280, 282, 284, 286, 402, 440, 447, 456, 458, 460], "therein": 441, "thereof": 444, "thf": 448, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 182, 184, 185, 186, 187, 189, 197, 204, 205, 206, 207, 213, 215, 221, 242, 246, 248, 250, 253, 255, 257, 258, 260, 261, 262, 266, 276, 280, 282, 284, 286, 290, 313, 316, 332, 333, 336, 341, 348, 350, 352, 353, 355, 357, 359, 396, 412, 413, 414, 416, 417, 419, 420, 422, 425, 427, 431, 432, 433, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462], "think": [422, 453], "third": [424, 444, 457], "thompson": [21, 443], "thomson": 21, "those": [63, 159, 187, 189, 242, 381, 402, 440, 444, 448, 457], "though": 460, "three": [398, 419, 420, 424, 425, 439, 447, 448, 451, 452, 454, 455, 460], "threshold": [42, 44, 145, 156, 158, 160, 187, 197, 290, 355, 404, 409, 410, 413, 419, 441, 448, 453], "thresholdcondit": [58, 59, 404, 409, 410, 419, 461], "through": [31, 215, 306, 316, 348, 358, 417, 419, 422, 424, 439, 441, 442, 444, 448, 452, 456, 457, 461], "throughout": 187, "throw": [341, 448], "thrown": [246, 399, 413, 432, 440, 452], "thu": [197, 332, 358, 397, 398, 404, 405, 407, 408, 409, 410, 416, 417, 419, 422, 424, 428, 429, 431, 440, 442, 447, 449, 450, 453, 454, 456, 457, 460, 462], "tick": 414, "tight_layout": 425, "time": [10, 197, 313, 382, 405, 412, 419, 422, 439, 441, 446, 447, 448, 450, 453, 456, 457, 458, 462], "timeout": [441, 449], "timer": 412, "titl": [425, 444], "tl": 435, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 413, 414, 441], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 364], "to_factori": [101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116], "to_fram": 396, "to_gpytorch": [101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 168, 170, 171, 172, 173, 174, 175, 176, 441], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 364, 416, 417, 431, 447, 456], "to_keep": 356, "to_ndarrai": 364, "to_numpi": 425, "to_object": [296, 298, 304, 396, 404, 405, 414, 422, 425, 428, 429, 435, 436, 452, 457], "to_polar": [40, 41, 42], "to_searchspac": [138, 139, 140, 142, 143, 145, 152, 153, 156, 213, 221, 422, 427, 441, 450], "to_str": 441, "to_subspac": [138, 139, 142, 143, 145, 152, 153, 156, 441], "to_tensor": [364, 413, 414, 416, 441], "to_tupl": [364, 425], "togeth": [38, 69, 317, 402, 422, 429, 439, 441, 448], "toggl": 31, "toggle_discrete_candid": [31, 441, 450], "toler": [31, 42, 153, 221, 393, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 413, 416, 417, 419, 424, 428, 429, 431, 432, 433, 439, 441, 448], "tolist": 404, "toluen": 453, "toml": 441, "too": [404, 457, 460], "tool": [338, 441, 448, 456], "toolbox": 439, "top": [441, 442], "topic": 447, "topolog": 453, "topologicaltors": 150, "topologicaltorsionfingerprint": 150, "torch": [351, 364, 413, 414, 416, 435, 441], "toronto": 443, "tort": 444, "total": [186, 187, 381, 419, 420, 422, 455], "total_bas": 420, "total_phase_ag": 420, "toward": [170, 348, 448], "towel": 438, "tox": [439, 441, 442], "tracebackexcept": 440, "track": [179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 221, 413, 444, 450], "trade": [8, 444, 452], "trademark": 444, "tradit": [398, 418, 419, 437, 439, 441], "train": [79, 94, 179, 185, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 250, 253, 255, 257, 258, 260, 261, 262, 266, 280, 282, 284, 286, 290, 415, 425, 435, 436, 441, 457], "train_i": 416, "train_x": 416, "training_funct": 436, "trajectori": [242, 396, 413, 422, 447, 457], "transfer": [249, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 402, 407, 408, 409, 410, 424, 431, 435, 437, 439, 441, 444, 453, 458, 461], "transform": [31, 79, 121, 126, 131, 133, 139, 140, 142, 143, 145, 153, 156, 213, 215, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 296, 298, 302, 304, 342, 351, 358, 361, 364, 365, 384, 407, 408, 409, 410, 431, 441, 444, 449, 453, 458, 459], "transform_rep_exp2comp": 441, "transit": 441, "translat": [38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 441, 444, 450, 453], "transmiss": 456, "transmit": 313, "travers": 441, "treasur": 461, "treat": [156, 160, 253, 255, 257, 262, 266, 280, 282, 284, 286, 398, 439, 448, 453, 459, 462], "tree": 441, "tremend": 398, "trend": 460, "tri": 455, "triangl": 308, "triangular": [302, 308, 424, 459], "tricki": 451, "tricyclohexylphosphin": [397, 398, 399], "trigger": [185, 316, 413, 417, 422, 441, 442, 446, 452, 456], "trivial": [269, 282, 452, 453, 458], "true": [6, 12, 13, 14, 16, 17, 31, 34, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 94, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 160, 197, 215, 266, 298, 307, 325, 326, 330, 336, 337, 346, 356, 393, 398, 402, 404, 405, 407, 408, 409, 410, 414, 416, 417, 419, 422, 424, 428, 429, 431, 432, 433, 435, 436, 441, 447, 448, 449, 450, 451, 453, 456], "truncat": [439, 449], "trust": [416, 449], "truth": 337, "truthi": 449, "try": [86, 348, 397, 398, 399, 413, 416, 417, 433, 440, 441, 462], "tune": 439, "tupl": [13, 16, 31, 41, 45, 101, 102, 103, 106, 108, 110, 111, 112, 114, 115, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 161, 213, 215, 220, 221, 289, 316, 323, 330, 333, 345, 348, 360, 364, 368, 384], "turn": [44, 213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 368, 427, 439, 440, 441, 448, 449], "turnaround": 457, "twice": [450, 452], "two": [13, 16, 34, 55, 64, 65, 127, 187, 197, 242, 317, 322, 351, 373, 381, 396, 397, 399, 412, 419, 422, 424, 425, 429, 435, 436, 438, 439, 441, 442, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "twofold": 422, "twophasemetarecommend": [397, 399, 402, 407, 408, 409, 410, 413, 414, 416, 417, 422, 424, 429, 431, 432, 433, 439, 441, 454], "twophasestrategi": 441, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 122, 124, 126, 127, 131, 133, 135, 138, 139, 140, 142, 143, 145, 152, 153, 155, 156, 158, 159, 160, 161, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 199, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 221, 222, 223, 224, 226, 227, 228, 231, 232, 234, 235, 236, 238, 240, 241, 244, 246, 248, 250, 253, 255, 256, 257, 258, 260, 262, 263, 266, 269, 270, 274, 280, 282, 284, 286, 288, 289, 290, 292, 293, 296, 298, 299, 304, 306, 307, 308, 310, 311, 312, 313, 316, 317, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 370, 371, 373, 374, 375, 381, 382, 384, 386, 389, 390, 391, 392, 393, 394, 398, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 420, 422, 424, 431, 432, 433, 439, 441, 442, 444, 445, 448, 451, 452, 453, 454, 455, 458, 460, 461], "typealia": 299, "typeerror": [31, 94, 98, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 332, 348, 349, 382, 393, 394, 413, 414], "typeguard": 329, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 159, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 226, 234, 235, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 289, 296, 298, 304, 326, 327, 328, 329, 345, 351, 358, 364], "typic": [15, 332, 346, 398, 439, 446, 447, 451, 453, 456, 462], "typing_extens": 442, "typo": [441, 442], "u": [21, 396, 397, 398, 399, 412, 414, 419, 420, 422, 427, 436, 439, 445, 448, 452], "ucb": [8, 402, 441, 445, 456], "ultim": 442, "ultra": [432, 433], "un": 441, "unabl": 416, "unavail": 441, "unawar": 446, "unbound": [364, 412], "uncaught": 441, "uncertainti": [8, 15, 402, 461], "unchang": 158, "uncharacter": 460, "uncorrel": [355, 460], "undefin": [253, 450], "under": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 313, 358, 410, 414, 422, 425, 439, 440, 444, 446, 453], "underflow": 84, "underli": [31, 55, 413, 422, 439, 447, 451, 454, 456], "underscor": 441, "understand": [439, 460], "undesir": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 448, 450, 453, 462], "undo": 440, "unequ": 410, "unevenli": 453, "unexpect": 86, "unfinish": 446, "unfortun": 460, "unhandl": 441, "uniform": [213, 253, 349, 350, 441], "uniformli": 381, "uniniti": 336, "uninstal": [85, 439], "unintend": [89, 332, 441, 442], "unintention": 462, "union": [13, 16, 31, 127, 160, 244, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 306, 307, 308, 374, 429, 444, 455], "uniqu": [56, 135, 159, 419, 441, 453], "unit": [220, 368], "unknown": [186, 381, 396, 422, 441, 458, 460], "unlabel": 351, "unless": [439, 442, 444, 449, 453, 456], "unlik": [12, 13, 14, 16, 17, 419, 452, 462], "unlock": 461, "unmaintain": 441, "unmatch": 330, "unmatchedattributeerror": 330, "unmeasur": [244, 399], "unnecessari": [441, 447], "unpromis": 413, "unreach": 441, "unrealist": 457, "unrecogn": 348, "unrestrict": 332, "unsaf": 441, "unspecifi": [321, 441, 456], "unspecifiedtyp": 31, "unsqueez": [413, 414], "unstructur": [236, 456], "unstructure_bas": 234, "unsupport": [213, 246], "until": [182, 184, 185, 186, 187, 244, 422, 439, 457], "untouch": 349, "untransform": [31, 458], "unusedobjectwarn": [413, 441, 446], "unveil": 436, "unwant": 38, "up": [31, 221, 244, 246, 396, 397, 398, 399, 400, 407, 409, 412, 414, 418, 419, 420, 425, 429, 435, 436, 439, 440, 441, 445, 448, 452, 462], "updat": [31, 398, 401, 441, 442, 446], "upgrad": 441, "upon": [189, 269, 440, 441, 442, 448, 455, 458, 460], "upper": [8, 22, 160, 176, 215, 221, 306, 307, 308, 364, 402, 414, 424, 425, 435, 436, 441, 448, 459, 462], "upper_bound": [407, 408, 409, 410, 431, 455], "upper_threshold": 160, "upperconfidencebound": [22, 445, 456], "upstream": 442, "urg": 451, "url": [449, 460], "us": [15, 21, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 69, 73, 94, 106, 126, 127, 145, 150, 153, 156, 159, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 222, 223, 235, 244, 246, 248, 253, 255, 257, 262, 263, 266, 280, 282, 284, 286, 302, 312, 313, 319, 332, 333, 341, 342, 348, 350, 351, 357, 366, 370, 371, 381, 386, 396, 404, 405, 411, 412, 413, 414, 415, 418, 419, 420, 427, 431, 432, 433, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 459, 460, 461, 462], "usa": 443, "usabl": [336, 440, 441, 453, 456], "usag": [367, 439, 441, 448, 449, 454, 461], "use_comp_rep": [94, 98, 451], "use_torch": [351, 404, 405, 414, 428, 429, 435, 436], "user": [52, 53, 67, 80, 89, 145, 148, 253, 255, 257, 262, 266, 280, 282, 284, 286, 293, 310, 350, 401, 402, 407, 424, 433, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460], "userguid": 309, "usernam": [310, 441, 449], "userwarn": 440, "uses_shap_explain": 94, "usort": 441, "usr": 150, "usrcat": 150, "usrcatfingerprint": 150, "usrfingerprint": 150, "usual": [244, 397, 398, 399, 432, 440, 451, 453], "util": [31, 197, 213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 312, 319, 321, 322, 364, 380, 384, 396, 398, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 422, 424, 425, 428, 429, 435, 436, 439, 441, 445, 446, 451, 452, 453, 454, 456, 457, 458, 460, 461], "uv": [439, 441], "v": 460, "val": [49, 124, 337, 435], "val_from_param1": 57, "val_from_param2": 57, "valid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 158, 159, 215, 218, 221, 224, 262, 352, 357, 407, 430, 432, 437, 440, 441, 442, 447, 448, 457], "validate_compat": 262, "validate_config": [31, 433, 441, 447], "validate_parameter_input": 31, "validate_target_input": 31, "valu": [6, 13, 16, 26, 31, 34, 40, 41, 42, 44, 45, 53, 55, 77, 94, 105, 106, 107, 108, 109, 110, 111, 112, 116, 121, 126, 127, 131, 133, 139, 142, 143, 145, 147, 148, 150, 153, 156, 158, 159, 160, 163, 164, 165, 187, 204, 205, 206, 207, 213, 215, 221, 222, 223, 242, 244, 246, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 298, 299, 301, 306, 307, 308, 313, 316, 320, 321, 327, 330, 337, 344, 348, 349, 350, 352, 354, 357, 358, 359, 364, 366, 373, 374, 375, 389, 390, 391, 392, 393, 394, 397, 398, 399, 401, 402, 404, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 422, 424, 425, 428, 429, 431, 432, 433, 435, 436, 439, 441, 442, 445, 447, 448, 449, 450, 451, 452, 459, 460, 461, 462], "valuabl": [454, 457], "valueerror": [13, 15, 16, 31, 44, 63, 64, 65, 94, 98, 127, 135, 158, 159, 164, 165, 213, 215, 221, 227, 244, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 293, 317, 330, 335, 337, 340, 344, 346, 348, 350, 352, 357, 358, 381, 382, 393, 394, 417, 429, 440], "var": [31, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 422, 461], "vari": [31, 221, 398, 452], "variabl": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 253, 255, 257, 262, 266, 280, 282, 284, 286, 296, 311, 313, 372, 387, 428, 439, 441, 442, 448, 453, 454, 456, 458], "varianc": [8, 15, 105, 282, 353, 441, 445], "variance_initial_valu": 105, "variance_prior": 105, "variant": [402, 435, 451, 460], "variat": 425, "varieti": [428, 442, 456, 457], "variou": [364, 419, 426, 441, 446, 451, 454, 457], "varucb": 441, "vector": [34, 416, 441, 443, 452], "vendor": 453, "verbal": 444, "verbos": [417, 441], "veri": [407, 409, 424, 446, 449, 451, 453, 458, 462], "verifi": [336, 404, 407, 408, 409, 410, 419, 420, 427, 429, 431, 439, 442], "versa": [435, 460], "versatil": 454, "version": [215, 310, 371, 407, 409, 410, 419, 422, 427, 435, 436, 439, 440, 441, 442, 444, 456], "vert": 414, "via": [12, 15, 21, 30, 31, 44, 94, 187, 197, 209, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 312, 324, 332, 348, 356, 399, 405, 412, 413, 416, 427, 439, 441, 442, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 459, 460, 461], "via_init": 456, "via_json": 456, "viabl": [82, 424], "vice": [435, 460], "view": [213, 221, 414, 455], "view_init": 414, "violat": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 441], "viridi": 414, "virtual": 442, "visibl": 441, "visual": [398, 435, 436, 451, 459], "volum": 460, "vpn": [439, 449], "vsa": 150, "vsafingerprint": 150, "vulner": [441, 442], "w_i": 452, "wa": [15, 70, 71, 74, 76, 77, 85, 89, 159, 187, 253, 255, 257, 262, 266, 280, 282, 284, 286, 344, 348, 352, 382, 398, 440, 441, 442, 444, 449, 451, 453, 456, 460], "wai": [215, 412, 419, 420, 426, 427, 435, 438, 439, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 462], "wall": 10, "want": [52, 402, 407, 419, 422, 429, 436, 439, 442, 448, 449, 450, 451, 453, 454, 456, 458, 459], "warn": [66, 333, 407, 409, 410, 413, 428, 429, 441, 442], "warranti": [439, 444], "watch": 412, "water": [407, 408, 409, 410, 419, 448, 453], "waterfal": [94, 96, 441], "we": [26, 242, 396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 420, 422, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 439, 440, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458, 459, 460, 461, 462], "web": 442, "weber": 443, "weight": [118, 126, 127, 375, 424, 452, 456], "weight_kdalton": 453, "welcom": 442, "well": [310, 402, 413, 418, 438, 442, 447, 448, 451, 453, 457], "were": [31, 348, 399, 436, 440, 441, 446, 448, 449, 453, 455], "what": [159, 185, 215, 242, 348, 384, 396, 416, 424, 433, 438, 442, 445, 447, 451, 453, 460, 461], "whatsnew": 322, "when": [13, 16, 31, 44, 53, 86, 153, 158, 160, 185, 186, 187, 195, 197, 215, 253, 255, 257, 262, 263, 266, 280, 282, 284, 286, 293, 320, 321, 330, 332, 336, 346, 348, 351, 382, 407, 408, 410, 412, 417, 419, 420, 422, 424, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462], "whenev": [26, 185, 348, 456], "where": [13, 16, 21, 26, 34, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 316, 348, 381, 397, 398, 399, 402, 407, 409, 419, 422, 439, 440, 441, 442, 444, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460], "wherea": 456, "wherev": [444, 446], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 98, 138, 139, 140, 142, 143, 145, 152, 153, 156, 197, 213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 311, 350, 364, 419, 441, 444, 447, 449, 450, 459], "which": [13, 15, 16, 31, 40, 41, 42, 44, 89, 94, 121, 126, 131, 133, 159, 160, 179, 180, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 215, 221, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 312, 313, 332, 336, 348, 350, 355, 357, 359, 373, 374, 384, 396, 398, 402, 405, 412, 413, 419, 420, 422, 427, 428, 429, 433, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462], "while": [215, 218, 224, 413, 422, 424, 436, 440, 441, 444, 445, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460], "whilst": 348, "whim": 150, "whimfingerprint": 150, "whole": 444, "whom": 444, "whose": [127, 158, 159, 215, 246, 327, 330, 351, 396, 412, 419, 446, 457], "wide": 457, "wider": 459, "width": 359, "wieczorek": 443, "william": 460, "willing": 447, "win": [253, 422], "win_rat": 422, "window": [441, 449], "winerror": 440, "wise": 375, "wish": 456, "within": [31, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 393, 427, 441, 444, 448, 449, 453, 458, 460, 461, 462], "without": [186, 435, 436, 439, 441, 444, 446, 447, 448, 449, 453, 457, 460, 462], "won": 453, "work": [26, 287, 316, 351, 407, 409, 410, 413, 424, 431, 433, 439, 441, 442, 443, 444, 448, 449, 454, 456, 457], "workaround": [440, 441], "workflow": [416, 439, 447, 456, 461], "world": [439, 447], "worldwid": 444, "worst": [13, 16, 244, 246, 248, 399], "would": [56, 84, 158, 159, 242, 244, 250, 261, 412, 419, 422, 439, 442, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 462], "wrap": [101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 266, 270, 288, 289, 332, 439, 441, 452], "wrapper": [1, 25, 248, 250, 262, 333, 435, 436, 439, 454], "write": [439, 440, 444, 456], "written": [428, 429, 442, 444], "wrong": [433, 441], "wrongli": 440, "www": [439, 444], "x": [26, 122, 160, 217, 244, 246, 270, 323, 329, 333, 345, 360, 373, 384, 396, 397, 398, 399, 407, 408, 409, 410, 413, 414, 419, 424, 431, 435, 436, 439, 441, 455, 458], "x0": [425, 455], "x0_mesh": 425, "x1": [425, 455], "x1_mesh": 425, "x2": 455, "x_": [396, 404, 405, 427, 428, 429], "x_1": [404, 405, 427, 428, 429, 448], "x_2": [404, 405, 427, 428, 429, 448], "x_3": [404, 405, 427, 428, 429, 448], "x_4": [404, 405, 427, 428, 429], "x_5": 429, "x_6": 429, "x_i": 448, "x_pend": 26, "xlabel": 425, "xlsx": [397, 398, 399, 413], "xpho": [397, 398, 399], "xxxx": 440, "xylen": [397, 398, 399, 401, 402], "y": [278, 337, 355, 373, 396, 397, 398, 399, 413, 414, 416, 419, 435, 436, 439, 460], "y0": 425, "y0_mesh": 425, "y1": 425, "y1_mesh": 425, "ye": 337, "year": 460, "yet": [26, 441, 446, 454], "yield": [6, 106, 256, 397, 398, 399, 401, 402, 407, 413, 416, 417, 419, 429, 431, 432, 433, 439, 441, 445, 451, 452, 456], "yield_cumbest": [397, 398, 399, 413], "yield_mean": 447, "yield_mod": 447, "yield_q_0": 447, "yield_std": 447, "ylabel": 425, "yml": 441, "you": [31, 52, 398, 402, 404, 412, 417, 419, 422, 428, 429, 432, 438, 439, 440, 442, 444, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 462], "your": [398, 412, 419, 422, 429, 438, 439, 440, 441, 442, 444, 447, 448, 449, 450, 451, 453, 456, 457, 458, 459, 460, 462], "your_branch_nam": 442, "yourself": 422, "z": [414, 439], "zdir": 414, "zero": [44, 63, 65, 158, 160, 170, 353, 419, 422, 448, 460], "zip": [413, 414], "\u00b5fmt": 441, "\u0161o\u0161i\u0107": [439, 443]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.conversion.to_string", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 442, "0": 441, "01": 441, "02": 441, "03": 441, "04": 441, "05": 441, "06": 441, "07": 441, "08": 441, "09": 441, "1": 441, "10": 441, "11": 441, "12": 441, "13": 441, "14": 441, "15": 441, "16": 441, "17": 441, "19": 441, "2": 441, "2022": 441, "2023": 441, "2024": 441, "2025": 441, "21": 441, "23": 441, "24": 441, "27": 441, "28": 441, "29": 441, "3": 441, "31": 441, "4": 441, "5": 441, "6": 441, "7": 441, "8": 441, "9": 441, "A": 439, "For": 453, "On": 451, "The": [422, 432, 439, 450, 456, 457, 460], "abbrevi": 456, "acqf": 2, "acquisit": [1, 2, 23, 25, 27, 28, 29, 402, 446], "acquisitionfunct": 24, "action": 460, "activ": [445, 453], "activate_paramet": 158, "ad": [401, 441, 446, 447, 460, 462], "add_fake_measur": 348, "add_noise_to_perturb_degenerate_row": 349, "add_parameter_nois": 350, "addendum": 424, "addit": 419, "additivekernel": 114, "advanc": [439, 458], "altern": 456, "amount": 419, "an": 422, "appli": 450, "arm": [421, 422], "arm64": 440, "arrai": 457, "arrays_to_datafram": 351, "assembli": 456, "asynchron": 446, "attr": 442, "augment": [315, 316, 317], "auto": 458, "automat": 456, "avail": [402, 458], "avx": 440, "back": 439, "backtest": [395, 435], "bandit": [252, 421, 422], "base": [23, 33, 100, 120, 122, 137, 167, 178, 181, 191, 194, 201, 254, 256, 295, 397, 398, 399, 404, 405, 419, 420, 429, 450, 457], "basesequentialmetarecommend": 184, "basic": [104, 169, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 400, 401, 447, 449, 451, 456], "basickernel": 101, "batch": 447, "batchify_ensemble_predictor": 288, "batchify_mean_var_predict": 289, "batteri": 439, "bayb": [0, 1, 2, 23, 25, 27, 28, 29, 30, 32, 33, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 104, 113, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 130, 132, 134, 135, 136, 137, 141, 144, 146, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 177, 178, 180, 181, 183, 188, 190, 191, 193, 194, 196, 198, 199, 200, 201, 203, 208, 211, 212, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259, 261, 263, 264, 265, 267, 270, 271, 272, 274, 275, 277, 279, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 401, 439, 442], "bayesian": [193, 194, 196, 198, 199, 439, 454], "bayesianlinearsurrog": 280, "bayesianrecommend": 195, "bell_transform": 306, "bernoulli": 422, "betabernoullimultiarmedbanditsurrog": 253, "betaprior": 170, "binari": [297, 299], "binarytarget": 298, "black": [396, 422], "block_deserialization_hook": 231, "block_serialization_hook": 232, "bo": 451, "boolean": [334, 335, 336, 337], "both": 431, "botorch": [196, 428], "botorchrecommend": 197, "bound": [412, 452, 455], "box": [396, 422], "break": 441, "build": [422, 455], "bytes_to_human_read": 368, "cach": [447, 449], "call": 450, "callabl": [404, 405, 429, 457], "campaign": [30, 31, 396, 397, 398, 399, 402, 404, 405, 407, 408, 410, 413, 416, 417, 424, 425, 428, 429, 431, 432, 447], "candid": [447, 450], "cardinalityconstraint": 34, "case": 422, "catch_constant_target": 290, "categor": 141, "categoricalencod": 147, "categoricalparamet": [142, 453], "caution": 450, "challeng": 448, "chang": 441, "changelog": 441, "check_if_in": 335, "chemic": 439, "chemistri": [338, 339, 340, 341, 342], "choicevalu": 299, "class": 442, "classproperti": 322, "clone": 439, "closer_el": 373, "closest_el": 374, "cluster": [203, 454], "code": 442, "columntransform": 384, "compar": 431, "compon": 412, "composit": [113, 259, 458], "compositekernel": 102, "compositesurrog": 260, "comput": [448, 451], "condit": [39, 40, 448], "config": [432, 433, 447], "configur": [416, 417, 432, 450, 452, 456], "constraint": [32, 33, 35, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 403, 404, 405, 406, 407, 408, 409, 410, 419, 420, 448, 450, 455, 462], "construct": [397, 398, 399, 404, 405, 419, 428, 429, 452, 455], "constructor": [455, 456], "continu": [43, 212, 403, 405, 419, 427, 445, 448, 453, 455, 460, 462], "continuouscardinalityconstraint": [44, 448], "continuousconstraint": 36, "continuouslinearconstraint": [45, 448], "continuouslinearequalityconstraint": 47, "continuouslinearinequalityconstraint": 48, "continuousnonlinearconstraint": 37, "continuousparamet": 138, "contribut": 442, "contributor": 443, "control": [447, 450], "conveni": 452, "convent": 442, "convers": [343, 344, 345, 346, 452, 456], "convert": [233, 416], "convert_acqf": 28, "convert_bound": 365, "convert_to_float": 323, "copi": 456, "core": [214, 217, 218, 230, 231, 232, 233, 234, 235, 236, 243, 244, 265, 272, 274], "cpu": 440, "creat": [396, 397, 398, 399, 402, 404, 405, 407, 408, 409, 410, 416, 417, 424, 427, 428, 431, 432, 435, 436, 447, 455], "create_fake_input": 352, "creation": [397, 398, 399, 419, 420, 447, 462], "current": 458, "custom": [144, 261, 263, 396, 407, 411, 412, 415, 416, 417, 458], "customdiscreteparamet": [145, 453], "customencod": 148, "customonnxsurrog": 262, "data": [397, 398, 399, 455, 460], "datafram": [347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 404, 405, 429, 455, 456, 457], "de": [431, 456], "default": [275, 455, 456], "defaultkernelfactori": 276, "defin": [396, 404, 405, 412, 413, 414, 424, 425, 428, 429, 433, 435, 436, 439], "definit": 413, "depend": [408, 439, 453], "deprec": [46, 47, 48, 49, 123, 124, 441], "deprecationerror": 67, "descript": 424, "deseri": 456, "deserialize_datafram": 240, "design": [439, 442], "desir": [125, 127, 447], "desirabilityobject": [126, 452], "develop": 442, "df_apply_dependency_augment": 316, "df_apply_permutation_augment": 317, "df_drop_single_value_column": 353, "df_drop_string_column": 354, "df_uncorrelated_featur": 355, "dictionari": [432, 433], "differ": 402, "dimens": 429, "discret": [50, 219, 222, 223, 224, 406, 407, 408, 409, 419, 428, 447, 448, 453, 455], "discretecardinalityconstraint": [51, 448], "discreteconstraint": 38, "discretecustomconstraint": [52, 448], "discretedependenciesconstraint": [53, 448], "discreteexcludeconstraint": [54, 448], "discretelinkedparametersconstraint": [55, 448], "discretenolabelduplicatesconstraint": [56, 448], "discreteparamet": 139, "discretepermutationinvarianceconstraint": [57, 448], "discreteproductconstraint": [58, 448], "discretesamplingmethod": 380, "discretesumconstraint": [59, 448], "discuss": 422, "disk": 449, "do": 457, "docstr": 442, "document": 417, "domin": 452, "dtypefloatnumpi": 370, "dtypefloatonnx": 371, "dtypefloattorch": 386, "dummi": 319, "duplic": 419, "dure": 462, "dynam": 450, "edbo": 277, "edbokernelfactori": 278, "effici": 462, "emptysearchspaceerror": 68, "encod": 453, "end": 439, "enum": [128, 146, 300], "environ": 449, "equival": 456, "estim": 462, "exampl": [397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 416, 417, 424, 428, 429, 431, 432, 433, 437, 439, 451], "except": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "exceptiongroup": 440, "exclud": 450, "exclus": [409, 410, 450], "expect": 460, "expectedimprov": 3, "experi": [407, 408, 409, 410, 416, 417, 424, 431, 439, 446, 457], "experiment": [447, 449, 451], "expir": 441, "explain": [92, 451], "explicit": 455, "extend": 442, "extract": 458, "fake": 462, "faq": 438, "farthest_point_sampl": 381, "featur": 449, "field": 456, "file": [432, 433], "filter_df": 356, "find_subclass": 324, "finite_float": 389, "fix": [440, 441], "float": 449, "fpsrecommend": 209, "fraction_to_float": 344, "from": [432, 439, 441, 447, 455, 456], "full": [397, 398, 399, 455], "function": [396, 397, 398, 399, 402, 404, 405, 413, 424, 428, 429, 442, 446], "further": 447, "fuzzy_row_match": 357, "gammaprior": 171, "gaussian_process": [264, 265, 267, 270, 271, 272, 274, 275, 277], "gaussianmixtureclusteringrecommend": 204, "gaussianprocesspreset": 273, "gaussianprocesssurrog": 266, "gener": [435, 436, 442, 454], "geom_mean": 375, "get": [401, 447, 450], "get_base_structure_hook": 234, "get_baseclass": 325, "get_canonical_smil": 339, "get_fingerprint_class": 340, "get_model_params_valid": 292, "get_parameters_from_datafram": 159, "get_subclass": 326, "get_transform_object": 358, "get_transform_paramet": 226, "get_user_detail": 310, "github": 439, "global": 445, "group_duplicate_valu": 327, "guid": 461, "halfcauchyprior": 172, "halfnormalprior": 173, "hilberts_factori": 328, "hook": [411, 412, 413, 414], "hybrid": [404, 429, 448], "imaginari": 422, "implicit": 452, "import": [396, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 412, 414, 416, 417, 419, 420, 422, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 451], "improv": 414, "includ": 439, "inclus": 397, "incompatibilityerror": 69, "incompatibleacquisitionfunctionerror": 70, "incompatibleargumenterror": 71, "incompatibleexplainererror": 72, "incompatiblesearchspaceerror": 73, "incompatiblesurrogateerror": 74, "incomplet": 399, "incorpor": 410, "independentgaussiansurrog": 255, "index": 439, "indic": 439, "infeasibilityerror": 75, "infiniteintervalerror": 363, "influenc": 462, "inform": [447, 454], "initi": [397, 402], "insight": [90, 91, 92, 93, 95, 96, 97, 98, 451], "instal": [439, 440], "instanc": 412, "instead": [416, 417], "instruct": 449, "internet": 449, "interpret": 451, "interrupt": 413, "interv": [362, 363, 364, 365, 366], "invalidsurrogatemodelerror": 76, "invalidtargetvalueerror": 77, "invari": 419, "invok": 456, "irrelev": 460, "is_abstract": 336, "is_all_inst": 329, "is_cardinality_fulfil": 61, "is_en": 311, "is_inact": 160, "is_shap_explain": 97, "issu": [439, 440], "iter": [404, 405, 416, 417, 424], "json": [447, 456], "kernel": [99, 100, 103, 104, 113], "kernel_factori": [267, 270], "kernelfactori": 268, "kmeansclusteringrecommend": 205, "known": [439, 440], "label": 453, "leak": 440, "learn": [434, 436, 445, 457, 460], "licens": [439, 444], "like": 453, "limit": [451, 458, 459], "linear": [279, 405], "linear_transform": 307, "linearkernel": 105, "link": 417, "local": [439, 445], "logexpectedimprov": 4, "lognormalprior": 174, "look_up_target": 246, "lookup": [245, 246, 397, 398, 399, 404, 405, 413, 429, 435, 436, 457], "loop": [396, 397, 398, 399, 435, 436, 439], "maco": 440, "maintain": [439, 443], "make_explainer_for_surrog": 98, "make_gp_from_preset": 274, "mandatori": 452, "manual": [407, 408, 409, 410], "mark": 446, "match": 459, "match_attribut": 330, "maternkernel": 106, "max": 459, "mean": 457, "meanpredictionsurrog": 282, "measur": [401, 416, 417, 447, 462], "mechan": [397, 398, 399, 457], "memori": [367, 368, 462], "memorys": 220, "meta": [180, 181, 183, 450, 454], "metarecommend": 182, "method": [412, 442, 445], "min": 459, "minimumcardinalityviolatedwarn": 78, "miss": 457, "mixin": 237, "mixtur": [418, 419, 420], "mode": [424, 459], "model": [402, 416, 417, 419, 420, 422, 451, 458], "modelnottrainederror": 79, "monitor": 414, "monkeypatch": [412, 413, 414], "multi": [421, 422, 423, 424, 458], "multipl": 457, "naiv": [188, 281], "naivehybridspacerecommend": 189, "name": 453, "name_to_smil": 341, "necessari": [397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 416, 417, 424, 428, 429, 431, 432, 433], "nest": 456, "ngboost": 283, "ngboostsurrog": 284, "nois": 462, "nomcacquisitionfunctionerror": 80, "non": 452, "non_inf_float": 390, "non_nan_float": 391, "non_shap_explain": 93, "none": 457, "nonpredict": [200, 201, 203, 208], "nonpredictiverecommend": 202, "nonstring_to_tupl": 345, "norecommenderslefterror": 81, "normalprior": 175, "notenoughpointslefterror": 82, "nothingtosimulateerror": 83, "numer": [151, 303, 369, 370, 371, 372, 373, 374, 375], "numericalcontinuousparamet": [152, 453], "numericaldiscreteparamet": [153, 453], "numericaltarget": [304, 459], "numericalunderflowerror": 84, "object": [117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 132, 134, 135, 397, 398, 399, 402, 404, 405, 407, 408, 409, 410, 424, 428, 431, 435, 436, 439, 447, 452, 456], "onnx": 416, "optim": [396, 425, 435, 436, 439, 447, 462], "option": [439, 453], "optionalimporterror": 85, "order": [419, 449], "output": [416, 417, 458], "overrid": 442, "packag": [439, 449], "page": 451, "pamclusteringrecommend": 206, "parallel": 447, "paramet": [136, 137, 140, 141, 144, 146, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 397, 398, 399, 402, 417, 419, 420, 447, 451, 453, 455, 462], "parameter_cartesian_prod_panda": 222, "parameter_cartesian_prod_polar": 223, "parameterencod": 149, "pareto": [130, 425], "paretoobject": [131, 452], "partial": [25, 446], "partialacquisitionfunct": 26, "pass": 417, "pend": 446, "perform": [397, 424, 428, 429], "periodickernel": 107, "perman": 450, "permut": 419, "piecewisepolynomialkernel": 108, "plainkernelfactori": 269, "plot": [396, 413, 414, 451], "point": 449, "polar": [440, 449], "polynomialkernel": 109, "posterior": 447, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 256, "pre": 416, "precis": 449, "predict": 447, "preset": [271, 272, 274, 275, 277], "pretrain": 416, "pretty_print_df": 359, "print": [407, 408, 410, 424], "prior": [166, 167, 168, 169], "probabilityofimprov": 7, "probabl": 414, "problem": [396, 413, 425, 440], "product": [410, 455], "productkernel": 115, "pull": 442, "pure": [190, 191, 193, 194, 196, 198, 199, 200, 201, 203, 208, 445, 454], "purerecommend": 192, "pycharm": 440, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedhypervolumeimprov": 13, "qlognoisyexpectedimprov": 14, "qlognparego": 12, "qnegintegratedposteriorvari": 15, "qnoisyexpectedhypervolumeimprov": 16, "qnoisyexpectedimprov": 17, "qposteriorstandarddevi": 18, "qprobabilityofimprov": 19, "qsimpleregret": 20, "qthompsonsampl": 21, "quick": 439, "qupperconfidencebound": 22, "random": [376, 377, 378], "random_forest": 285, "randomforestsurrog": 286, "randomrecommend": 210, "rbfkernel": 110, "recommend": [177, 178, 180, 181, 183, 188, 190, 191, 193, 194, 196, 198, 199, 200, 201, 203, 208, 401, 402, 416, 417, 428, 429, 431, 446, 447, 450, 454], "recommenderprotocol": 179, "reduct": 445, "refers_to": 331, "regist": 412, "register_custom_architectur": 263, "register_hook": 332, "relat": 440, "remov": 441, "replic": 458, "represent": [419, 420, 451, 455], "reproduc": 462, "request": 442, "restrict": 455, "result": [396, 413, 414, 446], "rffkernel": 111, "role": 460, "row": 449, "rqkernel": 112, "run": [396, 404, 405, 422], "sampl": [208, 445, 454], "sample_numerical_df": 382, "sampling_algorithm": [379, 381, 382], "scalar": [127, 129, 458], "scale": 383, "scalekernel": 116, "scenario": [247, 248, 457], "scope": 449, "search": [419, 420, 427, 435, 439, 445, 455, 462], "searchspac": [211, 212, 214, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 397, 399, 402, 404, 405, 407, 408, 409, 410, 424, 426, 428, 429, 436], "searchspacematchwarn": 86, "searchspacetyp": 216, "see": 460, "select_constructor_hook": 235, "semaphor": 440, "sequenti": [183, 447], "sequential_greedi": [198, 199], "sequentialgreedyrecommend": 199, "sequentialmetarecommend": 185, "serial": [229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 430, 431, 447, 456], "serialize_datafram": 241, "serialmixin": 238, "set": [396, 413, 414, 425, 427, 435, 436], "set_random_se": 377, "setup": [401, 407, 408, 409, 410, 416, 417, 419, 420, 422, 424, 425, 431], "shap": [91, 92, 93, 95, 96, 97, 98, 451], "shap_explain": 95, "shap_plot": 96, "shapinsight": 94, "signatur": 412, "simplex": [419, 455], "simul": [242, 243, 244, 245, 246, 247, 248, 249, 250, 396, 397, 398, 399, 413, 422, 435, 436, 457], "simulate_experi": 244, "simulate_scenario": 248, "simulate_transfer_learn": 250, "singl": [132, 425, 457], "singletargetobject": [133, 452], "sklearnclusteringrecommend": 207, "slot": [419, 420], "smile": 155, "smiles_to_fingerprint_featur": 342, "smoothedboxprior": 176, "some": [404, 405, 424], "sort_paramet": 161, "space": [419, 420, 427, 429, 435, 439, 445, 447, 455, 462], "span": 419, "stage": 416, "start": 439, "statist": 447, "stop": 413, "str_to_acqf": 29, "strategi": [402, 439], "streamingsequentialmetarecommend": 186, "string": [432, 456], "strtobool": 337, "structure_constraint": 49, "structure_object": 124, "studi": 458, "sub": 445, "subselectioncondit": [41, 448], "subspac": 455, "subspacecontinu": 213, "subspacediscret": 221, "substanc": [154, 155, 419, 439], "substanceencod": 150, "substanceparamet": [156, 453], "suggest": 440, "suitabl": 402, "sum": 410, "support": [440, 446], "surrog": [251, 252, 254, 256, 257, 259, 261, 263, 264, 265, 267, 270, 271, 272, 274, 275, 277, 279, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 402, 415, 416, 417, 458], "surrogateprotocol": 258, "synchron": 442, "synthet": [428, 429], "tabl": [397, 398, 399, 435, 436, 439], "target": [294, 295, 296, 297, 299, 300, 303, 305, 306, 307, 308, 412, 423, 424, 425, 452, 459, 462], "targetmod": 301, "targettransform": 302, "task": [435, 436], "taskparamet": [143, 453, 460], "technologi": 460, "telemetri": [309, 310, 311, 312, 313, 439, 449], "telemetry_record_recommended_measurement_percentag": 312, "telemetry_record_valu": 313, "temporary_se": 378, "terminologi": [419, 456, 457, 460], "test": [404, 405, 428, 429], "theoret": 419, "thi": [397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 410, 424, 428, 429, 451], "thresholdcondit": [42, 448], "through": 460, "to_kernel_factori": 270, "to_object": 122, "to_searchspac": 217, "to_str": 346, "to_tensor": 360, "to_tupl": 333, "toggl": 450, "toler": 447, "tool": 442, "torch": [385, 386, 387, 440], "tradit": 420, "train": 416, "trajectori": 450, "transfer": [434, 436, 457, 460], "transfer_learn": [249, 250], "transform": [305, 306, 307, 308, 424], "transform_target_column": 361, "treasur": 460, "triangular_transform": 308, "trigger": [412, 414], "two": 433, "twophasemetarecommend": 187, "type": 456, "uncertainti": 445, "unidentifiedsubclasserror": 87, "uninstal": 449, "uninterrupt": 413, "unlock": 460, "unmatchedattributeerror": 88, "unreleas": 441, "unspecifi": 320, "unspecifiedtyp": 321, "unstructure_bas": 236, "unusedobjectwarn": 89, "upperconfidencebound": 8, "us": [397, 398, 399, 401, 402, 407, 408, 409, 410, 416, 417, 422, 424, 428, 429, 455, 456, 457, 458], "usag": 451, "use_fallback_constructor_hook": 366, "user": 461, "util": [27, 28, 29, 60, 61, 157, 158, 159, 160, 161, 239, 240, 241, 287, 288, 289, 290, 314, 315, 316, 317, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 462], "v": [412, 419, 425, 440, 447, 450], "valid": [62, 63, 64, 65, 134, 135, 162, 163, 164, 165, 225, 226, 227, 228, 291, 292, 293, 388, 389, 390, 391, 392, 393, 394, 417, 433], "validate_cardinality_constraint_parameter_bound": 63, "validate_cardinality_constraints_are_nonoverlap": 64, "validate_constraint": 65, "validate_custom_architecture_cl": 293, "validate_decorrel": 163, "validate_is_finit": 164, "validate_not_nan": 392, "validate_paramet": 228, "validate_parameter_input": 393, "validate_parameter_nam": 227, "validate_searchspace_from_config": 218, "validate_simplex_subspace_from_config": 224, "validate_target_input": 394, "validate_target_nam": 135, "validate_unique_valu": 165, "valu": [453, 455, 456, 457], "variabl": 449, "varname_numpy_use_single_precis": 372, "varname_torch_use_single_precis": 387, "verif": [407, 408, 409, 410, 419, 420, 433], "verifi": 405, "via": 451, "visual": 425, "we": 457, "what": 457, "window": 440, "within": 455, "without": 440, "workflow": [442, 446], "wrap": [404, 405, 429], "write": 442}})