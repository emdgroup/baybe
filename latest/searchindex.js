Search.setIndex({"alltitles": {"Acquisition function": [[404, "acquisition-function"]], "AcquisitionFunction": [[23, null]], "Active Learning": [[447, null]], "Added": [[443, "added"], [443, "id6"], [443, "id16"], [443, "id20"], [443, "id26"], [443, "id33"], [443, "id42"], [443, "id48"], [443, "id52"], [443, "id59"], [443, "id64"], [443, "id70"], [443, "id76"], [443, "id80"], [443, "id84"], [443, "id88"], [443, "id93"], [443, "id97"], [443, "id100"], [443, "id104"], [443, "id108"], [443, "id112"], [443, "id115"], [443, "id119"], [443, "id123"], [443, "id127"], [443, "id131"], [443, "id137"], [443, "id140"]], "Addendum: Description of transformation functions": [[426, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[464, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[462, null]], "Adding Measurements": [[449, "adding-measurements"]], "Adding Partial Results": [[448, "adding-partial-results"]], "AdditiveKernel": [[113, null]], "Advanced Example: Chemical Substances": [[441, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[424, "an-imaginary-use-case"]], "Array-Based Callables": [[459, null]], "Asynchronous Workflows": [[448, null]], "Auto-Replication": [[460, null]], "Automatic field conversion": [[458, "automatic-field-conversion"]], "Available Models": [[460, "available-models"]], "Available recommenders suitable for initial recommendation": [[404, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[404, "available-surrogate-models"]], "Backtesting": [[397, null], [437, null]], "BaseSequentialMetaRecommender": [[183, null]], "Basic Creation": [[449, "basic-creation"]], "Basic Instructions": [[451, "basic-instructions"]], "Basic Usage": [[453, "basic-usage"]], "Basic example for using BayBE": [[403, null]], "Basic string assembly": [[458, "basic-string-assembly"]], "BasicKernel": [[100, null]], "Basics": [[402, null], [449, "basics"]], "Batch Optimization": [[449, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[441, null]], "Bayesian Recommenders": [[456, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[279, null]], "BayesianRecommender": [[194, null]], "Bernoulli Multi Armed Bandit": [[424, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[252, null]], "BetaPrior": [[169, null]], "BinaryTarget": [[297, null]], "BotorchRecommender": [[196, null]], "Bound methods": [[414, "bound-methods"]], "Breaking Changes": [[443, "breaking-changes"], [443, "id25"], [443, "id32"]], "Building from the Product of Parameter Values": [[457, "building-from-the-product-of-parameter-values"], [457, "id2"]], "Building the Model": [[424, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[442, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[449, "caching-of-recommendations"]], "Campaign": [[30, null]], "Campaign Setup": [[427, "campaign-setup"]], "Campaign Stopping": [[415, null]], "Campaigns": [[449, null]], "Candidate Control in Discrete Spaces": [[449, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[452, null]], "CardinalityConstraint": [[33, null]], "CategoricalEncoding": [[146, null]], "CategoricalParameter": [[141, null], [455, "categoricalparameter"]], "Caution": [[452, null]], "Changed": [[443, "changed"], [443, "id2"], [443, "id4"], [443, "id7"], [443, "id11"], [443, "id17"], [443, "id21"], [443, "id27"], [443, "id34"], [443, "id39"], [443, "id43"], [443, "id49"], [443, "id53"], [443, "id56"], [443, "id60"], [443, "id65"], [443, "id71"], [443, "id77"], [443, "id81"], [443, "id85"], [443, "id89"], [443, "id94"], [443, "id98"], [443, "id101"], [443, "id105"], [443, "id109"], [443, "id113"], [443, "id116"], [443, "id120"], [443, "id124"], [443, "id128"], [443, "id132"]], "Changelog": [[443, null]], "Clustering Recommenders": [[456, "clustering-recommenders"]], "Code Design": [[444, "code-design"]], "ColumnTransformer": [[386, null]], "Comparing recommendations in both objects": [[433, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[460, "composite-surrogates"]], "CompositeKernel": [[101, null]], "CompositeSurrogate": [[259, null]], "Computational Challenges": [[450, null]], "Condition": [[39, null]], "Conditions": [[450, "conditions"]], "Constraint": [[34, null]], "Constraint Setup": [[421, "constraint-setup"]], "Constraints": [[450, null]], "Constraints Continuous": [[405, null]], "Constraints Discrete": [[408, null]], "Constraints Setup": [[422, "constraints-setup"]], "Construct the campaign and run some iterations": [[406, "construct-the-campaign-and-run-some-iterations"], [407, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[457, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[399, "constructing-campaigns-for-the-simulation-loop"], [400, "constructing-campaigns-for-the-simulation-loop"], [401, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[457, "constructing-from-a-dataframe"], [457, "id1"], [457, "id3"]], "Constructing hybrid recommenders": [[431, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[430, "constructing-the-campaign-and-performing-a-recommendation"], [431, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[431, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[450, "continuous-constraints"]], "Continuous Parameters": [[455, "continuous-parameters"]], "Continuous Subspaces": [[457, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[43, null], [450, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[35, null]], "ContinuousLinearConstraint": [[44, null], [450, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[36, null]], "ContinuousParameter": [[137, null]], "Contributing to BayBE": [[444, null]], "Contributors": [[445, null], [445, "id1"]], "Convenience construction and implicit conversion": [[454, null]], "Conventions for attrs classes": [[444, "conventions-for-attrs-classes"]], "Convert model to onnx": [[418, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[418, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[419, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[418, "create-campaign"]], "Creating Continuous Search Spaces": [[429, null]], "Creating a Campaign": [[449, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[457, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[434, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[409, "creating-and-printing-the-campaign"], [410, "creating-and-printing-the-campaign"], [412, "creating-and-printing-the-campaign"], [426, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[398, "creating-the-campaigns"]], "Creating the Objective": [[400, "creating-the-objective"]], "Creating the Optimization Objective": [[437, "creating-the-optimization-objective"], [438, "creating-the-optimization-objective"]], "Creating the Search Space": [[437, "creating-the-search-space"]], "Creating the Searchspace": [[438, "creating-the-searchspace"]], "Creating the campaign": [[404, "creating-the-campaign"], [419, "creating-the-campaign"], [433, "creating-the-campaign"]], "Creating the constraint": [[409, "creating-the-constraint"], [411, "creating-the-constraint"]], "Creating the constraints": [[410, "creating-the-constraints"], [412, "creating-the-constraints"]], "Creating the objective": [[426, "creating-the-objective"]], "Creating the recommender object": [[404, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[399, "creating-the-searchspace-and-the-objective"], [401, "creating-the-searchspace-and-the-objective"], [406, "creating-the-searchspace-and-the-objective"], [407, "creating-the-searchspace-and-the-objective"], [409, "creating-the-searchspace-and-the-objective"], [410, "creating-the-searchspace-and-the-objective"], [411, "creating-the-searchspace-and-the-objective"], [412, "creating-the-searchspace-and-the-objective"], [430, "creating-the-searchspace-and-the-objective"]], "Creation From a JSON Config": [[449, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[460, null]], "Custom Hooks": [[413, null]], "Custom Surrogates": [[417, null]], "CustomDiscreteParameter": [[144, null], [455, "customdiscreteparameter"]], "CustomEncoding": [[147, null]], "CustomONNXSurrogate": [[261, null]], "Dataframe deserialization": [[458, "dataframe-deserialization"]], "DefaultKernelFactory": [[275, null]], "Defining config dictionaries": [[435, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[415, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[416, "defining-the-hook"]], "Defining the Hooks": [[414, "defining-the-hooks"]], "Defining the Optimization Objective": [[441, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[398, "defining-the-optimization-problem"], [427, "defining-the-optimization-problem"]], "Defining the Search Space": [[441, "defining-the-search-space"]], "Defining the Tasks": [[437, "defining-the-tasks"], [438, "defining-the-tasks"]], "Defining the targets": [[426, "defining-the-targets"]], "Defining the test function": [[406, "defining-the-test-function"], [407, "defining-the-test-function"], [430, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[431, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[443, "deprecations"], [443, "id23"], [443, "id30"], [443, "id37"], [443, "id46"], [443, "id62"], [443, "id68"], [443, "id74"], [443, "id91"]], "Deserialization from configuration strings": [[458, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[125, null], [454, "desirabilityobjective"]], "Developer Tools": [[444, "developer-tools"]], "Discrete Constraints": [[450, "discrete-constraints"]], "Discrete Parameters": [[455, "discrete-parameters"]], "Discrete Subspaces": [[457, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[421, null]], "DiscreteCardinalityConstraint": [[50, null], [450, "discretecardinalityconstraint"]], "DiscreteConstraint": [[37, null]], "DiscreteCustomConstraint": [[51, null], [450, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[52, null], [450, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[53, null], [450, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[54, null], [450, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[55, null], [450, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[138, null]], "DiscretePermutationInvarianceConstraint": [[56, null], [450, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[57, null]], "DiscreteSamplingMethod": [[382, null]], "DiscreteSumConstraint": [[58, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[450, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[424, "discussion"]], "Disk Caching": [[451, "disk-caching"]], "Dummy": [[318, null]], "Duplicate Substances": [[421, "duplicate-substances"]], "Dynamic Exclusion": [[452, "dynamic-exclusion"]], "EDBOKernelFactory": [[277, null]], "EXPERIMENTAL: Floating Point Precision": [[451, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[464, null]], "Environment Variables": [[451, null]], "Equivalent copies": [[458, null]], "Estimation with Constraints": [[464, null]], "Example Searchspace and objective parameters": [[404, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[406, null]], "Example for creating campaigns from configs": [[434, null]], "Example for custom parameter passing in surrogate models": [[419, null]], "Example for full simulation loop using a table-based lookup mechanism": [[400, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[401, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[399, null]], "Example for linear constraints in a continuous searchspace": [[407, null]], "Example for surrogate model with a custom pretrained model": [[418, null]], "Example for the serialization of a campaign": [[433, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[430, null]], "Example for using custom constraints in discrete searchspaces": [[409, null]], "Example for using dependency constraints in discrete searchspaces": [[410, null]], "Example for using different strategies": [[404, null]], "Example for using exclusion constraints in discrete searchspaces": [[411, null]], "Example for using exclusion constraints incorporating sums and products": [[412, null]], "Example for using synthetic test functions in hybrid spaces": [[431, null]], "Example for using the multi target mode for the objective": [[426, null]], "Example for validation of a config file": [[435, null]], "Examples": [[439, null]], "Examples On This Page": [[453, null]], "Excluding Configurations": [[452, "excluding-configurations"]], "Expectations": [[462, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[418, "experiment-setup"], [419, "experiment-setup"]], "Experiment setup": [[409, "experiment-setup"], [410, "experiment-setup"], [411, "experiment-setup"], [412, "experiment-setup"], [433, "experiment-setup"]], "Experiment setup and creating the searchspace": [[426, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[451, null]], "Experimental Representation Limits": [[453, null]], "Experimental and Computational Representations": [[453, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.6.*)": [[443, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[443, "expired-deprecations-from-0-7"]], "Explainers": [[453, "explainers"]], "Extending BayBE\u2019s Functionality": [[444, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[460, "extracting-the-model-for-advanced-study"]], "FAQ": [[440, null]], "FPSRecommender": [[208, null]], "Fixed": [[443, "fixed"], [443, "id8"], [443, "id12"], [443, "id14"], [443, "id18"], [443, "id22"], [443, "id28"], [443, "id36"], [443, "id40"], [443, "id45"], [443, "id50"], [443, "id54"], [443, "id61"], [443, "id66"], [443, "id72"], [443, "id78"], [443, "id86"], [443, "id90"], [443, "id95"], [443, "id102"], [443, "id106"], [443, "id110"], [443, "id117"], [443, "id121"], [443, "id125"], [443, "id129"], [443, "id133"], [443, "id135"], [443, "id138"]], "For Label-Like Parameters: Values and Active Values": [[455, "label-like"]], "From GitHub": [[441, "from-github"]], "From Local Clone": [[441, "from-local-clone"]], "From Package Index": [[441, "from-package-index"]], "From the Default Constructor": [[457, "from-the-default-constructor"]], "Further Information": [[449, "further-information"]], "GammaPrior": [[170, null]], "GaussianMixtureClusteringRecommender": [[203, null]], "GaussianProcessPreset": [[272, null]], "GaussianProcessSurrogate": [[265, null]], "General Information": [[456, "general-information"]], "General Workflow": [[444, "general-workflow"]], "Generating Lookup Tables": [[437, "generating-lookup-tables"], [438, "generating-lookup-tables"]], "Getting Recommendations": [[449, "getting-recommendations"], [452, null]], "Getting a recommendation and adding measurements": [[403, "getting-a-recommendation-and-adding-measurements"]], "Global Uncertainty Reduction": [[447, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[171, null]], "HalfNormalPrior": [[172, null]], "Hook instance vs. target instance": [[414, null]], "Hybrid constraints": [[450, null]], "Imports": [[398, "imports"], [414, "imports"], [416, "imports"], [421, "imports"], [422, "imports"], [424, "imports"], [427, "imports"], [429, "imports"], [437, "imports"], [438, "imports"]], "Inclusion of initial data": [[399, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[254, null]], "Indices and Tables": [[441, "indices-and-tables"]], "Influence of Continuous Parameters": [[464, null]], "Insights": [[453, null]], "Installation Related Issues": [[442, "installation-related-issues"]], "Interval": [[362, null]], "Invoking alternative constructors": [[458, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[418, "iterate-with-recommendations-and-measurements"], [419, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[458, "json-de-serialization"]], "KMeansClusteringRecommender": [[204, null]], "Kernel": [[102, null]], "KernelFactory": [[267, null]], "Known Issues": [[442, null]], "License": [[446, null]], "Limitations": [[461, "limitations"]], "LinearKernel": [[104, null]], "Links for documentation": [[419, "links-for-documentation"]], "Local Uncertainty Reduction": [[447, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[173, null]], "Lookup functionality and data creation": [[399, "lookup-functionality-and-data-creation"], [400, "lookup-functionality-and-data-creation"], [401, "lookup-functionality-and-data-creation"]], "MATCH mode": [[461, "match-mode"]], "MIN and MAX mode": [[461, "min-and-max-mode"]], "Maintainers": [[445, "maintainers"]], "Mandatory target bounds": [[454, null]], "Manual verification of the constraint": [[409, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[410, "manual-verification-of-the-constraints"], [411, "manual-verification-of-the-constraints"], [412, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[448, "marking-experiments-as-pending"]], "MaternKernel": [[105, null]], "MeanPredictionSurrogate": [[281, null]], "Memory During Optimization": [[464, null]], "MemorySize": [[219, null]], "Meta Recommenders": [[452, null], [456, "meta-recommenders"]], "MetaRecommender": [[181, null]], "Method overrides": [[444, "method-overrides"]], "Missing Lookup Values": [[459, null]], "Mixtures": [[420, null]], "Model Interpretation in BO": [[453, null]], "Model Outputs": [[418, "model-outputs"], [419, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[421, null]], "Modeling a Mixture in Traditional Representation": [[422, null]], "Monitoring the Probability of Improvement": [[416, null]], "Monkeypatching": [[414, "monkeypatching"], [415, null], [416, "monkeypatching"]], "Multi Target": [[425, null]], "Multi-Armed Bandit": [[423, null]], "Multi-output Modeling": [[460, "multi-output-modeling"]], "NGBoostSurrogate": [[283, null]], "NaiveHybridSpaceRecommender": [[188, null]], "Necessary imports": [[418, "necessary-imports"], [419, "necessary-imports"], [433, "necessary-imports"], [434, "necessary-imports"], [435, "necessary-imports"]], "Necessary imports for this example": [[399, "necessary-imports-for-this-example"], [400, "necessary-imports-for-this-example"], [401, "necessary-imports-for-this-example"], [403, "necessary-imports-for-this-example"], [404, "necessary-imports-for-this-example"], [406, "necessary-imports-for-this-example"], [407, "necessary-imports-for-this-example"], [409, "necessary-imports-for-this-example"], [410, "necessary-imports-for-this-example"], [411, "necessary-imports-for-this-example"], [412, "necessary-imports-for-this-example"], [426, "necessary-imports-for-this-example"], [430, "necessary-imports-for-this-example"], [431, "necessary-imports-for-this-example"]], "Nesting objects": [[458, "nesting-objects"]], "Non-dominated Configurations": [[454, null]], "NonPredictiveRecommender": [[201, null]], "NormalPrior": [[174, null]], "NumericalContinuousParameter": [[151, null], [455, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[152, null], [455, "numericaldiscreteparameter"]], "NumericalTarget": [[303, null], [461, "numericaltarget"]], "Objective": [[120, null], [454, null]], "Optimizing a Custom Black-Box Function": [[398, null]], "Optional Dependencies": [[441, "optional-dependencies"]], "Optional Dependency": [[455, null]], "Optional: Defining the Optimization Strategy": [[441, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[421, null]], "PAMClusteringRecommender": [[205, null]], "Parameter": [[139, null]], "Parameter Encoding": [[455, null]], "Parameter Importance via SHAP": [[453, "parameter-importance-via-shap"]], "Parameter Names": [[455, null]], "Parameter Setup": [[421, "parameter-setup"], [422, "parameter-setup"]], "Parameter tolerances": [[449, null]], "ParameterEncoding": [[148, null]], "Parameters": [[455, null]], "Parameters for a full simulation loop": [[399, "parameters-for-a-full-simulation-loop"], [400, "parameters-for-a-full-simulation-loop"], [401, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[130, null], [454, "paretoobjective"]], "PartialAcquisitionFunction": [[25, null]], "Performing some iterations": [[426, "performing-some-iterations"]], "Performing the simulation loop": [[399, "performing-the-simulation-loop"]], "PeriodicKernel": [[106, null]], "Permanent Exclusion": [[452, "permanent-exclusion"]], "Permutation Invariance": [[421, "permutation-invariance"]], "PiecewisePolynomialKernel": [[107, null]], "PlainKernelFactory": [[268, null]], "Plots": [[453, "plots"]], "Plotting the Results": [[398, "plotting-the-results"], [415, "plotting-the-results"], [416, "plotting-the-results"]], "Polars": [[451, "polars"]], "PolynomialKernel": [[108, null]], "Posterior Statistics with Desirability Objectives": [[449, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Predictive Statistics": [[449, "predictive-statistics"]], "Prior": [[167, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[415, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[114, null]], "Pure Recommenders": [[456, "pure-recommenders"]], "PureRecommender": [[191, null]], "Purely Continuous Search Spaces": [[447, null]], "PyCharm vs. exceptiongroup": [[442, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[109, null]], "RFFKernel": [[110, null]], "RQKernel": [[111, null]], "RandomForestSurrogate": [[285, null]], "RandomRecommender": [[209, null]], "RecommenderProtocol": [[178, null]], "Recommenders": [[456, null]], "Registering Custom Hooks": [[414, null]], "Removed": [[443, "removed"], [443, "id9"], [443, "id29"], [443, "id35"], [443, "id44"], [443, "id57"], [443, "id67"], [443, "id73"], [443, "id82"]], "Representation of Data within Discrete Subspaces": [[457, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[464, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[457, "restricting-search-spaces-using-constraints"]], "Row Order": [[451, null]], "Running the Simulation": [[424, "running-the-simulation"]], "Running the Simulation Loop": [[398, "running-the-simulation-loop"]], "SHAPInsight": [[93, null]], "SKLearnClusteringRecommender": [[206, null]], "Sampling Recommenders": [[456, "sampling-recommenders"]], "Scalarizer": [[128, null]], "ScaleKernel": [[115, null]], "Search Space Creation": [[421, "search-space-creation"], [422, "search-space-creation"]], "Search Space Memory Estimation": [[464, "search-space-memory-estimation"]], "Search Spaces": [[457, null]], "SearchSpace": [[214, null]], "SearchSpaceType": [[215, null]], "Searchspaces": [[428, null]], "Seeing Transfer Learning in Action": [[462, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[449, null]], "SequentialMetaRecommender": [[184, null]], "SerialMixin": [[237, null]], "Serialization": [[432, null], [449, "serialization"], [458, null]], "Serialization and de-serialization": [[433, "serialization-and-de-serialization"]], "Settings": [[398, "settings"], [415, "settings"], [416, "settings"], [427, "settings"], [429, "settings"], [437, "settings"], [438, "settings"]], "Setup": [[403, "setup"], [424, "setup"]], "Signature components": [[414, null]], "Simplex Construction": [[421, null]], "Simulating Multiple Scenarios": [[459, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[459, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[459, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[415, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[415, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[459, null]], "Simulation Loop": [[437, "simulation-loop"], [438, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[427, null]], "SingleTargetObjective": [[132, null], [454, "singletargetobjective"]], "Slot-based Representation": [[422, null]], "SmoothedBoxPrior": [[175, null]], "StreamingSequentialMetaRecommender": [[185, null]], "Sub-Sampling Method": [[447, null]], "SubSelectionCondition": [[40, null], [450, "subselectioncondition"]], "SubspaceContinuous": [[212, null]], "SubspaceDiscrete": [[220, null]], "Substance Amounts": [[421, "substance-amounts"]], "SubstanceEncoding": [[149, null]], "SubstanceParameter": [[155, null], [455, "substanceparameter"]], "Suggested Fix": [[442, null], [442, null], [442, null], [442, null]], "Supported Acquisition Functions": [[448, null]], "Supported Recommenders": [[448, null]], "Surrogate": [[256, null]], "Surrogate Replication": [[460, "surrogate-replication"]], "SurrogateProtocol": [[257, null]], "Surrogates": [[460, null]], "Synchronizing Pull Requests": [[444, "synchronizing-pull-requests"]], "Target": [[295, null]], "TargetMode": [[300, null]], "TargetTransformation": [[301, null]], "Targets": [[461, null]], "TaskParameter": [[142, null], [455, "taskparameter"]], "Technology": [[462, null]], "Telemetry": [[451, "telemetry"]], "Telemetry Scope": [[451, null]], "Terminology": [[421, "terminology"], [458, null], [462, null]], "Terminology Continued": [[462, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[459, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[424, "the-black-box-model"]], "The Lookup Mechanism": [[459, "the-lookup-mechanism"]], "The Optimization Loop": [[441, "the-optimization-loop"]], "The Role of the TaskParameter": [[462, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[434, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[452, "the-recommend-call"]], "The type field": [[458, "the-type-field"]], "Theoretical Span": [[421, null]], "ThresholdCondition": [[41, null], [450, "thresholdcondition"]], "Trajectory-Based Control": [[452, null]], "Transfer Learning": [[436, null], [438, null], [462, null]], "Triggering the Hook": [[416, "triggering-the-hook"]], "Triggering the Hooks": [[414, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[186, null]], "Uninstalling Internet Packages": [[451, null]], "Unlocking Data Treasures Through Transfer Learning": [[462, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[320, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[463, null]], "Using Custom Models": [[460, "using-custom-models"]], "Using Explicit Bounds": [[457, "using-explicit-bounds"]], "Using None": [[459, "using-none"]], "Using a Callable": [[459, "using-a-callable"]], "Using a Dataframe": [[459, "using-a-dataframe"]], "Using abbreviations": [[458, "using-abbreviations"]], "Using configuration instead": [[418, "using-configuration-instead"], [419, "using-configuration-instead"]], "Using default values": [[458, "using-default-values"]], "Utilities": [[464, null]], "Validation of model parameters": [[419, "validation-of-model-parameters"]], "Verification of Constraints": [[421, "verification-of-constraints"], [422, "verification-of-constraints"]], "Verification of Span": [[421, "verification-of-span"]], "Verification of the two dictionaries": [[435, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[407, "verify-the-constraints"]], "Visualization": [[427, "visualization"]], "Windows \u2013 Torch Problems": [[442, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[406, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [407, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [431, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[444, "writing-docstrings"]], "Writing classes": [[444, "writing-classes"]], "[0.1.0] - 2022-10-01": [[443, "id139"]], "[0.10.0] - 2024-08-02": [[443, "id31"]], "[0.11.0] - 2024-09-09": [[443, "id24"]], "[0.11.1] - 2024-10-01": [[443, "id19"]], "[0.11.2] - 2024-10-11": [[443, "id15"]], "[0.11.3] - 2024-11-06": [[443, "id13"]], "[0.11.4] - 2025-01-27": [[443, "id10"]], "[0.12.0] - 2025-01-28": [[443, "id5"]], "[0.12.1] - 2025-01-29": [[443, "id3"]], "[0.12.2] - 2025-01-31": [[443, "id1"]], "[0.2.0] - 2022-11-10": [[443, "id136"]], "[0.2.1] - 2022-12-01": [[443, "id134"]], "[0.2.2] - 2023-01-13": [[443, "id130"]], "[0.2.3] - 2023-03-14": [[443, "id126"]], "[0.2.4] - 2023-03-24": [[443, "id122"]], "[0.3.0] - 2023-06-27": [[443, "id118"]], "[0.3.1] - 2023-07-17": [[443, "id114"]], "[0.3.2] - 2023-07-24": [[443, "id111"]], "[0.4.0] - 2023-08-16": [[443, "id107"]], "[0.4.1] - 2023-08-23": [[443, "id103"]], "[0.4.2] - 2023-08-29": [[443, "id99"]], "[0.5.0] - 2023-09-15": [[443, "id96"]], "[0.5.1] - 2023-10-19": [[443, "id92"]], "[0.6.0] - 2023-11-17": [[443, "id87"]], "[0.6.1] - 2023-11-27": [[443, "id83"]], "[0.7.0] - 2023-12-04": [[443, "id79"]], "[0.7.1] - 2023-12-07": [[443, "id75"]], "[0.7.2] - 2024-01-24": [[443, "id69"]], "[0.7.3] - 2024-02-09": [[443, "id63"]], "[0.7.4] - 2024-02-28": [[443, "id58"]], "[0.8.0] - 2024-02-29": [[443, "id55"]], "[0.8.1] - 2024-03-11": [[443, "id51"]], "[0.8.2] - 2024-03-27": [[443, "id47"]], "[0.9.0] - 2024-05-21": [[443, "id41"]], "[0.9.1] - 2024-06-04": [[443, "id38"]], "[Unreleased]": [[443, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[22, null]], "baybe.acquisition.partial": [[24, null]], "baybe.acquisition.utils": [[26, null]], "baybe.acquisition.utils.convert_acqf": [[27, null]], "baybe.acquisition.utils.str_to_acqf": [[28, null]], "baybe.campaign": [[29, null]], "baybe.constraints": [[31, null]], "baybe.constraints.base": [[32, null]], "baybe.constraints.conditions": [[38, null]], "baybe.constraints.continuous": [[42, null]], "baybe.constraints.deprecation": [[45, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[46, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[47, null]], "baybe.constraints.deprecation.structure_constraints": [[48, null]], "baybe.constraints.discrete": [[49, null]], "baybe.constraints.utils": [[59, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[60, null]], "baybe.constraints.validation": [[61, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[62, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[63, null]], "baybe.constraints.validation.validate_constraints": [[64, null]], "baybe.exceptions": [[65, null]], "baybe.exceptions.DeprecationError": [[66, null]], "baybe.exceptions.EmptySearchSpaceError": [[67, null]], "baybe.exceptions.IncompatibilityError": [[68, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[69, null]], "baybe.exceptions.IncompatibleArgumentError": [[70, null]], "baybe.exceptions.IncompatibleExplainerError": [[71, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[72, null]], "baybe.exceptions.IncompatibleSurrogateError": [[73, null]], "baybe.exceptions.InfeasibilityError": [[74, null]], "baybe.exceptions.InvalidSurrogateModelError": [[75, null]], "baybe.exceptions.InvalidTargetValueError": [[76, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[77, null]], "baybe.exceptions.ModelNotTrainedError": [[78, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[79, null]], "baybe.exceptions.NoRecommendersLeftError": [[80, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[81, null]], "baybe.exceptions.NothingToSimulateError": [[82, null]], "baybe.exceptions.NumericalUnderflowError": [[83, null]], "baybe.exceptions.OptionalImportError": [[84, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[85, null]], "baybe.exceptions.UnidentifiedSubclassError": [[86, null]], "baybe.exceptions.UnmatchedAttributeError": [[87, null]], "baybe.exceptions.UnusedObjectWarning": [[88, null]], "baybe.insights": [[89, null]], "baybe.insights.shap": [[90, null]], "baybe.insights.shap.EXPLAINERS": [[91, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[92, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[94, null]], "baybe.insights.shap.SHAP_PLOTS": [[95, null]], "baybe.insights.shap.is_shap_explainer": [[96, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[97, null]], "baybe.kernels": [[98, null]], "baybe.kernels.base": [[99, null]], "baybe.kernels.basic": [[103, null]], "baybe.kernels.composite": [[112, null]], "baybe.objective": [[116, null]], "baybe.objective.Objective": [[117, null]], "baybe.objectives": [[118, null]], "baybe.objectives.base": [[119, null]], "baybe.objectives.base.to_objective": [[121, null]], "baybe.objectives.deprecation": [[122, null]], "baybe.objectives.deprecation.structure_objective": [[123, null]], "baybe.objectives.desirability": [[124, null]], "baybe.objectives.desirability.scalarize": [[126, null]], "baybe.objectives.enum": [[127, null]], "baybe.objectives.pareto": [[129, null]], "baybe.objectives.single": [[131, null]], "baybe.objectives.validation": [[133, null]], "baybe.objectives.validation.validate_target_names": [[134, null]], "baybe.parameters": [[135, null]], "baybe.parameters.base": [[136, null]], "baybe.parameters.categorical": [[140, null]], "baybe.parameters.custom": [[143, null]], "baybe.parameters.enum": [[145, null]], "baybe.parameters.numerical": [[150, null]], "baybe.parameters.substance": [[153, null]], "baybe.parameters.substance.Smiles": [[154, null]], "baybe.parameters.utils": [[156, null]], "baybe.parameters.utils.activate_parameter": [[157, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[158, null]], "baybe.parameters.utils.is_inactive": [[159, null]], "baybe.parameters.utils.sort_parameters": [[160, null]], "baybe.parameters.validation": [[161, null]], "baybe.parameters.validation.validate_decorrelation": [[162, null]], "baybe.parameters.validation.validate_is_finite": [[163, null]], "baybe.parameters.validation.validate_unique_values": [[164, null]], "baybe.priors": [[165, null]], "baybe.priors.base": [[166, null]], "baybe.priors.basic": [[168, null]], "baybe.recommenders": [[176, null]], "baybe.recommenders.base": [[177, null]], "baybe.recommenders.meta": [[179, null]], "baybe.recommenders.meta.base": [[180, null]], "baybe.recommenders.meta.sequential": [[182, null]], "baybe.recommenders.naive": [[187, null]], "baybe.recommenders.pure": [[189, null]], "baybe.recommenders.pure.base": [[190, null]], "baybe.recommenders.pure.bayesian": [[192, null]], "baybe.recommenders.pure.bayesian.base": [[193, null]], "baybe.recommenders.pure.bayesian.botorch": [[195, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[197, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[198, null]], "baybe.recommenders.pure.nonpredictive": [[199, null]], "baybe.recommenders.pure.nonpredictive.base": [[200, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[202, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[207, null]], "baybe.searchspace": [[210, null]], "baybe.searchspace.continuous": [[211, null]], "baybe.searchspace.core": [[213, null]], "baybe.searchspace.core.to_searchspace": [[216, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[217, null]], "baybe.searchspace.discrete": [[218, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[221, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[222, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[223, null]], "baybe.searchspace.validation": [[224, null]], "baybe.searchspace.validation.get_transform_parameters": [[225, null]], "baybe.searchspace.validation.validate_parameter_names": [[226, null]], "baybe.searchspace.validation.validate_parameters": [[227, null]], "baybe.serialization": [[228, null]], "baybe.serialization.core": [[229, null]], "baybe.serialization.core.block_deserialization_hook": [[230, null]], "baybe.serialization.core.block_serialization_hook": [[231, null]], "baybe.serialization.core.converter": [[232, null]], "baybe.serialization.core.get_base_structure_hook": [[233, null]], "baybe.serialization.core.select_constructor_hook": [[234, null]], "baybe.serialization.core.unstructure_base": [[235, null]], "baybe.serialization.mixin": [[236, null]], "baybe.serialization.utils": [[238, null]], "baybe.serialization.utils.deserialize_dataframe": [[239, null]], "baybe.serialization.utils.serialize_dataframe": [[240, null]], "baybe.simulation": [[241, null]], "baybe.simulation.core": [[242, null]], "baybe.simulation.core.simulate_experiment": [[243, null]], "baybe.simulation.lookup": [[244, null]], "baybe.simulation.lookup.look_up_targets": [[245, null]], "baybe.simulation.scenarios": [[246, null]], "baybe.simulation.scenarios.simulate_scenarios": [[247, null]], "baybe.simulation.transfer_learning": [[248, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[249, null]], "baybe.surrogates": [[250, null]], "baybe.surrogates.bandit": [[251, null]], "baybe.surrogates.base": [[253, null]], "baybe.surrogates.base.PosteriorStatistic": [[255, null]], "baybe.surrogates.composite": [[258, null]], "baybe.surrogates.custom": [[260, null]], "baybe.surrogates.custom.register_custom_architecture": [[262, null]], "baybe.surrogates.gaussian_process": [[263, null]], "baybe.surrogates.gaussian_process.core": [[264, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[266, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[269, null]], "baybe.surrogates.gaussian_process.presets": [[270, null]], "baybe.surrogates.gaussian_process.presets.core": [[271, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[273, null]], "baybe.surrogates.gaussian_process.presets.default": [[274, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[276, null]], "baybe.surrogates.linear": [[278, null]], "baybe.surrogates.naive": [[280, null]], "baybe.surrogates.ngboost": [[282, null]], "baybe.surrogates.random_forest": [[284, null]], "baybe.surrogates.utils": [[286, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[287, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[288, null]], "baybe.surrogates.utils.catch_constant_targets": [[289, null]], "baybe.surrogates.validation": [[290, null]], "baybe.surrogates.validation.get_model_params_validator": [[291, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[292, null]], "baybe.targets": [[293, null]], "baybe.targets.base": [[294, null]], "baybe.targets.binary": [[296, null]], "baybe.targets.binary.ChoiceValue": [[298, null]], "baybe.targets.enum": [[299, null]], "baybe.targets.numerical": [[302, null]], "baybe.targets.transforms": [[304, null]], "baybe.targets.transforms.bell_transform": [[305, null]], "baybe.targets.transforms.linear_transform": [[306, null]], "baybe.targets.transforms.triangular_transform": [[307, null]], "baybe.telemetry": [[308, null]], "baybe.telemetry.get_user_details": [[309, null]], "baybe.telemetry.is_enabled": [[310, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[311, null]], "baybe.telemetry.telemetry_record_value": [[312, null]], "baybe.utils": [[313, null]], "baybe.utils.augmentation": [[314, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[315, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[316, null]], "baybe.utils.basic": [[317, null]], "baybe.utils.basic.UNSPECIFIED": [[319, null]], "baybe.utils.basic.convert_to_float": [[322, null]], "baybe.utils.basic.find_subclass": [[323, null]], "baybe.utils.basic.get_baseclasses": [[324, null]], "baybe.utils.basic.get_subclasses": [[325, null]], "baybe.utils.basic.group_duplicate_values": [[326, null]], "baybe.utils.basic.hilberts_factory": [[327, null]], "baybe.utils.basic.is_all_instance": [[328, null]], "baybe.utils.basic.match_attributes": [[329, null]], "baybe.utils.basic.refers_to": [[330, null]], "baybe.utils.basic.register_hooks": [[331, null]], "baybe.utils.basic.to_tuple": [[332, null]], "baybe.utils.boolean": [[333, null]], "baybe.utils.boolean.check_if_in": [[334, null]], "baybe.utils.boolean.is_abstract": [[335, null]], "baybe.utils.boolean.strtobool": [[336, null]], "baybe.utils.chemistry": [[337, null]], "baybe.utils.chemistry.get_canonical_smiles": [[338, null]], "baybe.utils.chemistry.get_fingerprint_class": [[339, null]], "baybe.utils.chemistry.name_to_smiles": [[340, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[341, null]], "baybe.utils.conversion": [[342, null]], "baybe.utils.conversion.fraction_to_float": [[343, null]], "baybe.utils.conversion.nonstring_to_tuple": [[344, null]], "baybe.utils.dataframe": [[345, null]], "baybe.utils.dataframe.add_fake_measurements": [[346, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[347, null]], "baybe.utils.dataframe.add_parameter_noise": [[348, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[349, null]], "baybe.utils.dataframe.create_fake_input": [[350, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[351, null]], "baybe.utils.dataframe.df_drop_string_columns": [[352, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[353, null]], "baybe.utils.dataframe.filter_df": [[354, null]], "baybe.utils.dataframe.fuzzy_row_match": [[355, null]], "baybe.utils.dataframe.get_transform_objects": [[356, null]], "baybe.utils.dataframe.pretty_print_df": [[357, null]], "baybe.utils.dataframe.to_tensor": [[358, null]], "baybe.utils.dataframe.transform_target_columns": [[359, null]], "baybe.utils.interval": [[360, null]], "baybe.utils.interval.InfiniteIntervalError": [[361, null]], "baybe.utils.interval.convert_bounds": [[363, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[364, null]], "baybe.utils.memory": [[365, null]], "baybe.utils.memory.bytes_to_human_readable": [[366, null]], "baybe.utils.numerical": [[367, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[368, null]], "baybe.utils.numerical.DTypeFloatONNX": [[369, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[370, null]], "baybe.utils.numerical.closer_element": [[371, null]], "baybe.utils.numerical.closest_element": [[372, null]], "baybe.utils.numerical.geom_mean": [[373, null]], "baybe.utils.plotting": [[374, null]], "baybe.utils.plotting.create_example_plots": [[375, null]], "baybe.utils.plotting.indent": [[376, null]], "baybe.utils.plotting.to_string": [[377, null]], "baybe.utils.random": [[378, null]], "baybe.utils.random.set_random_seed": [[379, null]], "baybe.utils.random.temporary_seed": [[380, null]], "baybe.utils.sampling_algorithms": [[381, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[383, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[384, null]], "baybe.utils.scaling": [[385, null]], "baybe.utils.torch": [[387, null]], "baybe.utils.torch.DTypeFloatTorch": [[388, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[389, null]], "baybe.utils.validation": [[390, null]], "baybe.utils.validation.finite_float": [[391, null]], "baybe.utils.validation.non_inf_float": [[392, null]], "baybe.utils.validation.non_nan_float": [[393, null]], "baybe.utils.validation.validate_not_nan": [[394, null]], "baybe.utils.validation.validate_parameter_input": [[395, null]], "baybe.utils.validation.validate_target_input": [[396, null]], "classproperty": [[321, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[442, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNParEGO": [[12, null]], "qLogNoisyExpectedHypervolumeImprovement": [[13, null]], "qLogNoisyExpectedImprovement": [[14, null]], "qNegIntegratedPosteriorVariance": [[15, null]], "qNoisyExpectedImprovement": [[16, null]], "qPosteriorStandardDeviation": [[17, null]], "qProbabilityOfImprovement": [[18, null]], "qSimpleRegret": [[19, null]], "qThompsonSampling": [[20, null]], "qUpperConfidenceBound": [[21, null]], "\u201cPre-training\u201d stage": [[418, "pre-training-stage"]], "\u26a1 Quick Start": [[441, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[441, "maintainers"]], "\ud83d\udcbb Installation": [[441, "installation"]], "\ud83d\udcc4 License": [[441, "license"]], "\ud83d\udce1 Telemetry": [[441, "telemetry"]], "\ud83d\udd0b Batteries Included": [[441, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[441, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[17, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[18, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[19, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[20, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[21, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[23, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[25, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[30, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[33, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[34, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[35, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[37, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[40, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[41, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[66, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[67, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[68, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[69, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[70, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[71, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[72, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[73, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[74, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[75, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[76, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[77, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[78, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[79, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[80, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[81, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[82, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[83, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[84, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[85, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[86, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[87, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[88, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[93, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[100, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[101, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[102, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[104, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[105, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[106, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[107, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[108, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[109, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[110, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[111, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[113, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[114, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[115, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[120, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[178, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[191, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[214, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[219, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[256, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[257, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[259, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[275, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[277, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[321, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[318, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[361, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[362, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[386, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[66, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[67, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[68, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[69, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[70, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[71, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[72, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[73, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[74, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[75, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[76, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[77, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[78, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[79, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[80, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[81, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[82, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[83, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[84, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[85, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[86, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[87, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[88, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[146, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[147, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[149, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[361, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[175, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[17, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[18, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[19, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[20, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[21, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[23, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[23, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[157, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[346, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[30, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[347, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[348, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[113, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[30, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[191, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[30, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[30, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[191, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[191, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[169, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[349, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[175, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[93, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[115, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[113, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[114, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[100, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[287, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[288, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[272, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[22, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[24, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[26, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[29, "module-baybe.campaign", false]], "baybe.constraints": [[31, "module-baybe.constraints", false]], "baybe.constraints.base": [[32, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[38, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[42, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[45, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[49, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[59, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[61, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[65, "module-baybe.exceptions", false]], "baybe.insights": [[89, "module-baybe.insights", false]], "baybe.insights.shap": [[90, "module-baybe.insights.shap", false]], "baybe.kernels": [[98, "module-baybe.kernels", false]], "baybe.kernels.base": [[99, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[103, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[112, "module-baybe.kernels.composite", false]], "baybe.objective": [[116, "module-baybe.objective", false]], "baybe.objectives": [[118, "module-baybe.objectives", false]], "baybe.objectives.base": [[119, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[122, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[124, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[127, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[129, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[131, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[133, "module-baybe.objectives.validation", false]], "baybe.parameters": [[135, "module-baybe.parameters", false]], "baybe.parameters.base": [[136, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[140, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[143, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[145, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[150, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[153, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[156, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[161, "module-baybe.parameters.validation", false]], "baybe.priors": [[165, "module-baybe.priors", false]], "baybe.priors.base": [[166, "module-baybe.priors.base", false]], "baybe.priors.basic": [[168, "module-baybe.priors.basic", false]], "baybe.recommenders": [[176, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[177, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[179, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[180, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[182, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[187, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[189, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[190, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[192, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[193, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[195, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[197, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[199, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[200, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[202, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[207, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[210, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[211, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[213, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[218, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[224, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[228, "module-baybe.serialization", false]], "baybe.serialization.core": [[229, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[236, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[238, "module-baybe.serialization.utils", false]], "baybe.simulation": [[241, "module-baybe.simulation", false]], "baybe.simulation.core": [[242, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[244, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[246, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[248, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[250, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[251, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[253, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[258, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[260, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[263, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[264, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[266, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[270, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[271, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[274, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[276, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[278, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[280, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[282, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[284, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[286, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[290, "module-baybe.surrogates.validation", false]], "baybe.targets": [[293, "module-baybe.targets", false]], "baybe.targets.base": [[294, "module-baybe.targets.base", false]], "baybe.targets.binary": [[296, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[299, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[302, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[304, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[308, "module-baybe.telemetry", false]], "baybe.utils": [[313, "module-baybe.utils", false]], "baybe.utils.augmentation": [[314, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[317, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[333, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[337, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[342, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[345, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[360, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[365, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[367, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[374, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[378, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[381, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[385, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[387, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[390, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[301, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[305, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[21, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[169, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[169, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[297, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[230, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[231, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[25, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[366, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[30, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[289, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[146, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[141, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[362, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[334, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[298, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[321, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[371, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[372, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[386, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[214, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[219, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[214, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[219, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[219, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[191, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[101, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[259, "baybe.surrogates.composite.CompositeSurrogate", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[170, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[39, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[214, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[214, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[362, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[214, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[215, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[46, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[47, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[137, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[27, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[363, "baybe.utils.interval.convert_bounds", false]], "convert_to_float() (in module baybe.utils.basic)": [[322, "baybe.utils.basic.convert_to_float", false]], "converter (in module baybe.serialization.core)": [[232, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[362, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[375, "baybe.utils.plotting.create_example_plots", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[350, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[147, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[144, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[147, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[275, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[66, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[239, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[125, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[315, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[316, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[351, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[352, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[353, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[214, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[215, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[138, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[382, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[368, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[369, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[388, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[318, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[277, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[215, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[67, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[214, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[33, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[34, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[35, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[37, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[33, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[34, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[35, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[37, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[33, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[34, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[35, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[37, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[39, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[40, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[41, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[219, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[219, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[219, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[93, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[93, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[91, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[297, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[383, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[354, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[323, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[391, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[256, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[257, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[259, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[386, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[382, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[343, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[93, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[30, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[214, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[17, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[18, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[19, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[20, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[21, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[23, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[30, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[33, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[34, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[35, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[37, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[39, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[40, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[41, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[100, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[101, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[102, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[104, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[105, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[106, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[107, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[108, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[109, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[110, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[111, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[113, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[114, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[115, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[120, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[130, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[132, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[137, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[138, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[139, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[141, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[142, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[155, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[167, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[169, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[170, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[171, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[172, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[173, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[174, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[214, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[237, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[256, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[259, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[295, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[297, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[303, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[362, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[17, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[18, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[19, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[20, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[21, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[23, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[30, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[33, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[34, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[35, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[37, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[39, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[40, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[41, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[100, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[101, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[102, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[104, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[105, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[106, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[107, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[108, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[109, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[110, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[111, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[113, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[114, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[115, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[120, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[130, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[132, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[137, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[138, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[139, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[141, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[142, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[155, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[167, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[169, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[170, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[171, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[172, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[173, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[174, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[214, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[237, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[256, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[259, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[295, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[297, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[303, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[362, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[214, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[214, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[93, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[259, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[93, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[355, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[170, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[272, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[128, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[373, "baybe.utils.numerical.geom_mean", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[233, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[324, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[338, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[214, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[339, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[37, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[37, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[291, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[214, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[158, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[325, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[30, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[356, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[225, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[309, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[37, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[326, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[171, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[172, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[327, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[215, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[68, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[69, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[70, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[71, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[72, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[73, "baybe.exceptions.IncompatibleSurrogateError", false]], "indent() (in module baybe.utils.plotting)": [[376, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infeasibilityerror": [[74, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[361, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[146, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[362, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[75, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[76, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[335, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[328, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[362, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[60, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[33, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[34, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[35, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[37, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[362, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[33, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[34, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[35, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[37, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[310, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[362, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[362, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[159, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[362, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[120, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[130, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[132, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[137, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[139, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[362, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[96, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[181, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[102, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[105, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[106, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[107, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[109, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[110, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[111, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[105, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[106, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[107, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[109, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[110, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[111, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[301, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[306, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[104, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[173, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[174, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[245, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[362, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[97, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[273, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[386, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[300, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[329, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[105, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[300, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[33, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[128, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[30, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[219, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[181, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[300, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[33, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimumcardinalityviolatedwarning": [[77, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[78, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [22, "module-baybe.acquisition.base", false], [24, "module-baybe.acquisition.partial", false], [26, "module-baybe.acquisition.utils", false], [29, "module-baybe.campaign", false], [31, "module-baybe.constraints", false], [32, "module-baybe.constraints.base", false], [38, "module-baybe.constraints.conditions", false], [42, "module-baybe.constraints.continuous", false], [45, "module-baybe.constraints.deprecation", false], [49, "module-baybe.constraints.discrete", false], [59, "module-baybe.constraints.utils", false], [61, "module-baybe.constraints.validation", false], [65, "module-baybe.exceptions", false], [89, "module-baybe.insights", false], [90, "module-baybe.insights.shap", false], [98, "module-baybe.kernels", false], [99, "module-baybe.kernels.base", false], [103, "module-baybe.kernels.basic", false], [112, "module-baybe.kernels.composite", false], [116, "module-baybe.objective", false], [118, "module-baybe.objectives", false], [119, "module-baybe.objectives.base", false], [122, "module-baybe.objectives.deprecation", false], [124, "module-baybe.objectives.desirability", false], [127, "module-baybe.objectives.enum", false], [129, "module-baybe.objectives.pareto", false], [131, "module-baybe.objectives.single", false], [133, "module-baybe.objectives.validation", false], [135, "module-baybe.parameters", false], [136, "module-baybe.parameters.base", false], [140, "module-baybe.parameters.categorical", false], [143, "module-baybe.parameters.custom", false], [145, "module-baybe.parameters.enum", false], [150, "module-baybe.parameters.numerical", false], [153, "module-baybe.parameters.substance", false], [156, "module-baybe.parameters.utils", false], [161, "module-baybe.parameters.validation", false], [165, "module-baybe.priors", false], [166, "module-baybe.priors.base", false], [168, "module-baybe.priors.basic", false], [176, "module-baybe.recommenders", false], [177, "module-baybe.recommenders.base", false], [179, "module-baybe.recommenders.meta", false], [180, "module-baybe.recommenders.meta.base", false], [182, "module-baybe.recommenders.meta.sequential", false], [187, "module-baybe.recommenders.naive", false], [189, "module-baybe.recommenders.pure", false], [190, "module-baybe.recommenders.pure.base", false], [192, "module-baybe.recommenders.pure.bayesian", false], [193, "module-baybe.recommenders.pure.bayesian.base", false], [195, "module-baybe.recommenders.pure.bayesian.botorch", false], [197, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [199, "module-baybe.recommenders.pure.nonpredictive", false], [200, "module-baybe.recommenders.pure.nonpredictive.base", false], [202, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [207, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [210, "module-baybe.searchspace", false], [211, "module-baybe.searchspace.continuous", false], [213, "module-baybe.searchspace.core", false], [218, "module-baybe.searchspace.discrete", false], [224, "module-baybe.searchspace.validation", false], [228, "module-baybe.serialization", false], [229, "module-baybe.serialization.core", false], [236, "module-baybe.serialization.mixin", false], [238, "module-baybe.serialization.utils", false], [241, "module-baybe.simulation", false], [242, "module-baybe.simulation.core", false], [244, "module-baybe.simulation.lookup", false], [246, "module-baybe.simulation.scenarios", false], [248, "module-baybe.simulation.transfer_learning", false], [250, "module-baybe.surrogates", false], [251, "module-baybe.surrogates.bandit", false], [253, "module-baybe.surrogates.base", false], [258, "module-baybe.surrogates.composite", false], [260, "module-baybe.surrogates.custom", false], [263, "module-baybe.surrogates.gaussian_process", false], [264, "module-baybe.surrogates.gaussian_process.core", false], [266, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [270, "module-baybe.surrogates.gaussian_process.presets", false], [271, "module-baybe.surrogates.gaussian_process.presets.core", false], [274, "module-baybe.surrogates.gaussian_process.presets.default", false], [276, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [278, "module-baybe.surrogates.linear", false], [280, "module-baybe.surrogates.naive", false], [282, "module-baybe.surrogates.ngboost", false], [284, "module-baybe.surrogates.random_forest", false], [286, "module-baybe.surrogates.utils", false], [290, "module-baybe.surrogates.validation", false], [293, "module-baybe.targets", false], [294, "module-baybe.targets.base", false], [296, "module-baybe.targets.binary", false], [299, "module-baybe.targets.enum", false], [302, "module-baybe.targets.numerical", false], [304, "module-baybe.targets.transforms", false], [308, "module-baybe.telemetry", false], [313, "module-baybe.utils", false], [314, "module-baybe.utils.augmentation", false], [317, "module-baybe.utils.basic", false], [333, "module-baybe.utils.boolean", false], [337, "module-baybe.utils.chemistry", false], [342, "module-baybe.utils.conversion", false], [345, "module-baybe.utils.dataframe", false], [360, "module-baybe.utils.interval", false], [365, "module-baybe.utils.memory", false], [367, "module-baybe.utils.numerical", false], [374, "module-baybe.utils.plotting", false], [378, "module-baybe.utils.random", false], [381, "module-baybe.utils.sampling_algorithms", false], [385, "module-baybe.utils.scaling", false], [387, "module-baybe.utils.torch", false], [390, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[30, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[30, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[20, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[120, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[125, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[130, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[132, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[214, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[137, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[139, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[295, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[297, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[340, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[79, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[392, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[393, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[92, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[344, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[80, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[81, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[82, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[105, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[110, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[33, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[34, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[35, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[37, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[303, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[83, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[30, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[120, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[117, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[108, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[108, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[146, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[41, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[84, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[115, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[115, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[139, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[221, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[222, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[214, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[148, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[30, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[33, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[34, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[35, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[37, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[214, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[130, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[25, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[106, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[106, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[106, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[107, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[25, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[25, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[93, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[108, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[30, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[256, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[259, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[30, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[256, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[259, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[255, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[108, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[357, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[167, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[114, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[191, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[107, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[382, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[170, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[109, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[30, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[178, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[191, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[30, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[178, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[330, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[262, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[331, "baybe.utils.basic.register_hooks", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[256, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "rffkernel (class in baybe.kernels.basic)": [[110, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[384, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[126, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[128, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[171, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[172, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[173, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[174, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[115, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[214, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[30, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[214, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[85, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[215, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[234, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[40, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[198, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[240, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[237, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[379, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[25, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[94, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[95, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[93, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[175, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[243, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[247, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[249, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[132, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[154, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[341, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[175, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[160, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[28, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[336, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[48, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[123, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[40, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[212, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[149, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[155, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[297, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[33, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[34, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[35, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[37, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[17, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[18, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[19, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[20, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[21, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[23, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[256, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[256, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[256, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[257, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[259, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[295, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[300, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[30, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[120, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[125, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[130, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[132, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[301, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[214, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[142, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[311, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[312, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[380, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[41, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[41, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[17, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[18, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[19, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[20, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[21, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[23, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[256, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[257, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[259, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[17, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[18, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[19, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[20, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[21, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[23, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[30, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[33, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[34, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[35, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[37, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[39, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[40, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[41, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[100, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[101, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[102, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[104, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[105, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[106, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[107, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[108, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[109, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[110, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[111, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[113, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[114, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[115, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[120, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[214, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[237, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[256, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[259, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[362, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[100, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[101, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[102, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[104, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[105, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[106, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[107, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[108, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[109, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[110, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[111, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[113, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[114, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[115, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[100, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[101, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[102, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[104, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[105, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[106, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[107, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[108, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[109, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[110, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[111, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[113, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[114, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[115, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[17, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[18, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[19, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[20, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[21, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[23, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[30, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[33, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[34, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[35, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[36, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[37, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[39, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[40, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[41, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[43, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[44, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[100, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[101, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[102, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[104, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[105, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[106, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[107, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[108, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[109, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[110, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[111, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[113, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[114, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[115, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[120, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[214, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[237, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[252, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[254, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[256, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[259, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[265, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[279, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[281, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[283, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[285, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[362, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[362, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[121, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[39, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[40, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[41, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[216, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[377, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[362, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[358, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[362, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[332, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[30, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[41, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[120, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[212, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[214, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[220, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[386, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[359, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[301, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[307, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[214, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[86, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[87, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[319, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[320, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[235, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[88, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[362, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[364, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[93, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[62, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[63, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[261, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[30, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[64, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[292, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[162, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[163, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[394, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[395, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[226, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[227, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[217, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[223, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[396, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[134, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[164, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[104, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[104, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[370, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[389, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [29, 0, 0, "-", "campaign"], [31, 0, 0, "-", "constraints"], [65, 0, 0, "-", "exceptions"], [89, 0, 0, "-", "insights"], [98, 0, 0, "-", "kernels"], [116, 0, 0, "-", "objective"], [118, 0, 0, "-", "objectives"], [135, 0, 0, "-", "parameters"], [165, 0, 0, "-", "priors"], [176, 0, 0, "-", "recommenders"], [210, 0, 0, "-", "searchspace"], [228, 0, 0, "-", "serialization"], [241, 0, 0, "-", "simulation"], [250, 0, 0, "-", "surrogates"], [293, 0, 0, "-", "targets"], [308, 0, 0, "-", "telemetry"], [313, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [22, 0, 0, "-", "base"], [24, 0, 0, "-", "partial"], [26, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNParEGO"], [13, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [14, 1, 1, "", "qLogNoisyExpectedImprovement"], [15, 1, 1, "", "qNegIntegratedPosteriorVariance"], [16, 1, 1, "", "qNoisyExpectedImprovement"], [17, 1, 1, "", "qPosteriorStandardDeviation"], [18, 1, 1, "", "qProbabilityOfImprovement"], [19, 1, 1, "", "qSimpleRegret"], [20, 1, 1, "", "qThompsonSampling"], [21, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNParEGO": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "compute_ref_point"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "prune_baseline"], [13, 3, 1, "", "reference_point"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[13, 4, 1, "", "array"], [13, 4, 1, "", "factor"], [13, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "get_integration_points"], [15, 3, 1, "", "sampling_fraction"], [15, 3, 1, "", "sampling_method"], [15, 3, 1, "", "sampling_n_points"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[15, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "n_mc_samples"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 3, 1, "", "beta"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.base": [[23, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "abbreviation"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "from_json"], [23, 3, 1, "", "supports_multi_output"], [23, 2, 1, "", "to_botorch"], [23, 2, 1, "", "to_dict"], [23, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[23, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[23, 4, 1, "", "string"]], "baybe.acquisition.partial": [[25, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[25, 2, 1, "", "__init__"], [25, 3, 1, "", "botorch_acqf"], [25, 3, 1, "", "pin_discrete"], [25, 3, 1, "", "pinned_part"], [25, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[25, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[27, 5, 1, "", "convert_acqf"], [28, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[30, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "add_measurements"], [30, 3, 1, "", "allow_recommending_already_measured"], [30, 3, 1, "", "allow_recommending_already_recommended"], [30, 3, 1, "", "allow_recommending_pending_experiments"], [30, 2, 1, "", "from_config"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_json"], [30, 2, 1, "", "get_surrogate"], [30, 6, 1, "", "measurements"], [30, 3, 1, "", "n_batches_done"], [30, 3, 1, "", "n_fits_done"], [30, 3, 1, "", "objective"], [30, 6, 1, "", "parameters"], [30, 2, 1, "", "posterior"], [30, 2, 1, "", "posterior_stats"], [30, 2, 1, "", "recommend"], [30, 3, 1, "", "recommender"], [30, 3, 1, "", "searchspace"], [30, 6, 1, "", "targets"], [30, 2, 1, "", "to_dict"], [30, 2, 1, "", "to_json"], [30, 2, 1, "", "toggle_discrete_candidates"], [30, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[30, 4, 1, "", "data"], [30, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[30, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[30, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[30, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_surrogate.params": [[30, 4, 1, "", "batch_size"], [30, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[30, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[30, 4, 1, "", "candidates"], [30, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[30, 4, 1, "", "batch_size"], [30, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[30, 4, 1, "", "complement"], [30, 4, 1, "", "constraints"], [30, 4, 1, "", "dry_run"], [30, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[30, 4, 1, "", "config_json"]], "baybe.constraints": [[32, 0, 0, "-", "base"], [38, 0, 0, "-", "conditions"], [42, 0, 0, "-", "continuous"], [45, 0, 0, "-", "deprecation"], [49, 0, 0, "-", "discrete"], [59, 0, 0, "-", "utils"], [61, 0, 0, "-", "validation"]], "baybe.constraints.base": [[33, 1, 1, "", "CardinalityConstraint"], [34, 1, 1, "", "Constraint"], [35, 1, 1, "", "ContinuousConstraint"], [36, 1, 1, "", "ContinuousNonlinearConstraint"], [37, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 6, 1, "", "is_continuous"], [33, 6, 1, "", "is_discrete"], [33, 3, 1, "", "max_cardinality"], [33, 3, 1, "", "min_cardinality"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[33, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[33, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "eval_during_augmentation"], [36, 3, 1, "", "eval_during_creation"], [36, 3, 1, "", "eval_during_modeling"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 6, 1, "", "is_continuous"], [36, 6, 1, "", "is_discrete"], [36, 3, 1, "", "numerical_only"], [36, 3, 1, "", "parameters"], [36, 2, 1, "", "summary"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 2, 1, "", "get_invalid"], [37, 2, 1, "", "get_invalid_polars"], [37, 2, 1, "", "get_valid"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[37, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[37, 4, 1, "", "df"]], "baybe.constraints.conditions": [[39, 1, 1, "", "Condition"], [40, 1, 1, "", "SubSelectionCondition"], [41, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[39, 2, 1, "", "evaluate"], [39, 2, 1, "", "from_dict"], [39, 2, 1, "", "from_json"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "to_json"], [39, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[39, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[39, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[39, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[39, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "evaluate"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 6, 1, "", "selection"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"], [40, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[40, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[40, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 3, 1, "", "operator"], [41, 3, 1, "", "threshold"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"], [41, 2, 1, "", "to_polars"], [41, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[41, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[41, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[43, 1, 1, "", "ContinuousCardinalityConstraint"], [44, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[43, 2, 1, "", "__init__"], [43, 3, 1, "", "eval_during_augmentation"], [43, 3, 1, "", "eval_during_creation"], [43, 3, 1, "", "eval_during_modeling"], [43, 2, 1, "", "from_dict"], [43, 2, 1, "", "from_json"], [43, 2, 1, "", "get_absolute_thresholds"], [43, 2, 1, "", "inactive_parameter_combinations"], [43, 6, 1, "", "is_continuous"], [43, 6, 1, "", "is_discrete"], [43, 3, 1, "", "max_cardinality"], [43, 3, 1, "", "min_cardinality"], [43, 6, 1, "", "n_inactive_parameter_combinations"], [43, 3, 1, "", "numerical_only"], [43, 3, 1, "", "parameters"], [43, 3, 1, "", "relative_threshold"], [43, 2, 1, "", "sample_inactive_parameters"], [43, 2, 1, "", "summary"], [43, 2, 1, "", "to_dict"], [43, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[43, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[43, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[43, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[43, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "coefficients"], [44, 3, 1, "", "eval_during_augmentation"], [44, 3, 1, "", "eval_during_creation"], [44, 3, 1, "", "eval_during_modeling"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 6, 1, "", "is_continuous"], [44, 6, 1, "", "is_discrete"], [44, 6, 1, "", "is_eq"], [44, 3, 1, "", "numerical_only"], [44, 3, 1, "", "operator"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "rhs"], [44, 2, 1, "", "summary"], [44, 2, 1, "", "to_botorch"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[44, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[44, 4, 1, "", "idx_offset"], [44, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[46, 5, 1, "", "ContinuousLinearEqualityConstraint"], [47, 5, 1, "", "ContinuousLinearInequalityConstraint"], [48, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[50, 1, 1, "", "DiscreteCardinalityConstraint"], [51, 1, 1, "", "DiscreteCustomConstraint"], [52, 1, 1, "", "DiscreteDependenciesConstraint"], [53, 1, 1, "", "DiscreteExcludeConstraint"], [54, 1, 1, "", "DiscreteLinkedParametersConstraint"], [55, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [56, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [57, 1, 1, "", "DiscreteProductConstraint"], [58, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 2, 1, "", "get_valid"], [50, 6, 1, "", "is_continuous"], [50, 6, 1, "", "is_discrete"], [50, 3, 1, "", "max_cardinality"], [50, 3, 1, "", "min_cardinality"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[50, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[50, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[50, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[50, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"], [51, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "affected_parameters"], [52, 3, 1, "", "conditions"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 3, 1, "", "permutation_invariant"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "combiner"], [53, 3, 1, "", "conditions"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "dependencies"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "condition"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "condition"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[58, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.utils": [[60, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[60, 4, 1, "", "check_maximum"], [60, 4, 1, "", "check_minimum"], [60, 4, 1, "", "df"], [60, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[62, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [63, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [64, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[62, 4, 1, "", "constraint"], [62, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[63, 4, 1, "", "constraints"]], "baybe.exceptions": [[66, 7, 1, "", "DeprecationError"], [67, 7, 1, "", "EmptySearchSpaceError"], [68, 7, 1, "", "IncompatibilityError"], [69, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [70, 7, 1, "", "IncompatibleArgumentError"], [71, 7, 1, "", "IncompatibleExplainerError"], [72, 7, 1, "", "IncompatibleSearchSpaceError"], [73, 7, 1, "", "IncompatibleSurrogateError"], [74, 7, 1, "", "InfeasibilityError"], [75, 7, 1, "", "InvalidSurrogateModelError"], [76, 7, 1, "", "InvalidTargetValueError"], [77, 7, 1, "", "MinimumCardinalityViolatedWarning"], [78, 7, 1, "", "ModelNotTrainedError"], [79, 7, 1, "", "NoMCAcquisitionFunctionError"], [80, 7, 1, "", "NoRecommendersLeftError"], [81, 7, 1, "", "NotEnoughPointsLeftError"], [82, 7, 1, "", "NothingToSimulateError"], [83, 7, 1, "", "NumericalUnderflowError"], [84, 7, 1, "", "OptionalImportError"], [85, 7, 1, "", "SearchSpaceMatchWarning"], [86, 7, 1, "", "UnidentifiedSubclassError"], [87, 7, 1, "", "UnmatchedAttributeError"], [88, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.insights": [[90, 0, 0, "-", "shap"]], "baybe.insights.shap": [[91, 8, 1, "", "EXPLAINERS"], [92, 8, 1, "", "NON_SHAP_EXPLAINERS"], [93, 1, 1, "", "SHAPInsight"], [94, 8, 1, "", "SHAP_EXPLAINERS"], [95, 8, 1, "", "SHAP_PLOTS"], [96, 5, 1, "", "is_shap_explainer"], [97, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[93, 2, 1, "", "__init__"], [93, 3, 1, "", "background_data"], [93, 2, 1, "", "explain"], [93, 3, 1, "", "explainer"], [93, 2, 1, "", "from_campaign"], [93, 2, 1, "", "from_recommender"], [93, 2, 1, "", "from_surrogate"], [93, 2, 1, "", "plot"], [93, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[93, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[93, 4, 1, "", "campaign"], [93, 4, 1, "", "explainer_cls"], [93, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[93, 4, 1, "", "explainer_cls"], [93, 4, 1, "", "measurements"], [93, 4, 1, "", "objective"], [93, 4, 1, "", "recommender"], [93, 4, 1, "", "searchspace"], [93, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[93, 4, 1, "", "**kwargs"], [93, 4, 1, "", "data"], [93, 4, 1, "", "explanation_index"], [93, 4, 1, "", "plot_type"], [93, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[97, 4, 1, "", "data"], [97, 4, 1, "", "explainer_cls"], [97, 4, 1, "", "surrogate"], [97, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[99, 0, 0, "-", "base"], [103, 0, 0, "-", "basic"], [112, 0, 0, "-", "composite"]], "baybe.kernels.base": [[100, 1, 1, "", "BasicKernel"], [101, 1, 1, "", "CompositeKernel"], [102, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "from_dict"], [100, 2, 1, "", "from_json"], [100, 2, 1, "", "to_dict"], [100, 2, 1, "", "to_factory"], [100, 2, 1, "", "to_gpytorch"], [100, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[100, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[100, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "from_dict"], [101, 2, 1, "", "from_json"], [101, 2, 1, "", "to_dict"], [101, 2, 1, "", "to_factory"], [101, 2, 1, "", "to_gpytorch"], [101, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[101, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[101, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "from_dict"], [102, 2, 1, "", "from_json"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "to_factory"], [102, 2, 1, "", "to_gpytorch"], [102, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[102, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[102, 4, 1, "", "string"]], "baybe.kernels.basic": [[104, 1, 1, "", "LinearKernel"], [105, 1, 1, "", "MaternKernel"], [106, 1, 1, "", "PeriodicKernel"], [107, 1, 1, "", "PiecewisePolynomialKernel"], [108, 1, 1, "", "PolynomialKernel"], [109, 1, 1, "", "RBFKernel"], [110, 1, 1, "", "RFFKernel"], [111, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"], [104, 3, 1, "", "variance_initial_value"], [104, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 3, 1, "", "lengthscale_initial_value"], [105, 3, 1, "", "lengthscale_prior"], [105, 3, 1, "", "nu"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 3, 1, "", "lengthscale_initial_value"], [106, 3, 1, "", "lengthscale_prior"], [106, 3, 1, "", "period_length_initial_value"], [106, 3, 1, "", "period_length_prior"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[106, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 3, 1, "", "lengthscale_initial_value"], [107, 3, 1, "", "lengthscale_prior"], [107, 3, 1, "", "q"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[107, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 3, 1, "", "offset_initial_value"], [108, 3, 1, "", "offset_prior"], [108, 3, 1, "", "power"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 3, 1, "", "lengthscale_initial_value"], [109, 3, 1, "", "lengthscale_prior"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 3, 1, "", "lengthscale_initial_value"], [110, 3, 1, "", "lengthscale_prior"], [110, 3, 1, "", "num_samples"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_factory"], [110, 2, 1, "", "to_gpytorch"], [110, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[110, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 3, 1, "", "lengthscale_initial_value"], [111, 3, 1, "", "lengthscale_prior"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[111, 4, 1, "", "string"]], "baybe.kernels.composite": [[113, 1, 1, "", "AdditiveKernel"], [114, 1, 1, "", "ProductKernel"], [115, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[113, 2, 1, "", "__init__"], [113, 3, 1, "", "base_kernels"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_factory"], [113, 2, 1, "", "to_gpytorch"], [113, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[113, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[114, 2, 1, "", "__init__"], [114, 3, 1, "", "base_kernels"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_factory"], [114, 2, 1, "", "to_gpytorch"], [114, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[114, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[115, 2, 1, "", "__init__"], [115, 3, 1, "", "base_kernel"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 3, 1, "", "outputscale_initial_value"], [115, 3, 1, "", "outputscale_prior"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_factory"], [115, 2, 1, "", "to_gpytorch"], [115, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[115, 4, 1, "", "string"]], "baybe.objective": [[117, 5, 1, "", "Objective"]], "baybe.objectives": [[119, 0, 0, "-", "base"], [122, 0, 0, "-", "deprecation"], [124, 0, 0, "-", "desirability"], [127, 0, 0, "-", "enum"], [129, 0, 0, "-", "pareto"], [131, 0, 0, "-", "single"], [133, 0, 0, "-", "validation"]], "baybe.objectives.base": [[120, 1, 1, "", "Objective"], [121, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "from_dict"], [120, 2, 1, "", "from_json"], [120, 3, 1, "", "is_multi_output"], [120, 6, 1, "", "n_outputs"], [120, 6, 1, "", "targets"], [120, 2, 1, "", "to_dict"], [120, 2, 1, "", "to_json"], [120, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[120, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[120, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[120, 4, 1, "", "allow_extra"], [120, 4, 1, "", "allow_missing"], [120, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[123, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[125, 1, 1, "", "DesirabilityObjective"], [126, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 3, 1, "", "is_multi_output"], [125, 6, 1, "", "n_outputs"], [125, 3, 1, "", "scalarizer"], [125, 6, 1, "", "targets"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "transform"], [125, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[125, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[125, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[125, 4, 1, "", "allow_extra"], [125, 4, 1, "", "allow_missing"], [125, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[126, 4, 1, "", "scalarizer"], [126, 4, 1, "", "values"], [126, 4, 1, "", "weights"]], "baybe.objectives.enum": [[128, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[128, 3, 1, "", "GEOM_MEAN"], [128, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[130, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "from_dict"], [130, 2, 1, "", "from_json"], [130, 3, 1, "", "is_multi_output"], [130, 6, 1, "", "n_outputs"], [130, 6, 1, "", "targets"], [130, 2, 1, "", "to_dict"], [130, 2, 1, "", "to_json"], [130, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[130, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[130, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[130, 4, 1, "", "allow_extra"], [130, 4, 1, "", "allow_missing"], [130, 4, 1, "", "df"]], "baybe.objectives.single": [[132, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "from_dict"], [132, 2, 1, "", "from_json"], [132, 3, 1, "", "is_multi_output"], [132, 6, 1, "", "n_outputs"], [132, 6, 1, "", "targets"], [132, 2, 1, "", "to_dict"], [132, 2, 1, "", "to_json"], [132, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[132, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[132, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[132, 4, 1, "", "allow_extra"], [132, 4, 1, "", "allow_missing"], [132, 4, 1, "", "df"]], "baybe.objectives.validation": [[134, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[136, 0, 0, "-", "base"], [140, 0, 0, "-", "categorical"], [143, 0, 0, "-", "custom"], [145, 0, 0, "-", "enum"], [150, 0, 0, "-", "numerical"], [153, 0, 0, "-", "substance"], [156, 0, 0, "-", "utils"], [161, 0, 0, "-", "validation"]], "baybe.parameters.base": [[137, 1, 1, "", "ContinuousParameter"], [138, 1, 1, "", "DiscreteParameter"], [139, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[137, 2, 1, "", "__init__"], [137, 6, 1, "", "comp_rep_columns"], [137, 2, 1, "", "from_dict"], [137, 2, 1, "", "from_json"], [137, 6, 1, "", "is_continuous"], [137, 6, 1, "", "is_discrete"], [137, 2, 1, "", "is_in_range"], [137, 3, 1, "", "is_numerical"], [137, 3, 1, "", "name"], [137, 2, 1, "", "summary"], [137, 2, 1, "", "to_dict"], [137, 2, 1, "", "to_json"], [137, 2, 1, "", "to_searchspace"], [137, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[137, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[137, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[137, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[138, 2, 1, "", "__init__"], [138, 6, 1, "", "active_values"], [138, 6, 1, "", "comp_df"], [138, 6, 1, "", "comp_rep_columns"], [138, 3, 1, "", "encoding"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 6, 1, "", "is_continuous"], [138, 6, 1, "", "is_discrete"], [138, 2, 1, "", "is_in_range"], [138, 3, 1, "", "is_numerical"], [138, 3, 1, "", "name"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_json"], [138, 2, 1, "", "to_searchspace"], [138, 2, 1, "", "to_subspace"], [138, 2, 1, "", "transform"], [138, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[138, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[138, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[138, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[138, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[139, 2, 1, "", "__init__"], [139, 6, 1, "", "comp_rep_columns"], [139, 2, 1, "", "from_dict"], [139, 2, 1, "", "from_json"], [139, 6, 1, "", "is_continuous"], [139, 6, 1, "", "is_discrete"], [139, 2, 1, "", "is_in_range"], [139, 3, 1, "", "is_numerical"], [139, 3, 1, "", "name"], [139, 2, 1, "", "summary"], [139, 2, 1, "", "to_dict"], [139, 2, 1, "", "to_json"], [139, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[139, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[139, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[139, 4, 1, "", "item"]], "baybe.parameters.categorical": [[141, 1, 1, "", "CategoricalParameter"], [142, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "active_values"], [141, 6, 1, "", "comp_df"], [141, 6, 1, "", "comp_rep_columns"], [141, 3, 1, "", "encoding"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 6, 1, "", "is_continuous"], [141, 6, 1, "", "is_discrete"], [141, 2, 1, "", "is_in_range"], [141, 3, 1, "", "is_numerical"], [141, 3, 1, "", "name"], [141, 2, 1, "", "summary"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_json"], [141, 2, 1, "", "to_searchspace"], [141, 2, 1, "", "to_subspace"], [141, 2, 1, "", "transform"], [141, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[141, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[141, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[141, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[141, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "active_values"], [142, 6, 1, "", "comp_df"], [142, 6, 1, "", "comp_rep_columns"], [142, 3, 1, "", "encoding"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 2, 1, "", "to_subspace"], [142, 2, 1, "", "transform"], [142, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[142, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[142, 4, 1, "", "series"]], "baybe.parameters.custom": [[144, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[144, 2, 1, "", "__init__"], [144, 6, 1, "", "active_values"], [144, 6, 1, "", "comp_df"], [144, 6, 1, "", "comp_rep_columns"], [144, 3, 1, "", "data"], [144, 3, 1, "", "decorrelate"], [144, 3, 1, "", "encoding"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_json"], [144, 6, 1, "", "is_continuous"], [144, 6, 1, "", "is_discrete"], [144, 2, 1, "", "is_in_range"], [144, 3, 1, "", "is_numerical"], [144, 3, 1, "", "name"], [144, 2, 1, "", "summary"], [144, 2, 1, "", "to_dict"], [144, 2, 1, "", "to_json"], [144, 2, 1, "", "to_searchspace"], [144, 2, 1, "", "to_subspace"], [144, 2, 1, "", "transform"], [144, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[144, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[144, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[144, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[144, 4, 1, "", "series"]], "baybe.parameters.enum": [[146, 1, 1, "", "CategoricalEncoding"], [147, 1, 1, "", "CustomEncoding"], [148, 1, 1, "", "ParameterEncoding"], [149, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[146, 3, 1, "", "INT"], [146, 3, 1, "", "OHE"], [146, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[147, 3, 1, "", "CUSTOM"], [147, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[149, 3, 1, "", "ATOMPAIR"], [149, 3, 1, "", "AUTOCORR"], [149, 3, 1, "", "AVALON"], [149, 3, 1, "", "BCUT2D"], [149, 3, 1, "", "E3FP"], [149, 3, 1, "", "ECFP"], [149, 3, 1, "", "ELECTROSHAPE"], [149, 3, 1, "", "ERG"], [149, 3, 1, "", "ESTATE"], [149, 3, 1, "", "FUNCTIONALGROUPS"], [149, 3, 1, "", "GETAWAY"], [149, 3, 1, "", "GHOSECRIPPEN"], [149, 3, 1, "", "KLEKOTAROTH"], [149, 3, 1, "", "LAGGNER"], [149, 3, 1, "", "LAYERED"], [149, 3, 1, "", "LINGO"], [149, 3, 1, "", "MACCS"], [149, 3, 1, "", "MAP"], [149, 3, 1, "", "MHFP"], [149, 3, 1, "", "MORDRED"], [149, 3, 1, "", "MORGAN_FP"], [149, 3, 1, "", "MORSE"], [149, 3, 1, "", "MQNS"], [149, 3, 1, "", "PATTERN"], [149, 3, 1, "", "PHARMACOPHORE"], [149, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [149, 3, 1, "", "PUBCHEM"], [149, 3, 1, "", "RDF"], [149, 3, 1, "", "RDKIT"], [149, 3, 1, "", "RDKIT2DDESCRIPTORS"], [149, 3, 1, "", "RDKITFINGERPRINT"], [149, 3, 1, "", "SECFP"], [149, 3, 1, "", "TOPOLOGICALTORSION"], [149, 3, 1, "", "USR"], [149, 3, 1, "", "USRCAT"], [149, 3, 1, "", "VSA"], [149, 3, 1, "", "WHIM"], [149, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[151, 1, 1, "", "NumericalContinuousParameter"], [152, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[151, 2, 1, "", "__init__"], [151, 3, 1, "", "bounds"], [151, 6, 1, "", "comp_rep_columns"], [151, 2, 1, "", "from_dict"], [151, 2, 1, "", "from_json"], [151, 6, 1, "", "is_continuous"], [151, 6, 1, "", "is_discrete"], [151, 2, 1, "", "is_in_range"], [151, 3, 1, "", "is_numerical"], [151, 3, 1, "", "name"], [151, 2, 1, "", "summary"], [151, 2, 1, "", "to_dict"], [151, 2, 1, "", "to_json"], [151, 2, 1, "", "to_searchspace"], [151, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[151, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[151, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[151, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[152, 2, 1, "", "__init__"], [152, 6, 1, "", "active_values"], [152, 6, 1, "", "comp_df"], [152, 6, 1, "", "comp_rep_columns"], [152, 3, 1, "", "encoding"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 6, 1, "", "is_continuous"], [152, 6, 1, "", "is_discrete"], [152, 2, 1, "", "is_in_range"], [152, 3, 1, "", "is_numerical"], [152, 3, 1, "", "name"], [152, 2, 1, "", "summary"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_json"], [152, 2, 1, "", "to_searchspace"], [152, 2, 1, "", "to_subspace"], [152, 3, 1, "", "tolerance"], [152, 2, 1, "", "transform"], [152, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[152, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[152, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[152, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[152, 4, 1, "", "series"]], "baybe.parameters.substance": [[154, 3, 1, "", "Smiles"], [155, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[155, 2, 1, "", "__init__"], [155, 6, 1, "", "active_values"], [155, 6, 1, "", "comp_df"], [155, 6, 1, "", "comp_rep_columns"], [155, 3, 1, "", "data"], [155, 3, 1, "", "decorrelate"], [155, 3, 1, "", "encoding"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 6, 1, "", "is_continuous"], [155, 6, 1, "", "is_discrete"], [155, 2, 1, "", "is_in_range"], [155, 3, 1, "", "is_numerical"], [155, 3, 1, "", "kwargs_conformer"], [155, 3, 1, "", "kwargs_fingerprint"], [155, 3, 1, "", "name"], [155, 2, 1, "", "summary"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_json"], [155, 2, 1, "", "to_searchspace"], [155, 2, 1, "", "to_subspace"], [155, 2, 1, "", "transform"], [155, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[155, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[155, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[155, 4, 1, "", "series"]], "baybe.parameters.utils": [[157, 5, 1, "", "activate_parameter"], [158, 5, 1, "", "get_parameters_from_dataframe"], [159, 5, 1, "", "is_inactive"], [160, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[157, 4, 1, "", "parameter"], [157, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[158, 4, 1, "", "df"], [158, 4, 1, "", "factory"], [158, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[159, 4, 1, "", "lower_threshold"], [159, 4, 1, "", "upper_threshold"], [159, 4, 1, "", "x"]], "baybe.parameters.validation": [[162, 5, 1, "", "validate_decorrelation"], [163, 5, 1, "", "validate_is_finite"], [164, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[166, 0, 0, "-", "base"], [168, 0, 0, "-", "basic"]], "baybe.priors.base": [[167, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "from_dict"], [167, 2, 1, "", "from_json"], [167, 2, 1, "", "to_dict"], [167, 2, 1, "", "to_gpytorch"], [167, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[167, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[167, 4, 1, "", "string"]], "baybe.priors.basic": [[169, 1, 1, "", "BetaPrior"], [170, 1, 1, "", "GammaPrior"], [171, 1, 1, "", "HalfCauchyPrior"], [172, 1, 1, "", "HalfNormalPrior"], [173, 1, 1, "", "LogNormalPrior"], [174, 1, 1, "", "NormalPrior"], [175, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[169, 2, 1, "", "__init__"], [169, 3, 1, "", "alpha"], [169, 3, 1, "", "beta"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_gpytorch"], [169, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[169, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[170, 2, 1, "", "__init__"], [170, 3, 1, "", "concentration"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 3, 1, "", "rate"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_gpytorch"], [170, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[170, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 3, 1, "", "scale"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_gpytorch"], [171, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[171, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 3, 1, "", "scale"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_gpytorch"], [172, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[172, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 3, 1, "", "loc"], [173, 3, 1, "", "scale"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[173, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "loc"], [174, 3, 1, "", "scale"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[174, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[175, 2, 1, "", "__init__"], [175, 3, 1, "", "a"], [175, 3, 1, "", "b"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "from_json"], [175, 3, 1, "", "sigma"], [175, 2, 1, "", "to_dict"], [175, 2, 1, "", "to_gpytorch"], [175, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[175, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[175, 4, 1, "", "string"]], "baybe.recommenders": [[177, 0, 0, "-", "base"], [179, 0, 0, "-", "meta"], [187, 0, 0, "-", "naive"], [189, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[178, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[178, 4, 1, "", "batch_size"], [178, 4, 1, "", "measurements"], [178, 4, 1, "", "objective"], [178, 4, 1, "", "pending_experiments"], [178, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[180, 0, 0, "-", "base"], [182, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[181, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "from_dict"], [181, 2, 1, "", "from_json"], [181, 2, 1, "", "get_current_recommender"], [181, 2, 1, "", "get_next_recommender"], [181, 2, 1, "", "get_non_meta_recommender"], [181, 6, 1, "", "is_stateful"], [181, 2, 1, "", "recommend"], [181, 2, 1, "", "select_recommender"], [181, 2, 1, "", "to_dict"], [181, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[181, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[181, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[183, 1, 1, "", "BaseSequentialMetaRecommender"], [184, 1, 1, "", "SequentialMetaRecommender"], [185, 1, 1, "", "StreamingSequentialMetaRecommender"], [186, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "from_dict"], [183, 2, 1, "", "from_json"], [183, 2, 1, "", "get_current_recommender"], [183, 2, 1, "", "get_next_recommender"], [183, 2, 1, "", "get_non_meta_recommender"], [183, 6, 1, "", "is_stateful"], [183, 2, 1, "", "recommend"], [183, 2, 1, "", "select_recommender"], [183, 2, 1, "", "to_dict"], [183, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[183, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[183, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "get_current_recommender"], [184, 2, 1, "", "get_next_recommender"], [184, 2, 1, "", "get_non_meta_recommender"], [184, 6, 1, "", "is_stateful"], [184, 3, 1, "", "mode"], [184, 2, 1, "", "recommend"], [184, 3, 1, "", "recommenders"], [184, 2, 1, "", "select_recommender"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[184, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[184, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "get_current_recommender"], [185, 2, 1, "", "get_next_recommender"], [185, 2, 1, "", "get_non_meta_recommender"], [185, 6, 1, "", "is_stateful"], [185, 2, 1, "", "recommend"], [185, 3, 1, "", "recommenders"], [185, 2, 1, "", "select_recommender"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[185, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[185, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "from_dict"], [186, 2, 1, "", "from_json"], [186, 2, 1, "", "get_current_recommender"], [186, 2, 1, "", "get_next_recommender"], [186, 2, 1, "", "get_non_meta_recommender"], [186, 3, 1, "", "initial_recommender"], [186, 6, 1, "", "is_stateful"], [186, 2, 1, "", "recommend"], [186, 3, 1, "", "recommender"], [186, 3, 1, "", "remain_switched"], [186, 2, 1, "", "select_recommender"], [186, 3, 1, "", "switch_after"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[186, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[186, 4, 1, "", "string"]], "baybe.recommenders.naive": [[188, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[188, 2, 1, "", "__init__"], [188, 6, 1, "", "allow_recommending_already_measured"], [188, 6, 1, "", "allow_recommending_pending_experiments"], [188, 6, 1, "", "allow_repeated_recommendations"], [188, 3, 1, "", "compatibility"], [188, 3, 1, "", "cont_recommender"], [188, 3, 1, "", "disc_recommender"], [188, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[188, 4, 1, "", "batch_size"], [188, 4, 1, "", "measurements"], [188, 4, 1, "", "objective"], [188, 4, 1, "", "pending_experiments"], [188, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[190, 0, 0, "-", "base"], [192, 0, 0, "-", "bayesian"], [199, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[191, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[191, 2, 1, "", "__init__"], [191, 6, 1, "", "allow_recommending_already_measured"], [191, 6, 1, "", "allow_recommending_pending_experiments"], [191, 6, 1, "", "allow_repeated_recommendations"], [191, 3, 1, "", "compatibility"], [191, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[191, 4, 1, "", "batch_size"], [191, 4, 1, "", "measurements"], [191, 4, 1, "", "objective"], [191, 4, 1, "", "pending_experiments"], [191, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[193, 0, 0, "-", "base"], [195, 0, 0, "-", "botorch"], [197, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[194, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[194, 2, 1, "", "__init__"], [194, 3, 1, "", "acquisition_function"], [194, 3, 1, "", "acquisition_function_cls"], [194, 6, 1, "", "allow_recommending_already_measured"], [194, 6, 1, "", "allow_recommending_pending_experiments"], [194, 6, 1, "", "allow_repeated_recommendations"], [194, 3, 1, "", "compatibility"], [194, 2, 1, "", "get_surrogate"], [194, 2, 1, "", "recommend"], [194, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[194, 4, 1, "", "batch_size"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[196, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[196, 2, 1, "", "__init__"], [196, 3, 1, "", "acquisition_function"], [196, 3, 1, "", "acquisition_function_cls"], [196, 6, 1, "", "allow_recommending_already_measured"], [196, 6, 1, "", "allow_recommending_pending_experiments"], [196, 6, 1, "", "allow_repeated_recommendations"], [196, 3, 1, "", "compatibility"], [196, 2, 1, "", "get_surrogate"], [196, 3, 1, "", "hybrid_sampler"], [196, 3, 1, "", "max_n_subspaces"], [196, 3, 1, "", "n_raw_samples"], [196, 3, 1, "", "n_restarts"], [196, 2, 1, "", "recommend"], [196, 3, 1, "", "sampling_percentage"], [196, 3, 1, "", "sequential_continuous"], [196, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[196, 4, 1, "", "batch_size"], [196, 4, 1, "", "measurements"], [196, 4, 1, "", "objective"], [196, 4, 1, "", "pending_experiments"], [196, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[198, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[200, 0, 0, "-", "base"], [202, 0, 0, "-", "clustering"], [207, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[201, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[201, 2, 1, "", "__init__"], [201, 6, 1, "", "allow_recommending_already_measured"], [201, 6, 1, "", "allow_recommending_pending_experiments"], [201, 6, 1, "", "allow_repeated_recommendations"], [201, 3, 1, "", "compatibility"], [201, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[201, 4, 1, "", "batch_size"], [201, 4, 1, "", "measurements"], [201, 4, 1, "", "objective"], [201, 4, 1, "", "pending_experiments"], [201, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[203, 1, 1, "", "GaussianMixtureClusteringRecommender"], [204, 1, 1, "", "KMeansClusteringRecommender"], [205, 1, 1, "", "PAMClusteringRecommender"], [206, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[203, 2, 1, "", "__init__"], [203, 6, 1, "", "allow_recommending_already_measured"], [203, 6, 1, "", "allow_recommending_pending_experiments"], [203, 6, 1, "", "allow_repeated_recommendations"], [203, 3, 1, "", "compatibility"], [203, 3, 1, "", "model_cluster_num_parameter_name"], [203, 3, 1, "", "model_params"], [203, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[203, 4, 1, "", "batch_size"], [203, 4, 1, "", "measurements"], [203, 4, 1, "", "objective"], [203, 4, 1, "", "pending_experiments"], [203, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[204, 2, 1, "", "__init__"], [204, 6, 1, "", "allow_recommending_already_measured"], [204, 6, 1, "", "allow_recommending_pending_experiments"], [204, 6, 1, "", "allow_repeated_recommendations"], [204, 3, 1, "", "compatibility"], [204, 3, 1, "", "model_cluster_num_parameter_name"], [204, 3, 1, "", "model_params"], [204, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[204, 4, 1, "", "batch_size"], [204, 4, 1, "", "measurements"], [204, 4, 1, "", "objective"], [204, 4, 1, "", "pending_experiments"], [204, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[205, 2, 1, "", "__init__"], [205, 6, 1, "", "allow_recommending_already_measured"], [205, 6, 1, "", "allow_recommending_pending_experiments"], [205, 6, 1, "", "allow_repeated_recommendations"], [205, 3, 1, "", "compatibility"], [205, 3, 1, "", "model_cluster_num_parameter_name"], [205, 3, 1, "", "model_params"], [205, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[205, 4, 1, "", "batch_size"], [205, 4, 1, "", "measurements"], [205, 4, 1, "", "objective"], [205, 4, 1, "", "pending_experiments"], [205, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[206, 2, 1, "", "__init__"], [206, 6, 1, "", "allow_recommending_already_measured"], [206, 6, 1, "", "allow_recommending_pending_experiments"], [206, 6, 1, "", "allow_repeated_recommendations"], [206, 3, 1, "", "compatibility"], [206, 3, 1, "", "model_cluster_num_parameter_name"], [206, 3, 1, "", "model_params"], [206, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[206, 4, 1, "", "batch_size"], [206, 4, 1, "", "measurements"], [206, 4, 1, "", "objective"], [206, 4, 1, "", "pending_experiments"], [206, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[208, 1, 1, "", "FPSRecommender"], [209, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[208, 2, 1, "", "__init__"], [208, 6, 1, "", "allow_recommending_already_measured"], [208, 6, 1, "", "allow_recommending_pending_experiments"], [208, 6, 1, "", "allow_repeated_recommendations"], [208, 3, 1, "", "compatibility"], [208, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[208, 4, 1, "", "batch_size"], [208, 4, 1, "", "measurements"], [208, 4, 1, "", "objective"], [208, 4, 1, "", "pending_experiments"], [208, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[209, 2, 1, "", "__init__"], [209, 6, 1, "", "allow_recommending_already_measured"], [209, 6, 1, "", "allow_recommending_pending_experiments"], [209, 6, 1, "", "allow_repeated_recommendations"], [209, 3, 1, "", "compatibility"], [209, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[209, 4, 1, "", "batch_size"], [209, 4, 1, "", "measurements"], [209, 4, 1, "", "objective"], [209, 4, 1, "", "pending_experiments"], [209, 4, 1, "", "searchspace"]], "baybe.searchspace": [[211, 0, 0, "-", "continuous"], [213, 0, 0, "-", "core"], [218, 0, 0, "-", "discrete"], [224, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[212, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[212, 2, 1, "", "__init__"], [212, 6, 1, "", "comp_rep_bounds"], [212, 6, 1, "", "comp_rep_columns"], [212, 6, 1, "", "constraints_cardinality"], [212, 3, 1, "", "constraints_lin_eq"], [212, 3, 1, "", "constraints_lin_ineq"], [212, 3, 1, "", "constraints_nonlin"], [212, 2, 1, "", "empty"], [212, 2, 1, "", "from_bounds"], [212, 2, 1, "", "from_dataframe"], [212, 2, 1, "", "from_dict"], [212, 2, 1, "", "from_json"], [212, 2, 1, "", "from_parameter"], [212, 2, 1, "", "from_product"], [212, 6, 1, "", "full_factorial"], [212, 2, 1, "", "get_parameters_by_name"], [212, 2, 1, "", "inactive_parameter_combinations"], [212, 6, 1, "", "is_empty"], [212, 6, 1, "", "n_inactive_parameter_combinations"], [212, 6, 1, "", "parameter_names"], [212, 6, 1, "", "parameter_names_in_cardinality_constraints"], [212, 3, 1, "", "parameters"], [212, 2, 1, "", "sample_from_full_factorial"], [212, 2, 1, "", "sample_uniform"], [212, 2, 1, "", "samples_full_factorial"], [212, 2, 1, "", "samples_random"], [212, 6, 1, "", "scaling_bounds"], [212, 2, 1, "", "to_dict"], [212, 2, 1, "", "to_json"], [212, 2, 1, "", "to_searchspace"], [212, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[212, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[212, 4, 1, "", "df"], [212, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[212, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[212, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[212, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[212, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[212, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[212, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[214, 1, 1, "", "SearchSpace"], [215, 1, 1, "", "SearchSpaceType"], [216, 5, 1, "", "to_searchspace"], [217, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[214, 2, 1, "", "__init__"], [214, 6, 1, "", "comp_rep_bounds"], [214, 6, 1, "", "comp_rep_columns"], [214, 6, 1, "", "constraints"], [214, 6, 1, "", "constraints_augmentable"], [214, 3, 1, "", "continuous"], [214, 3, 1, "", "discrete"], [214, 2, 1, "", "estimate_product_space_size"], [214, 2, 1, "", "from_dataframe"], [214, 2, 1, "", "from_dict"], [214, 2, 1, "", "from_json"], [214, 2, 1, "", "from_parameter"], [214, 2, 1, "", "from_product"], [214, 2, 1, "", "get_comp_rep_parameter_indices"], [214, 2, 1, "", "get_parameters_by_name"], [214, 6, 1, "", "n_tasks"], [214, 6, 1, "", "parameter_names"], [214, 6, 1, "", "parameters"], [214, 6, 1, "", "scaling_bounds"], [214, 6, 1, "", "task_idx"], [214, 2, 1, "", "to_dict"], [214, 2, 1, "", "to_json"], [214, 2, 1, "", "transform"], [214, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[214, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[214, 4, 1, "", "df"], [214, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[214, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[214, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[214, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[214, 4, 1, "", "constraints"], [214, 4, 1, "", "empty_encoding"], [214, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[214, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[214, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[214, 4, 1, "", "allow_extra"], [214, 4, 1, "", "allow_missing"], [214, 4, 1, "", "data"], [214, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[215, 3, 1, "", "CONTINUOUS"], [215, 3, 1, "", "DISCRETE"], [215, 3, 1, "", "EITHER"], [215, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[219, 1, 1, "", "MemorySize"], [220, 1, 1, "", "SubspaceDiscrete"], [221, 5, 1, "", "parameter_cartesian_prod_pandas"], [222, 5, 1, "", "parameter_cartesian_prod_polars"], [223, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[219, 2, 1, "", "__init__"], [219, 3, 1, "", "comp_rep_bytes"], [219, 6, 1, "", "comp_rep_human_readable"], [219, 3, 1, "", "comp_rep_shape"], [219, 3, 1, "", "exp_rep_bytes"], [219, 6, 1, "", "exp_rep_human_readable"], [219, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[220, 2, 1, "", "__init__"], [220, 3, 1, "", "comp_rep"], [220, 6, 1, "", "comp_rep_bounds"], [220, 6, 1, "", "comp_rep_columns"], [220, 3, 1, "", "constraints"], [220, 2, 1, "", "empty"], [220, 3, 1, "", "empty_encoding"], [220, 2, 1, "", "estimate_product_space_size"], [220, 3, 1, "", "exp_rep"], [220, 2, 1, "", "from_dataframe"], [220, 2, 1, "", "from_dict"], [220, 2, 1, "", "from_json"], [220, 2, 1, "", "from_parameter"], [220, 2, 1, "", "from_product"], [220, 2, 1, "", "from_simplex"], [220, 2, 1, "", "get_candidates"], [220, 2, 1, "", "get_parameters_by_name"], [220, 6, 1, "", "is_empty"], [220, 6, 1, "", "metadata"], [220, 6, 1, "", "parameter_names"], [220, 3, 1, "", "parameters"], [220, 6, 1, "", "scaling_bounds"], [220, 2, 1, "", "to_dict"], [220, 2, 1, "", "to_json"], [220, 2, 1, "", "to_searchspace"], [220, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[220, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[220, 4, 1, "", "df"], [220, 4, 1, "", "empty_encoding"], [220, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[220, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[220, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[220, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[220, 4, 1, "", "boundary_only"], [220, 4, 1, "", "constraints"], [220, 4, 1, "", "max_nonzero"], [220, 4, 1, "", "max_sum"], [220, 4, 1, "", "min_nonzero"], [220, 4, 1, "", "product_parameters"], [220, 4, 1, "", "simplex_parameters"], [220, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[220, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[221, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[222, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[225, 5, 1, "", "get_transform_parameters"], [226, 5, 1, "", "validate_parameter_names"], [227, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[229, 0, 0, "-", "core"], [236, 0, 0, "-", "mixin"], [238, 0, 0, "-", "utils"]], "baybe.serialization.core": [[230, 5, 1, "", "block_deserialization_hook"], [231, 5, 1, "", "block_serialization_hook"], [232, 8, 1, "", "converter"], [233, 5, 1, "", "get_base_structure_hook"], [234, 5, 1, "", "select_constructor_hook"], [235, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[233, 4, 1, "", "base"], [233, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[235, 4, 1, "", "base"], [235, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[237, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[237, 2, 1, "", "from_dict"], [237, 2, 1, "", "from_json"], [237, 2, 1, "", "to_dict"], [237, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[237, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[237, 4, 1, "", "string"]], "baybe.serialization.utils": [[239, 5, 1, "", "deserialize_dataframe"], [240, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[242, 0, 0, "-", "core"], [244, 0, 0, "-", "lookup"], [246, 0, 0, "-", "scenarios"], [248, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[243, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[243, 4, 1, "", "batch_size"], [243, 4, 1, "", "campaign"], [243, 4, 1, "", "impute_mode"], [243, 4, 1, "", "initial_data"], [243, 4, 1, "", "lookup"], [243, 4, 1, "", "n_doe_iterations"], [243, 4, 1, "", "noise_percent"], [243, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[245, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[245, 4, 1, "", "impute_mode"], [245, 4, 1, "", "lookup"], [245, 4, 1, "", "queries"], [245, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[247, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[247, 4, 1, "", "batch_size"], [247, 4, 1, "", "groupby"], [247, 4, 1, "", "impute_mode"], [247, 4, 1, "", "initial_data"], [247, 4, 1, "", "lookup"], [247, 4, 1, "", "n_doe_iterations"], [247, 4, 1, "", "n_mc_iterations"], [247, 4, 1, "", "noise_percent"], [247, 4, 1, "", "random_seed"], [247, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[249, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[249, 4, 1, "", "batch_size"], [249, 4, 1, "", "campaign"], [249, 4, 1, "", "groupby"], [249, 4, 1, "", "lookup"], [249, 4, 1, "", "n_doe_iterations"], [249, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[251, 0, 0, "-", "bandit"], [253, 0, 0, "-", "base"], [258, 0, 0, "-", "composite"], [260, 0, 0, "-", "custom"], [263, 0, 0, "-", "gaussian_process"], [278, 0, 0, "-", "linear"], [280, 0, 0, "-", "naive"], [282, 0, 0, "-", "ngboost"], [284, 0, 0, "-", "random_forest"], [286, 0, 0, "-", "utils"], [290, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[252, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[252, 2, 1, "", "__init__"], [252, 2, 1, "", "fit"], [252, 2, 1, "", "from_dict"], [252, 2, 1, "", "from_json"], [252, 2, 1, "", "posterior"], [252, 2, 1, "", "posterior_means"], [252, 2, 1, "", "posterior_modes"], [252, 2, 1, "", "posterior_stats"], [252, 3, 1, "", "prior"], [252, 2, 1, "", "replicate"], [252, 3, 1, "", "supports_multi_output"], [252, 3, 1, "", "supports_transfer_learning"], [252, 2, 1, "", "to_botorch"], [252, 2, 1, "", "to_dict"], [252, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[252, 4, 1, "", "measurements"], [252, 4, 1, "", "objective"], [252, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[252, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[252, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[252, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[252, 4, 1, "", "candidates"], [252, 4, 1, "", "stats"]], "baybe.surrogates.base": [[254, 1, 1, "", "IndependentGaussianSurrogate"], [255, 8, 1, "", "PosteriorStatistic"], [256, 1, 1, "", "Surrogate"], [257, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[254, 2, 1, "", "__init__"], [254, 2, 1, "", "fit"], [254, 2, 1, "", "from_dict"], [254, 2, 1, "", "from_json"], [254, 2, 1, "", "posterior"], [254, 2, 1, "", "posterior_stats"], [254, 2, 1, "", "replicate"], [254, 3, 1, "", "supports_multi_output"], [254, 3, 1, "", "supports_transfer_learning"], [254, 2, 1, "", "to_botorch"], [254, 2, 1, "", "to_dict"], [254, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[254, 4, 1, "", "measurements"], [254, 4, 1, "", "objective"], [254, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[254, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[254, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[254, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[254, 4, 1, "", "candidates"], [254, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate": [[256, 2, 1, "", "__init__"], [256, 2, 1, "", "fit"], [256, 2, 1, "", "from_dict"], [256, 2, 1, "", "from_json"], [256, 2, 1, "", "posterior"], [256, 2, 1, "", "posterior_stats"], [256, 2, 1, "", "replicate"], [256, 3, 1, "", "supports_multi_output"], [256, 3, 1, "", "supports_transfer_learning"], [256, 2, 1, "", "to_botorch"], [256, 2, 1, "", "to_dict"], [256, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[256, 4, 1, "", "measurements"], [256, 4, 1, "", "objective"], [256, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[256, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[256, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[256, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[256, 4, 1, "", "candidates"], [256, 4, 1, "", "stats"]], "baybe.surrogates.base.SurrogateProtocol": [[257, 2, 1, "", "__init__"], [257, 2, 1, "", "fit"], [257, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[259, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[259, 2, 1, "", "__init__"], [259, 2, 1, "", "fit"], [259, 2, 1, "", "from_dict"], [259, 2, 1, "", "from_json"], [259, 2, 1, "", "from_replication"], [259, 2, 1, "", "posterior"], [259, 2, 1, "", "posterior_stats"], [259, 3, 1, "", "surrogates"], [259, 2, 1, "", "to_botorch"], [259, 2, 1, "", "to_dict"], [259, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[259, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[259, 4, 1, "", "string"]], "baybe.surrogates.custom": [[261, 1, 1, "", "CustomONNXSurrogate"], [262, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[261, 2, 1, "", "__init__"], [261, 2, 1, "", "default_model"], [261, 2, 1, "", "fit"], [261, 2, 1, "", "from_dict"], [261, 2, 1, "", "from_json"], [261, 3, 1, "", "onnx_input_name"], [261, 3, 1, "", "onnx_str"], [261, 2, 1, "", "posterior"], [261, 2, 1, "", "posterior_stats"], [261, 2, 1, "", "replicate"], [261, 3, 1, "", "supports_multi_output"], [261, 3, 1, "", "supports_transfer_learning"], [261, 2, 1, "", "to_botorch"], [261, 2, 1, "", "to_dict"], [261, 2, 1, "", "to_json"], [261, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[261, 4, 1, "", "measurements"], [261, 4, 1, "", "objective"], [261, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[261, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[261, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[261, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[261, 4, 1, "", "candidates"], [261, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[261, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[264, 0, 0, "-", "core"], [266, 0, 0, "-", "kernel_factory"], [270, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[265, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[265, 2, 1, "", "__init__"], [265, 2, 1, "", "fit"], [265, 2, 1, "", "from_dict"], [265, 2, 1, "", "from_json"], [265, 2, 1, "", "from_preset"], [265, 3, 1, "", "kernel_factory"], [265, 2, 1, "", "posterior"], [265, 2, 1, "", "posterior_stats"], [265, 2, 1, "", "replicate"], [265, 3, 1, "", "supports_multi_output"], [265, 3, 1, "", "supports_transfer_learning"], [265, 2, 1, "", "to_botorch"], [265, 2, 1, "", "to_dict"], [265, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[265, 4, 1, "", "measurements"], [265, 4, 1, "", "objective"], [265, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[265, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[265, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[265, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[265, 4, 1, "", "candidates"], [265, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.kernel_factory": [[267, 1, 1, "", "KernelFactory"], [268, 1, 1, "", "PlainKernelFactory"], [269, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[267, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[268, 2, 1, "", "__init__"], [268, 2, 1, "", "from_dict"], [268, 2, 1, "", "from_json"], [268, 3, 1, "", "kernel"], [268, 2, 1, "", "to_dict"], [268, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[268, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[268, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[271, 0, 0, "-", "core"], [274, 0, 0, "-", "default"], [276, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[272, 1, 1, "", "GaussianProcessPreset"], [273, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[272, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[275, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[275, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[277, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[277, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[279, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[279, 2, 1, "", "__init__"], [279, 2, 1, "", "fit"], [279, 2, 1, "", "from_dict"], [279, 2, 1, "", "from_json"], [279, 3, 1, "", "model_params"], [279, 2, 1, "", "posterior"], [279, 2, 1, "", "posterior_stats"], [279, 2, 1, "", "replicate"], [279, 3, 1, "", "supports_multi_output"], [279, 3, 1, "", "supports_transfer_learning"], [279, 2, 1, "", "to_botorch"], [279, 2, 1, "", "to_dict"], [279, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[279, 4, 1, "", "measurements"], [279, 4, 1, "", "objective"], [279, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[279, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[279, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[279, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[279, 4, 1, "", "candidates"], [279, 4, 1, "", "stats"]], "baybe.surrogates.naive": [[281, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[281, 2, 1, "", "__init__"], [281, 2, 1, "", "fit"], [281, 2, 1, "", "from_dict"], [281, 2, 1, "", "from_json"], [281, 2, 1, "", "posterior"], [281, 2, 1, "", "posterior_stats"], [281, 2, 1, "", "replicate"], [281, 3, 1, "", "supports_multi_output"], [281, 3, 1, "", "supports_transfer_learning"], [281, 2, 1, "", "to_botorch"], [281, 2, 1, "", "to_dict"], [281, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[281, 4, 1, "", "measurements"], [281, 4, 1, "", "objective"], [281, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[281, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[281, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[281, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[281, 4, 1, "", "candidates"], [281, 4, 1, "", "stats"]], "baybe.surrogates.ngboost": [[283, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[283, 2, 1, "", "__init__"], [283, 2, 1, "", "fit"], [283, 2, 1, "", "from_dict"], [283, 2, 1, "", "from_json"], [283, 3, 1, "", "model_params"], [283, 2, 1, "", "posterior"], [283, 2, 1, "", "posterior_stats"], [283, 2, 1, "", "replicate"], [283, 3, 1, "", "supports_multi_output"], [283, 3, 1, "", "supports_transfer_learning"], [283, 2, 1, "", "to_botorch"], [283, 2, 1, "", "to_dict"], [283, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[283, 4, 1, "", "measurements"], [283, 4, 1, "", "objective"], [283, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[283, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[283, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[283, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[283, 4, 1, "", "candidates"], [283, 4, 1, "", "stats"]], "baybe.surrogates.random_forest": [[285, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[285, 2, 1, "", "__init__"], [285, 2, 1, "", "fit"], [285, 2, 1, "", "from_dict"], [285, 2, 1, "", "from_json"], [285, 3, 1, "", "model_params"], [285, 2, 1, "", "posterior"], [285, 2, 1, "", "posterior_stats"], [285, 2, 1, "", "replicate"], [285, 3, 1, "", "supports_multi_output"], [285, 3, 1, "", "supports_transfer_learning"], [285, 2, 1, "", "to_botorch"], [285, 2, 1, "", "to_dict"], [285, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[285, 4, 1, "", "measurements"], [285, 4, 1, "", "objective"], [285, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[285, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[285, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[285, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[285, 4, 1, "", "candidates"], [285, 4, 1, "", "stats"]], "baybe.surrogates.utils": [[287, 5, 1, "", "batchify_ensemble_predictor"], [288, 5, 1, "", "batchify_mean_var_prediction"], [289, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[287, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[289, 4, 1, "", "cls"], [289, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[291, 5, 1, "", "get_model_params_validator"], [292, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[291, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[292, 4, 1, "", "model_cls"]], "baybe.targets": [[294, 0, 0, "-", "base"], [296, 0, 0, "-", "binary"], [299, 0, 0, "-", "enum"], [302, 0, 0, "-", "numerical"], [304, 0, 0, "-", "transforms"]], "baybe.targets.base": [[295, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[295, 2, 1, "", "__init__"], [295, 2, 1, "", "from_dict"], [295, 2, 1, "", "from_json"], [295, 3, 1, "", "name"], [295, 2, 1, "", "summary"], [295, 2, 1, "", "to_dict"], [295, 2, 1, "", "to_json"], [295, 2, 1, "", "to_objective"], [295, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[295, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[295, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[295, 4, 1, "", "series"]], "baybe.targets.binary": [[297, 1, 1, "", "BinaryTarget"], [298, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[297, 2, 1, "", "__init__"], [297, 3, 1, "", "failure_value"], [297, 2, 1, "", "from_dict"], [297, 2, 1, "", "from_json"], [297, 3, 1, "", "name"], [297, 3, 1, "", "success_value"], [297, 2, 1, "", "summary"], [297, 2, 1, "", "to_dict"], [297, 2, 1, "", "to_json"], [297, 2, 1, "", "to_objective"], [297, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[297, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[297, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[297, 4, 1, "", "series"]], "baybe.targets.enum": [[300, 1, 1, "", "TargetMode"], [301, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[300, 3, 1, "", "MATCH"], [300, 3, 1, "", "MAX"], [300, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[301, 3, 1, "", "BELL"], [301, 3, 1, "", "LINEAR"], [301, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[303, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[303, 2, 1, "", "__init__"], [303, 3, 1, "", "bounds"], [303, 2, 1, "", "from_dict"], [303, 2, 1, "", "from_json"], [303, 3, 1, "", "mode"], [303, 3, 1, "", "name"], [303, 2, 1, "", "summary"], [303, 2, 1, "", "to_dict"], [303, 2, 1, "", "to_json"], [303, 2, 1, "", "to_objective"], [303, 2, 1, "", "transform"], [303, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[303, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[303, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[303, 4, 1, "", "series"]], "baybe.targets.transforms": [[305, 5, 1, "", "bell_transform"], [306, 5, 1, "", "linear_transform"], [307, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[305, 4, 1, "", "arr"], [305, 4, 1, "", "lower"], [305, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[306, 4, 1, "", "arr"], [306, 4, 1, "", "descending"], [306, 4, 1, "", "lower"], [306, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[307, 4, 1, "", "arr"], [307, 4, 1, "", "lower"], [307, 4, 1, "", "upper"]], "baybe.telemetry": [[309, 5, 1, "", "get_user_details"], [310, 5, 1, "", "is_enabled"], [311, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [312, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[311, 4, 1, "", "cached_recommendation"], [311, 4, 1, "", "measurements"], [311, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[312, 4, 1, "", "instrument_name"], [312, 4, 1, "", "value"]], "baybe.utils": [[314, 0, 0, "-", "augmentation"], [317, 0, 0, "-", "basic"], [333, 0, 0, "-", "boolean"], [337, 0, 0, "-", "chemistry"], [342, 0, 0, "-", "conversion"], [345, 0, 0, "-", "dataframe"], [360, 0, 0, "-", "interval"], [365, 0, 0, "-", "memory"], [367, 0, 0, "-", "numerical"], [374, 0, 0, "-", "plotting"], [378, 0, 0, "-", "random"], [381, 0, 0, "-", "sampling_algorithms"], [385, 0, 0, "-", "scaling"], [387, 0, 0, "-", "torch"], [390, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[315, 5, 1, "", "df_apply_dependency_augmentation"], [316, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[315, 4, 1, "", "affected"], [315, 4, 1, "", "causing"], [315, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[316, 4, 1, "", "column_groups"], [316, 4, 1, "", "df"]], "baybe.utils.basic": [[318, 1, 1, "", "Dummy"], [319, 8, 1, "", "UNSPECIFIED"], [320, 1, 1, "", "UnspecifiedType"], [321, 1, 1, "", "classproperty"], [322, 5, 1, "", "convert_to_float"], [323, 5, 1, "", "find_subclass"], [324, 5, 1, "", "get_baseclasses"], [325, 5, 1, "", "get_subclasses"], [326, 5, 1, "", "group_duplicate_values"], [327, 5, 1, "", "hilberts_factory"], [328, 5, 1, "", "is_all_instance"], [329, 5, 1, "", "match_attributes"], [330, 5, 1, "", "refers_to"], [331, 5, 1, "", "register_hooks"], [332, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[318, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[321, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[324, 4, 1, "", "abstract"], [324, 4, 1, "", "cls"], [324, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[325, 4, 1, "", "abstract"], [325, 4, 1, "", "cls"], [325, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[326, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[329, 4, 1, "", "callable_"], [329, 4, 1, "", "ignore"], [329, 4, 1, "", "object"], [329, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[331, 4, 1, "", "post_hooks"], [331, 4, 1, "", "pre_hooks"], [331, 4, 1, "", "target"]], "baybe.utils.boolean": [[334, 5, 1, "", "check_if_in"], [335, 5, 1, "", "is_abstract"], [336, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[334, 4, 1, "", "allowed"], [334, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[335, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[336, 4, 1, "", "val"]], "baybe.utils.chemistry": [[338, 5, 1, "", "get_canonical_smiles"], [339, 5, 1, "", "get_fingerprint_class"], [340, 5, 1, "", "name_to_smiles"], [341, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[339, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[340, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[341, 4, 1, "", "encoding"], [341, 4, 1, "", "kwargs_conformer"], [341, 4, 1, "", "kwargs_fingerprint"], [341, 4, 1, "", "prefix"], [341, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[343, 5, 1, "", "fraction_to_float"], [344, 5, 1, "", "nonstring_to_tuple"]], "baybe.utils.conversion.fraction_to_float.params": [[343, 4, 1, "", "value"]], "baybe.utils.dataframe": [[346, 5, 1, "", "add_fake_measurements"], [347, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [348, 5, 1, "", "add_parameter_noise"], [349, 5, 1, "", "arrays_to_dataframes"], [350, 5, 1, "", "create_fake_input"], [351, 5, 1, "", "df_drop_single_value_columns"], [352, 5, 1, "", "df_drop_string_columns"], [353, 5, 1, "", "df_uncorrelated_features"], [354, 5, 1, "", "filter_df"], [355, 5, 1, "", "fuzzy_row_match"], [356, 5, 1, "", "get_transform_objects"], [357, 5, 1, "", "pretty_print_df"], [358, 5, 1, "", "to_tensor"], [359, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[346, 4, 1, "", "bad_intervals"], [346, 4, 1, "", "data"], [346, 4, 1, "", "good_intervals"], [346, 4, 1, "", "good_reference_values"], [346, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[347, 4, 1, "", "df"], [347, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[348, 4, 1, "", "data"], [348, 4, 1, "", "noise_level"], [348, 4, 1, "", "noise_type"], [348, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[349, 4, 1, "", "input_labels"], [349, 4, 1, "", "output_labels"], [349, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[350, 4, 1, "", "**kwargs"], [350, 4, 1, "", "n_rows"], [350, 4, 1, "", "parameters"], [350, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[351, 4, 1, "", "df"], [351, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[352, 4, 1, "", "df"], [352, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[353, 4, 1, "", "df"], [353, 4, 1, "", "exclude_list"], [353, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[354, 4, 1, "", "complement"], [354, 4, 1, "", "df"], [354, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[355, 4, 1, "", "left_df"], [355, 4, 1, "", "parameters"], [355, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[356, 4, 1, "", "allow_extra"], [356, 4, 1, "", "allow_missing"], [356, 4, 1, "", "df"], [356, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[357, 4, 1, "", "df"], [357, 4, 1, "", "max_columns"], [357, 4, 1, "", "max_colwidth"], [357, 4, 1, "", "max_rows"], [357, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[358, 4, 1, "", "*x"]], "baybe.utils.interval": [[361, 7, 1, "", "InfiniteIntervalError"], [362, 1, 1, "", "Interval"], [363, 5, 1, "", "convert_bounds"], [364, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[361, 2, 1, "", "__init__"], [361, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[362, 2, 1, "", "__init__"], [362, 6, 1, "", "center"], [362, 2, 1, "", "contains"], [362, 2, 1, "", "create"], [362, 2, 1, "", "from_dict"], [362, 2, 1, "", "from_json"], [362, 6, 1, "", "is_bounded"], [362, 6, 1, "", "is_degenerate"], [362, 6, 1, "", "is_fully_unbounded"], [362, 6, 1, "", "is_half_bounded"], [362, 6, 1, "", "is_left_bounded"], [362, 6, 1, "", "is_right_bounded"], [362, 3, 1, "", "lower"], [362, 2, 1, "", "to_dict"], [362, 2, 1, "", "to_json"], [362, 2, 1, "", "to_ndarray"], [362, 2, 1, "", "to_tensor"], [362, 2, 1, "", "to_tuple"], [362, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[362, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[362, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[362, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[363, 4, 1, "", "bounds"]], "baybe.utils.memory": [[366, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[366, 4, 1, "", "num"]], "baybe.utils.numerical": [[368, 3, 1, "", "DTypeFloatNumpy"], [369, 3, 1, "", "DTypeFloatONNX"], [370, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [371, 5, 1, "", "closer_element"], [372, 5, 1, "", "closest_element"], [373, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[371, 4, 1, "", "target"], [371, 4, 1, "", "x"], [371, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[372, 4, 1, "", "array"], [372, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[373, 4, 1, "", "arr"], [373, 4, 1, "", "weights"]], "baybe.utils.plotting": [[375, 5, 1, "", "create_example_plots"], [376, 5, 1, "", "indent"], [377, 5, 1, "", "to_string"]], "baybe.utils.plotting.create_example_plots.params": [[375, 4, 1, "", "ax"], [375, 4, 1, "", "base_name"], [375, 4, 1, "", "path"]], "baybe.utils.plotting.to_string.params": [[377, 4, 1, "", "*fields"], [377, 4, 1, "", "header"], [377, 4, 1, "", "single_line"]], "baybe.utils.random": [[379, 5, 1, "", "set_random_seed"], [380, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[379, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[380, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[382, 1, 1, "", "DiscreteSamplingMethod"], [383, 5, 1, "", "farthest_point_sampling"], [384, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[382, 3, 1, "", "FPS"], [382, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[383, 4, 1, "", "initialization"], [383, 4, 1, "", "n_samples"], [383, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[384, 4, 1, "", "df"], [384, 4, 1, "", "method"], [384, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[386, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[386, 2, 1, "", "__init__"], [386, 2, 1, "", "fit"], [386, 3, 1, "", "mapping"], [386, 2, 1, "", "transform"]], "baybe.utils.torch": [[388, 8, 1, "", "DTypeFloatTorch"], [389, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[391, 5, 1, "", "finite_float"], [392, 5, 1, "", "non_inf_float"], [393, 5, 1, "", "non_nan_float"], [394, 5, 1, "", "validate_not_nan"], [395, 5, 1, "", "validate_parameter_input"], [396, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[395, 4, 1, "", "data"], [395, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [395, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[396, 4, 1, "", "data"], [396, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 196, 212, 214, 220, 237, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 327, 358, 362, 397, 400, 407, 411, 414, 415, 418, 419, 421, 422, 423, 424, 425, 427, 432, 436, 437, 438, 441, 442, 443, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458, 459, 460, 462], "0": [8, 13, 21, 30, 33, 43, 44, 50, 105, 144, 152, 155, 175, 183, 184, 185, 196, 220, 243, 245, 252, 254, 256, 261, 265, 279, 281, 283, 285, 305, 306, 307, 315, 316, 336, 347, 348, 353, 354, 369, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 422, 424, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 441, 446, 447, 449, 450, 454, 455, 457, 458, 459, 461, 464], "00": [431, 457], "000": [411, 433], "000324": 422, "0008471270000427467": 414, "001": [43, 347, 450], "005": [399, 400, 401, 403, 404], "008724": 431, "01": [175, 406, 407, 412, 415, 430, 431, 438], "015114": 422, "02": 438, "021": [277, 353], "021607": 431, "022861": 422, "027909": 426, "03213": [277, 353], "037066": 404, "044140": 431, "05": 438, "053246": 430, "053812": 426, "056992": 422, "057": [399, 400, 401, 403, 404, 414], "058666": 422, "06": [220, 289], "062715": 422, "063758": 429, "069244": 422, "072053": 429, "073698": 429, "08": 438, "084955": 422, "085851": 422, "086549": 431, "095788": 426, "09653736976391157": 424, "098814": 429, "0f": 415, "1": [13, 25, 30, 43, 105, 126, 144, 155, 186, 196, 212, 243, 245, 247, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 305, 306, 307, 312, 315, 316, 326, 336, 348, 350, 354, 369, 373, 383, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 422, 424, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 441, 442, 446, 449, 450, 454, 455, 457, 458, 459, 461, 464], "10": [13, 196, 245, 277, 353, 398, 400, 409, 410, 411, 412, 415, 418, 419, 421, 422, 424, 426, 427, 429, 433, 434, 435, 437, 438, 441, 448, 449, 455, 459, 464], "100": [403, 409, 410, 411, 412, 415, 418, 419, 421, 422, 426, 427, 433, 438, 453, 454, 455, 459, 461, 464], "1000": [427, 459], "102": 430, "1024": [149, 443, 455], "1038": [277, 353], "105": [399, 400, 401, 403, 404, 414, 426, 457], "109": 431, "11": [321, 421, 422, 442], "111": 433, "1147": 411, "1148": 411, "1149": 411, "1150": 411, "12": [421, 422, 431, 444, 449, 457], "120": [399, 400, 401, 403, 404, 409, 411, 414, 455], "120000": 430, "122": 433, "126": [409, 411, 412, 442], "1268824": [399, 400, 401], "128": 10, "13": [421, 422, 437, 457], "133632": 426, "1337": [415, 416, 464], "14": [421, 457], "143228": 422, "144": 430, "144114": 429, "14448993259018328": 424, "1454": 443, "147965": 431, "149": 404, "15": [245, 411, 421, 422, 426, 437, 438, 441, 449, 457], "150": [409, 412, 450], "1500": 455, "151": [411, 426], "153": [399, 400, 401, 403, 404, 414], "159": 426, "16": [357, 369, 421, 422], "163600": 422, "167": 426, "17": [421, 422], "171": 403, "173": 426, "176238": 422, "177": 433, "178715": 422, "18": [421, 422, 449], "180": 409, "180015": 422, "185284": 426, "186877": 422, "188": 433, "19": [421, 422, 431], "190342": 422, "192": 411, "199663": 422, "1e": [220, 289], "2": [8, 13, 21, 105, 107, 126, 245, 315, 316, 326, 346, 354, 373, 383, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 415, 416, 418, 419, 421, 422, 424, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 441, 446, 449, 450, 454, 455, 457, 458, 459, 461], "20": [13, 155, 245, 398, 399, 400, 401, 415, 416, 418, 421, 422, 426, 431, 443, 455, 462, 464], "200": [400, 409, 411, 418, 419, 424, 433], "2004": 446, "2007": 462, "2021": 400, "2022": 441, "2025": 441, "208202": 429, "21": [421, 422, 434], "210183": 422, "213444": 429, "215299": 426, "215305": 426, "22": [13, 421, 426, 449], "221": 443, "222": 433, "222043": 426, "225179": 426, "23": [421, 422, 431, 449, 459], "232104": 429, "237": 426, "237518": 429, "24": [410, 421, 457], "241": 455, "249491": 422, "25": [404, 415, 421, 437, 457], "250": 447, "254595": 422, "257": 426, "26": [404, 421, 457], "265": 426, "266": 426, "269": 426, "27": [421, 422, 457], "274656": 431, "275297": 422, "277": 426, "277806": 426, "278": 426, "279": [404, 426], "28": [421, 422], "280": 426, "284357": 403, "29": [421, 426, 441], "296034": 422, "296967": 422, "3": [245, 315, 316, 321, 326, 354, 357, 376, 399, 400, 401, 403, 404, 407, 409, 410, 411, 412, 414, 416, 419, 421, 422, 424, 426, 427, 429, 430, 431, 433, 434, 437, 438, 441, 442, 444, 446, 449, 450, 453, 455, 457, 458, 459, 461, 462], "30": [398, 412, 416, 421, 422, 455], "3078f3": 443, "307903": 426, "31": [421, 426, 434], "314787": 429, "32": [410, 421, 422, 449, 455], "320093": 429, "325096": 431, "325168": 404, "325448": 429, "33": [410, 421, 422, 426], "330059": 422, "34": [410, 449], "343725": 426, "35": [410, 421, 422, 426], "352018": 422, "359528": 426, "359745": 429, "368098": 429, "37": 422, "375713": 422, "376050": 430, "376396": 429, "38": [422, 449], "386246": 422, "388949": 422, "39": [422, 455], "394943": 426, "399144": 422, "3d": 416, "4": [13, 149, 315, 316, 357, 406, 407, 409, 410, 411, 412, 416, 421, 422, 424, 426, 429, 430, 431, 441, 446, 449, 450, 455, 457], "40": [421, 426, 454, 455], "404815": 429, "408452": 422, "40x": 443, "41": 426, "412288": 422, "412849": 429, "42": [424, 427, 449], "424": 403, "426108": 426, "426669": 429, "428867": 426, "429358": 422, "429499": 426, "43": [422, 426], "433524": 426, "438124": 422, "44": 422, "447": 409, "448": 409, "449": 409, "45": [421, 426, 461], "450": 409, "451207": 429, "457218": 429, "466538": 422, "468": 443, "471549": 429, "477466": 429, "487831": 429, "492707": 422, "4x": 443, "5": [105, 155, 315, 316, 399, 401, 406, 409, 410, 411, 412, 415, 418, 419, 421, 422, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 441, 446, 447, 448, 449, 450, 455, 457, 459, 462, 464], "50": [412, 419, 421, 424, 437, 438, 446, 447, 455, 457, 461], "500": [416, 455], "500498": 422, "503432": 431, "5066666666666667": 424, "51": 426, "52": 426, "525085": 429, "525994": 422, "529118": 426, "53": 426, "530849": 422, "5313": 332, "535730": 422, "537709": 429, "54": [422, 426, 441, 449], "540593": 422, "543916": 422, "546928": 429, "549352": 422, "55": [426, 461], "559886": 429, "56": [426, 449, 459], "581292": 422, "59": [433, 441, 449], "590": 400, "599406": 426, "6": [315, 316, 357, 399, 400, 401, 409, 410, 411, 412, 421, 422, 424, 426, 429, 431, 433, 446, 450, 457], "60": [422, 426, 454], "607688": 429, "611951": 422, "62": [424, 449], "631009": 426, "631647": 426, "635825": 429, "635851": 426, "639252": 422, "64": [196, 422], "641872": 422, "65": 424, "659844": 422, "661136": 426, "661725": 422, "66368270ffd51418ec58bd793f2d9b1b": 462, "67": 426, "673933": 422, "686679": 422, "688649": 426, "69": [399, 400, 401], "691570": 403, "699665": 429, "7": [155, 315, 316, 353, 410, 412, 416, 421, 422, 426, 427, 429, 437, 446, 449, 455, 457], "70": [421, 430], "705140": 426, "706667": 430, "71": 455, "717502": 426, "72": 449, "720608": 422, "730442": 430, "734123": 426, "734655": 422, "745": 464, "749551": 422, "75": [421, 422, 430, 457], "752803": 429, "759074": 431, "759797": 429, "760860": 422, "761382": 422, "777093": 422, "778": 433, "788980": 431, "79": 441, "799800": 422, "799970": 429, "7gz": 455, "7hf": 455, "8": [316, 399, 401, 409, 411, 412, 421, 422, 424, 426, 429, 441, 446, 450], "80": [422, 426, 450], "800893": 422, "802894": 429, "803387": 429, "808297": 422, "816228": 429, "816673": 422, "818975": 422, "821198": 422, "826101": 426, "827320": 426, "83": 449, "833349": 431, "835887": 422, "8389": 332, "84": 431, "841257": 429, "8417": 332, "841836": 422, "842291": 429, "844191": 422, "847339": 426, "85": 426, "857": 411, "857237": 422, "861": 412, "862": 412, "863": 412, "864": 412, "87": [433, 449], "878245": 422, "88": [426, 433], "881755": 429, "883534": 426, "885687": 422, "8859": 418, "889": 433, "89": [400, 426, 430, 433], "896633": 426, "8jq": 455, "9": [13, 403, 412, 416, 421, 422, 426, 429, 446, 449, 457, 458], "90": [399, 400, 401, 403, 404, 414, 433, 457], "904776": 426, "909335": 422, "91": 449, "910106": 429, "914104": 422, "918469": 404, "921607": 422, "922411": 422, "936173": 422, "936651": 422, "936911": 422, "944187": 422, "95": 426, "956701": 422, "96": [400, 404], "965105": 426, "967225": 426, "97": 426, "973854": 422, "974504": 422, "985925": 431, "99": 431, "993164": 422, "999": 450, "A": [0, 13, 25, 30, 37, 39, 40, 41, 43, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 72, 76, 78, 79, 80, 83, 86, 88, 93, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 123, 125, 126, 130, 132, 138, 141, 142, 144, 152, 155, 157, 158, 159, 168, 169, 170, 171, 172, 173, 174, 175, 178, 184, 185, 186, 188, 191, 194, 196, 198, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 221, 222, 237, 238, 243, 245, 247, 249, 252, 254, 256, 259, 261, 265, 267, 268, 275, 277, 279, 281, 283, 285, 291, 295, 297, 303, 305, 306, 307, 315, 321, 324, 325, 326, 329, 339, 346, 353, 354, 356, 366, 373, 381, 383, 386, 398, 410, 419, 421, 422, 424, 426, 434, 435, 440, 442, 443, 444, 446, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462], "AND": [53, 411, 446, 450], "AS": [441, 446], "And": 418, "As": [399, 400, 401, 416, 424, 426, 437, 438, 441, 442, 443, 449, 450, 453, 456, 457, 459], "But": 461, "By": [93, 125, 158, 220, 335, 354, 422, 444, 448, 451, 452, 454, 456, 457], "FOR": 446, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 85, 93, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 165, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 243, 249, 252, 254, 256, 257, 259, 261, 265, 268, 275, 277, 279, 281, 283, 285, 295, 297, 303, 308, 331, 355, 359, 362, 375, 386, 399, 400, 401, 403, 404, 410, 414, 415, 416, 421, 422, 424, 426, 431, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464], "If": [6, 13, 15, 30, 37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 93, 97, 120, 125, 126, 130, 132, 134, 157, 158, 163, 164, 184, 185, 188, 196, 212, 214, 220, 226, 227, 243, 245, 247, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 306, 311, 316, 324, 325, 329, 331, 334, 336, 339, 343, 346, 347, 348, 350, 353, 354, 355, 356, 375, 377, 383, 384, 395, 396, 404, 406, 415, 421, 430, 431, 434, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 460, 461, 462, 464], "In": [30, 44, 56, 157, 196, 214, 241, 243, 329, 357, 399, 400, 401, 403, 415, 416, 418, 421, 422, 424, 426, 427, 430, 431, 434, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464], "It": [25, 178, 185, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 241, 260, 281, 346, 399, 403, 404, 410, 419, 421, 424, 426, 431, 433, 434, 435, 437, 448, 449, 450, 451, 455, 456, 457, 459, 464], "Its": [245, 418], "No": [355, 429, 440, 443], "Not": [446, 450], "OF": [441, 446], "OR": [441, 446], "Of": [404, 413, 439, 458], "On": [418, 424], "One": [146, 399, 401, 427, 441], "Or": 451, "Such": [404, 450, 453, 459], "That": [43, 214, 245, 252, 254, 256, 261, 265, 279, 281, 283, 285, 306, 404, 409, 421, 444, 457, 459, 462], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 67, 93, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 165, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 232, 233, 235, 237, 241, 243, 245, 247, 252, 254, 256, 257, 259, 261, 265, 268, 279, 281, 283, 285, 287, 289, 291, 292, 295, 297, 300, 303, 305, 306, 307, 309, 311, 312, 315, 316, 321, 324, 325, 326, 329, 331, 334, 335, 336, 339, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 366, 371, 372, 373, 375, 377, 379, 380, 383, 384, 395, 396, 399, 400, 401, 404, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 426, 430, 431, 435, 437, 438, 440, 442, 443, 444, 446, 449, 450, 451, 453, 454, 455, 456, 457, 460, 461, 463, 464], "Then": 416, "There": [82, 289, 369, 421, 429, 441, 442, 444, 448, 452, 457, 460], "These": [309, 397, 400, 401, 402, 405, 408, 413, 417, 420, 423, 425, 428, 432, 436, 441, 444, 448, 450, 451, 455, 457], "To": [399, 404, 415, 416, 422, 424, 427, 433, 437, 438, 441, 442, 444, 448, 449, 450, 451, 452, 454, 455, 459, 460], "Will": 447, "With": [346, 415, 416, 421, 424, 427, 437, 438, 441, 448, 450, 455, 458], "_": [134, 163, 164, 217, 223, 230, 375, 406, 415, 438], "__": 134, "__class__": [414, 424], "__excepthook__": 442, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 252, 254, 256, 257, 259, 261, 265, 267, 268, 275, 277, 279, 281, 283, 285, 295, 297, 303, 318, 321, 361, 362, 386, 457, 458], "__name__": [414, 424], "__new__": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 146, 147, 149, 361], "__str__": 443, "__version__": 443, "_amount": 421, "_arraylik": 349, "_c": 325, "_cumbest": 243, "_default_my_attribut": 444, "_discretelabellikeparamet": [141, 144, 155], "_fit": 292, "_has_switch": 186, "_iterbest": 243, "_label": 421, "_measur": 243, "_n_last_measur": [183, 184, 185], "_nbase": 341, "_nestedsequ": [13, 126, 159, 305, 306, 307, 372], "_no_tl": 437, "_option": 443, "_posterior": 292, "_step": [183, 184, 185], "_supportsarrai": [13, 126, 159, 305, 306, 307, 372], "_surrogate_model": [415, 416], "_surrogategett": 259, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 212, 214, 220, 225, 233, 234, 237, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 326, 327, 328, 344, 356, 362], "_target": 443, "_tparamet": 158, "_tsurrog": 288, "_u": 326, "_validate_my_attribut": 444, "_was_us": [183, 184, 185], "a1": 316, "a2": 316, "ab": [412, 421], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 323, 330, 443, 463], "abc": [23, 33, 34, 35, 36, 37, 39, 100, 101, 102, 120, 138, 139, 167, 181, 191, 194, 201, 206, 254, 256, 295, 335], "abil": [447, 452, 462], "abl": [416, 442, 448, 450, 455, 458, 464], "about": [8, 25, 30, 139, 155, 295, 312, 399, 400, 401, 421, 430, 431, 441, 443, 444, 449, 453, 455, 457, 460], "abov": [289, 307, 335, 353, 398, 404, 411, 412, 414, 415, 422, 429, 441, 444, 446, 447, 448, 449, 450, 451, 452, 455, 458, 459, 460, 462], "absenc": 454, "absolut": [43, 152, 348, 441], "abstract": [23, 33, 34, 35, 36, 37, 39, 100, 101, 102, 120, 137, 138, 139, 167, 181, 191, 194, 201, 256, 295, 324, 325, 335, 443, 450, 462], "abstractli": 424, "acceler": [441, 443, 445, 462], "accept": [30, 184, 252, 254, 256, 261, 265, 279, 281, 283, 285, 349, 415, 416, 443, 446, 451, 454, 455, 459, 461], "access": [212, 220, 252, 254, 256, 261, 265, 279, 281, 283, 285, 399, 400, 401, 409, 414, 438, 443, 450, 455, 458], "accord": [43, 179, 422, 447, 450, 451, 456, 464], "accordingli": [196, 449, 452, 454, 458], "account": 448, "accumul": [169, 424, 462], "accur": 449, "acet": [399, 400, 401, 403, 404], "aceton": 421, "achiev": [20, 220, 416, 421, 424, 427, 441, 444, 447, 449, 450, 452, 460], "ack": 441, "acq_funct": 404, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 415, 416, 424], "acqf1": 458, "acqf2": 458, "acqf_valu": 415, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 69, 79, 194, 196, 409, 410, 411, 412, 415, 416, 424, 426, 433, 441, 443, 447, 454, 456, 458, 460], "acquisition_funct": [194, 196, 404, 424, 434, 435, 443], "acquisition_function_cl": [194, 196, 443], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 194, 196, 424, 443, 458], "across": [421, 424, 437, 448, 456, 462], "act": [421, 443, 446, 450, 459], "action": [20, 414, 424, 440, 443, 463], "activ": [15, 33, 157, 186, 196, 415, 416, 424, 441, 442, 443, 444, 450, 451, 452, 453, 456, 462, 463, 464], "activate_paramet": 443, "active_dim": [100, 101, 102, 105, 107, 109, 110, 111], "active_valu": [138, 141, 142, 144, 152, 155, 437, 438, 443, 452, 455, 462], "actual": [184, 214, 241, 430, 443, 453, 457, 459, 462, 464], "ad": [30, 220, 311, 315, 346, 383, 421, 422, 440, 444, 447, 451, 452, 460, 461, 463], "adapt": [185, 277, 336, 353], "add": [30, 235, 245, 346, 347, 404, 418, 419, 421, 426, 437, 441, 446, 448, 449, 450, 453, 457, 462, 464], "add_collection3d": 416, "add_fake_measur": [350, 403, 404, 409, 410, 411, 412, 418, 419, 426, 443, 448, 459, 464], "add_fake_result": 443, "add_measur": [30, 350, 403, 404, 406, 407, 409, 410, 411, 412, 416, 418, 419, 424, 426, 427, 430, 431, 441, 443, 448, 449, 451, 452], "add_noise_to_perturb_degenerate_row": 443, "add_parameter_nois": [350, 443, 464], "add_subplot": 416, "addendum": 446, "addit": [30, 93, 120, 125, 130, 132, 184, 196, 214, 235, 243, 245, 247, 348, 350, 399, 400, 401, 422, 430, 438, 441, 443, 445, 446, 449, 450, 451, 453, 454, 455, 457, 458, 459, 462, 464], "addition": [414, 422, 441, 453], "additiveexplain": [91, 94], "additivekernel": 443, "address": 459, "adher": [443, 444], "adjust": [157, 185, 400, 404, 430, 443, 452, 454], "adopt": 404, "adrian": [441, 445], "advanc": [185, 424, 442, 443, 451, 454, 458, 462, 463], "advantag": [421, 444], "advic": 444, "advis": [446, 459], "affect": [30, 52, 62, 64, 196, 212, 315, 414, 433, 440, 442, 450], "affected_paramet": [52, 409, 410, 411, 412, 421, 450], "affili": [441, 451], "afford": 449, "aforement": [214, 451], "after": [186, 331, 403, 404, 409, 410, 411, 412, 416, 426, 433, 441, 449, 453, 454, 455, 458], "afterward": 458, "again": [415, 448, 449, 450, 462], "against": [87, 311, 329, 421, 446, 452, 462], "agent": 422, "aggreg": 454, "agraw": 445, "agre": [441, 446, 453], "agreement": 446, "ai": [98, 165, 369], "aim": [449, 453], "akin": 448, "al": [400, 441, 455], "aldrich": 445, "alex": 445, "alexand": [441, 445], "algorithm": [189, 196, 346, 381, 383, 398, 421, 426, 441, 443, 448, 453, 456], "alia": [154, 198, 255, 455], "alias": 443, "align": [157, 212, 331, 415, 457, 462], "all": [22, 23, 32, 34, 39, 43, 52, 54, 60, 62, 93, 99, 100, 101, 102, 119, 120, 125, 136, 139, 144, 148, 155, 166, 167, 177, 180, 181, 184, 190, 191, 193, 196, 200, 201, 212, 214, 221, 222, 245, 252, 253, 256, 294, 295, 315, 328, 329, 346, 399, 400, 401, 404, 406, 407, 409, 410, 414, 415, 416, 421, 422, 424, 426, 429, 430, 437, 438, 441, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464], "allclos": [406, 407, 422], "alleg": 446, "allow": [20, 30, 33, 43, 50, 54, 120, 125, 130, 132, 152, 158, 185, 214, 220, 247, 312, 334, 355, 356, 395, 396, 399, 400, 401, 404, 421, 422, 437, 438, 441, 443, 447, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460, 461, 464], "allow_": [443, 452], "allow_extra": [120, 125, 130, 132, 212, 214, 220, 225, 356, 359, 426, 443], "allow_miss": [120, 125, 130, 132, 212, 214, 220, 225, 356, 359, 443], "allow_recommending_already_measur": [30, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 424, 434, 435, 440, 443, 449], "allow_recommending_already_recommend": [30, 424, 434, 435, 440, 443, 449], "allow_recommending_pending_experi": [30, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 443, 449], "allow_repeated_recommend": [188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 443], "almost": 400, "alon": [443, 446], "along": [373, 446, 455, 462], "alongsid": 446, "alpha": [169, 416, 427], "alphabet": [160, 443], "alreadi": [30, 220, 252, 254, 256, 261, 265, 279, 281, 283, 285, 421, 431, 441, 443, 447, 448, 449, 452, 457, 459, 460, 462, 464], "also": [30, 43, 56, 93, 158, 252, 254, 256, 261, 265, 279, 281, 283, 285, 312, 329, 331, 346, 347, 348, 399, 406, 407, 415, 416, 418, 419, 421, 426, 427, 430, 431, 433, 437, 438, 441, 443, 444, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464], "alter": [421, 443, 449, 452], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 289, 373, 414, 421, 422, 429, 441, 443, 452, 460, 463, 464], "although": [421, 431, 434, 457, 459], "alwai": [15, 30, 39, 230, 231, 418, 421, 422, 441, 447, 449, 450, 459, 460, 462, 464], "ambigu": [152, 319, 320, 457], "amend": 450, "among": [33, 421, 441, 454, 462], "amount": [316, 376, 384, 422, 437, 438, 448, 453, 455, 464], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 71, 73, 74, 75, 79, 84, 87, 88, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 121, 123, 125, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 233, 235, 237, 241, 243, 245, 247, 252, 254, 256, 259, 261, 262, 265, 268, 279, 281, 283, 285, 287, 288, 295, 297, 303, 315, 319, 320, 327, 329, 331, 334, 340, 344, 353, 354, 355, 357, 361, 362, 363, 372, 375, 377, 383, 384, 399, 401, 402, 404, 411, 412, 414, 415, 418, 419, 422, 426, 429, 433, 434, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462], "analog": [214, 346, 450, 457, 458], "analogi": [179, 456], "analysi": [441, 453, 460], "analyt": [3, 4, 7, 8, 79, 459, 462], "analyz": [441, 444, 453], "angl": 416, "ani": [13, 63, 64, 93, 126, 137, 138, 139, 141, 142, 144, 155, 158, 159, 162, 163, 164, 230, 231, 235, 239, 240, 247, 279, 283, 285, 305, 306, 307, 312, 315, 328, 329, 331, 332, 334, 335, 350, 355, 362, 364, 372, 377, 391, 392, 393, 394, 396, 414, 421, 437, 438, 440, 441, 442, 443, 444, 446, 449, 451, 452, 455, 458, 459, 462], "annot": [331, 414, 446], "anonym": [441, 451], "anoth": [52, 363, 400, 410, 411, 418, 419, 421, 431, 444, 450, 462], "ansatz": 443, "answer": 449, "anti": 354, "anymor": [443, 462], "anyth": 336, "anywai": 460, "anywher": 406, "apach": [441, 446], "apart": [444, 449], "api": [441, 442, 458], "aplei": 453, "appar": 458, "appdata": 442, "appear": [329, 442, 443, 446, 458], "append": [416, 438], "appendix": 446, "appli": [30, 39, 40, 41, 56, 196, 214, 241, 243, 252, 254, 256, 261, 265, 279, 281, 283, 285, 329, 340, 348, 350, 386, 404, 405, 408, 409, 411, 412, 414, 415, 421, 437, 442, 443, 446, 450, 453, 454, 456, 457, 458, 459, 460, 461, 462], "applic": [377, 441, 444, 446, 455, 456, 459], "approach": [220, 415, 424, 441, 444, 447, 449, 452, 454, 456, 458, 460, 462], "appropri": [46, 47, 117, 220, 424, 444, 446, 452, 457], "approxim": [10, 20, 450, 453], "ar": [6, 12, 13, 14, 16, 30, 33, 37, 39, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 68, 77, 80, 81, 82, 93, 120, 125, 126, 130, 132, 138, 141, 142, 144, 152, 155, 157, 158, 159, 164, 178, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 243, 245, 247, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 307, 309, 311, 312, 315, 316, 324, 325, 326, 328, 329, 331, 335, 336, 346, 347, 349, 350, 351, 355, 356, 375, 383, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 414, 415, 416, 419, 421, 422, 424, 426, 429, 430, 433, 434, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464], "arang": [406, 416, 455], "arbitrari": [185, 214, 364, 443, 450, 455, 456, 459, 462, 464], "arbitrarili": [454, 458], "architectur": [252, 254, 256, 261, 265, 279, 281, 283, 285, 292, 443, 460, 462], "ard_num_dim": [100, 101, 102, 105, 107, 109, 110, 111], "area": 416, "arg": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 104, 106, 108, 113, 114, 115, 167, 169, 170, 171, 172, 173, 174, 175, 178, 198, 257, 262, 267, 361, 444], "argu": 421, "argument": [70, 88, 93, 98, 155, 158, 165, 181, 183, 184, 185, 186, 212, 220, 257, 259, 331, 350, 354, 404, 419, 426, 443, 450, 453, 455, 456, 457, 458, 459, 462], "aris": [55, 421, 443, 446, 450, 458, 464], "arithmet": [128, 454], "arizona": 445, "arm": [251, 252, 439, 445], "arm_index": 424, "around": [13, 43, 205, 247, 249, 426, 443, 456, 458, 464], "arr": [305, 306, 307, 373, 427], "arrai": [13, 126, 159, 305, 306, 307, 318, 349, 358, 368, 372, 373, 383, 416, 443, 456, 460], "arrays_to_datafram": [406, 407, 416, 427, 430, 431, 437, 438, 443, 459], "arriv": [441, 452], "artifici": 464, "aryl": [399, 400, 401, 403, 441, 455], "ascend": 426, "ask": [421, 441, 443, 444, 449, 452], "aspect": [402, 406, 407, 431, 448, 451], "assembl": [421, 458, 460], "assembli": [460, 463], "assert": [64, 134, 355, 409, 410, 411, 412, 418, 419, 421, 422, 429, 433, 443, 446, 449, 450, 458, 460], "assess": 459, "assign": [346, 415, 422, 429, 455], "associ": [214, 424, 446, 449, 451, 454, 462], "assum": [25, 44, 260, 331, 355, 356, 399, 400, 401, 404, 406, 407, 409, 410, 411, 412, 418, 419, 421, 424, 426, 430, 431, 433, 441, 446, 450, 452, 455, 458, 460, 461, 464], "assumpt": 459, "assur": 450, "asymmetr": 43, "asynchron": [441, 449, 463], "atol": [406, 407], "atompair": 149, "atompairfingerprint": 149, "attach": [25, 331, 414, 415, 416, 446], "attempt": [78, 84, 260, 375, 424, 442, 443, 448, 450, 453, 456], "attent": 186, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 85, 93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 252, 254, 256, 259, 261, 265, 268, 275, 277, 279, 281, 283, 285, 295, 297, 303, 329, 332, 362, 386, 394, 443], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 85, 87, 90, 93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 149, 151, 152, 153, 155, 158, 162, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 215, 219, 220, 229, 233, 235, 252, 253, 254, 256, 259, 261, 265, 268, 272, 275, 277, 279, 281, 283, 285, 292, 295, 296, 297, 300, 301, 303, 317, 320, 329, 344, 356, 362, 367, 382, 386, 387, 390, 391, 392, 393, 394, 429, 443, 444, 446, 450, 456, 458, 460, 461], "audit": [441, 443, 444], "augment": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 214, 287, 288, 289, 443, 449], "author": 446, "authorship": 446, "auto": [12, 13, 14, 16, 443, 445], "auto_tutori": 369, "autocorr": 149, "autocorrfingerprint": 149, "autodoc": 443, "automat": [30, 123, 196, 265, 398, 416, 430, 442, 443, 444, 453, 454, 456, 457, 460, 462, 463], "avail": [2, 128, 144, 146, 147, 149, 155, 184, 185, 243, 245, 272, 300, 301, 312, 382, 383, 384, 401, 403, 406, 407, 421, 426, 430, 431, 441, 442, 443, 444, 446, 448, 449, 451, 453, 455, 456, 457, 458, 459, 462, 463], "available_acq_funct": 404, "avalon": 149, "avalonfingerprint": 149, "averag": [281, 415, 416, 438, 455, 459], "avoid": [214, 332, 373, 443, 444, 448, 449, 455, 457], "awai": [13, 157, 461], "awar": [421, 437, 438, 443, 447, 452, 458], "ax": [93, 375, 398, 400, 415, 416, 427, 437, 438], "axes3d": [375, 416], "axi": [212, 243, 373, 398, 406, 407, 412, 415, 416, 421, 422, 424, 426, 427, 430, 431, 437, 438, 457], "azim": 416, "azur": 443, "b": [43, 55, 175, 277, 315, 326, 353, 354, 400, 410, 419, 424, 434, 435, 440, 441, 444, 446, 449, 452, 455, 458], "b1": 316, "b2": 316, "back": [0, 433, 440, 443, 444, 452], "backend": 312, "background": [93, 97, 443, 453], "background_data": 93, "backport": 442, "backtest": [241, 242, 248, 399, 400, 401, 415, 436, 439, 441, 443, 456, 459], "backtick": 444, "backward": [116, 122, 197, 198, 214, 443], "bad": [426, 449, 451, 461], "bad_interv": 346, "badg": 443, "bai": 441, "baird": 445, "balanc": [125, 424, 441], "banana": 444, "bandit": [252, 404, 439, 441, 443, 445], "banner": 443, "bar": [93, 95, 418, 419, 421, 433, 434, 435, 441, 443, 453, 460], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 182, 183, 184, 185, 186, 188, 191, 194, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 215, 219, 220, 233, 235, 237, 252, 254, 256, 257, 259, 260, 261, 265, 267, 268, 272, 275, 277, 279, 281, 283, 285, 289, 291, 295, 297, 300, 301, 303, 318, 320, 321, 323, 324, 325, 349, 354, 362, 375, 382, 383, 386, 398, 403, 404, 415, 416, 418, 420, 424, 439, 441, 443, 446, 447, 449, 450, 451, 453, 455, 456, 457, 458, 460], "base1": 422, "base2": 422, "base_data": 415, "base_kernel": [113, 114, 115], "base_nam": [375, 398, 400, 415, 416, 437, 438], "base_predictor": 287, "base_smil": 415, "basefingerprinttransform": 339, "baselin": [398, 400, 437, 441, 455], "basesequentialmetarecommend": [184, 185], "bashrc": 451, "basi": [109, 441, 446, 453], "basic": [100, 104, 105, 106, 107, 108, 109, 110, 111, 169, 170, 171, 172, 173, 174, 175, 243, 318, 320, 321, 399, 400, 401, 404, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 426, 430, 431, 432, 433, 436, 439, 443, 444, 452, 454, 455, 459, 463], "basic_transfer_learn": 438, "basickernel": [104, 105, 106, 107, 108, 109, 110, 111, 443], "batch": [30, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 246, 287, 288, 404, 409, 410, 411, 412, 416, 426, 430, 431, 433, 437, 438, 443, 448, 452, 456, 459], "batch_quant": 443, "batch_shap": [100, 101, 102, 105, 107, 109, 110, 111], "batch_siz": [30, 43, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 243, 247, 249, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 414, 415, 416, 418, 419, 422, 424, 426, 427, 430, 431, 433, 434, 437, 438, 441, 443, 448, 449, 451, 452, 459], "batchnr": 426, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 215, 219, 220, 237, 252, 254, 256, 257, 259, 261, 265, 267, 268, 272, 275, 277, 279, 281, 283, 285, 295, 297, 300, 301, 303, 318, 320, 321, 362, 382, 386, 397, 398, 399, 400, 401, 402, 404, 406, 407, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464], "baybe_cach": 451, "baybe_cache_dir": [443, 451], "baybe_deactivate_polar": [443, 451], "baybe_debug_fake_hosthash": 443, "baybe_debug_fake_userhash": 443, "baybe_numpy_use_single_precis": [370, 443, 451], "baybe_telemetry_en": [441, 451], "baybe_telemetry_endpoint": [443, 451], "baybe_telemetry_host": 443, "baybe_telemetry_hostnam": [443, 451], "baybe_telemetry_usernam": [443, 451], "baybe_telemetry_vpn_check": [443, 451], "baybe_telemetry_vpn_check_timeout": [443, 451], "baybe_torch_use_single_precis": [389, 443, 451], "bayesian": [0, 188, 194, 196, 241, 243, 247, 249, 260, 279, 424, 443, 447, 449, 453, 460, 463], "bayesian_recommend": 416, "bayesianlinearmodel": 419, "bayesianlinearsurrog": [404, 460], "bayesianrecommend": [188, 196, 260, 443, 456], "bayesianridg": 418, "bcut2d": [149, 443], "bcut2dfingerprint": 149, "bcw07": 462, "becaus": [43, 82, 152, 157, 214, 220, 249, 335, 414, 415, 421, 438, 444, 447, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 462], "becom": [214, 421, 443, 447, 449, 450, 458, 461, 464], "been": [25, 78, 79, 184, 252, 254, 256, 261, 265, 279, 281, 283, 285, 355, 399, 400, 441, 442, 443, 446, 448, 449, 454, 456, 462], "beeswarm": [93, 95, 453], "befor": [78, 186, 243, 252, 254, 256, 261, 265, 279, 281, 283, 285, 331, 398, 401, 404, 410, 415, 441, 443, 444, 451, 452, 455, 457], "begin": [184, 409, 411, 429, 433, 456, 460], "behalf": 446, "behav": [416, 433, 458], "behavior": [157, 196, 441, 443, 451, 454, 456, 457, 462], "behind": [454, 458, 459, 460, 461], "being": [13, 115, 346, 375, 424, 442, 443, 450, 451, 455, 457], "bell": [301, 305, 426, 461], "belong": [414, 458], "below": [186, 289, 307, 411, 414, 415, 421, 444, 446, 447, 449, 450, 454, 458, 460, 461, 462], "benchmark": [441, 443, 445], "benefici": [446, 447, 451], "benefit": [450, 462], "benzo": 462, "bernoulli": [252, 423, 439, 445], "besid": [441, 454, 461], "best": [12, 13, 14, 16, 243, 245, 247, 401, 424, 441, 451, 456], "bet": 449, "beta": [8, 21, 169, 252, 404, 443, 447], "betabernoullimultiarmedbanditsurrog": [404, 424, 443], "betaprior": [252, 443], "better": [10, 346, 400, 443, 449, 450, 452, 454, 455], "between": [13, 33, 52, 152, 185, 212, 220, 275, 354, 414, 416, 421, 424, 426, 427, 431, 437, 438, 441, 443, 444, 448, 449, 450, 451, 454, 455, 456, 457, 458, 461, 462], "beyond": [157, 441, 453], "bias": 455, "bin": 421, "binar": 443, "binari": [297, 396, 433, 441, 442, 443, 458], "binarytarget": [298, 424, 443], "bind": [414, 416, 446], "bit": [443, 455], "black": [241, 459, 462], "blackbox": [397, 398, 439], "blank": 444, "blob": 277, "block": [415, 421, 441, 442, 443, 451, 458], "blue": 427, "bodi": 414, "bonilla": 462, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 93, 96, 97, 120, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 225, 252, 254, 256, 261, 265, 279, 281, 283, 285, 297, 298, 305, 306, 307, 310, 324, 325, 329, 330, 335, 336, 349, 354, 356, 359, 362, 372, 377, 395, 424], "boolean": [13, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 93, 97, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 181, 183, 184, 185, 186, 356, 449, 451], "boost": [283, 438], "both": [10, 13, 157, 158, 214, 220, 249, 307, 331, 398, 410, 415, 418, 421, 422, 424, 426, 427, 437, 438, 441, 443, 444, 447, 450, 453, 455, 457, 458, 460, 461, 464], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 44, 188, 196, 198, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 406, 407, 416, 431, 437, 438, 443, 451, 456], "botorch_acqf": [25, 415, 416], "botorch_function_wrapp": 443, "botorchrecommend": [188, 198, 404, 409, 410, 411, 412, 415, 416, 418, 419, 424, 426, 431, 433, 434, 435, 441, 443, 448, 449, 450, 452, 456], "bottom": 449, "bound": [8, 21, 33, 43, 151, 157, 158, 175, 212, 214, 220, 225, 288, 303, 304, 325, 331, 356, 362, 363, 398, 404, 406, 407, 416, 422, 426, 427, 429, 430, 431, 437, 438, 443, 455, 458, 461, 463, 464], "boundari": [43, 220, 305, 306, 426], "boundary_onli": [220, 421], "bounded": 443, "bounds_transform_func": 443, "box": [175, 241, 459, 462], "brain": [459, 462], "branch": [441, 444], "break": [260, 458], "brettpho": [399, 400, 401, 403, 404], "briefli": [459, 462], "bring": [441, 443], "bro": 277, "broad": 458, "broadcast": 159, "brute": [196, 456], "bu": [399, 400, 401, 403, 404], "bucket": 421, "budget": 449, "bug": [443, 444], "build": [212, 220, 260, 415, 421, 442, 443, 444, 450, 453, 458, 460, 462, 463, 464], "built": [220, 418, 441, 444, 449, 456, 460], "builtin": 321, "bump": 443, "button": 443, "butyl": [399, 400, 401, 403, 404], "butylphenylphosphin": [399, 400, 401, 403, 404], "butyornitril": [399, 400, 401, 403, 404], "bypass": [158, 415, 460], "byte": [13, 126, 159, 219, 261, 305, 306, 307, 366, 372, 443, 464], "c": [55, 315, 326, 399, 400, 401, 403, 404, 409, 410, 411, 412, 419, 421, 434, 435, 441, 442, 446, 449, 452, 455, 457, 458], "c1": [399, 400, 401, 403, 404, 409, 410, 411, 412, 455], "c1c2": [399, 400, 401, 403, 404], "c1ccccc1": [399, 400, 401, 409, 411], "c1ccoc1": 450, "c2": [399, 400, 401, 403, 404, 409, 411, 412], "c2ccccc2": [399, 400, 401], "c2oc": [399, 400, 401, 403, 404], "c2p": [399, 400, 401, 403, 404], "c3": [399, 400, 401, 403, 404, 409, 411], "c3c": [399, 400, 401], "c3ccccc3": [399, 400, 401, 403, 404], "c4": [399, 400, 401, 409, 411], "c4ccccc4": [399, 400, 401, 403, 404], "c5": [409, 411], "c6": [409, 411], "c_": 427, "c_g2_min": 422, "c_g3_max": 422, "c_i": 450, "c_total_sum": 422, "cach": [311, 443, 458, 463], "cached_recommend": 311, "calcul": [30, 311, 373, 406, 416, 437, 449, 451, 455, 457], "calibr": 462, "call": [44, 88, 181, 183, 184, 185, 186, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 311, 312, 331, 349, 399, 400, 401, 414, 419, 421, 422, 434, 435, 441, 442, 443, 447, 449, 450, 451, 455, 458, 459, 460, 462, 463], "callabl": [51, 70, 87, 158, 233, 241, 243, 245, 247, 249, 287, 288, 291, 292, 321, 327, 329, 331, 349, 398, 414, 427, 443, 463], "callable_": 329, "campaign": [93, 243, 246, 247, 249, 346, 348, 350, 402, 403, 411, 413, 416, 424, 435, 437, 438, 439, 440, 441, 443, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464], "campaign1": 459, "campaign2": 459, "campaign_json": 449, "campaign_oh": 400, "campaign_par": 427, "campaign_rand": [399, 400, 401], "campaign_recr": 433, "campaign_stop": 415, "campaign_with_hook": 415, "campaign_y0": 427, "campaign_y1": 427, "campaignstoppedexcept": 415, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 39, 40, 41, 55, 93, 138, 144, 152, 155, 159, 178, 185, 188, 189, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 241, 245, 252, 254, 256, 257, 259, 260, 261, 265, 279, 281, 283, 285, 289, 298, 310, 312, 329, 331, 335, 346, 348, 349, 369, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 414, 415, 416, 418, 419, 421, 422, 424, 426, 427, 429, 430, 431, 434, 437, 438, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464], "canada": 445, "candid": [12, 13, 14, 16, 30, 206, 208, 212, 220, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 415, 438, 443, 447, 456, 457, 463], "candidates_comp_rep": 415, "cannot": [15, 86, 87, 157, 260, 261, 289, 336, 375, 424, 443, 446, 448, 450, 451, 455, 456, 458, 460, 462], "canon": [338, 458], "capabl": [397, 423, 425, 432, 436, 438, 443, 445, 449, 454, 460, 462], "captur": 455, "cardin": [33, 43, 50, 60, 62, 63, 64, 77, 196, 212, 441, 443, 445, 450], "cardinalityconstraint": [43, 50, 443], "care": [48, 421, 444, 450, 453, 454, 460], "carefulli": 451, "carlo": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 79, 247, 398, 400, 401, 415, 424, 437, 438, 443, 448, 459], "carri": [331, 414, 446, 454], "cartesian": [214, 220, 221, 222, 441, 443, 452, 457], "case": [157, 185, 249, 289, 331, 346, 357, 415, 420, 421, 430, 431, 434, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 455, 458, 459, 460, 461, 462, 464], "cast": [44, 443], "cat": 354, "cat_1": 426, "cat_1_22": 426, "cat_1_33": 426, "cat_2": 426, "catch_constant_target": 443, "categor": [30, 141, 142, 146, 220, 227, 355, 441, 443, 455, 457, 461], "categori": [400, 415, 441, 443, 458, 461], "categorical_1": [426, 449], "categorical_2": [426, 449], "categorical_paramet": 458, "categorical_parameter_json": 458, "categorical_parameter_reconstruct": 458, "categoricalencod": [141, 142, 409, 410, 411, 412, 426, 433], "categoricalparamet": [142, 220, 400, 409, 410, 411, 412, 419, 424, 426, 433, 434, 435, 441, 443, 452, 453, 457, 458, 463], "cattr": [232, 233, 235, 435, 442, 443, 444], "cauchi": 171, "caus": [152, 315, 321, 443, 446], "caution": 462, "cc": [399, 400, 401, 403, 404, 409, 411, 412, 421, 455, 462], "cc1": [399, 400, 401, 403, 404, 455], "ccc": [409, 411, 419, 441], "cccc": [399, 400, 401, 403, 404, 409, 411], "ccccc": [409, 411, 434, 435], "cccccc": [409, 411], "cccccccco": [450, 455], "ccccoc": [399, 400, 401, 403, 404], "cco": 421, "ccoccoccn": [434, 435], "cdot": [450, 454], "ceil": 415, "cell": [418, 455, 459, 462], "cell_lin": 462, "center": [305, 307, 362, 426, 427, 449], "center_y0": 427, "center_y1": 427, "central": [443, 449], "certain": [30, 52, 87, 186, 233, 235, 241, 312, 328, 346, 376, 410, 415, 424, 441, 444, 450, 452, 453, 456, 458, 462, 464], "cesium": [399, 400, 401, 403, 404], "ch": 376, "chai": 462, "chain": [37, 181, 183, 184, 185, 186, 321, 450], "challeng": [444, 458], "chanc": 442, "chang": [52, 184, 346, 347, 348, 404, 421, 430, 441, 442, 444, 446, 449, 451, 453, 455, 457, 462], "charact": 446, "characterist": 321, "charg": 446, "chebyshev": 12, "check": [30, 60, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 311, 328, 330, 333, 334, 335, 336, 355, 362, 371, 430, 431, 433, 441, 443, 444, 451, 453, 457, 458], "check_maximum": 60, "check_minimum": 60, "checker": 443, "checkout": 444, "chem": [441, 443, 455], "chemic": [340, 400, 403, 421, 443, 445, 450, 453, 455, 462], "cheminformat": [155, 441, 443], "chemistri": [144, 409, 411, 412], "child": [203, 204, 205, 206, 444], "chocol": 444, "choic": [243, 245, 383, 414, 421, 424, 431, 443, 450, 452, 454, 455, 456, 457, 458, 461], "choos": [179, 421, 422, 424, 426, 429, 430, 431, 440, 441, 446, 447, 449, 456, 460, 461], "chose": [430, 458], "chosen": [75, 188, 243, 245, 249, 379, 380, 404, 424, 443, 447, 450, 455, 457], "christoph": 462, "ci": [407, 437, 438, 443, 444], "circular": 455, "circumv": [442, 458], "cl": [48, 123, 230, 234, 289, 324, 325, 330, 335, 364], "claim": 446, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 85, 86, 90, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 124, 125, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 219, 220, 233, 235, 236, 237, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 291, 292, 294, 295, 296, 297, 299, 300, 301, 302, 303, 317, 318, 320, 321, 323, 324, 325, 330, 335, 339, 360, 362, 377, 381, 382, 385, 386, 404, 414, 415, 418, 424, 434, 443, 449, 450, 453, 454, 455, 456, 457, 458, 460], "classic": [424, 454], "classifi": 455, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 212, 214, 220, 237, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 321, 362, 443], "classvalidationerror": [435, 442], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 252, 254, 256, 261, 265, 279, 281, 283, 285], "clean": [351, 352, 353, 442, 443, 444], "clear": [369, 462], "click": [424, 455], "clone": 444, "close": [243, 249, 300, 398, 415, 437, 438, 459], "closer": [13, 371, 455], "closest": 372, "closest_el": 443, "closur": [241, 459], "cluster": [203, 204, 205, 206, 404, 443, 445, 463], "clustering_x": 443, "cmap": 416, "cn": [399, 400, 401, 403, 404], "co": 421, "co1": [399, 400, 401], "co2": [399, 400, 401], "co3": [399, 400, 401], "coars": [419, 433, 434, 435, 441], "coc": [419, 434, 435, 441], "cococ": [434, 435], "code": [260, 400, 419, 424, 430, 434, 435, 441, 442, 443, 446, 450, 451, 455, 459, 462, 464], "coeffici": [44, 46, 47, 406, 407, 422, 450], "coerc": 443, "collect": [30, 62, 63, 64, 103, 113, 114, 134, 158, 160, 168, 184, 186, 212, 220, 226, 227, 238, 245, 259, 313, 315, 317, 328, 329, 356, 381, 383, 398, 404, 416, 421, 424, 427, 437, 438, 441, 443, 449, 451], "color": [416, 427], "column": [39, 40, 41, 93, 120, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 243, 245, 247, 249, 315, 316, 347, 349, 351, 352, 353, 354, 355, 356, 357, 359, 386, 395, 396, 400, 403, 409, 410, 411, 412, 415, 421, 426, 427, 433, 437, 438, 443, 449, 457, 458, 459], "column_group": 316, "com": [277, 332, 353, 441, 443], "comb": 421, "combin": [43, 53, 158, 196, 212, 214, 220, 221, 222, 321, 340, 399, 400, 401, 409, 411, 414, 415, 421, 426, 441, 442, 446, 450, 452, 453, 454, 455, 456, 457, 459, 462, 464], "combinatori": [196, 464], "combine_func": 117, "come": [13, 424, 441, 449, 450, 453, 458, 462, 464], "command": 442, "comment": 443, "commerci": 446, "commit": [441, 443, 444], "common": [168, 418, 422, 443, 444, 446, 449, 450, 455, 458], "commonli": 454, "commun": [446, 454, 462], "comp_df": [138, 141, 142, 144, 152, 155, 443], "comp_rep": [220, 416, 418, 443, 457], "comp_rep_bound": [212, 214, 220, 443], "comp_rep_byt": [219, 464], "comp_rep_column": [137, 138, 139, 141, 142, 144, 151, 152, 155, 212, 214, 220, 443], "comp_rep_human_read": [219, 464], "comp_rep_shap": [219, 464], "comp_rep_tensor": [415, 416], "compar": [158, 184, 398, 421, 422, 424, 427, 437, 441, 443, 444, 450, 452, 455, 461], "comparison": [415, 427, 437, 438, 456, 458], "compat": [116, 122, 134, 158, 188, 191, 194, 196, 197, 198, 201, 203, 204, 205, 206, 208, 209, 214, 215, 245, 252, 254, 256, 261, 265, 279, 281, 283, 285, 331, 356, 394, 404, 409, 410, 411, 412, 414, 416, 426, 433, 443, 456, 460], "compens": 443, "compil": [442, 446], "complain": 444, "complaint": 444, "complement": [30, 354, 452], "complementari": 43, "complet": [416, 421, 448, 450, 452, 454, 458], "complex": [13, 126, 159, 305, 306, 307, 372, 421, 433, 437, 438, 444, 447, 448, 450, 452, 459, 462], "compli": 446, "complianc": 441, "complic": [421, 462], "compon": [68, 421, 422, 444, 447, 449, 450, 451, 452, 458, 460, 462], "compos": [112, 259, 443, 458], "composit": [101, 113, 114, 115, 259, 463], "composite_a": 460, "composite_b": 460, "compositekernel": [113, 114, 115, 443], "compositesurrog": [252, 254, 256, 261, 265, 279, 281, 283, 285, 443, 460], "compound": 340, "comprehens": [441, 460], "compress": 458, "comput": [13, 25, 30, 83, 93, 97, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 212, 214, 219, 220, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 289, 295, 297, 303, 341, 373, 409, 410, 411, 412, 414, 421, 422, 426, 427, 433, 443, 446, 447, 449, 451, 455, 457, 458, 459, 463, 464], "computation": 196, "compute_ref_point": 13, "concat": [406, 407, 415, 416, 426, 427, 430, 431, 437, 438], "concentr": [169, 170, 399, 400, 401, 403, 404, 409, 414, 415, 450], "concentrati": 409, "concentration_valu": 415, "concept": [315, 421, 454, 455, 458], "concis": 443, "concret": [443, 458], "conda": 443, "condit": [33, 34, 35, 36, 37, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 346, 354, 400, 406, 410, 411, 412, 421, 427, 441, 443, 446, 462, 463], "conduct": [30, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 247, 252, 254, 256, 261, 265, 279, 281, 283, 285, 399, 400, 401, 441, 444, 449, 462], "confid": [8, 21, 404], "config": [418, 419, 432, 439, 443, 463], "config_json": 30, "configur": [13, 30, 37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 81, 82, 178, 185, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 241, 243, 249, 252, 254, 256, 257, 259, 261, 265, 271, 279, 281, 283, 285, 346, 375, 383, 402, 403, 421, 428, 431, 435, 441, 442, 443, 446, 447, 448, 449, 450, 451, 455, 456, 457, 459, 461, 462, 463, 464], "confirm": 416, "conflict": [441, 444, 454], "conform": [155, 341, 455], "confront": [424, 441, 452], "conjunct": 460, "connect": [56, 346, 443, 451, 455, 461], "consequ": [401, 442, 450, 451, 456, 457, 459, 460], "consequenti": 446, "consid": [30, 33, 34, 35, 36, 37, 40, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 125, 138, 141, 142, 144, 152, 155, 157, 159, 184, 196, 214, 247, 346, 355, 356, 398, 421, 424, 426, 437, 438, 441, 443, 444, 448, 450, 452, 453, 454, 455, 458, 464], "consider": [214, 448], "consist": [179, 219, 416, 444, 446, 453], "consol": 442, "consolid": [443, 456], "consortium": 445, "conspicu": 446, "constant": [281, 289, 306, 426, 443, 444, 455, 457], "constitut": 446, "constrain": [443, 450, 461, 462], "constraint": [30, 33, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 77, 139, 196, 212, 214, 220, 318, 418, 419, 426, 433, 434, 435, 439, 441, 443, 445, 451, 455, 463], "constraint_1": 411, "constraint_2": 411, "constraint_3": 411, "constraints_augment": 214, "constraints_cardin": 212, "constraints_lin_eq": 212, "constraints_lin_ineq": 212, "constraints_nonlin": 212, "constru": 446, "construct": [30, 212, 214, 220, 261, 291, 398, 427, 429, 437, 438, 441, 443, 447, 450, 453, 458, 460, 463], "constructor": [203, 204, 205, 206, 214, 234, 279, 283, 285, 421, 429, 434, 435, 443, 447, 449, 452, 454, 455, 460, 463, 464], "consult": 441, "consum": [184, 414], "consumpt": 451, "cont_ind": 431, "cont_indic": [430, 431], "cont_paramet": 431, "cont_recommend": [188, 431], "contact": [441, 445], "contain": [13, 30, 33, 39, 40, 41, 43, 64, 67, 72, 93, 120, 125, 126, 130, 132, 134, 138, 141, 142, 144, 152, 155, 157, 158, 159, 163, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 221, 222, 226, 241, 243, 245, 247, 252, 254, 256, 261, 265, 279, 281, 283, 285, 295, 297, 303, 305, 306, 307, 315, 316, 331, 341, 346, 348, 354, 355, 362, 373, 375, 377, 383, 395, 396, 400, 401, 415, 416, 422, 424, 431, 437, 438, 442, 443, 444, 446, 449, 450, 452, 453, 456, 457, 458, 459, 464], "content": [158, 184, 214, 245, 347, 384, 443, 446, 458], "context": [157, 181, 183, 184, 185, 186, 241, 257, 259, 380, 414, 424, 429, 437, 438, 443, 449, 452, 453, 455, 458, 459, 460, 462, 464], "contextu": 462, "continu": [10, 15, 25, 30, 33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 72, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 188, 196, 212, 214, 215, 220, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 404, 406, 409, 410, 411, 412, 422, 426, 427, 428, 431, 433, 439, 441, 443, 449, 451, 452, 456, 458, 459, 463], "continuous_subspac": 457, "continuouscardinalityconstraint": [62, 63, 212, 443, 463], "continuousconstraint": [36, 44, 212, 443, 450, 452], "continuouslinearconstraint": [212, 406, 407, 422, 443, 463], "continuouslinearequalityconstraint": 443, "continuouslinearinequalityconstraint": 443, "continuousnonlinearconstraint": [43, 212, 443], "continuousparamet": [151, 212, 443], "contour": 427, "contract": 446, "contrast": [220, 335, 422, 424, 448, 452, 454], "contribut": [441, 443, 446, 464], "contributor": [441, 446], "contributori": 446, "control": [13, 15, 20, 158, 169, 196, 212, 220, 356, 426, 430, 441, 443, 446, 447, 450, 451, 454, 455, 456, 461, 463], "convei": 458, "conveni": [443, 457, 458, 460], "convent": 214, "converg": 453, "convers": [30, 185, 418, 429, 443, 446, 453, 460, 463], "convert": [27, 121, 216, 229, 322, 332, 336, 340, 343, 344, 357, 358, 363, 366, 369, 419, 434, 435, 443, 449, 451, 458, 459], "convert_sklearn": 418, "convert_sklearn_bayesian_ridg": 418, "convertibletofloat": [13, 322], "cooki": 444, "coordin": [13, 383], "copi": [157, 252, 254, 256, 261, 265, 279, 281, 283, 285, 415, 441, 443, 446, 464], "copyright": [441, 446], "core": [30, 212, 214, 215, 220, 247, 249, 252, 254, 256, 257, 259, 261, 265, 272, 279, 281, 283, 285, 404, 441, 443, 452, 461], "coregion": 462, "coretest": [443, 444], "corpu": 455, "correct": [30, 292, 416, 441, 443, 444, 458], "correctli": [421, 431, 443], "correl": [144, 155, 353, 455, 462], "correspond": [25, 30, 43, 120, 125, 130, 132, 157, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 233, 241, 243, 245, 252, 254, 255, 256, 261, 265, 279, 281, 283, 285, 305, 311, 331, 334, 336, 339, 340, 346, 349, 350, 356, 357, 359, 395, 396, 398, 403, 404, 421, 424, 427, 431, 437, 438, 441, 443, 444, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462], "correspondingli": 30, "corrupt": 348, "cost": [400, 424], "costli": [214, 217, 223, 449], "could": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 152, 343, 404, 414, 415, 421, 422, 438, 443, 448, 450, 455, 459, 461, 462], "count": [312, 415, 421, 450], "counterclaim": 446, "counterpart": [331, 457], "coupl": 416, "cours": [437, 438, 444, 458, 462], "cousin": 450, "cov": [443, 444], "cover": [335, 346, 450, 452], "coverag": [443, 444], "cp": [399, 400, 401], "craft": 459, "crash": [442, 443], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 67, 93, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 212, 214, 220, 221, 222, 237, 245, 252, 254, 256, 257, 259, 261, 265, 268, 273, 279, 281, 283, 285, 295, 297, 303, 346, 349, 350, 362, 375, 377, 383, 403, 414, 415, 416, 421, 422, 427, 431, 432, 439, 440, 441, 442, 443, 444, 450, 451, 452, 453, 455, 458, 459, 460, 461, 463, 464], "create_example_plot": [398, 400, 415, 416, 437, 438], "create_from_config": [418, 419], "create_pi_plot": 416, "creation": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 158, 217, 220, 223, 410, 412, 418, 419, 457, 458, 463], "criteria": 416, "criterion": [415, 447], "critic": 443, "cross": [437, 446], "crucial": [441, 461], "cube": 450, "cuda": 442, "cultur": [455, 462], "curran": 462, "current": [10, 30, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 247, 249, 260, 310, 369, 415, 416, 421, 447, 449, 450, 451, 452, 455, 459, 461, 462, 464], "curv": [305, 416, 426, 450, 461], "custom": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 137, 138, 139, 141, 142, 144, 147, 151, 152, 155, 158, 261, 292, 295, 297, 303, 331, 357, 397, 404, 408, 415, 424, 431, 439, 441, 443, 450, 455, 456, 459, 462, 463, 464], "custom_blackbox": 398, "custom_conversion_funct": 418, "custom_filt": 450, "custom_funct": 409, "customari": 446, "customconstraint": 409, "customdiscreteparamet": [443, 453, 463], "customdisreteparamet": 443, "customencod": 144, "customonnxsurrog": [404, 418, 443], "cycl": [184, 441, 443, 452], "cyclic": 184, "d": [13, 25, 55, 126, 315, 326, 373, 383, 416, 419, 434, 435, 437, 438, 441, 446, 457, 462], "d401": 409, "damag": 446, "daniel": 445, "darmstadt": [441, 445, 451], "dashboard": 443, "data": [13, 15, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 71, 85, 93, 97, 125, 130, 132, 144, 152, 155, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 243, 247, 249, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 297, 303, 312, 314, 318, 346, 348, 355, 368, 369, 384, 388, 395, 396, 397, 398, 403, 404, 406, 407, 409, 410, 411, 412, 415, 419, 421, 426, 427, 430, 433, 434, 435, 437, 438, 439, 440, 441, 443, 447, 448, 449, 450, 451, 453, 455, 456, 458, 459, 460, 463, 464], "data_typ": 418, "databas": [30, 426, 441, 458], "dataclass": [414, 424], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 85, 93, 97, 120, 125, 130, 132, 138, 141, 142, 144, 152, 155, 158, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 221, 222, 225, 239, 240, 243, 245, 247, 249, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 297, 303, 311, 315, 316, 340, 341, 384, 395, 396, 398, 399, 403, 404, 409, 410, 411, 412, 415, 416, 418, 419, 421, 422, 426, 427, 430, 433, 437, 438, 443, 448, 449, 450, 452, 455, 463, 464], "datapoint": 443, "dataset": [184, 241, 459], "datatyp": 443, "date": 446, "dditiv": 453, "de": [232, 432, 441, 442, 443, 444, 449, 450, 456, 463], "deactiv": [441, 443, 451], "deal": [401, 448, 455, 459], "debug": 443, "decid": [152, 421, 424, 431, 447], "declar": [52, 56, 64, 206, 410, 444, 450], "decod": 418, "decor": [115, 289, 321, 349, 414, 443, 444, 459], "decorrel": [144, 155, 162, 434, 435, 455], "decreas": [184, 306, 426, 458, 462], "deduc": [406, 407, 430], "dedupl": 443, "deep": 415, "deepcopi": 443, "deeper": 453, "deepli": 460, "def": [398, 409, 414, 415, 416, 421, 424, 427, 437, 444, 450, 459], "default": [13, 41, 93, 125, 144, 155, 158, 188, 194, 196, 203, 204, 205, 206, 212, 214, 220, 232, 252, 272, 275, 354, 398, 399, 401, 404, 419, 426, 431, 441, 443, 444, 449, 450, 451, 453, 454, 455, 463], "default_campaign": 398, "default_model": 261, "defaultkernelfactori": [404, 409, 410, 411, 412, 426, 433], "defaultscal": 443, "defend": 446, "defin": [25, 30, 40, 43, 44, 51, 147, 157, 178, 184, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 220, 241, 265, 267, 268, 292, 348, 353, 354, 386, 399, 400, 401, 403, 409, 410, 411, 412, 418, 419, 424, 429, 443, 444, 446, 449, 450, 452, 455, 458, 459, 461], "definit": [212, 220, 335, 422, 427, 441, 443, 446, 454, 457], "degener": [347, 362, 443], "degr": 433, "degre": 458, "degree_c": [418, 419, 433], "deliber": 446, "delici": 444, "deliveri": 455, "demand": [30, 438], "demo": 443, "demonstr": [397, 398, 399, 402, 405, 408, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 428, 432, 433, 436, 437, 438, 443, 454, 457, 458, 462], "denot": 25, "densiti": 416, "depend": [52, 56, 84, 117, 214, 220, 241, 306, 315, 400, 404, 408, 421, 422, 429, 439, 440, 442, 443, 444, 450, 451, 452, 453, 457, 459, 460, 461, 462, 464], "dependenciesconstraint": 443, "deprec": [66, 149, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 220, 225, 262, 321, 409, 411, 412], "deprecationwarn": [409, 411, 412, 415], "depth": 457, "deriv": [203, 204, 205, 206, 220, 335, 446, 450, 457], "descend": 306, "describ": [203, 204, 205, 206, 252, 254, 256, 261, 265, 279, 281, 283, 285, 404, 409, 414, 415, 422, 424, 426, 427, 444, 446, 448, 449, 450, 454, 455, 458, 459], "descript": 444, "descriptor": [155, 341, 443, 453, 455, 462], "deseri": [230, 234, 239, 433, 442, 443, 449, 463], "deserialize_datafram": 458, "design": [0, 20, 25, 243, 349, 414, 418, 421, 424, 446, 447, 450, 452, 453, 454, 456, 458], "desir": [117, 125, 128, 350, 425, 426, 439, 441, 443, 447, 451, 453, 454, 456, 458, 461, 464], "desirabilityobject": [30, 426, 441, 443, 449, 458, 460, 463], "desktop": 443, "despit": 443, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 85, 93, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 165, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 243, 247, 252, 254, 256, 257, 259, 261, 265, 268, 275, 277, 279, 281, 283, 285, 295, 297, 303, 308, 309, 354, 359, 362, 386, 399, 401, 406, 407, 426, 431, 440, 441, 442, 443, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462], "detect": [318, 355, 442, 444], "determin": [13, 30, 43, 93, 123, 186, 220, 335, 354, 366, 371, 383, 399, 421, 424, 443, 446, 451, 456], "determinist": 383, "detriment": 455, "dev": [441, 443, 444], "develop": [441, 443, 448, 455, 459], "deviat": [6, 17, 289, 355, 418, 443, 449], "df": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 120, 125, 130, 132, 158, 212, 214, 220, 225, 240, 245, 315, 316, 340, 347, 351, 352, 353, 354, 356, 357, 359, 384, 398, 409, 424, 441, 450, 457, 458, 459], "df_y": 427, "dfa": [315, 316], "di": [399, 400, 401, 403, 404, 445], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 123, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 203, 204, 205, 206, 212, 214, 217, 220, 223, 233, 234, 235, 237, 247, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 309, 326, 329, 341, 346, 362, 386, 415, 418, 437, 438, 443], "dict_bas": [399, 400, 401, 403, 404], "dict_ligand": [399, 400, 401, 403, 404], "dict_solv": [399, 400, 401, 403, 404, 409, 410, 411, 412, 421, 450], "dictat": [120, 125, 130, 132, 196, 214, 437, 438], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 212, 214, 220, 233, 235, 237, 247, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 289, 295, 297, 303, 326, 329, 346, 362, 399, 400, 401, 403, 455, 459], "diff": 444, "differ": [13, 54, 125, 196, 212, 214, 215, 220, 241, 249, 311, 316, 346, 348, 386, 400, 409, 414, 421, 424, 426, 427, 430, 431, 437, 438, 441, 443, 444, 446, 448, 449, 450, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462], "differenti": [459, 462], "difficult": 462, "digit": 357, "dilemma": 424, "dim": [25, 406, 407, 416, 418, 430, 431, 437, 438], "dimens": [25, 383, 398, 406, 407, 416, 418, 429, 430, 437, 438, 443, 455, 457, 460, 462], "dimension": [13, 126, 137, 138, 139, 141, 142, 144, 151, 152, 155, 275, 349, 383, 398, 437, 438, 443], "dimethylisoxazol": 462, "direct": [13, 399, 400, 401, 403, 441, 443, 446, 452, 455, 464], "directli": [13, 335, 438, 441, 443, 450, 454, 458, 460], "directori": [375, 431, 443], "disabl": [252, 254, 256, 261, 265, 279, 281, 283, 285, 310, 409, 411, 412, 443, 449, 452], "disadvantag": 458, "disappear": 443, "disc_ind": 431, "disc_indic": [430, 431], "disc_paramet": 431, "disc_recommend": [188, 431], "discard": [8, 421], "disclaim": 446, "discourag": 449, "discret": [15, 25, 30, 33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 72, 137, 138, 139, 141, 142, 144, 151, 152, 155, 188, 196, 203, 204, 205, 206, 208, 212, 214, 215, 219, 220, 249, 382, 403, 406, 412, 415, 416, 418, 426, 428, 431, 433, 438, 439, 441, 443, 447, 452, 453, 456, 458, 459, 463, 464], "discrete_param": [416, 437, 438], "discrete_spac": [406, 407, 431], "discrete_subspac": 457, "discretecardinalityconstraint": [443, 463], "discreteconstraint": [30, 50, 51, 52, 53, 54, 55, 56, 57, 58, 220, 443, 450, 452], "discretecust": 409, "discretecustomconstraint": [409, 443, 463], "discretedep": 410, "discretedependenciesconstraint": [56, 64, 410, 421, 463], "discreteexcl": 411, "discreteexcludeconstraint": [411, 443, 452, 463], "discretelinkedparametersconstraint": [443, 463], "discretenolabelduplicatesconstraint": [56, 421, 443, 463], "discreteparamet": [152, 220, 221, 222, 443], "discretepermutationinvarianceconstraint": [421, 463], "discreteprod": 412, "discreteproductconstraint": [412, 443, 463], "discretesamplingmethod": [15, 196, 384, 443, 447], "discretesumc": 412, "discretesumconstraint": [406, 412, 421, 443, 463], "discuss": [426, 446, 450, 457, 459], "disjoint": 220, "disk": [443, 463], "dispatch": 116, "displai": [357, 415, 446], "distanc": [152, 383], "distinct": [414, 449, 456], "distinguish": [347, 421, 443, 450, 455, 462], "distribut": [30, 165, 168, 252, 254, 256, 261, 265, 279, 281, 283, 285, 421, 426, 431, 441, 443, 446, 447, 448, 460], "distutil": 336, "div": 418, "divers": 460, "divid": 422, "divis": 373, "dll": 442, "dmac": [399, 400, 401, 403, 404], "dmf": 450, "do": [62, 214, 220, 260, 414, 418, 419, 421, 424, 431, 433, 434, 435, 437, 440, 441, 442, 446, 448, 450, 451, 452, 453, 455, 456, 458, 462, 463, 464], "do_baybe_work": 451, "doc": [98, 165, 321, 409, 411, 412, 441, 443], "doc101": 444, "doc103": 444, "docstr": 443, "doctest": 443, "document": [30, 369, 418, 441, 443, 444, 445, 446, 449, 453, 459], "doe": [29, 30, 37, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 64, 93, 157, 196, 241, 243, 245, 247, 252, 254, 256, 260, 261, 265, 279, 281, 283, 285, 292, 331, 340, 355, 369, 401, 404, 415, 418, 419, 421, 434, 435, 437, 438, 443, 444, 446, 450, 454, 456, 459, 460, 462, 464], "doi": [277, 353], "domain": [252, 254, 256, 261, 265, 279, 281, 283, 285, 398, 441, 443, 457, 459], "don": [440, 452], "done": [30, 354, 355, 401, 403, 409, 410, 411, 412, 418, 419, 426, 433, 443, 447, 449, 450, 451, 452], "doubl": [369, 444, 451], "down": [458, 464], "downsid": 185, "draft": 443, "dramat": 462, "drastic": 455, "draw": [10, 110, 212, 422, 424, 429], "draw_arm": 424, "drawback": 454, "drawn": [20, 196], "drive": [416, 462], "driven": [346, 447], "driver": 442, "drop": [351, 352, 353, 415, 443, 450], "dry_run": 30, "dtype": [13, 126, 159, 305, 306, 307, 372], "due": [157, 312, 438, 441, 443, 447, 450, 451, 455, 456, 457, 458, 461], "duplic": [56, 164, 318, 326, 443, 450], "dure": [30, 33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 214, 220, 241, 329, 383, 421, 424, 437, 438, 441, 442, 443, 444, 445, 449, 450, 451, 452, 453, 457, 458, 459, 460], "dynam": [424, 443, 458, 463], "d\u00fcbendorf": 445, "e": [8, 20, 25, 30, 33, 43, 52, 54, 55, 72, 93, 96, 144, 158, 159, 186, 214, 220, 241, 312, 318, 324, 325, 341, 346, 354, 355, 362, 391, 399, 400, 401, 419, 421, 422, 424, 441, 442, 443, 444, 447, 448, 450, 451, 453, 455, 456, 457, 458, 459, 462, 464], "e3fp": 149, "e3fpfingerprint": 149, "each": [13, 20, 30, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 120, 125, 130, 132, 158, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 214, 243, 245, 247, 249, 252, 254, 256, 260, 261, 265, 279, 281, 283, 285, 316, 341, 346, 347, 355, 375, 398, 400, 401, 404, 416, 421, 422, 424, 426, 427, 431, 437, 438, 444, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 464], "eagerli": 443, "earli": [415, 443], "earlier": [30, 440, 442], "earn": 424, "earned_reward": 424, "easi": [340, 444, 458], "easier": [444, 464], "easiest": [441, 444], "easili": [415, 441, 444, 449, 452, 455, 457, 458, 462], "ecfp": [149, 400, 443, 455], "ecfpfingerprint": 149, "ecosystem": 458, "edbo": [275, 277, 353, 443], "edbokernelfactori": [275, 443], "edg": 157, "edit": [441, 444], "editor": 462, "editori": 446, "edwin": 462, "effect": [54, 181, 183, 184, 185, 186, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 414, 415, 424, 438, 443, 447, 450, 455, 456, 459, 462, 464], "effici": [220, 421, 441, 443, 457], "effortlessli": 459, "ei": [3, 404], "either": [25, 30, 215, 243, 249, 265, 289, 355, 400, 411, 426, 431, 441, 446, 454, 455, 456, 457, 459, 460], "elabor": 446, "elaps": 414, "elapsedtimeprint": 414, "electron": [445, 446], "electroshap": 149, "electroshapefingerprint": 149, "eleg": [437, 458], "element": [39, 40, 41, 51, 159, 249, 318, 328, 334, 371, 372, 377, 421, 437, 438, 443, 450, 459], "elev": 416, "elif": [430, 431], "elimin": [444, 447], "els": [335, 336, 398, 399, 400, 401, 406, 407, 409, 410, 412, 415, 416, 424, 427, 430, 431, 437, 438], "elsewher": 418, "emd": 445, "emdgroup": [308, 441], "emelin": 445, "emerg": 449, "empir": 424, "emploi": [30, 424, 456], "employe": [441, 451], "empow": 460, "empti": [97, 212, 214, 220, 227, 316, 331, 340, 354, 357, 395, 396, 421, 426, 431, 433, 443, 457], "empty_encod": [214, 220], "emptysearchspaceerror": 227, "emul": [20, 442, 443], "en": [98, 165], "enabl": [185, 310, 311, 399, 400, 401, 421, 437, 441, 442, 443, 449, 450, 451, 452, 453, 454, 456, 458, 459, 461, 462], "encod": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 214, 220, 252, 254, 256, 261, 265, 279, 281, 283, 285, 339, 341, 399, 400, 401, 403, 404, 409, 410, 411, 412, 415, 419, 421, 424, 426, 433, 434, 435, 437, 438, 441, 443, 450, 457, 458, 462], "encompass": 449, "encount": [157, 181, 183, 184, 185, 186, 383, 442, 443, 444, 454], "end": [0, 307, 362, 415, 419, 424, 426, 433, 446, 450, 458], "endeavor": 447, "endpoint": [443, 451], "enforc": [370, 389, 443, 444, 455], "engin": [442, 456, 458, 459, 464], "enhanc": [25, 441], "enlarg": 455, "enough": [212, 458], "ensembl": 287, "ensur": [157, 158, 399, 400, 401, 421, 422, 441, 450, 458, 459], "enter": [76, 220, 457], "entir": [311, 362, 384, 443, 444, 447, 451, 464], "entiti": 446, "entri": [37, 40, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 85, 235, 252, 254, 256, 261, 265, 279, 281, 283, 285, 316, 346, 355, 384, 401, 409, 410, 411, 412, 421, 440, 443, 450, 451, 452, 453, 461, 464], "enum": [128, 146, 147, 148, 149, 215, 272, 300, 301, 320, 382, 443, 458], "enumer": [127, 145, 299, 416, 437, 438, 454], "env": [443, 444], "envar_nam": 451, "environ": [310, 370, 389, 398, 399, 400, 401, 407, 409, 410, 412, 415, 416, 418, 424, 427, 437, 438, 441, 442, 443, 444, 463], "envvar": 308, "envvar_nam": 451, "eq": [409, 421], "equal": [44, 125, 186, 212, 424, 426, 433, 443, 450, 454, 457, 458, 461], "equat": [44, 450, 459], "equidist": 455, "equip": 450, "equival": [20, 33, 56, 407, 429, 447, 450, 459], "erg": 149, "ergfingerprint": 149, "erron": 443, "error": [184, 194, 196, 243, 245, 247, 262, 329, 373, 401, 419, 424, 442, 443, 450, 454, 456], "esian": 441, "especi": 444, "essenti": [449, 456], "establish": [415, 437, 438, 462], "estat": 149, "estatefingerprint": 149, "ester": [399, 400, 401, 403, 404], "estim": [214, 219, 220, 252, 424, 443, 460, 463], "estimate_product_space_s": [214, 220, 464], "estimated_win_r": 424, "estimation_bia": 424, "estimation_vari": 424, "et": [400, 441, 455], "etc": [39, 40, 41, 139, 214, 295, 462], "ethanol": [421, 450], "euclidean": 383, "eval_during_augment": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58], "eval_during_cr": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58], "eval_during_model": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58], "evalu": [25, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 287, 288, 336, 430, 431, 443, 449, 451, 456, 459, 462], "even": [186, 289, 352, 437, 438, 446, 448, 449, 451, 455, 459, 460, 462, 464], "event": [30, 311, 415, 446], "everi": [448, 464], "everyth": [444, 450], "evolv": [416, 444], "ex": 453, "exabyt": 464, "exact": [30, 355, 414, 442, 443, 450, 454, 455, 460], "exactexplain": [91, 94, 453], "exactli": [13, 43, 120, 125, 130, 132, 214, 421, 443, 448, 449, 457, 458], "exampl": [13, 157, 158, 245, 315, 316, 326, 335, 354, 397, 398, 402, 405, 408, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 427, 428, 429, 432, 436, 437, 438, 442, 443, 444, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464], "example_input_nam": 418, "exceed": 415, "exceedingli": 459, "except": [30, 331, 340, 344, 360, 361, 399, 400, 401, 415, 419, 434, 435, 441, 442, 443, 446, 452, 460], "excepthook": 442, "exceptiongroup": [62, 443], "excess": 464, "exclud": [30, 55, 351, 409, 410, 411, 412, 426, 433, 443, 446, 450, 463], "exclude_list": 353, "exclus": [53, 408, 439, 443, 446, 450, 459, 463], "execut": [30, 66, 243, 331, 398, 400, 442, 443, 444, 446, 451, 458, 459, 462], "exemplari": 449, "exercis": 446, "exhaust": [184, 196, 453, 456], "exist": [30, 115, 214, 311, 321, 331, 421, 442, 443, 444, 447, 449, 450, 452, 458, 460, 462], "exp_rep": [220, 409, 410, 411, 412, 421, 457], "exp_rep_byt": [219, 464], "exp_rep_human_read": [219, 464], "exp_rep_shap": [219, 464], "expect": [3, 4, 9, 11, 13, 14, 16, 51, 257, 259, 267, 331, 349, 404, 410, 416, 418, 421, 422, 424, 435, 443, 444, 449, 450, 453, 454, 455, 458, 459, 461, 464], "expens": [10, 196, 406, 459], "experi": [0, 30, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 241, 243, 252, 254, 256, 261, 265, 279, 281, 283, 285, 399, 400, 401, 403, 404, 430, 431, 443, 447, 449, 450, 452, 454, 455, 456, 461, 462, 463], "experiment": [30, 97, 120, 125, 130, 132, 138, 141, 142, 144, 152, 155, 178, 181, 182, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 214, 219, 220, 241, 252, 254, 256, 259, 261, 265, 279, 281, 283, 285, 295, 297, 303, 346, 348, 409, 410, 411, 412, 416, 426, 433, 441, 443, 447, 448, 450, 452, 454, 455, 457, 458, 459, 461, 462, 463, 464], "experimentalist": 440, "explain": [71, 92, 93, 94, 96, 97, 416, 443, 445, 460, 463], "explainer_cl": [93, 97, 453], "explan": [93, 97, 443, 449, 460], "explanation_index": [93, 453], "explicit": [158, 185, 414, 415, 419, 421, 429, 434, 435, 443, 444, 454, 458, 460, 462, 463], "explicitli": [212, 220, 414, 431, 438, 446, 452, 457, 462], "exploit": [8, 20, 424, 443], "explor": [8, 30, 424, 447, 456, 457, 462], "exploratori": 447, "exponenti": 220, "expos": [30, 414, 443], "exposur": 443, "expr": [37, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58], "express": [37, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 441, 443, 446, 450], "extend": [157, 452, 455, 462], "extens": [443, 456], "extra": [400, 442, 443], "extract": [30, 181, 183, 184, 185, 186, 356, 416, 437, 453, 463], "extract_pi": 416, "f": [336, 398, 399, 400, 401, 406, 407, 409, 410, 411, 412, 414, 415, 416, 421, 422, 426, 429, 430, 431, 437, 438, 464], "f1": 459, "f2": 459, "fabian": 445, "face": [252, 254, 256, 261, 265, 279, 281, 283, 285, 422, 424], "facilit": 456, "fact": [20, 416, 421, 440, 450, 454], "factor": [13, 158, 441, 449, 450, 464], "factori": [158, 212, 265, 266, 267, 268, 269, 275, 277, 327, 404, 409, 410, 411, 412, 426, 433, 443], "fail": [431, 435, 442, 443, 460], "failur": [297, 446], "failure_valu": 297, "fairli": 454, "fake": [245, 346, 350, 403, 404, 418, 419, 426, 443, 448, 459, 463], "fall": [157, 186, 415, 449, 461], "fallback": [123, 220, 364, 375, 418, 443, 457], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 93, 97, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 183, 184, 185, 186, 212, 214, 220, 225, 252, 254, 256, 261, 265, 279, 281, 283, 285, 297, 306, 324, 325, 329, 335, 336, 349, 354, 356, 359, 377, 395, 404, 409, 410, 411, 412, 426, 433, 434, 435, 441, 443, 451], "famili": 450, "familiar": [399, 400, 401, 404, 406, 407, 409, 410, 411, 412, 418, 419, 426, 430, 431, 433], "fang": 445, "fantasi": 10, "far": 449, "farthest": [208, 382, 383, 404, 441, 443, 445, 447, 456], "farthest_point_sampl": 443, "fashion": [305, 307], "fast": [409, 411, 412, 457, 461], "faster": 220, "fault": 88, "faulti": 442, "favicon": 443, "favor": 443, "fc": [399, 400, 401], "feasibl": [74, 449, 453], "featur": [93, 110, 155, 353, 441, 442, 444, 450, 453, 460, 462], "fed": [441, 453], "feder": 445, "fee": 446, "feed": [427, 440, 441, 452, 462], "feedback": 445, "feel": 415, "few": [398, 424, 443, 444, 447, 455, 458, 460, 462, 464], "field": [234, 344, 377, 443, 462, 463], "fifti": 446, "fig": [416, 427], "figsiz": 427, "figur": [375, 416], "file": [375, 399, 400, 401, 418, 419, 431, 441, 443, 446, 451, 458, 462], "filenotfounderror": [399, 400, 401, 415], "fill": [30, 245, 416], "filler": 450, "filter": [30, 37, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 214, 220, 351, 354, 409, 421, 443, 450, 452, 457, 462, 464], "filter_attribut": 443, "filter_df": [30, 443], "filterwarn": 415, "final": [398, 400, 403, 415, 421, 438], "find": [214, 329, 372, 375, 441, 447, 449, 450, 454, 462], "fine": [419, 433, 434, 435, 441], "finer": [158, 441], "fingerprint": [149, 155, 339, 341, 441, 443, 445, 455], "finish": 448, "finit": [184, 241, 249, 361, 391, 424, 455, 459], "first": [214, 247, 371, 383, 398, 400, 403, 404, 409, 414, 415, 418, 419, 421, 426, 427, 431, 435, 437, 438, 441, 442, 443, 449, 450, 454, 455, 456, 457, 462, 464], "fit": [30, 206, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 384, 386, 399, 400, 401, 409, 410, 411, 412, 418, 426, 433, 443, 446, 450, 455, 460], "fit_gpytorch_ml": 443, "fit_gpytorch_mll_torch": 443, "fitnr": 426, "fitzner": [441, 445], "fix": [241, 268, 415, 416, 421, 424, 427, 430, 431, 444, 449, 455, 459, 462, 464], "flag": [25, 30, 52, 93, 97, 120, 125, 130, 132, 196, 214, 215, 220, 349, 356, 440, 443, 449, 451, 452, 453, 456], "flake8": 443, "flexibl": [414, 429, 443, 458, 459], "flexibli": [454, 456], "float": [8, 13, 15, 21, 30, 41, 43, 44, 46, 47, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 125, 126, 144, 151, 152, 155, 159, 162, 163, 169, 170, 171, 172, 173, 174, 175, 196, 219, 220, 243, 247, 252, 254, 255, 256, 259, 261, 265, 279, 281, 283, 285, 289, 297, 298, 305, 306, 307, 312, 322, 343, 346, 347, 348, 353, 362, 366, 368, 369, 371, 372, 373, 388, 391, 392, 393, 414, 416, 418, 424, 426, 443, 444, 449, 463], "float64": 388, "floattensortyp": 418, "fly": [185, 458, 460], "fn": 321, "focu": 449, "focus": [132, 427, 431, 441], "folder": [400, 441, 444, 451, 460], "follow": [159, 181, 183, 184, 185, 186, 214, 243, 245, 247, 399, 400, 401, 404, 406, 407, 409, 410, 411, 412, 414, 415, 419, 424, 426, 431, 434, 435, 437, 438, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462], "footprint": [10, 214], "forbid": 394, "forc": [93, 95, 157, 196, 443, 444, 453, 456], "forest": [284, 285], "forgiv": 461, "fork": 444, "form": [220, 241, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 346, 440, 441, 446, 447, 449, 454, 455, 456, 457, 458, 459, 464], "formal": [422, 440], "format": [44, 309, 357, 363, 366, 418, 419, 433, 434, 441, 442, 443, 444, 449, 451, 458, 459], "format_except": 442, "former": [421, 443], "formul": 462, "formula": 421, "forrest": 443, "found": [86, 158, 212, 220, 329, 339, 369, 372, 375, 415, 421, 426, 441, 442, 444, 449, 450, 456, 462], "foundat": 456, "four": 421, "fourier": 110, "fourth": 450, "fp": [382, 443, 447], "fp_size": [149, 455], "fpsrecommend": [404, 418, 419, 433, 434, 435, 441, 448, 456], "frac": [438, 454], "frac1": 410, "fraction": [15, 105, 343, 415, 447, 450, 451], "fraction1": 410, "fraction_1": 450, "fraction_2": 450, "fraction_3": 450, "fractur": 450, "frame": [348, 453, 464], "frame1": 410, "frame2": 410, "frame_1": 450, "frame_2": 450, "framea": 410, "framea_a": 410, "frameb": 410, "framework": [449, 455], "free": [444, 446, 451], "freedom": 458, "freeli": 421, "frequenc": 110, "frequent": 424, "fresh": 415, "frictionless": 458, "friendli": 443, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 93, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 149, 151, 152, 155, 157, 158, 165, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 237, 245, 247, 249, 252, 254, 256, 259, 261, 265, 268, 273, 277, 279, 281, 283, 285, 289, 295, 297, 303, 306, 307, 331, 335, 336, 340, 348, 349, 351, 353, 362, 373, 375, 384, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 422, 424, 426, 427, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 442, 444, 446, 447, 448, 450, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464], "from_bound": [212, 443, 457], "from_campaign": [93, 453], "from_config": [30, 434, 435, 449], "from_datafram": [212, 214, 220, 443, 452, 457, 458, 464], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 212, 214, 220, 237, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 362, 418], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 212, 214, 220, 237, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 362, 418, 419, 433, 449, 458], "from_paramet": [212, 214, 220, 443], "from_preset": 265, "from_product": [212, 214, 220, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 422, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 441, 443, 450, 452, 457, 458, 459], "from_recommend": [93, 453], "from_record": [458, 459], "from_repl": [259, 460], "from_simplex": [220, 421, 443, 452, 457, 464], "from_surrog": [93, 453], "front": 454, "frontier": 427, "frozenset": [43, 212, 421], "fsspec": 443, "fulfil": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 415, 421, 422], "full": [25, 212, 369, 397, 439, 443, 449, 452, 453, 455, 462, 463], "full_factori": 212, "full_lik": 416, "full_lookup": [399, 400, 401], "fulli": [421, 441, 443, 451, 452, 459], "fulltest": 444, "func": 444, "func_nam": 437, "funci": 443, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 38, 44, 45, 51, 59, 61, 69, 79, 88, 90, 93, 109, 116, 119, 122, 124, 129, 131, 133, 156, 157, 161, 194, 196, 197, 213, 218, 224, 228, 229, 237, 238, 241, 242, 244, 246, 247, 248, 253, 260, 266, 271, 286, 290, 291, 294, 301, 304, 305, 306, 307, 308, 311, 312, 314, 317, 333, 337, 342, 345, 348, 350, 355, 356, 357, 360, 365, 367, 374, 375, 378, 381, 390, 403, 409, 410, 411, 412, 414, 416, 421, 424, 427, 433, 437, 438, 441, 442, 443, 447, 449, 450, 452, 454, 456, 457, 459, 460, 461, 462, 464], "function_nam": [437, 438], "functionalgroup": 149, "functionalgroupsfingerprint": 149, "fundament": [455, 458], "furo": 443, "further": [13, 355, 421, 422, 433, 441, 448, 452, 456, 457, 460, 462, 463], "furthermor": 426, "furyl": [399, 400, 401], "futur": [56, 214, 260, 409, 411, 412, 415, 437, 453, 461], "fuzzi": 311, "fuzzy_row_match": [311, 443], "g": [52, 54, 55, 72, 93, 96, 144, 158, 214, 220, 318, 341, 355, 424, 441, 442, 443, 444, 447, 448, 450, 451, 453, 455, 456, 457, 459, 464], "g1": 422, "g2": 422, "g3": 422, "gain": [220, 449, 453], "gamma": 170, "gammaprior": 443, "garbag": 443, "gather": [186, 437, 438, 447, 462], "gaussian": [98, 203, 254, 263, 264, 265, 266, 270, 271, 272, 274, 275, 276, 277, 305, 404, 426, 443, 450, 456, 462], "gaussian_kd": 416, "gaussian_process": [100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 265, 267, 268, 272, 275, 277, 404, 443], "gaussianmixtureclusteringrecommend": 456, "gaussianprocesspreset": [265, 273], "gaussianprocesssurrog": [273, 404, 409, 410, 411, 412, 416, 426, 433, 434, 435, 443, 460], "gcf": [399, 401], "ge": 407, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 85, 93, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 148, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 252, 254, 256, 259, 261, 265, 268, 275, 277, 279, 281, 283, 285, 295, 297, 303, 309, 335, 341, 347, 362, 378, 386, 398, 404, 414, 421, 427, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 458, 459, 460, 461, 462, 463, 464], "geom_mean": [117, 125, 128, 426, 454], "geometr": [128, 373, 426, 454], "germani": [441, 445, 451], "get": [30, 37, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 194, 196, 212, 265, 346, 404, 415, 421, 430, 431, 440, 441, 443, 448, 463, 464], "get_absolute_threshold": [43, 443], "get_candid": [220, 415], "get_cmap": 416, "get_comp_rep_parameter_indic": [214, 443], "get_current_recommend": [181, 183, 184, 185, 186, 443], "get_integration_point": 15, "get_invalid": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58], "get_invalid_polar": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58], "get_lin": 415, "get_next_recommend": [181, 183, 184, 185, 186, 443], "get_non_meta_recommend": [181, 183, 184, 185, 186, 443], "get_parameters_by_nam": [212, 214, 220], "get_parameters_from_datafram": [212, 220], "get_subclass": 404, "get_surrog": [30, 93, 194, 196, 443, 453, 460], "get_transform_object": [359, 443], "get_transform_paramet": 443, "get_valid": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 443], "getawai": 149, "getawayfingerprint": 149, "ghosecrippen": 149, "ghosecrippenfingerprint": 149, "git": [441, 444], "github": [277, 308, 332, 353, 418, 443, 444, 445], "give": [418, 419, 421, 438, 446, 449, 450, 454, 458], "given": [13, 28, 30, 33, 39, 40, 41, 43, 64, 86, 93, 96, 97, 120, 125, 130, 132, 134, 155, 157, 158, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 226, 241, 245, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 289, 300, 312, 316, 324, 325, 329, 330, 331, 334, 335, 338, 339, 343, 346, 349, 356, 362, 363, 371, 373, 376, 377, 383, 386, 409, 410, 411, 412, 415, 421, 424, 426, 431, 437, 438, 443, 449, 457, 459, 460], "glass_transition_tempc": 455, "global": [15, 379, 443, 463, 464], "gmean": 373, "gmm": 203, "go": [315, 421, 441], "goal": [398, 424, 454, 462], "goe": 460, "good": [346, 415, 426, 449, 451, 461], "good_interv": 346, "good_reference_valu": 346, "goodwil": 446, "googl": [443, 444], "govern": 441, "gp": [252, 254, 256, 261, 265, 279, 281, 283, 285, 443], "gpytorch": [98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 165, 167, 169, 170, 171, 172, 173, 174, 175, 443], "grab": 440, "gradient": [10, 196, 283, 443, 451, 456], "grant": [443, 446], "granular": [419, 433, 434, 435, 441], "granularity_coar": 433, "granularity_fin": 433, "great": [424, 458], "greater": [186, 196], "greatli": 444, "greedi": [196, 443, 456], "grid": [427, 437, 438], "grid_d": [437, 438], "grossli": 446, "ground": 443, "group": [196, 316, 326, 386, 422, 441, 443, 449, 453], "groupbi": [247, 249], "grow": 464, "gt": [412, 421], "gu16": 455, "guarante": [443, 450, 451, 456], "guid": [403, 441, 442, 443, 444, 447, 449, 452, 454, 457, 459, 462], "guidelin": [443, 444, 447], "ha": [52, 74, 78, 79, 93, 184, 212, 214, 220, 252, 254, 256, 261, 265, 279, 281, 283, 285, 315, 329, 331, 335, 347, 383, 384, 400, 404, 409, 410, 411, 412, 421, 426, 431, 433, 441, 443, 444, 446, 448, 449, 450, 453, 455, 457, 458, 459, 461, 462], "had": [241, 450, 455, 459], "half": [152, 171, 172, 362, 431, 448], "halfcauchyprior": 443, "halfnormalprior": 443, "hamster": 462, "hand": [44, 155, 422, 424, 427, 437, 438, 441, 449, 458, 460], "handi": 450, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 93, 130, 139, 243, 245, 252, 254, 256, 261, 265, 279, 281, 283, 285, 289, 360, 409, 410, 424, 426, 443, 449, 454, 464], "happen": [85, 184, 426, 431, 438, 442, 443, 444, 457, 458, 462], "happili": 454, "hard": [443, 462, 464], "harmless": 446, "hartmann": [416, 437, 438], "hasattr": [406, 407, 430, 431], "hash": [309, 441, 451, 455], "hashabledict": 443, "have": [25, 30, 37, 39, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 120, 125, 130, 132, 155, 157, 206, 214, 241, 260, 292, 316, 326, 329, 346, 355, 356, 369, 399, 400, 403, 404, 409, 410, 414, 416, 421, 422, 424, 426, 430, 431, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 455, 456, 458, 459, 460, 462, 464], "head": 443, "header": 377, "heart": 462, "heatmap": [93, 95], "help": [424, 458, 459, 462], "helper": [414, 416, 418, 421, 458], "henc": [340, 421, 424, 433, 450, 455, 464], "here": [55, 369, 399, 401, 403, 406, 407, 414, 415, 419, 421, 422, 430, 431, 433, 437, 438, 440, 441, 442, 448, 450, 452, 454, 455, 456, 457, 458, 459, 461, 462], "herebi": 446, "herein": [446, 449], "heurist": 196, "hierarch": 458, "hierarchi": [86, 443, 444, 449, 458], "high": [275, 398, 424, 443, 444, 447, 449, 450, 455, 458], "higher": [155, 424, 442, 450, 453, 456], "highest": [447, 458], "highlight": 462, "hint": 444, "histogram": 312, "histor": 455, "histori": 444, "hoc": 454, "hold": [43, 326, 446, 458], "home": [409, 411, 412], "homepag": [441, 443], "hood": 455, "hook": [48, 123, 220, 229, 233, 331, 439, 442, 443, 444], "hopp": [441, 445], "host": [441, 443, 451], "hostnam": [309, 451], "hot": [146, 400, 424, 441, 443, 455], "how": [53, 243, 245, 355, 383, 398, 399, 401, 402, 403, 404, 405, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 424, 431, 433, 434, 435, 438, 441, 449, 450, 451, 454, 459, 460, 461, 462], "howev": [158, 220, 260, 331, 414, 421, 424, 430, 431, 440, 442, 444, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 462, 464], "hrovatin": 445, "html": [98, 165, 308, 321, 369, 418, 443], "http": [98, 165, 277, 308, 321, 332, 353, 369, 441, 443, 446, 462], "hue": [398, 399, 400, 401, 415, 437, 438], "human": [219, 366, 433, 443, 445, 458], "hybrid": [24, 25, 72, 187, 188, 196, 209, 214, 215, 404, 405, 409, 410, 411, 412, 426, 428, 433, 439, 441, 443, 456, 457], "hybrid_recommend": 431, "hybrid_sampl": [196, 456], "hyperrectangl": [212, 457], "hypervolum": 13, "hypothesi": [441, 443, 444], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 71, 72, 76, 78, 79, 80, 82, 93, 96, 97, 112, 115, 126, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 227, 241, 243, 245, 247, 249, 252, 254, 256, 257, 259, 260, 261, 265, 275, 279, 281, 283, 285, 289, 292, 300, 305, 306, 307, 310, 311, 312, 316, 319, 320, 321, 324, 325, 329, 331, 332, 334, 335, 336, 339, 340, 346, 347, 348, 349, 350, 354, 355, 356, 357, 361, 362, 369, 371, 372, 375, 377, 383, 384, 391, 395, 396, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 422, 424, 426, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464], "ideal": [448, 450, 459], "ident": [158, 315, 316, 452, 455, 458, 462], "identif": 424, "identifi": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 247, 326, 340, 355, 356, 415, 443, 450, 453, 454, 455, 457, 458, 459, 462], "idx_offset": 44, "ignor": [120, 125, 130, 132, 184, 196, 214, 243, 245, 247, 329, 353, 401, 415, 431, 443, 450, 458, 464], "ignore_exampl": 443, "ignore_list": 352, "ii": 446, "iii": 446, "illustr": [427, 429, 452], "iloc": 448, "imag": [424, 443], "imagin": [421, 424], "immedi": [375, 414, 449], "immut": 443, "impact": [400, 438, 451], "imperfect": 348, "implement": [20, 37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 126, 178, 189, 249, 257, 333, 409, 415, 421, 437, 443, 444, 445, 447, 453, 456, 457, 459, 462], "impli": [421, 441, 446, 450, 455], "implicitli": 458, "import": [13, 84, 93, 125, 245, 415, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464], "impos": [421, 422, 450], "imposs": [441, 451, 452, 458], "improv": [3, 4, 7, 9, 11, 13, 14, 16, 18, 404, 407, 413, 415, 439, 441, 443, 446, 451], "imput": [243, 245, 397, 401, 439, 441], "impute_mod": [243, 245, 247, 401, 459], "inabl": [441, 446], "inaccuraci": 441, "inact": [43, 157, 159, 196, 212, 443], "inactive_parameter_combin": [43, 212, 443], "inc": 462, "incident": 446, "includ": [62, 64, 120, 125, 130, 132, 157, 186, 243, 324, 325, 352, 399, 410, 419, 421, 434, 435, 438, 443, 444, 446, 447, 448, 450, 452, 464], "inclus": 446, "incom": 458, "incompat": [68, 69, 70, 71, 72, 73, 97, 261, 411, 450], "incompatibilityerror": 30, "incompatibleacquisitionfunctionerror": 448, "incompatibleexplainererror": 453, "incomplet": 443, "inconsist": 443, "incorpor": [446, 448, 460, 464], "incorrect": 443, "incorrectli": 443, "increas": [10, 184, 247, 306, 307, 426, 437, 438, 443, 447, 455, 462], "increment": 220, "incur": 446, "inde": 449, "indefinit": [184, 243], "indemn": 446, "indemnifi": 446, "indent": 377, "independ": [188, 252, 254, 256, 259, 261, 265, 279, 281, 283, 285, 418, 443, 456, 459, 460], "independentgaussiansurrog": [261, 279, 281, 283, 443], "index": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 93, 214, 247, 259, 315, 316, 354, 355, 418, 419, 426, 431, 433, 443, 453, 455, 457, 459], "indexkernel": 443, "indic": [13, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 93, 96, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 181, 183, 184, 185, 186, 214, 252, 254, 256, 261, 265, 279, 281, 283, 285, 315, 316, 319, 320, 349, 383, 421, 431, 443, 446, 452, 456, 459, 460], "indirect": [324, 325, 446], "indistinguish": 421, "individu": [52, 53, 113, 114, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 243, 259, 357, 415, 422, 427, 446, 449, 452, 454, 456, 462], "induc": [43, 424], "industri": 462, "ineffici": 220, "inequ": [44, 212, 457], "inf": [8, 409, 410, 411, 412, 433], "infeas": [450, 452], "infer": [158, 261, 437, 438, 443, 457], "inferencesess": 261, "infin": 163, "infinit": [184, 185, 327, 361, 391, 392, 443, 455], "influenti": 462, "info": [312, 443], "inform": [25, 139, 295, 356, 399, 400, 401, 416, 421, 430, 431, 438, 441, 443, 444, 446, 448, 451, 452, 455, 457, 462, 463], "infring": 446, "ingest": [220, 243, 455, 456], "ingredi": [421, 422, 450], "inher": [20, 157, 252, 254, 256, 261, 265, 279, 281, 283, 285, 421, 460], "inherit": 444, "init": 291, "initi": [104, 105, 106, 107, 108, 109, 110, 111, 115, 186, 188, 196, 203, 204, 205, 206, 208, 220, 243, 247, 311, 383, 397, 409, 410, 411, 412, 415, 416, 426, 433, 438, 439, 443, 445, 449, 451, 455, 456, 458, 459, 462], "initial_data": [243, 247, 399, 438, 459], "initial_recommend": [186, 404, 415, 416, 418, 419, 424, 433, 434, 435, 441, 456], "initial_recommender_cl": 443, "initial_strategi": 443, "initial_typ": 418, "inject": 458, "inner": [179, 354, 453, 456, 458], "inplac": [400, 437, 438, 464], "input": [39, 40, 41, 126, 138, 141, 142, 144, 152, 155, 212, 214, 220, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 295, 297, 303, 305, 326, 343, 344, 348, 349, 350, 354, 362, 364, 371, 383, 395, 396, 398, 418, 426, 427, 437, 438, 443, 454, 458, 459, 462], "input_dim": 418, "input_label": 349, "inputtransform": 386, "insid": [415, 418, 419, 442, 458], "insight": [93, 415, 441, 443, 445, 463], "inspect": [335, 414, 421], "instabl": [443, 450], "instal": [443, 444, 451, 453, 455, 464], "instanc": [39, 40, 41, 52, 55, 93, 186, 214, 346, 410, 415, 421, 422, 441, 442, 444, 448, 449, 450, 451, 453, 455, 457, 458, 459, 464], "instanti": [261, 415, 449], "instead": [181, 183, 184, 185, 186, 311, 340, 349, 409, 411, 412, 441, 442, 443, 449, 450, 454, 455, 458, 459, 461, 462, 464], "institut": [445, 446], "instruct": [441, 443, 461, 463], "instrument_nam": 312, "int": [10, 13, 15, 20, 30, 33, 43, 44, 50, 93, 100, 101, 102, 105, 107, 108, 109, 110, 111, 120, 125, 126, 130, 132, 146, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 243, 247, 249, 297, 298, 305, 306, 307, 312, 350, 357, 372, 376, 379, 380, 383, 384, 386, 409, 411, 412, 421, 424, 426, 438, 444, 455], "integ": [33, 146, 214, 247, 431, 443, 444, 455], "integr": [15, 443, 444, 447, 449], "intend": [403, 414, 437, 444, 456], "intens": 455, "intention": 446, "interact": [29, 30, 403, 441, 442, 449, 452, 458], "interchang": 421, "interconnect": 449, "interest": [449, 453, 454, 455, 464], "interfac": [178, 257, 267, 414, 416, 443, 446, 449, 452, 453], "intermedi": [206, 383], "intern": [30, 44, 56, 184, 398, 415, 426, 443, 450, 451, 455, 456, 457, 458], "internet": 441, "internship": 445, "interplai": 443, "interpol": [105, 275, 443], "interpret": [13, 214, 241, 343, 419, 421, 434, 435, 438, 451, 457, 459], "interrupt": 66, "intersect": 431, "interv": [30, 43, 151, 157, 159, 252, 254, 256, 261, 265, 279, 281, 283, 285, 303, 305, 306, 307, 426, 443, 449, 455, 458, 461], "intrins": 462, "introduc": [442, 443, 450, 455, 456, 459], "intuit": [449, 453], "invalid": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 75, 220, 340, 384, 419, 434, 442, 449, 450, 457], "invalid_config": 435, "invalid_surrogate_model": 419, "invalid_typ": 435, "invari": [52, 55, 56, 315, 316, 450], "invers": [233, 458], "invert": [30, 354], "investig": [241, 459, 460], "invok": [459, 463, 464], "involv": [30, 220, 259, 414, 421, 441, 451, 453, 454, 455, 458, 462], "io": 308, "irrelev": [421, 443, 450], "irrevoc": 446, "is_bound": [362, 443], "is_cardinality_fulfil": 443, "is_continu": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 137, 138, 139, 141, 142, 144, 151, 152, 155], "is_degener": 362, "is_discret": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 137, 138, 139, 141, 142, 144, 151, 152, 155], "is_empti": [212, 220, 443], "is_eq": 44, "is_finit": 443, "is_fully_unbound": 362, "is_half_bound": 362, "is_in_rang": [137, 138, 139, 141, 142, 144, 151, 152, 155], "is_inact": 443, "is_left_bound": 362, "is_mc": 443, "is_multi_output": [120, 125, 130, 132, 443], "is_numer": [137, 138, 139, 141, 142, 144, 151, 152, 155, 443], "is_right_bound": 362, "is_stat": [181, 183, 184, 185, 186, 443, 452], "iso": 418, "isoxazol": 462, "issu": [260, 321, 332, 443, 446, 459, 464], "item": [40, 137, 138, 139, 141, 142, 144, 151, 152, 155, 421, 424, 437, 438, 455], "iter": [13, 30, 43, 151, 184, 185, 212, 214, 243, 260, 303, 322, 327, 346, 348, 350, 363, 395, 396, 399, 409, 410, 411, 412, 415, 416, 424, 437, 438, 441, 443, 447, 449, 455, 456, 459, 460, 464], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 212, 214, 220, 237, 249, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 312, 315, 323, 331, 335, 346, 362, 366, 398, 404, 414, 416, 421, 422, 424, 438, 441, 442, 444, 446, 447, 448, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464], "itself": [252, 254, 256, 261, 265, 279, 281, 283, 285, 414, 437, 442, 462], "j": [400, 441, 455, 462], "jackiepho": [399, 400, 401], "januari": 446, "javadi": 445, "jin": 445, "join": [354, 442], "joint": [259, 449, 460], "jointli": [427, 449], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 212, 214, 220, 237, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 362, 375, 418, 419, 433, 434, 443, 463], "json_str": 458, "juli": 445, "julian": 445, "jump": [443, 462], "jupyt": 418, "just": [424, 440, 444, 458], "k": [152, 204, 383, 398, 399, 400, 401, 403, 404, 406, 407, 415, 421, 427, 429, 430, 431, 443, 452, 456, 464], "karin": 445, "kde": 416, "keep": [51, 155, 212, 220, 415, 443, 444], "kei": [326, 346, 400, 444, 453], "kept": [354, 455, 460], "kernel": [100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 265, 266, 267, 268, 269, 275, 277, 404, 409, 410, 411, 412, 426, 433, 443, 450, 462], "kernel_factori": [100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 265, 267, 268], "kernel_or_factori": 265, "kernelexplain": [91, 93, 94, 97, 453], "kernelfactori": [265, 268, 269, 275, 277, 443], "keyword": [93, 155, 401, 404, 431, 438, 443, 448, 450, 457, 459], "kgaa": [441, 445, 451], "kian": 462, "kickstart": 458, "kind": [196, 441, 443, 446, 450, 455, 456], "kiter": [409, 410, 411, 412, 426], "klekotaroth": 149, "klekotarothfingerprint": 149, "kmean": 404, "kmeansclusteringrecommend": [404, 456], "knob": 441, "know": [424, 434, 441, 442, 454, 458, 462], "knowledg": [8, 10, 441, 443, 462], "known": [450, 452, 460, 462], "koller": 462, "kwarg": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 104, 106, 108, 113, 114, 115, 167, 169, 170, 171, 172, 173, 174, 175, 178, 198, 257, 262, 267, 341, 350, 361], "kwargs_conform": [155, 341, 455], "kwargs_fingerprint": [155, 341, 455], "l0": 33, "l1": 455, "l664": 277, "label": [55, 56, 144, 155, 312, 349, 421, 422, 427, 441, 443, 450, 452, 457, 459], "labelpad": 416, "laboratori": 427, "laggner": 149, "laggnerfingerprint": 149, "lambda": [409, 411, 412, 415, 421, 437, 460], "lanat": 453, "land": 443, "languag": [321, 422, 441], "larg": [155, 220, 406, 407, 422, 443, 451, 455, 459, 464], "larger": [105, 152, 384, 404, 411, 449, 450, 458, 462], "largest": [383, 424, 447], "last": [184, 424, 444, 449, 456], "last_call_tim": 414, "lastli": 416, "latent": 455, "later": [152, 442, 449, 458], "latest": [185, 441, 444, 449], "latter": [20, 30, 315, 335, 415, 421, 449, 454, 462], "law": [441, 446], "lawsuit": 446, "layer": 149, "layeredfingerprint": 149, "layout": 443, "lazi": [222, 387, 443], "lazili": [443, 451], "lazyfram": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 222], "le": 407, "le_method": 444, "lead": [83, 426, 443, 458], "lean": 444, "learn": [15, 248, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 404, 409, 410, 411, 412, 424, 426, 433, 437, 439, 441, 443, 450, 453, 455, 460, 461, 463], "least": [159, 184, 422, 441, 446, 448, 449], "leav": 458, "lee": 445, "left": [80, 81, 175, 243, 347, 355, 362, 410, 427, 443, 454], "left_df": 355, "leftov": 443, "legal": 446, "legend": [399, 401, 427], "len": [410, 415, 416, 421, 422, 424], "length": [106, 184, 185, 252], "lengthi": 449, "lengthscal": [105, 106, 107, 109, 110, 111], "lengthscale_initial_valu": [105, 106, 107, 109, 110, 111], "lengthscale_prior": [105, 106, 107, 109, 110, 111], "leq": 33, "less": [8, 316, 350, 415, 416, 424, 449, 464], "let": [398, 400, 414, 415, 416, 418, 419, 421, 422, 427, 429, 438, 441, 450, 454, 458], "level": [348, 443, 444, 448, 449, 450, 456, 458], "leverag": [415, 449, 456], "li": [159, 455], "liabil": 446, "liabl": 446, "lib": [409, 411, 412, 442], "librari": 442, "licensor": 446, "lie": [30, 252, 254, 256, 261, 265, 279, 281, 283, 285, 346], "liebig": 445, "life": [441, 444, 445, 464], "lifecycl": 449, "ligand": [399, 400, 401, 403, 404, 415, 441, 453, 455], "ligand_data": 415, "ligand_smil": 415, "like": [13, 159, 206, 247, 318, 416, 421, 424, 441, 442, 443, 444, 448, 449, 450, 452, 458, 459, 462, 464], "likelihood": 252, "lime": [93, 96, 453], "limetabular": [91, 92, 453], "limit": [8, 275, 312, 416, 441, 445, 446, 450, 457, 463], "line": [362, 377, 399, 401, 415, 424, 443, 444, 447, 449, 455, 459, 462], "linear": [44, 104, 212, 279, 301, 306, 404, 405, 426, 439, 443, 444, 453, 457, 461], "linear_model": 418, "linear_regressor": 418, "linearkernel": 443, "linearli": [275, 306, 307, 426, 443], "lineplot": [398, 399, 400, 401, 415, 437, 438], "lingo": 149, "lingofingerprint": 149, "link": [54, 442, 443, 446, 455], "linspac": [409, 410, 411, 412, 416, 418, 419, 421, 427, 430, 431, 433, 437, 438, 464], "lint": [441, 443, 444], "linter": [443, 444], "list": [33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 117, 158, 164, 184, 185, 212, 214, 220, 221, 222, 225, 226, 227, 243, 247, 249, 311, 324, 325, 326, 334, 341, 346, 351, 352, 353, 356, 383, 399, 404, 409, 410, 411, 412, 416, 421, 422, 424, 426, 430, 431, 438, 441, 443, 444, 446, 450, 454, 455, 456, 457, 459], "liter": [30, 93, 117, 184, 243, 245, 247, 252, 254, 255, 256, 259, 261, 265, 279, 281, 283, 285, 348, 383, 444], "literatur": 443, "litig": 446, "littl": 442, "live": 460, "liver": [459, 462], "ll": 452, "load": [375, 387, 415, 418, 434, 435, 442, 443], "loc": [173, 174, 399, 401, 427], "local": [442, 444, 451, 453, 463], "locat": [13, 173, 174, 448, 451, 462], "lockfil": 443, "log": [173, 312, 404, 441, 451], "logarithm": [4, 11, 13, 14, 373], "logei": [4, 443], "logic": [179, 259, 346, 349, 398, 443, 450, 456, 459, 464], "lognormalprior": 443, "logo": 443, "long": [449, 458, 459], "longer": [157, 443], "look": [245, 404, 421, 424, 442, 447, 449, 450, 452, 453, 458, 459, 461], "look_up_target": 243, "lookup": [241, 243, 247, 249, 349, 355, 397, 398, 416, 427, 430, 439, 443, 453, 463], "lookup_df": 245, "lookup_test_task": 438, "lookup_training_task": 438, "lookup_valu": [406, 407, 416, 430, 431], "lookup_withmiss": 401, "loop": [241, 243, 249, 409, 410, 411, 412, 415, 426, 443, 448, 453, 459, 464], "loss": 446, "lost": 458, "lot": 429, "low": [275, 424, 442, 443, 453, 455, 458], "lower": [159, 175, 305, 306, 307, 362, 399, 401, 416, 426, 437, 438, 450, 455, 461], "lower_bound": 457, "lower_threshold": 159, "lst_exclud": 351, "lt": 442, "luxuri": 449, "m": 421, "m1": 442, "mac": 442, "macc": 149, "maccsfingerprint": 149, "machin": [424, 441, 442, 444, 447, 451, 455, 461, 462], "machineri": [20, 196, 442, 444, 452, 462, 464], "made": [84, 243, 383, 401, 441, 442, 446, 450, 451, 459], "magic": 462, "magnitud": [347, 348, 464], "mai": [30, 43, 120, 125, 130, 132, 214, 331, 440, 441, 446, 449, 452, 458, 459, 460], "mail": 446, "main": [29, 30, 441, 443], "maintain": [289, 444, 452, 454], "major": [443, 459], "make": [56, 196, 252, 254, 256, 261, 265, 279, 281, 283, 285, 287, 288, 289, 321, 347, 349, 399, 401, 404, 406, 421, 422, 441, 442, 443, 444, 446, 448, 449, 450, 452, 453, 455, 458, 460, 462, 464], "make_explainer_for_surrog": 93, "malfunct": 446, "manag": [29, 212, 213, 214, 220, 380, 443, 446, 459], "mandatori": [440, 443, 461], "mani": [196, 384, 421, 430, 431, 441, 449, 455, 458, 461, 462], "manipul": [443, 451], "manner": 451, "manual": [431, 442, 443, 458, 460], "map": [144, 149, 155, 245, 247, 259, 305, 306, 307, 329, 349, 386, 399, 400, 401, 426, 459, 461], "mapfingerprint": 149, "mapl": [91, 92, 93, 96, 453], "margin": 443, "mark": [446, 449, 462, 463], "markdown": [419, 434, 435, 443], "marker": [398, 399, 400, 401, 415, 437, 438, 443], "markers": [398, 400, 415, 427, 437, 438], "market": 424, "marketplac": 443, "martin": [441, 445], "mask_bad1": 409, "mask_bad2": 409, "mask_bad3": 409, "mask_good": [409, 450], "mass": 169, "master": 277, "match": [30, 85, 87, 138, 141, 142, 144, 152, 155, 158, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 295, 297, 300, 303, 311, 329, 331, 355, 356, 395, 414, 416, 426, 431, 441, 443, 448, 449, 452, 454, 458, 459, 463], "match_attribut": 443, "match_targeta": 461, "match_targetb": 461, "materi": [424, 445, 462], "matern": 105, "maternkernel": 443, "math": [415, 421], "mathemat": 443, "matmin": 442, "matplotlib": [399, 401, 416, 427, 443], "matter": [421, 429, 444, 454], "max": [245, 300, 347, 399, 400, 401, 403, 404, 409, 410, 411, 412, 415, 416, 418, 419, 424, 426, 427, 433, 434, 435, 441, 443, 454, 458, 459, 463], "max_cardin": [33, 43, 50, 450], "max_column": [357, 421], "max_colwidth": 357, "max_n_subspac": [196, 443, 450], "max_nonzero": 220, "max_row": [357, 421], "max_sum": [220, 421, 457], "max_target": 461, "max_yield": [399, 401], "maxim": [6, 13, 300, 403, 416, 424, 426, 441, 443, 453, 461], "maximum": [6, 33, 43, 50, 60, 155, 196, 212, 214, 220, 305, 357, 421, 422, 426, 443, 450, 455, 457], "mc": [424, 448], "md": 443, "me2pph": [399, 400, 401], "mean": [5, 8, 20, 30, 56, 117, 128, 204, 241, 243, 245, 247, 252, 254, 255, 256, 259, 261, 265, 279, 281, 283, 285, 289, 373, 401, 404, 418, 424, 426, 427, 443, 444, 446, 447, 448, 449, 450, 452, 454, 455, 456, 458, 460, 463], "meaning": 454, "meaningless": [421, 447], "meanpredictionsurrog": [289, 404, 460], "meantim": [444, 450], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 93, 157, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 241, 243, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 295, 297, 303, 311, 346, 350, 355, 399, 400, 401, 404, 406, 407, 409, 410, 411, 412, 414, 415, 416, 426, 430, 431, 433, 440, 441, 443, 444, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463], "mechan": [30, 66, 125, 126, 128, 241, 244, 245, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 331, 354, 364, 383, 398, 414, 415, 416, 437, 438, 443, 446, 452, 453, 455, 457, 458, 460, 462, 463], "mechanist": 441, "media": [446, 455, 462], "mediocr": 461, "medium": [419, 433, 441, 446, 455], "medoid": [205, 443, 456], "meet": [346, 446], "mem_estim": 464, "member": [335, 450, 455], "memori": [10, 214, 219, 220, 443, 451, 463], "memorys": [214, 220, 464], "mention": 447, "merchant": 446, "merck": [441, 445, 451], "mere": [446, 454], "merg": 444, "meshgrid": [427, 437, 438], "messag": [85, 415], "meta": [30, 80, 181, 183, 184, 185, 186, 189, 409, 410, 411, 412, 426, 433, 441, 443, 463], "metadata": [30, 212, 220, 309, 443], "metarecommend": [183, 184, 185, 186, 443, 452], "methanol": 421, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 85, 88, 93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 237, 252, 254, 256, 257, 259, 261, 265, 267, 268, 275, 277, 279, 281, 283, 285, 288, 291, 292, 295, 297, 303, 318, 321, 331, 335, 362, 375, 382, 383, 384, 386, 416, 419, 434, 435, 440, 443, 445, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462], "methodtyp": [414, 415, 416], "methyldiphenylphosphin": [399, 400, 401], "methylisoxazol": 462, "metric": [424, 441, 451, 455], "mhfp": 149, "mhfpfingerprint": 149, "micromamba": 443, "middl": 452, "midpoint": 461, "might": [52, 56, 155, 214, 400, 404, 406, 410, 431, 438, 442, 448, 449, 450, 451, 453, 457, 459, 462, 464], "mimic": [98, 165, 450], "min": [300, 347, 398, 406, 407, 416, 426, 427, 430, 431, 437, 438, 441, 443, 454, 458, 463], "min_cardin": [33, 43, 50, 450], "min_nonzero": 220, "min_target": 461, "mind": [424, 460], "miniconda": 443, "minim": [6, 300, 426, 437, 438, 443, 450, 457, 461], "minimum": [33, 43, 50, 60, 77, 152, 212, 214, 220, 443, 450], "minimumcardinalityviolatedwarn": [443, 450], "minor": 443, "mirror": [13, 449, 458], "miss": [243, 245, 401, 443, 444], "mistak": 444, "mix": [249, 421, 422, 441, 450, 455, 458, 462], "mixin": 237, "mixtur": [203, 439, 443, 450, 455, 456, 462, 464], "mobil": 443, "mode": [30, 117, 144, 155, 184, 243, 252, 254, 255, 256, 259, 261, 265, 279, 281, 283, 285, 300, 303, 306, 329, 346, 397, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 415, 416, 418, 419, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 449, 454, 456, 458, 463], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 75, 78, 93, 97, 98, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 252, 254, 256, 257, 258, 259, 260, 261, 265, 279, 281, 283, 285, 289, 291, 292, 369, 406, 407, 417, 427, 437, 438, 441, 443, 445, 447, 448, 449, 450, 454, 455, 456, 458, 459, 461, 462, 463], "model_cl": 292, "model_cluster_num_parameter_nam": [203, 204, 205, 206], "model_from_config": 418, "model_from_python": 418, "model_init": 291, "model_json": 418, "model_param": [203, 204, 205, 206, 279, 283, 285, 419, 443], "modellist": 259, "modelnottrainederror": [252, 254, 256, 261, 265, 279, 281, 283, 285], "modif": [442, 446], "modifi": [185, 245, 289, 346, 347, 348, 443, 446, 464], "modul": [0, 1, 31, 89, 90, 98, 118, 135, 153, 165, 176, 179, 189, 192, 199, 210, 228, 229, 241, 250, 253, 263, 270, 293, 296, 313, 317, 367, 387, 390, 441, 442, 443, 444], "modular": 444, "molecul": [54, 155, 340, 421, 455], "molecular": [341, 455], "moment": [249, 275, 444], "monitor": [443, 451], "monkeypatch": 442, "mont": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 79, 247, 398, 400, 401, 415, 424, 437, 438, 443, 448, 459], "monte_carlo_run": [247, 415], "mordr": [149, 155, 399, 400, 401, 403, 404, 410, 415, 419, 421, 434, 435, 441, 443, 450, 455], "mordredcommun": 443, "mordredfingerprint": [149, 455], "more": [8, 10, 56, 64, 81, 155, 184, 185, 212, 214, 220, 227, 243, 289, 308, 311, 335, 359, 377, 401, 404, 416, 421, 422, 437, 440, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 455, 457, 458, 459, 460, 461, 464], "morgan": 455, "morgan_fp": [149, 443], "mors": 149, "morsefingerprint": 149, "most": [220, 243, 402, 424, 441, 444, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464], "motiv": 443, "move": [13, 157, 443, 458], "mpl_toolkit": 416, "mplot3d": 416, "mqn": 149, "mqnsfingerprint": 149, "mse": 424, "mu": [173, 174], "much": [400, 454, 455], "multi": [129, 251, 252, 254, 256, 259, 261, 265, 279, 281, 283, 285, 427, 439, 441, 443, 445, 448, 462, 463], "multiarmedbandit": 424, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 39, 120, 125, 130, 132, 246, 247, 252, 254, 256, 259, 261, 265, 279, 281, 283, 285, 348, 399, 400, 401, 410, 421, 424, 441, 443, 448, 450, 454, 460, 461, 462, 463], "multipli": 114, "multitask": 443, "must": [52, 120, 125, 130, 132, 214, 220, 245, 249, 331, 348, 395, 404, 414, 415, 421, 424, 426, 443, 444, 446, 447, 450, 451, 452, 454, 455, 459], "mutual": 459, "my_attribut": 444, "my_valu": 451, "mypi": [321, 332, 441, 443, 444], "mystr": 444, "n": [25, 252, 316, 336, 383, 399, 400, 401, 403, 404, 409, 410, 411, 412, 419, 421, 424, 426, 430, 431, 433], "n_arm": 424, "n_batches_don": 30, "n_cluster": [204, 205], "n_combin": 421, "n_combinations_actu": 421, "n_combinations_expect": 421, "n_compon": 203, "n_doe_iter": [243, 247, 249, 398, 399, 400, 401, 415, 416, 437, 438, 459], "n_duplic": 421, "n_estim": 419, "n_fits_don": 30, "n_grid_point": 427, "n_inactive_parameter_combin": [43, 212, 443], "n_interrupted_campaign": 415, "n_iter": [406, 407, 409, 410, 411, 412, 424, 426], "n_mc_iter": [247, 249, 398, 400, 401, 415, 437, 438, 459], "n_mc_run": 424, "n_mc_sampl": 20, "n_output": [120, 125, 130, 132, 443], "n_permut": 421, "n_pis_ov": 415, "n_pis_over_requir": 415, "n_point": [212, 384], "n_raw_sampl": [196, 443, 456], "n_restart": [196, 443, 456], "n_row": 350, "n_sampl": 383, "n_task": 214, "n_task_param": 443, "n_training_data": 427, "n_wrong_sum": 421, "nactivevalu": [409, 410, 411, 412, 426, 433], "naiv": [188, 281, 289, 404, 443, 457], "naivehybridrecommend": 443, "naivehybridspacerecommend": [431, 443, 456], "nake": [311, 451], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 43, 64, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 160, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 226, 235, 247, 259, 261, 295, 297, 303, 315, 323, 329, 330, 331, 340, 341, 346, 351, 355, 356, 370, 375, 377, 389, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 422, 424, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 441, 443, 444, 446, 448, 449, 450, 451, 454, 457, 458, 459, 460, 461, 462, 464], "name_or_abbr": [323, 330], "namedtupl": 424, "namespac": [197, 443, 444], "nan": [163, 252, 391, 393, 394, 395, 396, 409, 410, 411, 412, 426, 433], "nativ": [418, 443, 460], "natur": [283, 400, 444, 450, 456, 458, 461], "navig": [441, 449], "nbase": 341, "nbviewer": 418, "nd": 441, "ndarrai": [13, 126, 159, 305, 306, 307, 349, 358, 362, 373, 383, 416, 424, 427, 443, 459], "ne": 421, "nearli": 461, "necessari": [356, 414, 443, 444, 449, 450, 454, 455, 457, 459, 460], "necessarili": [446, 449, 450, 457, 462], "need": [25, 30, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 249, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 331, 355, 356, 399, 400, 401, 404, 409, 412, 414, 416, 418, 421, 424, 426, 437, 438, 440, 441, 442, 443, 444, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 464], "neg": [15, 427, 443, 450], "negat": [6, 44, 438, 443, 462], "neglig": 446, "neither": [8, 249, 348], "neq": 33, "nest": [377, 449, 463], "neural": 462, "neurip": 462, "neutral": 8, "never": 411, "nevertheless": [335, 442], "new": [30, 46, 47, 117, 184, 186, 212, 245, 260, 305, 306, 307, 315, 353, 354, 403, 415, 416, 433, 441, 443, 444, 449, 450, 460, 462], "new_measur": 453, "new_rec": 449, "newli": [441, 444, 451, 452, 462], "next": [30, 398, 414, 416, 421, 422, 427, 433, 437, 438, 441, 447, 448, 449, 456, 458], "ngboost": [283, 404, 443], "ngboostmodel": 419, "ngboostsurrog": [404, 419, 460], "nice": [416, 442], "nicknam": 340, "nintern": 426, "no_duplicates_constraint": 421, "no_grad": 416, "no_tl": 437, "nois": [243, 347, 348, 438, 443, 463], "noise_level": 348, "noise_perc": [243, 247, 459], "noise_ratio": 347, "noise_std": [437, 438], "noise_typ": 348, "noisi": [13, 14, 16, 350, 437, 441, 443, 462], "non": [63, 64, 92, 120, 125, 130, 132, 181, 183, 184, 185, 186, 188, 214, 243, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 329, 331, 335, 347, 384, 391, 392, 393, 395, 396, 421, 437, 441, 443, 446, 448, 450, 452, 453, 457, 458], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 41, 46, 47, 56, 62, 63, 64, 93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 125, 130, 132, 134, 138, 141, 142, 144, 151, 152, 155, 158, 162, 163, 164, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 217, 220, 223, 226, 227, 230, 231, 233, 235, 243, 245, 247, 249, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 291, 292, 297, 303, 311, 312, 319, 320, 331, 341, 346, 351, 352, 353, 357, 362, 363, 375, 386, 391, 392, 393, 394, 395, 396, 404, 409, 410, 411, 412, 414, 415, 416, 418, 419, 426, 433, 457, 461, 463], "nonetheless": 462, "nonlinear": [36, 212], "nonpredict": [201, 203, 204, 205, 206, 208, 209], "nonpredictiverecommend": [206, 208, 209, 443], "nonzero": [33, 43, 220, 443], "noqa": [409, 444], "nor": [8, 348, 440], "norecommenderslefterror": [184, 185], "noreturn": [188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 262], "normal": [172, 173, 174, 409, 411, 412, 426, 442, 446, 454, 457], "normaliz": 454, "normalprior": 443, "not_a_param": 419, "notabl": [443, 452, 460], "note": [33, 43, 56, 214, 243, 247, 249, 260, 261, 346, 347, 348, 399, 400, 401, 404, 410, 414, 418, 419, 421, 426, 430, 431, 433, 434, 435, 440, 441, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460, 462], "notebook": 418, "noteworthi": 449, "noth": [15, 30, 33, 41, 43, 44, 50, 82, 125, 155, 186, 188, 194, 196, 203, 204, 205, 206, 212, 214, 220, 252, 265, 279, 283, 285, 303, 446, 455], "notic": [414, 444, 446, 458, 460], "notimplementederror": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 126, 157, 227, 230, 231, 249, 252, 254, 256, 260, 261, 265, 279, 281, 283, 285], "notwithstand": 446, "now": [398, 399, 400, 401, 403, 404, 409, 411, 414, 415, 416, 421, 422, 424, 426, 427, 429, 433, 434, 437, 438, 440, 441, 443, 462, 464], "np": [126, 406, 407, 409, 410, 411, 412, 416, 418, 419, 421, 422, 424, 427, 429, 430, 431, 433, 437, 438, 450, 455, 459, 464], "nrecommend": [403, 404, 426, 430, 431], "nu": 105, "num": [354, 366], "num_disc_1": [426, 449], "num_disc_2": 426, "num_experi": [243, 398, 399, 400, 401, 415, 437, 438], "num_fantasi": 10, "num_parameter_1": 412, "num_parameter_2": 412, "num_parameter_3": 412, "num_parameter_4": 412, "num_parameter_5": 412, "num_parameter_6": 412, "num_sampl": 110, "num_valu": 457, "number": [10, 15, 20, 30, 43, 110, 120, 125, 130, 132, 155, 178, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 243, 247, 249, 252, 350, 357, 362, 366, 378, 383, 384, 399, 400, 401, 406, 407, 409, 410, 411, 412, 416, 421, 424, 430, 437, 438, 441, 442, 443, 447, 449, 450, 451, 454, 455, 457, 458, 459, 464], "numer": [13, 30, 33, 34, 35, 36, 37, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 83, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 212, 220, 245, 303, 347, 348, 355, 384, 395, 396, 398, 403, 406, 421, 422, 441, 443, 450, 451, 453, 454, 455, 457, 459, 461], "numerical_measurements_must_be_within_toler": [30, 395, 443, 449], "numerical_onli": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58], "numericalcontinuousparamet": [44, 62, 157, 212, 398, 406, 407, 422, 427, 429, 431, 438, 457, 459, 463], "numericaldiscreteparamet": [220, 399, 400, 401, 403, 404, 406, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 426, 430, 431, 433, 434, 435, 437, 438, 441, 457, 458, 459, 463, 464], "numericaltarget": [245, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 415, 416, 418, 419, 426, 427, 430, 431, 433, 434, 435, 437, 438, 441, 443, 454, 458, 459, 463], "numericcontinu": 431, "numparam1": 412, "numparam2": 412, "numparam3": 412, "numparam4": 412, "numparam5": 412, "numparam6": 412, "numpi": [159, 349, 358, 362, 368, 370, 406, 407, 409, 410, 411, 412, 416, 418, 419, 421, 422, 424, 427, 429, 430, 431, 433, 437, 438, 443, 450, 459, 464], "nuniqu": 421, "nyou": [430, 431], "o": [398, 399, 400, 401, 403, 404, 407, 409, 410, 411, 412, 415, 416, 419, 421, 424, 427, 437, 438, 441, 450, 451, 455], "o2": [399, 400, 401], "obj": [162, 163, 164, 231], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 93, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 221, 222, 231, 232, 235, 237, 252, 254, 256, 257, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 318, 321, 329, 331, 348, 355, 356, 359, 362, 375, 386, 398, 403, 414, 415, 416, 418, 419, 424, 427, 429, 431, 434, 435, 442, 443, 444, 446, 450, 452, 453, 456, 457, 459, 460, 461, 463, 464], "objective_json": 458, "oblig": 446, "observ": [241, 252, 254, 256, 261, 265, 279, 281, 283, 285, 424, 459, 461], "obsolet": 443, "obtain": [243, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 400, 416, 424, 427, 438, 441, 443, 449, 453, 454, 458, 462], "oc": [399, 400, 401, 403, 404], "oc1": [399, 400, 401], "occur": [55, 444], "occurr": 450, "octanol": [450, 455], "off": [8, 249, 336, 410, 441, 443, 450, 451, 454, 461], "offer": [331, 416, 421, 424, 430, 440, 441, 442, 446, 447, 452, 455, 456, 458, 459, 460, 462, 464], "offset": [44, 108], "offset_initial_valu": 108, "offset_prior": 108, "often": [422, 424, 442, 447, 450, 451, 452, 453, 455, 458, 464], "oftentim": [458, 459], "oh": [141, 146, 400, 410, 419, 424, 426, 433, 434, 435, 441, 457, 458], "ok": 426, "old": 462, "omit": [13, 194, 196, 247, 331, 414, 441, 457, 458], "onc": [247, 415, 455, 459], "one": [13, 20, 62, 64, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 169, 178, 179, 184, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 214, 227, 245, 265, 289, 315, 316, 350, 377, 399, 400, 401, 404, 406, 421, 424, 426, 435, 437, 438, 440, 441, 442, 443, 444, 446, 448, 449, 450, 452, 454, 455, 457, 458, 459, 460, 461, 462], "onehot": 400, "ones": [214, 311, 355, 400, 431, 443, 448, 462], "ongo": [415, 462], "onli": [10, 30, 33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 93, 105, 120, 125, 130, 132, 155, 214, 220, 245, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 289, 311, 312, 331, 332, 335, 346, 355, 362, 377, 383, 384, 399, 404, 409, 410, 415, 416, 418, 419, 421, 430, 431, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 464], "onlin": 424, "onnx": [260, 261, 369, 417, 441, 443, 460], "onnx_input_nam": [261, 418], "onnx_str": [261, 418], "onto": [13, 444], "open": [30, 43, 157, 159, 252, 254, 256, 261, 265, 279, 281, 283, 285, 441, 444], "opentelemetri": [441, 443, 451], "oper": [41, 44, 53, 233, 252, 254, 256, 261, 265, 279, 281, 283, 285, 289, 349, 367, 406, 407, 411, 412, 421, 422, 442, 443, 448, 450, 451, 452, 453, 456, 458], "operator_convert": 418, "opposit": 450, "opt": [441, 451], "optim": [12, 20, 30, 43, 44, 74, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 241, 243, 247, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 346, 400, 402, 403, 406, 407, 415, 416, 421, 424, 426, 431, 443, 445, 447, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462], "optimize_acqf": [44, 196], "optimize_acqf_": 44, "optimize_acqf_discret": 196, "optimize_acqf_mix": 196, "option": [30, 84, 89, 93, 104, 105, 106, 107, 108, 109, 110, 111, 115, 125, 130, 132, 138, 141, 142, 144, 152, 155, 158, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 233, 235, 243, 247, 249, 279, 283, 285, 291, 297, 303, 331, 341, 346, 351, 352, 353, 375, 401, 404, 418, 419, 424, 442, 443, 444, 447, 449, 450, 452, 453, 454, 457, 458, 459, 460, 461, 464], "oracl": 459, "orchestr": [444, 449], "order": [214, 220, 415, 424, 440, 441, 443, 444, 449, 450, 455, 458, 462], "ordin": 461, "org": [277, 321, 353, 418, 441, 446], "organ": 444, "origin": [25, 30, 157, 315, 316, 326, 349, 433, 440, 443, 444, 446, 456, 458, 460], "orthogon": 444, "oserror": 442, "other": [52, 112, 157, 212, 316, 399, 401, 403, 404, 406, 407, 415, 422, 424, 431, 437, 438, 440, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 464], "otherwis": [44, 60, 137, 138, 139, 141, 142, 144, 151, 152, 155, 446, 447, 452, 454, 462], "our": [398, 409, 411, 414, 415, 416, 419, 421, 422, 424, 427, 429, 430, 431, 434, 435, 437, 438, 441, 444, 447, 449, 450, 452, 458, 459], "out": [220, 426, 438, 441, 446, 451, 454, 459, 462], "out_par": 427, "out_y0": 427, "out_y1": 427, "outcom": [178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 400, 441, 455, 461], "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 115, 120, 125, 130, 132, 252, 254, 256, 261, 265, 279, 281, 283, 285, 348, 349, 350, 375, 398, 427, 437, 438, 442, 443, 445, 459, 463], "output_label": 349, "outputscal": 115, "outputscale_initial_valu": 115, "outputscale_prior": 115, "outsid": [30, 157, 185, 252, 254, 256, 261, 265, 279, 281, 283, 285, 289, 306, 307, 346, 426, 443, 458], "outstand": 446, "over": [30, 33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 212, 421, 440, 443, 447, 449, 452, 462], "overal": [214, 418, 419, 421, 422, 424, 443, 444, 449, 454, 462], "overlap": [63, 64, 157, 406, 407, 450], "overrid": [233, 235, 414, 443], "overridden": [414, 444], "overview": [441, 458], "overwritten": 431, "own": [188, 398, 422, 441, 442, 443, 444, 446, 450, 455], "owner": 446, "ownership": 446, "p": [398, 399, 400, 401, 403, 404, 406, 407, 414, 416, 430, 437, 438, 444, 452, 453, 460, 464], "p1": [457, 458, 459], "p1_json": 458, "p1_via_json": 458, "p2": [457, 458, 459], "p2_json": 458, "p2_via_json": 458, "p3c4": [399, 400, 401], "p_cont": 457, "p_disc": 457, "p_g1_amount": 422, "p_g2_amount": 422, "p_g3_amount": 422, "p_i": 33, "pack": 458, "packag": [93, 149, 309, 409, 411, 412, 442, 443, 444, 455, 459, 460, 464], "page": [418, 441, 443, 444, 452], "pair": [315, 427, 441, 455], "pam": 205, "pamclusteringrecommend": 456, "panda": [51, 221, 239, 240, 245, 340, 358, 398, 399, 400, 401, 406, 407, 409, 415, 416, 421, 422, 426, 427, 430, 431, 437, 438, 443, 450, 451, 455, 457, 458, 459], "panic": 440, "paper": 462, "paper_fil": 462, "parallel": 444, "param": [417, 419, 439], "param1": [457, 459], "param2": [457, 459], "param_bounds_comp": 443, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 67, 81, 85, 93, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 126, 130, 132, 137, 138, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 216, 219, 220, 221, 222, 225, 226, 227, 233, 235, 237, 241, 243, 245, 247, 249, 252, 254, 256, 259, 261, 265, 268, 275, 277, 279, 281, 283, 285, 287, 289, 291, 292, 295, 297, 303, 305, 306, 307, 311, 312, 315, 316, 324, 325, 326, 329, 331, 334, 335, 336, 339, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 366, 371, 372, 373, 375, 377, 379, 380, 383, 384, 386, 395, 396, 398, 403, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 424, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 441, 443, 444, 450, 451, 452, 454, 458, 459, 460, 462, 463], "parameter": [169, 170, 171, 172, 173, 174, 175], "parameter_json": 458, "parameter_nam": [212, 214, 220, 431], "parameter_names_in_cardinality_constraint": 212, "parameterencod": [138, 146, 147, 149, 152], "parametr": 450, "parent": 444, "pareto": [12, 130, 425, 439, 441, 443, 454], "paretoobject": [427, 441, 443, 463], "pars": [364, 443], "parser": 443, "part": [15, 25, 30, 39, 72, 189, 212, 214, 220, 346, 396, 419, 431, 434, 435, 437, 438, 443, 444, 446, 447, 448, 449, 450, 455, 456, 457, 458, 464], "parti": [446, 459], "partial": [25, 415, 463], "particl": 462, "particular": [30, 220, 241, 414, 427, 431, 440, 441, 442, 444, 446, 449, 454, 455, 457, 458, 459], "particularli": [331, 449], "partit": [205, 247, 249, 443, 456, 459], "partitionexplain": [91, 94], "pass": [30, 37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 70, 93, 155, 203, 204, 205, 206, 214, 220, 231, 265, 279, 283, 285, 350, 356, 421, 433, 438, 443, 444, 448, 452, 453, 454, 455, 458], "passthrough": [27, 121, 216, 269], "patch": 415, "patent": 446, "path": [375, 400, 421, 443, 444, 451, 464], "pattern": [149, 444, 462], "patternfingerprint": 149, "pd": [3, 30, 245, 259, 315, 316, 354, 398, 399, 400, 401, 406, 407, 409, 415, 416, 421, 422, 426, 427, 430, 431, 437, 438, 443, 450, 452, 455, 457, 458, 459], "pdf": 462, "peek": 458, "pend": [25, 30, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 441, 443, 463], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 443, 448, 449], "per": [243, 259, 399, 400, 401, 404, 421, 426, 430, 437, 438, 443, 455, 457, 459], "percent": [243, 446], "percentag": [196, 311, 348, 404, 409, 410, 411, 412, 421, 426, 433, 438, 456], "perf_count": 414, "perfectli": 458, "perform": [196, 243, 311, 355, 400, 409, 410, 411, 412, 416, 421, 434, 437, 438, 440, 441, 443, 444, 446, 447, 449, 451, 453, 455, 456, 459, 460, 462], "period": 106, "period_length_initial_valu": 106, "period_length_prior": 106, "periodickernel": 443, "perm_inv_constraint": 421, "perman": 463, "permiss": [441, 446], "permut": [52, 55, 56, 316, 443, 450], "permutation_invari": 52, "permutationexplain": [91, 94], "perpetu": 446, "persist": [443, 445, 449, 451, 458, 460], "perspect": 458, "pertain": 446, "pharmacophor": 149, "pharmacophorefingerprint": 149, "phase": [186, 422], "phaseagent1": 422, "phaseagent2": 422, "phcpho": [399, 400, 401, 403, 404], "phenomenon": 449, "philosophi": 458, "physic": [453, 459], "physiochemicalproperti": 149, "physiochemicalpropertiesfingerprint": 149, "pi": [7, 404, 415, 416], "pi_max": 416, "pi_per_iter": 416, "pi_required_fract": 415, "pi_threshold": 415, "pickl": 443, "pictur": 441, "piec": [424, 441, 449, 450], "piecewis": 107, "piecewisepolynomialkernel": 443, "pin": [25, 443], "pin_discret": 25, "pinned_part": 25, "pip": [441, 443, 444, 453, 464], "pipelin": [437, 438, 443, 444], "pival": [399, 400, 401, 403, 404], "pl": [37, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58], "place": [13, 33, 245, 346, 347, 348, 418, 419, 421, 424, 442, 443, 444, 446, 449, 452, 455, 458, 462], "placehold": 318, "plai": [449, 453, 461], "plain": 269, "plainkernelfactori": [100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 265], "plan": [260, 452, 455], "platt": 462, "pleas": [418, 419, 441, 447, 453, 456], "plenti": 453, "plot": [93, 95, 243, 399, 400, 401, 427, 437, 438, 443, 460, 462, 463], "plot_abegin_convert_pipelin": 369, "plot_ebegin_float_doubl": 369, "plot_typ": 93, "plotting_them": 375, "plt": [399, 401, 416, 427], "plu": [245, 441], "plugin": 443, "pm": [5, 404], "png": [399, 401], "po16": 455, "poetri": 443, "point": [6, 13, 15, 20, 25, 29, 30, 93, 152, 157, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 355, 368, 369, 381, 382, 383, 384, 388, 399, 403, 404, 415, 422, 427, 430, 431, 437, 438, 440, 441, 443, 445, 447, 448, 449, 452, 453, 454, 456, 457, 463, 464], "points_per_dim": [416, 430, 431, 437, 438], "polar": [37, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 222, 441, 443, 445, 463, 464], "poli": 416, "polici": 424, "polycollect": 416, "polym": 455, "polynomi": [107, 108], "polynomialkernel": 443, "polytop": 443, "popul": 421, "popular": [453, 455, 460], "posit": [13, 93, 331, 383, 443, 450, 453, 454], "posixpath": 375, "possibl": [30, 43, 158, 212, 220, 221, 222, 241, 331, 346, 401, 415, 416, 421, 426, 441, 443, 446, 449, 450, 451, 452, 455, 456, 457, 458, 459, 461, 462, 464], "possibli": 449, "post": [454, 455], "post_hook": [331, 414, 415, 416], "posterior": [5, 6, 15, 17, 20, 30, 252, 254, 256, 259, 261, 265, 279, 281, 283, 285, 288, 404, 443, 447, 460], "posterior_mean": [252, 424], "posterior_mod": 252, "posterior_stat": [30, 252, 254, 256, 259, 261, 265, 279, 281, 283, 285, 443, 449], "posteriorlist": 259, "posteriorstandarddevi": [424, 447], "postprocess": 340, "potassium": [399, 400, 401, 403, 404], "potenti": [214, 441, 442, 443, 444, 449, 450, 453, 454, 457, 464], "power": [108, 446, 450, 456], "pph3": [399, 400, 401], "pr": [443, 444], "practic": [447, 453, 456], "pre": [158, 184, 268, 417, 442, 443, 444], "pre_hook": [331, 414], "precis": [56, 184, 212, 311, 357, 369, 370, 389, 443, 463], "precomput": 144, "predefin": [375, 449, 456], "predict": [30, 78, 206, 252, 254, 256, 261, 265, 279, 281, 283, 285, 441, 443, 447, 448, 454, 459, 460, 462, 463], "predictor": 287, "prefer": [30, 446, 452, 454, 458], "prefix": 341, "preliminari": 462, "prepar": [416, 444, 446, 464], "preprocess": 443, "presenc": [196, 442, 443], "present": [71, 93, 120, 125, 130, 132, 214, 315, 316, 331, 403, 424, 443, 450, 459, 464], "preset": [265, 272, 275, 277, 443], "pressur": [411, 418, 419, 433, 434, 435, 441, 450], "pretrain": [261, 417, 439], "pretti": 357, "pretty_print_df": [421, 443], "prevent": [157, 230, 231, 331, 442, 443, 444], "previou": [184, 415, 416, 443, 449, 451, 462], "previous": [311, 399, 400, 401, 403, 411, 448, 449], "price": 455, "primari": 449, "primarili": 447, "principl": [421, 424, 460], "print": [245, 357, 377, 399, 400, 401, 403, 404, 406, 407, 411, 414, 418, 419, 421, 422, 424, 429, 430, 431, 433, 434, 435, 441, 443, 457, 464], "print_parameter_names_hook": 414, "printer_inst": 414, "prior": [104, 105, 106, 107, 108, 109, 110, 111, 115, 169, 170, 171, 172, 173, 174, 175, 252, 275, 412, 441, 442, 443], "priori": [450, 458, 462], "privat": [443, 445], "probabilist": 447, "probability_of_improv": 416, "probabilityofimprov": [415, 416], "probabl": [7, 18, 20, 404, 413, 415, 439, 443], "problem": [74, 421, 422, 424, 437, 438, 443, 444, 449, 454, 458], "problemat": [335, 442, 455], "proce": [243, 403, 451], "procedur": [447, 462], "proceed": 462, "process": [30, 98, 263, 264, 265, 266, 270, 271, 272, 274, 275, 276, 277, 354, 383, 404, 414, 421, 424, 437, 438, 443, 444, 447, 448, 449, 450, 451, 452, 454, 455, 458, 462], "prod": 412, "prod_constraint": 412, "prod_i": 454, "produc": [120, 125, 126, 130, 132, 245, 441, 443, 444, 451, 459], "product": [57, 114, 214, 220, 221, 222, 327, 408, 439, 441, 443, 446, 450, 452, 463, 464], "product_paramet": [220, 421, 457], "productkernel": 443, "programmat": 421, "progress": [30, 182, 416, 443, 452], "prohibit": 447, "project": [416, 441, 443, 451], "promin": 446, "promis": [415, 448], "proper": 443, "properli": [25, 426, 442, 457], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 85, 93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 215, 219, 220, 252, 254, 256, 259, 261, 265, 268, 272, 275, 277, 279, 281, 283, 285, 295, 297, 300, 301, 303, 320, 321, 362, 382, 386, 443, 444, 450, 452, 455], "proport": 438, "propos": 449, "protobuf": 443, "protocol": [177, 178, 257, 267, 335, 443], "prototyp": 445, "provid": [13, 15, 30, 44, 93, 97, 126, 144, 155, 158, 178, 184, 185, 188, 189, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 233, 237, 241, 243, 245, 247, 249, 252, 254, 256, 261, 265, 275, 277, 279, 281, 283, 285, 315, 327, 331, 343, 347, 348, 353, 356, 358, 383, 384, 398, 399, 400, 401, 414, 421, 427, 429, 430, 431, 434, 437, 438, 441, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462], "prune": [12, 13, 14, 16], "prune_baselin": [12, 13, 14, 16], "pstd": [6, 443, 447], "pubchem": 149, "pubchemfingerprint": 149, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 85, 93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 215, 219, 220, 237, 252, 254, 256, 257, 259, 261, 265, 267, 268, 272, 275, 277, 279, 281, 283, 285, 295, 297, 300, 301, 303, 318, 320, 321, 362, 382, 386, 443, 444], "publicli": 446, "publish": 443, "pull": [424, 443], "punish": 8, "pure": [8, 10, 15, 179, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 214, 249, 260, 384, 430, 443, 463], "purerecommend": [181, 183, 184, 185, 186, 188, 194, 201, 443], "purpl": 427, "purpos": [15, 414, 415, 418, 424, 441, 442, 444, 446, 452, 458, 464], "push": [43, 444], "put": [421, 424, 451, 455], "puzzl": 441, "py": [277, 409, 411, 412, 443, 451], "py310": [409, 411, 412], "py312": 444, "pyarrow": 443, "pydant": 443, "pydoclint": [443, 444], "pydocstyl": 444, "pylint": 443, "pymatgen": 442, "pypi": [441, 443], "pyplot": [399, 401, 416, 427], "pyproject": 443, "pytest": [443, 444], "python": [29, 321, 332, 400, 419, 434, 435, 441, 442, 443, 444, 449, 451, 458], "python3": [409, 411, 412], "python310": 442, "pytorch": 443, "pyupgrad": 443, "q": [107, 287, 288, 404, 448], "qei": [9, 404, 434, 435, 443], "qkg": [10, 443], "qlogei": [11, 404, 443], "qlogexpectedimprov": 404, "qlognehvi": 13, "qlognei": [14, 443], "qlognoisyexpectedhypervolumeimprov": [443, 454], "qlognparego": 443, "qnegintegratedposteriorvari": 447, "qnei": [16, 443], "qnipv": [15, 443, 447], "qpi": [18, 404], "qposteriorstandarddevi": 447, "qpstd": [17, 443, 447], "qsimpleregret": 20, "qsr": [19, 443], "qt": 20, "qthompsonsampl": [424, 443], "quadrat": [111, 398, 427], "qualiti": 444, "quantif": 462, "quantifi": [424, 447, 462], "quantil": [30, 252, 254, 255, 256, 261, 265, 279, 281, 283, 285, 449], "quantiti": [30, 54, 449, 451, 453, 454, 460, 464], "quantum": 144, "qucb": [21, 404, 443, 447], "queri": [179, 189, 241, 243, 245, 427, 441, 449, 451, 452, 459], "question": [444, 449, 462], "quickli": 450, "qupperconfidencebound": 447, "qvarucb": 443, "r": [43, 399, 400, 401, 403, 404], "radial": 109, "radiu": [149, 443, 455], "rais": [13, 15, 30, 37, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 93, 97, 126, 134, 157, 158, 163, 164, 184, 185, 194, 196, 212, 214, 220, 226, 227, 230, 231, 243, 245, 249, 252, 254, 256, 260, 261, 262, 265, 279, 281, 283, 285, 292, 316, 329, 331, 334, 336, 339, 343, 344, 346, 347, 348, 350, 355, 356, 377, 383, 384, 395, 396, 414, 415, 416, 431, 442, 443, 444, 448, 456], "rand": 418, "random": [15, 110, 212, 214, 243, 245, 247, 284, 285, 346, 382, 383, 384, 398, 399, 400, 401, 404, 415, 416, 418, 422, 424, 427, 438, 441, 443, 447, 455, 456, 459, 464], "random_campaign": 398, "random_forest": [285, 404], "random_se": [243, 247, 415, 459], "randomforestmodel": 419, "randomforestsurrog": [404, 443, 460], "randomli": [196, 209, 398, 400, 427, 447, 453, 456], "randomrecommend": [398, 399, 400, 401, 404, 409, 410, 411, 412, 414, 415, 416, 422, 424, 426, 443, 448, 456], "rang": [43, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 295, 346, 347, 398, 406, 407, 409, 410, 411, 412, 416, 421, 424, 426, 429, 430, 431, 438, 441, 443, 450, 457, 458, 459, 461, 464], "rank": 461, "rare": 443, "rastrigin": [406, 407, 430, 431], "rate": [170, 252, 424], "rather": [433, 442, 447, 458], "ration": 111, "ravel": [427, 437, 438], "raw": [196, 458], "rbf": 109, "rbfkernel": 443, "rdf": 149, "rdffingerprint": 149, "rdkit": [149, 409, 411, 412, 443, 450, 455], "rdkit2ddescriptor": [149, 400, 409, 411, 412, 443], "rdkit2ddescriptorsfingerprint": 149, "rdkitfingerprint": 149, "re": [415, 430, 431, 444, 456], "reach": [305, 307, 426], "reachabl": 451, "reactant": [453, 455], "reaction": [400, 403, 441, 450, 453, 455, 462], "reactor": [448, 462], "reactora": 462, "reactorb": 462, "reactorc": 462, "read": [144, 214, 375, 400, 403, 441, 443, 444], "read_excel": [399, 400, 401, 415], "readabl": [219, 357, 366, 433, 443, 445, 446, 458], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 243, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 444, 448], "readm": [443, 444], "reagent": [450, 455], "real": [362, 441, 449, 461], "realist": 459, "realiz": [241, 459], "reason": [41, 203, 204, 205, 206, 400, 430, 443, 446, 447, 448, 450, 451, 455, 459], "reassembl": 458, "rebas": 444, "rec": [409, 410, 411, 412, 426, 448, 449], "rec_finish": 448, "rec_next": 448, "rec_par": 427, "rec_pend": 448, "rec_y0": 427, "rec_y1": 427, "receiv": [446, 451, 458], "recip": 444, "recipi": 446, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 72, 80, 81, 93, 138, 141, 142, 144, 152, 155, 157, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 241, 243, 257, 259, 260, 311, 346, 348, 350, 398, 399, 400, 401, 402, 406, 407, 409, 410, 411, 412, 414, 415, 416, 422, 424, 426, 427, 434, 435, 437, 438, 439, 440, 441, 443, 444, 447, 451, 453, 455, 459, 460, 462, 463, 464], "recommendation_orig": 433, "recommendation_recr": 433, "recommended_arm_idx": 424, "recommender_with_hook": 415, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 93, 181, 183, 184, 185, 186, 191, 257, 259, 414, 416, 440, 443, 448], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 212, 214, 220, 237, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 362, 441, 449, 451, 458], "record": [30, 311, 312, 441, 451, 462], "recreat": [272, 433, 458], "recreate_model": 419, "recurs": [181, 183, 184, 185, 186, 324, 325], "red": 427, "redesign": 443, "redistribut": 446, "reduc": [155, 416, 424, 437, 438, 452, 455], "reduct": 463, "ref": 441, "refactor": 443, "refer": [13, 241, 277, 330, 346, 355, 369, 399, 400, 401, 404, 406, 407, 409, 410, 411, 412, 414, 416, 418, 419, 421, 426, 430, 431, 433, 442, 443, 449, 453, 454, 455, 456, 457, 458, 459, 460, 462], "referenc": 444, "reference_point": 13, "refin": [415, 441, 443, 449, 452], "reflect": [188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 416, 443, 444, 447, 450, 455], "regard": [33, 39, 406, 407, 444, 446], "regardless": 460, "regim": [443, 453], "region": 159, "regist": [331, 413, 415], "register_custom_architectur": 443, "register_hook": [413, 414, 415, 416, 443], "registr": 443, "regress": 279, "regressor": 418, "regret": [19, 20], "regroup": 443, "regular": [20, 157, 289, 429, 442, 443, 448, 462], "reinstal": 441, "rel": [13, 43, 243, 347, 450, 454], "relat": [54, 120, 125, 127, 130, 132, 145, 214, 232, 299, 314, 431, 437, 438, 440, 441, 443, 449, 450, 451, 462], "relationship": [437, 438, 441, 444, 454, 462], "relative_perc": 348, "relative_threshold": [43, 443, 450], "releas": [441, 443], "relev": [52, 93, 245, 355, 356, 410, 421, 443, 444, 449, 450, 452, 462, 464], "reli": [442, 443, 454], "reliabl": 455, "remain": [55, 157, 186, 249, 306, 398, 404, 409, 410, 411, 412, 421, 424, 426, 431, 433, 437, 438, 446, 455, 458, 459], "remain_switch": [186, 443], "remaind": 384, "remind": 443, "remot": 444, "remov": [51, 54, 55, 214, 220, 421, 444, 450, 457], "renam": [400, 437, 438, 443, 444], "render": [93, 418], "reoccur": 462, "reorder": 443, "reorgan": 443, "repeat": [424, 443, 444, 448, 449], "repetit": [247, 404, 415], "rephras": 450, "replac": [430, 431, 443, 444], "replic": [252, 254, 256, 259, 261, 265, 279, 281, 283, 285, 443, 458, 463], "repo": 443, "report": [178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 424, 442], "repositori": [400, 441, 444], "repr": 418, "repres": [13, 37, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 113, 114, 144, 214, 249, 252, 254, 256, 259, 261, 265, 279, 281, 283, 285, 343, 358, 362, 366, 383, 398, 421, 422, 424, 427, 434, 435, 441, 443, 446, 449, 454, 455, 457, 459, 464], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 237, 252, 254, 256, 257, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 336, 338, 343, 346, 357, 362, 377, 409, 410, 411, 412, 418, 420, 426, 433, 443, 448, 449, 455, 458, 459, 463, 464], "reproduc": [415, 424, 427, 443, 446, 463], "reproduct": 446, "request": [30, 80, 81, 126, 184, 185, 186, 227, 252, 254, 255, 256, 261, 265, 268, 279, 281, 283, 285, 309, 350, 383, 384, 427, 440, 443, 448, 449, 452], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 43, 44, 50, 79, 186, 220, 292, 331, 403, 414, 415, 418, 422, 424, 426, 430, 434, 440, 441, 442, 443, 444, 446, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464], "rerun": 418, "reserv": [441, 444], "reset_index": 437, "reshap": 427, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 410, 412, 421, 458], "resolv": 340, "resort": [289, 444, 458, 464], "resource_track": 442, "resp": [215, 401, 431], "respect": [30, 196, 215, 243, 247, 310, 315, 346, 421, 422, 444, 449, 450, 452, 453, 454, 458, 459, 460, 461, 464], "respond": 440, "respons": [181, 183, 184, 185, 186, 446, 449, 456], "restart": [184, 196], "restor": 458, "restr": 20, "restrain": 455, "restrict": [214, 220, 241, 247, 249, 409, 422, 443, 452, 459, 462, 463], "result": [10, 13, 30, 155, 157, 220, 243, 252, 254, 256, 261, 265, 279, 281, 283, 285, 346, 354, 399, 400, 401, 403, 418, 419, 421, 422, 424, 426, 427, 429, 437, 438, 441, 443, 445, 446, 447, 449, 450, 451, 453, 455, 456, 458, 459, 462, 463, 464], "result_baselin": [437, 438], "result_fract": 438, "results_interrupt": 415, "results_uninterrupt": 415, "retain": [446, 450], "retrain": [260, 261, 460], "retriev": [214, 241, 323, 324, 325, 339, 444, 459], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 93, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 120, 121, 123, 125, 126, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 198, 201, 203, 204, 205, 206, 208, 209, 212, 214, 216, 217, 220, 221, 222, 223, 225, 226, 227, 230, 231, 233, 234, 235, 237, 239, 240, 243, 245, 247, 249, 252, 254, 256, 257, 259, 261, 262, 265, 268, 269, 273, 279, 281, 283, 285, 287, 288, 289, 291, 292, 295, 297, 303, 305, 306, 307, 309, 310, 311, 312, 315, 316, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 366, 371, 372, 373, 375, 376, 377, 383, 384, 386, 391, 392, 393, 394, 395, 396, 398, 409, 415, 416, 418, 421, 424, 427, 437, 443, 449, 450, 459, 460, 464], "return_std": 418, "reus": [186, 443], "reuse_last": 184, "reveal": [416, 422, 438], "review": 444, "revis": [443, 446], "reward": [8, 424], "rework": 443, "rewrit": 443, "rff": 110, "rffkernel": 443, "rh": [44, 46, 47, 406, 407, 422, 450], "right": [44, 175, 355, 362, 399, 401, 410, 424, 441, 442, 444, 446, 450, 452, 454, 455, 461], "right_df": 355, "rihana": 445, "rim": 445, "risk": [8, 442, 446, 449], "roam": 442, "robust": [441, 443, 462], "robustli": 289, "role": [443, 444, 449, 453, 454, 459, 461, 463], "room": [416, 449], "root": [400, 441, 444, 450], "round": [357, 406, 418, 419, 450], "roundtrip": [443, 458], "rout": 458, "routin": 43, "row": [13, 37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 126, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 245, 311, 315, 316, 347, 350, 354, 355, 357, 373, 399, 401, 409, 410, 411, 412, 421, 422, 426, 433, 443, 449, 452, 457, 459], "rowei": 462, "roya": 445, "royalti": 446, "rq": 111, "rqkernel": 443, "ruff": [443, 444], "rule": [414, 443], "run": [243, 247, 399, 400, 401, 415, 416, 437, 438, 441, 442, 443, 444, 449, 452, 455, 458, 459, 464], "run_full_initial_data": 399, "run_impute_mod": 401, "runner": [409, 411, 412], "runtim": [369, 442], "runtimeerror": [30, 184, 414], "rv": 424, "s3": 443, "s41586": [277, 353], "safe": [443, 444, 449], "safeti": 331, "sai": 450, "said": 444, "sake": 421, "same": [54, 134, 186, 220, 226, 245, 252, 254, 256, 261, 265, 279, 281, 283, 285, 326, 404, 415, 418, 419, 421, 424, 427, 433, 442, 443, 450, 451, 452, 458, 459, 460, 462], "sampl": [10, 15, 20, 43, 196, 208, 209, 212, 312, 381, 382, 383, 384, 399, 404, 409, 410, 411, 412, 424, 426, 427, 429, 433, 438, 441, 443, 445, 453, 463], "sample_from_full_factori": [212, 443], "sample_inactive_paramet": 43, "sample_uniform": [212, 427, 429, 443, 459], "sampler": [404, 409, 410, 411, 412, 426, 433], "samples_full_factori": [212, 443], "samples_random": [212, 443], "sampling_algorithm": [382, 447], "sampling_fract": [15, 447], "sampling_method": [15, 447], "sampling_n_point": [15, 447], "sampling_percentag": [196, 456], "satisfi": [39, 40, 41, 220, 406, 407, 421], "save": [375, 399, 401, 418, 443, 459], "savefig": [399, 401, 427], "sca": 427, "scalar": [12, 125, 426, 441, 443, 449, 454, 458], "scale": [115, 171, 172, 173, 174, 175, 212, 214, 220, 386, 426, 427, 437, 443, 447, 454], "scalekernel": 443, "scaler": 443, "scaling_bound": [212, 214, 220], "scatter": [93, 95], "scenario": [249, 398, 399, 400, 401, 415, 421, 437, 438, 448, 450, 454, 462, 463, 464], "scene": [454, 459, 460], "schema": 449, "schembl15068049": [399, 400, 401], "scheme": [443, 450], "scienc": [441, 445], "scientif": [443, 462], "scikit": [149, 441, 443, 445, 455], "scipi": [373, 416, 424, 443], "scm": 443, "scope": 398, "screen": [326, 462], "script": [340, 442, 443, 451, 464], "seaborn": [398, 399, 400, 401, 415, 437, 438], "seamlessli": 458, "search": [15, 25, 30, 37, 51, 54, 67, 72, 81, 85, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 220, 224, 243, 247, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 311, 355, 356, 398, 401, 403, 405, 408, 409, 410, 411, 412, 414, 415, 416, 424, 426, 428, 433, 438, 443, 445, 448, 449, 450, 451, 452, 453, 456, 458, 459, 463], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 93, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 215, 219, 220, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 398, 400, 403, 414, 415, 416, 418, 419, 421, 422, 424, 427, 429, 433, 434, 435, 437, 439, 441, 443, 449, 450, 451, 452, 453, 455, 457, 458, 459, 464], "searchspace1": 429, "searchspace2": 429, "searchspace3": 429, "searchspace_ful": 452, "searchspace_json": 458, "searchspace_reduc": 452, "searchspacetyp": [188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 214, 404, 409, 410, 411, 412, 415, 416, 426, 433, 457], "secfp": 149, "secfpfingerprint": 149, "second": [354, 371, 373, 418, 419, 426, 427, 435, 437, 450, 451, 453], "secondari": [441, 451], "section": [441, 443, 444, 446, 458], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 30, 33, 34, 35, 36, 37, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 85, 93, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 165, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 243, 247, 249, 252, 254, 256, 257, 259, 261, 265, 268, 275, 277, 279, 281, 283, 285, 295, 297, 303, 308, 329, 335, 348, 354, 359, 362, 386, 399, 400, 401, 406, 407, 414, 415, 419, 422, 431, 440, 441, 444, 449, 451, 452, 453, 454, 455, 458, 459, 463], "seed": [243, 247, 379, 380, 415, 416, 424, 427, 441, 443, 464], "seek": [426, 454], "seem": [369, 435, 442], "seen": 447, "select": [6, 39, 40, 41, 69, 73, 79, 181, 183, 184, 185, 186, 189, 196, 206, 208, 252, 254, 256, 261, 265, 279, 281, 283, 285, 306, 354, 383, 404, 410, 411, 421, 422, 424, 431, 441, 443, 447, 449, 450, 453, 455, 456, 458, 460], "select_recommend": [181, 183, 184, 185, 186, 443], "selectivity_mean": 449, "selectivity_mod": 449, "selectivity_q_0": 449, "selectivity_std": 449, "self": [331, 344, 391, 392, 393, 394, 414, 415, 416, 424, 444], "sell": 446, "semant": [443, 458], "sens": [56, 130, 331, 335, 354, 450, 455, 460], "sent": 446, "sentinel": [319, 320], "separ": [247, 249, 289, 329, 386, 387, 416, 440, 443, 444, 446, 458], "sequenc": [30, 40, 44, 113, 114, 125, 130, 141, 142, 144, 155, 163, 184, 185, 212, 214, 220, 221, 222, 225, 252, 254, 256, 259, 261, 265, 279, 281, 283, 285, 311, 315, 316, 331, 332, 341, 344, 349, 355, 356, 359, 373, 449, 454, 456], "sequenti": [183, 184, 185, 186, 196, 404, 409, 410, 411, 412, 426, 433, 443, 456], "sequential_continu": [196, 443, 456], "sequential_greedy_x": 443, "sequentialgreedyrecommend": 443, "sequentialmetarecommend": [185, 456], "sequentialstrategi": 443, "seri": [30, 39, 40, 41, 51, 138, 141, 142, 144, 152, 155, 295, 297, 303, 409, 421, 443, 450, 452], "serial": [185, 220, 237, 312, 418, 439, 442, 443, 444, 450, 456, 463], "serializ": [441, 450, 456], "serialize_datafram": 458, "serialized_df": 239, "serializetostr": 418, "serialmixin": [23, 30, 34, 39, 102, 120, 139, 167, 181, 212, 214, 220, 256, 259, 268, 295, 297, 303, 362, 443], "serv": [249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 355, 437, 438, 449, 450, 455], "servic": 446, "session": [261, 451, 458], "set": [13, 30, 33, 41, 43, 54, 56, 63, 64, 93, 97, 155, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 243, 247, 272, 310, 346, 353, 354, 375, 379, 380, 399, 400, 401, 402, 404, 409, 411, 414, 419, 420, 421, 422, 424, 426, 431, 440, 441, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464], "set_box_aspect": 416, "set_dash": 415, "set_random_se": [416, 424, 427, 464], "set_size_inch": [399, 401], "set_x_pend": 25, "set_xlabel": 416, "set_xtick": 416, "set_xticklabel": 416, "set_ylabel": 416, "set_ylim": 416, "set_zlabel": 416, "setpoint": 152, "setup": [243, 415, 450, 459, 464], "sever": [62, 158, 179, 398, 400, 404, 415, 418, 424, 426, 429, 438, 441, 443, 444, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 464], "sh": 453, "shall": [184, 348, 446, 454], "shap": [93, 441, 443, 445, 460, 463], "shap_valu": 460, "shape": [20, 212, 219, 301, 305, 307, 383, 427, 457, 464], "shapinsight": [91, 92, 94, 95, 443, 453], "shaplei": 93, "share": [252, 254, 256, 261, 265, 279, 281, 283, 285, 443, 446, 462], "shield": [277, 353, 400, 441, 455], "shift": 437, "shifted_hartmann": 437, "ship": [387, 451, 458], "shm": 442, "short": 444, "shortcut": [220, 457, 458], "shorten": [443, 444], "shot": 462, "should": [30, 43, 52, 93, 155, 186, 235, 247, 300, 315, 316, 346, 348, 352, 353, 357, 361, 362, 363, 371, 375, 409, 411, 415, 418, 421, 422, 431, 435, 441, 443, 444, 448, 449, 450, 457, 459, 460, 462, 464], "show": [93, 399, 400, 401, 403, 404, 409, 410, 411, 418, 419, 421, 424, 431, 433, 434, 435, 437, 438, 450, 453], "showcas": 456, "shown": [415, 424, 438, 443, 449], "shrink": 416, "shutdown": 442, "side": [44, 157, 306, 443], "sigma": [172, 173, 174, 175, 305, 426, 445], "signal": [66, 454], "signatur": [87, 292, 329, 331, 416, 443, 444, 450, 458], "significantli": [220, 424, 437, 438, 450], "silenc": 444, "silent": [443, 450], "similar": [185, 442, 450, 451, 453, 455, 456, 457, 458, 462, 464], "similarli": [427, 455], "simpl": [19, 20, 321, 400, 414, 415, 422, 441, 443, 449, 456, 459, 461, 462], "simpler": [444, 458], "simplest": [457, 460], "simplex": [220, 463], "simplex_paramet": [220, 421, 457], "simpli": [335, 414, 415, 444, 450, 452, 454, 455, 456, 457, 458, 461, 462], "simplic": 331, "simplifi": 444, "simul": [82, 348, 411, 416, 441, 443, 462, 463], "simulate_experi": [247, 249, 459], "simulate_scenario": [249, 398, 399, 400, 401, 415, 437, 438, 459], "simulate_transfer_learn": [437, 459], "simulationresult": 424, "simultan": [454, 460], "sinc": [56, 157, 214, 260, 331, 399, 406, 407, 419, 430, 433, 434, 435, 437, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 458, 459, 460, 462], "singer": 462, "singl": [20, 30, 39, 52, 93, 117, 132, 157, 212, 214, 220, 243, 252, 254, 256, 259, 261, 265, 279, 281, 283, 285, 295, 297, 303, 362, 370, 377, 383, 389, 399, 400, 401, 410, 415, 421, 426, 437, 438, 441, 443, 449, 450, 451, 452, 453, 454, 455, 457, 460, 462, 463], "single_lin": 377, "single_y0": 427, "single_y1": 427, "singledispatch": 364, "singletargetobject": [30, 295, 297, 303, 399, 400, 401, 403, 404, 409, 410, 411, 412, 415, 418, 419, 433, 434, 435, 441, 443, 460, 463], "site": [409, 411, 412, 442], "situat": [157, 409, 411, 421, 442, 444, 448, 450, 454, 455, 458, 459, 462], "six": [421, 422], "size": [20, 100, 101, 102, 105, 107, 109, 110, 111, 184, 186, 214, 219, 220, 312, 366, 416, 418, 424, 430, 431, 437, 438, 449, 458, 459, 462, 464], "sk": 418, "skeleton": 443, "skfp": 149, "skicit": 443, "skin": 459, "skip": [217, 223, 443, 449], "skl2onnx": 418, "sklearn": [206, 369, 418, 442], "sklearnclusteringrecommend": [203, 204, 205, 443, 448], "slightli": [241, 400, 421, 459], "slot": [420, 424, 439, 443, 450], "slot1_amount": 421, "slot1_label": 421, "slot2_amount": 421, "slot2_label": 421, "slot3_amount": 421, "slot3_label": 421, "slow": [409, 411, 412, 457], "slowest": 443, "small": [313, 317, 406, 421, 437, 438, 443, 447, 455], "smaller": [30, 424, 449, 462], "smallest": [212, 355, 457], "smart": 441, "smartli": 421, "smile": [155, 338, 340, 341, 441, 455], "smoke": 443, "smoke_test": [375, 398, 399, 400, 401, 407, 409, 410, 412, 415, 416, 424, 427, 437, 438], "smooth": [105, 107, 175], "smoothedboxprior": 443, "smoother": 105, "sn": [398, 399, 400, 401, 415, 437, 438], "snippet": 451, "so": [30, 243, 260, 354, 401, 415, 421, 424, 430, 431, 441, 442, 449, 450, 451, 452, 454, 455, 456, 458, 461], "softwar": [441, 446], "sola": 445, "sole": 446, "solut": [74, 449, 450, 454, 457, 458, 462], "solv": [260, 410, 411, 421, 424], "solv_rdkit2ddesc": 411, "solvent": [399, 400, 401, 403, 404, 409, 410, 411, 412, 415, 419, 421, 422, 434, 435, 441, 450, 455], "solvent1": [421, 422], "solvent2": [421, 422], "solvent3": 421, "solvent4": 421, "solvent5": 421, "solvent8": 421, "solvent9": 421, "solvent_1": 450, "solvent_2": 450, "solvent_3": 450, "solvent_data": 415, "solvent_encoding1": 450, "solvent_encoding2": 450, "solvent_mordred_enc": 450, "solvent_rdkit2dd": [409, 412], "solvent_rdkit_enc": 450, "solvent_smil": 415, "solver": 459, "some": [52, 369, 399, 400, 401, 404, 409, 410, 411, 412, 415, 416, 418, 419, 421, 422, 427, 429, 430, 431, 433, 438, 448, 450, 451, 455, 456, 458, 459, 460, 464], "someth": [85, 435], "sometim": [450, 459], "somewhat": 451, "somewher": 449, "soon": [441, 449, 456], "sophist": [443, 452, 458], "sort": 160, "sourabh": 445, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 120, 121, 123, 125, 126, 128, 130, 132, 134, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 198, 201, 203, 204, 205, 206, 208, 209, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 230, 231, 233, 234, 235, 237, 239, 240, 243, 245, 247, 249, 252, 254, 256, 257, 259, 261, 262, 265, 267, 268, 269, 272, 273, 275, 277, 279, 281, 283, 285, 287, 288, 289, 291, 292, 295, 297, 300, 301, 303, 305, 306, 307, 309, 310, 311, 312, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 371, 372, 373, 375, 376, 377, 379, 380, 382, 383, 384, 386, 394, 395, 396, 441, 442, 443, 444, 446], "space": [10, 15, 24, 25, 30, 37, 44, 51, 54, 67, 72, 76, 81, 85, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 187, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 220, 223, 224, 243, 247, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 311, 355, 383, 398, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 424, 426, 427, 428, 430, 433, 438, 439, 443, 445, 448, 450, 451, 452, 453, 455, 456, 458, 459, 463], "span": [60, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 311, 414, 424, 429, 453], "speak": 462, "spec": [217, 223, 234], "special": [186, 441, 442, 446, 447, 452, 462, 464], "specif": [98, 158, 165, 206, 214, 217, 230, 247, 289, 323, 395, 414, 415, 430, 441, 444, 449, 450, 452, 455, 456, 457, 458, 459, 460, 461, 462], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 43, 52, 86, 97, 144, 155, 157, 158, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 233, 234, 243, 245, 247, 257, 305, 306, 307, 315, 330, 339, 346, 349, 355, 356, 383, 384, 400, 404, 406, 418, 419, 424, 426, 437, 441, 442, 443, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462], "speed": [220, 409, 411, 412, 437, 438, 451, 457], "speed_fast": 457, "speed_norm": 457, "speed_slow": 457, "speedup": [443, 462], "spell": 444, "spellcheck": 443, "sphinx": [443, 444], "split": [188, 448], "sporad": 443, "spread": 461, "sqrt": 450, "squar": [424, 427, 450], "squash": 444, "stabil": [443, 451], "stabl": [98, 165, 308], "stage": [449, 450, 458], "stand": 443, "standard": [6, 17, 289, 418, 443, 449, 455], "star": 421, "start": [243, 398, 414, 415, 416, 422, 424, 427, 442, 443, 448, 455, 456, 458, 459, 462], "startup": 443, "stat": [30, 252, 254, 256, 259, 261, 265, 279, 281, 283, 285, 309, 416, 422, 424, 449], "state": [181, 183, 184, 185, 186, 415, 421, 440, 443, 446, 449, 452], "stateless": [424, 440, 443, 452], "statement": [357, 430, 441, 446], "static": [13, 214, 220, 265, 441, 444, 462], "statist": [30, 252, 254, 255, 256, 261, 265, 279, 281, 283, 285, 312, 438, 441, 443, 451, 463], "statu": 449, "std": [30, 252, 254, 255, 256, 259, 261, 265, 279, 281, 283, 285], "std_threshold": 289, "stem": [442, 462], "step": [217, 223, 243, 421, 424, 440, 441, 444, 449, 454, 458, 460], "sterl": 445, "steven": 400, "still": [158, 346, 415, 424, 448, 450, 451, 453, 455, 460, 462, 464], "stop": [413, 439, 443, 444], "stop_on_pi": 415, "stoppag": 446, "storag": [449, 451, 458], "store": [25, 139, 289, 295, 416, 421, 424, 441, 443, 449, 464], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 85, 93, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 194, 196, 203, 204, 205, 206, 212, 214, 219, 220, 233, 237, 247, 249, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 298, 303, 305, 306, 307, 309, 312, 315, 316, 323, 329, 330, 336, 338, 340, 341, 343, 346, 349, 352, 353, 357, 362, 366, 372, 375, 376, 377, 419, 424, 434, 435, 437, 438], "straightforward": [461, 462], "strategi": [15, 196, 214, 241, 398, 424, 443], "stream": [327, 443, 451], "streamingsequentialmetarecommend": [184, 456], "streamingsequentialstrategi": 443, "streamlin": 444, "streamlit": [441, 443], "streibel": 445, "strict": 329, "strictli": [419, 434, 435], "stride": 406, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 154, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 212, 214, 220, 237, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 336, 340, 341, 343, 344, 352, 362, 377, 418, 433, 443, 449, 450, 455, 461, 463], "strip": [243, 401], "strong": 443, "strongli": 449, "strtobool": [443, 451], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 48, 123, 233, 441, 442, 443, 444, 445, 449, 455, 458], "studi": [179, 441, 453, 456, 463], "style": [117, 437, 443, 444], "sub": [206, 443, 453, 458], "subclass": [86, 233, 323, 325, 335, 404, 443, 444, 456, 458], "subfold": 451, "subgraph": 455, "subgroup": 422, "subject": 446, "sublicens": 446, "submiss": [443, 446], "submit": [25, 309, 311, 441, 444, 446], "subpackag": [443, 444, 459], "subplot": 427, "subselectioncondit": [410, 411, 443, 452, 463], "subsequ": [186, 214, 220, 247, 340, 440, 446, 449, 458, 460], "subset": [30, 120, 125, 130, 132, 155, 214, 326, 356, 383, 449, 450, 452, 455], "subspac": [25, 60, 188, 196, 211, 212, 214, 216, 218, 220, 406, 409, 410, 411, 412, 426, 429, 431, 433, 443, 450, 456, 458, 463, 464], "subspace_continu": 60, "subspace_json": 458, "subspacecontinu": [30, 60, 137, 151, 214, 216, 429, 443, 457], "subspacediscret": [30, 138, 141, 142, 144, 152, 155, 214, 216, 219, 409, 410, 411, 412, 421, 426, 433, 443, 457, 458, 464], "substanc": [149, 155, 339, 400, 403, 409, 411, 412, 422, 443, 450, 453, 455, 462], "substance_12": 450, "substance_3": 450, "substance_43": 450, "substance_data": 443, "substance_encod": 400, "substanceencod": [155, 339, 341, 409, 410, 411, 412, 443, 455], "substanceparamet": [399, 400, 401, 403, 404, 409, 410, 411, 412, 415, 419, 421, 434, 435, 441, 443, 450, 451, 453, 457, 463], "substanti": [155, 464], "substrat": 462, "subtyp": 458, "success": [297, 383, 424, 458], "success_valu": 297, "suffic": 444, "suffici": [415, 457, 458], "suggest": [453, 459], "suit": 444, "suitabl": [206, 220, 243, 336, 444, 447, 449, 455, 459, 460, 462], "sum": [58, 113, 220, 398, 408, 409, 410, 411, 415, 421, 422, 424, 427, 439, 450, 454, 457], "sum_": [450, 454], "sum_constraint": 421, "sum_constraint_1": 412, "sum_constraint_2": 412, "sum_toler": 421, "summar": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 137, 138, 139, 141, 142, 144, 151, 152, 155, 295, 297, 303], "summari": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 137, 138, 139, 141, 142, 144, 151, 152, 155, 295, 297, 303, 443, 444], "superior": 447, "supersed": 446, "support": [10, 30, 91, 92, 93, 94, 95, 185, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 369, 404, 409, 410, 411, 412, 415, 416, 418, 421, 426, 433, 441, 443, 444, 445, 446, 450, 453, 455, 456, 457, 459, 460], "supports_batch": 443, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 252, 254, 256, 261, 265, 279, 281, 283, 285, 443, 460], "supports_pending_experi": 443, "supports_transfer_learn": [252, 254, 256, 261, 265, 279, 281, 283, 285, 460], "suppos": [311, 450], "sure": [421, 429, 441, 444], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 73, 75, 93, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 194, 196, 203, 204, 205, 206, 212, 214, 220, 252, 254, 257, 259, 261, 265, 267, 268, 272, 275, 277, 279, 281, 283, 285, 409, 410, 411, 412, 416, 424, 426, 433, 439, 441, 443, 445, 449, 450, 453, 455, 456, 462, 463], "surrogate_model": [194, 196, 404, 416, 418, 419, 424, 434, 435, 443], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 93, 194, 196, 256, 259, 443], "svg": [375, 427], "sw": 410, "swiss": 445, "switch": [52, 182, 185, 186, 289, 404, 409, 410, 411, 412, 424, 426, 433, 441, 443, 450, 456], "switch1": 410, "switch2": 410, "switch2_left": 410, "switch2_right": 410, "switch_1": 450, "switch_2": 450, "switch_aft": [186, 434, 435, 456], "switzerland": 445, "sy": 442, "symmetri": 450, "syntax": [441, 443], "synthet": [406, 407, 416, 427, 437, 438], "system": [400, 424, 441, 442, 446, 451, 459, 462], "t": [287, 288, 328, 336, 399, 400, 401, 403, 404, 411, 416, 427, 437, 438, 440, 452, 455, 458, 459], "t1": [458, 459], "t2": 458, "t3": 458, "t_1": 454, "t_2": 454, "t_3": 454, "t_i": 454, "tab": 427, "tabl": [357, 443, 449, 450, 453], "tabular": 459, "tag": [441, 443, 458], "tailor": 449, "take": [8, 48, 105, 138, 152, 157, 158, 252, 254, 256, 261, 265, 275, 279, 281, 283, 285, 298, 414, 421, 443, 448, 449, 450, 454, 455, 456, 462], "taken": [184, 415, 443, 449, 452, 454], "tantamount": 447, "target": [12, 13, 30, 76, 117, 120, 121, 125, 129, 130, 131, 132, 134, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 241, 243, 244, 245, 252, 254, 256, 259, 261, 265, 279, 281, 283, 285, 289, 297, 300, 301, 303, 331, 346, 349, 350, 356, 359, 371, 372, 378, 396, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 415, 416, 418, 419, 424, 430, 431, 433, 434, 435, 437, 438, 439, 441, 443, 448, 449, 451, 453, 458, 459, 460, 463], "target_1": [410, 411, 412, 426, 454, 461], "target_2": [426, 454, 461], "target_3": [426, 454], "target_3a": 461, "target_3b": 461, "target_a": 460, "target_b": 460, "target_cumbest": [398, 437, 438], "target_max": 449, "target_transform": 426, "targetmod": [303, 458, 461], "targetnam": 243, "targettransform": [303, 443, 461], "task": [142, 214, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 295, 297, 303, 424, 443, 449, 456, 458, 459, 462], "task_idx": [214, 443], "task_param": [437, 438, 459], "task_paramet": 458, "task_parameter_json": 458, "task_parameter_reconstruct": 458, "taskparamet": [227, 437, 438, 443, 452, 458, 459, 463], "tb": 464, "technic": [220, 448, 459, 462], "techniqu": [206, 456], "technologi": 445, "telemetri": [443, 445, 463], "tell": 310, "temp": [409, 411, 445], "temp_c": [399, 400, 401, 415], "temperatur": [399, 401, 403, 404, 409, 411, 414, 418, 419, 433, 450, 455, 457, 462], "temperature_resolut": 409, "temperature_valu": 415, "temporari": [116, 122, 197, 214, 380, 415, 443, 451, 458], "temporarili": [443, 464], "temporary_se": 464, "tempt": 462, "tenac": 443, "tend": 416, "tensor": [25, 44, 252, 287, 288, 349, 358, 362, 386, 388, 437, 443], "term": [108, 241, 415, 424, 444, 446, 449, 453, 457, 458, 459, 462], "termin": [415, 416, 442, 446], "terminologi": 463, "tert": [399, 400, 401, 403, 404], "test": [220, 243, 261, 346, 424, 437, 438, 441, 442, 443, 444, 449, 453, 459, 464], "test_funct": [406, 407, 416, 430, 431, 437, 438], "test_scenario": [399, 401], "testabl": [82, 243], "testfunct": [406, 407, 430, 431], "testfunctionclass": [406, 407, 430, 431], "text": [33, 376, 418, 427, 446, 450, 451, 454], "th": [316, 450], "than": [30, 64, 81, 152, 184, 185, 186, 196, 212, 214, 227, 316, 335, 350, 377, 384, 400, 411, 415, 422, 447, 450, 451, 453, 455, 458, 460], "thei": [158, 179, 189, 306, 352, 356, 404, 412, 415, 421, 424, 429, 443, 444, 448, 449, 450, 453, 455, 456, 457, 458, 461, 462, 464], "them": [37, 275, 347, 375, 404, 441, 442, 443, 444, 448, 450, 451, 452, 453, 455, 456, 458, 462], "theme": [375, 443], "theori": 446, "therebi": 220, "therefor": [43, 186, 252, 254, 256, 261, 265, 279, 281, 283, 285, 404, 442, 449, 458, 460, 462], "therein": 443, "thereof": 446, "thf": 450, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 181, 183, 184, 185, 186, 188, 196, 203, 204, 205, 206, 212, 214, 220, 241, 245, 247, 249, 252, 254, 256, 257, 259, 260, 261, 265, 275, 279, 281, 283, 285, 289, 312, 315, 331, 332, 335, 340, 346, 348, 350, 351, 353, 355, 357, 375, 398, 414, 415, 416, 418, 419, 421, 422, 424, 427, 429, 433, 434, 435, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464], "think": [424, 455], "third": [426, 446, 459], "thompson": [20, 445], "thomson": 20, "those": [62, 158, 186, 188, 241, 383, 404, 442, 446, 450, 459], "though": 462, "three": [400, 421, 422, 426, 427, 441, 449, 450, 453, 454, 456, 457, 462], "threshold": [41, 43, 144, 155, 157, 159, 186, 196, 289, 353, 406, 411, 412, 415, 421, 443, 450, 455], "thresholdcondit": [57, 58, 406, 411, 412, 421, 463], "through": [30, 214, 305, 315, 346, 356, 419, 421, 424, 426, 441, 443, 444, 446, 450, 454, 458, 459, 463], "throughout": 186, "throw": [340, 450], "thrown": [245, 401, 415, 434, 442, 454], "thu": [196, 331, 356, 399, 400, 406, 407, 409, 410, 411, 412, 418, 419, 421, 424, 426, 430, 431, 433, 442, 444, 449, 451, 452, 455, 456, 458, 459, 462, 464], "tick": 416, "tight_layout": 427, "time": [10, 196, 312, 384, 407, 414, 421, 424, 441, 443, 448, 449, 450, 452, 455, 458, 459, 460, 464], "timeout": [443, 451], "timer": 414, "titl": [427, 446], "tl": 437, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 44, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 415, 416, 443], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 212, 214, 220, 237, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 362], "to_factori": [100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115], "to_fram": 398, "to_gpytorch": [100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 167, 169, 170, 171, 172, 173, 174, 175, 443], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 212, 214, 220, 237, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 295, 297, 303, 362, 418, 419, 433, 449, 458], "to_keep": 354, "to_ndarrai": 362, "to_numpi": 427, "to_object": [295, 297, 303, 398, 406, 407, 416, 424, 427, 430, 431, 437, 438, 454, 459], "to_polar": [39, 40, 41], "to_searchspac": [137, 138, 139, 141, 142, 144, 151, 152, 155, 212, 220, 424, 429, 443, 452], "to_subspac": [137, 138, 141, 142, 144, 151, 152, 155, 443], "to_tensor": [362, 415, 416, 418, 443], "to_tupl": [362, 427], "togeth": [37, 68, 316, 404, 424, 431, 441, 443, 450], "toggl": 30, "toggle_discrete_candid": [30, 443, 452], "toler": [30, 41, 152, 220, 395, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 415, 418, 419, 421, 426, 430, 431, 433, 434, 435, 441, 443, 450], "tolist": 406, "toluen": 455, "toml": 443, "too": [406, 459, 462], "tool": [337, 443, 450, 458], "toolbox": 441, "top": [443, 444], "topic": 449, "topolog": 455, "topologicaltors": 149, "topologicaltorsionfingerprint": 149, "torch": [349, 362, 415, 416, 418, 437, 443], "toronto": 445, "tort": 446, "total": [185, 186, 383, 421, 422, 424, 457], "total_bas": 422, "total_phase_ag": 422, "toward": [169, 346, 450], "towel": 440, "tox": [409, 411, 412, 441, 443, 444], "tracebackexcept": 442, "track": [178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 220, 415, 446, 452], "trade": [8, 446, 454], "trademark": 446, "tradit": [400, 420, 421, 439, 441, 443], "train": [78, 93, 178, 184, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 249, 252, 254, 256, 257, 259, 260, 261, 265, 279, 281, 283, 285, 289, 417, 427, 437, 438, 443, 459], "train_i": 418, "train_x": 418, "training_funct": 438, "trajectori": [241, 398, 415, 424, 449, 459], "transfer": [248, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 404, 409, 410, 411, 412, 426, 433, 437, 439, 441, 443, 446, 455, 460, 463], "transform": [30, 78, 120, 125, 130, 132, 138, 139, 141, 142, 144, 152, 155, 212, 214, 220, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 295, 297, 301, 303, 341, 349, 356, 359, 362, 363, 386, 409, 410, 411, 412, 433, 443, 446, 451, 455, 460, 461], "transform_rep_exp2comp": 443, "transit": 443, "translat": [37, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 443, 446, 452, 455], "transmiss": 458, "transmit": 312, "travers": 443, "treasur": 463, "treat": [155, 159, 252, 254, 256, 261, 265, 279, 281, 283, 285, 400, 441, 450, 455, 461, 464], "tree": 443, "tremend": 400, "trend": 462, "tri": 457, "triangl": 307, "triangular": [301, 307, 426, 461], "tricki": 453, "tricyclohexylphosphin": [399, 400, 401], "trigger": [184, 315, 415, 419, 424, 443, 444, 448, 454, 458], "trivial": [268, 281, 454, 455, 460], "true": [6, 12, 13, 14, 16, 30, 33, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 93, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 196, 214, 265, 297, 306, 324, 325, 329, 335, 336, 354, 377, 395, 400, 404, 406, 407, 409, 410, 411, 412, 416, 418, 419, 421, 424, 426, 430, 431, 433, 434, 435, 437, 438, 443, 449, 450, 451, 452, 453, 455, 458], "truncat": [441, 451], "trust": [418, 451], "truth": 336, "truthi": 451, "try": [85, 346, 399, 400, 401, 415, 418, 419, 435, 442, 443, 464], "tune": 441, "tupl": [13, 30, 40, 44, 100, 101, 102, 105, 107, 109, 110, 111, 113, 114, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 160, 212, 214, 219, 220, 288, 315, 322, 329, 332, 344, 346, 358, 362, 366, 386], "turn": [43, 212, 220, 252, 254, 256, 261, 265, 279, 281, 283, 285, 366, 429, 441, 442, 443, 450, 451], "turnaround": 459, "twice": [452, 454], "two": [13, 33, 54, 63, 64, 126, 186, 196, 241, 316, 321, 349, 371, 383, 398, 399, 401, 414, 421, 424, 426, 427, 431, 437, 438, 440, 441, 443, 444, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "twofold": 424, "twophasemetarecommend": [399, 401, 404, 409, 410, 411, 412, 415, 416, 418, 419, 424, 426, 431, 433, 434, 435, 441, 443, 456], "twophasestrategi": 443, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 121, 123, 125, 126, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 154, 155, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 198, 201, 203, 204, 205, 206, 208, 209, 212, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 227, 230, 231, 233, 234, 235, 237, 239, 240, 243, 245, 247, 249, 252, 254, 255, 256, 257, 259, 261, 262, 265, 268, 269, 273, 279, 281, 283, 285, 287, 288, 289, 291, 292, 295, 297, 298, 303, 305, 306, 307, 309, 310, 311, 312, 315, 316, 318, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 362, 363, 364, 366, 368, 369, 371, 372, 373, 375, 376, 377, 383, 384, 386, 388, 391, 392, 393, 394, 395, 396, 400, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 422, 424, 426, 433, 434, 435, 441, 443, 444, 446, 447, 450, 453, 454, 455, 456, 457, 460, 462, 463], "typealia": 298, "typeerror": [30, 93, 97, 243, 252, 254, 256, 261, 265, 279, 281, 283, 285, 331, 346, 347, 384, 395, 396, 415, 416], "typeguard": 328, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 212, 214, 220, 225, 233, 234, 237, 252, 254, 256, 259, 261, 265, 268, 279, 281, 283, 285, 288, 295, 297, 303, 325, 326, 327, 328, 344, 349, 356, 362], "typic": [15, 331, 377, 400, 441, 448, 449, 453, 455, 458, 464], "typing_extens": 444, "typo": [443, 444], "u": [20, 398, 399, 400, 401, 414, 416, 421, 422, 424, 429, 438, 441, 447, 450, 454], "ucb": [8, 404, 443, 447, 458], "ultim": 444, "ultra": [434, 435], "un": 443, "unabl": 418, "unavail": 443, "unawar": 448, "unbound": [362, 414], "uncaught": 443, "uncertainti": [8, 15, 404, 463], "unchang": 157, "uncharacter": 462, "uncorrel": [353, 462], "undefin": [252, 452], "under": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 312, 356, 412, 416, 424, 427, 441, 442, 446, 448, 455], "underflow": 83, "underli": [30, 54, 415, 424, 441, 449, 453, 456, 458], "underscor": 443, "understand": [441, 462], "undesir": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 450, 452, 455, 464], "undo": 442, "unequ": 412, "unevenli": 455, "unexpect": 85, "unfinish": 448, "unfortun": 462, "unhandl": 443, "uniform": [212, 252, 347, 348, 443], "uniformli": 383, "uniniti": 335, "uninstal": [84, 441], "unintend": [88, 331, 443, 444], "unintention": 464, "union": [13, 30, 126, 159, 243, 247, 252, 254, 256, 261, 265, 279, 281, 283, 285, 305, 306, 307, 372, 431, 446, 457], "uniqu": [55, 134, 158, 421, 443, 455], "unit": [219, 366], "unknown": [185, 383, 398, 424, 443, 460, 462], "unlabel": 349, "unless": [441, 444, 446, 451, 455, 458], "unlik": [12, 13, 14, 16, 421, 454, 464], "unlock": 463, "unmaintain": 443, "unmatch": 329, "unmatchedattributeerror": 329, "unmeasur": [243, 401], "unnecessari": [443, 449], "unpromis": 415, "unreach": 443, "unrealist": 459, "unrecogn": 346, "unrestrict": 331, "unsaf": 443, "unspecifi": [320, 443, 458], "unspecifiedtyp": 30, "unsqueez": [415, 416], "unstructur": [235, 458], "unstructure_bas": 233, "unsupport": [212, 245], "until": [181, 183, 184, 185, 186, 243, 424, 441, 459], "untouch": 347, "untransform": [30, 460], "unusedobjectwarn": [415, 443, 448], "unveil": 438, "unwant": 37, "up": [30, 220, 243, 245, 398, 399, 400, 401, 402, 409, 411, 414, 416, 420, 421, 422, 427, 431, 437, 438, 441, 442, 443, 447, 450, 454, 464], "updat": [30, 400, 403, 443, 444, 448], "upgrad": 443, "upon": [188, 268, 442, 443, 444, 450, 457, 460, 462], "upper": [8, 21, 159, 175, 214, 220, 305, 306, 307, 362, 404, 416, 426, 427, 437, 438, 443, 450, 461, 464], "upper_bound": [409, 410, 411, 412, 433, 457], "upper_threshold": 159, "upperconfidencebound": [21, 447, 458], "upstream": 444, "urg": 453, "url": [451, 462], "us": [15, 20, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 66, 68, 72, 93, 105, 125, 126, 144, 149, 152, 155, 158, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 221, 222, 234, 243, 245, 247, 252, 254, 256, 261, 262, 265, 279, 281, 283, 285, 301, 311, 312, 318, 331, 332, 340, 341, 346, 348, 349, 355, 364, 368, 369, 375, 383, 388, 398, 406, 407, 413, 414, 415, 416, 417, 420, 421, 422, 429, 433, 434, 435, 437, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 461, 462, 463, 464], "usa": 445, "usabl": [335, 442, 443, 455, 458], "usag": [365, 441, 443, 450, 451, 456, 463], "use_comp_rep": [93, 97, 453], "use_torch": [349, 406, 407, 416, 430, 431, 437, 438], "user": [51, 52, 66, 79, 88, 144, 147, 252, 254, 256, 261, 265, 279, 281, 283, 285, 292, 309, 348, 403, 404, 409, 426, 435, 441, 442, 443, 444, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462], "userguid": 308, "usernam": [309, 443, 451], "userwarn": 442, "uses_shap_explain": 93, "usort": 443, "usr": 149, "usrcat": 149, "usrcatfingerprint": 149, "usrfingerprint": 149, "usual": [243, 399, 400, 401, 434, 442, 453, 455], "util": [30, 196, 212, 220, 252, 254, 256, 261, 265, 279, 281, 283, 285, 311, 318, 320, 321, 362, 382, 386, 398, 400, 403, 404, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 424, 426, 427, 430, 431, 437, 438, 441, 443, 447, 448, 453, 454, 455, 456, 458, 459, 460, 462, 463], "uv": 443, "v": 462, "val": [48, 123, 336, 437], "val_from_param1": 56, "val_from_param2": 56, "valid": [30, 33, 34, 35, 36, 37, 40, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 157, 158, 214, 217, 220, 223, 261, 350, 355, 409, 432, 434, 439, 442, 443, 444, 449, 450, 459], "validate_compat": 261, "validate_config": [30, 435, 443, 449], "validate_parameter_input": 30, "validate_target_input": 30, "valu": [6, 13, 25, 30, 33, 39, 40, 41, 43, 44, 52, 54, 76, 93, 104, 105, 106, 107, 108, 109, 110, 111, 115, 120, 125, 126, 130, 132, 138, 141, 142, 144, 146, 147, 149, 152, 155, 157, 158, 159, 162, 163, 164, 186, 203, 204, 205, 206, 212, 214, 220, 221, 222, 241, 243, 245, 247, 252, 254, 256, 261, 265, 279, 281, 283, 285, 297, 298, 300, 305, 306, 307, 312, 315, 319, 320, 326, 329, 336, 343, 346, 347, 348, 350, 352, 355, 356, 357, 362, 364, 371, 372, 373, 391, 392, 393, 394, 395, 396, 399, 400, 401, 403, 404, 406, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 424, 426, 427, 430, 431, 433, 434, 435, 437, 438, 441, 443, 444, 447, 449, 450, 451, 452, 453, 454, 461, 462, 463, 464], "valuabl": [456, 459], "valueerror": [13, 15, 30, 43, 62, 63, 64, 93, 97, 126, 134, 157, 158, 163, 164, 212, 214, 220, 226, 243, 245, 252, 254, 256, 261, 265, 279, 281, 283, 285, 292, 316, 329, 334, 336, 339, 343, 346, 348, 350, 355, 356, 377, 383, 384, 395, 396, 419, 431, 442], "var": [30, 252, 254, 255, 256, 259, 261, 265, 279, 281, 283, 285, 424, 463], "vari": [30, 220, 400, 454], "variabl": [33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 120, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 252, 254, 256, 261, 265, 279, 281, 283, 285, 295, 310, 312, 370, 375, 389, 430, 441, 443, 444, 450, 455, 456, 458, 460], "varianc": [8, 15, 104, 281, 351, 443, 447], "variance_initial_valu": 104, "variance_prior": 104, "variant": [404, 437, 453, 462], "variat": 427, "varieti": [430, 444, 458, 459], "variou": [362, 421, 428, 443, 448, 453, 456, 459], "varucb": 443, "vector": [33, 418, 443, 445, 454], "vendor": 455, "verbal": 446, "verbos": [419, 443], "veri": [409, 411, 426, 448, 451, 453, 455, 460, 464], "verifi": [335, 406, 409, 410, 411, 412, 421, 422, 429, 431, 433, 441, 444], "versa": [437, 462], "versatil": 456, "version": [214, 309, 369, 409, 411, 412, 421, 424, 429, 437, 438, 441, 442, 443, 444, 446, 458], "vert": 416, "via": [12, 15, 20, 29, 30, 43, 93, 186, 196, 208, 252, 254, 256, 257, 259, 261, 265, 279, 281, 283, 285, 311, 323, 331, 346, 354, 401, 407, 414, 415, 418, 429, 441, 443, 444, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 461, 462, 463], "via_init": 458, "via_json": 458, "viabl": [81, 426], "vice": [437, 462], "view": [212, 220, 416, 457], "view_init": 416, "violat": [37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 77, 443], "viridi": 416, "virtual": 444, "visibl": 443, "visual": [400, 437, 438, 453, 461], "volum": 462, "vpn": [441, 451], "vsa": 149, "vsafingerprint": 149, "vulner": [443, 444], "w_i": 454, "wa": [15, 69, 70, 73, 75, 76, 84, 88, 158, 186, 252, 254, 256, 261, 265, 279, 281, 283, 285, 343, 346, 350, 384, 400, 442, 443, 444, 446, 451, 453, 455, 458, 462], "wai": [214, 414, 421, 422, 428, 429, 437, 440, 441, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 464], "wall": 10, "want": [51, 404, 409, 421, 424, 431, 438, 441, 444, 450, 451, 452, 453, 455, 456, 458, 460, 461], "warn": [65, 332, 409, 411, 412, 415, 430, 431, 443, 444], "warranti": [441, 446], "watch": 414, "water": [409, 410, 411, 412, 421, 450, 455], "waterfal": [93, 95, 443], "we": [25, 241, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 422, 424, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 441, 442, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 462, 463, 464], "web": 444, "weber": 445, "weight": [117, 125, 126, 373, 426, 454, 458], "weight_kdalton": 455, "welcom": 444, "well": [309, 375, 404, 415, 420, 440, 444, 449, 450, 453, 455, 459], "were": [30, 346, 401, 438, 442, 443, 448, 450, 451, 455, 457], "what": [158, 184, 214, 241, 346, 386, 398, 418, 426, 435, 440, 444, 447, 449, 453, 455, 462, 463], "whatsnew": 321, "when": [13, 30, 43, 52, 85, 152, 157, 159, 184, 185, 186, 194, 196, 214, 252, 254, 256, 261, 262, 265, 279, 281, 283, 285, 292, 319, 320, 329, 331, 335, 346, 349, 377, 384, 409, 410, 412, 414, 419, 421, 422, 424, 426, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464], "whenev": [25, 184, 346, 458], "where": [13, 20, 25, 33, 37, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 241, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 315, 346, 383, 399, 400, 401, 404, 409, 411, 421, 424, 441, 442, 443, 444, 446, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462], "wherea": 458, "wherev": [446, 448], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 33, 34, 35, 36, 37, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 97, 137, 138, 139, 141, 142, 144, 151, 152, 155, 196, 212, 220, 252, 254, 256, 261, 265, 279, 281, 283, 285, 310, 348, 362, 421, 443, 446, 449, 451, 452, 461], "which": [13, 15, 30, 39, 40, 41, 43, 88, 93, 120, 125, 130, 132, 158, 159, 178, 179, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 214, 220, 247, 249, 252, 254, 256, 261, 265, 279, 281, 283, 285, 289, 311, 312, 331, 335, 346, 348, 353, 355, 357, 371, 372, 375, 386, 398, 400, 404, 407, 414, 415, 421, 422, 424, 429, 430, 431, 435, 437, 438, 441, 442, 443, 444, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464], "while": [214, 217, 223, 415, 424, 426, 438, 442, 443, 446, 447, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462], "whilst": 346, "whim": 149, "whimfingerprint": 149, "whole": 446, "whom": 446, "whose": [126, 157, 158, 214, 245, 326, 329, 349, 398, 414, 421, 448, 459], "wide": 459, "wider": 461, "width": 357, "wieczorek": 445, "william": 462, "willing": 449, "win": [252, 424], "win_rat": 424, "window": [443, 451], "winerror": 442, "wise": 373, "wish": 458, "within": [30, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 395, 429, 446, 450, 451, 455, 460, 462, 463, 464], "without": [185, 437, 438, 441, 443, 446, 448, 449, 450, 451, 455, 459, 462, 464], "won": 455, "work": [25, 286, 315, 349, 409, 411, 412, 415, 426, 433, 435, 441, 443, 444, 445, 446, 450, 451, 456, 458, 459], "workaround": [442, 443], "workflow": [418, 441, 449, 458, 463], "world": [441, 449], "worldwid": 446, "worst": [13, 243, 245, 247, 401], "would": [55, 83, 157, 158, 241, 243, 249, 260, 414, 421, 424, 441, 444, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 464], "wrap": [100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 265, 269, 287, 288, 331, 441, 443, 454], "wrapper": [1, 24, 247, 249, 261, 332, 437, 438, 441, 456], "write": [441, 442, 446, 458], "written": [430, 431, 444, 446], "wrong": [435, 443], "wrongli": 442, "www": [441, 446], "x": [25, 121, 159, 216, 243, 245, 269, 322, 328, 332, 344, 358, 371, 386, 398, 399, 400, 401, 409, 410, 411, 412, 415, 416, 421, 426, 433, 437, 438, 441, 443, 457, 460], "x0": [427, 457], "x0_mesh": 427, "x1": [427, 457], "x1_mesh": 427, "x2": 457, "x_": [398, 406, 407, 429, 430, 431], "x_1": [406, 407, 429, 430, 431, 450], "x_2": [406, 407, 429, 430, 431, 450], "x_3": [406, 407, 429, 430, 431, 450], "x_4": [406, 407, 429, 430, 431], "x_5": 431, "x_6": 431, "x_i": 450, "x_pend": 25, "xlabel": 427, "xlsx": [399, 400, 401, 415], "xpho": [399, 400, 401], "xxxx": 442, "xylen": [399, 400, 401, 403, 404], "y": [277, 336, 353, 371, 398, 399, 400, 401, 415, 416, 418, 421, 437, 438, 441, 462], "y0": 427, "y0_mesh": 427, "y1": 427, "y1_mesh": 427, "ye": 336, "year": 462, "yet": [25, 443, 448, 456], "yield": [6, 105, 255, 399, 400, 401, 403, 404, 409, 415, 418, 419, 421, 431, 433, 434, 435, 441, 443, 447, 453, 454, 458], "yield_cumbest": [399, 400, 401, 415], "yield_mean": 449, "yield_mod": 449, "yield_q_0": 449, "yield_std": 449, "ylabel": 427, "yml": 443, "you": [30, 51, 400, 404, 406, 414, 419, 421, 424, 430, 431, 434, 440, 441, 442, 444, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 464], "your": [400, 414, 421, 424, 431, 440, 441, 442, 443, 444, 446, 449, 450, 451, 452, 453, 455, 458, 459, 460, 461, 462, 464], "your_branch_nam": 444, "yourself": 424, "z": [416, 441], "zdir": 416, "zero": [43, 62, 64, 157, 159, 169, 351, 421, 424, 450, 462], "zip": [415, 416], "\u00b5fmt": 443, "\u0161o\u0161i\u0107": [441, 445]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 444, "0": 443, "01": 443, "02": 443, "03": 443, "04": 443, "05": 443, "06": 443, "07": 443, "08": 443, "09": 443, "1": 443, "10": 443, "11": 443, "12": 443, "13": 443, "14": 443, "15": 443, "16": 443, "17": 443, "19": 443, "2": 443, "2022": 443, "2023": 443, "2024": 443, "2025": 443, "21": 443, "23": 443, "24": 443, "27": 443, "28": 443, "29": 443, "3": 443, "31": 443, "4": 443, "5": 443, "6": 443, "7": 443, "8": 443, "9": 443, "A": 441, "For": 455, "On": 453, "The": [424, 434, 441, 452, 458, 459, 462], "abbrevi": 458, "acqf": 2, "acquisit": [1, 2, 22, 24, 26, 27, 28, 404, 448], "acquisitionfunct": 23, "action": 462, "activ": [447, 455], "activate_paramet": 157, "ad": [403, 443, 448, 449, 462, 464], "add_fake_measur": 346, "add_noise_to_perturb_degenerate_row": 347, "add_parameter_nois": 348, "addendum": 426, "addit": 421, "additivekernel": 113, "advanc": [441, 460], "altern": 458, "amount": 421, "an": 424, "appli": 452, "arm": [423, 424], "arm64": 442, "arrai": 459, "arrays_to_datafram": 349, "assembli": 458, "asynchron": 448, "attr": 444, "augment": [314, 315, 316], "auto": 460, "automat": 458, "avail": [404, 460], "avx": 442, "back": 441, "backtest": [397, 437], "bandit": [251, 423, 424], "base": [22, 32, 99, 119, 121, 136, 166, 177, 180, 190, 193, 200, 253, 255, 294, 399, 400, 401, 406, 407, 421, 422, 431, 452, 459], "basesequentialmetarecommend": 183, "basic": [103, 168, 317, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 402, 403, 449, 451, 453, 458], "basickernel": 100, "batch": 449, "batchify_ensemble_predictor": 287, "batchify_mean_var_predict": 288, "batteri": 441, "bayb": [0, 1, 2, 22, 24, 26, 27, 28, 29, 31, 32, 38, 42, 45, 46, 47, 48, 49, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 103, 112, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 129, 131, 133, 134, 135, 136, 140, 143, 145, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 176, 177, 179, 180, 182, 187, 189, 190, 192, 193, 195, 197, 198, 199, 200, 202, 207, 210, 211, 213, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 258, 260, 262, 263, 264, 266, 269, 270, 271, 273, 274, 276, 278, 280, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 403, 441, 444], "bayesian": [192, 193, 195, 197, 198, 441, 456], "bayesianlinearsurrog": 279, "bayesianrecommend": 194, "bell_transform": 305, "bernoulli": 424, "betabernoullimultiarmedbanditsurrog": 252, "betaprior": 169, "binari": [296, 298], "binarytarget": 297, "black": [398, 424], "block_deserialization_hook": 230, "block_serialization_hook": 231, "bo": 453, "boolean": [333, 334, 335, 336], "both": 433, "botorch": [195, 430], "botorchrecommend": 196, "bound": [414, 454, 457], "box": [398, 424], "break": 443, "build": [424, 457], "bytes_to_human_read": 366, "cach": [449, 451], "call": 452, "callabl": [406, 407, 431, 459], "campaign": [29, 30, 398, 399, 400, 401, 404, 406, 407, 409, 410, 412, 415, 418, 419, 426, 427, 430, 431, 433, 434, 449], "candid": [449, 452], "cardinalityconstraint": 33, "case": 424, "catch_constant_target": 289, "categor": 140, "categoricalencod": 146, "categoricalparamet": [141, 455], "caution": 452, "challeng": 450, "chang": 443, "changelog": 443, "check_if_in": 334, "chemic": 441, "chemistri": [337, 338, 339, 340, 341], "choicevalu": 298, "class": 444, "classproperti": 321, "clone": 441, "closer_el": 371, "closest_el": 372, "cluster": [202, 456], "code": 444, "columntransform": 386, "compar": 433, "compon": 414, "composit": [112, 258, 460], "compositekernel": 101, "compositesurrog": 259, "comput": [450, 453], "condit": [38, 39, 450], "config": [434, 435, 449], "configur": [418, 419, 434, 452, 454, 458], "constraint": [31, 32, 34, 38, 42, 45, 46, 47, 48, 49, 59, 60, 61, 62, 63, 64, 405, 406, 407, 408, 409, 410, 411, 412, 421, 422, 450, 452, 457, 464], "construct": [399, 400, 401, 406, 407, 421, 430, 431, 454, 457], "constructor": [457, 458], "continu": [42, 211, 405, 407, 421, 429, 447, 450, 455, 457, 462, 464], "continuouscardinalityconstraint": [43, 450], "continuousconstraint": 35, "continuouslinearconstraint": [44, 450], "continuouslinearequalityconstraint": 46, "continuouslinearinequalityconstraint": 47, "continuousnonlinearconstraint": 36, "continuousparamet": 137, "contribut": 444, "contributor": 445, "control": [449, 452], "conveni": 454, "convent": 444, "convers": [342, 343, 344, 454, 458], "convert": [232, 418], "convert_acqf": 27, "convert_bound": 363, "convert_to_float": 322, "copi": 458, "core": [213, 216, 217, 229, 230, 231, 232, 233, 234, 235, 242, 243, 264, 271, 273], "cpu": 442, "creat": [398, 399, 400, 401, 404, 406, 407, 409, 410, 411, 412, 418, 419, 426, 429, 430, 433, 434, 437, 438, 449, 457], "create_example_plot": 375, "create_fake_input": 350, "creation": [399, 400, 401, 421, 422, 449, 464], "current": 460, "custom": [143, 260, 262, 398, 409, 413, 414, 417, 418, 419, 460], "customdiscreteparamet": [144, 455], "customencod": 147, "customonnxsurrog": 261, "data": [399, 400, 401, 457, 462], "datafram": [345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 406, 407, 431, 457, 458, 459], "de": [433, 458], "default": [274, 457, 458], "defaultkernelfactori": 275, "defin": [398, 406, 407, 414, 415, 416, 426, 427, 430, 431, 435, 437, 438, 441], "definit": 415, "depend": [410, 441, 455], "deprec": [45, 46, 47, 48, 122, 123, 443], "deprecationerror": 66, "descript": 426, "deseri": 458, "deserialize_datafram": 239, "design": [441, 444], "desir": [124, 126, 449], "desirabilityobject": [125, 454], "develop": 444, "df_apply_dependency_augment": 315, "df_apply_permutation_augment": 316, "df_drop_single_value_column": 351, "df_drop_string_column": 352, "df_uncorrelated_featur": 353, "dictionari": [434, 435], "differ": 404, "dimens": 431, "discret": [49, 218, 221, 222, 223, 408, 409, 410, 411, 421, 430, 449, 450, 455, 457], "discretecardinalityconstraint": [50, 450], "discreteconstraint": 37, "discretecustomconstraint": [51, 450], "discretedependenciesconstraint": [52, 450], "discreteexcludeconstraint": [53, 450], "discretelinkedparametersconstraint": [54, 450], "discretenolabelduplicatesconstraint": [55, 450], "discreteparamet": 138, "discretepermutationinvarianceconstraint": [56, 450], "discreteproductconstraint": [57, 450], "discretesamplingmethod": 382, "discretesumconstraint": [58, 450], "discuss": 424, "disk": 451, "do": 459, "docstr": 444, "document": 419, "domin": 454, "dtypefloatnumpi": 368, "dtypefloatonnx": 369, "dtypefloattorch": 388, "dummi": 318, "duplic": 421, "dure": 464, "dynam": 452, "edbo": 276, "edbokernelfactori": 277, "effici": 464, "emptysearchspaceerror": 67, "encod": 455, "end": 441, "enum": [127, 145, 299], "environ": 451, "equival": 458, "estim": 464, "exampl": [399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 418, 419, 426, 430, 431, 433, 434, 435, 439, 441, 453], "except": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "exceptiongroup": 442, "exclud": 452, "exclus": [411, 412, 452], "expect": 462, "expectedimprov": 3, "experi": [409, 410, 411, 412, 418, 419, 426, 433, 441, 448, 459], "experiment": [449, 451, 453], "expir": 443, "explain": [91, 453], "explicit": 457, "extend": 444, "extract": 460, "fake": 464, "faq": 440, "farthest_point_sampl": 383, "featur": 451, "field": 458, "file": [434, 435], "filter_df": 354, "find_subclass": 323, "finite_float": 391, "fix": [442, 443], "float": 451, "fpsrecommend": 208, "fraction_to_float": 343, "from": [434, 441, 443, 449, 457, 458], "full": [399, 400, 401, 457], "function": [398, 399, 400, 401, 404, 406, 407, 415, 426, 430, 431, 444, 448], "further": 449, "fuzzy_row_match": 355, "gammaprior": 170, "gaussian_process": [263, 264, 266, 269, 270, 271, 273, 274, 276], "gaussianmixtureclusteringrecommend": 203, "gaussianprocesspreset": 272, "gaussianprocesssurrog": 265, "gener": [437, 438, 444, 456], "geom_mean": 373, "get": [403, 449, 452], "get_base_structure_hook": 233, "get_baseclass": 324, "get_canonical_smil": 338, "get_fingerprint_class": 339, "get_model_params_valid": 291, "get_parameters_from_datafram": 158, "get_subclass": 325, "get_transform_object": 356, "get_transform_paramet": 225, "get_user_detail": 309, "github": 441, "global": 447, "group_duplicate_valu": 326, "guid": 463, "halfcauchyprior": 171, "halfnormalprior": 172, "hilberts_factori": 327, "hook": [413, 414, 415, 416], "hybrid": [406, 431, 450], "imaginari": 424, "implicit": 454, "import": [398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 414, 416, 418, 419, 421, 422, 424, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 453], "improv": 416, "includ": 441, "inclus": 399, "incompatibilityerror": 68, "incompatibleacquisitionfunctionerror": 69, "incompatibleargumenterror": 70, "incompatibleexplainererror": 71, "incompatiblesearchspaceerror": 72, "incompatiblesurrogateerror": 73, "incomplet": 401, "incorpor": 412, "indent": 376, "independentgaussiansurrog": 254, "index": 441, "indic": 441, "infeasibilityerror": 74, "infiniteintervalerror": 361, "influenc": 464, "inform": [449, 456], "initi": [399, 404], "insight": [89, 90, 91, 92, 94, 95, 96, 97, 453], "instal": [441, 442], "instanc": 414, "instead": [418, 419], "instruct": 451, "internet": 451, "interpret": 453, "interrupt": 415, "interv": [360, 361, 362, 363, 364], "invalidsurrogatemodelerror": 75, "invalidtargetvalueerror": 76, "invari": 421, "invok": 458, "irrelev": 462, "is_abstract": 335, "is_all_inst": 328, "is_cardinality_fulfil": 60, "is_en": 310, "is_inact": 159, "is_shap_explain": 96, "issu": [441, 442], "iter": [406, 407, 418, 419, 426], "json": [449, 458], "kernel": [98, 99, 102, 103, 112], "kernel_factori": [266, 269], "kernelfactori": 267, "kmeansclusteringrecommend": 204, "known": [441, 442], "label": 455, "leak": 442, "learn": [436, 438, 447, 459, 462], "licens": [441, 446], "like": 455, "limit": [453, 460, 461], "linear": [278, 407], "linear_transform": 306, "linearkernel": 104, "link": 419, "local": [441, 447], "logexpectedimprov": 4, "lognormalprior": 173, "look_up_target": 245, "lookup": [244, 245, 399, 400, 401, 406, 407, 415, 431, 437, 438, 459], "loop": [398, 399, 400, 401, 437, 438, 441], "maco": 442, "maintain": [441, 445], "make_explainer_for_surrog": 97, "make_gp_from_preset": 273, "mandatori": 454, "manual": [409, 410, 411, 412], "mark": 448, "match": 461, "match_attribut": 329, "maternkernel": 105, "max": 461, "mean": 459, "meanpredictionsurrog": 281, "measur": [403, 418, 419, 449, 464], "mechan": [399, 400, 401, 459], "memori": [365, 366, 464], "memorys": 219, "meta": [179, 180, 182, 452, 456], "metarecommend": 181, "method": [414, 444, 447], "min": 461, "minimumcardinalityviolatedwarn": 77, "miss": 459, "mixin": 236, "mixtur": [420, 421, 422], "mode": [426, 461], "model": [404, 418, 419, 421, 422, 424, 453, 460], "modelnottrainederror": 78, "monitor": 416, "monkeypatch": [414, 415, 416], "multi": [423, 424, 425, 426, 460], "multipl": 459, "naiv": [187, 280], "naivehybridspacerecommend": 188, "name": 455, "name_to_smil": 340, "necessari": [399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 418, 419, 426, 430, 431, 433, 434, 435], "nest": 458, "ngboost": 282, "ngboostsurrog": 283, "nois": 464, "nomcacquisitionfunctionerror": 79, "non": 454, "non_inf_float": 392, "non_nan_float": 393, "non_shap_explain": 92, "none": 459, "nonpredict": [199, 200, 202, 207], "nonpredictiverecommend": 201, "nonstring_to_tupl": 344, "norecommenderslefterror": 80, "normalprior": 174, "notenoughpointslefterror": 81, "nothingtosimulateerror": 82, "numer": [150, 302, 367, 368, 369, 370, 371, 372, 373], "numericalcontinuousparamet": [151, 455], "numericaldiscreteparamet": [152, 455], "numericaltarget": [303, 461], "numericalunderflowerror": 83, "object": [116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 131, 133, 134, 399, 400, 401, 404, 406, 407, 409, 410, 411, 412, 426, 430, 433, 437, 438, 441, 449, 454, 458], "onnx": 418, "optim": [398, 427, 437, 438, 441, 449, 464], "option": [441, 455], "optionalimporterror": 84, "order": [421, 451], "output": [418, 419, 460], "overrid": 444, "packag": [441, 451], "page": 453, "pamclusteringrecommend": 205, "parallel": 449, "paramet": [135, 136, 139, 140, 143, 145, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 399, 400, 401, 404, 419, 421, 422, 449, 453, 455, 457, 464], "parameter_cartesian_prod_panda": 221, "parameter_cartesian_prod_polar": 222, "parameterencod": 148, "pareto": [129, 427], "paretoobject": [130, 454], "partial": [24, 448], "partialacquisitionfunct": 25, "pass": 419, "pend": 448, "perform": [399, 426, 430, 431], "periodickernel": 106, "perman": 452, "permut": 421, "piecewisepolynomialkernel": 107, "plainkernelfactori": 268, "plot": [374, 375, 376, 377, 398, 415, 416, 453], "point": 451, "polar": [442, 451], "polynomialkernel": 108, "posterior": 449, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 255, "pre": 418, "precis": 451, "predict": 449, "preset": [270, 271, 273, 274, 276], "pretrain": 418, "pretty_print_df": 357, "print": [409, 410, 412, 426], "prior": [165, 166, 167, 168], "probabilityofimprov": 7, "probabl": 416, "problem": [398, 415, 427, 442], "product": [412, 457], "productkernel": 114, "pull": 444, "pure": [189, 190, 192, 193, 195, 197, 198, 199, 200, 202, 207, 447, 456], "purerecommend": 191, "pycharm": 442, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedhypervolumeimprov": 13, "qlognoisyexpectedimprov": 14, "qlognparego": 12, "qnegintegratedposteriorvari": 15, "qnoisyexpectedimprov": 16, "qposteriorstandarddevi": 17, "qprobabilityofimprov": 18, "qsimpleregret": 19, "qthompsonsampl": 20, "quick": 441, "qupperconfidencebound": 21, "random": [378, 379, 380], "random_forest": 284, "randomforestsurrog": 285, "randomrecommend": 209, "rbfkernel": 109, "recommend": [176, 177, 179, 180, 182, 187, 189, 190, 192, 193, 195, 197, 198, 199, 200, 202, 207, 403, 404, 418, 419, 430, 431, 433, 448, 449, 452, 456], "recommenderprotocol": 178, "reduct": 447, "refers_to": 330, "regist": 414, "register_custom_architectur": 262, "register_hook": 331, "relat": 442, "remov": 443, "replic": 460, "represent": [421, 422, 453, 457], "reproduc": 464, "request": 444, "restrict": 457, "result": [398, 415, 416, 448], "rffkernel": 110, "role": 462, "row": 451, "rqkernel": 111, "run": [398, 406, 407, 424], "sampl": [207, 447, 456], "sample_numerical_df": 384, "sampling_algorithm": [381, 383, 384], "scalar": [126, 128, 460], "scale": 385, "scalekernel": 115, "scenario": [246, 247, 459], "scope": 451, "search": [421, 422, 429, 437, 441, 447, 457, 464], "searchspac": [210, 211, 213, 214, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 399, 401, 404, 406, 407, 409, 410, 411, 412, 426, 428, 430, 431, 438], "searchspacematchwarn": 85, "searchspacetyp": 215, "see": 462, "select_constructor_hook": 234, "semaphor": 442, "sequenti": [182, 449], "sequential_greedi": [197, 198], "sequentialgreedyrecommend": 198, "sequentialmetarecommend": 184, "serial": [228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 432, 433, 449, 458], "serialize_datafram": 240, "serialmixin": 237, "set": [398, 415, 416, 427, 429, 437, 438], "set_random_se": 379, "setup": [403, 409, 410, 411, 412, 418, 419, 421, 422, 424, 426, 427, 433], "shap": [90, 91, 92, 94, 95, 96, 97, 453], "shap_explain": 94, "shap_plot": 95, "shapinsight": 93, "signatur": 414, "simplex": [421, 457], "simul": [241, 242, 243, 244, 245, 246, 247, 248, 249, 398, 399, 400, 401, 415, 424, 437, 438, 459], "simulate_experi": 243, "simulate_scenario": 247, "simulate_transfer_learn": 249, "singl": [131, 427, 459], "singletargetobject": [132, 454], "sklearnclusteringrecommend": 206, "slot": [421, 422], "smile": 154, "smiles_to_fingerprint_featur": 341, "smoothedboxprior": 175, "some": [406, 407, 426], "sort_paramet": 160, "space": [421, 422, 429, 431, 437, 441, 447, 449, 457, 464], "span": 421, "stage": 418, "start": 441, "statist": 449, "stop": 415, "str_to_acqf": 28, "strategi": [404, 441], "streamingsequentialmetarecommend": 185, "string": [434, 458], "strtobool": 336, "structure_constraint": 48, "structure_object": 123, "studi": 460, "sub": 447, "subselectioncondit": [40, 450], "subspac": 457, "subspacecontinu": 212, "subspacediscret": 220, "substanc": [153, 154, 421, 441], "substanceencod": 149, "substanceparamet": [155, 455], "suggest": 442, "suitabl": 404, "sum": 412, "support": [442, 448], "surrog": [250, 251, 253, 255, 256, 258, 260, 262, 263, 264, 266, 269, 270, 271, 273, 274, 276, 278, 280, 282, 284, 286, 287, 288, 289, 290, 291, 292, 404, 417, 418, 419, 460], "surrogateprotocol": 257, "synchron": 444, "synthet": [430, 431], "tabl": [399, 400, 401, 437, 438, 441], "target": [293, 294, 295, 296, 298, 299, 302, 304, 305, 306, 307, 414, 425, 426, 427, 454, 461, 464], "targetmod": 300, "targettransform": 301, "task": [437, 438], "taskparamet": [142, 455, 462], "technologi": 462, "telemetri": [308, 309, 310, 311, 312, 441, 451], "telemetry_record_recommended_measurement_percentag": 311, "telemetry_record_valu": 312, "temporary_se": 380, "terminologi": [421, 458, 459, 462], "test": [406, 407, 430, 431], "theoret": 421, "thi": [399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 426, 430, 431, 453], "thresholdcondit": [41, 450], "through": 462, "to_kernel_factori": 269, "to_object": 121, "to_searchspac": 216, "to_str": 377, "to_tensor": 358, "to_tupl": 332, "toggl": 452, "toler": 449, "tool": 444, "torch": [387, 388, 389, 442], "tradit": 422, "train": 418, "trajectori": 452, "transfer": [436, 438, 459, 462], "transfer_learn": [248, 249], "transform": [304, 305, 306, 307, 426], "transform_target_column": 359, "treasur": 462, "triangular_transform": 307, "trigger": [414, 416], "two": 435, "twophasemetarecommend": 186, "type": 458, "uncertainti": 447, "unidentifiedsubclasserror": 86, "uninstal": 451, "uninterrupt": 415, "unlock": 462, "unmatchedattributeerror": 87, "unreleas": 443, "unspecifi": 319, "unspecifiedtyp": 320, "unstructure_bas": 235, "unusedobjectwarn": 88, "upperconfidencebound": 8, "us": [399, 400, 401, 403, 404, 409, 410, 411, 412, 418, 419, 424, 426, 430, 431, 457, 458, 459, 460], "usag": 453, "use_fallback_constructor_hook": 364, "user": 463, "util": [26, 27, 28, 59, 60, 156, 157, 158, 159, 160, 238, 239, 240, 286, 287, 288, 289, 313, 314, 315, 316, 317, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 464], "v": [414, 421, 427, 442, 449, 452], "valid": [61, 62, 63, 64, 133, 134, 161, 162, 163, 164, 224, 225, 226, 227, 290, 291, 292, 390, 391, 392, 393, 394, 395, 396, 419, 435], "validate_cardinality_constraint_parameter_bound": 62, "validate_cardinality_constraints_are_nonoverlap": 63, "validate_constraint": 64, "validate_custom_architecture_cl": 292, "validate_decorrel": 162, "validate_is_finit": 163, "validate_not_nan": 394, "validate_paramet": 227, "validate_parameter_input": 395, "validate_parameter_nam": 226, "validate_searchspace_from_config": 217, "validate_simplex_subspace_from_config": 223, "validate_target_input": 396, "validate_target_nam": 134, "validate_unique_valu": 164, "valu": [455, 457, 458, 459], "variabl": 451, "varname_numpy_use_single_precis": 370, "varname_torch_use_single_precis": 389, "verif": [409, 410, 411, 412, 421, 422, 435], "verifi": 407, "via": 453, "visual": 427, "we": 459, "what": 459, "window": 442, "within": 457, "without": 442, "workflow": [444, 448], "wrap": [406, 407, 431], "write": 444}})