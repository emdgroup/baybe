Search.setIndex({"alltitles": {"Acquisition Function Values": [[458, "acquisition-function-values"]], "Acquisition function": [[413, "acquisition-function"]], "AcquisitionFunction": [[24, null]], "Active Learning": [[456, null]], "Added": [[452, "added"], [452, "id4"], [452, "id8"], [452, "id17"], [452, "id27"], [452, "id31"], [452, "id37"], [452, "id44"], [452, "id53"], [452, "id59"], [452, "id63"], [452, "id70"], [452, "id75"], [452, "id81"], [452, "id87"], [452, "id91"], [452, "id95"], [452, "id99"], [452, "id104"], [452, "id108"], [452, "id111"], [452, "id115"], [452, "id119"], [452, "id123"], [452, "id126"], [452, "id130"], [452, "id134"], [452, "id138"], [452, "id142"], [452, "id148"], [452, "id151"]], "Addendum: Description of transformation functions": [[435, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[473, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[471, null]], "Adding Measurements": [[458, "adding-measurements"]], "Adding Partial Results": [[457, "adding-partial-results"]], "AdditiveKernel": [[117, null]], "Advanced Example: Chemical Substances": [[450, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[433, "an-imaginary-use-case"]], "Array-Based Callables": [[468, null]], "Asynchronous Workflows": [[457, null]], "Auto-Replication": [[469, "auto-replication"]], "Automatic field conversion": [[467, "automatic-field-conversion"]], "Available Models": [[469, "available-models"]], "Available recommenders suitable for initial recommendation": [[413, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[413, "available-surrogate-models"]], "Backtesting": [[406, null], [446, null]], "BaseSequentialMetaRecommender": [[183, null]], "Basic Creation": [[458, "basic-creation"]], "Basic Instructions": [[460, "basic-instructions"]], "Basic Usage": [[462, "basic-usage"]], "Basic example for using BayBE": [[412, null]], "Basic string assembly": [[467, "basic-string-assembly"]], "BasicKernel": [[104, null]], "Basics": [[411, null], [458, "basics"]], "Batch Optimization": [[458, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[450, null]], "Bayesian Recommenders": [[465, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[280, null]], "BayesianRecommender": [[194, null]], "Bernoulli Multi Armed Bandit": [[433, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[253, null]], "BetaPrior": [[169, null]], "BinaryTarget": [[299, null]], "BotorchRecommender": [[196, null]], "Bound methods": [[423, "bound-methods"]], "Breaking Changes": [[452, "breaking-changes"], [452, "id36"], [452, "id43"]], "Building from the Product of Parameter Values": [[466, "building-from-the-product-of-parameter-values"], [466, "id2"]], "Building the Model": [[433, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[451, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[458, "caching-of-recommendations"]], "Campaign": [[31, null]], "Campaign Setup": [[436, "campaign-setup"]], "Campaign Stopping": [[424, null]], "Campaigns": [[458, null]], "Candidate Control in Discrete Spaces": [[458, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[461, null]], "CardinalityConstraint": [[34, null]], "CategoricalEncoding": [[146, null]], "CategoricalParameter": [[141, null], [464, "categoricalparameter"]], "Caution": [[461, null]], "Changed": [[452, "changed"], [452, "id5"], [452, "id9"], [452, "id13"], [452, "id15"], [452, "id18"], [452, "id22"], [452, "id28"], [452, "id32"], [452, "id38"], [452, "id45"], [452, "id50"], [452, "id54"], [452, "id60"], [452, "id64"], [452, "id67"], [452, "id71"], [452, "id76"], [452, "id82"], [452, "id88"], [452, "id92"], [452, "id96"], [452, "id100"], [452, "id105"], [452, "id109"], [452, "id112"], [452, "id116"], [452, "id120"], [452, "id124"], [452, "id127"], [452, "id131"], [452, "id135"], [452, "id139"], [452, "id143"]], "Changelog": [[452, null]], "Clustering Recommenders": [[465, "clustering-recommenders"]], "Code Design": [[453, "code-design"]], "ColumnTransformer": [[395, null]], "Comparing recommendations in both objects": [[442, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[469, "composite-surrogates"]], "CompositeKernel": [[105, null]], "CompositeSurrogate": [[260, null]], "Computational Challenges": [[459, null]], "Condition": [[40, null]], "Conditions": [[459, "conditions"]], "Constraint": [[35, null]], "Constraint Setup": [[430, "constraint-setup"]], "Constraints": [[459, null]], "Constraints Continuous": [[414, null]], "Constraints Discrete": [[417, null]], "Constraints Setup": [[431, "constraints-setup"]], "Construct the campaign and run some iterations": [[415, "construct-the-campaign-and-run-some-iterations"], [416, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[466, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[408, "constructing-campaigns-for-the-simulation-loop"], [409, "constructing-campaigns-for-the-simulation-loop"], [410, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[466, "constructing-from-a-dataframe"], [466, "id1"], [466, "id3"]], "Constructing hybrid recommenders": [[440, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[439, "constructing-the-campaign-and-performing-a-recommendation"], [440, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[440, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[459, "continuous-constraints"]], "Continuous Parameters": [[464, "continuous-parameters"]], "Continuous Subspaces": [[466, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[44, null], [459, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[36, null]], "ContinuousLinearConstraint": [[45, null], [459, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[37, null]], "ContinuousParameter": [[137, null]], "Contributing to BayBE": [[453, null]], "Contributors": [[454, null], [454, "id1"]], "Convenience Construction and Implicit Conversion": [[463, null]], "Convenience Multi-Output Casting": [[463, null]], "Conventions for attrs classes": [[453, "conventions-for-attrs-classes"]], "Convert model to onnx": [[427, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[427, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[428, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[427, "create-campaign"]], "Creating Continuous Search Spaces": [[438, null]], "Creating a Campaign": [[458, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[466, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[443, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[418, "creating-and-printing-the-campaign"], [419, "creating-and-printing-the-campaign"], [421, "creating-and-printing-the-campaign"], [435, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[407, "creating-the-campaigns"]], "Creating the Objective": [[409, "creating-the-objective"]], "Creating the Optimization Objective": [[446, "creating-the-optimization-objective"], [447, "creating-the-optimization-objective"]], "Creating the Search Space": [[446, "creating-the-search-space"]], "Creating the Searchspace": [[447, "creating-the-searchspace"]], "Creating the campaign": [[413, "creating-the-campaign"], [428, "creating-the-campaign"], [442, "creating-the-campaign"]], "Creating the constraint": [[418, "creating-the-constraint"], [420, "creating-the-constraint"]], "Creating the constraints": [[419, "creating-the-constraints"], [421, "creating-the-constraints"]], "Creating the objective": [[435, "creating-the-objective"]], "Creating the recommender object": [[413, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[408, "creating-the-searchspace-and-the-objective"], [410, "creating-the-searchspace-and-the-objective"], [415, "creating-the-searchspace-and-the-objective"], [416, "creating-the-searchspace-and-the-objective"], [418, "creating-the-searchspace-and-the-objective"], [419, "creating-the-searchspace-and-the-objective"], [420, "creating-the-searchspace-and-the-objective"], [421, "creating-the-searchspace-and-the-objective"], [439, "creating-the-searchspace-and-the-objective"]], "Creation From a JSON Config": [[458, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[469, null]], "Custom Hooks": [[422, null]], "Custom Surrogates": [[426, null]], "CustomDiscreteParameter": [[144, null], [464, "customdiscreteparameter"]], "CustomEncoding": [[147, null]], "CustomONNXSurrogate": [[262, null]], "Dataframe deserialization": [[467, "dataframe-deserialization"]], "DefaultKernelFactory": [[276, null]], "Defining config dictionaries": [[444, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[424, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[425, "defining-the-hook"]], "Defining the Hooks": [[423, "defining-the-hooks"]], "Defining the Optimization Objective": [[450, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[407, "defining-the-optimization-problem"], [436, "defining-the-optimization-problem"]], "Defining the Search Space": [[450, "defining-the-search-space"]], "Defining the Tasks": [[446, "defining-the-tasks"], [447, "defining-the-tasks"]], "Defining the targets": [[435, "defining-the-targets"]], "Defining the test function": [[415, "defining-the-test-function"], [416, "defining-the-test-function"], [439, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[440, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[452, "deprecations"], [452, "id34"], [452, "id41"], [452, "id48"], [452, "id57"], [452, "id73"], [452, "id79"], [452, "id85"], [452, "id102"]], "Deserialization from configuration strings": [[467, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[125, null], [463, "desirabilityobjective"]], "Developer Tools": [[453, "developer-tools"]], "Discrete Constraints": [[459, "discrete-constraints"]], "Discrete Parameters": [[464, "discrete-parameters"]], "Discrete Subspaces": [[466, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[430, null]], "DiscreteCardinalityConstraint": [[51, null], [459, "discretecardinalityconstraint"]], "DiscreteConstraint": [[38, null]], "DiscreteCustomConstraint": [[52, null], [459, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[53, null], [459, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[54, null], [459, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[55, null], [459, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[56, null], [459, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[138, null]], "DiscretePermutationInvarianceConstraint": [[57, null], [459, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[58, null]], "DiscreteSamplingMethod": [[391, null]], "DiscreteSumConstraint": [[59, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[459, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[433, "discussion"]], "Disk Caching": [[460, "disk-caching"]], "Dummy": [[320, null]], "Duplicate Substances": [[430, "duplicate-substances"]], "Dynamic Exclusion": [[461, "dynamic-exclusion"]], "EDBOKernelFactory": [[278, null]], "EXPERIMENTAL: Floating Point Precision": [[460, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[473, null]], "Environment Variables": [[460, null]], "Equivalent copies": [[467, null]], "Estimation with Constraints": [[473, null]], "Example Searchspace and objective parameters": [[413, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[415, null]], "Example for creating campaigns from configs": [[443, null]], "Example for custom parameter passing in surrogate models": [[428, null]], "Example for full simulation loop using a table-based lookup mechanism": [[409, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[410, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[408, null]], "Example for linear constraints in a continuous searchspace": [[416, null]], "Example for surrogate model with a custom pretrained model": [[427, null]], "Example for the serialization of a campaign": [[442, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[439, null]], "Example for using custom constraints in discrete searchspaces": [[418, null]], "Example for using dependency constraints in discrete searchspaces": [[419, null]], "Example for using different strategies": [[413, null]], "Example for using exclusion constraints in discrete searchspaces": [[420, null]], "Example for using exclusion constraints incorporating sums and products": [[421, null]], "Example for using synthetic test functions in hybrid spaces": [[440, null]], "Example for using the multi target mode for the objective": [[435, null]], "Example for validation of a config file": [[444, null]], "Examples": [[448, null]], "Examples On This Page": [[462, null]], "Excluding Configurations": [[461, "excluding-configurations"]], "Expectations": [[471, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[427, "experiment-setup"], [428, "experiment-setup"]], "Experiment setup": [[418, "experiment-setup"], [419, "experiment-setup"], [420, "experiment-setup"], [421, "experiment-setup"], [442, "experiment-setup"]], "Experiment setup and creating the searchspace": [[435, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[460, null]], "Experimental Feature \u2013>": [[460, null]], "Experimental Representation Limits": [[462, null]], "Experimental and Computational Representations": [[462, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.6.*)": [[452, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[452, "expired-deprecations-from-0-7"]], "Expired Deprecations (from 0.9.*)": [[452, "expired-deprecations-from-0-9"]], "Explainers": [[462, "explainers"]], "Extending BayBE\u2019s Functionality": [[453, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[469, "extracting-the-model-for-advanced-study"]], "FAQ": [[449, null]], "FPSInitialization": [[208, null]], "FPSRecommender": [[209, null]], "Fixed": [[452, "fixed"], [452, "id2"], [452, "id6"], [452, "id10"], [452, "id19"], [452, "id23"], [452, "id25"], [452, "id29"], [452, "id33"], [452, "id39"], [452, "id47"], [452, "id51"], [452, "id56"], [452, "id61"], [452, "id65"], [452, "id72"], [452, "id77"], [452, "id83"], [452, "id89"], [452, "id97"], [452, "id101"], [452, "id106"], [452, "id113"], [452, "id117"], [452, "id121"], [452, "id128"], [452, "id132"], [452, "id136"], [452, "id140"], [452, "id144"], [452, "id146"], [452, "id149"]], "For Label-Like Parameters: Values and Active Values": [[464, "label-like"]], "From GitHub": [[450, "from-github"]], "From Local Clone": [[450, "from-local-clone"]], "From Package Index": [[450, "from-package-index"]], "From the Default Constructor": [[466, "from-the-default-constructor"]], "Further Information": [[458, "further-information"]], "GammaPrior": [[170, null]], "GaussianMixtureClusteringRecommender": [[203, null]], "GaussianProcessPreset": [[273, null]], "GaussianProcessSurrogate": [[266, null]], "General Information": [[465, "general-information"]], "General Workflow": [[453, "general-workflow"]], "Generating Lookup Tables": [[446, "generating-lookup-tables"], [447, "generating-lookup-tables"]], "Getting Recommendations": [[458, "getting-recommendations"], [461, null]], "Getting a recommendation and adding measurements": [[412, "getting-a-recommendation-and-adding-measurements"]], "Global Uncertainty Reduction": [[456, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[171, null]], "HalfNormalPrior": [[172, null]], "Hook instance vs. target instance": [[423, null]], "Hybrid constraints": [[459, null]], "Imports": [[407, "imports"], [423, "imports"], [425, "imports"], [430, "imports"], [431, "imports"], [433, "imports"], [436, "imports"], [438, "imports"], [446, "imports"], [447, "imports"]], "Inclusion of initial data": [[408, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[255, null]], "Indices and Tables": [[450, "indices-and-tables"]], "Influence of Continuous Parameters": [[473, null]], "Insights": [[462, null]], "Installation Related Issues": [[451, "installation-related-issues"]], "Interval": [[371, null]], "Invoking alternative constructors": [[467, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[427, "iterate-with-recommendations-and-measurements"], [428, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[467, "json-de-serialization"]], "KMeansClusteringRecommender": [[204, null]], "KMedoids": [[347, null]], "Kernel": [[106, null]], "KernelFactory": [[268, null]], "Known Issues": [[451, null]], "License": [[455, null]], "Limitations": [[457, null], [470, "limitations"]], "LinearKernel": [[108, null]], "Links for documentation": [[428, "links-for-documentation"]], "Local Uncertainty Reduction": [[456, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[173, null]], "Lookup functionality and data creation": [[408, "lookup-functionality-and-data-creation"], [409, "lookup-functionality-and-data-creation"], [410, "lookup-functionality-and-data-creation"]], "MATCH mode": [[470, "match-mode"]], "MIN and MAX mode": [[470, "min-and-max-mode"]], "Maintainers": [[454, "maintainers"]], "Mandatory Target Bounds": [[463, null]], "Manual verification of the constraint": [[418, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[419, "manual-verification-of-the-constraints"], [420, "manual-verification-of-the-constraints"], [421, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[457, "marking-experiments-as-pending"]], "MaternKernel": [[109, null]], "MeanPredictionSurrogate": [[282, null]], "MeasurableMetadata": [[377, null]], "Memory During Optimization": [[473, null]], "MemorySize": [[220, null]], "Meta Recommenders": [[461, null], [465, "meta-recommenders"]], "MetaRecommender": [[181, null]], "Metadata": [[378, null]], "Method overrides": [[453, "method-overrides"]], "Missing Lookup Values": [[468, null]], "Mixtures": [[429, null]], "Model Interpretation in BO": [[462, null]], "Model Outputs": [[427, "model-outputs"], [428, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[430, null]], "Modeling a Mixture in Traditional Representation": [[431, null]], "Monitoring the Probability of Improvement": [[425, null]], "Monkeypatching": [[423, "monkeypatching"], [424, null], [425, "monkeypatching"]], "Multi Target": [[434, null]], "Multi-Armed Bandit": [[432, null]], "Multi-Output Modeling": [[469, "multi-output-modeling"]], "Multi-Output Surrogate Models": [[462, "multi-output-surrogate-models"]], "NGBoostSurrogate": [[284, null]], "NaiveHybridSpaceRecommender": [[188, null]], "Necessary imports": [[427, "necessary-imports"], [428, "necessary-imports"], [442, "necessary-imports"], [443, "necessary-imports"], [444, "necessary-imports"]], "Necessary imports for this example": [[408, "necessary-imports-for-this-example"], [409, "necessary-imports-for-this-example"], [410, "necessary-imports-for-this-example"], [412, "necessary-imports-for-this-example"], [413, "necessary-imports-for-this-example"], [415, "necessary-imports-for-this-example"], [416, "necessary-imports-for-this-example"], [418, "necessary-imports-for-this-example"], [419, "necessary-imports-for-this-example"], [420, "necessary-imports-for-this-example"], [421, "necessary-imports-for-this-example"], [435, "necessary-imports-for-this-example"], [439, "necessary-imports-for-this-example"], [440, "necessary-imports-for-this-example"]], "Nesting objects": [[467, "nesting-objects"]], "Non-Dominated Configurations": [[463, null]], "NonPredictiveRecommender": [[201, null]], "NormalPrior": [[174, null]], "NumericalContinuousParameter": [[151, null], [464, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[152, null], [464, "numericaldiscreteparameter"]], "NumericalTarget": [[305, null], [470, "numericaltarget"]], "Objective": [[122, null], [463, null]], "Optimizing a Custom Black-Box Function": [[407, null]], "Optional Dependencies": [[450, "optional-dependencies"]], "Optional Dependency": [[464, null]], "Optional: Defining the Optimization Strategy": [[450, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[430, null]], "PAMClusteringRecommender": [[205, null]], "Parallel Runs in Scenario Simulations": [[460, "parallel-runs-in-scenario-simulations"]], "Parameter": [[139, null]], "Parameter Encoding": [[464, null]], "Parameter Importance via SHAP": [[462, "parameter-importance-via-shap"]], "Parameter Names": [[464, null]], "Parameter Setup": [[430, "parameter-setup"], [431, "parameter-setup"]], "Parameter tolerances": [[458, null]], "ParameterEncoding": [[148, null]], "Parameters": [[464, null]], "Parameters for a full simulation loop": [[408, "parameters-for-a-full-simulation-loop"], [409, "parameters-for-a-full-simulation-loop"], [410, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[130, null], [463, "paretoobjective"]], "PartialAcquisitionFunction": [[26, null]], "Performing some iterations": [[435, "performing-some-iterations"]], "Performing the simulation loop": [[408, "performing-the-simulation-loop"]], "PeriodicKernel": [[110, null]], "Permanent Exclusion": [[461, "permanent-exclusion"]], "Permutation Invariance": [[430, "permutation-invariance"]], "PiecewisePolynomialKernel": [[111, null]], "PlainKernelFactory": [[269, null]], "Plots": [[462, "plots"]], "Plotting the Results": [[407, "plotting-the-results"], [424, "plotting-the-results"], [425, "plotting-the-results"]], "Polars": [[460, "polars"]], "PolynomialKernel": [[112, null]], "Posterior Statistics with Desirability Objectives": [[458, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Predictive Statistics": [[458, "predictive-statistics"]], "Prior": [[167, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[424, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[118, null]], "Pure Recommenders": [[465, "pure-recommenders"]], "PureRecommender": [[191, null]], "Purely Continuous Search Spaces": [[456, null]], "PyCharm vs. exceptiongroup": [[451, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[113, null]], "RFFKernel": [[114, null]], "RQKernel": [[115, null]], "RandomForestSurrogate": [[286, null]], "RandomRecommender": [[210, null]], "RecommenderProtocol": [[178, null]], "Recommenders": [[465, null]], "Registering Custom Hooks": [[423, null]], "Removed": [[452, "removed"], [452, "id11"], [452, "id20"], [452, "id40"], [452, "id46"], [452, "id55"], [452, "id68"], [452, "id78"], [452, "id84"], [452, "id93"]], "Representation of Data within Discrete Subspaces": [[466, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[473, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[466, "restricting-search-spaces-using-constraints"]], "Row Order": [[460, null]], "Running the Simulation": [[433, "running-the-simulation"]], "Running the Simulation Loop": [[407, "running-the-simulation-loop"]], "SHAPInsight": [[97, null]], "SKLearnClusteringRecommender": [[206, null]], "Sampling Recommenders": [[465, "sampling-recommenders"]], "Scalarizer": [[128, null]], "ScaleKernel": [[119, null]], "Search Space Creation": [[430, "search-space-creation"], [431, "search-space-creation"]], "Search Space Memory Estimation": [[473, "search-space-memory-estimation"]], "Search Spaces": [[466, null]], "SearchSpace": [[215, null]], "SearchSpaceType": [[216, null]], "Searchspaces": [[437, null]], "Seeing Transfer Learning in Action": [[471, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[458, null]], "SequentialMetaRecommender": [[184, null]], "SerialMixin": [[238, null]], "Serialization": [[441, null], [458, "serialization"], [467, null]], "Serialization and de-serialization": [[442, "serialization-and-de-serialization"]], "Settings": [[407, "settings"], [424, "settings"], [425, "settings"], [436, "settings"], [438, "settings"], [446, "settings"], [447, "settings"]], "Setup": [[412, "setup"], [433, "setup"]], "Signature components": [[423, null]], "Simplex Construction": [[430, null]], "Simulating Multiple Scenarios": [[468, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[468, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[468, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[424, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[424, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[468, null]], "Simulation Loop": [[446, "simulation-loop"], [447, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[436, null]], "SingleTargetObjective": [[132, null], [463, "singletargetobjective"]], "Slot-based Representation": [[431, null]], "SmoothedBoxPrior": [[175, null]], "StreamingSequentialMetaRecommender": [[185, null]], "Sub-Sampling Method": [[456, null]], "SubSelectionCondition": [[41, null], [459, "subselectioncondition"]], "SubspaceContinuous": [[213, null]], "SubspaceDiscrete": [[221, null]], "Substance Amounts": [[430, "substance-amounts"]], "SubstanceEncoding": [[149, null]], "SubstanceParameter": [[155, null], [464, "substanceparameter"]], "Suggested Fix": [[451, null], [451, null], [451, null], [451, null]], "Supported Acquisition Functions": [[457, null]], "Supported Recommenders": [[457, null]], "Surrogate": [[257, null]], "Surrogate Replication": [[469, "surrogate-replication"]], "SurrogateProtocol": [[258, null]], "Surrogates": [[469, null]], "Synchronizing Pull Requests": [[453, "synchronizing-pull-requests"]], "Target": [[297, null]], "TargetMode": [[302, null]], "TargetTransformation": [[303, null]], "Targets": [[470, null]], "TaskParameter": [[142, null], [464, "taskparameter"]], "Technology": [[471, null]], "Telemetry": [[460, "telemetry"]], "Telemetry Scope": [[460, null]], "Terminology": [[430, "terminology"], [467, null], [471, null]], "Terminology Continued": [[471, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[468, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[433, "the-black-box-model"]], "The Lookup Mechanism": [[468, "the-lookup-mechanism"]], "The Optimization Loop": [[450, "the-optimization-loop"]], "The Role of the TaskParameter": [[471, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[443, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[461, "the-recommend-call"]], "The type field": [[467, "the-type-field"]], "Theoretical Span": [[430, null]], "ThresholdCondition": [[42, null], [459, "thresholdcondition"]], "Trajectory-Based Control": [[461, null]], "Transfer Learning": [[445, null], [447, null], [471, null]], "Triggering the Hook": [[425, "triggering-the-hook"]], "Triggering the Hooks": [[423, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[186, null]], "Uninstalling Internet Packages": [[460, null]], "Unlocking Data Treasures Through Transfer Learning": [[471, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[322, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[472, null]], "Using Custom Models": [[469, "using-custom-models"]], "Using Explicit Bounds": [[466, "using-explicit-bounds"]], "Using None": [[468, "using-none"]], "Using a Callable": [[468, "using-a-callable"]], "Using a Dataframe": [[468, "using-a-dataframe"]], "Using abbreviations": [[467, "using-abbreviations"]], "Using configuration instead": [[427, "using-configuration-instead"], [428, "using-configuration-instead"]], "Using default values": [[467, "using-default-values"]], "Utilities": [[473, null]], "Validation of model parameters": [[428, "validation-of-model-parameters"]], "Verification of Constraints": [[430, "verification-of-constraints"], [431, "verification-of-constraints"]], "Verification of Span": [[430, "verification-of-span"]], "Verification of the two dictionaries": [[444, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[416, "verify-the-constraints"]], "Visualization": [[436, "visualization"]], "Windows \u2013 Torch Problems": [[451, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[415, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [416, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [440, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[453, "writing-docstrings"]], "Writing classes": [[453, "writing-classes"]], "[0.1.0] - 2022-10-01": [[452, "id150"]], "[0.10.0] - 2024-08-02": [[452, "id42"]], "[0.11.0] - 2024-09-09": [[452, "id35"]], "[0.11.1] - 2024-10-01": [[452, "id30"]], "[0.11.2] - 2024-10-11": [[452, "id26"]], "[0.11.3] - 2024-11-06": [[452, "id24"]], "[0.11.4] - 2025-01-27": [[452, "id21"]], "[0.12.0] - 2025-01-28": [[452, "id16"]], "[0.12.1] - 2025-01-29": [[452, "id14"]], "[0.12.2] - 2025-01-31": [[452, "id12"]], "[0.13.0] - 2025-04-16": [[452, "id7"]], "[0.13.1] - 2025-06-06": [[452, "id3"]], "[0.13.2] - 2025-07-09": [[452, "id1"]], "[0.2.0] - 2022-11-10": [[452, "id147"]], "[0.2.1] - 2022-12-01": [[452, "id145"]], "[0.2.2] - 2023-01-13": [[452, "id141"]], "[0.2.3] - 2023-03-14": [[452, "id137"]], "[0.2.4] - 2023-03-24": [[452, "id133"]], "[0.3.0] - 2023-06-27": [[452, "id129"]], "[0.3.1] - 2023-07-17": [[452, "id125"]], "[0.3.2] - 2023-07-24": [[452, "id122"]], "[0.4.0] - 2023-08-16": [[452, "id118"]], "[0.4.1] - 2023-08-23": [[452, "id114"]], "[0.4.2] - 2023-08-29": [[452, "id110"]], "[0.5.0] - 2023-09-15": [[452, "id107"]], "[0.5.1] - 2023-10-19": [[452, "id103"]], "[0.6.0] - 2023-11-17": [[452, "id98"]], "[0.6.1] - 2023-11-27": [[452, "id94"]], "[0.7.0] - 2023-12-04": [[452, "id90"]], "[0.7.1] - 2023-12-07": [[452, "id86"]], "[0.7.2] - 2024-01-24": [[452, "id80"]], "[0.7.3] - 2024-02-09": [[452, "id74"]], "[0.7.4] - 2024-02-28": [[452, "id69"]], "[0.8.0] - 2024-02-29": [[452, "id66"]], "[0.8.1] - 2024-03-11": [[452, "id62"]], "[0.8.2] - 2024-03-27": [[452, "id58"]], "[0.9.0] - 2024-05-21": [[452, "id52"]], "[0.9.1] - 2024-06-04": [[452, "id49"]], "[Unreleased]": [[452, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[23, null]], "baybe.acquisition.partial": [[25, null]], "baybe.acquisition.utils": [[27, null]], "baybe.acquisition.utils.convert_acqf": [[28, null]], "baybe.acquisition.utils.str_to_acqf": [[29, null]], "baybe.campaign": [[30, null]], "baybe.constraints": [[32, null]], "baybe.constraints.base": [[33, null]], "baybe.constraints.conditions": [[39, null]], "baybe.constraints.continuous": [[43, null]], "baybe.constraints.deprecation": [[46, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[47, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[48, null]], "baybe.constraints.deprecation.structure_constraints": [[49, null]], "baybe.constraints.discrete": [[50, null]], "baybe.constraints.utils": [[60, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[61, null]], "baybe.constraints.validation": [[62, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[63, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[64, null]], "baybe.constraints.validation.validate_constraints": [[65, null]], "baybe.exceptions": [[66, null]], "baybe.exceptions.DeprecationError": [[67, null]], "baybe.exceptions.EmptySearchSpaceError": [[68, null]], "baybe.exceptions.IncompatibilityError": [[69, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, null]], "baybe.exceptions.IncompatibleArgumentError": [[71, null]], "baybe.exceptions.IncompatibleExplainerError": [[72, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, null]], "baybe.exceptions.IncompatibleSurrogateError": [[74, null]], "baybe.exceptions.IncompleteMeasurementsError": [[75, null]], "baybe.exceptions.InfeasibilityError": [[76, null]], "baybe.exceptions.InputDataTypeWarning": [[77, null]], "baybe.exceptions.InvalidSurrogateModelError": [[78, null]], "baybe.exceptions.InvalidTargetValueError": [[79, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[80, null]], "baybe.exceptions.ModelNotTrainedError": [[81, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[82, null]], "baybe.exceptions.NoMeasurementsError": [[83, null]], "baybe.exceptions.NoRecommendersLeftError": [[84, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[85, null]], "baybe.exceptions.NothingToSimulateError": [[86, null]], "baybe.exceptions.NumericalUnderflowError": [[87, null]], "baybe.exceptions.OptionalImportError": [[88, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[89, null]], "baybe.exceptions.UnidentifiedSubclassError": [[90, null]], "baybe.exceptions.UnmatchedAttributeError": [[91, null]], "baybe.exceptions.UnusedObjectWarning": [[92, null]], "baybe.insights": [[93, null]], "baybe.insights.shap": [[94, null]], "baybe.insights.shap.EXPLAINERS": [[95, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[96, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[98, null]], "baybe.insights.shap.SHAP_PLOTS": [[99, null]], "baybe.insights.shap.is_shap_explainer": [[100, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[101, null]], "baybe.kernels": [[102, null]], "baybe.kernels.base": [[103, null]], "baybe.kernels.basic": [[107, null]], "baybe.kernels.composite": [[116, null]], "baybe.objectives": [[120, null]], "baybe.objectives.base": [[121, null]], "baybe.objectives.base.to_objective": [[123, null]], "baybe.objectives.desirability": [[124, null]], "baybe.objectives.desirability.scalarize": [[126, null]], "baybe.objectives.enum": [[127, null]], "baybe.objectives.pareto": [[129, null]], "baybe.objectives.single": [[131, null]], "baybe.objectives.validation": [[133, null]], "baybe.objectives.validation.validate_target_names": [[134, null]], "baybe.parameters": [[135, null]], "baybe.parameters.base": [[136, null]], "baybe.parameters.categorical": [[140, null]], "baybe.parameters.custom": [[143, null]], "baybe.parameters.enum": [[145, null]], "baybe.parameters.numerical": [[150, null]], "baybe.parameters.substance": [[153, null]], "baybe.parameters.substance.Smiles": [[154, null]], "baybe.parameters.utils": [[156, null]], "baybe.parameters.utils.activate_parameter": [[157, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[158, null]], "baybe.parameters.utils.is_inactive": [[159, null]], "baybe.parameters.utils.sort_parameters": [[160, null]], "baybe.parameters.validation": [[161, null]], "baybe.parameters.validation.validate_decorrelation": [[162, null]], "baybe.parameters.validation.validate_is_finite": [[163, null]], "baybe.parameters.validation.validate_unique_values": [[164, null]], "baybe.priors": [[165, null]], "baybe.priors.base": [[166, null]], "baybe.priors.basic": [[168, null]], "baybe.recommenders": [[176, null]], "baybe.recommenders.base": [[177, null]], "baybe.recommenders.meta": [[179, null]], "baybe.recommenders.meta.base": [[180, null]], "baybe.recommenders.meta.sequential": [[182, null]], "baybe.recommenders.naive": [[187, null]], "baybe.recommenders.pure": [[189, null]], "baybe.recommenders.pure.base": [[190, null]], "baybe.recommenders.pure.bayesian": [[192, null]], "baybe.recommenders.pure.bayesian.base": [[193, null]], "baybe.recommenders.pure.bayesian.botorch": [[195, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[197, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[198, null]], "baybe.recommenders.pure.nonpredictive": [[199, null]], "baybe.recommenders.pure.nonpredictive.base": [[200, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[202, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[207, null]], "baybe.searchspace": [[211, null]], "baybe.searchspace.continuous": [[212, null]], "baybe.searchspace.core": [[214, null]], "baybe.searchspace.core.to_searchspace": [[217, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[218, null]], "baybe.searchspace.discrete": [[219, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[222, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[223, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[224, null]], "baybe.searchspace.validation": [[225, null]], "baybe.searchspace.validation.get_transform_parameters": [[226, null]], "baybe.searchspace.validation.validate_parameter_names": [[227, null]], "baybe.searchspace.validation.validate_parameters": [[228, null]], "baybe.serialization": [[229, null]], "baybe.serialization.core": [[230, null]], "baybe.serialization.core.block_deserialization_hook": [[231, null]], "baybe.serialization.core.block_serialization_hook": [[232, null]], "baybe.serialization.core.converter": [[233, null]], "baybe.serialization.core.get_base_structure_hook": [[234, null]], "baybe.serialization.core.select_constructor_hook": [[235, null]], "baybe.serialization.core.unstructure_base": [[236, null]], "baybe.serialization.mixin": [[237, null]], "baybe.serialization.utils": [[239, null]], "baybe.serialization.utils.deserialize_dataframe": [[240, null]], "baybe.serialization.utils.serialize_dataframe": [[241, null]], "baybe.simulation": [[242, null]], "baybe.simulation.core": [[243, null]], "baybe.simulation.core.simulate_experiment": [[244, null]], "baybe.simulation.lookup": [[245, null]], "baybe.simulation.lookup.look_up_targets": [[246, null]], "baybe.simulation.scenarios": [[247, null]], "baybe.simulation.scenarios.simulate_scenarios": [[248, null]], "baybe.simulation.transfer_learning": [[249, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[250, null]], "baybe.surrogates": [[251, null]], "baybe.surrogates.bandit": [[252, null]], "baybe.surrogates.base": [[254, null]], "baybe.surrogates.base.PosteriorStatistic": [[256, null]], "baybe.surrogates.composite": [[259, null]], "baybe.surrogates.custom": [[261, null]], "baybe.surrogates.custom.register_custom_architecture": [[263, null]], "baybe.surrogates.gaussian_process": [[264, null]], "baybe.surrogates.gaussian_process.core": [[265, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[267, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[270, null]], "baybe.surrogates.gaussian_process.presets": [[271, null]], "baybe.surrogates.gaussian_process.presets.core": [[272, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[274, null]], "baybe.surrogates.gaussian_process.presets.default": [[275, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[277, null]], "baybe.surrogates.linear": [[279, null]], "baybe.surrogates.naive": [[281, null]], "baybe.surrogates.ngboost": [[283, null]], "baybe.surrogates.random_forest": [[285, null]], "baybe.surrogates.utils": [[287, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[288, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[289, null]], "baybe.surrogates.utils.catch_constant_targets": [[290, null]], "baybe.surrogates.validation": [[291, null]], "baybe.surrogates.validation.make_dict_validator": [[292, null]], "baybe.surrogates.validation.type_validation_converter": [[293, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[294, null]], "baybe.targets": [[295, null]], "baybe.targets.base": [[296, null]], "baybe.targets.binary": [[298, null]], "baybe.targets.binary.ChoiceValue": [[300, null]], "baybe.targets.enum": [[301, null]], "baybe.targets.numerical": [[304, null]], "baybe.targets.transforms": [[306, null]], "baybe.targets.transforms.bell_transform": [[307, null]], "baybe.targets.transforms.linear_transform": [[308, null]], "baybe.targets.transforms.triangular_transform": [[309, null]], "baybe.telemetry": [[310, null]], "baybe.telemetry.get_user_details": [[311, null]], "baybe.telemetry.is_enabled": [[312, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[313, null]], "baybe.telemetry.telemetry_record_value": [[314, null]], "baybe.utils": [[315, null]], "baybe.utils.augmentation": [[316, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[317, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[318, null]], "baybe.utils.basic": [[319, null]], "baybe.utils.basic.UNSPECIFIED": [[321, null]], "baybe.utils.basic.convert_to_float": [[324, null]], "baybe.utils.basic.find_subclass": [[325, null]], "baybe.utils.basic.get_baseclasses": [[326, null]], "baybe.utils.basic.get_subclasses": [[327, null]], "baybe.utils.basic.group_duplicate_values": [[328, null]], "baybe.utils.basic.hilberts_factory": [[329, null]], "baybe.utils.basic.is_all_instance": [[330, null]], "baybe.utils.basic.match_attributes": [[331, null]], "baybe.utils.basic.refers_to": [[332, null]], "baybe.utils.basic.register_hooks": [[333, null]], "baybe.utils.basic.to_tuple": [[334, null]], "baybe.utils.boolean": [[335, null]], "baybe.utils.boolean.check_if_in": [[336, null]], "baybe.utils.boolean.is_abstract": [[337, null]], "baybe.utils.boolean.strtobool": [[338, null]], "baybe.utils.chemistry": [[339, null]], "baybe.utils.chemistry.get_canonical_smiles": [[340, null]], "baybe.utils.chemistry.get_fingerprint_class": [[341, null]], "baybe.utils.chemistry.name_to_smiles": [[342, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[343, null]], "baybe.utils.clustering_algorithms": [[344, null]], "baybe.utils.clustering_algorithms.third_party": [[345, null]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[346, null]], "baybe.utils.conversion": [[348, null]], "baybe.utils.conversion.fraction_to_float": [[349, null]], "baybe.utils.conversion.nonstring_to_tuple": [[350, null]], "baybe.utils.conversion.to_string": [[351, null]], "baybe.utils.dataframe": [[352, null]], "baybe.utils.dataframe.add_fake_measurements": [[353, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[354, null]], "baybe.utils.dataframe.add_parameter_noise": [[355, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[356, null]], "baybe.utils.dataframe.create_fake_input": [[357, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[358, null]], "baybe.utils.dataframe.df_drop_string_columns": [[359, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[360, null]], "baybe.utils.dataframe.filter_df": [[361, null]], "baybe.utils.dataframe.fuzzy_row_match": [[362, null]], "baybe.utils.dataframe.get_transform_objects": [[363, null]], "baybe.utils.dataframe.handle_missing_values": [[364, null]], "baybe.utils.dataframe.normalize_input_dtypes": [[365, null]], "baybe.utils.dataframe.pretty_print_df": [[366, null]], "baybe.utils.dataframe.to_tensor": [[367, null]], "baybe.utils.dataframe.transform_target_columns": [[368, null]], "baybe.utils.interval": [[369, null]], "baybe.utils.interval.InfiniteIntervalError": [[370, null]], "baybe.utils.interval.convert_bounds": [[372, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[373, null]], "baybe.utils.memory": [[374, null]], "baybe.utils.memory.bytes_to_human_readable": [[375, null]], "baybe.utils.metadata": [[376, null]], "baybe.utils.metadata.to_metadata": [[379, null]], "baybe.utils.numerical": [[380, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[381, null]], "baybe.utils.numerical.DTypeFloatONNX": [[382, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[383, null]], "baybe.utils.numerical.closer_element": [[384, null]], "baybe.utils.numerical.closest_element": [[385, null]], "baybe.utils.numerical.geom_mean": [[386, null]], "baybe.utils.random": [[387, null]], "baybe.utils.random.set_random_seed": [[388, null]], "baybe.utils.random.temporary_seed": [[389, null]], "baybe.utils.sampling_algorithms": [[390, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[392, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[393, null]], "baybe.utils.scaling": [[394, null]], "baybe.utils.torch": [[396, null]], "baybe.utils.torch.DTypeFloatTorch": [[397, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[398, null]], "baybe.utils.validation": [[399, null]], "baybe.utils.validation.finite_float": [[400, null]], "baybe.utils.validation.non_inf_float": [[401, null]], "baybe.utils.validation.non_nan_float": [[402, null]], "baybe.utils.validation.validate_not_nan": [[403, null]], "baybe.utils.validation.validate_parameter_input": [[404, null]], "baybe.utils.validation.validate_target_input": [[405, null]], "classproperty": [[323, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[451, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNParEGO": [[12, null]], "qLogNoisyExpectedHypervolumeImprovement": [[13, null]], "qLogNoisyExpectedImprovement": [[14, null]], "qNegIntegratedPosteriorVariance": [[15, null]], "qNoisyExpectedHypervolumeImprovement": [[16, null]], "qNoisyExpectedImprovement": [[17, null]], "qPosteriorStandardDeviation": [[18, null]], "qProbabilityOfImprovement": [[19, null]], "qSimpleRegret": [[20, null]], "qThompsonSampling": [[21, null]], "qUpperConfidenceBound": [[22, null]], "\u201cPre-training\u201d stage": [[427, "pre-training-stage"]], "\u26a1 Quick Start": [[450, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[450, "maintainers"]], "\ud83d\udcbb Installation": [[450, "installation"]], "\ud83d\udcc4 License": [[450, "license"]], "\ud83d\udce1 Telemetry": [[450, "telemetry"]], "\ud83d\udd0b Batteries Included": [[450, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[450, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.IncompleteMeasurementsError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InputDataTypeWarning", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoMeasurementsError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.make_dict_validator", "_autosummary/baybe.surrogates.validation.type_validation_converter", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.clustering_algorithms", "_autosummary/baybe.utils.clustering_algorithms.third_party", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.conversion.to_string", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.handle_missing_values", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.metadata", "_autosummary/baybe.utils.metadata.MeasurableMetadata", "_autosummary/baybe.utils.metadata.Metadata", "_autosummary/baybe.utils.metadata.to_metadata", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.IncompleteMeasurementsError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InputDataTypeWarning.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoMeasurementsError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.make_dict_validator.rst", "_autosummary/baybe.surrogates.validation.type_validation_converter.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.clustering_algorithms.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.conversion.to_string.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.handle_missing_values.rst", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.metadata.rst", "_autosummary/baybe.utils.metadata.MeasurableMetadata.rst", "_autosummary/baybe.utils.metadata.Metadata.rst", "_autosummary/baybe.utils.metadata.to_metadata.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.incompletemeasurementserror method)": [[75, "baybe.exceptions.IncompleteMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[76, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.inputdatatypewarning method)": [[77, "baybe.exceptions.InputDataTypeWarning.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[78, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[79, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[80, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[81, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[82, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.nomeasurementserror method)": [[83, "baybe.exceptions.NoMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[84, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[85, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[86, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[87, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[88, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[89, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[90, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[91, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[92, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[97, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[178, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[191, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[220, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[258, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[276, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[278, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[323, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[320, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[370, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.metadata.measurablemetadata method)": [[377, "baybe.utils.metadata.MeasurableMetadata.__init__", false]], "__init__() (baybe.utils.metadata.metadata method)": [[378, "baybe.utils.metadata.Metadata.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[395, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.incompletemeasurementserror method)": [[75, "baybe.exceptions.IncompleteMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[76, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.inputdatatypewarning method)": [[77, "baybe.exceptions.InputDataTypeWarning.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[78, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[79, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[80, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[81, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[82, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.nomeasurementserror method)": [[83, "baybe.exceptions.NoMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[84, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[85, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[86, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[87, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[88, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[89, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[90, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[91, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[92, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[146, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[147, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[149, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[370, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[175, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_values() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[24, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[157, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[353, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[354, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[355, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[117, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[191, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[191, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[191, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[169, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[356, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[175, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[97, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[119, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[117, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[118, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[104, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[288, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[289, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[273, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[23, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[25, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[27, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[30, "module-baybe.campaign", false]], "baybe.constraints": [[32, "module-baybe.constraints", false]], "baybe.constraints.base": [[33, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[39, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[43, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[46, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[50, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[60, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[62, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[66, "module-baybe.exceptions", false]], "baybe.insights": [[93, "module-baybe.insights", false]], "baybe.insights.shap": [[94, "module-baybe.insights.shap", false]], "baybe.kernels": [[102, "module-baybe.kernels", false]], "baybe.kernels.base": [[103, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[107, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[116, "module-baybe.kernels.composite", false]], "baybe.objectives": [[120, "module-baybe.objectives", false]], "baybe.objectives.base": [[121, "module-baybe.objectives.base", false]], "baybe.objectives.desirability": [[124, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[127, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[129, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[131, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[133, "module-baybe.objectives.validation", false]], "baybe.parameters": [[135, "module-baybe.parameters", false]], "baybe.parameters.base": [[136, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[140, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[143, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[145, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[150, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[153, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[156, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[161, "module-baybe.parameters.validation", false]], "baybe.priors": [[165, "module-baybe.priors", false]], "baybe.priors.base": [[166, "module-baybe.priors.base", false]], "baybe.priors.basic": [[168, "module-baybe.priors.basic", false]], "baybe.recommenders": [[176, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[177, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[179, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[180, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[182, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[187, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[189, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[190, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[192, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[193, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[195, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[197, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[199, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[200, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[202, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[207, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[211, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[212, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[214, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[219, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[225, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[229, "module-baybe.serialization", false]], "baybe.serialization.core": [[230, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[237, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[239, "module-baybe.serialization.utils", false]], "baybe.simulation": [[242, "module-baybe.simulation", false]], "baybe.simulation.core": [[243, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[245, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[247, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[249, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[251, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[252, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[254, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[259, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[261, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[264, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[265, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[267, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[271, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[272, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[275, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[277, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[279, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[281, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[283, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[285, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[287, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[291, "module-baybe.surrogates.validation", false]], "baybe.targets": [[295, "module-baybe.targets", false]], "baybe.targets.base": [[296, "module-baybe.targets.base", false]], "baybe.targets.binary": [[298, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[301, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[304, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[306, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[310, "module-baybe.telemetry", false]], "baybe.utils": [[315, "module-baybe.utils", false]], "baybe.utils.augmentation": [[316, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[319, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[335, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[339, "module-baybe.utils.chemistry", false]], "baybe.utils.clustering_algorithms": [[344, "module-baybe.utils.clustering_algorithms", false]], "baybe.utils.clustering_algorithms.third_party": [[345, "module-baybe.utils.clustering_algorithms.third_party", false]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[346, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false]], "baybe.utils.conversion": [[348, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[352, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[369, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[374, "module-baybe.utils.memory", false]], "baybe.utils.metadata": [[376, "module-baybe.utils.metadata", false]], "baybe.utils.numerical": [[380, "module-baybe.utils.numerical", false]], "baybe.utils.random": [[387, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[390, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[394, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[396, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[399, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[303, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[307, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[169, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[169, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[299, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[231, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[232, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[375, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[31, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[290, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[146, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[141, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[336, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[300, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[323, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[384, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[385, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[395, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[220, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[191, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[105, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[260, "baybe.surrogates.composite.CompositeSurrogate", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[170, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[40, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[215, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[36, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[47, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[48, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[137, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[28, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[372, "baybe.utils.interval.convert_bounds", false]], "convert_to_float() (in module baybe.utils.basic)": [[324, "baybe.utils.basic.convert_to_float", false]], "converter (in module baybe.serialization.core)": [[233, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[371, "baybe.utils.interval.Interval.create", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[357, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[147, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[144, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[147, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[276, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[67, "baybe.exceptions.DeprecationError", false]], "description (baybe.objectives.base.objective property)": [[122, "baybe.objectives.base.Objective.description", false]], "description (baybe.objectives.desirability.desirabilityobjective property)": [[125, "baybe.objectives.desirability.DesirabilityObjective.description", false]], "description (baybe.objectives.pareto.paretoobjective property)": [[130, "baybe.objectives.pareto.ParetoObjective.description", false]], "description (baybe.objectives.single.singletargetobjective property)": [[132, "baybe.objectives.single.SingleTargetObjective.description", false]], "description (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.description", false]], "description (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.description", false]], "description (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.description", false]], "description (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.description", false]], "description (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.description", false]], "description (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.description", false]], "description (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.description", false]], "description (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.description", false]], "description (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.description", false]], "description (baybe.targets.base.target property)": [[297, "baybe.targets.base.Target.description", false]], "description (baybe.targets.binary.binarytarget property)": [[299, "baybe.targets.binary.BinaryTarget.description", false]], "description (baybe.targets.numerical.numericaltarget property)": [[305, "baybe.targets.numerical.NumericalTarget.description", false]], "description (baybe.utils.metadata.measurablemetadata attribute)": [[377, "baybe.utils.metadata.MeasurableMetadata.description", false]], "description (baybe.utils.metadata.metadata attribute)": [[378, "baybe.utils.metadata.Metadata.description", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[240, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[125, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[317, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[318, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[358, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[359, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[360, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[215, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[138, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[391, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[381, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[382, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[397, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[320, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[278, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[68, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[215, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.evaluate", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[220, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[97, "baybe.insights.shap.SHAPInsight.explain", false]], "explain_target() (baybe.insights.shap.shapinsight method)": [[97, "baybe.insights.shap.SHAPInsight.explain_target", false]], "explainers (baybe.insights.shap.shapinsight attribute)": [[97, "baybe.insights.shap.SHAPInsight.explainers", false]], "explainers (in module baybe.insights.shap)": [[95, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[299, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.FARTHEST", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[392, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[361, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[325, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[400, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[258, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[395, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fit_predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict", false]], "fit_transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[391, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsinitialization (class in baybe.recommenders.pure.nonpredictive.sampling)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[349, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[97, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[104, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[105, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[106, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[108, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[109, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[110, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[112, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[113, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[114, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[115, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[117, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[118, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[119, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[122, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[130, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[132, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[137, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[138, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[139, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[141, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[142, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[155, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[167, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[169, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[170, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[171, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[172, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[173, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[174, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[238, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[257, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[297, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[299, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[305, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[371, "baybe.utils.interval.Interval.from_dict", false]], "from_dict() (baybe.utils.metadata.measurablemetadata class method)": [[377, "baybe.utils.metadata.MeasurableMetadata.from_dict", false]], "from_dict() (baybe.utils.metadata.metadata class method)": [[378, "baybe.utils.metadata.Metadata.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[104, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[105, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[106, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[108, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[109, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[110, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[112, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[113, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[114, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[115, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[117, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[118, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[119, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[122, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[130, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[132, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[137, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[138, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[139, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[141, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[142, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[155, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[167, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[169, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[170, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[171, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[172, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[173, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[174, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[238, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[257, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[297, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[299, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[305, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[371, "baybe.utils.interval.Interval.from_json", false]], "from_json() (baybe.utils.metadata.measurablemetadata class method)": [[377, "baybe.utils.metadata.MeasurableMetadata.from_json", false]], "from_json() (baybe.utils.metadata.metadata class method)": [[378, "baybe.utils.metadata.Metadata.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[97, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[97, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[362, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[170, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[273, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[128, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[386, "baybe.utils.numerical.geom_mean", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_acquisition_function() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_acquisition_function", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[234, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[326, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[340, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[341, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_metadata_routing() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_metadata_routing", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[158, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params", false]], "get_subclasses() (in module baybe.utils.basic)": [[327, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[363, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[226, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[311, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[328, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[171, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[172, "baybe.priors.basic.HalfNormalPrior", false]], "handle_missing_values() (in module baybe.utils.dataframe)": [[364, "baybe.utils.dataframe.handle_missing_values", false]], "hilberts_factory() (in module baybe.utils.basic)": [[329, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[69, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[71, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[72, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[73, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[74, "baybe.exceptions.IncompatibleSurrogateError", false]], "incompletemeasurementserror": [[75, "baybe.exceptions.IncompleteMeasurementsError", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infeasibilityerror": [[76, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[370, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "initialization (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.initialization", false]], "inputdatatypewarning": [[77, "baybe.exceptions.InputDataTypeWarning", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[146, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[371, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[78, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[79, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[337, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[330, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[61, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_empty (baybe.utils.metadata.measurablemetadata property)": [[377, "baybe.utils.metadata.MeasurableMetadata.is_empty", false]], "is_empty (baybe.utils.metadata.metadata property)": [[378, "baybe.utils.metadata.Metadata.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[312, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[159, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[122, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[130, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[132, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[137, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[139, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[100, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[181, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "joint_acquisition_value() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.joint_acquisition_value", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[106, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kmedoids (class in baybe.utils.clustering_algorithms.third_party.kmedoids)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[109, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[110, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[113, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[114, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[115, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[109, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[110, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[113, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[114, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[115, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[303, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[308, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[108, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[173, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[174, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[246, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[371, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_dict_validator() (in module baybe.surrogates.validation)": [[292, "baybe.surrogates.validation.make_dict_validator", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[101, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[274, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[395, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[302, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[331, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[109, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[302, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[128, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurablemetadata (class in baybe.utils.metadata)": [[377, "baybe.utils.metadata.MeasurableMetadata", false]], "measurements (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[220, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.objectives.base.objective attribute)": [[122, "baybe.objectives.base.Objective.metadata", false]], "metadata (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.metadata", false]], "metadata (baybe.objectives.pareto.paretoobjective attribute)": [[130, "baybe.objectives.pareto.ParetoObjective.metadata", false]], "metadata (baybe.objectives.single.singletargetobjective attribute)": [[132, "baybe.objectives.single.SingleTargetObjective.metadata", false]], "metadata (baybe.parameters.base.continuousparameter attribute)": [[137, "baybe.parameters.base.ContinuousParameter.metadata", false]], "metadata (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.metadata", false]], "metadata (baybe.parameters.base.parameter attribute)": [[139, "baybe.parameters.base.Parameter.metadata", false]], "metadata (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.metadata", false]], "metadata (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.metadata", false]], "metadata (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.metadata", false]], "metadata (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.metadata", false]], "metadata (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.metadata", false]], "metadata (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.metadata", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metadata (baybe.targets.base.target attribute)": [[297, "baybe.targets.base.Target.metadata", false]], "metadata (baybe.targets.binary.binarytarget attribute)": [[299, "baybe.targets.binary.BinaryTarget.metadata", false]], "metadata (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.metadata", false]], "metadata (class in baybe.utils.metadata)": [[378, "baybe.utils.metadata.Metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[181, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[302, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimumcardinalityviolatedwarning": [[80, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "misc (baybe.utils.metadata.measurablemetadata attribute)": [[377, "baybe.utils.metadata.MeasurableMetadata.misc", false]], "misc (baybe.utils.metadata.metadata attribute)": [[378, "baybe.utils.metadata.Metadata.misc", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[81, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [23, "module-baybe.acquisition.base", false], [25, "module-baybe.acquisition.partial", false], [27, "module-baybe.acquisition.utils", false], [30, "module-baybe.campaign", false], [32, "module-baybe.constraints", false], [33, "module-baybe.constraints.base", false], [39, "module-baybe.constraints.conditions", false], [43, "module-baybe.constraints.continuous", false], [46, "module-baybe.constraints.deprecation", false], [50, "module-baybe.constraints.discrete", false], [60, "module-baybe.constraints.utils", false], [62, "module-baybe.constraints.validation", false], [66, "module-baybe.exceptions", false], [93, "module-baybe.insights", false], [94, "module-baybe.insights.shap", false], [102, "module-baybe.kernels", false], [103, "module-baybe.kernels.base", false], [107, "module-baybe.kernels.basic", false], [116, "module-baybe.kernels.composite", false], [120, "module-baybe.objectives", false], [121, "module-baybe.objectives.base", false], [124, "module-baybe.objectives.desirability", false], [127, "module-baybe.objectives.enum", false], [129, "module-baybe.objectives.pareto", false], [131, "module-baybe.objectives.single", false], [133, "module-baybe.objectives.validation", false], [135, "module-baybe.parameters", false], [136, "module-baybe.parameters.base", false], [140, "module-baybe.parameters.categorical", false], [143, "module-baybe.parameters.custom", false], [145, "module-baybe.parameters.enum", false], [150, "module-baybe.parameters.numerical", false], [153, "module-baybe.parameters.substance", false], [156, "module-baybe.parameters.utils", false], [161, "module-baybe.parameters.validation", false], [165, "module-baybe.priors", false], [166, "module-baybe.priors.base", false], [168, "module-baybe.priors.basic", false], [176, "module-baybe.recommenders", false], [177, "module-baybe.recommenders.base", false], [179, "module-baybe.recommenders.meta", false], [180, "module-baybe.recommenders.meta.base", false], [182, "module-baybe.recommenders.meta.sequential", false], [187, "module-baybe.recommenders.naive", false], [189, "module-baybe.recommenders.pure", false], [190, "module-baybe.recommenders.pure.base", false], [192, "module-baybe.recommenders.pure.bayesian", false], [193, "module-baybe.recommenders.pure.bayesian.base", false], [195, "module-baybe.recommenders.pure.bayesian.botorch", false], [197, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [199, "module-baybe.recommenders.pure.nonpredictive", false], [200, "module-baybe.recommenders.pure.nonpredictive.base", false], [202, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [207, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [211, "module-baybe.searchspace", false], [212, "module-baybe.searchspace.continuous", false], [214, "module-baybe.searchspace.core", false], [219, "module-baybe.searchspace.discrete", false], [225, "module-baybe.searchspace.validation", false], [229, "module-baybe.serialization", false], [230, "module-baybe.serialization.core", false], [237, "module-baybe.serialization.mixin", false], [239, "module-baybe.serialization.utils", false], [242, "module-baybe.simulation", false], [243, "module-baybe.simulation.core", false], [245, "module-baybe.simulation.lookup", false], [247, "module-baybe.simulation.scenarios", false], [249, "module-baybe.simulation.transfer_learning", false], [251, "module-baybe.surrogates", false], [252, "module-baybe.surrogates.bandit", false], [254, "module-baybe.surrogates.base", false], [259, "module-baybe.surrogates.composite", false], [261, "module-baybe.surrogates.custom", false], [264, "module-baybe.surrogates.gaussian_process", false], [265, "module-baybe.surrogates.gaussian_process.core", false], [267, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [271, "module-baybe.surrogates.gaussian_process.presets", false], [272, "module-baybe.surrogates.gaussian_process.presets.core", false], [275, "module-baybe.surrogates.gaussian_process.presets.default", false], [277, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [279, "module-baybe.surrogates.linear", false], [281, "module-baybe.surrogates.naive", false], [283, "module-baybe.surrogates.ngboost", false], [285, "module-baybe.surrogates.random_forest", false], [287, "module-baybe.surrogates.utils", false], [291, "module-baybe.surrogates.validation", false], [295, "module-baybe.targets", false], [296, "module-baybe.targets.base", false], [298, "module-baybe.targets.binary", false], [301, "module-baybe.targets.enum", false], [304, "module-baybe.targets.numerical", false], [306, "module-baybe.targets.transforms", false], [310, "module-baybe.telemetry", false], [315, "module-baybe.utils", false], [316, "module-baybe.utils.augmentation", false], [319, "module-baybe.utils.basic", false], [335, "module-baybe.utils.boolean", false], [339, "module-baybe.utils.chemistry", false], [344, "module-baybe.utils.clustering_algorithms", false], [345, "module-baybe.utils.clustering_algorithms.third_party", false], [346, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false], [348, "module-baybe.utils.conversion", false], [352, "module-baybe.utils.dataframe", false], [369, "module-baybe.utils.interval", false], [374, "module-baybe.utils.memory", false], [376, "module-baybe.utils.metadata", false], [380, "module-baybe.utils.numerical", false], [387, "module-baybe.utils.random", false], [390, "module-baybe.utils.sampling_algorithms", false], [394, "module-baybe.utils.scaling", false], [396, "module-baybe.utils.torch", false], [399, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[122, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[125, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[130, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[132, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[137, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[139, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[297, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[299, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[342, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[82, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "nomeasurementserror": [[83, "baybe.exceptions.NoMeasurementsError", false]], "non_inf_float() (in module baybe.utils.validation)": [[401, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[402, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[96, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[350, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[84, "baybe.exceptions.NoRecommendersLeftError", false]], "normalize_input_dtypes() (in module baybe.utils.dataframe)": [[365, "baybe.utils.dataframe.normalize_input_dtypes", false]], "normalprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[85, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[86, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[109, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[114, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[305, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[87, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[122, "baybe.objectives.base.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[112, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[112, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[146, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[88, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[119, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[119, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[139, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[222, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[223, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[148, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[130, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[110, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[110, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[110, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[97, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[256, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[112, "baybe.kernels.basic.PolynomialKernel.power", false]], "predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[366, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[167, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[118, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[191, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.RANDOM", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[391, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "random_tie_break (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.random_tie_break", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[170, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[113, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[178, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[191, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[178, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[332, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[263, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[333, "baybe.utils.basic.register_hooks", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "rffkernel (class in baybe.kernels.basic)": [[114, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[115, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[393, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[126, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[128, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[171, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[172, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[173, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[174, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[119, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[215, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[89, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[216, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[235, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[41, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[198, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[241, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[238, "baybe.serialization.mixin.SerialMixin", false]], "set_output() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output", false]], "set_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params", false]], "set_random_seed() (in module baybe.utils.random)": [[388, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[98, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[99, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[97, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[175, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[244, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[248, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[250, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[132, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[154, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[343, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[175, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[160, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[29, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[338, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[49, "baybe.constraints.deprecation.structure_constraints", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[41, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[213, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[149, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[155, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[299, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[257, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[257, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[257, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[258, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[260, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[297, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[302, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[122, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[125, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[130, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[132, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[303, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[142, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[313, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[314, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[389, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[42, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[258, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[238, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.to_dict", false]], "to_dict() (baybe.utils.metadata.measurablemetadata method)": [[377, "baybe.utils.metadata.MeasurableMetadata.to_dict", false]], "to_dict() (baybe.utils.metadata.metadata method)": [[378, "baybe.utils.metadata.Metadata.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[238, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.to_json", false]], "to_json() (baybe.utils.metadata.measurablemetadata method)": [[377, "baybe.utils.metadata.MeasurableMetadata.to_json", false]], "to_json() (baybe.utils.metadata.metadata method)": [[378, "baybe.utils.metadata.Metadata.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_metadata() (in module baybe.utils.metadata)": [[379, "baybe.utils.metadata.to_metadata", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[123, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[217, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.conversion)": [[351, "baybe.utils.conversion.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[367, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[334, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[395, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[368, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[303, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[309, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.type", false]], "type_validation_converter (in module baybe.surrogates.validation)": [[293, "baybe.surrogates.validation.type_validation_converter", false]], "unidentifiedsubclasserror": [[90, "baybe.exceptions.UnidentifiedSubclassError", false]], "unit (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.unit", false]], "unit (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.unit", false]], "unit (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.unit", false]], "unit (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.unit", false]], "unit (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.unit", false]], "unit (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.unit", false]], "unit (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.unit", false]], "unit (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.unit", false]], "unit (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.unit", false]], "unit (baybe.targets.base.target property)": [[297, "baybe.targets.base.Target.unit", false]], "unit (baybe.targets.binary.binarytarget property)": [[299, "baybe.targets.binary.BinaryTarget.unit", false]], "unit (baybe.targets.numerical.numericaltarget property)": [[305, "baybe.targets.numerical.NumericalTarget.unit", false]], "unit (baybe.utils.metadata.measurablemetadata attribute)": [[377, "baybe.utils.metadata.MeasurableMetadata.unit", false]], "unmatchedattributeerror": [[91, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[321, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[322, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[236, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[92, "baybe.exceptions.UnusedObjectWarning", false]], "update_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.update_measurements", false]], "upper (baybe.utils.interval.interval attribute)": [[371, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[373, "baybe.utils.interval.use_fallback_constructor_hook", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[63, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[64, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[65, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[294, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[162, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[163, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[403, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[404, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[227, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[228, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[218, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[224, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[405, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[134, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[164, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[108, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[108, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[383, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[398, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [30, 0, 0, "-", "campaign"], [32, 0, 0, "-", "constraints"], [66, 0, 0, "-", "exceptions"], [93, 0, 0, "-", "insights"], [102, 0, 0, "-", "kernels"], [120, 0, 0, "-", "objectives"], [135, 0, 0, "-", "parameters"], [165, 0, 0, "-", "priors"], [176, 0, 0, "-", "recommenders"], [211, 0, 0, "-", "searchspace"], [229, 0, 0, "-", "serialization"], [242, 0, 0, "-", "simulation"], [251, 0, 0, "-", "surrogates"], [295, 0, 0, "-", "targets"], [310, 0, 0, "-", "telemetry"], [315, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [23, 0, 0, "-", "base"], [25, 0, 0, "-", "partial"], [27, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNParEGO"], [13, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [14, 1, 1, "", "qLogNoisyExpectedImprovement"], [15, 1, 1, "", "qNegIntegratedPosteriorVariance"], [16, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [17, 1, 1, "", "qNoisyExpectedImprovement"], [18, 1, 1, "", "qPosteriorStandardDeviation"], [19, 1, 1, "", "qProbabilityOfImprovement"], [20, 1, 1, "", "qSimpleRegret"], [21, 1, 1, "", "qThompsonSampling"], [22, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.evaluate.params": [[3, 4, 1, "", "candidates"], [3, 4, 1, "", "jointly"], [3, 4, 1, "", "measurements"], [3, 4, 1, "", "objective"], [3, 4, 1, "", "pending_experiments"], [3, 4, 1, "", "searchspace"], [3, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate.params": [[4, 4, 1, "", "candidates"], [4, 4, 1, "", "jointly"], [4, 4, 1, "", "measurements"], [4, 4, 1, "", "objective"], [4, 4, 1, "", "pending_experiments"], [4, 4, 1, "", "searchspace"], [4, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "evaluate"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.evaluate.params": [[5, 4, 1, "", "candidates"], [5, 4, 1, "", "jointly"], [5, 4, 1, "", "measurements"], [5, 4, 1, "", "objective"], [5, 4, 1, "", "pending_experiments"], [5, 4, 1, "", "searchspace"], [5, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "evaluate"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate.params": [[6, 4, 1, "", "candidates"], [6, 4, 1, "", "jointly"], [6, 4, 1, "", "measurements"], [6, 4, 1, "", "objective"], [6, 4, 1, "", "pending_experiments"], [6, 4, 1, "", "searchspace"], [6, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "evaluate"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate.params": [[7, 4, 1, "", "candidates"], [7, 4, 1, "", "jointly"], [7, 4, 1, "", "measurements"], [7, 4, 1, "", "objective"], [7, 4, 1, "", "pending_experiments"], [7, 4, 1, "", "searchspace"], [7, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate.params": [[8, 4, 1, "", "candidates"], [8, 4, 1, "", "jointly"], [8, 4, 1, "", "measurements"], [8, 4, 1, "", "objective"], [8, 4, 1, "", "pending_experiments"], [8, 4, 1, "", "searchspace"], [8, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "evaluate"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.evaluate.params": [[9, 4, 1, "", "candidates"], [9, 4, 1, "", "jointly"], [9, 4, 1, "", "measurements"], [9, 4, 1, "", "objective"], [9, 4, 1, "", "pending_experiments"], [9, 4, 1, "", "searchspace"], [9, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "evaluate"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate.params": [[10, 4, 1, "", "candidates"], [10, 4, 1, "", "jointly"], [10, 4, 1, "", "measurements"], [10, 4, 1, "", "objective"], [10, 4, 1, "", "pending_experiments"], [10, 4, 1, "", "searchspace"], [10, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "evaluate"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate.params": [[11, 4, 1, "", "candidates"], [11, 4, 1, "", "jointly"], [11, 4, 1, "", "measurements"], [11, 4, 1, "", "objective"], [11, 4, 1, "", "pending_experiments"], [11, 4, 1, "", "searchspace"], [11, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNParEGO": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "evaluate"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.evaluate.params": [[12, 4, 1, "", "candidates"], [12, 4, 1, "", "jointly"], [12, 4, 1, "", "measurements"], [12, 4, 1, "", "objective"], [12, 4, 1, "", "pending_experiments"], [12, 4, 1, "", "searchspace"], [12, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "compute_ref_point"], [13, 2, 1, "", "evaluate"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "prune_baseline"], [13, 3, 1, "", "reference_point"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[13, 4, 1, "", "array"], [13, 4, 1, "", "factor"], [13, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate.params": [[13, 4, 1, "", "candidates"], [13, 4, 1, "", "jointly"], [13, 4, 1, "", "measurements"], [13, 4, 1, "", "objective"], [13, 4, 1, "", "pending_experiments"], [13, 4, 1, "", "searchspace"], [13, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "evaluate"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate.params": [[14, 4, 1, "", "candidates"], [14, 4, 1, "", "jointly"], [14, 4, 1, "", "measurements"], [14, 4, 1, "", "objective"], [14, 4, 1, "", "pending_experiments"], [14, 4, 1, "", "searchspace"], [14, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "evaluate"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "get_integration_points"], [15, 3, 1, "", "sampling_fraction"], [15, 3, 1, "", "sampling_method"], [15, 3, 1, "", "sampling_n_points"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate.params": [[15, 4, 1, "", "candidates"], [15, 4, 1, "", "jointly"], [15, 4, 1, "", "measurements"], [15, 4, 1, "", "objective"], [15, 4, 1, "", "pending_experiments"], [15, 4, 1, "", "searchspace"], [15, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[15, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "compute_ref_point"], [16, 2, 1, "", "evaluate"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "reference_point"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[16, 4, 1, "", "array"], [16, 4, 1, "", "factor"], [16, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate.params": [[16, 4, 1, "", "candidates"], [16, 4, 1, "", "jointly"], [16, 4, 1, "", "measurements"], [16, 4, 1, "", "objective"], [16, 4, 1, "", "pending_experiments"], [16, 4, 1, "", "searchspace"], [16, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "evaluate"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "prune_baseline"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate.params": [[17, 4, 1, "", "candidates"], [17, 4, 1, "", "jointly"], [17, 4, 1, "", "measurements"], [17, 4, 1, "", "objective"], [17, 4, 1, "", "pending_experiments"], [17, 4, 1, "", "searchspace"], [17, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "evaluate"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate.params": [[18, 4, 1, "", "candidates"], [18, 4, 1, "", "jointly"], [18, 4, 1, "", "measurements"], [18, 4, 1, "", "objective"], [18, 4, 1, "", "pending_experiments"], [18, 4, 1, "", "searchspace"], [18, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "evaluate"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate.params": [[19, 4, 1, "", "candidates"], [19, 4, 1, "", "jointly"], [19, 4, 1, "", "measurements"], [19, 4, 1, "", "objective"], [19, 4, 1, "", "pending_experiments"], [19, 4, 1, "", "searchspace"], [19, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "evaluate"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.evaluate.params": [[20, 4, 1, "", "candidates"], [20, 4, 1, "", "jointly"], [20, 4, 1, "", "measurements"], [20, 4, 1, "", "objective"], [20, 4, 1, "", "pending_experiments"], [20, 4, 1, "", "searchspace"], [20, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "evaluate"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "n_mc_samples"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.evaluate.params": [[21, 4, 1, "", "candidates"], [21, 4, 1, "", "jointly"], [21, 4, 1, "", "measurements"], [21, 4, 1, "", "objective"], [21, 4, 1, "", "pending_experiments"], [21, 4, 1, "", "searchspace"], [21, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 3, 1, "", "beta"], [22, 2, 1, "", "evaluate"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate.params": [[22, 4, 1, "", "candidates"], [22, 4, 1, "", "jointly"], [22, 4, 1, "", "measurements"], [22, 4, 1, "", "objective"], [22, 4, 1, "", "pending_experiments"], [22, 4, 1, "", "searchspace"], [22, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[22, 4, 1, "", "string"]], "baybe.acquisition.base": [[24, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 2, 1, "", "evaluate"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.evaluate.params": [[24, 4, 1, "", "candidates"], [24, 4, 1, "", "jointly"], [24, 4, 1, "", "measurements"], [24, 4, 1, "", "objective"], [24, 4, 1, "", "pending_experiments"], [24, 4, 1, "", "searchspace"], [24, 4, 1, "", "surrogate"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[24, 4, 1, "", "string"]], "baybe.acquisition.partial": [[26, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "botorch_acqf"], [26, 3, 1, "", "pin_discrete"], [26, 3, 1, "", "pinned_part"], [26, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[26, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[28, 5, 1, "", "convert_acqf"], [29, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[31, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "acquisition_values"], [31, 2, 1, "", "add_measurements"], [31, 3, 1, "", "allow_recommending_already_measured"], [31, 3, 1, "", "allow_recommending_already_recommended"], [31, 3, 1, "", "allow_recommending_pending_experiments"], [31, 2, 1, "", "from_config"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 2, 1, "", "get_acquisition_function"], [31, 2, 1, "", "get_surrogate"], [31, 2, 1, "", "joint_acquisition_value"], [31, 6, 1, "", "measurements"], [31, 3, 1, "", "n_batches_done"], [31, 3, 1, "", "n_fits_done"], [31, 3, 1, "", "objective"], [31, 6, 1, "", "parameters"], [31, 2, 1, "", "posterior"], [31, 2, 1, "", "posterior_stats"], [31, 2, 1, "", "recommend"], [31, 3, 1, "", "recommender"], [31, 3, 1, "", "searchspace"], [31, 6, 1, "", "targets"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"], [31, 2, 1, "", "toggle_discrete_candidates"], [31, 2, 1, "", "update_measurements"], [31, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.acquisition_values.params": [[31, 4, 1, "", "acquisition_function"], [31, 4, 1, "", "batch_size"], [31, 4, 1, "", "candidates"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.add_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[31, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[31, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_acquisition_function.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.get_surrogate.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[31, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[31, 4, 1, "", "candidates"], [31, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[31, 4, 1, "", "complement"], [31, 4, 1, "", "constraints"], [31, 4, 1, "", "dry_run"], [31, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.update_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.validate_config.params": [[31, 4, 1, "", "config_json"]], "baybe.constraints": [[33, 0, 0, "-", "base"], [39, 0, 0, "-", "conditions"], [43, 0, 0, "-", "continuous"], [46, 0, 0, "-", "deprecation"], [50, 0, 0, "-", "discrete"], [60, 0, 0, "-", "utils"], [62, 0, 0, "-", "validation"]], "baybe.constraints.base": [[34, 1, 1, "", "CardinalityConstraint"], [35, 1, 1, "", "Constraint"], [36, 1, 1, "", "ContinuousConstraint"], [37, 1, 1, "", "ContinuousNonlinearConstraint"], [38, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "max_cardinality"], [34, 3, 1, "", "min_cardinality"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "eval_during_augmentation"], [36, 3, 1, "", "eval_during_creation"], [36, 3, 1, "", "eval_during_modeling"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 6, 1, "", "is_continuous"], [36, 6, 1, "", "is_discrete"], [36, 3, 1, "", "numerical_only"], [36, 3, 1, "", "parameters"], [36, 2, 1, "", "summary"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 2, 1, "", "get_invalid"], [38, 2, 1, "", "get_invalid_polars"], [38, 2, 1, "", "get_valid"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[38, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[38, 4, 1, "", "df"]], "baybe.constraints.conditions": [[40, 1, 1, "", "Condition"], [41, 1, 1, "", "SubSelectionCondition"], [42, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[40, 2, 1, "", "evaluate"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"], [40, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[40, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[40, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "selection"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"], [41, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[41, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[41, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "evaluate"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 3, 1, "", "operator"], [42, 3, 1, "", "threshold"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"], [42, 2, 1, "", "to_polars"], [42, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[42, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[42, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[44, 1, 1, "", "ContinuousCardinalityConstraint"], [45, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "eval_during_augmentation"], [44, 3, 1, "", "eval_during_creation"], [44, 3, 1, "", "eval_during_modeling"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 2, 1, "", "get_absolute_thresholds"], [44, 2, 1, "", "inactive_parameter_combinations"], [44, 6, 1, "", "is_continuous"], [44, 6, 1, "", "is_discrete"], [44, 3, 1, "", "max_cardinality"], [44, 3, 1, "", "min_cardinality"], [44, 6, 1, "", "n_inactive_parameter_combinations"], [44, 3, 1, "", "numerical_only"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "relative_threshold"], [44, 2, 1, "", "sample_inactive_parameters"], [44, 2, 1, "", "summary"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[44, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[44, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[44, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[45, 2, 1, "", "__init__"], [45, 3, 1, "", "coefficients"], [45, 3, 1, "", "eval_during_augmentation"], [45, 3, 1, "", "eval_during_creation"], [45, 3, 1, "", "eval_during_modeling"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 6, 1, "", "is_continuous"], [45, 6, 1, "", "is_discrete"], [45, 6, 1, "", "is_eq"], [45, 3, 1, "", "numerical_only"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "rhs"], [45, 2, 1, "", "summary"], [45, 2, 1, "", "to_botorch"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[45, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[45, 4, 1, "", "idx_offset"], [45, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[47, 5, 1, "", "ContinuousLinearEqualityConstraint"], [48, 5, 1, "", "ContinuousLinearInequalityConstraint"], [49, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[51, 1, 1, "", "DiscreteCardinalityConstraint"], [52, 1, 1, "", "DiscreteCustomConstraint"], [53, 1, 1, "", "DiscreteDependenciesConstraint"], [54, 1, 1, "", "DiscreteExcludeConstraint"], [55, 1, 1, "", "DiscreteLinkedParametersConstraint"], [56, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [57, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [58, 1, 1, "", "DiscreteProductConstraint"], [59, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "max_cardinality"], [51, 3, 1, "", "min_cardinality"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"], [52, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "affected_parameters"], [53, 3, 1, "", "conditions"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 3, 1, "", "permutation_invariant"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "combiner"], [54, 3, 1, "", "conditions"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "dependencies"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "condition"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[58, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[59, 2, 1, "", "__init__"], [59, 3, 1, "", "condition"], [59, 3, 1, "", "eval_during_augmentation"], [59, 3, 1, "", "eval_during_creation"], [59, 3, 1, "", "eval_during_modeling"], [59, 2, 1, "", "from_dict"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_invalid"], [59, 2, 1, "", "get_invalid_polars"], [59, 2, 1, "", "get_valid"], [59, 6, 1, "", "is_continuous"], [59, 6, 1, "", "is_discrete"], [59, 3, 1, "", "numerical_only"], [59, 3, 1, "", "parameters"], [59, 2, 1, "", "summary"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[59, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[59, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[59, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[59, 4, 1, "", "df"]], "baybe.constraints.utils": [[61, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[61, 4, 1, "", "check_maximum"], [61, 4, 1, "", "check_minimum"], [61, 4, 1, "", "df"], [61, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[63, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [64, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [65, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[63, 4, 1, "", "constraint"], [63, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[64, 4, 1, "", "constraints"]], "baybe.exceptions": [[67, 7, 1, "", "DeprecationError"], [68, 7, 1, "", "EmptySearchSpaceError"], [69, 7, 1, "", "IncompatibilityError"], [70, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [71, 7, 1, "", "IncompatibleArgumentError"], [72, 7, 1, "", "IncompatibleExplainerError"], [73, 7, 1, "", "IncompatibleSearchSpaceError"], [74, 7, 1, "", "IncompatibleSurrogateError"], [75, 7, 1, "", "IncompleteMeasurementsError"], [76, 7, 1, "", "InfeasibilityError"], [77, 7, 1, "", "InputDataTypeWarning"], [78, 7, 1, "", "InvalidSurrogateModelError"], [79, 7, 1, "", "InvalidTargetValueError"], [80, 7, 1, "", "MinimumCardinalityViolatedWarning"], [81, 7, 1, "", "ModelNotTrainedError"], [82, 7, 1, "", "NoMCAcquisitionFunctionError"], [83, 7, 1, "", "NoMeasurementsError"], [84, 7, 1, "", "NoRecommendersLeftError"], [85, 7, 1, "", "NotEnoughPointsLeftError"], [86, 7, 1, "", "NothingToSimulateError"], [87, 7, 1, "", "NumericalUnderflowError"], [88, 7, 1, "", "OptionalImportError"], [89, 7, 1, "", "SearchSpaceMatchWarning"], [90, 7, 1, "", "UnidentifiedSubclassError"], [91, 7, 1, "", "UnmatchedAttributeError"], [92, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.IncompleteMeasurementsError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.InputDataTypeWarning": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.NoMeasurementsError": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__new__"]], "baybe.insights": [[94, 0, 0, "-", "shap"]], "baybe.insights.shap": [[95, 8, 1, "", "EXPLAINERS"], [96, 8, 1, "", "NON_SHAP_EXPLAINERS"], [97, 1, 1, "", "SHAPInsight"], [98, 8, 1, "", "SHAP_EXPLAINERS"], [99, 8, 1, "", "SHAP_PLOTS"], [100, 5, 1, "", "is_shap_explainer"], [101, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[97, 2, 1, "", "__init__"], [97, 3, 1, "", "background_data"], [97, 2, 1, "", "explain"], [97, 2, 1, "", "explain_target"], [97, 3, 1, "", "explainers"], [97, 2, 1, "", "from_campaign"], [97, 2, 1, "", "from_recommender"], [97, 2, 1, "", "from_surrogate"], [97, 2, 1, "", "plot"]], "baybe.insights.shap.SHAPInsight.explain.params": [[97, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.explain_target.params": [[97, 4, 1, "", "data"], [97, 4, 1, "", "target_index"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[97, 4, 1, "", "campaign"], [97, 4, 1, "", "explainer_cls"], [97, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[97, 4, 1, "", "explainer_cls"], [97, 4, 1, "", "measurements"], [97, 4, 1, "", "objective"], [97, 4, 1, "", "recommender"], [97, 4, 1, "", "searchspace"], [97, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[97, 4, 1, "", "**kwargs"], [97, 4, 1, "", "data"], [97, 4, 1, "", "explanation_index"], [97, 4, 1, "", "plot_type"], [97, 4, 1, "", "show"], [97, 4, 1, "", "target_index"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[101, 4, 1, "", "data"], [101, 4, 1, "", "explainer_cls"], [101, 4, 1, "", "surrogate"], [101, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[103, 0, 0, "-", "base"], [107, 0, 0, "-", "basic"], [116, 0, 0, "-", "composite"]], "baybe.kernels.base": [[104, 1, 1, "", "BasicKernel"], [105, 1, 1, "", "CompositeKernel"], [106, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[106, 4, 1, "", "string"]], "baybe.kernels.basic": [[108, 1, 1, "", "LinearKernel"], [109, 1, 1, "", "MaternKernel"], [110, 1, 1, "", "PeriodicKernel"], [111, 1, 1, "", "PiecewisePolynomialKernel"], [112, 1, 1, "", "PolynomialKernel"], [113, 1, 1, "", "RBFKernel"], [114, 1, 1, "", "RFFKernel"], [115, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"], [108, 3, 1, "", "variance_initial_value"], [108, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 3, 1, "", "lengthscale_initial_value"], [109, 3, 1, "", "lengthscale_prior"], [109, 3, 1, "", "nu"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 3, 1, "", "lengthscale_initial_value"], [110, 3, 1, "", "lengthscale_prior"], [110, 3, 1, "", "period_length_initial_value"], [110, 3, 1, "", "period_length_prior"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_factory"], [110, 2, 1, "", "to_gpytorch"], [110, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[110, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 3, 1, "", "lengthscale_initial_value"], [111, 3, 1, "", "lengthscale_prior"], [111, 3, 1, "", "q"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[111, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "offset_initial_value"], [112, 3, 1, "", "offset_prior"], [112, 3, 1, "", "power"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[112, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 3, 1, "", "lengthscale_initial_value"], [113, 3, 1, "", "lengthscale_prior"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_factory"], [113, 2, 1, "", "to_gpytorch"], [113, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[113, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 3, 1, "", "lengthscale_initial_value"], [114, 3, 1, "", "lengthscale_prior"], [114, 3, 1, "", "num_samples"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_factory"], [114, 2, 1, "", "to_gpytorch"], [114, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[114, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 3, 1, "", "lengthscale_initial_value"], [115, 3, 1, "", "lengthscale_prior"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_factory"], [115, 2, 1, "", "to_gpytorch"], [115, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[115, 4, 1, "", "string"]], "baybe.kernels.composite": [[117, 1, 1, "", "AdditiveKernel"], [118, 1, 1, "", "ProductKernel"], [119, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "base_kernels"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_factory"], [117, 2, 1, "", "to_gpytorch"], [117, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[117, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[118, 2, 1, "", "__init__"], [118, 3, 1, "", "base_kernels"], [118, 2, 1, "", "from_dict"], [118, 2, 1, "", "from_json"], [118, 2, 1, "", "to_dict"], [118, 2, 1, "", "to_factory"], [118, 2, 1, "", "to_gpytorch"], [118, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[118, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[118, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[119, 2, 1, "", "__init__"], [119, 3, 1, "", "base_kernel"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 3, 1, "", "outputscale_initial_value"], [119, 3, 1, "", "outputscale_prior"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_factory"], [119, 2, 1, "", "to_gpytorch"], [119, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[119, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[119, 4, 1, "", "string"]], "baybe.objectives": [[121, 0, 0, "-", "base"], [124, 0, 0, "-", "desirability"], [127, 0, 0, "-", "enum"], [129, 0, 0, "-", "pareto"], [131, 0, 0, "-", "single"], [133, 0, 0, "-", "validation"]], "baybe.objectives.base": [[122, 1, 1, "", "Objective"], [123, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[122, 2, 1, "", "__init__"], [122, 6, 1, "", "description"], [122, 2, 1, "", "from_dict"], [122, 2, 1, "", "from_json"], [122, 3, 1, "", "is_multi_output"], [122, 3, 1, "", "metadata"], [122, 6, 1, "", "n_outputs"], [122, 6, 1, "", "targets"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "to_json"], [122, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[122, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[122, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[122, 4, 1, "", "allow_extra"], [122, 4, 1, "", "allow_missing"], [122, 4, 1, "", "df"]], "baybe.objectives.desirability": [[125, 1, 1, "", "DesirabilityObjective"], [126, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[125, 2, 1, "", "__init__"], [125, 6, 1, "", "description"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 3, 1, "", "is_multi_output"], [125, 3, 1, "", "metadata"], [125, 6, 1, "", "n_outputs"], [125, 3, 1, "", "scalarizer"], [125, 6, 1, "", "targets"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "transform"], [125, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[125, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[125, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[125, 4, 1, "", "allow_extra"], [125, 4, 1, "", "allow_missing"], [125, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[126, 4, 1, "", "scalarizer"], [126, 4, 1, "", "values"], [126, 4, 1, "", "weights"]], "baybe.objectives.enum": [[128, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[128, 3, 1, "", "GEOM_MEAN"], [128, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[130, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[130, 2, 1, "", "__init__"], [130, 6, 1, "", "description"], [130, 2, 1, "", "from_dict"], [130, 2, 1, "", "from_json"], [130, 3, 1, "", "is_multi_output"], [130, 3, 1, "", "metadata"], [130, 6, 1, "", "n_outputs"], [130, 6, 1, "", "targets"], [130, 2, 1, "", "to_dict"], [130, 2, 1, "", "to_json"], [130, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[130, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[130, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[130, 4, 1, "", "allow_extra"], [130, 4, 1, "", "allow_missing"], [130, 4, 1, "", "df"]], "baybe.objectives.single": [[132, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[132, 2, 1, "", "__init__"], [132, 6, 1, "", "description"], [132, 2, 1, "", "from_dict"], [132, 2, 1, "", "from_json"], [132, 3, 1, "", "is_multi_output"], [132, 3, 1, "", "metadata"], [132, 6, 1, "", "n_outputs"], [132, 6, 1, "", "targets"], [132, 2, 1, "", "to_dict"], [132, 2, 1, "", "to_json"], [132, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[132, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[132, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[132, 4, 1, "", "allow_extra"], [132, 4, 1, "", "allow_missing"], [132, 4, 1, "", "df"]], "baybe.objectives.validation": [[134, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[136, 0, 0, "-", "base"], [140, 0, 0, "-", "categorical"], [143, 0, 0, "-", "custom"], [145, 0, 0, "-", "enum"], [150, 0, 0, "-", "numerical"], [153, 0, 0, "-", "substance"], [156, 0, 0, "-", "utils"], [161, 0, 0, "-", "validation"]], "baybe.parameters.base": [[137, 1, 1, "", "ContinuousParameter"], [138, 1, 1, "", "DiscreteParameter"], [139, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[137, 2, 1, "", "__init__"], [137, 6, 1, "", "comp_rep_columns"], [137, 6, 1, "", "description"], [137, 2, 1, "", "from_dict"], [137, 2, 1, "", "from_json"], [137, 6, 1, "", "is_continuous"], [137, 6, 1, "", "is_discrete"], [137, 2, 1, "", "is_in_range"], [137, 3, 1, "", "is_numerical"], [137, 3, 1, "", "metadata"], [137, 3, 1, "", "name"], [137, 2, 1, "", "summary"], [137, 2, 1, "", "to_dict"], [137, 2, 1, "", "to_json"], [137, 2, 1, "", "to_searchspace"], [137, 2, 1, "", "to_subspace"], [137, 6, 1, "", "unit"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[137, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[137, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[137, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[138, 2, 1, "", "__init__"], [138, 6, 1, "", "active_values"], [138, 6, 1, "", "comp_df"], [138, 6, 1, "", "comp_rep_columns"], [138, 6, 1, "", "description"], [138, 3, 1, "", "encoding"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 6, 1, "", "is_continuous"], [138, 6, 1, "", "is_discrete"], [138, 2, 1, "", "is_in_range"], [138, 3, 1, "", "is_numerical"], [138, 3, 1, "", "metadata"], [138, 3, 1, "", "name"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_json"], [138, 2, 1, "", "to_searchspace"], [138, 2, 1, "", "to_subspace"], [138, 2, 1, "", "transform"], [138, 6, 1, "", "unit"], [138, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[138, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[138, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[138, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[138, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[139, 2, 1, "", "__init__"], [139, 6, 1, "", "comp_rep_columns"], [139, 6, 1, "", "description"], [139, 2, 1, "", "from_dict"], [139, 2, 1, "", "from_json"], [139, 6, 1, "", "is_continuous"], [139, 6, 1, "", "is_discrete"], [139, 2, 1, "", "is_in_range"], [139, 3, 1, "", "is_numerical"], [139, 3, 1, "", "metadata"], [139, 3, 1, "", "name"], [139, 2, 1, "", "summary"], [139, 2, 1, "", "to_dict"], [139, 2, 1, "", "to_json"], [139, 2, 1, "", "to_searchspace"], [139, 6, 1, "", "unit"]], "baybe.parameters.base.Parameter.from_dict.params": [[139, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[139, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[139, 4, 1, "", "item"]], "baybe.parameters.categorical": [[141, 1, 1, "", "CategoricalParameter"], [142, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "active_values"], [141, 6, 1, "", "comp_df"], [141, 6, 1, "", "comp_rep_columns"], [141, 6, 1, "", "description"], [141, 3, 1, "", "encoding"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 6, 1, "", "is_continuous"], [141, 6, 1, "", "is_discrete"], [141, 2, 1, "", "is_in_range"], [141, 3, 1, "", "is_numerical"], [141, 3, 1, "", "metadata"], [141, 3, 1, "", "name"], [141, 2, 1, "", "summary"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_json"], [141, 2, 1, "", "to_searchspace"], [141, 2, 1, "", "to_subspace"], [141, 2, 1, "", "transform"], [141, 6, 1, "", "unit"], [141, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[141, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[141, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[141, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[141, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "active_values"], [142, 6, 1, "", "comp_df"], [142, 6, 1, "", "comp_rep_columns"], [142, 6, 1, "", "description"], [142, 3, 1, "", "encoding"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "metadata"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 2, 1, "", "to_subspace"], [142, 2, 1, "", "transform"], [142, 6, 1, "", "unit"], [142, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[142, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[142, 4, 1, "", "series"]], "baybe.parameters.custom": [[144, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[144, 2, 1, "", "__init__"], [144, 6, 1, "", "active_values"], [144, 6, 1, "", "comp_df"], [144, 6, 1, "", "comp_rep_columns"], [144, 3, 1, "", "data"], [144, 3, 1, "", "decorrelate"], [144, 6, 1, "", "description"], [144, 3, 1, "", "encoding"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_json"], [144, 6, 1, "", "is_continuous"], [144, 6, 1, "", "is_discrete"], [144, 2, 1, "", "is_in_range"], [144, 3, 1, "", "is_numerical"], [144, 3, 1, "", "metadata"], [144, 3, 1, "", "name"], [144, 2, 1, "", "summary"], [144, 2, 1, "", "to_dict"], [144, 2, 1, "", "to_json"], [144, 2, 1, "", "to_searchspace"], [144, 2, 1, "", "to_subspace"], [144, 2, 1, "", "transform"], [144, 6, 1, "", "unit"], [144, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[144, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[144, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[144, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[144, 4, 1, "", "series"]], "baybe.parameters.enum": [[146, 1, 1, "", "CategoricalEncoding"], [147, 1, 1, "", "CustomEncoding"], [148, 1, 1, "", "ParameterEncoding"], [149, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[146, 3, 1, "", "INT"], [146, 3, 1, "", "OHE"], [146, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[147, 3, 1, "", "CUSTOM"], [147, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[149, 3, 1, "", "ATOMPAIR"], [149, 3, 1, "", "AUTOCORR"], [149, 3, 1, "", "AVALON"], [149, 3, 1, "", "BCUT2D"], [149, 3, 1, "", "E3FP"], [149, 3, 1, "", "ECFP"], [149, 3, 1, "", "ELECTROSHAPE"], [149, 3, 1, "", "ERG"], [149, 3, 1, "", "ESTATE"], [149, 3, 1, "", "FUNCTIONALGROUPS"], [149, 3, 1, "", "GETAWAY"], [149, 3, 1, "", "GHOSECRIPPEN"], [149, 3, 1, "", "KLEKOTAROTH"], [149, 3, 1, "", "LAGGNER"], [149, 3, 1, "", "LAYERED"], [149, 3, 1, "", "LINGO"], [149, 3, 1, "", "MACCS"], [149, 3, 1, "", "MAP"], [149, 3, 1, "", "MHFP"], [149, 3, 1, "", "MORDRED"], [149, 3, 1, "", "MORGAN_FP"], [149, 3, 1, "", "MORSE"], [149, 3, 1, "", "MQNS"], [149, 3, 1, "", "PATTERN"], [149, 3, 1, "", "PHARMACOPHORE"], [149, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [149, 3, 1, "", "PUBCHEM"], [149, 3, 1, "", "RDF"], [149, 3, 1, "", "RDKIT"], [149, 3, 1, "", "RDKIT2DDESCRIPTORS"], [149, 3, 1, "", "RDKITFINGERPRINT"], [149, 3, 1, "", "SECFP"], [149, 3, 1, "", "TOPOLOGICALTORSION"], [149, 3, 1, "", "USR"], [149, 3, 1, "", "USRCAT"], [149, 3, 1, "", "VSA"], [149, 3, 1, "", "WHIM"], [149, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[151, 1, 1, "", "NumericalContinuousParameter"], [152, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[151, 2, 1, "", "__init__"], [151, 3, 1, "", "bounds"], [151, 6, 1, "", "comp_rep_columns"], [151, 6, 1, "", "description"], [151, 2, 1, "", "from_dict"], [151, 2, 1, "", "from_json"], [151, 6, 1, "", "is_continuous"], [151, 6, 1, "", "is_discrete"], [151, 2, 1, "", "is_in_range"], [151, 3, 1, "", "is_numerical"], [151, 3, 1, "", "metadata"], [151, 3, 1, "", "name"], [151, 2, 1, "", "summary"], [151, 2, 1, "", "to_dict"], [151, 2, 1, "", "to_json"], [151, 2, 1, "", "to_searchspace"], [151, 2, 1, "", "to_subspace"], [151, 6, 1, "", "unit"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[151, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[151, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[151, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[152, 2, 1, "", "__init__"], [152, 6, 1, "", "active_values"], [152, 6, 1, "", "comp_df"], [152, 6, 1, "", "comp_rep_columns"], [152, 6, 1, "", "description"], [152, 3, 1, "", "encoding"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 6, 1, "", "is_continuous"], [152, 6, 1, "", "is_discrete"], [152, 2, 1, "", "is_in_range"], [152, 3, 1, "", "is_numerical"], [152, 3, 1, "", "metadata"], [152, 3, 1, "", "name"], [152, 2, 1, "", "summary"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_json"], [152, 2, 1, "", "to_searchspace"], [152, 2, 1, "", "to_subspace"], [152, 3, 1, "", "tolerance"], [152, 2, 1, "", "transform"], [152, 6, 1, "", "unit"], [152, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[152, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[152, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[152, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[152, 4, 1, "", "series"]], "baybe.parameters.substance": [[154, 3, 1, "", "Smiles"], [155, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[155, 2, 1, "", "__init__"], [155, 6, 1, "", "active_values"], [155, 6, 1, "", "comp_df"], [155, 6, 1, "", "comp_rep_columns"], [155, 3, 1, "", "data"], [155, 3, 1, "", "decorrelate"], [155, 6, 1, "", "description"], [155, 3, 1, "", "encoding"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 6, 1, "", "is_continuous"], [155, 6, 1, "", "is_discrete"], [155, 2, 1, "", "is_in_range"], [155, 3, 1, "", "is_numerical"], [155, 3, 1, "", "kwargs_conformer"], [155, 3, 1, "", "kwargs_fingerprint"], [155, 3, 1, "", "metadata"], [155, 3, 1, "", "name"], [155, 2, 1, "", "summary"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_json"], [155, 2, 1, "", "to_searchspace"], [155, 2, 1, "", "to_subspace"], [155, 2, 1, "", "transform"], [155, 6, 1, "", "unit"], [155, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[155, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[155, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[155, 4, 1, "", "series"]], "baybe.parameters.utils": [[157, 5, 1, "", "activate_parameter"], [158, 5, 1, "", "get_parameters_from_dataframe"], [159, 5, 1, "", "is_inactive"], [160, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[157, 4, 1, "", "parameter"], [157, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[158, 4, 1, "", "df"], [158, 4, 1, "", "factory"], [158, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[159, 4, 1, "", "lower_threshold"], [159, 4, 1, "", "upper_threshold"], [159, 4, 1, "", "x"]], "baybe.parameters.validation": [[162, 5, 1, "", "validate_decorrelation"], [163, 5, 1, "", "validate_is_finite"], [164, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[166, 0, 0, "-", "base"], [168, 0, 0, "-", "basic"]], "baybe.priors.base": [[167, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "from_dict"], [167, 2, 1, "", "from_json"], [167, 2, 1, "", "to_dict"], [167, 2, 1, "", "to_gpytorch"], [167, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[167, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[167, 4, 1, "", "string"]], "baybe.priors.basic": [[169, 1, 1, "", "BetaPrior"], [170, 1, 1, "", "GammaPrior"], [171, 1, 1, "", "HalfCauchyPrior"], [172, 1, 1, "", "HalfNormalPrior"], [173, 1, 1, "", "LogNormalPrior"], [174, 1, 1, "", "NormalPrior"], [175, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[169, 2, 1, "", "__init__"], [169, 3, 1, "", "alpha"], [169, 3, 1, "", "beta"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_gpytorch"], [169, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[169, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[170, 2, 1, "", "__init__"], [170, 3, 1, "", "concentration"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 3, 1, "", "rate"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_gpytorch"], [170, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[170, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 3, 1, "", "scale"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_gpytorch"], [171, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[171, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 3, 1, "", "scale"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_gpytorch"], [172, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[172, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 3, 1, "", "loc"], [173, 3, 1, "", "scale"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[173, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "loc"], [174, 3, 1, "", "scale"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[174, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[175, 2, 1, "", "__init__"], [175, 3, 1, "", "a"], [175, 3, 1, "", "b"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "from_json"], [175, 3, 1, "", "sigma"], [175, 2, 1, "", "to_dict"], [175, 2, 1, "", "to_gpytorch"], [175, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[175, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[175, 4, 1, "", "string"]], "baybe.recommenders": [[177, 0, 0, "-", "base"], [179, 0, 0, "-", "meta"], [187, 0, 0, "-", "naive"], [189, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[178, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[178, 4, 1, "", "batch_size"], [178, 4, 1, "", "measurements"], [178, 4, 1, "", "objective"], [178, 4, 1, "", "pending_experiments"], [178, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[180, 0, 0, "-", "base"], [182, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[181, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "from_dict"], [181, 2, 1, "", "from_json"], [181, 2, 1, "", "get_current_recommender"], [181, 2, 1, "", "get_next_recommender"], [181, 2, 1, "", "get_non_meta_recommender"], [181, 6, 1, "", "is_stateful"], [181, 2, 1, "", "recommend"], [181, 2, 1, "", "select_recommender"], [181, 2, 1, "", "to_dict"], [181, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[181, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[181, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[183, 1, 1, "", "BaseSequentialMetaRecommender"], [184, 1, 1, "", "SequentialMetaRecommender"], [185, 1, 1, "", "StreamingSequentialMetaRecommender"], [186, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "from_dict"], [183, 2, 1, "", "from_json"], [183, 2, 1, "", "get_current_recommender"], [183, 2, 1, "", "get_next_recommender"], [183, 2, 1, "", "get_non_meta_recommender"], [183, 6, 1, "", "is_stateful"], [183, 2, 1, "", "recommend"], [183, 2, 1, "", "select_recommender"], [183, 2, 1, "", "to_dict"], [183, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[183, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[183, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "get_current_recommender"], [184, 2, 1, "", "get_next_recommender"], [184, 2, 1, "", "get_non_meta_recommender"], [184, 6, 1, "", "is_stateful"], [184, 3, 1, "", "mode"], [184, 2, 1, "", "recommend"], [184, 3, 1, "", "recommenders"], [184, 2, 1, "", "select_recommender"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[184, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[184, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "get_current_recommender"], [185, 2, 1, "", "get_next_recommender"], [185, 2, 1, "", "get_non_meta_recommender"], [185, 6, 1, "", "is_stateful"], [185, 2, 1, "", "recommend"], [185, 3, 1, "", "recommenders"], [185, 2, 1, "", "select_recommender"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[185, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[185, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "from_dict"], [186, 2, 1, "", "from_json"], [186, 2, 1, "", "get_current_recommender"], [186, 2, 1, "", "get_next_recommender"], [186, 2, 1, "", "get_non_meta_recommender"], [186, 3, 1, "", "initial_recommender"], [186, 6, 1, "", "is_stateful"], [186, 2, 1, "", "recommend"], [186, 3, 1, "", "recommender"], [186, 3, 1, "", "remain_switched"], [186, 2, 1, "", "select_recommender"], [186, 3, 1, "", "switch_after"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[186, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[186, 4, 1, "", "string"]], "baybe.recommenders.naive": [[188, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[188, 2, 1, "", "__init__"], [188, 6, 1, "", "allow_recommending_already_measured"], [188, 6, 1, "", "allow_recommending_pending_experiments"], [188, 6, 1, "", "allow_repeated_recommendations"], [188, 3, 1, "", "compatibility"], [188, 3, 1, "", "cont_recommender"], [188, 3, 1, "", "disc_recommender"], [188, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[188, 4, 1, "", "batch_size"], [188, 4, 1, "", "measurements"], [188, 4, 1, "", "objective"], [188, 4, 1, "", "pending_experiments"], [188, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[190, 0, 0, "-", "base"], [192, 0, 0, "-", "bayesian"], [199, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[191, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[191, 2, 1, "", "__init__"], [191, 6, 1, "", "allow_recommending_already_measured"], [191, 6, 1, "", "allow_recommending_pending_experiments"], [191, 6, 1, "", "allow_repeated_recommendations"], [191, 3, 1, "", "compatibility"], [191, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[191, 4, 1, "", "batch_size"], [191, 4, 1, "", "measurements"], [191, 4, 1, "", "objective"], [191, 4, 1, "", "pending_experiments"], [191, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[193, 0, 0, "-", "base"], [195, 0, 0, "-", "botorch"], [197, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[194, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[194, 2, 1, "", "__init__"], [194, 3, 1, "", "acquisition_function"], [194, 2, 1, "", "acquisition_values"], [194, 6, 1, "", "allow_recommending_already_measured"], [194, 6, 1, "", "allow_recommending_pending_experiments"], [194, 6, 1, "", "allow_repeated_recommendations"], [194, 3, 1, "", "compatibility"], [194, 2, 1, "", "get_acquisition_function"], [194, 2, 1, "", "get_surrogate"], [194, 2, 1, "", "joint_acquisition_value"], [194, 2, 1, "", "recommend"], [194, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values.params": [[194, 4, 1, "", "acquisition_function"], [194, 4, 1, "", "candidates"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[194, 4, 1, "", "batch_size"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[196, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[196, 2, 1, "", "__init__"], [196, 3, 1, "", "acquisition_function"], [196, 2, 1, "", "acquisition_values"], [196, 6, 1, "", "allow_recommending_already_measured"], [196, 6, 1, "", "allow_recommending_pending_experiments"], [196, 6, 1, "", "allow_repeated_recommendations"], [196, 3, 1, "", "compatibility"], [196, 2, 1, "", "get_acquisition_function"], [196, 2, 1, "", "get_surrogate"], [196, 3, 1, "", "hybrid_sampler"], [196, 2, 1, "", "joint_acquisition_value"], [196, 3, 1, "", "max_n_subspaces"], [196, 3, 1, "", "n_raw_samples"], [196, 3, 1, "", "n_restarts"], [196, 2, 1, "", "recommend"], [196, 3, 1, "", "sampling_percentage"], [196, 3, 1, "", "sequential_continuous"], [196, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values.params": [[196, 4, 1, "", "acquisition_function"], [196, 4, 1, "", "candidates"], [196, 4, 1, "", "measurements"], [196, 4, 1, "", "objective"], [196, 4, 1, "", "pending_experiments"], [196, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[196, 4, 1, "", "batch_size"], [196, 4, 1, "", "measurements"], [196, 4, 1, "", "objective"], [196, 4, 1, "", "pending_experiments"], [196, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[198, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[200, 0, 0, "-", "base"], [202, 0, 0, "-", "clustering"], [207, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[201, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[201, 2, 1, "", "__init__"], [201, 6, 1, "", "allow_recommending_already_measured"], [201, 6, 1, "", "allow_recommending_pending_experiments"], [201, 6, 1, "", "allow_repeated_recommendations"], [201, 3, 1, "", "compatibility"], [201, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[201, 4, 1, "", "batch_size"], [201, 4, 1, "", "measurements"], [201, 4, 1, "", "objective"], [201, 4, 1, "", "pending_experiments"], [201, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[203, 1, 1, "", "GaussianMixtureClusteringRecommender"], [204, 1, 1, "", "KMeansClusteringRecommender"], [205, 1, 1, "", "PAMClusteringRecommender"], [206, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[203, 2, 1, "", "__init__"], [203, 6, 1, "", "allow_recommending_already_measured"], [203, 6, 1, "", "allow_recommending_pending_experiments"], [203, 6, 1, "", "allow_repeated_recommendations"], [203, 3, 1, "", "compatibility"], [203, 3, 1, "", "model_cluster_num_parameter_name"], [203, 3, 1, "", "model_params"], [203, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[203, 4, 1, "", "batch_size"], [203, 4, 1, "", "measurements"], [203, 4, 1, "", "objective"], [203, 4, 1, "", "pending_experiments"], [203, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[204, 2, 1, "", "__init__"], [204, 6, 1, "", "allow_recommending_already_measured"], [204, 6, 1, "", "allow_recommending_pending_experiments"], [204, 6, 1, "", "allow_repeated_recommendations"], [204, 3, 1, "", "compatibility"], [204, 3, 1, "", "model_cluster_num_parameter_name"], [204, 3, 1, "", "model_params"], [204, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[204, 4, 1, "", "batch_size"], [204, 4, 1, "", "measurements"], [204, 4, 1, "", "objective"], [204, 4, 1, "", "pending_experiments"], [204, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[205, 2, 1, "", "__init__"], [205, 6, 1, "", "allow_recommending_already_measured"], [205, 6, 1, "", "allow_recommending_pending_experiments"], [205, 6, 1, "", "allow_repeated_recommendations"], [205, 3, 1, "", "compatibility"], [205, 3, 1, "", "model_cluster_num_parameter_name"], [205, 3, 1, "", "model_params"], [205, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[205, 4, 1, "", "batch_size"], [205, 4, 1, "", "measurements"], [205, 4, 1, "", "objective"], [205, 4, 1, "", "pending_experiments"], [205, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[206, 2, 1, "", "__init__"], [206, 6, 1, "", "allow_recommending_already_measured"], [206, 6, 1, "", "allow_recommending_pending_experiments"], [206, 6, 1, "", "allow_repeated_recommendations"], [206, 3, 1, "", "compatibility"], [206, 3, 1, "", "model_cluster_num_parameter_name"], [206, 3, 1, "", "model_params"], [206, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[206, 4, 1, "", "batch_size"], [206, 4, 1, "", "measurements"], [206, 4, 1, "", "objective"], [206, 4, 1, "", "pending_experiments"], [206, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[208, 1, 1, "", "FPSInitialization"], [209, 1, 1, "", "FPSRecommender"], [210, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization": [[208, 3, 1, "", "FARTHEST"], [208, 3, 1, "", "RANDOM"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[209, 2, 1, "", "__init__"], [209, 6, 1, "", "allow_recommending_already_measured"], [209, 6, 1, "", "allow_recommending_pending_experiments"], [209, 6, 1, "", "allow_repeated_recommendations"], [209, 3, 1, "", "compatibility"], [209, 3, 1, "", "initialization"], [209, 3, 1, "", "random_tie_break"], [209, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[209, 4, 1, "", "batch_size"], [209, 4, 1, "", "measurements"], [209, 4, 1, "", "objective"], [209, 4, 1, "", "pending_experiments"], [209, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[210, 2, 1, "", "__init__"], [210, 6, 1, "", "allow_recommending_already_measured"], [210, 6, 1, "", "allow_recommending_pending_experiments"], [210, 6, 1, "", "allow_repeated_recommendations"], [210, 3, 1, "", "compatibility"], [210, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[210, 4, 1, "", "batch_size"], [210, 4, 1, "", "measurements"], [210, 4, 1, "", "objective"], [210, 4, 1, "", "pending_experiments"], [210, 4, 1, "", "searchspace"]], "baybe.searchspace": [[212, 0, 0, "-", "continuous"], [214, 0, 0, "-", "core"], [219, 0, 0, "-", "discrete"], [225, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[213, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[213, 2, 1, "", "__init__"], [213, 6, 1, "", "comp_rep_bounds"], [213, 6, 1, "", "comp_rep_columns"], [213, 6, 1, "", "constraints_cardinality"], [213, 3, 1, "", "constraints_lin_eq"], [213, 3, 1, "", "constraints_lin_ineq"], [213, 3, 1, "", "constraints_nonlin"], [213, 2, 1, "", "empty"], [213, 2, 1, "", "from_bounds"], [213, 2, 1, "", "from_dataframe"], [213, 2, 1, "", "from_dict"], [213, 2, 1, "", "from_json"], [213, 2, 1, "", "from_parameter"], [213, 2, 1, "", "from_product"], [213, 6, 1, "", "full_factorial"], [213, 2, 1, "", "get_parameters_by_name"], [213, 2, 1, "", "inactive_parameter_combinations"], [213, 6, 1, "", "is_empty"], [213, 6, 1, "", "n_inactive_parameter_combinations"], [213, 6, 1, "", "parameter_names"], [213, 6, 1, "", "parameter_names_in_cardinality_constraints"], [213, 3, 1, "", "parameters"], [213, 2, 1, "", "sample_from_full_factorial"], [213, 2, 1, "", "sample_uniform"], [213, 2, 1, "", "samples_full_factorial"], [213, 2, 1, "", "samples_random"], [213, 6, 1, "", "scaling_bounds"], [213, 2, 1, "", "to_dict"], [213, 2, 1, "", "to_json"], [213, 2, 1, "", "to_searchspace"], [213, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[213, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[213, 4, 1, "", "df"], [213, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[213, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[213, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[213, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[213, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[213, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[213, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[215, 1, 1, "", "SearchSpace"], [216, 1, 1, "", "SearchSpaceType"], [217, 5, 1, "", "to_searchspace"], [218, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[215, 2, 1, "", "__init__"], [215, 6, 1, "", "comp_rep_bounds"], [215, 6, 1, "", "comp_rep_columns"], [215, 6, 1, "", "constraints"], [215, 6, 1, "", "constraints_augmentable"], [215, 3, 1, "", "continuous"], [215, 3, 1, "", "discrete"], [215, 2, 1, "", "estimate_product_space_size"], [215, 2, 1, "", "from_dataframe"], [215, 2, 1, "", "from_dict"], [215, 2, 1, "", "from_json"], [215, 2, 1, "", "from_parameter"], [215, 2, 1, "", "from_product"], [215, 2, 1, "", "get_comp_rep_parameter_indices"], [215, 2, 1, "", "get_parameters_by_name"], [215, 6, 1, "", "n_tasks"], [215, 6, 1, "", "parameter_names"], [215, 6, 1, "", "parameters"], [215, 6, 1, "", "scaling_bounds"], [215, 6, 1, "", "task_idx"], [215, 2, 1, "", "to_dict"], [215, 2, 1, "", "to_json"], [215, 2, 1, "", "transform"], [215, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[215, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[215, 4, 1, "", "df"], [215, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[215, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[215, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[215, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[215, 4, 1, "", "constraints"], [215, 4, 1, "", "empty_encoding"], [215, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[215, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[215, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[215, 4, 1, "", "allow_extra"], [215, 4, 1, "", "allow_missing"], [215, 4, 1, "", "data"], [215, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[216, 3, 1, "", "CONTINUOUS"], [216, 3, 1, "", "DISCRETE"], [216, 3, 1, "", "EITHER"], [216, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[220, 1, 1, "", "MemorySize"], [221, 1, 1, "", "SubspaceDiscrete"], [222, 5, 1, "", "parameter_cartesian_prod_pandas"], [223, 5, 1, "", "parameter_cartesian_prod_polars"], [224, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[220, 2, 1, "", "__init__"], [220, 3, 1, "", "comp_rep_bytes"], [220, 6, 1, "", "comp_rep_human_readable"], [220, 3, 1, "", "comp_rep_shape"], [220, 3, 1, "", "exp_rep_bytes"], [220, 6, 1, "", "exp_rep_human_readable"], [220, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[221, 2, 1, "", "__init__"], [221, 3, 1, "", "comp_rep"], [221, 6, 1, "", "comp_rep_bounds"], [221, 6, 1, "", "comp_rep_columns"], [221, 3, 1, "", "constraints"], [221, 2, 1, "", "empty"], [221, 3, 1, "", "empty_encoding"], [221, 2, 1, "", "estimate_product_space_size"], [221, 3, 1, "", "exp_rep"], [221, 2, 1, "", "from_dataframe"], [221, 2, 1, "", "from_dict"], [221, 2, 1, "", "from_json"], [221, 2, 1, "", "from_parameter"], [221, 2, 1, "", "from_product"], [221, 2, 1, "", "from_simplex"], [221, 2, 1, "", "get_candidates"], [221, 2, 1, "", "get_parameters_by_name"], [221, 6, 1, "", "is_empty"], [221, 6, 1, "", "metadata"], [221, 6, 1, "", "parameter_names"], [221, 3, 1, "", "parameters"], [221, 6, 1, "", "scaling_bounds"], [221, 2, 1, "", "to_dict"], [221, 2, 1, "", "to_json"], [221, 2, 1, "", "to_searchspace"], [221, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[221, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[221, 4, 1, "", "df"], [221, 4, 1, "", "empty_encoding"], [221, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[221, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[221, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[221, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[221, 4, 1, "", "boundary_only"], [221, 4, 1, "", "constraints"], [221, 4, 1, "", "max_nonzero"], [221, 4, 1, "", "max_sum"], [221, 4, 1, "", "min_nonzero"], [221, 4, 1, "", "product_parameters"], [221, 4, 1, "", "simplex_parameters"], [221, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[221, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[222, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[223, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[226, 5, 1, "", "get_transform_parameters"], [227, 5, 1, "", "validate_parameter_names"], [228, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[230, 0, 0, "-", "core"], [237, 0, 0, "-", "mixin"], [239, 0, 0, "-", "utils"]], "baybe.serialization.core": [[231, 5, 1, "", "block_deserialization_hook"], [232, 5, 1, "", "block_serialization_hook"], [233, 8, 1, "", "converter"], [234, 5, 1, "", "get_base_structure_hook"], [235, 5, 1, "", "select_constructor_hook"], [236, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[234, 4, 1, "", "base"], [234, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[236, 4, 1, "", "base"], [236, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[238, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[238, 2, 1, "", "from_dict"], [238, 2, 1, "", "from_json"], [238, 2, 1, "", "to_dict"], [238, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[238, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[238, 4, 1, "", "string"]], "baybe.serialization.utils": [[240, 5, 1, "", "deserialize_dataframe"], [241, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[243, 0, 0, "-", "core"], [245, 0, 0, "-", "lookup"], [247, 0, 0, "-", "scenarios"], [249, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[244, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[244, 4, 1, "", "batch_size"], [244, 4, 1, "", "campaign"], [244, 4, 1, "", "impute_mode"], [244, 4, 1, "", "initial_data"], [244, 4, 1, "", "lookup"], [244, 4, 1, "", "n_doe_iterations"], [244, 4, 1, "", "noise_percent"], [244, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[246, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[246, 4, 1, "", "impute_mode"], [246, 4, 1, "", "lookup"], [246, 4, 1, "", "queries"], [246, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[248, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[248, 4, 1, "", "batch_size"], [248, 4, 1, "", "groupby"], [248, 4, 1, "", "impute_mode"], [248, 4, 1, "", "initial_data"], [248, 4, 1, "", "lookup"], [248, 4, 1, "", "n_doe_iterations"], [248, 4, 1, "", "n_mc_iterations"], [248, 4, 1, "", "noise_percent"], [248, 4, 1, "", "parallel_runs"], [248, 4, 1, "", "random_seed"], [248, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[250, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[250, 4, 1, "", "batch_size"], [250, 4, 1, "", "campaign"], [250, 4, 1, "", "groupby"], [250, 4, 1, "", "lookup"], [250, 4, 1, "", "n_doe_iterations"], [250, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[252, 0, 0, "-", "bandit"], [254, 0, 0, "-", "base"], [259, 0, 0, "-", "composite"], [261, 0, 0, "-", "custom"], [264, 0, 0, "-", "gaussian_process"], [279, 0, 0, "-", "linear"], [281, 0, 0, "-", "naive"], [283, 0, 0, "-", "ngboost"], [285, 0, 0, "-", "random_forest"], [287, 0, 0, "-", "utils"], [291, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[253, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[253, 2, 1, "", "__init__"], [253, 2, 1, "", "fit"], [253, 2, 1, "", "from_dict"], [253, 2, 1, "", "from_json"], [253, 2, 1, "", "posterior"], [253, 2, 1, "", "posterior_means"], [253, 2, 1, "", "posterior_modes"], [253, 2, 1, "", "posterior_stats"], [253, 3, 1, "", "prior"], [253, 2, 1, "", "replicate"], [253, 3, 1, "", "supports_multi_output"], [253, 3, 1, "", "supports_transfer_learning"], [253, 2, 1, "", "to_botorch"], [253, 2, 1, "", "to_dict"], [253, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[253, 4, 1, "", "measurements"], [253, 4, 1, "", "objective"], [253, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[253, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[253, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[253, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[253, 4, 1, "", "candidates"], [253, 4, 1, "", "stats"]], "baybe.surrogates.base": [[255, 1, 1, "", "IndependentGaussianSurrogate"], [256, 8, 1, "", "PosteriorStatistic"], [257, 1, 1, "", "Surrogate"], [258, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[255, 2, 1, "", "__init__"], [255, 2, 1, "", "fit"], [255, 2, 1, "", "from_dict"], [255, 2, 1, "", "from_json"], [255, 2, 1, "", "posterior"], [255, 2, 1, "", "posterior_stats"], [255, 2, 1, "", "replicate"], [255, 3, 1, "", "supports_multi_output"], [255, 3, 1, "", "supports_transfer_learning"], [255, 2, 1, "", "to_botorch"], [255, 2, 1, "", "to_dict"], [255, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[255, 4, 1, "", "measurements"], [255, 4, 1, "", "objective"], [255, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[255, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[255, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[255, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[255, 4, 1, "", "candidates"], [255, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate": [[257, 2, 1, "", "__init__"], [257, 2, 1, "", "fit"], [257, 2, 1, "", "from_dict"], [257, 2, 1, "", "from_json"], [257, 2, 1, "", "posterior"], [257, 2, 1, "", "posterior_stats"], [257, 2, 1, "", "replicate"], [257, 3, 1, "", "supports_multi_output"], [257, 3, 1, "", "supports_transfer_learning"], [257, 2, 1, "", "to_botorch"], [257, 2, 1, "", "to_dict"], [257, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[257, 4, 1, "", "measurements"], [257, 4, 1, "", "objective"], [257, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[257, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[257, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[257, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[257, 4, 1, "", "candidates"], [257, 4, 1, "", "stats"]], "baybe.surrogates.base.SurrogateProtocol": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "fit"], [258, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[260, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "fit"], [260, 2, 1, "", "from_dict"], [260, 2, 1, "", "from_json"], [260, 2, 1, "", "from_replication"], [260, 2, 1, "", "posterior"], [260, 2, 1, "", "posterior_stats"], [260, 3, 1, "", "surrogates"], [260, 2, 1, "", "to_botorch"], [260, 2, 1, "", "to_dict"], [260, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[260, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[260, 4, 1, "", "string"]], "baybe.surrogates.custom": [[262, 1, 1, "", "CustomONNXSurrogate"], [263, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "fit"], [262, 2, 1, "", "from_dict"], [262, 2, 1, "", "from_json"], [262, 3, 1, "", "onnx_input_name"], [262, 3, 1, "", "onnx_str"], [262, 2, 1, "", "posterior"], [262, 2, 1, "", "posterior_stats"], [262, 2, 1, "", "replicate"], [262, 3, 1, "", "supports_multi_output"], [262, 3, 1, "", "supports_transfer_learning"], [262, 2, 1, "", "to_botorch"], [262, 2, 1, "", "to_dict"], [262, 2, 1, "", "to_json"], [262, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[262, 4, 1, "", "measurements"], [262, 4, 1, "", "objective"], [262, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[262, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[262, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[262, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[262, 4, 1, "", "candidates"], [262, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[262, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[265, 0, 0, "-", "core"], [267, 0, 0, "-", "kernel_factory"], [271, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[266, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[266, 2, 1, "", "__init__"], [266, 2, 1, "", "fit"], [266, 2, 1, "", "from_dict"], [266, 2, 1, "", "from_json"], [266, 2, 1, "", "from_preset"], [266, 3, 1, "", "kernel_factory"], [266, 2, 1, "", "posterior"], [266, 2, 1, "", "posterior_stats"], [266, 2, 1, "", "replicate"], [266, 3, 1, "", "supports_multi_output"], [266, 3, 1, "", "supports_transfer_learning"], [266, 2, 1, "", "to_botorch"], [266, 2, 1, "", "to_dict"], [266, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[266, 4, 1, "", "measurements"], [266, 4, 1, "", "objective"], [266, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[266, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[266, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[266, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[266, 4, 1, "", "candidates"], [266, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.kernel_factory": [[268, 1, 1, "", "KernelFactory"], [269, 1, 1, "", "PlainKernelFactory"], [270, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[268, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[269, 2, 1, "", "__init__"], [269, 2, 1, "", "from_dict"], [269, 2, 1, "", "from_json"], [269, 3, 1, "", "kernel"], [269, 2, 1, "", "to_dict"], [269, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[269, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[269, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[272, 0, 0, "-", "core"], [275, 0, 0, "-", "default"], [277, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[273, 1, 1, "", "GaussianProcessPreset"], [274, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[273, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[276, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[276, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[278, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[278, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[280, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[280, 2, 1, "", "__init__"], [280, 2, 1, "", "fit"], [280, 2, 1, "", "from_dict"], [280, 2, 1, "", "from_json"], [280, 3, 1, "", "model_params"], [280, 2, 1, "", "posterior"], [280, 2, 1, "", "posterior_stats"], [280, 2, 1, "", "replicate"], [280, 3, 1, "", "supports_multi_output"], [280, 3, 1, "", "supports_transfer_learning"], [280, 2, 1, "", "to_botorch"], [280, 2, 1, "", "to_dict"], [280, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[280, 4, 1, "", "measurements"], [280, 4, 1, "", "objective"], [280, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[280, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[280, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[280, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[280, 4, 1, "", "candidates"], [280, 4, 1, "", "stats"]], "baybe.surrogates.naive": [[282, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[282, 2, 1, "", "__init__"], [282, 2, 1, "", "fit"], [282, 2, 1, "", "from_dict"], [282, 2, 1, "", "from_json"], [282, 2, 1, "", "posterior"], [282, 2, 1, "", "posterior_stats"], [282, 2, 1, "", "replicate"], [282, 3, 1, "", "supports_multi_output"], [282, 3, 1, "", "supports_transfer_learning"], [282, 2, 1, "", "to_botorch"], [282, 2, 1, "", "to_dict"], [282, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[282, 4, 1, "", "measurements"], [282, 4, 1, "", "objective"], [282, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[282, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[282, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[282, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[282, 4, 1, "", "candidates"], [282, 4, 1, "", "stats"]], "baybe.surrogates.ngboost": [[284, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[284, 2, 1, "", "__init__"], [284, 2, 1, "", "fit"], [284, 2, 1, "", "from_dict"], [284, 2, 1, "", "from_json"], [284, 3, 1, "", "model_params"], [284, 2, 1, "", "posterior"], [284, 2, 1, "", "posterior_stats"], [284, 2, 1, "", "replicate"], [284, 3, 1, "", "supports_multi_output"], [284, 3, 1, "", "supports_transfer_learning"], [284, 2, 1, "", "to_botorch"], [284, 2, 1, "", "to_dict"], [284, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[284, 4, 1, "", "measurements"], [284, 4, 1, "", "objective"], [284, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[284, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[284, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[284, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[284, 4, 1, "", "candidates"], [284, 4, 1, "", "stats"]], "baybe.surrogates.random_forest": [[286, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[286, 2, 1, "", "__init__"], [286, 2, 1, "", "fit"], [286, 2, 1, "", "from_dict"], [286, 2, 1, "", "from_json"], [286, 3, 1, "", "model_params"], [286, 2, 1, "", "posterior"], [286, 2, 1, "", "posterior_stats"], [286, 2, 1, "", "replicate"], [286, 3, 1, "", "supports_multi_output"], [286, 3, 1, "", "supports_transfer_learning"], [286, 2, 1, "", "to_botorch"], [286, 2, 1, "", "to_dict"], [286, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[286, 4, 1, "", "measurements"], [286, 4, 1, "", "objective"], [286, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[286, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[286, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[286, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[286, 4, 1, "", "candidates"], [286, 4, 1, "", "stats"]], "baybe.surrogates.utils": [[288, 5, 1, "", "batchify_ensemble_predictor"], [289, 5, 1, "", "batchify_mean_var_prediction"], [290, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[288, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[290, 4, 1, "", "cls"], [290, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[292, 5, 1, "", "make_dict_validator"], [293, 8, 1, "", "type_validation_converter"], [294, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.make_dict_validator.params": [[292, 4, 1, "", "specification"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[294, 4, 1, "", "model_cls"]], "baybe.targets": [[296, 0, 0, "-", "base"], [298, 0, 0, "-", "binary"], [301, 0, 0, "-", "enum"], [304, 0, 0, "-", "numerical"], [306, 0, 0, "-", "transforms"]], "baybe.targets.base": [[297, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[297, 2, 1, "", "__init__"], [297, 6, 1, "", "description"], [297, 2, 1, "", "from_dict"], [297, 2, 1, "", "from_json"], [297, 3, 1, "", "metadata"], [297, 3, 1, "", "name"], [297, 2, 1, "", "summary"], [297, 2, 1, "", "to_dict"], [297, 2, 1, "", "to_json"], [297, 2, 1, "", "to_objective"], [297, 2, 1, "", "transform"], [297, 6, 1, "", "unit"]], "baybe.targets.base.Target.from_dict.params": [[297, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[297, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[297, 4, 1, "", "series"]], "baybe.targets.binary": [[299, 1, 1, "", "BinaryTarget"], [300, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[299, 2, 1, "", "__init__"], [299, 6, 1, "", "description"], [299, 3, 1, "", "failure_value"], [299, 2, 1, "", "from_dict"], [299, 2, 1, "", "from_json"], [299, 3, 1, "", "metadata"], [299, 3, 1, "", "name"], [299, 3, 1, "", "success_value"], [299, 2, 1, "", "summary"], [299, 2, 1, "", "to_dict"], [299, 2, 1, "", "to_json"], [299, 2, 1, "", "to_objective"], [299, 2, 1, "", "transform"], [299, 6, 1, "", "unit"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[299, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[299, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[299, 4, 1, "", "series"]], "baybe.targets.enum": [[302, 1, 1, "", "TargetMode"], [303, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[302, 3, 1, "", "MATCH"], [302, 3, 1, "", "MAX"], [302, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[303, 3, 1, "", "BELL"], [303, 3, 1, "", "LINEAR"], [303, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[305, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[305, 2, 1, "", "__init__"], [305, 3, 1, "", "bounds"], [305, 6, 1, "", "description"], [305, 2, 1, "", "from_dict"], [305, 2, 1, "", "from_json"], [305, 3, 1, "", "metadata"], [305, 3, 1, "", "mode"], [305, 3, 1, "", "name"], [305, 2, 1, "", "summary"], [305, 2, 1, "", "to_dict"], [305, 2, 1, "", "to_json"], [305, 2, 1, "", "to_objective"], [305, 2, 1, "", "transform"], [305, 3, 1, "", "transformation"], [305, 6, 1, "", "unit"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[305, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[305, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[305, 4, 1, "", "series"]], "baybe.targets.transforms": [[307, 5, 1, "", "bell_transform"], [308, 5, 1, "", "linear_transform"], [309, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[307, 4, 1, "", "arr"], [307, 4, 1, "", "lower"], [307, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[308, 4, 1, "", "arr"], [308, 4, 1, "", "descending"], [308, 4, 1, "", "lower"], [308, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[309, 4, 1, "", "arr"], [309, 4, 1, "", "lower"], [309, 4, 1, "", "upper"]], "baybe.telemetry": [[311, 5, 1, "", "get_user_details"], [312, 5, 1, "", "is_enabled"], [313, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [314, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[313, 4, 1, "", "cached_recommendation"], [313, 4, 1, "", "measurements"], [313, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[314, 4, 1, "", "instrument_name"], [314, 4, 1, "", "value"]], "baybe.utils": [[316, 0, 0, "-", "augmentation"], [319, 0, 0, "-", "basic"], [335, 0, 0, "-", "boolean"], [339, 0, 0, "-", "chemistry"], [344, 0, 0, "-", "clustering_algorithms"], [348, 0, 0, "-", "conversion"], [352, 0, 0, "-", "dataframe"], [369, 0, 0, "-", "interval"], [374, 0, 0, "-", "memory"], [376, 0, 0, "-", "metadata"], [380, 0, 0, "-", "numerical"], [387, 0, 0, "-", "random"], [390, 0, 0, "-", "sampling_algorithms"], [394, 0, 0, "-", "scaling"], [396, 0, 0, "-", "torch"], [399, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[317, 5, 1, "", "df_apply_dependency_augmentation"], [318, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[317, 4, 1, "", "affected"], [317, 4, 1, "", "causing"], [317, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[318, 4, 1, "", "column_groups"], [318, 4, 1, "", "df"]], "baybe.utils.basic": [[320, 1, 1, "", "Dummy"], [321, 8, 1, "", "UNSPECIFIED"], [322, 1, 1, "", "UnspecifiedType"], [323, 1, 1, "", "classproperty"], [324, 5, 1, "", "convert_to_float"], [325, 5, 1, "", "find_subclass"], [326, 5, 1, "", "get_baseclasses"], [327, 5, 1, "", "get_subclasses"], [328, 5, 1, "", "group_duplicate_values"], [329, 5, 1, "", "hilberts_factory"], [330, 5, 1, "", "is_all_instance"], [331, 5, 1, "", "match_attributes"], [332, 5, 1, "", "refers_to"], [333, 5, 1, "", "register_hooks"], [334, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[320, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[323, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[326, 4, 1, "", "abstract"], [326, 4, 1, "", "cls"], [326, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[327, 4, 1, "", "abstract"], [327, 4, 1, "", "cls"], [327, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[328, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[331, 4, 1, "", "callable_"], [331, 4, 1, "", "ignore"], [331, 4, 1, "", "object"], [331, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[333, 4, 1, "", "post_hooks"], [333, 4, 1, "", "pre_hooks"], [333, 4, 1, "", "target"]], "baybe.utils.boolean": [[336, 5, 1, "", "check_if_in"], [337, 5, 1, "", "is_abstract"], [338, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[336, 4, 1, "", "allowed"], [336, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[337, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[338, 4, 1, "", "val"]], "baybe.utils.chemistry": [[340, 5, 1, "", "get_canonical_smiles"], [341, 5, 1, "", "get_fingerprint_class"], [342, 5, 1, "", "name_to_smiles"], [343, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[341, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[342, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[343, 4, 1, "", "encoding"], [343, 4, 1, "", "kwargs_conformer"], [343, 4, 1, "", "kwargs_fingerprint"], [343, 4, 1, "", "prefix"], [343, 4, 1, "", "smiles"]], "baybe.utils.clustering_algorithms": [[345, 0, 0, "-", "third_party"]], "baybe.utils.clustering_algorithms.third_party": [[346, 0, 0, "-", "kmedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[347, 1, 1, "", "KMedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids": [[347, 2, 1, "", "__init__"], [347, 2, 1, "", "fit"], [347, 2, 1, "", "fit_predict"], [347, 2, 1, "", "fit_transform"], [347, 2, 1, "", "get_metadata_routing"], [347, 2, 1, "", "get_params"], [347, 2, 1, "", "predict"], [347, 2, 1, "", "set_output"], [347, 2, 1, "", "set_params"], [347, 2, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit.params": [[347, 4, 1, "", "-------"], [347, 4, 1, "", "Returns"], [347, 4, 1, "", "X"], [347, 4, 1, "", "self"], [347, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict.params": [[347, 4, 1, "", "**kwargs"], [347, 4, 1, "", "X"], [347, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform.params": [[347, 4, 1, "", "**fit_params"], [347, 4, 1, "", "X"], [347, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params.params": [[347, 4, 1, "", "deep"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params": [[347, 4, 1, "", "                [4"], [347, 4, 1, "", "-----"], [347, 4, 1, "", "--------"], [347, 4, 1, "", "----------"], [347, 4, 1, "", "0"], [347, 4, 1, "", "0]"], [347, 4, 1, "", "0]])"], [347, 4, 1, "", "1"], [347, 4, 1, "", "1])"], [347, 4, 1, "", "2]"], [347, 4, 1, "", "4]"], [347, 4, 1, "", "4]])"], [347, 4, 1, "", "A simple and fast algorithm for K-medoids"], [347, 4, 1, "", "Also"], [347, 4, 1, "", "Attributes"], [347, 4, 1, "", "Examples"], [347, 4, 1, "", "Jun"], [347, 4, 1, "", "KMeans"], [347, 4, 1, "", "Maranzana"], [347, 4, 1, "", "Notes"], [347, 4, 1, "", "On the location of supply points to minimize"], [347, 4, 1, "", "Park"], [347, 4, 1, "", "References"], [347, 4, 1, "", "X "], [347, 4, 1, "", "[1"], [347, 4, 1, "", "[4"], [347, 4, 1, "", "all pairwise distances are calculated and stored in memory for"], [347, 4, 1, "", "array([0"], [347, 4, 1, "", "cluster_centers_"], [347, 4, 1, "", "duration of fit"], [347, 4, 1, "", "import numpy as np"], [347, 4, 1, "", "inertia_"], [347, 4, 1, "", "init"], [347, 4, 1, "", "kmedoids "], [347, 4, 1, "", "labels_"], [347, 4, 1, "", "max_iter"], [347, 4, 1, "", "medoid_indices_"], [347, 4, 1, "", "method"], [347, 4, 1, "", "metric"], [347, 4, 1, "", "n_clusters"], [347, 4, 1, "", "random_state"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.2": [[347, 4, 1, "", "]"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.8": [[347, 4, 1, "", "0"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.C.H": [[347, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.F.E": [[347, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.KMedoids with various distance metrics": [[347, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.array([[1": [[347, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.from baybe.utils": [[347, 4, 1, "", "clustering_algorithms import KMedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.kmedoids": [[347, 4, 1, "", "cluster_centers_"], [347, 4, 1, "", "inertia_"], [347, 4, 1, "", "labels_"], [347, 4, 1, "", "predict([[0"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.scikit-learn-extra/examples/plot_kmedoids_digits": [[347, 4, 1, "", "py for examples"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.space complexity is O(n_samples ** 2)": [[347, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict.params": [[347, 4, 1, "", "-------"], [347, 4, 1, "", "Returns"], [347, 4, 1, "", "X"], [347, 4, 1, "", "labels"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output.params": [[347, 4, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params.params": [[347, 4, 1, "", "**params"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform.params": [[347, 4, 1, "", "-------"], [347, 4, 1, "", "Returns"], [347, 4, 1, "", "X"], [347, 4, 1, "", "X_new"]], "baybe.utils.conversion": [[349, 5, 1, "", "fraction_to_float"], [350, 5, 1, "", "nonstring_to_tuple"], [351, 5, 1, "", "to_string"]], "baybe.utils.conversion.fraction_to_float.params": [[349, 4, 1, "", "value"]], "baybe.utils.conversion.to_string.params": [[351, 4, 1, "", "*fields"], [351, 4, 1, "", "header"], [351, 4, 1, "", "single_line"]], "baybe.utils.dataframe": [[353, 5, 1, "", "add_fake_measurements"], [354, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [355, 5, 1, "", "add_parameter_noise"], [356, 5, 1, "", "arrays_to_dataframes"], [357, 5, 1, "", "create_fake_input"], [358, 5, 1, "", "df_drop_single_value_columns"], [359, 5, 1, "", "df_drop_string_columns"], [360, 5, 1, "", "df_uncorrelated_features"], [361, 5, 1, "", "filter_df"], [362, 5, 1, "", "fuzzy_row_match"], [363, 5, 1, "", "get_transform_objects"], [364, 5, 1, "", "handle_missing_values"], [365, 5, 1, "", "normalize_input_dtypes"], [366, 5, 1, "", "pretty_print_df"], [367, 5, 1, "", "to_tensor"], [368, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[353, 4, 1, "", "bad_intervals"], [353, 4, 1, "", "data"], [353, 4, 1, "", "good_intervals"], [353, 4, 1, "", "good_reference_values"], [353, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[354, 4, 1, "", "df"], [354, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[355, 4, 1, "", "data"], [355, 4, 1, "", "noise_level"], [355, 4, 1, "", "noise_type"], [355, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[356, 4, 1, "", "input_labels"], [356, 4, 1, "", "output_labels"], [356, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[357, 4, 1, "", "**kwargs"], [357, 4, 1, "", "n_rows"], [357, 4, 1, "", "parameters"], [357, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[358, 4, 1, "", "df"], [358, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[359, 4, 1, "", "df"], [359, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[360, 4, 1, "", "df"], [360, 4, 1, "", "exclude_list"], [360, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[361, 4, 1, "", "complement"], [361, 4, 1, "", "df"], [361, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[362, 4, 1, "", "left_df"], [362, 4, 1, "", "parameters"], [362, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[363, 4, 1, "", "allow_extra"], [363, 4, 1, "", "allow_missing"], [363, 4, 1, "", "df"], [363, 4, 1, "", "objects"]], "baybe.utils.dataframe.handle_missing_values.params": [[364, 4, 1, "", "columns"], [364, 4, 1, "", "data"], [364, 4, 1, "", "drop"]], "baybe.utils.dataframe.normalize_input_dtypes.params": [[365, 4, 1, "", "df"], [365, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[366, 4, 1, "", "df"], [366, 4, 1, "", "max_columns"], [366, 4, 1, "", "max_colwidth"], [366, 4, 1, "", "max_rows"], [366, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[367, 4, 1, "", "*x"]], "baybe.utils.interval": [[370, 7, 1, "", "InfiniteIntervalError"], [371, 1, 1, "", "Interval"], [372, 5, 1, "", "convert_bounds"], [373, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[370, 2, 1, "", "__init__"], [370, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[371, 2, 1, "", "__init__"], [371, 6, 1, "", "center"], [371, 2, 1, "", "contains"], [371, 2, 1, "", "create"], [371, 2, 1, "", "from_dict"], [371, 2, 1, "", "from_json"], [371, 6, 1, "", "is_bounded"], [371, 6, 1, "", "is_degenerate"], [371, 6, 1, "", "is_fully_unbounded"], [371, 6, 1, "", "is_half_bounded"], [371, 6, 1, "", "is_left_bounded"], [371, 6, 1, "", "is_right_bounded"], [371, 3, 1, "", "lower"], [371, 2, 1, "", "to_dict"], [371, 2, 1, "", "to_json"], [371, 2, 1, "", "to_ndarray"], [371, 2, 1, "", "to_tensor"], [371, 2, 1, "", "to_tuple"], [371, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[371, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[371, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[371, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[372, 4, 1, "", "bounds"]], "baybe.utils.memory": [[375, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[375, 4, 1, "", "num"]], "baybe.utils.metadata": [[377, 1, 1, "", "MeasurableMetadata"], [378, 1, 1, "", "Metadata"], [379, 5, 1, "", "to_metadata"]], "baybe.utils.metadata.MeasurableMetadata": [[377, 2, 1, "", "__init__"], [377, 3, 1, "", "description"], [377, 2, 1, "", "from_dict"], [377, 2, 1, "", "from_json"], [377, 6, 1, "", "is_empty"], [377, 3, 1, "", "misc"], [377, 2, 1, "", "to_dict"], [377, 2, 1, "", "to_json"], [377, 3, 1, "", "unit"]], "baybe.utils.metadata.MeasurableMetadata.from_dict.params": [[377, 4, 1, "", "dictionary"]], "baybe.utils.metadata.MeasurableMetadata.from_json.params": [[377, 4, 1, "", "string"]], "baybe.utils.metadata.Metadata": [[378, 2, 1, "", "__init__"], [378, 3, 1, "", "description"], [378, 2, 1, "", "from_dict"], [378, 2, 1, "", "from_json"], [378, 6, 1, "", "is_empty"], [378, 3, 1, "", "misc"], [378, 2, 1, "", "to_dict"], [378, 2, 1, "", "to_json"]], "baybe.utils.metadata.Metadata.from_dict.params": [[378, 4, 1, "", "dictionary"]], "baybe.utils.metadata.Metadata.from_json.params": [[378, 4, 1, "", "string"]], "baybe.utils.metadata.to_metadata.params": [[379, 4, 1, "", "cls"], [379, 4, 1, "", "value"]], "baybe.utils.numerical": [[381, 3, 1, "", "DTypeFloatNumpy"], [382, 3, 1, "", "DTypeFloatONNX"], [383, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [384, 5, 1, "", "closer_element"], [385, 5, 1, "", "closest_element"], [386, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[384, 4, 1, "", "target"], [384, 4, 1, "", "x"], [384, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[385, 4, 1, "", "array"], [385, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[386, 4, 1, "", "arr"], [386, 4, 1, "", "weights"]], "baybe.utils.random": [[388, 5, 1, "", "set_random_seed"], [389, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[388, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[389, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[391, 1, 1, "", "DiscreteSamplingMethod"], [392, 5, 1, "", "farthest_point_sampling"], [393, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[391, 3, 1, "", "FPS"], [391, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[392, 4, 1, "", "initialization"], [392, 4, 1, "", "n_samples"], [392, 4, 1, "", "points"], [392, 4, 1, "", "random_tie_break"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[393, 4, 1, "", "df"], [393, 4, 1, "", "method"], [393, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[395, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[395, 2, 1, "", "__init__"], [395, 2, 1, "", "fit"], [395, 3, 1, "", "mapping"], [395, 2, 1, "", "transform"]], "baybe.utils.torch": [[397, 8, 1, "", "DTypeFloatTorch"], [398, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[400, 5, 1, "", "finite_float"], [401, 5, 1, "", "non_inf_float"], [402, 5, 1, "", "non_nan_float"], [403, 5, 1, "", "validate_not_nan"], [404, 5, 1, "", "validate_parameter_input"], [405, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[404, 4, 1, "", "data"], [404, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [404, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[405, 4, 1, "", "data"], [405, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 196, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 329, 347, 367, 371, 377, 378, 406, 409, 416, 420, 423, 424, 427, 428, 430, 431, 432, 433, 434, 436, 441, 445, 446, 447, 450, 451, 452, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 471], "0": [8, 13, 16, 22, 31, 34, 44, 45, 51, 109, 144, 152, 155, 175, 183, 184, 185, 196, 221, 244, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 307, 308, 309, 317, 318, 338, 347, 354, 355, 360, 361, 382, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 431, 433, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 450, 455, 456, 457, 458, 459, 463, 464, 466, 467, 468, 470, 473], "00": [440, 466], "000": [420, 442], "000556": 440, "0007691190000400638": 423, "001": [44, 354, 427, 459], "003068": 431, "005": [408, 409, 410, 412, 413], "01": [175, 415, 416, 421, 424, 439, 440, 447], "02": 447, "021": [278, 360], "030279": 435, "031254": 431, "03213": [278, 360], "032625": 435, "033319": 431, "033525": 431, "05": 447, "057": [408, 409, 410, 412, 413, 423], "06": [221, 290, 427], "060132": 431, "071320": 435, "074352": 440, "075322": 438, "08": 447, "082438": 431, "086616": 438, "09653736976391157": 433, "0f": 424, "1": [13, 16, 26, 31, 44, 109, 126, 144, 155, 186, 196, 213, 244, 246, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 307, 308, 309, 314, 317, 318, 328, 338, 347, 355, 357, 361, 382, 386, 392, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 431, 433, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 450, 451, 455, 457, 458, 459, 463, 464, 466, 467, 468, 470, 473], "10": [13, 16, 196, 246, 278, 360, 407, 409, 412, 418, 419, 420, 424, 427, 428, 430, 431, 433, 435, 436, 438, 440, 442, 443, 444, 446, 447, 450, 457, 458, 460, 464, 468, 473], "100": [413, 418, 419, 420, 421, 424, 427, 428, 430, 431, 435, 436, 442, 447, 462, 463, 464, 468, 470, 473], "1000": [436, 468], "100364": 431, "102": 439, "1024": [149, 452, 464], "1038": [278, 360], "104": 413, "105": [408, 409, 410, 412, 413, 423, 435, 440, 466], "109573": 440, "109715": 438, "11": [323, 430, 431, 451, 457], "110": 440, "111": [427, 442], "111111": 427, "1147": 420, "1148": 420, "1149": 420, "115": 439, "1150": 420, "12": [430, 435, 440, 457, 458, 466], "120": [408, 409, 410, 412, 413, 418, 420, 423, 464], "120000": 439, "122": 442, "124919": 440, "126": [418, 420, 421, 440, 451], "1268824": [408, 409, 410], "128": [10, 412], "129": 347, "13": [430, 435, 446, 453, 466], "130539": 435, "1337": [424, 425, 473], "134112": 438, "134682": 435, "135": 347, "136506": 431, "138126": 431, "14": [430, 431, 435, 466], "14448993259018328": 433, "1454": 452, "149189": 435, "15": [246, 420, 430, 431, 446, 447, 450, 458, 466], "150": [418, 421, 459], "1500": 464, "151": 420, "153": [408, 409, 410, 412, 413, 423], "157": 435, "158": 435, "158668": 435, "159": 435, "16": [366, 382, 430, 431], "160952": 431, "162": 435, "163808": 431, "167873": 431, "169241": 412, "17": [430, 431], "170116": 438, "173083": 431, "173640": 435, "175662": 431, "177": 442, "178": 435, "179075": 431, "18": [430, 431, 458], "180": 418, "180754": 431, "181167": 431, "181255": 438, "186": 435, "187260": 438, "188": 442, "188235": 412, "19": [430, 431], "192": 420, "195": 439, "1963": 347, "198767": 431, "1e": [221, 290, 427], "2": [8, 13, 16, 22, 109, 111, 126, 246, 317, 318, 328, 347, 353, 361, 386, 392, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 424, 425, 427, 428, 430, 431, 433, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 450, 455, 457, 458, 459, 462, 463, 464, 466, 467, 468, 470], "20": [13, 16, 155, 246, 407, 408, 409, 410, 424, 425, 430, 431, 435, 452, 464, 471, 473], "200": [409, 418, 420, 427, 428, 433, 442], "2000": 427, "2004": 455, "2007": 471, "2009": 347, "2021": 409, "2022": 450, "2025": 450, "21": [430, 431, 443], "213585": 431, "214": 435, "216439": 431, "219631": 431, "22": [13, 16, 413, 430, 431, 435, 458], "220": 439, "221": 452, "222": 442, "222473": 438, "228142": 413, "23": [430, 431, 440, 458, 468], "232": 435, "232359": 431, "238237": 438, "24": [419, 430, 466], "241": 464, "245829": 438, "248728": 435, "25": [424, 430, 431, 446, 466], "250": 456, "257237": 431, "26": [430, 431, 466], "260306": 431, "266978": 431, "27": [412, 413, 430, 431, 435, 466], "276028": 438, "277": 435, "278": 435, "278940": 431, "279": 435, "28": [430, 431], "280": 435, "281532": 431, "287671": 431, "29": [430, 450], "292958": 435, "298059": 435, "3": [246, 317, 318, 323, 328, 361, 366, 408, 409, 410, 413, 416, 418, 419, 420, 421, 423, 425, 428, 430, 431, 433, 435, 436, 438, 439, 440, 442, 443, 446, 447, 450, 451, 453, 455, 457, 458, 459, 462, 464, 466, 467, 468, 470, 471], "30": [407, 421, 425, 430, 435, 464], "300": [347, 427], "300041": 438, "301934": 431, "3078f3": 452, "31": [413, 430, 443], "312686": 431, "32": [419, 430, 458, 464], "326918": 431, "33": [419, 430, 435], "333435": 431, "3336": 347, "3341": 347, "337011": 431, "34": [419, 431, 458], "340309": 431, "342": 412, "343372": 438, "344695": 431, "348737": 440, "35": [419, 430], "354032": 431, "356882": 431, "359553": 435, "36": [347, 435], "360237": 431, "360561": 438, "363578": 431, "370260": 431, "376050": 439, "38": 458, "383491": 438, "385": 413, "386536": 431, "386930": 435, "388771": 438, "39": 464, "390249": 431, "393425": 438, "394761": 431, "397828": 435, "397894": 435, "3d": 425, "4": [13, 16, 149, 317, 318, 347, 366, 415, 416, 418, 419, 420, 421, 425, 430, 431, 433, 435, 438, 439, 440, 450, 455, 457, 458, 459, 464, 466], "40": [430, 431, 463, 464], "404431": 438, "407637": 439, "40x": 452, "411518": 431, "42": [433, 436, 458], "425985": 438, "427272": 431, "428182": 435, "434090": 435, "44": 431, "442375": 431, "442716": 431, "447": 418, "448": 418, "449": 418, "45": [430, 435, 470], "450": 418, "450308": 438, "456756": 435, "467253": 431, "468": 452, "48": 431, "493388": 431, "494095": 431, "498545": 435, "4x": 452, "5": [109, 155, 317, 318, 408, 410, 415, 418, 419, 420, 421, 424, 427, 428, 430, 431, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 450, 455, 456, 457, 458, 459, 464, 466, 468, 471, 473], "50": [421, 428, 430, 433, 446, 447, 455, 456, 464, 466, 470], "500": [425, 464], "500224": 440, "5066666666666667": 433, "52": [431, 435], "53": 435, "5313": 334, "532788": 438, "533462": 438, "54": [435, 450, 458], "542059": 435, "55": [435, 470], "551014": 431, "558216": 431, "56": [435, 458, 468], "565735": 438, "570618": 440, "574172": 431, "575211": 438, "576017": 435, "579906": 438, "586005": 440, "587618": 431, "59": [431, 442, 450, 458], "590": 409, "596635": 440, "6": [317, 318, 366, 408, 409, 410, 418, 419, 420, 421, 430, 431, 433, 435, 438, 440, 442, 455, 459, 466], "60": [435, 463], "603815": 435, "607287": 431, "614461": 431, "62": [433, 439, 458], "620075": 435, "623992": 431, "624999": 435, "631680": 413, "64": 196, "640561": 431, "65": [431, 433, 435], "652868": 440, "659672": 435, "66368270ffd51418ec58bd793f2d9b1b": 471, "67": 435, "674574": 438, "678227": 435, "69": [408, 409, 410, 431], "692004": 431, "696158": 438, "698855": 439, "699653": 438, "7": [155, 317, 318, 360, 419, 421, 425, 430, 431, 435, 436, 438, 446, 455, 457, 458, 464, 466], "70": 430, "702266": 435, "706667": 439, "708894": 438, "71": [435, 464], "713357": 435, "718176": 440, "72": [413, 431, 458], "739571": 431, "739919": 431, "74": 431, "745": 473, "75": [430, 466], "761565": 431, "763895": 435, "766257": 431, "768083": 413, "77": 435, "774264": 438, "775262": 438, "778": 442, "78": 435, "784922": 438, "787411": 431, "79": 450, "796915": 435, "7gz": 464, "7hf": 464, "8": [318, 347, 408, 410, 418, 420, 421, 430, 431, 433, 435, 438, 450, 455, 457, 459], "80": [431, 459], "804006": 431, "809507": 431, "812083": 431, "826594": 435, "83": 458, "8389": 334, "8417": 334, "849337": 435, "855183": 435, "855187": 431, "855570": 438, "857": 420, "858459": 431, "861": 421, "862": 421, "863": 421, "864": 421, "866531": 438, "868216": 440, "87": [442, 458], "871148": 431, "873426": 431, "88": [435, 442], "883004": 431, "8859": 427, "887387": 435, "889": 442, "89": [409, 442], "8jq": 464, "9": [13, 16, 421, 425, 430, 431, 435, 438, 455, 457, 458, 466, 467], "90": [408, 409, 410, 412, 413, 423, 442, 466], "91": 458, "910564": 438, "92": 435, "927687": 438, "931059": 438, "947057": 431, "947806": 435, "948816": 431, "95": 435, "950841": 438, "96": 409, "960708": 431, "960873": 431, "961348": 431, "967736": 438, "973393": 431, "974347": 431, "987539": 435, "987960": 438, "989564": 431, "999": 459, "A": [0, 13, 16, 26, 31, 38, 40, 41, 42, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 73, 75, 79, 81, 82, 83, 84, 87, 90, 92, 97, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 130, 132, 138, 141, 142, 144, 152, 155, 157, 158, 159, 168, 169, 170, 171, 172, 173, 174, 175, 178, 184, 185, 186, 188, 191, 194, 196, 198, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 222, 223, 238, 239, 244, 246, 248, 250, 253, 255, 257, 260, 262, 266, 268, 269, 276, 278, 280, 282, 284, 286, 297, 299, 305, 307, 308, 309, 317, 323, 326, 327, 328, 331, 341, 347, 353, 360, 361, 363, 364, 375, 377, 378, 386, 390, 392, 395, 407, 419, 428, 430, 431, 433, 435, 443, 444, 449, 451, 452, 453, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471], "AND": [54, 420, 455, 459], "AS": [450, 455], "And": 427, "As": [408, 409, 410, 425, 433, 435, 446, 447, 450, 451, 452, 457, 458, 459, 462, 465, 466, 468], "But": 470, "By": [97, 125, 158, 221, 337, 361, 431, 453, 457, 458, 460, 461, 463, 465, 466], "FOR": 455, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 165, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 244, 250, 253, 255, 257, 258, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 297, 299, 305, 310, 333, 362, 368, 371, 377, 378, 392, 395, 408, 409, 410, 412, 413, 419, 423, 424, 425, 430, 431, 433, 435, 440, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473], "If": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 97, 101, 122, 125, 126, 130, 132, 134, 157, 158, 163, 164, 184, 185, 188, 194, 196, 213, 215, 221, 227, 228, 244, 246, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 308, 313, 318, 326, 327, 331, 333, 336, 338, 341, 347, 349, 351, 353, 354, 355, 357, 360, 361, 362, 363, 364, 379, 392, 393, 404, 405, 413, 415, 424, 430, 439, 440, 443, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 469, 470, 471, 473], "In": [31, 45, 57, 157, 196, 215, 242, 244, 331, 366, 408, 409, 410, 412, 424, 425, 427, 430, 431, 433, 435, 436, 439, 440, 443, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473], "It": [26, 178, 185, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 242, 261, 282, 347, 353, 408, 412, 413, 419, 428, 430, 433, 435, 440, 442, 443, 444, 446, 457, 458, 459, 460, 464, 465, 466, 468, 473], "Its": [246, 427], "No": [362, 408, 409, 424, 438, 449, 452], "Not": [347, 455, 459], "OF": [450, 455], "OR": [450, 455], "Of": [413, 422, 448, 467], "On": [347, 427, 433], "One": [146, 408, 410, 436, 450], "Or": 460, "Such": [413, 459, 462, 468], "That": [44, 215, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 308, 413, 418, 430, 453, 466, 468, 471], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 97, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 165, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 233, 234, 236, 238, 242, 244, 246, 248, 253, 255, 257, 258, 260, 262, 266, 269, 280, 282, 284, 286, 288, 290, 294, 297, 299, 302, 305, 307, 308, 309, 311, 313, 314, 317, 318, 323, 326, 327, 328, 331, 333, 336, 337, 338, 341, 347, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 375, 377, 378, 379, 384, 385, 386, 388, 389, 392, 393, 404, 405, 408, 409, 410, 413, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 435, 439, 440, 444, 446, 447, 449, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 469, 470, 472, 473], "Then": 425, "There": [86, 290, 382, 430, 438, 450, 451, 453, 457, 461, 466, 469], "These": [311, 406, 409, 410, 411, 414, 417, 422, 426, 429, 432, 434, 437, 441, 445, 450, 453, 457, 459, 460, 464, 466], "To": [408, 413, 424, 425, 431, 433, 436, 442, 446, 447, 450, 451, 453, 457, 458, 459, 460, 461, 463, 464, 468, 469], "Will": 456, "With": [353, 424, 425, 430, 433, 436, 446, 447, 450, 457, 459, 464, 467], "_": [134, 163, 164, 218, 224, 231, 347, 415, 424, 425, 447], "__": [134, 347], "__class__": [423, 433], "__excepthook__": 451, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 253, 255, 257, 258, 260, 262, 266, 268, 269, 276, 278, 280, 282, 284, 286, 297, 299, 305, 320, 323, 347, 370, 371, 377, 378, 395, 466, 467], "__name__": [423, 433], "__new__": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 146, 147, 149, 370], "__str__": 452, "__version__": 452, "_amount": 430, "_ardregressionparam": 280, "_arraylik": 356, "_buffer": [13, 16, 126, 159, 307, 308, 309, 385, 386], "_c": 327, "_cumbest": 244, "_default_my_attribut": 453, "_discretelabellikeparamet": [141, 144, 155], "_expectedhypervolumeimprov": [13, 16], "_fit": 294, "_has_switch": 186, "_iterbest": 244, "_label": 430, "_measur": 244, "_n_last_measur": [183, 184, 185], "_nbase": 343, "_nestedsequ": [13, 16, 126, 159, 307, 308, 309, 385, 386], "_ngbregressorparam": 284, "_no_tl": 446, "_option": 452, "_posterior": 294, "_posterior_comp": 452, "_randomforestregressorparam": 286, "_sphinx_paramlinks_bayb": 347, "_step": [183, 184, 185], "_supportsarrai": [13, 16, 126, 159, 307, 308, 309, 385, 386], "_surrogategett": 260, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 226, 234, 235, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 328, 329, 330, 350, 363, 365, 371, 377, 378], "_target": 452, "_tmetadata": 379, "_tparamet": 158, "_tsurrog": [289, 290], "_u": 328, "_validate_my_attribut": 453, "_was_us": [183, 184, 185], "a1": 318, "a2": 318, "ab": [421, 430], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 325, 332, 452, 472], "abc": [24, 34, 35, 36, 37, 38, 40, 104, 105, 106, 122, 138, 139, 167, 181, 191, 194, 201, 206, 255, 257, 297, 337], "abil": [456, 457, 461, 471], "abl": [425, 451, 457, 459, 464, 467, 473], "about": [8, 26, 31, 139, 155, 297, 314, 408, 409, 410, 430, 439, 440, 450, 452, 453, 458, 462, 464, 466, 469], "abov": [290, 309, 337, 360, 407, 413, 420, 421, 423, 424, 431, 438, 450, 453, 455, 456, 457, 458, 459, 460, 461, 464, 467, 468, 469, 471], "absenc": 463, "absolut": [44, 152, 355, 450], "abstract": [24, 34, 35, 36, 37, 38, 40, 104, 105, 106, 122, 137, 138, 139, 167, 181, 191, 194, 201, 257, 297, 326, 327, 337, 452, 459, 471], "abstractli": 433, "acceler": [450, 452, 454, 471], "accept": [31, 184, 253, 255, 257, 262, 266, 280, 282, 284, 286, 356, 424, 425, 452, 455, 460, 463, 464, 468, 470], "access": [213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 408, 409, 410, 418, 423, 447, 452, 457, 459, 464, 467], "accord": [44, 179, 431, 456, 459, 460, 465, 473], "accordingli": [196, 458, 461, 463, 467], "account": 457, "accumul": [169, 433, 471], "accur": [347, 458], "acet": [408, 409, 410, 412, 413], "aceton": 430, "achiev": [21, 221, 425, 430, 433, 436, 450, 453, 456, 458, 459, 461, 469], "ack": 450, "acq_funct": 413, "acq_valu": 458, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 424, 425, 433], "acqf1": 467, "acqf2": 467, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 70, 82, 194, 196, 418, 419, 420, 421, 424, 425, 433, 435, 442, 450, 452, 456, 463, 465, 467, 469, 472], "acquisition_funct": [31, 194, 196, 413, 424, 425, 433, 443, 444, 452], "acquisition_function_cl": 452, "acquisition_valu": [31, 194, 196, 424, 425, 452, 458], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 31, 194, 196, 433, 452, 467], "across": [430, 433, 446, 457, 465, 471], "act": [430, 452, 455, 459, 468], "action": [21, 423, 433, 449, 452, 472], "activ": [15, 34, 157, 186, 196, 424, 425, 433, 450, 451, 452, 453, 459, 460, 461, 462, 465, 471, 472, 473], "activate_paramet": 452, "active_dim": [104, 105, 106, 109, 111, 113, 114, 115], "active_valu": [138, 141, 142, 144, 152, 155, 446, 447, 452, 461, 464, 471], "actual": [184, 215, 242, 439, 452, 462, 466, 468, 471, 473], "ad": [31, 221, 313, 317, 347, 353, 392, 430, 431, 449, 453, 456, 460, 461, 469, 470, 472], "adapt": [185, 278, 338, 360], "add": [31, 236, 246, 353, 354, 413, 427, 428, 430, 435, 446, 450, 455, 457, 458, 459, 462, 466, 471, 473], "add_collection3d": 425, "add_fake_measur": [357, 412, 413, 418, 419, 420, 421, 427, 428, 435, 452, 457, 468, 473], "add_fake_result": 452, "add_measur": [31, 357, 412, 413, 415, 416, 418, 419, 420, 421, 425, 427, 428, 433, 435, 436, 439, 440, 450, 452, 457, 458, 460, 461], "add_noise_to_perturb_degenerate_row": 452, "add_parameter_nois": [357, 452, 473], "add_subplot": 425, "addendum": 455, "addit": [31, 97, 122, 125, 130, 132, 184, 196, 215, 236, 244, 246, 248, 347, 355, 357, 377, 378, 408, 409, 410, 431, 439, 447, 450, 452, 454, 455, 458, 459, 460, 462, 463, 464, 466, 467, 468, 471, 473], "addition": [423, 431, 450, 462], "additiveexplain": [95, 98], "additivekernel": 452, "address": 468, "adher": [452, 453], "adjust": [157, 185, 409, 413, 439, 452, 461, 463], "administ": 472, "adopt": 413, "adrian": [450, 454], "advanc": [185, 433, 451, 452, 460, 463, 467, 471, 472], "advantag": [430, 453], "advic": 453, "advis": [455, 468], "affect": [31, 53, 63, 65, 196, 213, 317, 423, 442, 449, 451, 459], "affected_paramet": [53, 418, 419, 420, 421, 430, 459], "affili": [450, 460], "afford": 458, "aforement": [215, 460], "after": [186, 333, 412, 413, 418, 419, 420, 421, 425, 435, 442, 450, 458, 462, 463, 464, 467], "afterward": 467, "again": [424, 457, 458, 459, 471], "against": [91, 313, 331, 430, 455, 461, 471], "agent": 431, "aggreg": 463, "agraw": 454, "agre": [450, 455, 462], "agreement": 455, "ai": [102, 165, 382], "aim": [457, 458, 462], "akin": 457, "al": [409, 450, 464], "aldrich": 454, "alex": 454, "alexand": [450, 454], "algorithm": [189, 196, 347, 353, 390, 392, 407, 430, 435, 450, 452, 457, 462, 465], "alia": [154, 198, 256, 464], "alias": 452, "align": [157, 213, 333, 424, 466, 471], "all": [23, 24, 33, 35, 40, 44, 53, 55, 61, 63, 97, 103, 104, 105, 106, 121, 122, 125, 136, 139, 144, 148, 155, 166, 167, 177, 180, 181, 184, 190, 191, 193, 196, 200, 201, 213, 215, 222, 223, 246, 253, 254, 257, 296, 297, 317, 330, 331, 347, 353, 365, 408, 409, 410, 413, 415, 416, 418, 419, 423, 424, 425, 430, 431, 433, 435, 438, 439, 446, 447, 450, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473], "allclos": [415, 416, 431], "alleg": 455, "allow": [21, 31, 34, 44, 51, 55, 122, 125, 130, 132, 152, 158, 185, 215, 221, 248, 280, 286, 292, 314, 336, 362, 363, 404, 405, 408, 409, 410, 413, 430, 431, 446, 447, 450, 452, 456, 458, 459, 460, 461, 463, 465, 466, 467, 468, 469, 470, 473], "allow_": [452, 461], "allow_extra": [122, 125, 130, 132, 213, 215, 221, 226, 363, 368, 435, 452], "allow_miss": [122, 125, 130, 132, 213, 215, 221, 226, 363, 368, 452], "allow_recommending_already_measur": [31, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 433, 443, 444, 449, 452, 458], "allow_recommending_already_recommend": [31, 425, 433, 443, 444, 449, 452, 458], "allow_recommending_pending_experi": [31, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 452, 458], "allow_repeated_recommend": [188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 452], "almost": 409, "alon": [452, 455], "along": [386, 455, 464, 471], "alongsid": 455, "alpha": [169, 425, 436], "alpha_1": 427, "alpha_2": 427, "alpha_init": 427, "alphabet": [160, 452], "alreadi": [31, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 430, 440, 450, 452, 456, 457, 458, 461, 466, 468, 469, 471, 473], "also": [31, 44, 57, 97, 158, 253, 255, 257, 262, 266, 280, 282, 284, 286, 314, 331, 333, 347, 353, 354, 355, 408, 415, 416, 424, 425, 427, 428, 430, 435, 436, 439, 440, 442, 446, 447, 450, 452, 453, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473], "alter": [430, 452, 458, 461], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 290, 347, 386, 423, 430, 431, 438, 450, 452, 460, 461, 469, 472, 473], "although": [430, 440, 443, 466, 468], "alwai": [15, 31, 40, 231, 232, 392, 427, 430, 431, 450, 456, 458, 459, 468, 469, 471, 473], "ambigu": [152, 321, 322, 466], "amend": 459, "among": [34, 430, 450, 463, 471], "amount": [318, 393, 431, 446, 447, 457, 462, 464, 473], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 70, 71, 72, 74, 76, 77, 78, 82, 88, 91, 92, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 234, 236, 238, 242, 244, 246, 248, 253, 255, 257, 260, 262, 263, 266, 269, 280, 282, 284, 286, 288, 289, 292, 297, 299, 305, 317, 321, 322, 329, 331, 333, 336, 342, 347, 350, 351, 360, 361, 362, 364, 366, 370, 371, 372, 377, 378, 385, 392, 393, 408, 410, 411, 413, 420, 421, 423, 424, 427, 428, 431, 435, 438, 442, 443, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471], "analog": [215, 353, 459, 466, 467], "analogi": [179, 465], "analys": 472, "analysi": [450, 462, 469], "analyt": [3, 4, 7, 8, 82, 457, 468, 471], "analyz": [450, 453, 462], "angl": 425, "ani": [13, 16, 64, 65, 88, 97, 126, 137, 138, 139, 141, 142, 144, 155, 158, 159, 162, 163, 164, 231, 232, 236, 240, 241, 248, 307, 308, 309, 314, 317, 330, 331, 333, 334, 336, 337, 351, 357, 362, 364, 371, 373, 377, 378, 379, 385, 386, 400, 401, 402, 403, 405, 423, 430, 446, 447, 449, 450, 451, 452, 453, 455, 457, 458, 460, 461, 464, 467, 468, 471], "annot": [333, 423, 455], "anonym": [450, 460], "anoth": [53, 347, 372, 409, 419, 420, 427, 428, 430, 440, 453, 459, 471], "ansatz": 452, "answer": 458, "anti": 361, "anymor": [452, 471], "anyth": 338, "anywai": 469, "anywher": 415, "apach": [450, 455], "apart": [453, 458], "api": [347, 450, 451, 452, 454, 467, 472], "aplei": 462, "appar": 467, "appdata": 451, "appear": [331, 451, 452, 455, 467], "append": [425, 447], "appendix": 455, "appli": [31, 40, 41, 42, 57, 196, 215, 242, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 331, 342, 355, 357, 395, 413, 414, 417, 418, 420, 421, 423, 424, 430, 446, 451, 452, 455, 459, 462, 463, 465, 466, 467, 468, 469, 470, 471], "applic": [347, 351, 450, 453, 455, 464, 465, 468], "approach": [221, 347, 424, 433, 450, 453, 456, 458, 461, 463, 465, 467, 469, 471], "appropri": [47, 48, 221, 433, 453, 455, 461, 466], "approxim": [10, 21, 459, 462], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 69, 80, 84, 85, 86, 97, 122, 125, 126, 130, 132, 138, 141, 142, 144, 152, 155, 157, 158, 159, 164, 178, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 244, 246, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 309, 311, 313, 314, 317, 318, 326, 327, 328, 330, 331, 333, 337, 338, 347, 353, 354, 356, 357, 358, 362, 363, 365, 392, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 428, 430, 431, 433, 435, 438, 439, 442, 443, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473], "arang": [415, 425, 464], "arbitrari": [185, 215, 373, 452, 459, 464, 465, 468, 471, 473], "arbitrarili": [463, 467], "architectur": [253, 255, 257, 262, 266, 280, 282, 284, 286, 294, 452, 469, 471], "ard_num_dim": [104, 105, 106, 109, 111, 113, 114, 115], "ardregress": 280, "area": 425, "arg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 108, 110, 112, 117, 118, 119, 167, 169, 170, 171, 172, 173, 174, 175, 178, 198, 258, 263, 268, 370, 453], "argu": 430, "argument": [31, 71, 92, 97, 102, 155, 158, 165, 181, 183, 184, 185, 186, 194, 196, 213, 221, 248, 258, 260, 333, 347, 357, 361, 413, 428, 435, 452, 459, 462, 464, 465, 466, 467, 468, 471], "aris": [56, 430, 452, 455, 459, 467, 473], "arithmet": [128, 463], "arizona": 454, "arm": [252, 253, 448, 454], "arm_index": 433, "around": [13, 16, 44, 205, 248, 250, 435, 452, 465, 467, 473], "arr": [307, 308, 309, 386, 436], "arrai": [13, 16, 126, 159, 307, 308, 309, 320, 347, 356, 367, 381, 385, 386, 392, 425, 452, 465, 469], "arrays_to_datafram": [415, 416, 425, 436, 439, 440, 446, 447, 452, 468], "arriv": [450, 461], "artifici": 473, "aryl": [408, 409, 410, 412, 450, 464], "asarrai": 347, "ascend": 435, "ask": [430, 450, 452, 453, 458, 461], "aspect": [411, 415, 416, 440, 457, 460], "assembl": [430, 467, 469], "assembli": [469, 472], "assert": [65, 134, 362, 418, 419, 420, 421, 427, 428, 430, 431, 438, 442, 452, 455, 458, 459, 467, 469], "assess": [452, 462, 468], "assign": [353, 424, 431, 438, 464], "associ": [215, 433, 455, 458, 460, 463, 471], "assum": [26, 45, 261, 333, 362, 363, 408, 409, 410, 413, 415, 416, 418, 419, 420, 421, 427, 428, 430, 433, 435, 439, 440, 442, 450, 455, 457, 459, 461, 464, 467, 469, 470, 473], "assumpt": 468, "assur": 459, "asymmetr": 44, "asynchron": [450, 458, 472], "atol": [415, 416], "atompair": 149, "atompairfingerprint": 149, "attach": [26, 333, 423, 424, 425, 455], "attempt": [81, 88, 261, 433, 451, 452, 457, 459, 462, 463, 465], "attent": 186, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 253, 255, 257, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 292, 297, 299, 305, 331, 334, 371, 377, 378, 395, 403, 452], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 91, 94, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 149, 151, 152, 153, 155, 158, 162, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 220, 221, 230, 234, 236, 253, 254, 255, 257, 260, 262, 266, 269, 273, 276, 278, 280, 282, 284, 286, 291, 294, 297, 298, 299, 302, 303, 305, 319, 322, 331, 347, 350, 363, 371, 377, 378, 380, 391, 395, 396, 399, 400, 401, 402, 403, 438, 452, 453, 455, 459, 465, 467, 469, 470], "audit": [452, 453], "augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 215, 288, 289, 290, 452, 458], "author": 455, "authorship": 455, "auto": [12, 13, 14, 16, 17, 452, 454], "auto_tutori": 382, "autocorr": 149, "autocorrfingerprint": 149, "autodoc": 452, "automat": [31, 196, 266, 407, 425, 439, 451, 452, 453, 462, 463, 465, 466, 469, 471, 472], "avail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 75, 83, 128, 144, 146, 147, 149, 155, 184, 185, 244, 246, 273, 302, 303, 314, 391, 392, 393, 410, 412, 415, 416, 430, 435, 439, 440, 450, 451, 452, 453, 455, 457, 458, 460, 462, 464, 465, 466, 467, 468, 471, 472], "available_acq_funct": 413, "avalon": 149, "avalonfingerprint": 149, "averag": [282, 424, 425, 447, 464, 468], "avoid": [215, 334, 386, 452, 453, 457, 458, 464, 466], "awai": [13, 16, 157, 470], "awar": [430, 446, 447, 452, 456, 461, 467], "ax": [97, 407, 409, 424, 425, 436, 446, 447], "axes3d": 425, "axi": [213, 244, 386, 407, 415, 416, 421, 424, 425, 430, 431, 433, 435, 436, 439, 440, 446, 447, 466], "azim": 425, "azur": 452, "b": [44, 56, 175, 278, 317, 328, 360, 361, 409, 419, 428, 433, 443, 444, 449, 450, 453, 455, 458, 461, 464, 467], "b1": 318, "b2": 318, "back": [0, 442, 449, 452, 453, 461], "backend": 314, "background": [97, 101, 452, 457, 462], "background_data": 97, "backport": 451, "backtest": [242, 243, 249, 410, 445, 448, 450, 452, 465, 468], "backtick": 453, "backward": [197, 198, 215, 452], "bad": [435, 458, 460, 470], "bad_interv": 353, "badg": 452, "bai": 450, "baird": 454, "balanc": [125, 433, 450], "banana": 453, "bandit": [253, 413, 448, 450, 452, 454], "banner": 452, "bar": [97, 99, 427, 428, 430, 442, 443, 444, 450, 452, 462, 469], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 182, 183, 184, 185, 186, 188, 191, 194, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 220, 221, 234, 236, 238, 253, 255, 257, 258, 260, 261, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 290, 292, 297, 299, 302, 303, 305, 320, 322, 323, 325, 326, 327, 347, 356, 361, 371, 377, 378, 391, 392, 395, 407, 412, 413, 424, 425, 427, 429, 433, 448, 450, 452, 455, 456, 458, 459, 460, 462, 464, 465, 466, 467, 469], "base1": 431, "base2": 431, "base_data": 424, "base_kernel": [117, 118, 119], "base_nam": [407, 409, 424, 425, 446, 447], "base_predictor": 288, "base_smil": 424, "baseestim": 347, "basefingerprinttransform": 341, "baselin": [407, 409, 446, 450, 464], "basesequentialmetarecommend": [184, 185], "bashrc": 460, "basi": [113, 450, 455, 457, 462], "basic": [104, 108, 109, 110, 111, 112, 113, 114, 115, 169, 170, 171, 172, 173, 174, 175, 244, 320, 322, 323, 378, 408, 409, 410, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 435, 439, 440, 441, 442, 445, 448, 452, 453, 461, 463, 464, 468, 472], "basic_transfer_learn": 447, "basickernel": [108, 109, 110, 111, 112, 113, 114, 115, 452], "batch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 247, 288, 289, 413, 418, 419, 420, 421, 425, 435, 439, 440, 442, 446, 447, 452, 457, 461, 465, 468], "batch_quant": 452, "batch_shap": [104, 105, 106, 109, 111, 113, 114, 115], "batch_siz": [31, 44, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 244, 248, 250, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 427, 428, 431, 433, 435, 436, 439, 440, 442, 443, 446, 447, 450, 452, 457, 458, 460, 461, 468], "batchnr": 435, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 297, 299, 302, 303, 305, 320, 322, 323, 347, 371, 377, 378, 391, 395, 406, 407, 408, 409, 410, 411, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "baybe_cach": 460, "baybe_cache_dir": [452, 460], "baybe_deactivate_polar": [452, 460], "baybe_debug_fake_hosthash": 452, "baybe_debug_fake_userhash": 452, "baybe_numpy_use_single_precis": [383, 452, 460], "baybe_parallel_simulation_run": [248, 460], "baybe_telemetry_en": [450, 460], "baybe_telemetry_endpoint": [452, 460], "baybe_telemetry_host": 452, "baybe_telemetry_hostnam": [452, 460], "baybe_telemetry_usernam": [452, 460], "baybe_telemetry_vpn_check": [452, 460], "baybe_telemetry_vpn_check_timeout": [452, 460], "baybe_torch_use_single_precis": [398, 452, 460], "bayesian": [0, 188, 194, 196, 242, 244, 248, 250, 261, 280, 433, 452, 456, 458, 462, 469, 472], "bayesian_recommend": 425, "bayesianlinearmodel": 428, "bayesianlinearsurrog": [413, 452, 469], "bayesianrecommend": [188, 196, 261, 452, 465], "bayesianridg": 427, "bcut2d": [149, 452], "bcut2dfingerprint": 149, "bcw07": 471, "becaus": [44, 86, 152, 157, 215, 221, 250, 337, 423, 424, 430, 447, 453, 456, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 471], "becom": [215, 430, 452, 456, 458, 459, 467, 470, 473], "been": [26, 31, 81, 82, 184, 253, 255, 257, 262, 266, 280, 282, 284, 286, 362, 408, 409, 450, 451, 452, 455, 457, 458, 463, 465, 471], "beeswarm": [97, 99, 462], "befor": [81, 186, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 333, 407, 410, 413, 419, 424, 450, 452, 453, 460, 461, 464, 466], "begin": [184, 418, 420, 438, 442, 465, 469], "behalf": 455, "behav": [425, 442, 467], "behavior": [157, 196, 450, 452, 460, 463, 465, 466, 471], "behind": [463, 467, 468, 469, 470], "being": [13, 16, 119, 353, 433, 451, 452, 459, 460, 464, 466], "bell": [303, 307, 435, 470], "belong": [347, 423, 467], "below": [186, 290, 309, 420, 423, 424, 430, 453, 455, 456, 458, 459, 463, 467, 469, 470, 471, 472], "benchmark": [408, 409, 424, 450, 452, 454], "benefici": [455, 456, 460], "benefit": [459, 471], "benzo": 471, "bernoulli": [253, 432, 448, 454], "besid": [450, 463, 470], "best": [12, 13, 14, 16, 17, 244, 246, 248, 410, 433, 450, 460, 465], "bet": 458, "beta": [8, 22, 169, 253, 413, 452, 456], "betabernoullimultiarmedbanditsurrog": [413, 433, 452], "betaprior": [253, 452], "better": [10, 353, 409, 452, 458, 459, 461, 463, 464], "between": [13, 16, 34, 53, 152, 185, 213, 221, 276, 361, 423, 425, 430, 433, 435, 436, 440, 446, 447, 450, 452, 453, 457, 458, 459, 460, 463, 464, 465, 466, 467, 470, 471], "beyond": [157, 450, 462], "bias": 464, "big": 347, "bin": 430, "binar": 452, "binari": [299, 405, 442, 450, 451, 452, 467], "binarytarget": [300, 433, 452], "bind": [423, 425, 455], "bit": [452, 464], "black": [242, 468, 471], "blackbox": [406, 407, 448], "blank": 453, "blob": 278, "block": [424, 430, 450, 451, 452, 460, 467], "blue": 436, "boacquisitionfunct": [194, 196], "bodi": 423, "bonilla": 471, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 97, 100, 101, 122, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 226, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 299, 300, 307, 308, 309, 312, 326, 327, 331, 332, 337, 338, 347, 351, 356, 361, 363, 364, 368, 371, 377, 378, 385, 386, 392, 404, 433], "boolean": [13, 16, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 101, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 181, 183, 184, 185, 186, 363, 452, 458, 460], "boost": [284, 447], "both": [10, 13, 16, 157, 158, 215, 221, 250, 309, 333, 407, 419, 424, 427, 430, 431, 433, 435, 436, 446, 447, 450, 452, 453, 456, 458, 459, 462, 464, 466, 467, 469, 470, 473], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 188, 196, 198, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 415, 416, 425, 440, 446, 447, 452, 460, 465], "botorch_acqf": 26, "botorch_function_wrapp": 452, "botorchrecommend": [188, 198, 413, 418, 419, 420, 421, 424, 425, 427, 428, 433, 435, 440, 442, 443, 444, 450, 452, 457, 458, 459, 461, 465], "bottom": 458, "bound": [8, 22, 34, 44, 151, 157, 158, 175, 213, 215, 221, 226, 289, 290, 305, 306, 327, 333, 363, 365, 371, 372, 379, 407, 413, 415, 416, 425, 431, 435, 436, 438, 439, 440, 446, 447, 452, 464, 467, 470, 472, 473], "boundari": [44, 221, 307, 308, 435], "boundary_onli": [221, 430], "bounded": 452, "bounds_transform_func": 452, "box": [175, 242, 468, 471], "brain": [468, 471], "branch": [450, 453], "break": [261, 467], "brettpho": [408, 409, 410, 412, 413], "briefli": [468, 471], "bring": [450, 452], "bro": 278, "broad": 467, "broadcast": 159, "brute": [196, 465], "bu": [408, 409, 410, 412, 413], "bucket": 430, "budget": 458, "bug": [452, 453], "build": [213, 221, 261, 347, 424, 430, 451, 452, 453, 459, 462, 467, 469, 471, 472, 473], "built": [221, 427, 450, 453, 458, 465, 469], "builtin": 323, "bump": 452, "button": 452, "butyl": [408, 409, 410, 412, 413], "butylphenylphosphin": [408, 409, 410, 412, 413], "butyornitril": [408, 409, 410, 412, 413], "bypass": [158, 424, 469], "byte": [13, 16, 126, 159, 220, 262, 307, 308, 309, 375, 385, 386, 452, 473], "c": [56, 317, 328, 347, 408, 409, 410, 412, 413, 418, 419, 420, 421, 428, 430, 443, 444, 450, 451, 455, 458, 461, 464, 466, 467], "c1": [408, 409, 410, 412, 413, 418, 419, 420, 421, 464], "c1c2": [408, 409, 410, 412, 413], "c1ccccc1": [408, 409, 410, 418, 420], "c1ccoc1": 459, "c2": [408, 409, 410, 412, 413, 418, 420, 421], "c2ccccc2": [408, 409, 410], "c2oc": [408, 409, 410, 412, 413], "c2p": [408, 409, 410, 412, 413], "c3": [408, 409, 410, 412, 413, 418, 420], "c3c": [408, 409, 410], "c3ccccc3": [408, 409, 410, 412, 413], "c4": [408, 409, 410, 418, 420], "c4ccccc4": [408, 409, 410, 412, 413], "c5": [418, 420], "c6": [418, 420], "c_": 436, "c_g2_min": 431, "c_g3_max": 431, "c_i": 459, "c_total_sum": 431, "cach": [31, 313, 452, 467, 472], "cached_recommend": 313, "calcul": [31, 313, 347, 386, 415, 425, 446, 458, 460, 462, 464, 466], "calibr": 471, "call": [45, 92, 181, 183, 184, 185, 186, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 313, 314, 333, 356, 408, 409, 410, 423, 428, 430, 431, 443, 444, 450, 451, 452, 456, 458, 459, 460, 464, 467, 468, 469, 471, 472], "callabl": [52, 71, 91, 158, 234, 242, 244, 246, 248, 250, 288, 289, 292, 294, 323, 329, 331, 333, 347, 356, 407, 423, 436, 452, 472], "callable_": 331, "campaign": [97, 244, 247, 248, 250, 353, 355, 357, 411, 412, 420, 422, 425, 433, 444, 446, 447, 448, 449, 450, 452, 456, 457, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473], "campaign1": 468, "campaign2": 468, "campaign_json": 458, "campaign_oh": 409, "campaign_par": 436, "campaign_rand": [408, 409, 410], "campaign_recr": 442, "campaign_stop": 424, "campaign_with_hook": 424, "campaign_y0": 436, "campaign_y1": 436, "campaignstoppedexcept": 424, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 56, 97, 138, 144, 152, 155, 159, 178, 185, 188, 189, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 242, 246, 253, 255, 257, 258, 260, 261, 262, 266, 280, 282, 284, 286, 290, 300, 312, 314, 331, 333, 337, 347, 353, 355, 356, 382, 407, 408, 409, 410, 413, 414, 417, 418, 419, 420, 423, 424, 425, 427, 428, 430, 431, 433, 435, 436, 438, 439, 440, 443, 446, 447, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "canada": 454, "candid": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 194, 196, 206, 209, 213, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 392, 424, 425, 447, 452, 456, 465, 466, 472], "cannot": [15, 90, 91, 157, 261, 262, 290, 338, 433, 452, 455, 457, 459, 460, 464, 465, 467, 469, 471], "canon": [340, 467], "capabl": [406, 432, 434, 441, 445, 447, 452, 454, 458, 463, 469, 471], "captur": 464, "cardin": [34, 44, 51, 61, 63, 64, 65, 80, 196, 213, 450, 452, 454, 459], "cardinalityconstraint": [44, 51, 452], "care": [49, 430, 453, 459, 462, 463, 469], "carefulli": 460, "carlo": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 82, 248, 407, 409, 410, 424, 433, 446, 447, 452, 457, 468], "carri": [333, 423, 455, 463], "cartesian": [215, 221, 222, 223, 450, 452, 461, 466], "case": [157, 185, 250, 290, 333, 347, 353, 366, 424, 429, 430, 439, 440, 443, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 467, 468, 469, 470, 471, 473], "cast": [45, 452], "cat": 361, "cat_1": 435, "cat_1_22": 435, "cat_1_33": 435, "cat_2": 435, "catch": 427, "catch_constant_target": 452, "categor": [31, 141, 142, 146, 221, 228, 362, 450, 452, 464, 466, 470], "categori": [409, 424, 450, 452, 467, 470], "categorical_1": [435, 458], "categorical_2": [435, 458], "categorical_paramet": 467, "categorical_parameter_json": 467, "categorical_parameter_reconstruct": 467, "categoricalencod": [141, 142, 418, 419, 420, 421, 435, 442], "categoricalparamet": [142, 221, 409, 418, 419, 420, 421, 428, 433, 435, 442, 443, 444, 450, 452, 461, 462, 466, 467, 472], "cattr": [233, 234, 236, 293, 444, 451, 452, 453], "cauchi": 171, "caus": [152, 317, 323, 452, 455], "caution": 471, "cc": [408, 409, 410, 412, 413, 418, 420, 421, 430, 464, 471], "cc1": [408, 409, 410, 412, 413, 464], "ccc": [418, 420, 428, 450], "cccc": [408, 409, 410, 412, 413, 418, 420], "ccccc": [418, 420, 443, 444], "cccccc": [418, 420], "cccccccco": [459, 464], "ccccoc": [408, 409, 410, 412, 413], "cco": 430, "ccoccoccn": [443, 444], "cdot": [459, 463], "ceil": 424, "cell": [427, 464, 468, 471], "cell_lin": 471, "center": [307, 309, 347, 371, 435, 436, 458], "center_y0": 436, "center_y1": 436, "central": [452, 458, 472], "certain": [31, 53, 91, 186, 234, 236, 242, 314, 330, 353, 419, 424, 433, 450, 452, 453, 459, 461, 462, 465, 467, 471, 473], "cesium": [408, 409, 410, 412, 413], "chai": 471, "chain": [38, 181, 183, 184, 185, 186, 323, 459], "challeng": [453, 467], "chanc": 451, "chang": [53, 184, 353, 354, 355, 413, 430, 439, 450, 451, 453, 455, 458, 460, 462, 464, 466, 471], "charact": 455, "characterist": 323, "charg": 455, "chebyshev": 12, "check": [31, 61, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 313, 330, 332, 335, 336, 337, 338, 347, 362, 364, 365, 371, 377, 378, 384, 439, 440, 442, 450, 452, 453, 460, 462, 466, 467], "check_maximum": 61, "check_minimum": 61, "checker": 452, "checkout": 453, "chem": [450, 452, 464], "chemic": [342, 409, 412, 430, 452, 454, 459, 462, 464, 471], "cheminformat": [155, 450, 452], "chemistri": [144, 418, 420, 421], "child": [203, 204, 205, 206, 453], "chocol": 453, "choic": [244, 246, 392, 423, 430, 433, 440, 452, 459, 461, 463, 464, 465, 466, 467, 470], "choos": [179, 430, 431, 433, 435, 438, 439, 440, 449, 450, 455, 456, 458, 465, 469, 470], "chose": [439, 467], "chosen": [78, 188, 244, 246, 250, 388, 389, 392, 413, 433, 452, 456, 459, 464, 466], "christoph": 471, "ci": [416, 446, 447, 452, 453], "circular": 464, "circumv": [451, 467], "cl": [49, 231, 235, 290, 326, 327, 332, 337, 373, 379], "claim": 455, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 90, 94, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 219, 220, 221, 234, 236, 237, 238, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 319, 320, 322, 323, 325, 326, 327, 332, 337, 341, 346, 347, 351, 369, 371, 376, 377, 378, 390, 391, 394, 395, 413, 423, 424, 427, 433, 443, 452, 458, 459, 462, 463, 464, 465, 466, 467, 469], "classic": [433, 463], "classifi": 464, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 323, 371, 377, 378, 452], "classvalidationerror": [444, 451], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 253, 255, 257, 262, 266, 280, 282, 284, 286], "clean": [358, 359, 360, 451, 452, 453], "clear": [382, 471], "click": [433, 464], "clipboard": 427, "clone": 453, "close": [244, 250, 302, 407, 424, 446, 447, 468], "closer": [13, 16, 384, 464], "closest": [347, 385, 427], "closest_el": 452, "closur": [242, 468], "cluster": [203, 204, 205, 206, 344, 345, 346, 347, 413, 452, 454, 472], "cluster_centers_": 347, "clustering_algorithm": 347, "clustering_x": 452, "clustermixin": 347, "cmap": 425, "cn": [408, 409, 410, 412, 413], "co": 430, "co1": [408, 409, 410], "co2": [408, 409, 410], "co3": [408, 409, 410], "coars": [428, 442, 443, 444, 450], "coc": [428, 443, 444, 450], "cococ": [443, 444], "code": [261, 409, 428, 433, 439, 443, 444, 450, 451, 452, 455, 459, 460, 464, 468, 471, 473], "coeffici": [45, 47, 48, 415, 416, 431, 459], "coerc": 452, "collect": [31, 63, 64, 65, 107, 117, 118, 134, 158, 160, 168, 184, 186, 213, 221, 227, 228, 239, 246, 260, 315, 317, 319, 330, 331, 344, 345, 363, 364, 390, 392, 407, 413, 425, 430, 433, 436, 446, 447, 450, 452, 458, 460], "color": [425, 427, 436], "column": [40, 41, 42, 97, 122, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 244, 246, 248, 250, 317, 318, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 395, 404, 405, 409, 412, 418, 419, 420, 421, 424, 430, 435, 436, 442, 446, 447, 452, 458, 466, 467, 468], "column_group": 318, "com": [278, 334, 360, 450, 452], "comb": 430, "combin": [44, 54, 158, 196, 213, 215, 221, 222, 223, 323, 342, 408, 409, 410, 418, 420, 423, 424, 430, 435, 450, 451, 455, 459, 461, 462, 463, 464, 465, 466, 468, 471, 473], "combinatori": [196, 473], "combo_runn": 248, "come": [13, 16, 433, 450, 458, 459, 462, 467, 471, 473], "command": 451, "comment": 452, "commerci": 455, "commit": [450, 452, 453], "common": [168, 427, 431, 452, 453, 455, 457, 458, 459, 464, 467], "commonli": [463, 472], "commun": [455, 463, 471], "comp_df": [138, 141, 142, 144, 152, 155, 452], "comp_rep": [221, 427, 452, 466], "comp_rep_bound": [213, 215, 221, 452], "comp_rep_byt": [220, 473], "comp_rep_column": [137, 138, 139, 141, 142, 144, 151, 152, 155, 213, 215, 221, 452], "comp_rep_human_read": [220, 473], "comp_rep_shap": [220, 473], "compar": [158, 184, 407, 430, 431, 433, 436, 446, 450, 452, 453, 459, 461, 464, 470], "comparison": [424, 436, 446, 447, 465, 467], "compat": [134, 158, 188, 191, 194, 196, 197, 198, 201, 203, 204, 205, 206, 209, 210, 215, 216, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 292, 333, 363, 403, 413, 418, 419, 420, 421, 423, 425, 435, 442, 452, 465, 469], "compens": 452, "compil": [451, 455], "complain": 453, "complaint": 453, "complement": [31, 361, 461], "complementari": 44, "complet": [75, 425, 430, 457, 459, 461, 463, 467], "complex": [13, 16, 126, 159, 307, 308, 309, 347, 385, 386, 430, 442, 446, 447, 453, 456, 457, 459, 461, 468, 471], "compli": 455, "complianc": 450, "complic": [430, 471], "compon": [69, 347, 430, 431, 453, 456, 458, 459, 460, 461, 467, 469, 471, 472], "compos": [116, 260, 452, 467], "composit": [105, 117, 118, 119, 260, 452, 472], "composite_a": 469, "composite_b": 469, "compositekernel": [117, 118, 119, 452], "compositesurrog": [253, 255, 257, 262, 266, 280, 282, 284, 286, 452, 457, 462, 463, 469], "compound": 342, "comprehens": [450, 469], "compress": 467, "comput": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 87, 97, 101, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 194, 196, 213, 215, 220, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 290, 297, 299, 305, 343, 347, 386, 418, 419, 420, 421, 423, 430, 431, 435, 436, 442, 452, 455, 456, 458, 460, 464, 466, 467, 468, 472, 473], "computation": 196, "compute_ref_point": [13, 16], "compute_scor": 427, "computedstyl": 427, "concat": [415, 416, 424, 425, 435, 436, 439, 440, 446, 447], "concentr": [169, 170, 408, 409, 410, 412, 413, 418, 423, 424, 459], "concentrati": 418, "concentration_valu": 424, "concept": [317, 430, 463, 464, 467], "concis": 452, "concret": [452, 467], "conda": 452, "condit": [34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 353, 361, 409, 415, 419, 420, 421, 430, 436, 450, 452, 455, 471, 472], "conduct": [31, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 408, 409, 410, 450, 453, 458, 471], "confid": [8, 22, 413], "config": [427, 428, 441, 448, 452, 472], "config_json": 31, "configur": [13, 16, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 85, 86, 178, 185, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 242, 244, 250, 253, 255, 257, 258, 260, 262, 266, 272, 280, 282, 284, 286, 347, 353, 392, 411, 412, 430, 437, 440, 444, 450, 451, 452, 455, 456, 457, 458, 459, 460, 464, 465, 466, 468, 470, 471, 472, 473], "confirm": 425, "conflict": [450, 453, 463], "conform": [155, 343, 464], "confront": [433, 450, 461], "conjunct": 469, "connect": [57, 353, 452, 460, 464, 470], "consequ": [410, 451, 459, 460, 465, 466, 468, 469], "consequenti": 455, "consid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 125, 138, 141, 142, 144, 152, 155, 157, 159, 184, 196, 215, 248, 353, 362, 363, 407, 430, 433, 435, 446, 447, 450, 452, 453, 457, 459, 461, 462, 463, 464, 467, 473], "consider": [215, 457], "consist": [179, 220, 347, 425, 453, 455, 462], "consol": [427, 451], "consolid": [452, 465], "consortium": 454, "conspicu": 455, "const": 427, "constant": [282, 290, 308, 435, 452, 453, 464, 466], "constitut": 455, "constrain": [452, 459, 470, 471], "constraint": [31, 34, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 80, 139, 196, 213, 215, 221, 320, 427, 428, 435, 442, 443, 444, 448, 450, 452, 454, 460, 464, 472], "constraint_1": 420, "constraint_2": 420, "constraint_3": 420, "constraints_augment": 215, "constraints_cardin": 213, "constraints_lin_eq": 213, "constraints_lin_ineq": 213, "constraints_nonlin": 213, "constru": 455, "construct": [31, 213, 215, 221, 262, 292, 407, 436, 438, 446, 447, 450, 452, 456, 459, 462, 467, 469, 472], "constructor": [203, 204, 205, 206, 215, 235, 280, 284, 286, 430, 438, 443, 444, 452, 456, 458, 461, 463, 464, 469, 472, 473], "consult": 450, "consum": [184, 423, 452], "consumpt": 460, "cont_ind": 440, "cont_indic": [439, 440], "cont_paramet": 440, "cont_recommend": [188, 440], "contact": [450, 454], "contain": [13, 16, 31, 34, 40, 41, 42, 44, 65, 68, 73, 97, 122, 125, 126, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 163, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 222, 223, 227, 242, 244, 246, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 297, 299, 305, 307, 308, 309, 317, 318, 333, 343, 347, 351, 353, 355, 361, 362, 364, 371, 377, 378, 386, 392, 404, 405, 409, 410, 424, 425, 431, 433, 440, 446, 447, 451, 452, 453, 455, 458, 459, 461, 462, 465, 466, 467, 468, 473], "content": [158, 184, 215, 246, 354, 393, 427, 452, 455, 467], "context": [75, 83, 157, 181, 183, 184, 185, 186, 194, 196, 242, 258, 260, 389, 423, 433, 438, 446, 447, 452, 458, 461, 462, 464, 467, 468, 469, 471, 473], "contextu": 471, "continu": [10, 15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 73, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 188, 196, 213, 215, 216, 221, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 413, 415, 418, 419, 420, 421, 431, 435, 436, 437, 440, 442, 448, 450, 452, 458, 460, 461, 465, 467, 468, 472], "continuous_subspac": 466, "continuouscardinalityconstraint": [63, 64, 213, 452, 472], "continuousconstraint": [37, 45, 213, 452, 459, 461], "continuouslinearconstraint": [213, 415, 416, 431, 452, 472], "continuouslinearequalityconstraint": 452, "continuouslinearinequalityconstraint": 452, "continuousnonlinearconstraint": [44, 213, 452], "continuousparamet": [151, 213, 452], "contour": 436, "contract": 455, "contrast": [221, 337, 431, 433, 457, 461, 463], "contribut": [450, 452, 455, 473], "contributor": [450, 455], "contributori": 455, "control": [13, 15, 16, 21, 158, 169, 196, 213, 221, 363, 435, 439, 450, 452, 455, 456, 459, 460, 463, 464, 465, 470, 472], "convei": 467, "conveni": [452, 466, 467, 469], "convent": [215, 347], "converg": 462, "convers": [31, 185, 427, 438, 452, 455, 462, 469, 472], "convert": [28, 123, 217, 230, 293, 324, 334, 338, 342, 349, 350, 365, 366, 367, 372, 375, 379, 382, 428, 443, 444, 452, 458, 460, 467, 468], "convert_sklearn": 427, "convert_sklearn_bayesian_ridg": 427, "convertibletofloat": [13, 16, 324], "cooki": 453, "coordin": [13, 16, 392], "copi": [157, 253, 255, 257, 262, 266, 280, 282, 284, 286, 345, 365, 424, 427, 450, 452, 455, 473], "copy_x": 427, "copyright": [450, 455], "copytoclipboard": 427, "core": [31, 213, 215, 216, 221, 248, 250, 253, 255, 257, 258, 260, 262, 266, 273, 280, 282, 284, 286, 413, 450, 452, 461, 470], "coregion": 471, "coretest": [452, 453], "corpu": 464, "correct": [31, 294, 425, 450, 452, 453, 467], "correctli": [430, 440, 452], "correl": [144, 155, 360, 464, 471], "correspond": [26, 31, 44, 122, 125, 130, 132, 157, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 234, 242, 244, 246, 253, 255, 256, 257, 262, 266, 280, 282, 284, 286, 292, 307, 313, 333, 336, 338, 341, 342, 353, 356, 357, 363, 364, 365, 366, 368, 404, 405, 407, 412, 413, 430, 433, 436, 440, 446, 447, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471], "correspondingli": 31, "corrupt": 355, "cost": [347, 409, 433, 460], "costli": [215, 218, 224, 458], "could": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 152, 349, 413, 423, 424, 430, 431, 447, 452, 457, 459, 464, 468, 470, 471], "count": [314, 424, 430, 459], "counterclaim": 455, "counterpart": [333, 466], "coupl": 425, "cours": [446, 447, 453, 467, 471], "cousin": 459, "cov": [452, 453], "cover": [337, 353, 459, 461], "coverag": [452, 453], "cp": [408, 409, 410], "craft": 468, "crash": [451, 452], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 222, 223, 238, 246, 253, 255, 257, 258, 260, 262, 266, 269, 274, 280, 282, 284, 286, 297, 299, 305, 351, 353, 356, 357, 371, 377, 378, 379, 392, 412, 423, 424, 425, 430, 431, 436, 440, 441, 448, 449, 450, 451, 452, 453, 457, 459, 460, 461, 462, 464, 467, 468, 469, 470, 472, 473], "create_example_plot": [407, 409, 424, 425, 446, 447, 452], "create_from_config": [427, 428], "create_pi_plot": 425, "creation": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 158, 218, 221, 224, 419, 421, 427, 428, 466, 467, 472], "criteria": 425, "criterion": [347, 424, 456], "critic": 452, "cross": [446, 455], "crucial": [450, 470], "csv": [408, 409, 424], "cube": 459, "cuda": 451, "cultur": [464, 471], "curran": 471, "current": [10, 31, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 248, 250, 261, 312, 382, 424, 425, 430, 456, 457, 458, 459, 460, 461, 464, 468, 470, 471, 472, 473], "curv": [307, 425, 435, 459, 470], "custom": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 137, 138, 139, 141, 142, 144, 147, 151, 152, 155, 158, 262, 294, 297, 299, 305, 333, 366, 406, 413, 417, 424, 433, 440, 448, 450, 452, 458, 459, 464, 465, 468, 471, 472, 473], "custom_blackbox": 407, "custom_conversion_funct": 427, "custom_filt": 459, "custom_funct": 418, "customari": 455, "customconstraint": 418, "customdiscreteparamet": [452, 462, 472], "customencod": 144, "customonnxsurrog": [413, 427, 452], "cycl": [184, 450, 452, 461], "cyclic": 184, "d": [13, 16, 26, 56, 126, 317, 328, 386, 392, 425, 428, 443, 444, 446, 447, 450, 455, 466, 471], "d401": 418, "damag": 455, "daniel": 454, "darmstadt": [450, 454, 460], "dashboard": 452, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 72, 77, 89, 97, 101, 125, 130, 132, 144, 152, 155, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 244, 248, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 299, 305, 314, 316, 320, 347, 353, 355, 362, 364, 381, 382, 393, 397, 404, 405, 406, 407, 412, 413, 415, 416, 418, 419, 420, 421, 424, 428, 430, 435, 436, 439, 442, 443, 444, 446, 447, 448, 449, 450, 452, 456, 457, 458, 459, 460, 462, 464, 465, 467, 468, 469, 472, 473], "data_typ": 427, "databas": [31, 435, 450, 467], "dataclass": [423, 433], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 89, 97, 101, 122, 125, 130, 132, 138, 141, 142, 144, 152, 155, 158, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 222, 223, 226, 240, 241, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 299, 305, 313, 317, 318, 342, 343, 347, 393, 404, 405, 407, 408, 412, 413, 418, 419, 420, 421, 424, 425, 427, 428, 430, 431, 435, 436, 439, 442, 446, 447, 452, 457, 458, 459, 461, 464, 472, 473], "datapoint": 452, "dataset": [184, 242, 347, 427, 468], "datatyp": 452, "date": 455, "dditiv": 462, "de": [233, 441, 450, 451, 452, 453, 458, 459, 465, 472], "deactiv": [450, 452, 460], "deal": [410, 457, 464, 468], "debug": 452, "decid": [152, 430, 433, 440, 456], "declar": [53, 57, 65, 206, 419, 453, 459], "decod": 427, "decor": [119, 290, 323, 356, 423, 452, 453, 468], "decorrel": [144, 155, 162, 443, 444, 464], "decreas": [184, 308, 435, 467, 471], "deduc": [415, 416, 439], "dedupl": 452, "deep": [347, 424], "deepcopi": 452, "deeper": 462, "deepli": 469, "def": [407, 418, 423, 424, 425, 430, 433, 436, 446, 453, 459, 468], "default": [13, 16, 42, 97, 125, 144, 155, 158, 188, 194, 196, 203, 204, 205, 206, 213, 215, 221, 233, 253, 273, 276, 347, 361, 407, 408, 410, 413, 427, 428, 435, 440, 450, 452, 453, 458, 459, 460, 462, 463, 464, 472], "default_campaign": 407, "defaultkernelfactori": [413, 418, 419, 420, 421, 435, 442], "defaultscal": 452, "defend": 455, "defer": 452, "defin": [26, 31, 41, 44, 45, 52, 147, 157, 178, 184, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 221, 242, 266, 268, 269, 294, 355, 360, 361, 377, 378, 395, 408, 409, 410, 412, 418, 419, 420, 421, 427, 428, 433, 438, 452, 453, 455, 458, 459, 461, 464, 467, 468, 470], "definit": [213, 221, 337, 431, 436, 450, 452, 455, 463, 466], "degener": [354, 371, 452], "degr": 442, "degre": 467, "degree_c": [427, 428, 442], "deliber": 455, "delici": 453, "deliveri": 464, "demand": [31, 447], "demo": 452, "demonstr": [406, 407, 408, 411, 414, 417, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 437, 441, 442, 445, 446, 447, 452, 463, 466, 467, 471], "denot": 26, "densiti": 425, "depend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 53, 57, 88, 215, 221, 242, 308, 317, 409, 413, 417, 430, 431, 438, 448, 449, 451, 452, 453, 459, 460, 461, 462, 466, 468, 469, 470, 471, 473], "dependenciesconstraint": 452, "deprec": [67, 149, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 221, 226, 263, 323, 418, 420, 421], "deprecationwarn": [418, 420, 421, 424], "depth": 466, "deriv": [203, 204, 205, 206, 221, 337, 455, 459, 466], "descend": 308, "describ": [203, 204, 205, 206, 253, 255, 257, 262, 266, 280, 282, 284, 286, 292, 413, 418, 423, 424, 431, 433, 435, 436, 453, 455, 457, 458, 459, 463, 464, 467, 468], "descript": [122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 297, 299, 305, 377, 378, 452, 453], "descriptor": [155, 343, 452, 462, 464, 471], "deseri": [231, 235, 240, 442, 451, 452, 458, 472], "deserialize_datafram": 467, "design": [0, 21, 26, 244, 347, 356, 423, 427, 430, 433, 455, 456, 459, 461, 462, 463, 465, 467], "desir": [125, 128, 357, 434, 435, 448, 450, 452, 456, 460, 462, 463, 465, 467, 470, 473], "desirabilityobject": [31, 435, 450, 452, 457, 458, 467, 469, 472], "desktop": 452, "despit": 452, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 165, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 244, 248, 253, 255, 257, 258, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 297, 299, 305, 310, 311, 361, 368, 371, 377, 378, 395, 408, 410, 415, 416, 427, 435, 440, 449, 450, 451, 452, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 471, 472], "detect": [320, 362, 451, 453], "determin": [13, 16, 31, 44, 97, 186, 221, 248, 337, 361, 375, 384, 392, 408, 430, 433, 452, 455, 460, 465], "determinist": [392, 452], "detriment": 464, "dev": [450, 452, 453], "develop": [450, 452, 464, 468], "deviat": [6, 18, 290, 362, 427, 452, 458], "df": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 122, 125, 130, 132, 158, 213, 215, 221, 226, 241, 246, 317, 318, 342, 354, 358, 359, 360, 361, 363, 365, 366, 368, 393, 407, 418, 433, 450, 459, 466, 467, 468], "df_y": 436, "dfa": [317, 318], "di": [408, 409, 410, 412, 413, 454], "diagram": [452, 454, 472], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 203, 204, 205, 206, 213, 215, 218, 221, 224, 234, 235, 236, 238, 248, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 311, 328, 331, 343, 347, 353, 371, 377, 378, 379, 395, 424, 427, 446, 447, 452], "dict_bas": [408, 409, 410, 412, 413], "dict_ligand": [408, 409, 410, 412, 413], "dict_solv": [408, 409, 410, 412, 413, 418, 419, 420, 421, 430, 459], "dictat": [122, 125, 130, 132, 196, 215, 446, 447], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 234, 236, 238, 248, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 290, 292, 297, 299, 305, 328, 331, 353, 371, 377, 378, 379, 408, 409, 410, 412, 428, 464, 468], "diff": 453, "differ": [13, 16, 55, 125, 196, 213, 215, 216, 221, 242, 250, 313, 318, 353, 355, 395, 409, 418, 423, 430, 433, 435, 436, 439, 440, 446, 447, 450, 452, 453, 455, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471], "differenti": [468, 471], "difficult": 471, "digit": 366, "dilemma": 433, "dim": [26, 415, 416, 425, 427, 439, 440, 446, 447], "dimens": [26, 392, 407, 415, 416, 425, 427, 438, 439, 446, 447, 452, 464, 466, 469, 471], "dimension": [13, 16, 126, 137, 138, 139, 141, 142, 144, 151, 152, 155, 276, 356, 392, 407, 446, 447, 452], "dimethylisoxazol": 471, "direct": [13, 16, 408, 409, 410, 412, 450, 452, 455, 461, 464, 473], "direct_aryl": [408, 409, 424], "directli": [13, 16, 337, 447, 450, 452, 459, 460, 463, 467, 469], "directori": [408, 409, 424, 440, 452], "disabl": [253, 255, 257, 262, 266, 280, 282, 284, 286, 312, 418, 420, 421, 452, 458, 460, 461], "disadvantag": 467, "disappear": 452, "disc_ind": 440, "disc_indic": [439, 440], "disc_paramet": 440, "disc_recommend": [188, 440], "discard": [8, 430], "disclaim": 455, "discourag": 458, "discret": [15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 73, 137, 138, 139, 141, 142, 144, 151, 152, 155, 188, 196, 203, 204, 205, 206, 209, 213, 215, 216, 220, 221, 250, 391, 412, 415, 421, 424, 425, 427, 435, 437, 440, 442, 447, 448, 450, 452, 456, 461, 462, 465, 467, 468, 472, 473], "discrete_param": [425, 446, 447], "discrete_spac": [415, 416, 440], "discrete_subspac": 466, "discretecardinalityconstraint": [452, 472], "discreteconstraint": [31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 221, 452, 459, 461], "discretecust": 418, "discretecustomconstraint": [418, 452, 472], "discretedep": 419, "discretedependenciesconstraint": [57, 65, 419, 430, 472], "discreteexcl": 420, "discreteexcludeconstraint": [420, 452, 461, 472], "discretelinkedparametersconstraint": [452, 472], "discretenolabelduplicatesconstraint": [57, 430, 452, 472], "discreteparamet": [152, 221, 222, 223, 452], "discretepermutationinvarianceconstraint": [430, 472], "discreteprod": 421, "discreteproductconstraint": [421, 452, 472], "discretesamplingmethod": [15, 196, 393, 452, 456], "discretesumc": 421, "discretesumconstraint": [415, 421, 430, 452, 472], "discuss": [435, 455, 459, 466, 468], "disjoint": 221, "disk": [452, 472], "displai": [366, 424, 455, 462], "distanc": [152, 208, 347, 392], "distinct": [423, 458, 465], "distinguish": [354, 430, 452, 459, 464, 471], "distribut": [31, 165, 168, 253, 255, 257, 262, 266, 280, 282, 284, 286, 430, 435, 440, 450, 452, 455, 456, 457, 469], "distutil": 338, "div": 427, "divers": 469, "divid": 431, "divis": 386, "dll": 451, "dmac": [408, 409, 410, 412, 413], "dmf": 459, "do": [63, 215, 221, 261, 423, 427, 428, 430, 433, 440, 442, 443, 444, 446, 449, 450, 451, 455, 457, 459, 460, 461, 462, 464, 465, 467, 471, 472, 473], "do_baybe_work": 460, "doc": [102, 165, 323, 450, 452], "doc101": 453, "doc103": 453, "docstr": 452, "doctest": 452, "document": [31, 382, 427, 450, 452, 453, 454, 455, 458, 462, 468], "doe": [30, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 97, 157, 196, 242, 244, 246, 248, 253, 255, 257, 261, 262, 266, 280, 282, 284, 286, 294, 333, 342, 362, 382, 410, 413, 424, 427, 428, 430, 443, 444, 446, 447, 452, 453, 455, 457, 459, 463, 465, 468, 469, 471, 473], "doi": [278, 360], "domain": [253, 255, 257, 262, 266, 280, 282, 284, 286, 407, 450, 452, 466, 468], "don": [449, 461], "done": [31, 361, 362, 410, 412, 418, 419, 420, 421, 427, 428, 435, 442, 452, 456, 458, 459, 460, 461], "doubl": [382, 453, 460], "down": [467, 473], "downsid": 185, "draft": 452, "dramat": 471, "drastic": 464, "draw": [10, 114, 213, 431, 433, 438], "draw_arm": 433, "drawback": 463, "drawn": [21, 196], "drive": [425, 471], "driven": [353, 456], "driver": 451, "drop": [358, 359, 360, 364, 424, 452, 457, 459], "drug": 457, "dry_run": 31, "dtype": [13, 16, 126, 159, 307, 308, 309, 347, 365, 385, 386, 452], "due": [157, 314, 447, 450, 452, 456, 459, 460, 464, 465, 466, 467, 470], "duplic": [31, 57, 164, 320, 328, 452, 459], "durat": [347, 457], "dure": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 215, 221, 242, 331, 392, 430, 433, 446, 447, 450, 451, 452, 453, 454, 458, 459, 460, 461, 462, 466, 467, 468, 469], "dynam": [433, 452, 467, 472], "d\u00fcbendorf": 454, "e": [8, 21, 26, 31, 34, 44, 53, 55, 56, 73, 100, 144, 158, 159, 186, 215, 221, 242, 314, 320, 326, 327, 343, 347, 353, 361, 362, 371, 400, 408, 409, 410, 424, 428, 430, 431, 433, 450, 451, 452, 453, 456, 457, 459, 460, 462, 464, 465, 466, 467, 468, 471, 473], "e3fp": 149, "e3fpfingerprint": 149, "each": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 125, 130, 132, 158, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 215, 244, 246, 248, 250, 253, 255, 257, 261, 262, 266, 280, 282, 284, 286, 318, 343, 347, 353, 354, 362, 407, 409, 410, 413, 425, 430, 431, 433, 435, 436, 440, 446, 447, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473], "eagerli": 452, "earli": [424, 452], "earlier": [31, 449, 451], "earn": 433, "earned_reward": 433, "easi": [342, 453, 467], "easier": [453, 457, 473], "easiest": [450, 453], "easili": [424, 450, 453, 458, 461, 464, 466, 467, 471], "ecfp": [149, 409, 452, 464], "ecfpfingerprint": 149, "ecosystem": 467, "edbo": [276, 278, 360, 452], "edbokernelfactori": [276, 452], "edg": 157, "edit": [450, 453], "editor": 471, "editori": 455, "edwin": 471, "effect": [55, 181, 183, 184, 185, 186, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 423, 424, 433, 447, 452, 456, 459, 464, 465, 468, 471, 473], "effici": [221, 347, 430, 450, 452, 466], "effortlessli": 468, "ei": [3, 413], "either": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 216, 244, 250, 266, 290, 362, 409, 420, 435, 440, 450, 455, 463, 464, 465, 466, 468, 469], "elabor": 455, "elaps": 423, "elapsedtimeprint": 423, "electron": [454, 455], "electroshap": 149, "electroshapefingerprint": 149, "eleg": [446, 467], "element": [40, 41, 42, 52, 159, 250, 320, 330, 336, 347, 351, 384, 385, 427, 430, 446, 447, 452, 459, 468], "elev": 425, "elif": [439, 440], "elimin": [453, 456], "els": [337, 338, 407, 408, 409, 410, 415, 416, 418, 419, 421, 424, 425, 433, 436, 439, 440, 446, 447], "elsewher": 427, "emd": 454, "emdgroup": [310, 450], "emelin": 454, "emerg": 458, "empir": 433, "emploi": [31, 433, 465], "employe": [450, 460], "empow": 469, "empti": [101, 213, 215, 221, 228, 318, 333, 342, 361, 366, 404, 405, 430, 435, 440, 442, 452, 466], "empty_encod": [215, 221], "emptysearchspaceerror": 228, "emul": [21, 451, 452], "en": [102, 165], "enabl": [185, 248, 312, 313, 408, 409, 410, 430, 446, 450, 451, 452, 457, 458, 459, 460, 461, 462, 463, 465, 467, 468, 470, 471], "encapsul": 347, "encod": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 215, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 341, 343, 408, 409, 410, 412, 413, 418, 419, 420, 421, 424, 428, 430, 433, 435, 442, 443, 444, 446, 447, 450, 452, 459, 466, 467, 471], "encompass": 458, "encount": [157, 181, 183, 184, 185, 186, 392, 451, 452, 453, 463], "end": [0, 309, 371, 424, 428, 433, 435, 442, 455, 459, 467], "endeavor": 456, "endpoint": [452, 460], "enforc": [383, 398, 452, 453, 464], "engin": [451, 465, 467, 468, 473], "enhanc": [26, 450], "enlarg": 464, "enough": [213, 467], "ensembl": 288, "ensur": [157, 158, 365, 408, 409, 410, 430, 431, 450, 452, 459, 467, 468], "enter": [79, 221, 466], "entir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 313, 371, 393, 452, 453, 456, 458, 460, 473], "entiti": 455, "entri": [31, 38, 41, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 236, 253, 255, 257, 262, 266, 280, 282, 284, 286, 318, 353, 362, 393, 410, 418, 419, 420, 421, 430, 449, 452, 459, 460, 461, 462, 470, 473], "enum": [128, 146, 147, 148, 149, 208, 216, 273, 302, 303, 322, 391, 452, 467], "enumer": [127, 145, 301, 425, 446, 447, 463], "env": [452, 453], "envar_nam": 460, "environ": [248, 312, 383, 398, 407, 408, 409, 410, 416, 418, 419, 421, 424, 425, 427, 433, 436, 446, 447, 450, 451, 452, 453, 472], "envvar": 310, "envvar_nam": 460, "eq": [418, 430], "equal": [45, 125, 186, 213, 433, 435, 442, 452, 459, 463, 466, 467, 470], "equat": [45, 459, 468], "equidist": [392, 452, 464], "equip": 459, "equival": [21, 34, 57, 416, 438, 456, 459, 468], "erg": 149, "ergfingerprint": 149, "err": 427, "errno": [408, 409, 424], "erron": 452, "error": [184, 244, 246, 248, 263, 331, 364, 386, 410, 427, 428, 433, 451, 452, 457, 459, 463, 465], "esian": 450, "especi": [453, 457], "essenti": [458, 465], "establish": [424, 446, 447, 471], "estat": 149, "estatefingerprint": 149, "ester": [408, 409, 410, 412, 413], "estim": [215, 220, 221, 253, 347, 433, 452, 469, 472], "estimate_product_space_s": [215, 221, 473], "estimated_win_r": 433, "estimation_bia": 433, "estimation_vari": 433, "et": [409, 450, 464], "etc": [40, 41, 42, 139, 215, 297, 471], "ethanol": [430, 459], "euclidean": [347, 392], "eval_during_augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_cr": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_model": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "evalu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 194, 196, 288, 289, 338, 439, 440, 452, 458, 460, 465, 468, 471], "even": [186, 290, 359, 446, 447, 455, 457, 458, 460, 464, 468, 469, 471, 473], "event": [31, 313, 424, 455], "everi": [347, 457, 473], "everyth": [453, 459], "evolv": [425, 453], "ex": 462, "exabyt": 473, "exact": [31, 362, 423, 451, 452, 459, 463, 464, 469], "exactexplain": [95, 98, 462], "exactli": [13, 16, 44, 122, 125, 130, 132, 215, 430, 452, 457, 458, 466, 467], "examin": 458, "exampl": [13, 16, 157, 158, 246, 317, 318, 328, 337, 347, 361, 406, 407, 411, 414, 417, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437, 438, 441, 445, 446, 447, 451, 452, 453, 454, 455, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "example_input_nam": 427, "exceed": 424, "exceedingli": 468, "except": [31, 333, 342, 350, 369, 370, 408, 409, 410, 424, 428, 443, 444, 450, 451, 452, 455, 461, 469], "excepthook": 451, "exceptiongroup": [63, 452], "excess": 473, "exclud": [31, 56, 358, 418, 419, 420, 421, 435, 442, 452, 455, 459, 472], "exclude_list": 360, "exclus": [54, 417, 448, 452, 455, 459, 468, 472], "execut": [31, 67, 244, 333, 407, 409, 451, 452, 453, 455, 460, 467, 468, 471], "exemplari": 458, "exercis": 455, "exhaust": [184, 196, 462, 465], "exist": [31, 119, 215, 313, 323, 333, 430, 451, 452, 453, 456, 458, 459, 461, 467, 469, 471], "exp_rep": [221, 418, 419, 420, 421, 430, 466], "exp_rep_byt": [220, 473], "exp_rep_human_read": [220, 473], "exp_rep_shap": [220, 473], "expect": [3, 4, 9, 11, 13, 14, 16, 17, 52, 75, 83, 258, 260, 268, 333, 356, 365, 413, 419, 425, 427, 430, 431, 433, 444, 452, 453, 458, 459, 462, 463, 464, 467, 468, 470, 473], "expens": [10, 196, 415, 468], "experi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 242, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 408, 409, 410, 412, 413, 439, 440, 452, 456, 458, 459, 461, 463, 464, 465, 470, 471, 472], "experiment": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 101, 122, 125, 130, 132, 138, 141, 142, 144, 152, 155, 178, 181, 182, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 215, 220, 221, 242, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 297, 299, 305, 353, 355, 418, 419, 420, 421, 425, 435, 442, 450, 452, 456, 457, 459, 461, 463, 464, 466, 467, 468, 470, 471, 472, 473], "experimentalist": 449, "expert": 347, "explain": [72, 96, 97, 98, 100, 101, 425, 452, 454, 469, 472], "explain_target": [97, 452], "explainer_cl": [97, 101, 462], "explan": [97, 101, 452, 458, 462, 469], "explanation_index": [97, 462], "explicit": [158, 185, 423, 424, 428, 430, 438, 443, 444, 452, 453, 463, 467, 469, 471, 472], "explicitli": [213, 221, 423, 440, 447, 455, 461, 466, 471], "exploit": [8, 21, 433, 452], "explor": [8, 31, 433, 456, 465, 466, 471], "exploratori": 456, "exponenti": 221, "expos": [31, 423, 452], "exposur": 452, "expr": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "express": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 450, 452, 455, 459], "extend": [157, 461, 464, 471], "extens": [452, 465], "extra": [347, 409, 450, 452], "extract": [31, 181, 183, 184, 185, 186, 363, 425, 446, 462, 472], "extract_pi": 425, "f": [338, 347, 407, 408, 409, 410, 415, 416, 418, 419, 420, 421, 423, 424, 425, 430, 431, 435, 438, 439, 440, 446, 447, 473], "f1": 468, "f2": 468, "fa": 427, "fabian": 454, "face": [253, 255, 257, 262, 266, 280, 282, 284, 286, 431, 433], "facilit": 465, "fact": [21, 425, 430, 449, 459, 463], "factor": [13, 16, 450, 458, 459, 473], "factori": [158, 213, 266, 267, 268, 269, 270, 276, 278, 329, 413, 418, 419, 420, 421, 435, 442, 452], "fail": [427, 440, 444, 451, 452, 469], "failur": [299, 452, 455], "failure_valu": 299, "fairli": 463, "fake": [246, 353, 357, 412, 413, 427, 428, 435, 452, 457, 468, 472], "fall": [157, 186, 424, 458, 470], "fallback": [221, 248, 373, 427, 452, 466], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 97, 101, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 183, 184, 185, 186, 213, 215, 221, 226, 253, 255, 257, 262, 266, 280, 282, 284, 286, 299, 308, 326, 327, 331, 337, 338, 351, 356, 361, 363, 364, 368, 404, 413, 418, 419, 420, 421, 427, 435, 442, 443, 444, 450, 452, 460], "falsi": 460, "famili": 459, "familiar": [408, 409, 410, 413, 415, 416, 418, 419, 420, 421, 427, 428, 435, 439, 440, 442], "fang": 454, "fantasi": 10, "far": 458, "farthest": [208, 209, 391, 392, 413, 450, 452, 454, 456, 465], "farthest_point_sampl": [209, 452], "fashion": [307, 309], "fast": [347, 418, 420, 421, 457, 466, 470], "faster": [221, 347, 457], "fault": 92, "faulti": 451, "favicon": 452, "favor": 452, "fc": [408, 409, 410], "feasibl": [76, 458, 462], "featur": [97, 114, 155, 360, 450, 451, 452, 453, 459, 462, 469, 471], "fed": [450, 462], "feder": 454, "fee": 455, "feed": [347, 436, 449, 450, 461, 471], "feedback": 454, "feel": 424, "few": [407, 433, 452, 453, 456, 464, 467, 469, 471, 473], "field": [235, 350, 351, 452, 471, 472], "fifti": 455, "fig": [425, 436], "figsiz": 436, "figur": 425, "file": [408, 409, 410, 424, 427, 428, 440, 450, 452, 455, 460, 467, 471], "filenotfounderror": [408, 409, 410, 424], "fill": [31, 246, 425], "filler": 459, "filter": [31, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 215, 221, 358, 361, 418, 430, 452, 459, 461, 466, 471, 473], "filter_attribut": 452, "filter_df": [31, 452], "filterwarn": 424, "final": [407, 409, 412, 424, 430, 447], "find": [215, 331, 385, 450, 456, 458, 459, 463, 471], "fine": [428, 442, 443, 444, 450], "finer": [158, 450], "fingerprint": [149, 155, 341, 343, 450, 452, 454, 464], "finish": 457, "finit": [184, 242, 250, 370, 400, 433, 464, 468], "first": [208, 215, 248, 384, 392, 407, 409, 412, 413, 418, 423, 424, 427, 428, 430, 435, 436, 440, 444, 446, 447, 450, 451, 452, 458, 459, 463, 464, 465, 466, 471, 473], "fit": [31, 206, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 347, 393, 395, 408, 409, 410, 418, 419, 420, 421, 427, 435, 442, 452, 455, 457, 459, 464, 469], "fit_gpytorch_ml": 452, "fit_gpytorch_mll_torch": 452, "fit_intercept": 427, "fit_param": 347, "fit_predict": 347, "fit_transform": 347, "fitnr": [31, 435], "fitzner": [450, 454], "fix": [242, 269, 424, 425, 430, 433, 436, 439, 440, 453, 458, 464, 468, 471, 473], "flag": [26, 31, 53, 97, 101, 122, 125, 130, 132, 196, 215, 216, 221, 356, 363, 449, 452, 458, 460, 461, 462, 465], "flake8": 452, "flexibl": [423, 438, 452, 467, 468], "flexibli": [463, 465], "float": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 42, 44, 45, 47, 48, 108, 109, 110, 111, 112, 113, 114, 115, 119, 125, 126, 144, 151, 152, 155, 159, 162, 163, 169, 170, 171, 172, 173, 174, 175, 194, 196, 220, 221, 244, 248, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 290, 299, 300, 307, 308, 309, 314, 324, 347, 349, 353, 354, 355, 360, 371, 375, 381, 382, 384, 385, 386, 397, 400, 401, 402, 423, 425, 427, 433, 435, 452, 453, 457, 458, 472], "float64": [397, 436], "floattensortyp": 427, "fly": [185, 467, 469], "fn": 323, "focu": 458, "focus": [132, 436, 440, 450], "folder": [409, 450, 453, 460, 469], "follow": [159, 181, 183, 184, 185, 186, 215, 244, 246, 248, 347, 408, 409, 410, 413, 415, 416, 418, 419, 420, 421, 423, 424, 428, 433, 435, 440, 443, 444, 446, 447, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471], "footprint": [10, 215], "forbid": 403, "forc": [97, 99, 157, 196, 452, 453, 462, 465], "foreach": 427, "forest": [285, 286], "forgiv": 470, "fork": 453, "form": [221, 242, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 347, 353, 449, 450, 455, 456, 458, 463, 464, 465, 466, 467, 468, 473], "formal": [431, 449], "format": [45, 311, 347, 366, 372, 375, 427, 428, 442, 443, 450, 451, 452, 453, 458, 460, 467, 468], "format_except": 451, "former": [430, 452], "formul": [457, 471], "formula": 430, "forrest": 452, "found": [90, 158, 213, 221, 331, 341, 382, 385, 424, 430, 435, 450, 451, 453, 458, 459, 465, 471, 472], "foundat": 465, "four": 430, "fourier": 114, "fourth": 459, "fp": [391, 452, 456], "fp_size": [149, 464], "fpsiniti": 209, "fpsrecommend": [413, 427, 428, 442, 443, 444, 450, 452, 457, 465], "frac": [447, 463], "frac1": 419, "fraction": [15, 109, 349, 424, 456, 459, 460], "fraction1": 419, "fraction_1": 459, "fraction_2": 459, "fraction_3": 459, "fractur": 459, "frame": [355, 462, 473], "frame1": 419, "frame2": 419, "frame_1": 459, "frame_2": 459, "framea": 419, "framea_a": 419, "frameb": 419, "framework": [458, 464], "free": [453, 455, 460], "freedom": 467, "freeli": 430, "frequenc": 114, "frequent": 433, "fresh": 424, "frictionless": 467, "friendli": 452, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 149, 151, 152, 155, 157, 158, 165, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 238, 246, 248, 250, 253, 255, 257, 260, 262, 266, 269, 274, 278, 280, 282, 284, 286, 290, 297, 299, 305, 308, 309, 333, 337, 338, 342, 345, 347, 355, 356, 358, 360, 371, 377, 378, 386, 392, 393, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 431, 433, 435, 436, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473], "from_bound": [213, 452, 466], "from_campaign": [97, 462], "from_config": [31, 443, 444, 458], "from_datafram": [213, 215, 221, 452, 461, 466, 467, 473], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 371, 377, 378, 427], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 371, 377, 378, 427, 428, 442, 458, 467], "from_paramet": [213, 215, 221, 452], "from_preset": 266, "from_product": [213, 215, 221, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 431, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 450, 452, 459, 461, 466, 467, 468], "from_recommend": [97, 462], "from_record": [467, 468], "from_repl": [260, 469], "from_simplex": [221, 430, 452, 461, 466, 473], "from_surrog": [97, 462], "front": 463, "frontier": 436, "frozenset": [44, 213, 430], "fsspec": 452, "fulfil": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 424, 430, 431], "full": [26, 213, 382, 406, 448, 452, 458, 461, 462, 464, 471, 472], "full_factori": 213, "full_lik": 425, "full_lookup": [408, 409, 410], "fulli": [430, 450, 452, 460, 461, 468], "fullparamnam": 427, "fulltest": 453, "func": [347, 453], "func_nam": 446, "funci": 452, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 39, 45, 46, 52, 60, 62, 70, 82, 92, 94, 97, 113, 121, 124, 129, 131, 133, 156, 157, 161, 194, 196, 197, 214, 219, 225, 229, 230, 238, 239, 242, 243, 245, 247, 248, 249, 254, 261, 267, 272, 287, 291, 296, 303, 306, 307, 308, 309, 310, 313, 314, 316, 319, 335, 339, 348, 352, 355, 357, 362, 363, 366, 369, 374, 376, 380, 387, 390, 399, 412, 418, 419, 420, 421, 423, 425, 427, 430, 433, 436, 442, 446, 447, 450, 451, 452, 456, 459, 460, 461, 463, 465, 466, 468, 469, 470, 471, 472, 473], "function_nam": [446, 447], "functionalgroup": 149, "functionalgroupsfingerprint": 149, "fundament": [464, 467], "furo": 452, "further": [13, 16, 362, 430, 431, 442, 450, 457, 461, 465, 466, 469, 471, 472], "furthermor": [435, 457], "furyl": [408, 409, 410], "futur": [57, 215, 261, 418, 420, 421, 424, 446, 462, 470], "fuzzi": 313, "fuzzy_row_match": [313, 452], "g": [53, 55, 56, 73, 100, 144, 158, 215, 221, 320, 343, 362, 433, 450, 451, 452, 453, 456, 457, 459, 460, 462, 464, 465, 466, 468, 473], "g1": 431, "g2": 431, "g3": 431, "gain": [221, 458, 462], "gamma": 170, "gammaprior": 452, "garbag": 452, "gather": [186, 446, 447, 456, 471], "gaussian": [102, 203, 255, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 307, 413, 435, 452, 459, 465, 471], "gaussian_kd": 425, "gaussian_process": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 266, 268, 269, 273, 276, 278, 413, 452], "gaussianmixtureclusteringrecommend": 465, "gaussianprocesspreset": [266, 274], "gaussianprocesssurrog": [274, 413, 418, 419, 420, 421, 425, 435, 442, 443, 444, 452, 469], "gcf": [408, 410], "ge": 416, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 148, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 253, 255, 257, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 297, 299, 305, 311, 337, 343, 347, 354, 371, 376, 377, 378, 387, 395, 407, 413, 423, 430, 436, 449, 450, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 467, 468, 469, 470, 471, 472, 473], "geom_mean": [125, 128, 435, 463], "geometr": [128, 386, 435, 463], "germani": [450, 454, 460], "get": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 194, 196, 213, 266, 347, 353, 413, 424, 427, 430, 439, 440, 449, 450, 452, 457, 472, 473], "get_absolute_threshold": [44, 452], "get_acquisition_funct": [31, 194, 196, 452], "get_candid": [221, 424, 425], "get_cmap": 425, "get_comp_rep_parameter_indic": [215, 452], "get_current_recommend": [181, 183, 184, 185, 186, 452], "get_integration_point": 15, "get_invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_invalid_polar": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_lin": 424, "get_metadata_rout": 347, "get_next_recommend": [181, 183, 184, 185, 186, 452], "get_non_meta_recommend": [181, 183, 184, 185, 186, 452], "get_param": 347, "get_parameters_by_nam": [213, 215, 221], "get_parameters_from_datafram": [213, 221], "get_subclass": 413, "get_surrog": [31, 97, 194, 196, 452, 462, 469], "get_transform_object": [368, 452], "get_transform_paramet": 452, "get_valid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 452], "getawai": 149, "getawayfingerprint": 149, "getcomputedstyl": 427, "ghosecrippen": 149, "ghosecrippenfingerprint": 149, "git": [450, 453], "github": [278, 310, 334, 360, 427, 452, 453, 454], "give": [347, 427, 428, 430, 447, 455, 458, 459, 463, 467], "given": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 40, 41, 42, 44, 65, 90, 97, 100, 101, 122, 125, 130, 132, 134, 155, 157, 158, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 227, 242, 246, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 290, 302, 314, 318, 326, 327, 331, 332, 333, 336, 337, 340, 341, 349, 351, 353, 356, 363, 371, 372, 384, 386, 392, 395, 418, 419, 420, 421, 424, 430, 433, 435, 440, 446, 447, 452, 457, 458, 466, 468, 469], "glass_transition_tempc": 464, "global": [15, 388, 452, 472, 473], "gmean": 386, "gmm": 203, "go": [317, 430, 450], "goal": [407, 433, 463, 471], "goe": 469, "good": [353, 424, 435, 458, 460, 470], "good_interv": 353, "good_reference_valu": 353, "goodwil": 455, "googl": [452, 453], "govern": 450, "gp": [253, 255, 257, 262, 266, 280, 282, 284, 286, 452], "gpytorch": [102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 165, 167, 169, 170, 171, 172, 173, 174, 175, 452], "grab": 449, "gradient": [10, 196, 284, 452, 460, 465], "grant": [452, 455], "granular": [428, 442, 443, 444, 450], "granularity_coar": 442, "granularity_fin": 442, "great": [433, 467], "greater": [186, 196], "greatli": 453, "greedi": [196, 347, 452, 465], "green": 427, "grid": [436, 446, 447], "grid_d": [446, 447], "grossli": 455, "ground": 452, "group": [88, 196, 318, 328, 395, 431, 450, 452, 458, 462], "groupbi": [248, 250], "grow": 473, "gt": [421, 430], "gu16": 464, "guarante": [452, 459, 460, 465], "guid": [347, 412, 450, 451, 452, 453, 456, 458, 461, 463, 466, 468, 471], "guidelin": [452, 453, 456], "h": 347, "ha": [31, 53, 76, 77, 81, 82, 97, 184, 213, 215, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 317, 331, 333, 337, 354, 365, 392, 393, 409, 413, 418, 419, 420, 421, 430, 435, 440, 442, 450, 452, 453, 455, 457, 458, 459, 462, 464, 466, 467, 468, 470, 471], "had": [242, 459, 464, 468], "half": [152, 171, 172, 371, 440, 457], "halfcauchyprior": 452, "halfnormalprior": 452, "hamster": 471, "hand": [45, 155, 248, 431, 433, 436, 446, 447, 450, 458, 467, 469], "handi": 459, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 97, 130, 139, 244, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 364, 369, 418, 419, 433, 435, 452, 458, 463, 473], "happen": [89, 184, 435, 440, 447, 451, 452, 453, 466, 467, 471], "happili": 463, "hard": [452, 471, 473], "hardcod": 452, "harmless": 455, "hartmann": [425, 446, 447], "hasattr": [415, 416, 439, 440], "hash": [311, 450, 460, 464], "hashabledict": 452, "have": [26, 31, 38, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 122, 125, 130, 132, 155, 157, 206, 215, 242, 261, 294, 318, 328, 331, 347, 353, 362, 363, 382, 408, 409, 412, 413, 418, 419, 423, 425, 430, 431, 433, 435, 439, 440, 446, 447, 450, 451, 452, 453, 455, 456, 457, 458, 459, 461, 463, 464, 465, 467, 468, 469, 471, 473], "head": 452, "header": 351, "heart": 471, "heatmap": [97, 99], "help": [433, 467, 468, 471], "helper": [423, 425, 427, 430, 467], "henc": [342, 430, 433, 442, 457, 459, 464, 473], "here": [56, 382, 408, 410, 412, 415, 416, 423, 424, 428, 430, 431, 439, 440, 442, 446, 447, 449, 450, 451, 457, 459, 461, 463, 464, 465, 466, 467, 468, 470, 471], "herebi": 455, "herein": [455, 458], "heurist": [196, 347], "hierarch": 467, "hierarchi": [90, 452, 453, 458, 467], "high": [276, 407, 433, 452, 453, 456, 458, 459, 464, 467], "higher": [155, 433, 451, 459, 462, 465], "highest": [456, 467], "highlight": 471, "hint": 453, "histogram": 314, "histor": 464, "histori": 453, "hoc": 463, "hold": [44, 328, 455, 467], "home": [418, 420, 421], "homepag": [450, 452], "hood": 464, "hook": [49, 221, 230, 234, 333, 448, 451, 452, 453], "hopp": [450, 454], "host": [450, 452, 460], "hostnam": [311, 460], "hot": [146, 409, 433, 450, 452, 464], "how": [54, 244, 246, 347, 362, 392, 407, 408, 410, 411, 412, 413, 414, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 440, 442, 443, 444, 447, 450, 458, 459, 460, 463, 468, 469, 470, 471, 472], "howev": [158, 221, 261, 333, 423, 430, 433, 439, 440, 449, 451, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 471, 473], "hrovatin": 454, "html": [102, 165, 310, 323, 382, 427, 452], "http": [102, 165, 278, 310, 323, 334, 360, 382, 450, 452, 455, 471], "hue": [407, 408, 409, 410, 424, 446, 447], "human": [220, 375, 442, 452, 454, 467], "hybrid": [25, 26, 73, 187, 188, 196, 210, 215, 216, 413, 414, 418, 419, 420, 421, 435, 437, 442, 448, 450, 452, 465, 466], "hybrid_recommend": 440, "hybrid_sampl": [196, 465], "hyperrectangl": [213, 466], "hypervolum": [13, 16], "hypothesi": [450, 452, 453], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 72, 73, 79, 81, 82, 84, 86, 97, 100, 101, 116, 119, 126, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 228, 242, 244, 246, 248, 250, 253, 255, 257, 258, 260, 261, 262, 266, 276, 280, 282, 284, 286, 290, 294, 302, 307, 308, 309, 312, 313, 314, 318, 321, 322, 323, 326, 327, 331, 333, 334, 336, 337, 338, 341, 342, 347, 351, 353, 354, 355, 356, 357, 361, 362, 363, 366, 370, 371, 379, 382, 384, 385, 392, 393, 400, 404, 405, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 431, 433, 435, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "ibm": 347, "icon": 427, "ideal": [457, 459, 468], "ident": [158, 317, 318, 461, 464, 467, 471], "identif": 433, "identifi": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 248, 328, 342, 362, 363, 424, 452, 459, 462, 463, 464, 466, 467, 468, 471], "idx_offset": 45, "ignor": [122, 125, 130, 132, 184, 196, 215, 244, 246, 248, 331, 347, 360, 410, 424, 440, 452, 459, 467, 473], "ignore_exampl": 452, "ignore_list": 359, "ii": 455, "iii": 455, "illustr": [436, 438, 461], "iloc": 457, "imag": [433, 452], "imagin": [430, 433], "immedi": [423, 458], "immut": 452, "impact": [409, 447, 460], "imperfect": 355, "implement": [21, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 126, 178, 189, 250, 258, 335, 418, 424, 430, 446, 452, 453, 454, 456, 462, 465, 466, 468, 471], "impli": [430, 450, 455, 459, 464], "implicitli": 467, "import": [13, 16, 88, 97, 125, 246, 347, 424, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "impos": [430, 431, 459], "imposs": [450, 460, 461, 467], "improv": [3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 413, 416, 422, 424, 448, 450, 452, 455, 460], "imput": [244, 246, 406, 410, 448, 450], "impute_mod": [244, 246, 248, 410, 468], "inabl": [450, 455], "inaccuraci": 450, "inact": [44, 157, 159, 196, 213, 452], "inactive_parameter_combin": [44, 213, 452], "inc": 471, "incident": 455, "includ": [63, 65, 122, 125, 130, 132, 157, 186, 244, 326, 327, 359, 408, 419, 428, 430, 443, 444, 447, 452, 453, 455, 456, 457, 459, 461, 473], "inclus": 455, "incom": 467, "incompat": [69, 70, 71, 72, 73, 74, 101, 262, 420, 459], "incompatibilityerror": 31, "incompatibleacquisitionfunctionerror": 457, "incompatibleexplainererror": 462, "incomplet": [452, 457], "inconsist": 452, "incorpor": [455, 457, 469, 473], "incorrect": 452, "incorrectli": 452, "increas": [10, 184, 248, 308, 309, 435, 446, 447, 452, 456, 464, 471], "increment": 221, "incur": 455, "inde": 458, "indefinit": [184, 244], "indemn": 455, "indemnifi": 455, "indent": [351, 452], "independ": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 188, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 427, 452, 463, 465, 468, 469], "independentgaussiansurrog": [262, 280, 282, 284, 452], "index": [31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 215, 248, 260, 317, 318, 347, 361, 362, 427, 428, 435, 440, 442, 452, 457, 462, 464, 466, 468], "indexkernel": 452, "indic": [13, 16, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 92, 100, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 181, 183, 184, 185, 186, 215, 253, 255, 257, 262, 266, 280, 282, 284, 286, 317, 318, 321, 322, 347, 356, 392, 430, 440, 452, 455, 457, 461, 465, 468, 469], "indirect": [326, 327, 455], "indistinguish": 430, "individu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 53, 54, 117, 118, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 244, 260, 366, 424, 431, 436, 455, 458, 461, 463, 465, 471, 472], "induc": [44, 433], "industri": 471, "ineffici": 221, "inequ": [45, 213, 466], "inertia_": 347, "inf": [8, 418, 419, 420, 421, 442], "infeas": [459, 461], "infer": [158, 446, 447, 452, 466], "infin": 163, "infinit": [184, 185, 329, 370, 400, 401, 452, 464], "influenti": 471, "info": [314, 452], "inform": [26, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 297, 299, 305, 347, 363, 377, 378, 408, 409, 410, 425, 430, 439, 440, 447, 450, 452, 453, 455, 457, 460, 461, 464, 466, 471, 472], "infring": 455, "ingest": [221, 244, 452, 464, 465], "ingredi": [430, 431, 459], "inher": [21, 157, 253, 255, 257, 262, 266, 280, 282, 284, 286, 430, 469], "inherit": 453, "init": 347, "initi": [108, 109, 110, 111, 112, 113, 114, 115, 119, 186, 188, 196, 203, 204, 205, 206, 208, 209, 221, 244, 248, 313, 347, 392, 406, 418, 419, 420, 421, 424, 425, 435, 442, 447, 448, 452, 454, 457, 458, 460, 464, 465, 467, 468, 471], "initial_data": [244, 248, 408, 447, 468], "initial_recommend": [186, 413, 424, 425, 427, 428, 433, 442, 443, 444, 450, 465], "initial_recommender_cl": 452, "initial_strategi": 452, "initial_typ": 427, "initialis": 347, "inject": 467, "inner": [179, 361, 462, 465, 467], "innerhtml": 427, "inplac": [409, 446, 447, 473], "input": [40, 41, 42, 77, 126, 138, 141, 142, 144, 152, 155, 213, 215, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 297, 299, 305, 307, 328, 347, 349, 350, 355, 356, 357, 361, 364, 365, 371, 373, 379, 384, 392, 404, 405, 407, 427, 435, 436, 446, 447, 452, 463, 467, 468, 471], "input_dim": 427, "input_label": 356, "inputtransform": 395, "insid": [424, 427, 428, 451, 467], "insight": [97, 424, 450, 452, 454, 472], "inspect": [337, 423, 430], "instabl": [452, 459], "instal": [452, 453, 460, 462, 464, 473], "instanc": [40, 41, 42, 53, 56, 97, 186, 215, 347, 353, 379, 419, 424, 430, 431, 450, 451, 453, 457, 458, 459, 460, 462, 464, 466, 467, 468, 473], "instanti": [424, 458], "instead": [181, 183, 184, 185, 186, 313, 342, 356, 364, 418, 420, 421, 450, 451, 452, 458, 459, 463, 464, 467, 468, 470, 471, 473], "institut": [454, 455], "instruct": [450, 452, 470, 472], "instrument_nam": 314, "int": [10, 13, 15, 16, 21, 31, 34, 44, 45, 51, 97, 104, 105, 106, 109, 111, 112, 113, 114, 115, 122, 125, 126, 130, 132, 146, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 244, 248, 250, 299, 300, 307, 308, 309, 314, 347, 357, 366, 385, 386, 388, 389, 392, 393, 395, 418, 420, 421, 430, 433, 435, 447, 452, 453, 464], "int64": 347, "integ": [34, 146, 215, 248, 440, 452, 453, 464], "integr": [15, 452, 453, 456, 458], "intend": [412, 423, 446, 453, 465], "intens": 464, "intention": 455, "interact": [30, 31, 412, 450, 451, 458, 461, 467], "interchang": 430, "interconnect": 458, "interest": [458, 462, 463, 464, 473], "interfac": [178, 258, 268, 423, 425, 452, 455, 458, 461, 462, 472], "intermedi": [206, 392], "intern": [31, 45, 57, 184, 407, 424, 435, 452, 457, 459, 460, 464, 465, 466, 467], "internet": 450, "internship": 454, "interplai": 452, "interpol": [109, 276, 452], "interpret": [13, 16, 215, 242, 349, 428, 430, 443, 444, 447, 460, 466, 468], "interrupt": 67, "intersect": 440, "interv": [31, 44, 151, 157, 159, 253, 255, 257, 262, 266, 280, 282, 284, 286, 305, 307, 308, 309, 435, 452, 458, 464, 467, 470], "intrins": 471, "introduc": [347, 451, 452, 459, 464, 465, 468], "intuit": [458, 462], "invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 78, 221, 342, 393, 428, 443, 451, 458, 459, 466], "invalid_config": 444, "invalid_surrogate_model": 428, "invalid_typ": 444, "invari": [53, 56, 57, 317, 318, 459], "invers": [234, 467], "invert": [31, 361], "investig": [242, 468, 469], "invok": [468, 472, 473], "involv": [31, 221, 260, 423, 430, 450, 460, 462, 463, 464, 467, 471], "io": 310, "irrelev": [430, 452, 459], "irrevoc": 455, "is_bound": [371, 452], "is_cardinality_fulfil": 452, "is_continu": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155], "is_degener": 371, "is_discret": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155], "is_empti": [213, 221, 377, 378, 452], "is_eq": 45, "is_finit": 452, "is_fully_unbound": 371, "is_half_bound": 371, "is_in_rang": [137, 138, 139, 141, 142, 144, 151, 152, 155], "is_inact": 452, "is_left_bound": 371, "is_mc": 452, "is_multi_output": [122, 125, 130, 132, 452], "is_numer": [137, 138, 139, 141, 142, 144, 151, 152, 155, 452], "is_right_bound": 371, "is_stat": [181, 183, 184, 185, 186, 452, 461], "iso": 427, "isol": 458, "isoxazol": 471, "issu": [261, 323, 334, 365, 452, 455, 468, 473], "item": [41, 137, 138, 139, 141, 142, 144, 151, 152, 155, 430, 433, 446, 447, 464], "iter": [13, 16, 31, 44, 151, 184, 185, 213, 215, 244, 261, 305, 324, 329, 347, 353, 355, 357, 365, 372, 404, 405, 408, 418, 419, 420, 421, 424, 425, 433, 446, 447, 450, 452, 456, 458, 464, 465, 468, 469, 473], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 213, 215, 221, 238, 248, 250, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 314, 317, 325, 333, 337, 353, 371, 375, 377, 378, 407, 413, 423, 425, 430, 431, 433, 447, 450, 451, 453, 455, 456, 457, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 471, 473], "itself": [253, 255, 257, 262, 266, 280, 282, 284, 286, 423, 446, 451, 471], "j": [409, 450, 464, 471], "jackiepho": [408, 409, 410], "januari": 455, "javadi": 454, "jin": 454, "join": [361, 451], "joint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 194, 196, 260, 458, 469], "joint_acq_valu": 458, "joint_acquisition_valu": [31, 194, 196, 452, 458], "jointli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 436, 458], "journal": 347, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 371, 377, 378, 427, 428, 442, 443, 452, 472], "json_str": 467, "juli": 454, "julian": 454, "jump": [452, 471], "jun": 347, "jupyt": 427, "just": [433, 449, 453, 467], "k": [152, 204, 347, 392, 407, 408, 409, 410, 412, 413, 415, 416, 424, 430, 436, 438, 439, 440, 452, 461, 465, 473], "karin": 454, "kde": 425, "keep": [52, 155, 213, 221, 424, 452, 453], "kei": [280, 286, 292, 328, 353, 409, 453, 462], "kept": [361, 464, 469], "kernel": [104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 266, 267, 268, 269, 270, 276, 278, 347, 413, 418, 419, 420, 421, 435, 442, 452, 459, 471], "kernel_factori": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 266, 268, 269], "kernel_or_factori": 266, "kernelexplain": [95, 97, 98, 101, 462], "kernelfactori": [266, 269, 270, 276, 278, 452], "keyword": [97, 155, 410, 413, 440, 447, 452, 457, 459, 466, 468], "kgaa": [450, 454, 460], "kian": 471, "kickstart": 467, "kind": [196, 450, 452, 455, 459, 464, 465], "kiter": [418, 419, 420, 421, 435], "klekotaroth": 149, "klekotarothfingerprint": 149, "kmean": [347, 413], "kmeansclusteringrecommend": [413, 465], "knob": 450, "know": [433, 443, 450, 451, 463, 467, 471], "knowledg": [8, 10, 450, 452, 471], "known": [459, 461, 469, 471], "koller": 471, "kwarg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 108, 110, 112, 117, 118, 119, 167, 169, 170, 171, 172, 173, 174, 175, 178, 198, 258, 263, 268, 343, 347, 357, 370], "kwargs_conform": [155, 343, 464], "kwargs_fingerprint": [155, 343, 464], "l0": 34, "l1": 464, "l664": 278, "label": [56, 57, 144, 155, 314, 347, 356, 430, 431, 436, 450, 452, 459, 461, 466, 468], "labelpad": 425, "labels_": 347, "laboratori": 436, "laggner": 149, "laggnerfingerprint": 149, "lambda": [418, 420, 421, 424, 430, 446, 469], "lambda_1": 427, "lambda_2": 427, "lambda_init": 427, "lanat": 462, "land": 452, "languag": [323, 431, 450], "larg": [155, 221, 347, 415, 416, 431, 452, 460, 464, 468, 473], "larger": [109, 152, 393, 413, 420, 458, 459, 467, 471], "largest": [208, 392, 433, 456], "last": [184, 433, 453, 458, 465], "last_call_tim": 423, "lastli": 425, "latent": 464, "later": [152, 451, 457, 458, 467], "latest": [185, 450, 453, 458], "latter": [21, 31, 317, 337, 347, 424, 430, 458, 463, 471], "law": [450, 455], "lawsuit": 455, "layer": 149, "layeredfingerprint": 149, "layout": 452, "lazi": [223, 396, 452], "lazili": [452, 460], "lazyfram": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 223], "le": 416, "le_method": 453, "lead": [87, 435, 452, 460, 467], "lean": 453, "learn": [15, 249, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 347, 413, 418, 419, 420, 421, 433, 435, 442, 446, 448, 450, 452, 459, 462, 464, 469, 470, 472], "least": [159, 184, 431, 450, 455, 457, 458], "leav": 467, "lee": 454, "left": [84, 85, 175, 244, 354, 362, 371, 419, 436, 452, 463], "left_df": 362, "leftov": 452, "legal": 455, "legend": [408, 410, 436], "len": [419, 424, 425, 430, 431, 433], "length": [110, 184, 185, 253], "lengthi": 458, "lengthscal": [109, 110, 111, 113, 114, 115], "lengthscale_initial_valu": [109, 110, 111, 113, 114, 115], "lengthscale_prior": [109, 110, 111, 113, 114, 115], "leq": 34, "less": [8, 318, 357, 424, 425, 433, 458, 473], "let": [407, 409, 423, 424, 425, 427, 428, 430, 431, 436, 438, 447, 450, 457, 459, 463, 467], "level": [355, 452, 453, 457, 458, 459, 465, 467], "leverag": [424, 457, 458, 465], "li": [159, 464], "liabil": 455, "liabl": 455, "lib": 451, "librari": 451, "licensor": 455, "lie": [31, 253, 255, 257, 262, 266, 280, 282, 284, 286, 353], "liebig": 454, "life": [450, 453, 454, 473], "lifecycl": 458, "ligand": [408, 409, 410, 412, 413, 424, 450, 462, 464], "ligand_data": 424, "ligand_smil": 424, "like": [13, 16, 159, 206, 248, 320, 347, 425, 430, 433, 450, 451, 452, 453, 457, 458, 459, 461, 467, 468, 471, 473], "likelihood": 253, "lime": [97, 100, 462], "limetabular": [95, 96, 462], "limit": [8, 276, 314, 425, 450, 454, 455, 459, 466, 472], "line": [351, 371, 408, 410, 424, 433, 452, 453, 456, 458, 464, 468, 471], "linear": [45, 108, 213, 280, 303, 308, 413, 414, 435, 448, 452, 453, 462, 466, 470], "linear_model": 427, "linear_regressor": 427, "linearkernel": 452, "linearli": [276, 308, 309, 435, 452], "lineplot": [407, 408, 409, 410, 424, 446, 447], "lingo": 149, "lingofingerprint": 149, "link": [55, 451, 452, 455, 464], "linspac": [418, 419, 420, 421, 425, 427, 428, 430, 436, 439, 440, 442, 446, 447, 473], "lint": [450, 452, 453], "linter": [452, 453], "list": [34, 35, 36, 37, 38, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 158, 164, 184, 185, 213, 215, 221, 222, 223, 226, 227, 228, 244, 248, 250, 313, 326, 327, 328, 336, 343, 353, 358, 359, 360, 363, 392, 408, 413, 418, 419, 420, 421, 425, 430, 431, 433, 435, 439, 440, 447, 450, 452, 453, 455, 459, 463, 464, 465, 466, 468], "liter": [31, 97, 184, 244, 246, 248, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 355, 392, 453], "literatur": 452, "litig": 455, "littl": 451, "live": 469, "liver": [468, 471], "ll": 461, "load": [396, 424, 427, 443, 444, 451, 452], "loc": [173, 174, 408, 410, 436, 457], "local": [451, 453, 460, 462, 472], "locat": [13, 16, 173, 174, 347, 457, 460, 471], "lock": 452, "lockfil": 452, "log": [173, 314, 413, 450, 460], "logarithm": [4, 11, 13, 14, 386], "logei": [4, 452], "logic": [179, 260, 353, 356, 407, 452, 459, 465, 468, 473], "lognormalprior": 452, "logo": 452, "long": [458, 467, 468], "longer": [157, 452, 460], "look": [246, 413, 430, 433, 451, 456, 458, 459, 461, 462, 467, 468, 470], "look_up_target": 244, "lookup": [242, 244, 248, 250, 356, 362, 406, 407, 425, 436, 439, 448, 452, 460, 462, 472], "lookup_df": 246, "lookup_test_task": 447, "lookup_training_task": 447, "lookup_valu": [415, 416, 425, 439, 440], "lookup_withmiss": 410, "loop": [242, 244, 250, 418, 419, 420, 421, 424, 435, 452, 457, 462, 468, 472, 473], "loss": 455, "lost": 467, "lot": 438, "low": [276, 433, 451, 452, 462, 464, 467], "lower": [159, 175, 307, 308, 309, 371, 408, 410, 425, 435, 446, 447, 459, 464, 470], "lower_bound": 466, "lower_threshold": 159, "lst_exclud": 358, "lt": 451, "luxuri": 458, "m": 430, "m1": 451, "mac": 451, "macc": 149, "maccsfingerprint": 149, "machin": [433, 450, 451, 453, 456, 460, 464, 470, 471], "machineri": [21, 196, 451, 453, 461, 471, 473], "made": [31, 88, 244, 392, 410, 450, 451, 455, 459, 460, 468], "magic": 471, "magnitud": [354, 355, 473], "mai": [31, 44, 122, 125, 130, 132, 215, 333, 347, 449, 450, 455, 458, 461, 467, 468, 469], "mail": 455, "main": [30, 31, 450, 452], "maintain": [290, 453, 461, 463], "major": [452, 468], "make": [57, 196, 253, 255, 257, 262, 266, 280, 282, 284, 286, 288, 289, 290, 323, 354, 356, 408, 410, 413, 415, 430, 431, 450, 451, 452, 453, 455, 457, 458, 459, 461, 462, 464, 467, 469, 471, 473], "make_explainer_for_surrog": 97, "malfunct": 455, "manag": [30, 213, 214, 215, 221, 389, 452, 455, 468], "mandatori": [449, 452, 470], "mani": [196, 393, 430, 439, 440, 450, 458, 464, 467, 470, 471], "manipul": [452, 460], "manner": 460, "manual": [440, 451, 452, 467, 469], "map": [144, 149, 155, 246, 248, 260, 307, 308, 309, 331, 347, 356, 395, 408, 409, 410, 435, 468, 470], "mapfingerprint": 149, "mapl": [95, 96, 97, 100, 462], "maranzana": 347, "margin": 452, "mark": [455, 458, 471, 472], "markdown": [428, 443, 444, 452], "marker": [407, 408, 409, 410, 424, 446, 447, 452], "markers": [407, 409, 424, 436, 446, 447], "market": 433, "marketplac": 452, "martin": [450, 454], "mask_bad1": 418, "mask_bad2": 418, "mask_bad3": 418, "mask_good": [418, 459], "mass": 169, "master": 278, "match": [31, 89, 91, 138, 141, 142, 144, 152, 155, 158, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 297, 299, 302, 305, 313, 331, 333, 362, 363, 404, 423, 425, 435, 440, 450, 452, 457, 458, 461, 463, 467, 468, 472], "match_attribut": 452, "match_targeta": 470, "match_targetb": 470, "materi": [433, 454, 471], "matern": 109, "maternkernel": 452, "math": [424, 430], "mathemat": 452, "matmin": 451, "matplotlib": [408, 410, 425, 436, 452], "matrix": 347, "matter": [430, 438, 453, 463], "max": [246, 302, 354, 408, 409, 410, 412, 413, 418, 419, 420, 421, 424, 425, 427, 428, 433, 435, 436, 442, 443, 444, 450, 452, 463, 467, 468, 472], "max_cardin": [34, 44, 51, 459], "max_column": [366, 430], "max_colwidth": 366, "max_it": [347, 427], "max_n_subspac": [196, 452, 459], "max_nonzero": 221, "max_row": [366, 430], "max_sum": [221, 430, 466], "max_target": 470, "max_yield": [408, 410], "maxim": [6, 13, 16, 302, 412, 425, 433, 435, 450, 452, 462, 470], "maximum": [6, 34, 44, 51, 61, 155, 196, 213, 215, 221, 307, 347, 366, 430, 431, 435, 452, 459, 464, 466], "mc": [433, 457], "md": 452, "me2pph": [408, 409, 410], "mean": [5, 8, 21, 31, 57, 128, 204, 242, 244, 246, 248, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 290, 347, 386, 410, 413, 427, 433, 435, 436, 452, 453, 455, 456, 457, 458, 459, 461, 463, 464, 465, 467, 469, 472], "meaning": [377, 378, 463], "meaningless": [430, 456], "meanpredictionsurrog": [290, 413, 469], "meantim": [453, 459], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 75, 83, 97, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 242, 244, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 297, 299, 305, 313, 353, 357, 362, 377, 408, 409, 410, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 435, 439, 440, 442, 449, 450, 452, 453, 456, 457, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472], "measurablemetadata": [137, 138, 139, 141, 142, 144, 151, 152, 155, 297, 299, 305, 452], "mechan": [31, 67, 125, 126, 128, 242, 245, 246, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 333, 347, 361, 373, 392, 407, 423, 424, 425, 446, 447, 452, 455, 461, 462, 464, 466, 467, 469, 471, 472], "mechanist": 450, "media": [455, 464, 471], "medic": 457, "mediocr": 470, "medium": [428, 442, 450, 455, 464], "medoid": [205, 347, 452, 465], "medoid_indices_": 347, "meet": [353, 455], "mem_estim": 473, "member": [337, 459, 464], "memori": [10, 215, 220, 221, 347, 452, 460, 472], "memorys": [215, 221, 473], "mention": 456, "merchant": 455, "merck": [450, 454, 460], "mere": [455, 463], "merg": 453, "meshgrid": [436, 446, 447], "messag": [89, 424], "meta": [31, 84, 181, 183, 184, 185, 186, 189, 418, 419, 420, 421, 435, 442, 450, 452, 472], "metadata": [31, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 213, 221, 297, 299, 305, 311, 347, 377, 452, 454], "metadatarequest": 347, "metarecommend": [183, 184, 185, 186, 452, 461], "methanol": 430, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 92, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 215, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 268, 269, 276, 278, 280, 282, 284, 286, 289, 294, 297, 299, 305, 320, 323, 333, 337, 347, 371, 377, 378, 391, 392, 393, 395, 425, 428, 443, 444, 449, 452, 454, 457, 458, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471], "methodtyp": [423, 424, 425], "methyldiphenylphosphin": [408, 409, 410], "methylisoxazol": 471, "metric": [347, 433, 450, 460, 464], "mhfp": 149, "mhfpfingerprint": 149, "micromamba": 452, "middl": 461, "midpoint": 470, "might": [53, 57, 155, 215, 409, 413, 415, 419, 440, 447, 451, 457, 458, 459, 460, 462, 466, 468, 471, 473], "mimic": [102, 165, 459], "min": [302, 354, 407, 415, 416, 425, 435, 436, 439, 440, 446, 447, 450, 452, 463, 467, 472], "min_cardin": [34, 44, 51, 459], "min_nonzero": 221, "min_target": 470, "mind": [433, 469], "miniconda": 452, "minim": [6, 302, 347, 435, 446, 447, 452, 459, 466, 470], "minimum": [34, 44, 51, 61, 80, 152, 213, 215, 221, 392, 452, 459], "minimumcardinalityviolatedwarn": [452, 459], "minor": 452, "mirror": [13, 16, 458, 467], "misc": [377, 378], "miss": [244, 246, 364, 404, 405, 410, 452, 453], "mistak": [31, 453], "mix": [250, 430, 431, 450, 459, 464, 467, 471], "mixin": 238, "mixtur": [203, 448, 452, 459, 464, 465, 471, 473], "mobil": 452, "mode": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 144, 155, 184, 244, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 302, 305, 308, 331, 353, 406, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 424, 425, 427, 428, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 458, 463, 465, 467, 472], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 81, 97, 101, 102, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 253, 255, 257, 258, 259, 260, 261, 262, 266, 280, 282, 284, 286, 290, 294, 382, 415, 416, 426, 436, 446, 447, 450, 452, 454, 456, 457, 458, 459, 463, 464, 465, 467, 468, 470, 471, 472], "model_cl": 294, "model_cluster_num_parameter_nam": [203, 204, 205, 206], "model_from_config": 427, "model_from_python": 427, "model_json": 427, "model_param": [203, 204, 205, 206, 280, 284, 286, 428, 452], "modellist": 260, "modelnottrainederror": [253, 255, 257, 262, 266, 280, 282, 284, 286], "modif": [451, 455], "modifi": [185, 246, 290, 353, 354, 355, 452, 455, 473], "modul": [0, 1, 32, 93, 94, 102, 120, 135, 153, 165, 176, 179, 189, 192, 199, 211, 229, 230, 242, 251, 254, 264, 271, 291, 295, 298, 315, 319, 344, 345, 380, 396, 399, 450, 451, 452, 453], "modular": 453, "molecul": [55, 155, 342, 430, 464], "molecular": [343, 464], "moment": [250, 276, 453], "monitor": [452, 460], "monkeypatch": 451, "mont": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 82, 248, 407, 409, 410, 424, 433, 446, 447, 452, 457, 468], "monte_carlo_run": [248, 424], "mordr": [149, 155, 408, 409, 410, 412, 413, 419, 424, 428, 430, 443, 444, 450, 452, 459, 464], "mordredcommun": 452, "mordredfingerprint": [149, 464], "more": [8, 10, 57, 65, 85, 155, 184, 185, 213, 215, 221, 228, 244, 290, 310, 313, 337, 347, 351, 368, 410, 413, 425, 430, 431, 446, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 464, 466, 467, 468, 469, 470, 473], "morgan": 464, "morgan_fp": [149, 452], "mors": 149, "morsefingerprint": 149, "most": [221, 244, 411, 433, 450, 453, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473], "motiv": 452, "mous": 457, "move": [13, 16, 157, 452, 467], "mpl_toolkit": 425, "mplot3d": 425, "mqn": 149, "mqnsfingerprint": 149, "mse": 433, "mu": [173, 174], "much": [409, 463, 464], "multi": [97, 129, 252, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 436, 448, 450, 452, 454, 457, 471, 472], "multiarmedbandit": 433, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 40, 122, 125, 130, 132, 247, 248, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 355, 408, 409, 410, 419, 430, 433, 450, 452, 457, 459, 462, 463, 469, 470, 471, 472], "multipli": 118, "multitask": 452, "must": [53, 122, 125, 130, 132, 215, 221, 246, 250, 333, 347, 355, 404, 413, 423, 424, 430, 433, 435, 452, 453, 455, 456, 459, 460, 461, 462, 463, 464, 468], "mutual": 468, "my_attribut": 453, "my_valu": 460, "mypi": [323, 334, 450, 452, 453], "mystr": 453, "n": [26, 253, 318, 338, 392, 408, 409, 410, 412, 413, 418, 419, 420, 421, 428, 430, 433, 435, 439, 440, 442], "n_arm": 433, "n_batches_don": 31, "n_cluster": [204, 205, 347], "n_combin": 430, "n_combinations_actu": 430, "n_combinations_expect": 430, "n_compon": 203, "n_doe_iter": [244, 248, 250, 407, 408, 409, 410, 424, 425, 446, 447, 468], "n_duplic": 430, "n_estim": 428, "n_featur": 347, "n_features_new": 347, "n_fits_don": 31, "n_grid_point": 436, "n_inactive_parameter_combin": [44, 213, 452], "n_index": 347, "n_interrupted_campaign": 424, "n_iter": [415, 416, 418, 419, 420, 421, 433, 435], "n_mc_iter": [248, 250, 407, 409, 410, 424, 446, 447, 460, 468], "n_mc_run": 433, "n_mc_sampl": 21, "n_output": [122, 125, 130, 132, 347, 452], "n_permut": 430, "n_pis_ov": 424, "n_pis_over_requir": 424, "n_point": [213, 393], "n_queri": 347, "n_raw_sampl": [196, 452, 465], "n_restart": [196, 452, 465], "n_row": 357, "n_sampl": [347, 392], "n_task": 215, "n_task_param": 452, "n_training_data": 436, "n_wrong_sum": 430, "na": 457, "nactivevalu": [418, 419, 420, 421, 435, 442], "naiv": [188, 282, 290, 413, 452, 466], "naivehybridrecommend": 452, "naivehybridspacerecommend": [440, 452, 465], "nake": [313, 460], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 44, 65, 88, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 160, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 227, 236, 248, 260, 262, 297, 299, 305, 317, 325, 331, 332, 333, 342, 343, 347, 351, 353, 358, 362, 363, 364, 383, 398, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 431, 433, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 450, 452, 453, 455, 457, 458, 459, 460, 463, 466, 467, 468, 469, 470, 471, 473], "name_or_abbr": [325, 332], "namedtupl": 433, "namespac": [197, 452, 453], "nan": [163, 253, 364, 400, 402, 403, 404, 405, 418, 419, 420, 421, 435, 442, 452, 457], "nativ": [427, 452, 469], "natur": [284, 409, 453, 459, 465, 467, 470], "navig": [427, 450, 458], "nbase": 343, "nbsp": 427, "nbviewer": 427, "nd": 450, "ndarrai": [13, 16, 126, 159, 307, 308, 309, 347, 356, 367, 371, 386, 392, 425, 433, 436, 452, 468], "ne": 430, "nearli": 470, "necessari": [363, 423, 452, 453, 458, 459, 463, 464, 466, 468, 469], "necessarili": [455, 458, 459, 466, 471], "need": [26, 31, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 333, 362, 363, 408, 409, 410, 413, 418, 421, 423, 425, 427, 430, 433, 435, 446, 447, 449, 450, 451, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473], "neg": [15, 436, 452, 459], "negat": [6, 45, 447, 452, 471], "neglig": 455, "neither": [8, 250, 355], "neq": 34, "nest": [347, 351, 458, 472], "neural": 471, "neurip": 471, "neutral": 8, "never": [420, 457], "nevertheless": [337, 451], "new": [31, 47, 48, 184, 186, 213, 246, 261, 307, 308, 309, 317, 347, 360, 361, 364, 412, 424, 425, 442, 450, 452, 453, 458, 459, 469, 471, 472], "new_measur": 462, "new_rec": 458, "newli": [450, 453, 460, 461, 471], "next": [31, 407, 423, 425, 430, 431, 436, 442, 446, 447, 450, 456, 457, 458, 465, 467], "nextelements": 427, "ngboost": [284, 413, 452], "ngboostmodel": 428, "ngboostsurrog": [413, 428, 452, 469], "nice": [425, 451], "nicknam": 342, "nintern": 435, "no_duplicates_constraint": 430, "no_tl": 446, "nois": [244, 354, 355, 447, 452, 472], "noise_level": 355, "noise_perc": [244, 248, 468], "noise_ratio": 354, "noise_std": [446, 447], "noise_typ": 355, "noisi": [13, 14, 16, 17, 357, 446, 450, 452, 471], "non": [64, 65, 96, 122, 125, 130, 132, 181, 183, 184, 185, 186, 188, 215, 244, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 331, 333, 337, 347, 354, 392, 393, 400, 401, 402, 404, 405, 430, 446, 450, 452, 455, 457, 459, 461, 462, 466, 467], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 42, 47, 48, 57, 63, 64, 65, 75, 83, 88, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 125, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 162, 163, 164, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 218, 221, 224, 227, 228, 231, 232, 234, 236, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 294, 297, 299, 305, 313, 314, 321, 322, 333, 343, 347, 353, 358, 359, 360, 366, 371, 372, 377, 378, 395, 400, 401, 402, 403, 404, 405, 413, 418, 419, 420, 421, 423, 424, 425, 427, 428, 435, 442, 457, 466, 470, 472], "nonetheless": 471, "nonlinear": [37, 213], "nonpredict": [201, 203, 204, 205, 206, 208, 209, 210], "nonpredictiverecommend": [206, 209, 210, 452], "nonzero": [34, 44, 221, 452], "noqa": [418, 453], "nor": [8, 355, 449], "norecommenderslefterror": [184, 185], "noreturn": [188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 263], "normal": [172, 173, 174, 418, 420, 421, 435, 451, 452, 455, 463, 466], "normaliz": 463, "normalize_input_dtyp": 452, "normalprior": 452, "not_a_param": 428, "notabl": [452, 461, 469], "note": [34, 44, 57, 215, 244, 248, 250, 261, 262, 347, 353, 354, 355, 408, 409, 410, 413, 419, 423, 427, 428, 430, 435, 439, 440, 442, 443, 444, 449, 450, 458, 459, 460, 461, 463, 465, 466, 467, 468, 469, 471], "notebook": 427, "noteworthi": 458, "noth": [15, 31, 34, 42, 44, 45, 51, 86, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 186, 188, 194, 196, 203, 204, 205, 206, 213, 215, 221, 253, 266, 280, 284, 286, 297, 299, 305, 377, 378, 455, 464], "notic": [423, 453, 455, 467, 469], "notimplementederror": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 126, 157, 228, 231, 232, 250, 253, 255, 257, 261, 262, 266, 280, 282, 284, 286], "notwithstand": 455, "now": [407, 408, 409, 410, 412, 413, 418, 420, 423, 424, 425, 430, 431, 433, 435, 436, 438, 442, 443, 446, 447, 449, 450, 452, 471, 473], "np": [126, 347, 415, 416, 418, 419, 420, 421, 425, 427, 428, 430, 431, 433, 436, 438, 439, 440, 442, 446, 447, 457, 459, 464, 468, 473], "nrecommend": [412, 413, 435, 439, 440], "nu": 109, "num": [361, 375], "num_disc_1": [435, 458], "num_disc_2": 435, "num_experi": [244, 407, 408, 409, 410, 424, 446, 447], "num_fantasi": 10, "num_parameter_1": 421, "num_parameter_2": 421, "num_parameter_3": 421, "num_parameter_4": 421, "num_parameter_5": 421, "num_parameter_6": 421, "num_sampl": 114, "num_valu": 466, "number": [10, 15, 21, 31, 44, 114, 122, 125, 130, 132, 155, 178, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 244, 248, 250, 253, 347, 357, 366, 371, 375, 387, 392, 393, 408, 409, 410, 415, 416, 418, 419, 420, 421, 425, 430, 433, 439, 446, 447, 450, 451, 452, 456, 458, 459, 460, 463, 464, 466, 467, 468, 473], "numer": [13, 16, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 87, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 213, 221, 246, 305, 354, 355, 362, 393, 404, 405, 407, 412, 415, 430, 431, 450, 452, 459, 460, 462, 463, 464, 466, 468, 470], "numerical_measurements_must_be_within_toler": [31, 404, 452, 458], "numerical_onli": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "numericalcontinuousparamet": [45, 63, 157, 213, 407, 415, 416, 431, 436, 438, 440, 447, 466, 468, 472], "numericaldiscreteparamet": [221, 408, 409, 410, 412, 413, 415, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 435, 439, 440, 442, 443, 444, 446, 447, 450, 466, 467, 468, 472, 473], "numericaltarget": [246, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 424, 425, 427, 428, 435, 436, 439, 440, 442, 443, 444, 446, 447, 450, 452, 463, 467, 468, 472], "numericcontinu": 440, "numparam1": 421, "numparam2": 421, "numparam3": 421, "numparam4": 421, "numparam5": 421, "numparam6": 421, "numpi": [159, 347, 356, 367, 371, 381, 383, 415, 416, 418, 419, 420, 421, 425, 427, 428, 430, 431, 433, 436, 438, 439, 440, 442, 446, 447, 452, 457, 459, 468, 473], "nuniqu": 430, "nyou": [439, 440], "o": [347, 407, 408, 409, 410, 412, 413, 416, 418, 419, 420, 421, 424, 425, 428, 430, 433, 436, 446, 447, 450, 459, 460, 464], "o2": [408, 409, 410], "obj": [162, 163, 164, 232], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 222, 223, 232, 233, 236, 238, 253, 255, 257, 258, 260, 262, 266, 269, 280, 282, 284, 286, 293, 297, 299, 305, 320, 323, 331, 333, 347, 355, 362, 363, 365, 368, 371, 376, 377, 378, 395, 407, 412, 423, 424, 425, 427, 428, 433, 436, 438, 440, 443, 444, 451, 452, 453, 455, 459, 461, 462, 465, 466, 468, 469, 470, 472, 473], "objective_json": 467, "oblig": 455, "observ": [242, 253, 255, 257, 262, 266, 280, 282, 284, 286, 433, 468, 470], "obsolet": 452, "obtain": [244, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 409, 425, 433, 436, 447, 450, 452, 458, 462, 463, 467, 471], "oc": [408, 409, 410, 412, 413], "oc1": [408, 409, 410], "occur": [56, 453], "occurr": [457, 459], "octanol": [459, 464], "off": [8, 250, 338, 419, 450, 452, 457, 459, 460, 463, 470], "offer": [333, 425, 430, 433, 439, 449, 450, 451, 455, 456, 461, 464, 465, 467, 468, 469, 471, 473], "offset": [45, 112], "offset_initial_valu": 112, "offset_prior": 112, "often": [347, 431, 433, 451, 456, 459, 460, 461, 462, 464, 467, 473], "oftentim": [467, 468], "oh": [141, 146, 409, 419, 428, 433, 435, 442, 443, 444, 450, 466, 467], "ok": 435, "old": 471, "omit": [13, 16, 194, 196, 248, 333, 423, 450, 466, 467], "onc": [248, 424, 464, 468], "onclick": 427, "one": [13, 16, 21, 31, 63, 65, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 169, 178, 179, 184, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 215, 228, 246, 266, 290, 317, 318, 351, 357, 408, 409, 410, 413, 415, 430, 433, 435, 444, 446, 447, 449, 450, 451, 452, 453, 455, 457, 458, 459, 461, 463, 464, 466, 467, 468, 469, 470, 471], "onehot": 409, "ones": [215, 313, 362, 409, 440, 452, 457, 471], "ongo": [424, 471], "onli": [10, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 97, 109, 122, 125, 130, 132, 155, 215, 221, 246, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 313, 314, 333, 334, 337, 347, 351, 353, 362, 364, 371, 392, 393, 408, 413, 418, 419, 424, 425, 427, 428, 430, 439, 440, 447, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 473], "onlin": 433, "onnx": [261, 262, 382, 426, 450, 452, 469], "onnx_input_nam": [262, 427], "onnx_str": [262, 427, 452], "onto": [13, 16, 453], "open": [31, 44, 157, 159, 253, 255, 257, 262, 266, 280, 282, 284, 286, 450, 453], "opentelemetri": [450, 452, 460], "oper": [42, 45, 54, 234, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 356, 380, 415, 416, 420, 421, 430, 431, 451, 452, 457, 459, 460, 461, 462, 465, 467, 472], "operator_convert": 427, "opposit": 459, "opt": [450, 460], "optim": [12, 21, 31, 44, 45, 76, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 242, 244, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 353, 409, 411, 412, 415, 416, 424, 425, 430, 433, 435, 440, 452, 454, 456, 459, 460, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472], "optimize_acqf": [45, 196], "optimize_acqf_": 45, "optimize_acqf_discret": 196, "optimize_acqf_mix": 196, "option": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 88, 93, 97, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 234, 236, 244, 248, 250, 280, 284, 286, 297, 299, 305, 333, 343, 347, 353, 358, 359, 360, 410, 413, 427, 428, 433, 451, 452, 453, 456, 458, 459, 461, 462, 463, 466, 467, 468, 469, 470, 473], "oracl": 468, "orchestr": [453, 458], "order": [215, 221, 424, 433, 449, 450, 452, 453, 458, 459, 464, 467, 471], "ordin": 470, "org": [278, 323, 360, 427, 450, 455], "organ": 453, "origin": [26, 31, 157, 317, 318, 328, 347, 356, 365, 442, 449, 452, 453, 455, 465, 467, 469], "originalhtml": 427, "originalstyl": 427, "originalwidth": 427, "orthogon": 453, "oserror": 451, "other": [53, 116, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 213, 297, 299, 305, 318, 347, 408, 410, 412, 413, 415, 416, 424, 431, 433, 440, 446, 447, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 473], "otherwis": [45, 61, 137, 138, 139, 141, 142, 144, 151, 152, 155, 365, 392, 455, 456, 461, 463, 471], "our": [407, 418, 420, 423, 424, 425, 428, 430, 431, 433, 436, 438, 439, 440, 443, 444, 446, 447, 450, 453, 456, 458, 459, 461, 467, 468], "out": [221, 435, 447, 450, 455, 460, 463, 468, 471], "out_par": 436, "out_y0": 436, "out_y1": 436, "outcom": [178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 409, 450, 457, 464, 470], "outlier": 347, "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 97, 119, 122, 125, 130, 132, 253, 255, 257, 262, 266, 280, 282, 284, 286, 347, 355, 356, 357, 407, 436, 446, 447, 451, 452, 454, 457, 468, 472], "output_label": 356, "outputscal": 119, "outputscale_initial_valu": 119, "outputscale_prior": 119, "outsid": [31, 157, 185, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 308, 309, 353, 435, 452, 467], "outstand": 455, "over": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 213, 248, 430, 449, 452, 456, 458, 460, 461, 471], "overal": [215, 427, 428, 430, 431, 433, 452, 453, 458, 463, 471], "overhead": 460, "overlap": [64, 65, 157, 415, 416, 452, 459], "overrid": [234, 236, 423, 452], "overridden": [423, 453], "overview": [450, 454, 467], "overwritten": 440, "own": [188, 407, 431, 450, 451, 452, 453, 455, 459, 464], "owner": 455, "ownership": 455, "p": [407, 408, 409, 410, 412, 413, 415, 416, 423, 425, 439, 446, 447, 453, 461, 462, 469, 473], "p1": [466, 467, 468], "p1_json": 467, "p1_via_json": 467, "p2": [466, 467, 468], "p2_json": 467, "p2_via_json": 467, "p3c4": [408, 409, 410], "p_cont": 466, "p_disc": 466, "p_g1_amount": 431, "p_g2_amount": 431, "p_g3_amount": 431, "p_i": 34, "pack": 467, "packag": [97, 149, 311, 451, 452, 453, 464, 468, 469, 473], "page": [427, 450, 452, 453, 461], "pair": [317, 436, 450, 464], "pairwis": 347, "pairwise_dist": 347, "pam": [205, 347], "pamclusteringrecommend": 465, "panda": [52, 222, 240, 241, 246, 342, 347, 367, 407, 408, 409, 410, 415, 416, 418, 424, 425, 430, 431, 435, 436, 439, 440, 446, 447, 452, 457, 459, 460, 464, 466, 467, 468], "panic": 449, "paper": 471, "paper_fil": 471, "parallel": [248, 452, 453, 472], "parallel_run": [248, 460], "param": [347, 426, 427, 448], "param1": [466, 468], "param2": [466, 468], "param_1": 457, "param_2": 457, "param_bounds_comp": 452, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 68, 85, 89, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 130, 132, 137, 138, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 217, 220, 221, 222, 223, 226, 227, 228, 234, 236, 238, 242, 244, 246, 248, 250, 253, 255, 257, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 288, 290, 292, 294, 297, 299, 305, 307, 308, 309, 313, 314, 317, 318, 326, 327, 328, 331, 333, 336, 337, 338, 341, 342, 343, 347, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 375, 377, 378, 379, 384, 385, 386, 388, 389, 392, 393, 395, 404, 405, 407, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 433, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 450, 452, 453, 459, 460, 461, 463, 467, 468, 469, 471, 472], "parameter": [169, 170, 171, 172, 173, 174, 175], "parameter_json": 467, "parameter_nam": [213, 215, 221, 440], "parameter_names_in_cardinality_constraint": 213, "parameterencod": [138, 146, 147, 149, 152], "parametr": 459, "paramnam": 427, "paramprefix": 427, "parent": 453, "parentel": 427, "pareto": [12, 130, 434, 448, 450, 452, 463], "paretoobject": [436, 450, 452, 457, 462, 472], "park": 347, "pars": [373, 452], "parser": 452, "part": [15, 26, 31, 40, 73, 189, 213, 215, 221, 353, 405, 428, 440, 443, 444, 446, 447, 452, 453, 455, 456, 457, 458, 459, 464, 465, 466, 467, 473], "parti": [345, 455, 468], "partial": [26, 424, 450, 452, 472], "particl": 471, "particular": [31, 221, 242, 423, 436, 440, 449, 450, 451, 453, 455, 458, 463, 464, 466, 467, 468], "particularli": [333, 458], "partit": [205, 248, 250, 452, 465, 468], "partitionexplain": [95, 98], "pass": [31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 97, 155, 203, 204, 205, 206, 215, 221, 232, 266, 280, 284, 286, 347, 357, 363, 430, 442, 447, 452, 453, 457, 461, 462, 463, 464, 467], "passthrough": [28, 123, 217, 270, 379], "past": 427, "patch": [424, 452], "patent": 455, "path": [88, 409, 430, 452, 453, 460, 473], "pattern": [149, 453, 471], "patternfingerprint": 149, "pd": [31, 194, 196, 246, 260, 317, 318, 361, 407, 408, 409, 410, 415, 416, 418, 424, 425, 430, 431, 435, 436, 439, 440, 446, 447, 452, 457, 459, 461, 464, 466, 467, 468], "pdf": 471, "peek": 467, "pend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 450, 452, 472], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 452, 457, 458], "per": [244, 260, 408, 409, 410, 413, 430, 435, 439, 446, 447, 452, 464, 466, 468], "percent": [244, 455], "percentag": [196, 313, 355, 413, 418, 419, 420, 421, 430, 435, 442, 447, 465], "perf_count": 423, "perfectli": 467, "perform": [196, 244, 313, 347, 362, 409, 418, 419, 420, 421, 425, 430, 443, 446, 447, 449, 450, 452, 453, 455, 456, 457, 458, 460, 462, 464, 465, 468, 469, 471, 472], "period": 110, "period_length_initial_valu": 110, "period_length_prior": 110, "periodickernel": 452, "perm_inv_constraint": 430, "perman": 472, "permiss": [450, 455], "permut": [53, 56, 57, 318, 452, 459], "permutation_invari": 53, "permutationexplain": [95, 98], "perpetu": 455, "persist": [452, 454, 458, 460, 467, 469], "perspect": 467, "pertain": 455, "pharmacophor": 149, "pharmacophorefingerprint": 149, "phase": [186, 431], "phaseagent1": 431, "phaseagent2": 431, "phcpho": [408, 409, 410, 412, 413], "phenomenon": 458, "philosophi": 467, "physic": [462, 468], "physiochemicalproperti": 149, "physiochemicalpropertiesfingerprint": 149, "pi": [7, 413, 424, 425], "pi_max": 425, "pi_per_iter": 425, "pi_required_fract": 424, "pi_threshold": 424, "pick": 347, "pickl": 452, "pictur": 450, "piec": [433, 450, 458, 459], "piecewis": 111, "piecewisepolynomialkernel": 452, "pin": [26, 452], "pin_discret": 26, "pinned_part": 26, "pip": [450, 452, 453, 462, 473], "pipelin": [347, 446, 447, 452, 453], "pival": [408, 409, 410, 412, 413], "pl": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "place": [13, 16, 34, 246, 353, 354, 355, 427, 428, 430, 433, 451, 452, 453, 455, 458, 461, 464, 467, 471], "placehold": 320, "plai": [458, 462, 470], "plain": 270, "plainkernelfactori": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 266], "plan": [261, 461, 464], "platt": 471, "pleas": [347, 427, 428, 450, 456, 462, 465], "plenti": 462, "plot": [97, 99, 244, 408, 410, 436, 447, 452, 469, 471, 472], "plot_abegin_convert_pipelin": 382, "plot_ebegin_float_doubl": 382, "plot_kmedoids_digit": 347, "plot_typ": 97, "plt": [408, 410, 425, 436], "plu": [246, 450], "plugin": 452, "pl\u00f6tz": 454, "pm": [5, 413], "png": [408, 410], "po16": 464, "poetri": 452, "point": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 30, 31, 97, 152, 157, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 347, 362, 381, 382, 390, 391, 392, 393, 397, 408, 412, 413, 424, 431, 436, 439, 440, 446, 447, 449, 450, 452, 454, 456, 457, 458, 461, 462, 463, 465, 466, 472, 473], "points_per_dim": [425, 439, 440, 446, 447], "polar": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 223, 347, 450, 452, 454, 472, 473], "poli": 425, "polici": 433, "polycollect": 425, "polym": 464, "polynomi": [111, 112], "polynomialkernel": 452, "polytop": 452, "popul": 430, "popular": [462, 464, 469], "posit": [13, 16, 97, 333, 392, 452, 459, 462, 463], "possibl": [31, 44, 158, 213, 221, 222, 223, 242, 333, 347, 353, 410, 424, 425, 430, 435, 450, 452, 455, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 471, 473], "possibli": [452, 457, 458], "post": [463, 464, 472], "post_hook": [333, 423, 424, 425], "posterior": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 194, 196, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 289, 413, 452, 456, 469], "posterior_mean": [253, 433], "posterior_mod": 253, "posterior_stat": [31, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 452, 458], "posteriorlist": 260, "posteriorstandarddevi": [433, 452, 456], "postprocess": 342, "potassium": [408, 409, 410, 412, 413], "potenti": [215, 450, 451, 452, 453, 458, 459, 462, 463, 466, 473], "power": [112, 455, 459, 465], "pp": 347, "pph3": [408, 409, 410], "pr": [452, 453], "practic": [456, 462, 465], "pre": [158, 184, 269, 426, 451, 452, 453], "pre_hook": [333, 423], "preced": 460, "precis": [57, 184, 213, 313, 366, 382, 383, 398, 452, 472], "precomput": [144, 347], "predefin": [458, 465], "predict": [31, 81, 206, 253, 255, 257, 262, 266, 280, 282, 284, 286, 347, 450, 452, 456, 457, 463, 468, 469, 471, 472], "predictor": 288, "prefer": [31, 455, 461, 463, 467], "prefix": [343, 427], "preliminari": 471, "prepar": [425, 453, 455, 473], "preprocess": 452, "presenc": [196, 451, 452], "present": [31, 72, 97, 122, 125, 130, 132, 215, 317, 318, 333, 347, 412, 433, 452, 459, 468, 473], "preset": [266, 273, 276, 278, 452], "pressur": [420, 427, 428, 442, 443, 444, 450, 459], "pretrain": [262, 426, 448], "pretti": 366, "pretty_print_df": [430, 452], "prevent": [157, 231, 232, 333, 451, 452, 453], "previou": [184, 424, 425, 452, 458, 460, 471], "previous": [31, 313, 408, 409, 410, 412, 420, 457, 458], "price": 464, "primari": 458, "primarili": 456, "principl": [430, 433, 469], "print": [246, 351, 366, 408, 409, 410, 412, 413, 415, 416, 420, 423, 424, 427, 428, 430, 431, 433, 438, 439, 440, 442, 443, 444, 450, 452, 466, 473], "print_parameter_names_hook": 423, "printer_inst": 423, "prior": [108, 109, 110, 111, 112, 113, 114, 115, 119, 169, 170, 171, 172, 173, 174, 175, 253, 276, 421, 450, 451, 452], "priori": [459, 467, 471], "privat": [452, 454], "probabilist": 456, "probability_of_improv": 425, "probabilityofimprov": [424, 425], "probabl": [7, 19, 21, 413, 422, 424, 448, 452], "problem": [76, 430, 431, 433, 446, 447, 452, 453, 458, 463, 467], "problemat": [337, 451, 464], "proce": [244, 412, 457, 460], "procedur": [456, 471], "proceed": 471, "process": [31, 102, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 361, 392, 413, 423, 430, 433, 446, 447, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 467, 471], "prod": 421, "prod_constraint": 421, "prod_i": 463, "produc": [122, 125, 126, 130, 132, 246, 450, 452, 453, 460, 468], "product": [58, 118, 215, 221, 222, 223, 329, 417, 448, 450, 452, 455, 459, 461, 472, 473], "product_paramet": [221, 430, 466], "productkernel": 452, "programmat": 430, "progress": [31, 182, 425, 452, 461], "prohibit": 456, "project": [425, 450, 452, 460], "promin": 455, "promis": [424, 457], "proper": 452, "properli": [26, 435, 451, 452, 466], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 220, 221, 253, 255, 257, 260, 262, 266, 269, 273, 276, 278, 280, 282, 284, 286, 297, 299, 302, 303, 305, 322, 323, 371, 377, 378, 391, 395, 452, 453, 459, 461, 464], "proport": 447, "propos": 458, "protobuf": 452, "protocol": [177, 178, 258, 268, 337, 452], "prototyp": 454, "provid": [13, 15, 16, 31, 45, 97, 101, 126, 144, 155, 158, 178, 184, 185, 188, 189, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 234, 238, 242, 244, 246, 248, 250, 253, 255, 257, 262, 266, 276, 278, 280, 282, 284, 286, 317, 329, 333, 347, 349, 354, 355, 360, 363, 367, 377, 378, 392, 393, 407, 408, 409, 410, 423, 428, 430, 436, 438, 439, 440, 443, 446, 447, 450, 452, 453, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "prune": [12, 13, 14, 16, 17], "prune_baselin": [12, 13, 14, 16, 17], "pstd": [6, 452, 456], "pubchem": 149, "pubchemfingerprint": 149, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 297, 299, 302, 303, 305, 320, 322, 323, 347, 371, 377, 378, 391, 395, 452, 453], "publicli": 455, "publish": 452, "pull": [433, 452], "punish": 8, "pure": [8, 10, 15, 179, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 215, 250, 261, 393, 439, 452, 472], "purerecommend": [181, 183, 184, 185, 186, 188, 194, 201, 452], "purpl": 436, "purpos": [15, 423, 424, 427, 433, 450, 451, 453, 455, 458, 461, 467, 473], "push": [44, 453], "put": [430, 433, 460, 464], "puzzl": 450, "py": [278, 347, 418, 420, 421, 452, 460], "py313": 453, "pyarrow": 452, "pydant": 452, "pydoclint": [452, 453], "pydocstyl": 453, "pylint": 452, "pymatgen": 451, "pypi": [450, 452], "pyplot": [408, 410, 425, 436], "pyproject": 452, "pytest": [452, 453], "python": [30, 323, 334, 409, 428, 443, 444, 450, 451, 452, 453, 458, 460, 467], "python310": 451, "pytorch": 452, "pyupgrad": 452, "q": [111, 288, 289, 413, 457], "qei": [9, 413, 443, 444, 452], "qkg": [10, 452], "qlogei": [11, 413, 452], "qlogexpectedimprov": 413, "qlognehvi": [13, 16], "qlognei": [14, 452], "qlognoisyexpectedhypervolumeimprov": [452, 463], "qlognparego": 452, "qnegintegratedposteriorvari": 456, "qnehvi": 16, "qnei": [17, 452], "qnipv": [15, 452, 456], "qnoisyexpectedhypervolumeimprov": 452, "qpi": [19, 413], "qposteriorstandarddevi": 456, "qpstd": [18, 452, 456, 458], "qsimpleregret": 21, "qsr": [20, 452], "qt": 21, "qthompsonsampl": [433, 452], "quadrat": [115, 407, 436], "qualiti": 453, "quantif": 471, "quantifi": [433, 456, 471], "quantil": [31, 253, 255, 256, 257, 262, 266, 280, 282, 284, 286, 458], "quantiti": [31, 55, 458, 460, 462, 463, 469, 473], "quantum": 144, "qucb": [22, 413, 452, 456], "queri": [179, 189, 242, 244, 246, 436, 450, 458, 460, 461, 468], "queryselectoral": 427, "question": [453, 458, 471], "quick": 457, "quickli": 459, "qupperconfidencebound": 456, "qvarucb": 452, "r": [44, 408, 409, 410, 412, 413], "radial": 113, "radiu": [149, 452, 464], "rais": [13, 15, 16, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 97, 101, 126, 134, 157, 158, 163, 164, 184, 185, 213, 215, 221, 227, 228, 231, 232, 244, 246, 250, 253, 255, 257, 261, 262, 263, 266, 280, 282, 284, 286, 294, 318, 331, 333, 336, 338, 341, 349, 350, 351, 353, 354, 355, 357, 362, 363, 364, 379, 392, 393, 404, 405, 423, 424, 425, 440, 451, 452, 453, 457, 465], "rand": 427, "random": [15, 114, 208, 213, 215, 244, 246, 248, 285, 286, 347, 353, 391, 392, 393, 407, 408, 409, 410, 413, 424, 425, 427, 431, 433, 436, 447, 450, 452, 456, 464, 465, 468, 473], "random_campaign": 407, "random_forest": [286, 413], "random_se": [244, 248, 424, 468], "random_st": 347, "random_tie_break": [209, 392, 452], "randomforestmodel": 428, "randomforestregressor": 286, "randomforestsurrog": [413, 452, 469], "randomli": [196, 210, 392, 407, 409, 436, 456, 462, 465], "randomrecommend": [407, 408, 409, 410, 413, 418, 419, 420, 421, 423, 424, 425, 431, 433, 435, 452, 457, 465], "randomst": 347, "rang": [44, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 297, 353, 354, 407, 415, 416, 418, 419, 420, 421, 425, 430, 433, 435, 438, 439, 440, 447, 450, 452, 459, 466, 467, 468, 470, 473], "rank": 470, "rare": 452, "rastrigin": [415, 416, 439, 440], "rate": [170, 253, 433], "rather": [442, 451, 456, 467], "ration": 115, "ravel": [436, 446, 447], "raw": [196, 467], "rbf": 113, "rbfkernel": 452, "rdf": 149, "rdffingerprint": 149, "rdkit": [149, 418, 420, 421, 452, 459, 464], "rdkit2ddescriptor": [149, 409, 418, 420, 421, 452], "rdkit2ddescriptorsfingerprint": 149, "rdkitfingerprint": 149, "re": [424, 439, 440, 453, 465], "reach": [307, 309, 435], "reachabl": 460, "reactant": [462, 464], "reaction": [409, 412, 450, 459, 462, 464, 471], "reactor": [457, 471], "reactora": 471, "reactorb": 471, "reactorc": 471, "read": [144, 215, 347, 409, 412, 450, 452, 453], "read_csv": [408, 409, 424], "read_excel": 410, "readabl": [220, 366, 375, 442, 452, 454, 455, 467], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 244, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 453, 457], "readm": [452, 453], "reagent": [459, 464], "real": [371, 450, 458, 470], "realist": 468, "realiz": [242, 468], "reason": [42, 203, 204, 205, 206, 409, 439, 452, 455, 456, 457, 459, 460, 464, 468], "reassembl": 467, "rebas": 453, "rec": [418, 419, 420, 421, 435, 457, 458], "rec_finish": 457, "rec_next": 457, "rec_par": 436, "rec_pend": 457, "rec_y0": 436, "rec_y1": 436, "receiv": [455, 460, 467], "recip": 453, "recipi": 455, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 73, 84, 85, 97, 138, 141, 142, 144, 152, 155, 157, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 242, 244, 258, 260, 261, 313, 353, 355, 357, 407, 408, 409, 410, 411, 415, 416, 418, 419, 420, 421, 423, 424, 425, 431, 433, 435, 436, 443, 444, 446, 447, 448, 449, 450, 452, 453, 456, 460, 462, 464, 468, 469, 471, 472, 473], "recommendation_orig": 442, "recommendation_recr": 442, "recommended_arm_idx": 433, "recommender_with_hook": 424, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 97, 181, 183, 184, 185, 186, 191, 194, 196, 258, 260, 423, 425, 449, 452, 457], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 371, 377, 378, 450, 458, 460, 467], "record": [31, 313, 314, 450, 460, 471], "recreat": [273, 442, 467], "recreate_model": 428, "recurs": [181, 183, 184, 185, 186, 326, 327], "red": [427, 436], "redesign": 452, "redistribut": 455, "reduc": [155, 425, 433, 446, 447, 461, 464], "reduct": 472, "ref": 450, "refactor": 452, "refer": [13, 16, 242, 278, 332, 347, 353, 362, 382, 408, 409, 410, 413, 415, 416, 418, 419, 420, 421, 423, 425, 427, 428, 430, 435, 439, 440, 442, 451, 452, 458, 462, 463, 464, 465, 466, 467, 468, 469, 471], "referenc": 453, "reference_point": [13, 16], "refin": [424, 450, 452, 458, 461], "reflect": [188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 425, 452, 453, 456, 459, 464], "regard": [34, 40, 415, 416, 453, 455], "regardless": 469, "regim": [452, 462], "region": 159, "regist": [333, 422, 424], "register_custom_architectur": 452, "register_hook": [422, 423, 424, 425, 452], "registr": 452, "regress": 280, "regressor": 427, "regret": [20, 21], "regroup": 452, "regular": [21, 157, 290, 427, 438, 451, 452, 457, 471], "reinstal": 450, "rel": [13, 16, 44, 244, 354, 459, 463], "relat": [55, 122, 125, 127, 130, 132, 145, 215, 233, 301, 316, 440, 446, 447, 449, 450, 452, 458, 459, 460, 471], "relationship": [446, 447, 450, 453, 463, 471], "relative_perc": 355, "relative_threshold": [44, 452, 459], "releas": [450, 452], "relev": [53, 97, 246, 362, 363, 364, 419, 430, 452, 453, 458, 459, 461, 471, 473], "reli": [451, 452, 463], "reliabl": 464, "reloc": 452, "remain": [56, 157, 186, 250, 308, 407, 413, 418, 419, 420, 421, 430, 433, 435, 440, 442, 446, 447, 455, 464, 467, 468], "remain_switch": [186, 452], "remaind": 393, "remind": 452, "remot": 453, "remov": [52, 55, 56, 215, 221, 430, 453, 459, 466], "renam": [409, 446, 447, 452, 453], "render": [97, 427], "reoccur": 471, "reorder": 452, "reorgan": 452, "repeat": [433, 452, 453, 457, 458], "repetit": [248, 413, 424], "rephras": 459, "replac": [427, 439, 440, 452, 453], "replic": [253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 452, 463, 467, 472], "repo": 452, "report": [178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 433, 451], "repositori": [409, 450, 453], "repr": 427, "repres": [13, 16, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 117, 118, 144, 215, 250, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 349, 367, 371, 375, 392, 407, 430, 431, 433, 436, 443, 444, 450, 452, 455, 458, 463, 464, 466, 468, 473], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 338, 340, 349, 351, 353, 366, 371, 377, 378, 418, 419, 420, 421, 427, 429, 435, 442, 452, 457, 458, 464, 467, 468, 472, 473], "reproduc": [424, 433, 436, 452, 455, 472], "reproduct": 455, "request": [31, 84, 85, 126, 184, 185, 186, 228, 253, 255, 256, 257, 262, 266, 269, 280, 282, 284, 286, 311, 357, 379, 392, 393, 436, 449, 452, 457, 458, 461, 462], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 45, 51, 82, 97, 186, 221, 294, 333, 412, 423, 424, 427, 431, 433, 435, 439, 443, 449, 450, 451, 452, 453, 455, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473], "rerun": 427, "reserv": [450, 453], "reset": [31, 457], "reset_index": [446, 457], "reshap": 436, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 419, 421, 430, 467], "resolv": 342, "resort": [290, 453, 467, 473], "resource_track": 451, "resp": [216, 410, 440], "respect": [31, 196, 216, 244, 248, 312, 317, 353, 430, 431, 453, 458, 459, 461, 462, 463, 467, 468, 469, 470, 473], "respond": 449, "respons": [181, 183, 184, 185, 186, 455, 458, 465], "restart": [184, 196], "restor": 467, "restr": 21, "restrain": 464, "restrict": [215, 221, 242, 248, 250, 418, 431, 452, 461, 468, 471, 472], "result": [10, 13, 16, 31, 155, 157, 221, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 353, 361, 408, 409, 410, 412, 427, 428, 430, 431, 433, 435, 436, 438, 446, 447, 450, 452, 454, 455, 456, 458, 459, 460, 462, 464, 465, 467, 468, 471, 472, 473], "result_baselin": [446, 447], "result_fract": 447, "results_interrupt": 424, "results_uninterrupt": 424, "retain": [455, 459], "retrain": [261, 262, 469], "retriev": [215, 242, 325, 326, 327, 341, 452, 453, 468], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 97, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 198, 201, 203, 204, 205, 206, 209, 210, 213, 215, 217, 218, 221, 222, 223, 224, 226, 227, 228, 231, 232, 234, 235, 236, 238, 240, 241, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 263, 266, 269, 270, 274, 280, 282, 284, 286, 288, 289, 290, 292, 294, 297, 299, 305, 307, 308, 309, 311, 312, 313, 314, 317, 318, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 340, 341, 342, 343, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 375, 377, 378, 379, 384, 385, 386, 392, 393, 395, 400, 401, 402, 403, 404, 405, 407, 418, 424, 425, 427, 430, 433, 436, 446, 452, 458, 459, 468, 469, 473], "return_std": 427, "reus": [186, 452], "reuse_last": 184, "reveal": [425, 431, 447], "review": 453, "revis": [452, 455], "reward": [8, 433], "rework": 452, "rewrit": 452, "rff": 114, "rffkernel": 452, "rh": [45, 47, 48, 415, 416, 431, 459], "right": [45, 175, 362, 371, 408, 410, 419, 433, 450, 451, 453, 455, 459, 461, 463, 464, 470], "right_df": 362, "rihana": 454, "rim": 454, "risk": [8, 451, 455, 458], "roam": 451, "robust": [347, 450, 452, 471], "robustli": 290, "role": [452, 453, 458, 462, 463, 468, 470, 472], "room": [425, 458], "root": [409, 450, 453, 459], "round": [366, 415, 427, 428, 459], "roundtrip": [452, 467], "rout": [347, 467], "routin": 44, "row": [13, 16, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 126, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 246, 313, 317, 318, 347, 354, 357, 361, 362, 364, 366, 386, 408, 410, 418, 419, 420, 421, 430, 431, 435, 442, 452, 457, 458, 461, 466, 468], "rowei": 471, "roya": 454, "royalti": 455, "rq": 115, "rqkernel": 452, "ruff": [452, 453], "rule": [423, 452], "run": [244, 248, 408, 409, 410, 424, 425, 446, 447, 450, 451, 452, 453, 458, 461, 464, 467, 468, 472, 473], "run_full_initial_data": 408, "run_impute_mod": 410, "runner": [248, 418, 420, 421, 460], "runtim": [382, 451, 457], "runtimeerror": [184, 423], "rv": 433, "s3": 452, "s41586": [278, 360], "safe": [452, 453, 458], "safeti": 333, "sai": 459, "said": 453, "sake": 430, "same": [55, 134, 186, 221, 227, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 328, 413, 424, 427, 428, 430, 433, 436, 442, 451, 452, 459, 460, 461, 467, 468, 469, 471], "sampl": [10, 15, 21, 44, 196, 208, 209, 210, 213, 314, 347, 390, 391, 392, 393, 408, 413, 418, 419, 420, 421, 433, 435, 436, 438, 442, 447, 450, 452, 454, 462, 472], "sample_from_full_factori": [213, 452], "sample_inactive_paramet": 44, "sample_uniform": [213, 436, 438, 452, 468], "sampler": [413, 418, 419, 420, 421, 435, 442], "samples_full_factori": [213, 452], "samples_random": [213, 452], "sampling_algorithm": [209, 391, 456], "sampling_fract": [15, 456], "sampling_method": [15, 456], "sampling_n_point": [15, 456], "sampling_percentag": [196, 465], "satisfi": [40, 41, 42, 221, 415, 416, 430], "save": [408, 410, 427, 452, 468], "savefig": [408, 410, 436], "sca": 436, "scalar": [12, 125, 435, 450, 452, 458, 463, 467], "scale": [119, 171, 172, 173, 174, 175, 213, 215, 221, 347, 395, 435, 436, 446, 452, 456, 463], "scalekernel": 452, "scaler": 452, "scaling_bound": [213, 215, 221], "scatter": [97, 99], "scenario": [250, 407, 408, 409, 410, 424, 430, 446, 447, 457, 459, 463, 471, 472, 473], "scene": [463, 468, 469], "schema": 458, "schembl15068049": [408, 409, 410], "scheme": [452, 459], "scienc": [450, 454], "scientif": [452, 471], "scikit": [149, 347, 450, 452, 454, 464], "scipi": [386, 425, 433, 452], "scm": 452, "scope": 407, "screen": [328, 471], "script": [342, 427, 451, 452, 460, 473], "seaborn": [407, 408, 409, 410, 424, 446, 447], "seamlessli": 467, "search": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 38, 52, 55, 68, 73, 85, 89, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 221, 225, 244, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 313, 362, 363, 407, 410, 412, 414, 417, 418, 419, 420, 421, 423, 424, 425, 433, 435, 437, 442, 447, 452, 454, 457, 458, 459, 460, 461, 462, 465, 467, 468, 472], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 97, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 216, 220, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 407, 409, 412, 423, 424, 425, 427, 428, 430, 431, 433, 436, 438, 442, 443, 444, 446, 448, 450, 452, 458, 459, 460, 461, 462, 464, 466, 467, 468, 473], "searchspace1": 438, "searchspace2": 438, "searchspace3": 438, "searchspace_ful": 461, "searchspace_json": 467, "searchspace_reduc": 461, "searchspacetyp": [188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 215, 413, 418, 419, 420, 421, 424, 425, 435, 442, 466], "secfp": 149, "secfpfingerprint": 149, "second": [361, 384, 386, 427, 428, 435, 436, 444, 446, 459, 460, 462], "secondari": [450, 460], "section": [450, 452, 453, 455, 467], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 165, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 244, 248, 250, 253, 255, 257, 258, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 297, 299, 305, 310, 331, 337, 347, 355, 361, 368, 371, 377, 378, 395, 408, 409, 410, 415, 416, 423, 424, 428, 431, 440, 449, 450, 453, 457, 458, 460, 461, 462, 463, 464, 467, 468, 472], "seed": [244, 248, 388, 389, 424, 425, 433, 436, 450, 452, 473], "seek": [435, 463], "seem": [382, 444, 451], "seen": 456, "select": [6, 40, 41, 42, 70, 74, 82, 181, 183, 184, 185, 186, 189, 196, 206, 208, 209, 253, 255, 257, 262, 266, 280, 282, 284, 286, 308, 347, 361, 392, 413, 419, 420, 430, 431, 433, 440, 450, 452, 456, 458, 459, 462, 464, 465, 467, 469], "select_recommend": [181, 183, 184, 185, 186, 452], "selectivity_mean": 458, "selectivity_mod": 458, "selectivity_q_0": 458, "selectivity_std": 458, "self": [333, 347, 350, 400, 401, 402, 403, 423, 424, 425, 433, 453], "sell": 455, "semant": [452, 467], "sens": [57, 130, 333, 337, 361, 459, 464, 469], "sent": 455, "sentinel": [321, 322], "separ": [248, 250, 290, 331, 347, 395, 396, 425, 449, 452, 453, 455, 457, 462, 467], "sequenc": [31, 41, 45, 117, 118, 125, 130, 141, 142, 144, 155, 163, 184, 185, 213, 215, 221, 222, 223, 226, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 313, 317, 318, 333, 334, 343, 350, 356, 362, 363, 368, 458, 463, 465], "sequenti": [183, 184, 185, 186, 196, 413, 418, 419, 420, 421, 435, 442, 452, 465], "sequential_continu": [196, 452, 465], "sequential_greedy_x": 452, "sequentialgreedyrecommend": 452, "sequentialmetarecommend": [185, 465], "sequentialstrategi": 452, "seri": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 40, 41, 42, 52, 138, 141, 142, 144, 152, 155, 194, 196, 297, 299, 305, 418, 430, 452, 459, 461], "serial": [185, 221, 238, 314, 427, 448, 451, 452, 453, 459, 465, 472], "serializ": [450, 459, 465], "serialize_datafram": 467, "serialized_df": 240, "serializetostr": 427, "serialmixin": [24, 31, 35, 40, 106, 122, 139, 167, 181, 213, 215, 221, 257, 260, 269, 297, 299, 305, 371, 378, 452], "serv": [250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 362, 446, 447, 458, 459, 464], "servic": 455, "session": [460, 467], "set": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 42, 44, 55, 57, 64, 65, 97, 101, 155, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 244, 248, 273, 312, 347, 353, 360, 361, 388, 389, 408, 409, 410, 411, 413, 418, 420, 423, 428, 429, 430, 431, 433, 435, 440, 449, 450, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473], "set_box_aspect": 425, "set_dash": 424, "set_output": 347, "set_param": 347, "set_random_se": [425, 433, 436, 473], "set_size_inch": [408, 410], "set_x_pend": 26, "set_xlabel": 425, "set_xtick": 425, "set_xticklabel": 425, "set_ylabel": 425, "set_ylim": 425, "set_zlabel": 425, "setattribut": 427, "setpoint": 152, "settimeout": 427, "setup": [244, 424, 459, 468, 473], "setuptool": 452, "sever": [63, 158, 179, 407, 409, 413, 424, 427, 433, 435, 438, 447, 450, 452, 453, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 473], "sh": 462, "shall": [184, 355, 455, 463], "shap": [97, 450, 452, 454, 469, 472], "shap_valu": 469, "shape": [21, 213, 220, 303, 307, 309, 347, 392, 436, 452, 466, 473], "shapinsight": [95, 96, 98, 99, 452, 462], "shaplei": 97, "share": [253, 255, 257, 262, 266, 280, 282, 284, 286, 452, 455, 471], "shield": [278, 360, 409, 450, 464], "shift": 446, "shifted_hartmann": 446, "ship": [396, 460, 467], "shm": 451, "short": 453, "shortcut": [221, 466, 467], "shorten": [452, 453], "shot": 471, "should": [31, 44, 53, 97, 155, 186, 236, 248, 302, 317, 318, 347, 353, 355, 359, 360, 366, 370, 371, 372, 384, 418, 420, 424, 427, 430, 431, 440, 444, 450, 452, 453, 457, 458, 459, 462, 466, 468, 469, 471, 473], "show": [97, 408, 409, 410, 412, 413, 418, 419, 420, 427, 428, 430, 433, 440, 442, 443, 444, 446, 447, 459, 462], "showcas": 465, "shown": [424, 433, 447, 452, 458], "shrink": 425, "shutdown": 451, "side": [45, 157, 308, 452], "sigma": [172, 173, 174, 175, 307, 435, 454], "signal": [67, 463], "signatur": [91, 294, 331, 333, 425, 452, 453, 459, 467], "significantli": [221, 433, 446, 447, 459, 460], "silenc": 453, "silent": [452, 459], "similar": [185, 451, 452, 459, 460, 462, 464, 465, 466, 467, 471, 473], "similarli": [436, 464], "simpl": [20, 21, 323, 347, 409, 423, 424, 431, 450, 452, 457, 458, 465, 468, 470, 471], "simpler": [453, 467], "simplest": [466, 469], "simplex": [221, 472], "simplex_paramet": [221, 430, 466], "simpli": [337, 423, 424, 453, 459, 461, 463, 464, 465, 466, 467, 470, 471], "simplic": 333, "simplifi": 453, "simul": [86, 355, 420, 425, 450, 452, 471, 472], "simulate_experi": [248, 250, 468], "simulate_scenario": [250, 407, 408, 409, 410, 424, 446, 447, 452, 460, 468], "simulate_transfer_learn": [446, 468], "simulationresult": 433, "simultan": [463, 469], "sinc": [57, 157, 215, 261, 333, 347, 408, 415, 416, 428, 439, 442, 443, 444, 446, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 467, 468, 469, 471], "singer": 471, "singl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 40, 53, 97, 132, 157, 213, 215, 221, 244, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 297, 299, 305, 351, 371, 383, 392, 398, 408, 409, 410, 419, 424, 430, 435, 446, 447, 450, 452, 458, 459, 460, 461, 462, 463, 464, 466, 469, 471, 472], "single_lin": 351, "single_y0": 436, "single_y1": 436, "singledispatch": 373, "singletargetobject": [31, 297, 299, 305, 408, 409, 410, 412, 413, 418, 419, 420, 421, 424, 427, 428, 442, 443, 444, 450, 452, 469, 472], "site": 451, "situat": [97, 157, 392, 418, 420, 430, 451, 453, 457, 459, 463, 464, 467, 468, 471], "six": [430, 431], "size": [21, 104, 105, 106, 109, 111, 113, 114, 115, 184, 186, 215, 220, 221, 314, 375, 425, 427, 433, 439, 440, 446, 447, 458, 467, 468, 471, 473], "sk": 427, "skeleton": 452, "skfp": 149, "skicit": 452, "skin": 468, "skip": [218, 224, 452, 458], "skl2onnx": 427, "sklearn": [206, 382, 427], "sklearnclusteringrecommend": [203, 204, 205, 452, 457], "slightli": [242, 409, 430, 468], "slot": [429, 433, 448, 452, 459], "slot1_amount": 430, "slot1_label": 430, "slot2_amount": 430, "slot2_label": 430, "slot3_amount": 430, "slot3_label": 430, "slow": [418, 420, 421, 457, 466], "slower": [347, 457], "slowest": 452, "small": [315, 319, 415, 430, 446, 447, 452, 456, 464], "smaller": [31, 433, 458, 471], "smallest": [213, 347, 362, 466], "smart": 450, "smartli": 430, "smile": [155, 340, 342, 343, 450, 464], "smoke": 452, "smoke_test": [407, 408, 409, 410, 416, 418, 419, 421, 424, 425, 433, 436, 446, 447], "smooth": [109, 111, 175], "smoothedboxprior": 452, "smoother": 109, "sn": [407, 408, 409, 410, 424, 446, 447], "snippet": 460, "so": [31, 244, 261, 347, 361, 410, 424, 430, 433, 439, 440, 450, 451, 458, 459, 460, 461, 463, 464, 465, 467, 470], "softwar": [450, 455], "sola": 454, "sole": 455, "solut": [76, 458, 459, 463, 466, 467, 471], "solv": [261, 419, 420, 430, 433, 452], "solv_rdkit2ddesc": 420, "solvent": [408, 409, 410, 412, 413, 418, 419, 420, 421, 424, 428, 430, 431, 443, 444, 450, 459, 464], "solvent1": [430, 431], "solvent2": [430, 431], "solvent3": 430, "solvent4": 430, "solvent5": 430, "solvent8": 430, "solvent9": 430, "solvent_1": 459, "solvent_2": 459, "solvent_3": 459, "solvent_data": 424, "solvent_encoding1": 459, "solvent_encoding2": 459, "solvent_mordred_enc": 459, "solvent_rdkit2dd": [418, 421], "solvent_rdkit_enc": 459, "solvent_smil": 424, "solver": 468, "some": [53, 382, 408, 409, 410, 413, 418, 419, 420, 421, 424, 425, 427, 428, 430, 431, 436, 438, 439, 440, 442, 447, 452, 457, 458, 459, 460, 464, 465, 467, 468, 469, 473], "someth": [89, 444], "sometim": [459, 468], "somewhat": 460, "somewher": 458, "soon": [450, 458, 465], "sophist": [452, 461, 467], "sort": 160, "sourabh": 454, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 128, 130, 132, 134, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 198, 201, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 234, 235, 236, 238, 240, 241, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 263, 266, 268, 269, 270, 273, 274, 276, 278, 280, 282, 284, 286, 288, 289, 290, 292, 294, 297, 299, 302, 303, 305, 307, 308, 309, 311, 312, 313, 314, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 375, 377, 378, 379, 384, 385, 386, 388, 389, 391, 392, 393, 395, 403, 404, 405, 450, 451, 452, 453, 455], "space": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 31, 38, 45, 52, 55, 68, 73, 79, 85, 89, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 187, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 221, 224, 225, 244, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 313, 347, 362, 392, 407, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 433, 435, 436, 437, 439, 442, 447, 448, 452, 454, 457, 459, 460, 461, 462, 464, 465, 467, 468, 472], "span": [61, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 313, 423, 433, 438, 462], "spars": 347, "speak": 471, "spec": [218, 224, 235], "special": [186, 450, 451, 455, 456, 461, 471, 473], "specif": [102, 158, 165, 206, 215, 218, 231, 248, 290, 292, 325, 379, 404, 423, 424, 439, 450, 452, 453, 458, 459, 461, 464, 465, 466, 467, 468, 469, 470, 471], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 53, 90, 97, 101, 144, 155, 157, 158, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 234, 235, 244, 246, 248, 258, 307, 308, 309, 317, 332, 341, 347, 353, 356, 362, 363, 379, 392, 393, 409, 413, 415, 427, 428, 433, 435, 446, 450, 451, 452, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471], "speed": [221, 418, 420, 421, 446, 447, 460, 466], "speed_fast": 466, "speed_norm": 466, "speed_slow": 466, "speedup": [452, 471], "spell": 453, "spellcheck": 452, "sphinx": [452, 453], "split": [188, 457], "sporad": 452, "spread": 470, "sqrt": 459, "squar": [347, 433, 436, 459], "squash": 453, "stabil": [452, 460], "stabl": [102, 165, 310], "stage": [458, 459, 467], "stand": 452, "standard": [6, 18, 290, 427, 452, 458, 464], "star": 430, "start": [244, 407, 423, 424, 425, 431, 433, 436, 451, 452, 457, 464, 465, 467, 468, 471], "startup": 452, "stat": [31, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 311, 425, 431, 433, 458], "state": [181, 183, 184, 185, 186, 347, 424, 430, 449, 452, 455, 458, 461, 472], "stateless": [433, 449, 452, 461], "statement": [366, 439, 450, 455], "static": [13, 16, 215, 221, 266, 450, 453, 471], "statist": [31, 253, 255, 256, 257, 262, 266, 280, 282, 284, 286, 314, 447, 450, 452, 460, 472], "statu": 458, "std": [31, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286], "std_threshold": 290, "stem": [451, 471], "step": [218, 224, 244, 430, 433, 449, 450, 453, 458, 463, 467, 469], "sterl": 454, "steven": 409, "still": [158, 353, 424, 433, 457, 459, 460, 462, 464, 469, 471, 473], "stop": [422, 448, 452, 453], "stop_on_pi": 424, "stoppag": 455, "storag": [458, 460, 467], "store": [26, 139, 290, 297, 347, 425, 430, 433, 450, 452, 458, 473], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 89, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 194, 196, 203, 204, 205, 206, 213, 215, 220, 221, 234, 238, 248, 250, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 300, 305, 307, 308, 309, 311, 314, 317, 318, 325, 331, 332, 338, 340, 342, 343, 349, 351, 353, 356, 359, 360, 364, 366, 371, 375, 377, 378, 379, 385, 386, 428, 433, 443, 444, 446, 447], "straightforward": [458, 470, 471], "strategi": [15, 196, 215, 242, 407, 433, 452], "stream": [329, 452, 460], "streamingsequentialmetarecommend": [184, 465], "streamingsequentialstrategi": 452, "streamlin": 453, "streamlit": [450, 452], "streibel": 454, "strict": [293, 331], "strictli": [428, 443, 444], "stride": 415, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 154, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 338, 342, 343, 347, 349, 350, 351, 359, 371, 377, 378, 427, 442, 452, 458, 459, 464, 470, 472], "strip": [244, 410], "strong": 452, "strongli": 458, "strtobool": [452, 460], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 49, 234, 450, 451, 452, 453, 454, 458, 464, 467], "studi": [179, 450, 462, 465, 472], "style": [427, 446, 452, 453], "sub": [206, 452, 462, 467], "subclass": [90, 234, 325, 327, 337, 379, 413, 452, 453, 465, 467], "subfold": 460, "subgraph": 464, "subgroup": 431, "subject": 455, "sublicens": 455, "submiss": [452, 455], "submit": [26, 311, 313, 450, 453, 455], "subobject": 347, "subpackag": [452, 453, 468], "subplot": 436, "subselectioncondit": [419, 420, 452, 461, 472], "subsequ": [186, 215, 221, 248, 342, 449, 455, 458, 467, 469], "subset": [31, 122, 125, 130, 132, 155, 215, 328, 363, 392, 458, 459, 461, 464], "subspac": [26, 61, 188, 196, 212, 213, 215, 217, 219, 221, 415, 418, 419, 420, 421, 435, 438, 440, 442, 452, 459, 465, 467, 472, 473], "subspace_continu": 61, "subspace_json": 467, "subspacecontinu": [31, 61, 137, 151, 215, 217, 438, 452, 466], "subspacediscret": [31, 138, 141, 142, 144, 152, 155, 215, 217, 220, 418, 419, 420, 421, 430, 435, 442, 452, 466, 467, 473], "substanc": [149, 155, 341, 409, 412, 418, 420, 421, 431, 452, 459, 462, 464, 471], "substance_12": 459, "substance_3": 459, "substance_43": 459, "substance_data": 452, "substance_encod": 409, "substanceencod": [155, 341, 343, 418, 419, 420, 421, 452, 464], "substanceparamet": [408, 409, 410, 412, 413, 418, 419, 420, 421, 424, 428, 430, 443, 444, 450, 452, 459, 460, 462, 466, 472], "substanti": [155, 473], "substrat": 471, "subtyp": 467, "success": [299, 392, 433, 467], "success_valu": 299, "suffic": 453, "suffici": [347, 424, 466, 467], "suggest": [462, 468, 472], "suit": 453, "suitabl": [206, 221, 244, 338, 347, 453, 456, 458, 464, 468, 469, 471], "sum": [59, 117, 221, 347, 407, 417, 418, 419, 420, 424, 430, 431, 433, 436, 448, 459, 463, 466], "sum_": [459, 463], "sum_constraint": 430, "sum_constraint_1": 421, "sum_constraint_2": 421, "sum_toler": 430, "summar": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155, 297, 299, 305], "summari": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155, 297, 299, 305, 452, 453], "superior": 456, "supersed": 455, "suppli": 347, "support": [10, 31, 95, 96, 97, 98, 99, 185, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 382, 413, 418, 419, 420, 421, 424, 425, 427, 430, 435, 442, 450, 452, 453, 454, 455, 459, 462, 464, 465, 466, 468, 469], "supports_batch": 452, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 253, 255, 257, 262, 266, 280, 282, 284, 286, 452, 469], "supports_pending_experi": 452, "supports_transfer_learn": [253, 255, 257, 262, 266, 280, 282, 284, 286, 469], "suppos": [313, 459], "sure": [430, 438, 450, 453], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 74, 78, 97, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 194, 196, 203, 204, 205, 206, 213, 215, 221, 253, 255, 258, 260, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 418, 419, 420, 421, 425, 433, 435, 442, 448, 450, 452, 454, 457, 458, 459, 463, 464, 465, 471, 472], "surrogate_model": [194, 196, 413, 425, 427, 428, 433, 443, 444, 452], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 97, 194, 196, 257, 260, 452], "svg": 436, "sw": 419, "swiss": 454, "switch": [53, 182, 185, 186, 290, 413, 418, 419, 420, 421, 433, 435, 442, 450, 452, 459, 465], "switch1": 419, "switch2": 419, "switch2_left": 419, "switch2_right": 419, "switch_1": 459, "switch_2": 459, "switch_aft": [186, 443, 444, 465], "switzerland": 454, "sy": 451, "symmetri": 459, "sync": 452, "syntax": [450, 452], "synthet": [415, 416, 425, 436, 446, 447, 452], "system": [347, 376, 409, 433, 450, 451, 454, 455, 460, 468, 471], "t": [288, 289, 330, 338, 408, 409, 410, 412, 413, 420, 425, 436, 446, 447, 449, 461, 464, 467, 468], "t1": [467, 468], "t2": 467, "t3": 467, "t_1": 463, "t_2": 463, "t_3": 463, "t_i": 463, "tab": 436, "tabl": [366, 427, 452, 458, 459, 462], "tabular": 468, "tag": [450, 452, 467], "tailor": 458, "take": [8, 49, 109, 138, 152, 157, 158, 253, 255, 257, 262, 266, 276, 280, 282, 284, 286, 300, 423, 430, 452, 457, 458, 459, 460, 463, 464, 465, 471], "taken": [184, 424, 452, 458, 461, 463], "tantamount": 456, "target": [12, 13, 16, 31, 79, 97, 122, 123, 125, 129, 130, 131, 132, 134, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 242, 244, 245, 246, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 290, 299, 302, 303, 305, 333, 347, 353, 356, 357, 363, 364, 365, 368, 384, 385, 387, 405, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 424, 425, 427, 428, 433, 439, 440, 442, 443, 444, 446, 447, 448, 450, 452, 457, 458, 460, 462, 467, 468, 469, 472], "target_1": [419, 420, 421, 435, 457, 463, 470], "target_2": [435, 457, 463, 470], "target_3": [435, 457, 463], "target_3a": 470, "target_3b": 470, "target_a": 469, "target_b": 469, "target_cumbest": [407, 446, 447], "target_index": [97, 452, 462], "target_max": 458, "target_transform": 435, "targetmod": [305, 467, 470], "targetnam": 244, "targettransform": [305, 452, 470], "task": [142, 215, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 297, 299, 305, 433, 452, 458, 465, 467, 468, 471], "task_idx": [215, 452], "task_param": [446, 447, 468], "task_paramet": 467, "task_parameter_json": 467, "task_parameter_reconstruct": 467, "taskparamet": [228, 446, 447, 452, 461, 467, 468, 472], "tb": 473, "tbodi": 427, "td": 427, "technic": [221, 457, 468, 471], "techniqu": [206, 465], "technologi": 454, "telemetri": [452, 454, 472], "tell": 312, "temp": [418, 420, 454], "temp_c": [408, 409, 410, 424], "temperatur": [408, 410, 412, 413, 418, 420, 423, 427, 428, 442, 459, 464, 466, 471], "temperature_resolut": 418, "temperature_valu": 424, "temporari": [197, 215, 389, 424, 452, 460, 467], "temporarili": [452, 473], "temporary_se": 473, "tempt": 471, "tenac": 452, "tend": 425, "tensor": [26, 45, 253, 288, 289, 356, 367, 371, 395, 397, 446, 452], "term": [112, 242, 424, 433, 453, 455, 458, 462, 466, 467, 468, 471], "termin": [424, 425, 451, 455], "terminologi": 472, "tert": [408, 409, 410, 412, 413], "test": [221, 244, 262, 353, 433, 446, 447, 450, 451, 452, 453, 458, 462, 468, 473], "test_funct": [415, 416, 425, 439, 440, 446, 447], "test_scenario": [408, 410], "testabl": [86, 244], "testfunct": [415, 416, 439, 440], "testfunctionclass": [415, 416, 439, 440], "text": [34, 427, 436, 455, 459, 460, 463], "textcont": 427, "th": [318, 459], "than": [31, 65, 85, 152, 184, 185, 186, 196, 213, 215, 228, 318, 337, 347, 351, 357, 393, 409, 420, 424, 431, 456, 459, 460, 462, 464, 467, 469], "thei": [158, 179, 189, 308, 359, 363, 413, 421, 424, 430, 433, 438, 452, 453, 457, 458, 459, 462, 464, 465, 466, 467, 470, 471, 473], "them": [38, 276, 354, 413, 450, 451, 452, 453, 457, 459, 460, 461, 462, 464, 465, 467, 471], "theme": 452, "theori": 455, "therebi": 221, "therefor": [44, 186, 253, 255, 257, 262, 266, 280, 282, 284, 286, 413, 451, 458, 467, 469, 471], "therein": 452, "thereof": 455, "thf": 459, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 181, 183, 184, 185, 186, 188, 196, 203, 204, 205, 206, 213, 215, 221, 242, 246, 248, 250, 253, 255, 257, 258, 260, 261, 262, 266, 276, 280, 282, 284, 286, 290, 314, 317, 333, 334, 337, 342, 347, 353, 355, 357, 358, 360, 362, 366, 407, 423, 424, 425, 427, 428, 430, 431, 433, 436, 438, 442, 443, 444, 446, 447, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473], "think": [433, 464], "third": [345, 435, 455, 462, 468], "third_parti": 347, "thompson": [21, 454], "thomson": 21, "those": [63, 158, 186, 188, 242, 347, 392, 413, 451, 455, 457, 459, 468], "though": 471, "three": [409, 430, 431, 435, 436, 450, 458, 459, 462, 463, 465, 466, 471], "threshold": [42, 44, 144, 155, 157, 159, 186, 196, 290, 360, 415, 420, 421, 424, 430, 452, 459, 464], "thresholdcondit": [58, 59, 415, 420, 421, 430, 472], "through": [31, 215, 307, 317, 353, 363, 428, 430, 433, 435, 450, 452, 453, 455, 459, 463, 467, 468, 472], "throughout": 186, "throw": [342, 459], "thrown": [246, 410, 424, 443, 451, 457, 463], "thu": [196, 333, 363, 408, 409, 415, 416, 418, 419, 420, 421, 427, 428, 430, 433, 435, 439, 440, 442, 451, 453, 458, 460, 461, 464, 465, 467, 468, 471, 473], "tick": 425, "tight_layout": 436, "time": [10, 196, 314, 393, 416, 423, 430, 433, 450, 452, 457, 458, 459, 460, 461, 464, 467, 468, 469, 473], "timeout": [452, 460], "timer": 423, "titl": [427, 436, 455], "tl": 446, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 452], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 371, 377, 378], "to_factori": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119], "to_fram": 407, "to_gpytorch": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 167, 169, 170, 171, 172, 173, 174, 175, 452], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 371, 377, 378, 427, 428, 442, 458, 467], "to_keep": 361, "to_ndarrai": 371, "to_numpi": [425, 436], "to_object": [297, 299, 305, 407, 415, 416, 425, 433, 436, 439, 440, 446, 447, 463, 468], "to_polar": [40, 41, 42], "to_searchspac": [137, 138, 139, 141, 142, 144, 151, 152, 155, 213, 221, 433, 438, 452, 461], "to_str": 452, "to_subspac": [137, 138, 141, 142, 144, 151, 152, 155, 452], "to_tensor": [371, 427, 452], "to_tupl": [371, 436], "tobia": 454, "togeth": [38, 69, 318, 413, 433, 440, 450, 452, 459], "toggl": [31, 452], "toggle_discrete_candid": [31, 452, 461], "toggleabl": 427, "toggleable__cont": 427, "toggleablecont": 427, "tol": 427, "toler": [31, 42, 152, 221, 404, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 424, 427, 428, 430, 435, 439, 440, 442, 443, 444, 450, 452, 459], "tolist": 415, "toluen": 464, "toml": 452, "too": [415, 468, 471], "tool": [339, 450, 452, 459, 467], "toolbox": 450, "top": [452, 453], "topic": 458, "topolog": 464, "topologicaltors": 149, "topologicaltorsionfingerprint": 149, "torch": [356, 371, 427, 446, 452], "toronto": 454, "tort": 455, "total": [185, 186, 392, 430, 431, 433, 466], "total_bas": 431, "total_phase_ag": 431, "toward": [169, 353, 459], "towel": 449, "tox": [452, 453], "tr": 427, "tracebackexcept": 451, "track": [178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 221, 424, 455, 461], "trade": [8, 455, 463], "trademark": 455, "tradit": [409, 429, 430, 448, 450, 452], "train": [81, 97, 178, 184, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 250, 253, 255, 257, 258, 260, 261, 262, 266, 280, 282, 284, 286, 290, 426, 436, 446, 447, 452, 468], "train_i": 427, "train_x": 427, "training_funct": 447, "trajectori": [242, 407, 424, 433, 458, 468], "transfer": [249, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 413, 418, 419, 420, 421, 435, 442, 446, 448, 450, 452, 455, 464, 469, 472], "transform": [31, 81, 122, 125, 130, 132, 138, 139, 141, 142, 144, 152, 155, 213, 215, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 297, 299, 303, 305, 343, 347, 356, 363, 368, 371, 372, 395, 418, 419, 420, 421, 442, 452, 455, 460, 464, 469, 470], "transform_rep_exp2comp": 452, "transformermixin": 347, "transit": 452, "translat": [38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 452, 455, 461, 464], "transmiss": 467, "transmit": 314, "transport": 347, "travers": 452, "treasur": 472, "treat": [155, 159, 253, 255, 257, 262, 266, 280, 282, 284, 286, 409, 450, 459, 464, 470, 473], "tree": 452, "tremend": 409, "trend": 471, "tri": 466, "triangl": 309, "triangular": [303, 309, 435, 470], "tricki": 462, "tricyclohexylphosphin": [408, 409, 410], "trigger": [184, 317, 424, 428, 433, 452, 453, 457, 463, 467], "trim": 427, "trivial": [269, 282, 463, 464, 469], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 97, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 196, 209, 215, 248, 266, 299, 308, 326, 327, 331, 337, 338, 347, 351, 361, 392, 404, 409, 413, 415, 416, 418, 419, 420, 421, 425, 427, 428, 430, 433, 435, 439, 440, 442, 443, 444, 446, 447, 452, 457, 458, 459, 460, 461, 462, 464, 467], "truncat": [450, 460], "trust": [427, 460], "truth": 338, "truthi": 460, "try": [89, 353, 408, 409, 410, 424, 427, 428, 444, 451, 452, 473], "tune": 450, "tupl": [13, 16, 31, 41, 45, 97, 104, 105, 106, 109, 111, 113, 114, 115, 117, 118, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 160, 213, 215, 220, 221, 289, 317, 324, 331, 334, 350, 353, 367, 371, 375, 395, 452], "turn": [44, 213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 375, 438, 450, 451, 452, 459, 460, 463], "turnaround": 468, "twice": [461, 463], "two": [13, 16, 34, 55, 64, 65, 126, 186, 196, 208, 242, 318, 323, 356, 384, 392, 407, 408, 410, 423, 430, 433, 435, 436, 440, 446, 447, 449, 450, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470], "twofold": 433, "twophasemetarecommend": [408, 410, 413, 418, 419, 420, 421, 424, 425, 427, 428, 433, 435, 440, 442, 443, 444, 450, 452, 465], "twophasestrategi": 452, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 77, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 154, 155, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 198, 201, 203, 204, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 223, 224, 226, 227, 228, 231, 232, 234, 235, 236, 238, 240, 241, 244, 246, 248, 250, 253, 255, 256, 257, 258, 260, 262, 263, 266, 269, 270, 274, 280, 282, 284, 286, 288, 289, 290, 292, 293, 294, 297, 299, 300, 305, 307, 308, 309, 311, 312, 313, 314, 317, 318, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 340, 341, 342, 343, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 375, 377, 378, 379, 381, 382, 384, 385, 386, 392, 393, 395, 397, 400, 401, 402, 403, 404, 405, 409, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 431, 433, 435, 442, 443, 444, 450, 452, 453, 455, 456, 459, 462, 463, 464, 465, 466, 469, 471, 472], "typealia": 300, "typeddict": [292, 452], "typeerror": [31, 97, 101, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 333, 353, 354, 379, 393, 404, 405, 424, 425, 428], "typeguard": 330, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 226, 234, 235, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 289, 290, 297, 299, 305, 327, 328, 329, 330, 350, 356, 363, 365, 371, 377, 378, 379], "typic": [15, 333, 351, 409, 450, 457, 458, 462, 464, 467, 473], "typing_extens": 453, "typo": [452, 453], "u": [21, 407, 408, 409, 410, 423, 425, 430, 431, 433, 438, 447, 450, 456, 457, 459, 463], "ucb": [8, 413, 452, 456, 458, 467], "ultim": 453, "ultra": [443, 444], "un": 452, "unabl": 427, "unavail": 452, "unawar": 457, "unbound": [371, 423], "uncaught": 452, "uncertainti": [8, 15, 413, 472], "unchang": [157, 347], "uncharacter": 471, "uncorrel": [360, 471], "undefin": [253, 461], "under": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 314, 363, 421, 425, 433, 436, 450, 451, 455, 464], "underflow": 87, "underli": [31, 55, 424, 433, 450, 452, 458, 462, 465, 467], "underscor": 452, "understand": [450, 471], "undesir": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 92, 459, 461, 464, 473], "undo": 451, "unequ": 421, "unevenli": 464, "unexpect": [77, 89, 452], "unfinish": 457, "unfortun": 471, "unhandl": 452, "uniform": [213, 253, 354, 355, 452], "uniformli": [208, 392], "uniniti": 337, "uninstal": [88, 450], "unintend": [92, 333, 452, 453], "unintention": 473, "union": [13, 16, 31, 126, 159, 244, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 307, 308, 309, 379, 385, 386, 440, 455, 466], "uniqu": [56, 134, 158, 430, 452, 464], "unit": [137, 138, 139, 141, 142, 144, 151, 152, 155, 220, 297, 299, 305, 375, 377, 452], "unknown": [185, 392, 407, 433, 452, 469, 471], "unlabel": 356, "unless": [450, 453, 455, 460, 464, 467], "unlik": [12, 13, 14, 16, 17, 430, 463, 473], "unlock": 472, "unmaintain": 452, "unmatch": 331, "unmatchedattributeerror": 331, "unmeasur": [244, 410], "unnecessari": [452, 458], "unpromis": [424, 457], "unreach": 452, "unrealist": 468, "unrecogn": 353, "unrestrict": 333, "unsaf": 452, "unspecifi": [322, 452, 467], "unspecifiedtyp": 31, "unstructur": [236, 467], "unstructure_bas": 234, "unsupervis": 347, "unsupport": [213, 246, 457], "until": [181, 183, 184, 185, 186, 244, 433, 450, 457, 468], "untouch": 354, "untransform": [31, 469], "unusedobjectwarn": [424, 452, 457], "unveil": 447, "unwant": 38, "up": [31, 221, 244, 246, 407, 408, 409, 410, 411, 418, 420, 423, 425, 429, 430, 431, 436, 440, 446, 447, 450, 451, 452, 456, 459, 460, 463, 473], "updat": [31, 347, 409, 412, 452, 453, 457], "update_measur": [31, 452], "upgrad": 452, "upon": [188, 269, 451, 452, 453, 459, 466, 469, 471], "upper": [8, 22, 159, 175, 215, 221, 307, 308, 309, 371, 413, 425, 435, 436, 446, 447, 452, 459, 470, 473], "upper_bound": [418, 419, 420, 421, 442, 466], "upper_threshold": 159, "upperconfidencebound": [22, 456, 467], "upstream": 453, "urg": 462, "url": [460, 471], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 69, 73, 97, 109, 125, 126, 144, 149, 152, 155, 158, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 222, 223, 235, 244, 246, 248, 253, 255, 257, 262, 263, 266, 280, 282, 284, 286, 293, 303, 313, 314, 320, 333, 334, 342, 343, 347, 353, 355, 356, 362, 373, 381, 382, 392, 397, 407, 415, 416, 422, 423, 424, 425, 426, 429, 430, 431, 438, 442, 443, 444, 446, 447, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 470, 471, 472, 473], "usa": 454, "usabl": [337, 451, 452, 464, 467], "usag": [374, 450, 452, 459, 460, 465, 472], "use_comp_rep": [97, 101, 462], "use_torch": [356, 415, 416, 425, 439, 440, 446, 447], "user": [52, 53, 67, 82, 92, 144, 147, 253, 255, 257, 262, 266, 280, 282, 284, 286, 294, 311, 347, 355, 377, 378, 412, 413, 418, 435, 444, 450, 451, 452, 453, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471], "userguid": 310, "usernam": [311, 452, 460], "userwarn": 451, "uses_shap_explain": 452, "usort": 452, "usr": 149, "usrcat": 149, "usrcatfingerprint": 149, "usrfingerprint": 149, "usual": [244, 408, 409, 410, 443, 451, 460, 462, 464], "util": [31, 196, 209, 213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 313, 320, 322, 323, 347, 371, 377, 378, 391, 395, 407, 409, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 433, 435, 436, 439, 440, 446, 447, 450, 452, 456, 457, 458, 462, 463, 464, 465, 467, 468, 469, 471, 472], "uv": 452, "v": 471, "val": [49, 338, 446], "val_from_param1": 57, "val_from_param2": 57, "valid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 157, 158, 215, 218, 221, 224, 262, 357, 362, 418, 441, 443, 448, 451, 452, 453, 458, 459, 468], "validate_compat": 262, "validate_config": [31, 444, 452, 458], "validate_parameter_input": 31, "validate_target_input": 31, "valu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 44, 45, 53, 55, 79, 97, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 125, 126, 130, 132, 138, 141, 142, 144, 146, 147, 149, 152, 155, 157, 158, 159, 162, 163, 164, 186, 194, 196, 203, 204, 205, 206, 213, 215, 221, 222, 223, 242, 244, 246, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 292, 299, 300, 302, 307, 308, 309, 314, 317, 321, 322, 328, 331, 338, 347, 349, 353, 354, 355, 357, 359, 362, 363, 366, 371, 373, 379, 384, 385, 386, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 415, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 433, 435, 436, 439, 440, 442, 443, 444, 446, 447, 450, 452, 453, 456, 457, 459, 460, 461, 462, 463, 470, 471, 472, 473], "valuabl": [465, 468], "valueerror": [13, 15, 16, 31, 44, 63, 64, 65, 97, 101, 126, 134, 157, 158, 163, 164, 213, 215, 221, 227, 244, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 294, 318, 331, 336, 338, 341, 349, 351, 353, 355, 357, 362, 363, 364, 392, 393, 404, 405, 440, 451], "var": [31, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 433, 472], "vari": [31, 221, 409, 460, 463], "variabl": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 297, 312, 314, 383, 398, 439, 450, 452, 453, 459, 464, 465, 467, 469], "varianc": [8, 15, 108, 282, 358, 452, 456], "variance_initial_valu": 108, "variance_prior": 108, "variant": [413, 446, 462, 471], "variat": 436, "varieti": [439, 453, 467, 468], "variou": [347, 371, 430, 437, 452, 457, 462, 465, 468], "varucb": 452, "vector": [34, 427, 452, 454, 463], "vendor": 464, "verbal": 455, "verbos": [427, 428, 452], "veri": [347, 418, 420, 435, 457, 460, 462, 464, 469, 473], "verifi": [337, 415, 418, 419, 420, 421, 430, 431, 438, 440, 442, 450, 453], "versa": [446, 471], "versatil": 465, "version": [215, 311, 347, 382, 418, 420, 421, 430, 433, 438, 446, 447, 450, 451, 452, 453, 455, 467], "vert": 425, "via": [12, 15, 21, 30, 31, 44, 97, 186, 196, 209, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 313, 325, 333, 353, 361, 410, 416, 423, 424, 427, 438, 450, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 470, 471, 472], "via_init": 467, "via_json": 467, "viabl": [85, 435], "vice": [446, 471], "view": [213, 221, 425, 466], "view_init": 425, "violat": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 80, 452], "viridi": 425, "virtual": 453, "visibl": 452, "visual": [409, 446, 447, 462, 470], "vitro": 457, "vivo": 457, "volum": 471, "vpn": [450, 460], "vsa": 149, "vsafingerprint": 149, "vulner": [452, 453], "w_i": 463, "wa": [15, 70, 71, 74, 78, 79, 88, 92, 158, 186, 253, 255, 257, 262, 266, 280, 282, 284, 286, 347, 349, 353, 357, 393, 409, 451, 452, 453, 455, 460, 462, 464, 467, 471], "wai": [215, 423, 430, 431, 437, 438, 446, 449, 450, 457, 460, 461, 462, 464, 466, 467, 468, 469, 470, 471, 473], "wait": 457, "wall": 10, "want": [52, 413, 418, 430, 433, 440, 447, 450, 452, 453, 458, 459, 460, 461, 462, 464, 465, 467, 469, 470], "warn": [66, 334, 418, 420, 421, 424, 439, 440, 452, 453], "warranti": [450, 455], "watch": 423, "water": [418, 419, 420, 421, 430, 459, 464], "waterfal": [97, 99, 452], "we": [26, 242, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 431, 433, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 469, 470, 471, 472, 473], "web": 453, "weber": 454, "weight": [125, 126, 386, 435, 463, 467], "weight_kdalton": 464, "welcom": 453, "well": [311, 347, 413, 424, 429, 449, 452, 453, 458, 459, 462, 464, 468], "were": [31, 75, 83, 353, 410, 447, 451, 452, 457, 459, 460, 464, 466], "what": [158, 184, 215, 242, 347, 353, 395, 407, 427, 435, 444, 449, 453, 456, 458, 462, 464, 471, 472], "whatsnew": 323, "when": [13, 16, 31, 44, 53, 89, 152, 157, 159, 184, 185, 186, 194, 196, 215, 248, 253, 255, 257, 262, 263, 266, 280, 282, 284, 286, 294, 321, 322, 331, 333, 337, 347, 351, 353, 356, 393, 418, 419, 421, 423, 428, 430, 431, 433, 435, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473], "whenev": [26, 184, 353, 467], "where": [13, 16, 21, 26, 34, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 242, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 317, 353, 392, 408, 409, 410, 413, 418, 420, 430, 433, 450, 451, 452, 453, 455, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471], "wherea": 467, "wherev": [455, 457], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 137, 138, 139, 141, 142, 144, 151, 152, 155, 196, 213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 312, 355, 364, 371, 430, 452, 455, 458, 460, 461, 470], "which": [13, 15, 16, 31, 40, 41, 42, 44, 92, 97, 122, 125, 130, 132, 158, 159, 178, 179, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 215, 221, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 313, 314, 333, 337, 347, 353, 355, 360, 362, 365, 366, 384, 385, 395, 407, 409, 413, 416, 423, 424, 430, 431, 433, 438, 439, 440, 444, 446, 447, 450, 451, 452, 453, 455, 456, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473], "while": [215, 218, 224, 347, 424, 433, 435, 447, 451, 452, 455, 456, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471], "whilst": 353, "whim": 149, "whimfingerprint": 149, "whole": 455, "whom": 455, "whose": [126, 157, 158, 215, 246, 328, 331, 356, 407, 423, 430, 457, 468], "wide": 468, "wider": 470, "width": [366, 427], "wieczorek": 454, "william": 471, "willing": 458, "win": [253, 433], "win_rat": 433, "window": [427, 452, 460], "winerror": 451, "wise": 386, "wish": 467, "within": [31, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 347, 404, 438, 452, 455, 459, 460, 464, 469, 471, 472, 473], "without": [185, 446, 447, 450, 452, 455, 457, 458, 459, 460, 464, 468, 471, 473], "won": 464, "work": [26, 287, 317, 347, 356, 418, 420, 421, 424, 435, 442, 444, 450, 452, 453, 454, 455, 457, 459, 460, 465, 467, 468], "workaround": [451, 452], "workflow": [427, 450, 458, 467, 472], "world": [450, 458], "worldwid": 455, "worst": [13, 16, 244, 246, 248, 410], "would": [56, 87, 157, 158, 242, 244, 250, 261, 423, 430, 433, 450, 453, 457, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 471, 473], "wrap": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 266, 270, 288, 289, 333, 450, 452, 463], "wrapper": [1, 25, 248, 250, 262, 334, 446, 447, 450, 465], "write": [450, 451, 455, 467], "writetext": 427, "written": [439, 440, 453, 455], "wrong": [444, 452], "wrongli": 451, "www": [450, 455], "x": [26, 123, 159, 217, 244, 246, 270, 324, 330, 334, 347, 350, 367, 384, 395, 407, 408, 409, 410, 418, 419, 420, 421, 424, 425, 430, 435, 442, 446, 447, 450, 452, 466, 469], "x0": [436, 466], "x0_mesh": 436, "x1": [436, 466], "x1_mesh": 436, "x2": 466, "x_": [407, 415, 416, 438, 439, 440], "x_1": [415, 416, 438, 439, 440, 459], "x_2": [415, 416, 438, 439, 440, 459], "x_3": [415, 416, 438, 439, 440, 459], "x_4": [415, 416, 438, 439, 440], "x_5": 440, "x_6": 440, "x_i": 459, "x_new": 347, "x_pend": 26, "xlabel": 436, "xlsx": [408, 409, 410], "xpho": [408, 409, 410], "xxxx": 451, "xylen": [408, 409, 410, 412, 413], "y": [278, 338, 347, 360, 384, 407, 408, 409, 410, 424, 425, 427, 430, 446, 447, 450, 471], "y0": 436, "y0_mesh": 436, "y1": 436, "y1_mesh": 436, "ye": 338, "year": 471, "yet": [26, 452, 457, 465], "yield": [6, 109, 256, 408, 409, 410, 412, 413, 418, 424, 427, 428, 430, 440, 442, 443, 444, 450, 452, 456, 462, 463, 467], "yield_cumbest": [408, 409, 410, 424], "yield_mean": 458, "yield_mod": 458, "yield_q_0": 458, "yield_std": 458, "ylabel": 436, "yml": 452, "you": [31, 52, 409, 413, 415, 423, 428, 430, 433, 439, 440, 443, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473], "your": [409, 423, 430, 433, 440, 449, 450, 451, 452, 453, 455, 458, 459, 460, 461, 462, 464, 467, 468, 469, 470, 471, 472, 473], "your_branch_nam": 453, "yourself": 433, "z": [425, 450], "zdir": 425, "zero": [44, 63, 65, 157, 159, 169, 347, 358, 430, 433, 459, 471], "zip": [424, 425], "\u00b5fmt": 452, "\u0161o\u0161i\u0107": [450, 454]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.IncompleteMeasurementsError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InputDataTypeWarning", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoMeasurementsError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSInitialization", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.make_dict_validator", "baybe.surrogates.validation.type_validation_converter", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.clustering_algorithms", "baybe.utils.clustering_algorithms.third_party", "baybe.utils.clustering_algorithms.third_party.kmedoids", "KMedoids", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.conversion.to_string", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.handle_missing_values", "baybe.utils.dataframe.normalize_input_dtypes", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.metadata", "MeasurableMetadata", "Metadata", "baybe.utils.metadata.to_metadata", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 453, "0": 452, "01": 452, "02": 452, "03": 452, "04": 452, "05": 452, "06": 452, "07": 452, "08": 452, "09": 452, "1": 452, "10": 452, "11": 452, "12": 452, "13": 452, "14": 452, "15": 452, "16": 452, "17": 452, "19": 452, "2": 452, "2022": 452, "2023": 452, "2024": 452, "2025": 452, "21": 452, "23": 452, "24": 452, "27": 452, "28": 452, "29": 452, "3": 452, "31": 452, "4": 452, "5": 452, "6": 452, "7": 452, "8": 452, "9": 452, "A": 450, "For": 464, "On": 462, "The": [433, 443, 450, 461, 467, 468, 471], "abbrevi": 467, "acqf": 2, "acquisit": [1, 2, 23, 25, 27, 28, 29, 413, 457, 458], "acquisitionfunct": 24, "action": 471, "activ": [456, 464], "activate_paramet": 157, "ad": [412, 452, 457, 458, 471, 473], "add_fake_measur": 353, "add_noise_to_perturb_degenerate_row": 354, "add_parameter_nois": 355, "addendum": 435, "addit": 430, "additivekernel": 117, "advanc": [450, 469], "altern": 467, "amount": 430, "an": 433, "appli": 461, "arm": [432, 433], "arm64": 451, "arrai": 468, "arrays_to_datafram": 356, "assembli": 467, "asynchron": 457, "attr": 453, "augment": [316, 317, 318], "auto": 469, "automat": 467, "avail": [413, 469], "avx": 451, "back": 450, "backtest": [406, 446], "bandit": [252, 432, 433], "base": [23, 33, 103, 121, 123, 136, 166, 177, 180, 190, 193, 200, 254, 256, 296, 408, 409, 410, 415, 416, 430, 431, 440, 461, 468], "basesequentialmetarecommend": 183, "basic": [107, 168, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 411, 412, 458, 460, 462, 467], "basickernel": 104, "batch": 458, "batchify_ensemble_predictor": 288, "batchify_mean_var_predict": 289, "batteri": 450, "bayb": [0, 1, 2, 23, 25, 27, 28, 29, 30, 32, 33, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 107, 116, 120, 121, 123, 124, 126, 127, 129, 131, 133, 134, 135, 136, 140, 143, 145, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 176, 177, 179, 180, 182, 187, 189, 190, 192, 193, 195, 197, 198, 199, 200, 202, 207, 211, 212, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259, 261, 263, 264, 265, 267, 270, 271, 272, 274, 275, 277, 279, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 412, 450, 453], "bayesian": [192, 193, 195, 197, 198, 450, 465], "bayesianlinearsurrog": 280, "bayesianrecommend": 194, "bell_transform": 307, "bernoulli": 433, "betabernoullimultiarmedbanditsurrog": 253, "betaprior": 169, "binari": [298, 300], "binarytarget": 299, "black": [407, 433], "block_deserialization_hook": 231, "block_serialization_hook": 232, "bo": 462, "boolean": [335, 336, 337, 338], "both": 442, "botorch": [195, 439], "botorchrecommend": 196, "bound": [423, 463, 466], "box": [407, 433], "break": 452, "build": [433, 466], "bytes_to_human_read": 375, "cach": [458, 460], "call": 461, "callabl": [415, 416, 440, 468], "campaign": [30, 31, 407, 408, 409, 410, 413, 415, 416, 418, 419, 421, 424, 427, 428, 435, 436, 439, 440, 442, 443, 458], "candid": [458, 461], "cardinalityconstraint": 34, "case": 433, "cast": 463, "catch_constant_target": 290, "categor": 140, "categoricalencod": 146, "categoricalparamet": [141, 464], "caution": 461, "challeng": 459, "chang": 452, "changelog": 452, "check_if_in": 336, "chemic": 450, "chemistri": [339, 340, 341, 342, 343], "choicevalu": 300, "class": 453, "classproperti": 323, "clone": 450, "closer_el": 384, "closest_el": 385, "cluster": [202, 465], "clustering_algorithm": [344, 345, 346], "code": 453, "columntransform": 395, "compar": 442, "compon": 423, "composit": [116, 259, 469], "compositekernel": 105, "compositesurrog": 260, "comput": [459, 462], "condit": [39, 40, 459], "config": [443, 444, 458], "configur": [427, 428, 443, 461, 463, 467], "constraint": [32, 33, 35, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 414, 415, 416, 417, 418, 419, 420, 421, 430, 431, 459, 461, 466, 473], "construct": [408, 409, 410, 415, 416, 430, 439, 440, 463, 466], "constructor": [466, 467], "continu": [43, 212, 414, 416, 430, 438, 456, 459, 464, 466, 471, 473], "continuouscardinalityconstraint": [44, 459], "continuousconstraint": 36, "continuouslinearconstraint": [45, 459], "continuouslinearequalityconstraint": 47, "continuouslinearinequalityconstraint": 48, "continuousnonlinearconstraint": 37, "continuousparamet": 137, "contribut": 453, "contributor": 454, "control": [458, 461], "conveni": 463, "convent": 453, "convers": [348, 349, 350, 351, 463, 467], "convert": [233, 427], "convert_acqf": 28, "convert_bound": 372, "convert_to_float": 324, "copi": 467, "core": [214, 217, 218, 230, 231, 232, 233, 234, 235, 236, 243, 244, 265, 272, 274], "cpu": 451, "creat": [407, 408, 409, 410, 413, 415, 416, 418, 419, 420, 421, 427, 428, 435, 438, 439, 442, 443, 446, 447, 458, 466], "create_fake_input": 357, "creation": [408, 409, 410, 430, 431, 458, 473], "current": 469, "custom": [143, 261, 263, 407, 418, 422, 423, 426, 427, 428, 469], "customdiscreteparamet": [144, 464], "customencod": 147, "customonnxsurrog": 262, "data": [408, 409, 410, 466, 471], "datafram": [352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 415, 416, 440, 466, 467, 468], "de": [442, 467], "default": [275, 466, 467], "defaultkernelfactori": 276, "defin": [407, 415, 416, 423, 424, 425, 435, 436, 439, 440, 444, 446, 447, 450], "definit": 424, "depend": [419, 450, 464], "deprec": [46, 47, 48, 49, 452], "deprecationerror": 67, "descript": 435, "deseri": 467, "deserialize_datafram": 240, "design": [450, 453], "desir": [124, 126, 458], "desirabilityobject": [125, 463], "develop": 453, "df_apply_dependency_augment": 317, "df_apply_permutation_augment": 318, "df_drop_single_value_column": 358, "df_drop_string_column": 359, "df_uncorrelated_featur": 360, "dictionari": [443, 444], "differ": 413, "dimens": 440, "discret": [50, 219, 222, 223, 224, 417, 418, 419, 420, 430, 439, 458, 459, 464, 466], "discretecardinalityconstraint": [51, 459], "discreteconstraint": 38, "discretecustomconstraint": [52, 459], "discretedependenciesconstraint": [53, 459], "discreteexcludeconstraint": [54, 459], "discretelinkedparametersconstraint": [55, 459], "discretenolabelduplicatesconstraint": [56, 459], "discreteparamet": 138, "discretepermutationinvarianceconstraint": [57, 459], "discreteproductconstraint": [58, 459], "discretesamplingmethod": 391, "discretesumconstraint": [59, 459], "discuss": 433, "disk": 460, "do": 468, "docstr": 453, "document": 428, "domin": 463, "dtypefloatnumpi": 381, "dtypefloatonnx": 382, "dtypefloattorch": 397, "dummi": 320, "duplic": 430, "dure": 473, "dynam": 461, "edbo": 277, "edbokernelfactori": 278, "effici": 473, "emptysearchspaceerror": 68, "encod": 464, "end": 450, "enum": [127, 145, 301], "environ": 460, "equival": 467, "estim": 473, "exampl": [408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 427, 428, 435, 439, 440, 442, 443, 444, 448, 450, 462], "except": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "exceptiongroup": 451, "exclud": 461, "exclus": [420, 421, 461], "expect": 471, "expectedimprov": 3, "experi": [418, 419, 420, 421, 427, 428, 435, 442, 450, 457, 468], "experiment": [458, 460, 462], "expir": 452, "explain": [95, 462], "explicit": 466, "extend": 453, "extract": 469, "fake": 473, "faq": 449, "farthest_point_sampl": 392, "featur": 460, "field": 467, "file": [443, 444], "filter_df": 361, "find_subclass": 325, "finite_float": 400, "fix": [451, 452], "float": 460, "fpsiniti": 208, "fpsrecommend": 209, "fraction_to_float": 349, "from": [443, 450, 452, 458, 466, 467], "full": [408, 409, 410, 466], "function": [407, 408, 409, 410, 413, 415, 416, 424, 435, 439, 440, 453, 457, 458], "further": 458, "fuzzy_row_match": 362, "gammaprior": 170, "gaussian_process": [264, 265, 267, 270, 271, 272, 274, 275, 277], "gaussianmixtureclusteringrecommend": 203, "gaussianprocesspreset": 273, "gaussianprocesssurrog": 266, "gener": [446, 447, 453, 465], "geom_mean": 386, "get": [412, 458, 461], "get_base_structure_hook": 234, "get_baseclass": 326, "get_canonical_smil": 340, "get_fingerprint_class": 341, "get_parameters_from_datafram": 158, "get_subclass": 327, "get_transform_object": 363, "get_transform_paramet": 226, "get_user_detail": 311, "github": 450, "global": 456, "group_duplicate_valu": 328, "guid": 472, "halfcauchyprior": 171, "halfnormalprior": 172, "handle_missing_valu": 364, "hilberts_factori": 329, "hook": [422, 423, 424, 425], "hybrid": [415, 440, 459], "imaginari": 433, "implicit": 463, "import": [407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 423, 425, 427, 428, 430, 431, 433, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 462], "improv": 425, "includ": 450, "inclus": 408, "incompatibilityerror": 69, "incompatibleacquisitionfunctionerror": 70, "incompatibleargumenterror": 71, "incompatibleexplainererror": 72, "incompatiblesearchspaceerror": 73, "incompatiblesurrogateerror": 74, "incomplet": 410, "incompletemeasurementserror": 75, "incorpor": 421, "independentgaussiansurrog": 255, "index": 450, "indic": 450, "infeasibilityerror": 76, "infiniteintervalerror": 370, "influenc": 473, "inform": [458, 465], "initi": [408, 413], "inputdatatypewarn": 77, "insight": [93, 94, 95, 96, 98, 99, 100, 101, 462], "instal": [450, 451], "instanc": 423, "instead": [427, 428], "instruct": 460, "internet": 460, "interpret": 462, "interrupt": 424, "interv": [369, 370, 371, 372, 373], "invalidsurrogatemodelerror": 78, "invalidtargetvalueerror": 79, "invari": 430, "invok": 467, "irrelev": 471, "is_abstract": 337, "is_all_inst": 330, "is_cardinality_fulfil": 61, "is_en": 312, "is_inact": 159, "is_shap_explain": 100, "issu": [450, 451], "iter": [415, 416, 427, 428, 435], "json": [458, 467], "kernel": [102, 103, 106, 107, 116], "kernel_factori": [267, 270], "kernelfactori": 268, "kmeansclusteringrecommend": 204, "kmedoid": [346, 347], "known": [450, 451], "label": 464, "leak": 451, "learn": [445, 447, 456, 468, 471], "licens": [450, 455], "like": 464, "limit": [457, 462, 469, 470], "linear": [279, 416], "linear_transform": 308, "linearkernel": 108, "link": 428, "local": [450, 456], "logexpectedimprov": 4, "lognormalprior": 173, "look_up_target": 246, "lookup": [245, 246, 408, 409, 410, 415, 416, 424, 440, 446, 447, 468], "loop": [407, 408, 409, 410, 446, 447, 450], "maco": 451, "maintain": [450, 454], "make_dict_valid": 292, "make_explainer_for_surrog": 101, "make_gp_from_preset": 274, "mandatori": 463, "manual": [418, 419, 420, 421], "mark": 457, "match": 470, "match_attribut": 331, "maternkernel": 109, "max": 470, "mean": 468, "meanpredictionsurrog": 282, "measur": [412, 427, 428, 458, 473], "measurablemetadata": 377, "mechan": [408, 409, 410, 468], "memori": [374, 375, 473], "memorys": 220, "meta": [179, 180, 182, 461, 465], "metadata": [376, 378, 379], "metarecommend": 181, "method": [423, 453, 456], "min": 470, "minimumcardinalityviolatedwarn": 80, "miss": 468, "mixin": 237, "mixtur": [429, 430, 431], "mode": [435, 470], "model": [413, 427, 428, 430, 431, 433, 462, 469], "modelnottrainederror": 81, "monitor": 425, "monkeypatch": [423, 424, 425], "multi": [432, 433, 434, 435, 462, 463, 469], "multipl": 468, "naiv": [187, 281], "naivehybridspacerecommend": 188, "name": 464, "name_to_smil": 342, "necessari": [408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 427, 428, 435, 439, 440, 442, 443, 444], "nest": 467, "ngboost": 283, "ngboostsurrog": 284, "nois": 473, "nomcacquisitionfunctionerror": 82, "nomeasurementserror": 83, "non": 463, "non_inf_float": 401, "non_nan_float": 402, "non_shap_explain": 96, "none": 468, "nonpredict": [199, 200, 202, 207], "nonpredictiverecommend": 201, "nonstring_to_tupl": 350, "norecommenderslefterror": 84, "normalize_input_dtyp": 365, "normalprior": 174, "notenoughpointslefterror": 85, "nothingtosimulateerror": 86, "numer": [150, 304, 380, 381, 382, 383, 384, 385, 386], "numericalcontinuousparamet": [151, 464], "numericaldiscreteparamet": [152, 464], "numericaltarget": [305, 470], "numericalunderflowerror": 87, "object": [120, 121, 122, 123, 124, 126, 127, 129, 131, 133, 134, 408, 409, 410, 413, 415, 416, 418, 419, 420, 421, 435, 439, 442, 446, 447, 450, 458, 463, 467], "onnx": 427, "optim": [407, 436, 446, 447, 450, 458, 473], "option": [450, 464], "optionalimporterror": 88, "order": [430, 460], "output": [427, 428, 462, 463, 469], "overrid": 453, "packag": [450, 460], "page": 462, "pamclusteringrecommend": 205, "parallel": [458, 460], "paramet": [135, 136, 139, 140, 143, 145, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 408, 409, 410, 413, 428, 430, 431, 458, 462, 464, 466, 473], "parameter_cartesian_prod_panda": 222, "parameter_cartesian_prod_polar": 223, "parameterencod": 148, "pareto": [129, 436], "paretoobject": [130, 463], "partial": [25, 457], "partialacquisitionfunct": 26, "pass": 428, "pend": 457, "perform": [408, 435, 439, 440], "periodickernel": 110, "perman": 461, "permut": 430, "piecewisepolynomialkernel": 111, "plainkernelfactori": 269, "plot": [407, 424, 425, 462], "point": 460, "polar": [451, 460], "polynomialkernel": 112, "posterior": 458, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 256, "pre": 427, "precis": 460, "predict": 458, "preset": [271, 272, 274, 275, 277], "pretrain": 427, "pretty_print_df": 366, "print": [418, 419, 421, 435], "prior": [165, 166, 167, 168], "probabilityofimprov": 7, "probabl": 425, "problem": [407, 424, 436, 451], "product": [421, 466], "productkernel": 118, "pull": 453, "pure": [189, 190, 192, 193, 195, 197, 198, 199, 200, 202, 207, 456, 465], "purerecommend": 191, "pycharm": 451, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedhypervolumeimprov": 13, "qlognoisyexpectedimprov": 14, "qlognparego": 12, "qnegintegratedposteriorvari": 15, "qnoisyexpectedhypervolumeimprov": 16, "qnoisyexpectedimprov": 17, "qposteriorstandarddevi": 18, "qprobabilityofimprov": 19, "qsimpleregret": 20, "qthompsonsampl": 21, "quick": 450, "qupperconfidencebound": 22, "random": [387, 388, 389], "random_forest": 285, "randomforestsurrog": 286, "randomrecommend": 210, "rbfkernel": 113, "recommend": [176, 177, 179, 180, 182, 187, 189, 190, 192, 193, 195, 197, 198, 199, 200, 202, 207, 412, 413, 427, 428, 439, 440, 442, 457, 458, 461, 465], "recommenderprotocol": 178, "reduct": 456, "refers_to": 332, "regist": 423, "register_custom_architectur": 263, "register_hook": 333, "relat": 451, "remov": 452, "replic": 469, "represent": [430, 431, 462, 466], "reproduc": 473, "request": 453, "restrict": 466, "result": [407, 424, 425, 457], "rffkernel": 114, "role": 471, "row": 460, "rqkernel": 115, "run": [407, 415, 416, 433, 460], "sampl": [207, 456, 465], "sample_numerical_df": 393, "sampling_algorithm": [390, 392, 393], "scalar": [126, 128, 469], "scale": 394, "scalekernel": 119, "scenario": [247, 248, 460, 468], "scope": 460, "search": [430, 431, 438, 446, 450, 456, 466, 473], "searchspac": [211, 212, 214, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 408, 410, 413, 415, 416, 418, 419, 420, 421, 435, 437, 439, 440, 447], "searchspacematchwarn": 89, "searchspacetyp": 216, "see": 471, "select_constructor_hook": 235, "semaphor": 451, "sequenti": [182, 458], "sequential_greedi": [197, 198], "sequentialgreedyrecommend": 198, "sequentialmetarecommend": 184, "serial": [229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 441, 442, 458, 467], "serialize_datafram": 241, "serialmixin": 238, "set": [407, 424, 425, 436, 438, 446, 447], "set_random_se": 388, "setup": [412, 418, 419, 420, 421, 427, 428, 430, 431, 433, 435, 436, 442], "shap": [94, 95, 96, 98, 99, 100, 101, 462], "shap_explain": 98, "shap_plot": 99, "shapinsight": 97, "signatur": 423, "simplex": [430, 466], "simul": [242, 243, 244, 245, 246, 247, 248, 249, 250, 407, 408, 409, 410, 424, 433, 446, 447, 460, 468], "simulate_experi": 244, "simulate_scenario": 248, "simulate_transfer_learn": 250, "singl": [131, 436, 468], "singletargetobject": [132, 463], "sklearnclusteringrecommend": 206, "slot": [430, 431], "smile": 154, "smiles_to_fingerprint_featur": 343, "smoothedboxprior": 175, "some": [415, 416, 435], "sort_paramet": 160, "space": [430, 431, 438, 440, 446, 450, 456, 458, 466, 473], "span": 430, "stage": 427, "start": 450, "statist": 458, "stop": 424, "str_to_acqf": 29, "strategi": [413, 450], "streamingsequentialmetarecommend": 185, "string": [443, 467], "strtobool": 338, "structure_constraint": 49, "studi": 469, "sub": 456, "subselectioncondit": [41, 459], "subspac": 466, "subspacecontinu": 213, "subspacediscret": 221, "substanc": [153, 154, 430, 450], "substanceencod": 149, "substanceparamet": [155, 464], "suggest": 451, "suitabl": 413, "sum": 421, "support": [451, 457], "surrog": [251, 252, 254, 256, 257, 259, 261, 263, 264, 265, 267, 270, 271, 272, 274, 275, 277, 279, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 413, 426, 427, 428, 462, 469], "surrogateprotocol": 258, "synchron": 453, "synthet": [439, 440], "tabl": [408, 409, 410, 446, 447, 450], "target": [295, 296, 297, 298, 300, 301, 304, 306, 307, 308, 309, 423, 434, 435, 436, 463, 470, 473], "targetmod": 302, "targettransform": 303, "task": [446, 447], "taskparamet": [142, 464, 471], "technologi": 471, "telemetri": [310, 311, 312, 313, 314, 450, 460], "telemetry_record_recommended_measurement_percentag": 313, "telemetry_record_valu": 314, "temporary_se": 389, "terminologi": [430, 467, 468, 471], "test": [415, 416, 439, 440], "theoret": 430, "thi": [408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 435, 439, 440, 462], "third_parti": [345, 346], "thresholdcondit": [42, 459], "through": 471, "to_kernel_factori": 270, "to_metadata": 379, "to_object": 123, "to_searchspac": 217, "to_str": 351, "to_tensor": 367, "to_tupl": 334, "toggl": 461, "toler": 458, "tool": 453, "torch": [396, 397, 398, 451], "tradit": 431, "train": 427, "trajectori": 461, "transfer": [445, 447, 468, 471], "transfer_learn": [249, 250], "transform": [306, 307, 308, 309, 435], "transform_target_column": 368, "treasur": 471, "triangular_transform": 309, "trigger": [423, 425], "two": 444, "twophasemetarecommend": 186, "type": 467, "type_validation_convert": 293, "uncertainti": 456, "unidentifiedsubclasserror": 90, "uninstal": 460, "uninterrupt": 424, "unlock": 471, "unmatchedattributeerror": 91, "unreleas": 452, "unspecifi": 321, "unspecifiedtyp": 322, "unstructure_bas": 236, "unusedobjectwarn": 92, "upperconfidencebound": 8, "us": [408, 409, 410, 412, 413, 418, 419, 420, 421, 427, 428, 433, 435, 439, 440, 466, 467, 468, 469], "usag": 462, "use_fallback_constructor_hook": 373, "user": 472, "util": [27, 28, 29, 60, 61, 156, 157, 158, 159, 160, 239, 240, 241, 287, 288, 289, 290, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 473], "v": [423, 430, 436, 451, 458, 461], "valid": [62, 63, 64, 65, 133, 134, 161, 162, 163, 164, 225, 226, 227, 228, 291, 292, 293, 294, 399, 400, 401, 402, 403, 404, 405, 428, 444], "validate_cardinality_constraint_parameter_bound": 63, "validate_cardinality_constraints_are_nonoverlap": 64, "validate_constraint": 65, "validate_custom_architecture_cl": 294, "validate_decorrel": 162, "validate_is_finit": 163, "validate_not_nan": 403, "validate_paramet": 228, "validate_parameter_input": 404, "validate_parameter_nam": 227, "validate_searchspace_from_config": 218, "validate_simplex_subspace_from_config": 224, "validate_target_input": 405, "validate_target_nam": 134, "validate_unique_valu": 164, "valu": [458, 464, 466, 467, 468], "variabl": 460, "varname_numpy_use_single_precis": 383, "varname_torch_use_single_precis": 398, "verif": [418, 419, 420, 421, 430, 431, 444], "verifi": 416, "via": 462, "visual": 436, "we": 468, "what": 468, "window": 451, "within": 466, "without": 451, "workflow": [453, 457], "wrap": [415, 416, 440], "write": 453}})