Search.setIndex({"alltitles": {"(De-)Serializability Unsupported": [[453, null]], "Acquisition Function Values": [[452, "acquisition-function-values"]], "Acquisition function": [[407, "acquisition-function"]], "AcquisitionFunction": [[24, null]], "Active Learning": [[450, null]], "Added": [[446, "added"], [446, "id5"], [446, "id10"], [446, "id19"], [446, "id29"], [446, "id33"], [446, "id39"], [446, "id46"], [446, "id55"], [446, "id61"], [446, "id65"], [446, "id72"], [446, "id77"], [446, "id83"], [446, "id89"], [446, "id93"], [446, "id97"], [446, "id101"], [446, "id106"], [446, "id110"], [446, "id113"], [446, "id117"], [446, "id121"], [446, "id125"], [446, "id128"], [446, "id132"], [446, "id136"], [446, "id140"], [446, "id144"], [446, "id150"], [446, "id153"]], "Addendum: Description of transformation functions": [[429, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[467, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[465, null]], "Adding Measurements": [[452, "adding-measurements"]], "Adding Partial Results": [[451, "adding-partial-results"]], "AdditiveKernel": [[116, null]], "Advanced Example: Chemical Substances": [[444, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[427, "an-imaginary-use-case"]], "Array-Based Callables": [[462, null]], "Asynchronous Workflows": [[451, null]], "Auto-Replication": [[463, "auto-replication"]], "Automatic field conversion": [[461, "automatic-field-conversion"]], "Available Models": [[463, "available-models"]], "Available recommenders suitable for initial recommendation": [[407, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[407, "available-surrogate-models"]], "Backtesting": [[400, null], [440, null]], "Backwards Compatibility and Deprecations": [[466, null]], "BaseSequentialMetaRecommender": [[182, null]], "Basic Creation": [[452, "basic-creation"]], "Basic Instructions": [[454, "basic-instructions"]], "Basic Usage": [[456, "basic-usage"]], "Basic example for using BayBE": [[406, null]], "Basic string assembly": [[461, "basic-string-assembly"]], "BasicKernel": [[103, null]], "Basics": [[405, null], [452, "basics"]], "Batch Optimization": [[452, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[444, null]], "Bayesian Recommenders": [[459, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[278, null]], "BayesianRecommender": [[193, null]], "Bernoulli Multi Armed Bandit": [[427, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[251, null]], "BetaPrior": [[168, null]], "BinaryTarget": [[297, null]], "BotorchRecommender": [[195, null]], "Bound methods": [[417, "bound-methods"]], "Breaking Changes": [[446, "breaking-changes"], [446, "id38"], [446, "id45"]], "Building from the Product of Parameter Values": [[460, "building-from-the-product-of-parameter-values"], [460, "id2"]], "Building the Model": [[427, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[445, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[452, "caching-of-recommendations"]], "Campaign": [[31, null]], "Campaign Setup": [[430, "campaign-setup"]], "Campaign Stopping": [[418, null]], "Campaigns": [[452, null]], "Candidate Control in Discrete Spaces": [[452, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[455, null]], "CardinalityConstraint": [[34, null]], "CategoricalEncoding": [[145, null]], "CategoricalParameter": [[140, null], [458, "categoricalparameter"]], "Caution": [[455, null]], "Changed": [[446, "changed"], [446, "id2"], [446, "id6"], [446, "id11"], [446, "id15"], [446, "id17"], [446, "id20"], [446, "id24"], [446, "id30"], [446, "id34"], [446, "id40"], [446, "id47"], [446, "id52"], [446, "id56"], [446, "id62"], [446, "id66"], [446, "id69"], [446, "id73"], [446, "id78"], [446, "id84"], [446, "id90"], [446, "id94"], [446, "id98"], [446, "id102"], [446, "id107"], [446, "id111"], [446, "id114"], [446, "id118"], [446, "id122"], [446, "id126"], [446, "id129"], [446, "id133"], [446, "id137"], [446, "id141"], [446, "id145"]], "Changelog": [[446, null]], "Clustering Recommenders": [[459, "clustering-recommenders"]], "Code Design": [[447, "code-design"]], "ColumnTransformer": [[388, null]], "Comparing recommendations in both objects": [[436, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[463, "composite-surrogates"]], "CompositeKernel": [[104, null]], "CompositeSurrogate": [[258, null]], "Computational Challenges": [[453, null]], "Condition": [[40, null]], "Conditions": [[453, "conditions"]], "Constraint": [[35, null]], "Constraint Setup": [[424, "constraint-setup"]], "Constraints": [[453, null]], "Constraints Continuous": [[408, null]], "Constraints Discrete": [[411, null]], "Constraints Setup": [[425, "constraints-setup"]], "Construct the campaign and run some iterations": [[409, "construct-the-campaign-and-run-some-iterations"], [410, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[460, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[402, "constructing-campaigns-for-the-simulation-loop"], [403, "constructing-campaigns-for-the-simulation-loop"], [404, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[460, "constructing-from-a-dataframe"], [460, "id1"], [460, "id3"]], "Constructing hybrid recommenders": [[434, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[433, "constructing-the-campaign-and-performing-a-recommendation"], [434, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[434, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[453, "continuous-constraints"]], "Continuous Parameters": [[458, "continuous-parameters"]], "Continuous Subspaces": [[460, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[44, null], [453, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[36, null]], "ContinuousLinearConstraint": [[45, null], [453, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[37, null]], "ContinuousParameter": [[136, null]], "Contributing to BayBE": [[447, null]], "Contributors": [[448, null], [448, "id1"]], "Convenience Construction and Implicit Conversion": [[457, null]], "Convenience Multi-Output Casting": [[457, null]], "Conventions for attrs classes": [[447, "conventions-for-attrs-classes"]], "Convert model to onnx": [[421, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[421, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[422, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[421, "create-campaign"]], "Creating Continuous Search Spaces": [[432, null]], "Creating a Campaign": [[452, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[460, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[437, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[412, "creating-and-printing-the-campaign"], [413, "creating-and-printing-the-campaign"], [415, "creating-and-printing-the-campaign"], [429, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[401, "creating-the-campaigns"]], "Creating the Objective": [[403, "creating-the-objective"]], "Creating the Optimization Objective": [[440, "creating-the-optimization-objective"], [441, "creating-the-optimization-objective"]], "Creating the Search Space": [[440, "creating-the-search-space"]], "Creating the Searchspace": [[441, "creating-the-searchspace"]], "Creating the campaign": [[407, "creating-the-campaign"], [422, "creating-the-campaign"], [436, "creating-the-campaign"]], "Creating the constraint": [[412, "creating-the-constraint"], [414, "creating-the-constraint"]], "Creating the constraints": [[413, "creating-the-constraints"], [415, "creating-the-constraints"]], "Creating the objective": [[429, "creating-the-objective"]], "Creating the recommender object": [[407, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[402, "creating-the-searchspace-and-the-objective"], [404, "creating-the-searchspace-and-the-objective"], [409, "creating-the-searchspace-and-the-objective"], [410, "creating-the-searchspace-and-the-objective"], [412, "creating-the-searchspace-and-the-objective"], [413, "creating-the-searchspace-and-the-objective"], [414, "creating-the-searchspace-and-the-objective"], [415, "creating-the-searchspace-and-the-objective"], [433, "creating-the-searchspace-and-the-objective"]], "Creation From a JSON Config": [[452, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[463, null]], "Custom Hooks": [[416, null]], "Custom Surrogates": [[420, null]], "CustomDiscreteParameter": [[143, null], [458, "customdiscreteparameter"]], "CustomEncoding": [[146, null]], "CustomONNXSurrogate": [[260, null]], "Dataframe deserialization": [[461, "dataframe-deserialization"]], "DefaultKernelFactory": [[274, null]], "Defining config dictionaries": [[438, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[418, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[419, "defining-the-hook"]], "Defining the Hooks": [[417, "defining-the-hooks"]], "Defining the Optimization Objective": [[444, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[401, "defining-the-optimization-problem"], [430, "defining-the-optimization-problem"]], "Defining the Search Space": [[444, "defining-the-search-space"]], "Defining the Tasks": [[440, "defining-the-tasks"], [441, "defining-the-tasks"]], "Defining the targets": [[429, "defining-the-targets"]], "Defining the test function": [[409, "defining-the-test-function"], [410, "defining-the-test-function"], [433, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[434, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[446, "deprecations"], [446, "id36"], [446, "id43"], [446, "id50"], [446, "id59"], [446, "id75"], [446, "id81"], [446, "id87"], [446, "id104"]], "Deserialization from configuration strings": [[461, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[124, null], [457, "desirabilityobjective"]], "Developer Tools": [[447, "developer-tools"]], "Discrete Constraints": [[453, "discrete-constraints"]], "Discrete Parameters": [[458, "discrete-parameters"]], "Discrete Subspaces": [[460, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[424, null]], "DiscreteCardinalityConstraint": [[50, null], [453, "discretecardinalityconstraint"]], "DiscreteConstraint": [[38, null]], "DiscreteCustomConstraint": [[51, null], [453, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[52, null], [453, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[53, null], [453, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[54, null], [453, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[55, null], [453, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[137, null]], "DiscretePermutationInvarianceConstraint": [[56, null], [453, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[57, null]], "DiscreteSamplingMethod": [[384, null]], "DiscreteSumConstraint": [[58, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[453, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[427, "discussion"]], "Disk Caching": [[454, "disk-caching"]], "Dummy": [[313, null]], "Duplicate Substances": [[424, "duplicate-substances"]], "Dynamic Exclusion": [[455, "dynamic-exclusion"]], "EDBOKernelFactory": [[276, null]], "EXPERIMENTAL: Floating Point Precision": [[454, "experimental-floating-point-precision"]], "Efficient Constraint Implementation via Polars": [[453, null]], "Efficient Search Space Creation": [[467, null]], "Environment Variables": [[454, null]], "Equivalent copies": [[461, null]], "Estimation with Constraints": [[467, null]], "Example Searchspace and objective parameters": [[407, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[409, null]], "Example for creating campaigns from configs": [[437, null]], "Example for custom parameter passing in surrogate models": [[422, null]], "Example for full simulation loop using a table-based lookup mechanism": [[403, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[404, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[402, null]], "Example for linear constraints in a continuous searchspace": [[410, null]], "Example for surrogate model with a custom pretrained model": [[421, null]], "Example for the serialization of a campaign": [[436, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[433, null]], "Example for using custom constraints in discrete searchspaces": [[412, null]], "Example for using dependency constraints in discrete searchspaces": [[413, null]], "Example for using different strategies": [[407, null]], "Example for using exclusion constraints in discrete searchspaces": [[414, null]], "Example for using exclusion constraints incorporating sums and products": [[415, null]], "Example for using synthetic test functions in hybrid spaces": [[434, null]], "Example for using the multi target mode for the objective": [[429, null]], "Example for validation of a config file": [[438, null]], "Examples": [[442, null]], "Examples On This Page": [[456, null]], "Excluding Configurations": [[455, "excluding-configurations"]], "Expectations": [[465, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[421, "experiment-setup"], [422, "experiment-setup"]], "Experiment setup": [[412, "experiment-setup"], [413, "experiment-setup"], [414, "experiment-setup"], [415, "experiment-setup"], [436, "experiment-setup"]], "Experiment setup and creating the searchspace": [[429, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[454, null], [454, null]], "Experimental Representation Limits": [[456, null]], "Experimental and Computational Representations": [[456, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.10.*)": [[446, "expired-deprecations-from-0-10"]], "Expired Deprecations (from 0.6.*)": [[446, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[446, "expired-deprecations-from-0-7"]], "Expired Deprecations (from 0.9.*)": [[446, "expired-deprecations-from-0-9"]], "Explainers": [[456, "explainers"]], "Extending BayBE\u2019s Functionality": [[447, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[463, "extracting-the-model-for-advanced-study"]], "FAQ": [[443, null]], "FPS Sampling Implementation": [[454, "fps-sampling-implementation"]], "FPSInitialization": [[205, null]], "FPSRecommender": [[206, null]], "Fixed": [[446, "fixed"], [446, "id3"], [446, "id7"], [446, "id12"], [446, "id21"], [446, "id25"], [446, "id27"], [446, "id31"], [446, "id35"], [446, "id41"], [446, "id49"], [446, "id53"], [446, "id58"], [446, "id63"], [446, "id67"], [446, "id74"], [446, "id79"], [446, "id85"], [446, "id91"], [446, "id99"], [446, "id103"], [446, "id108"], [446, "id115"], [446, "id119"], [446, "id123"], [446, "id130"], [446, "id134"], [446, "id138"], [446, "id142"], [446, "id146"], [446, "id148"], [446, "id151"]], "For Label-Like Parameters: Values and Active Values": [[458, "label-like"]], "From GitHub": [[444, "from-github"]], "From Local Clone": [[444, "from-local-clone"]], "From Package Index": [[444, "from-package-index"]], "From the Default Constructor": [[460, "from-the-default-constructor"]], "Further Information": [[452, "further-information"]], "GammaPrior": [[169, null]], "GaussianMixtureClusteringRecommender": [[200, null]], "GaussianProcessPreset": [[271, null]], "GaussianProcessSurrogate": [[264, null]], "General Information": [[459, "general-information"]], "General Workflow": [[447, "general-workflow"]], "Generating Lookup Tables": [[440, "generating-lookup-tables"], [441, "generating-lookup-tables"]], "Getting Recommendations": [[452, "getting-recommendations"], [455, null]], "Getting a recommendation and adding measurements": [[406, "getting-a-recommendation-and-adding-measurements"]], "Global Uncertainty Reduction": [[450, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[170, null]], "HalfNormalPrior": [[171, null]], "Hook instance vs. target instance": [[417, null]], "Hybrid constraints": [[453, null]], "Imports": [[401, "imports"], [417, "imports"], [419, "imports"], [424, "imports"], [425, "imports"], [427, "imports"], [430, "imports"], [432, "imports"], [440, "imports"], [441, "imports"]], "Inclusion of initial data": [[402, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[253, null]], "Indices and Tables": [[444, "indices-and-tables"]], "Influence of Continuous Parameters": [[467, null]], "Influence on Surrogate Models": [[453, null]], "Insights": [[456, null]], "Installation Related Issues": [[445, "installation-related-issues"]], "Interval": [[364, null]], "Invoking alternative constructors": [[461, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[421, "iterate-with-recommendations-and-measurements"], [422, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[461, "json-de-serialization"]], "KMeansClusteringRecommender": [[201, null]], "KMedoids": [[340, null]], "Kernel": [[105, null]], "KernelFactory": [[266, null]], "Known Issues": [[445, null]], "License": [[449, null]], "Limitations": [[451, null], [464, "limitations"]], "LinearKernel": [[107, null]], "Links for documentation": [[422, "links-for-documentation"]], "Local Uncertainty Reduction": [[450, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[172, null]], "Lookup functionality and data creation": [[402, "lookup-functionality-and-data-creation"], [403, "lookup-functionality-and-data-creation"], [404, "lookup-functionality-and-data-creation"]], "MATCH mode": [[464, "match-mode"]], "MIN and MAX mode": [[464, "min-and-max-mode"]], "Maintainers": [[448, "maintainers"]], "Mandatory Target Bounds": [[457, null]], "Manual verification of the constraint": [[412, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[413, "manual-verification-of-the-constraints"], [414, "manual-verification-of-the-constraints"], [415, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[451, "marking-experiments-as-pending"]], "MaternKernel": [[108, null]], "MeanPredictionSurrogate": [[280, null]], "MeasurableMetadata": [[370, null]], "Memory During Optimization": [[467, null]], "MemorySize": [[217, null]], "Meta Recommenders": [[455, null], [459, "meta-recommenders"]], "MetaRecommender": [[180, null]], "Metadata": [[371, null]], "Method overrides": [[447, "method-overrides"]], "Missing Lookup Values": [[462, null]], "Mixtures": [[423, null]], "Model Interpretation in BO": [[456, null]], "Model Outputs": [[421, "model-outputs"], [422, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[424, null]], "Modeling a Mixture in Traditional Representation": [[425, null]], "Monitoring the Probability of Improvement": [[419, null]], "Monkeypatching": [[417, "monkeypatching"], [418, null], [419, "monkeypatching"]], "Multi Target": [[428, null]], "Multi-Armed Bandit": [[426, null]], "Multi-Output Modeling": [[463, "multi-output-modeling"]], "Multi-Output Surrogate Models": [[456, "multi-output-surrogate-models"]], "NGBoostSurrogate": [[282, null]], "NaiveHybridSpaceRecommender": [[187, null]], "Necessary imports": [[421, "necessary-imports"], [422, "necessary-imports"], [436, "necessary-imports"], [437, "necessary-imports"], [438, "necessary-imports"]], "Necessary imports for this example": [[402, "necessary-imports-for-this-example"], [403, "necessary-imports-for-this-example"], [404, "necessary-imports-for-this-example"], [406, "necessary-imports-for-this-example"], [407, "necessary-imports-for-this-example"], [409, "necessary-imports-for-this-example"], [410, "necessary-imports-for-this-example"], [412, "necessary-imports-for-this-example"], [413, "necessary-imports-for-this-example"], [414, "necessary-imports-for-this-example"], [415, "necessary-imports-for-this-example"], [429, "necessary-imports-for-this-example"], [433, "necessary-imports-for-this-example"], [434, "necessary-imports-for-this-example"]], "Nesting objects": [[461, "nesting-objects"]], "Non-Dominated Configurations": [[457, null]], "NonPredictiveRecommender": [[198, null]], "NormalPrior": [[173, null]], "NumericalContinuousParameter": [[150, null], [458, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[151, null], [458, "numericaldiscreteparameter"]], "NumericalTarget": [[303, null], [464, "numericaltarget"]], "Objective": [[121, null], [457, null]], "Optimizing a Custom Black-Box Function": [[401, null]], "Optional Dependencies": [[444, "optional-dependencies"]], "Optional Dependency": [[458, null]], "Optional: Defining the Optimization Strategy": [[444, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[424, null]], "PAMClusteringRecommender": [[202, null]], "Parallel Runs in Scenario Simulations": [[454, "parallel-runs-in-scenario-simulations"]], "Parameter": [[138, null]], "Parameter Encoding": [[458, null]], "Parameter Importance via SHAP": [[456, "parameter-importance-via-shap"]], "Parameter Names": [[458, null]], "Parameter Setup": [[424, "parameter-setup"], [425, "parameter-setup"]], "Parameter tolerances": [[452, null]], "ParameterEncoding": [[147, null]], "Parameters": [[458, null]], "Parameters for a full simulation loop": [[402, "parameters-for-a-full-simulation-loop"], [403, "parameters-for-a-full-simulation-loop"], [404, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[129, null], [457, "paretoobjective"]], "PartialAcquisitionFunction": [[26, null]], "Performing some iterations": [[429, "performing-some-iterations"]], "Performing the simulation loop": [[402, "performing-the-simulation-loop"]], "PeriodicKernel": [[109, null]], "Permanent Exclusion": [[455, "permanent-exclusion"]], "Permutation Invariance": [[424, "permutation-invariance"]], "PiecewisePolynomialKernel": [[110, null]], "PlainKernelFactory": [[267, null]], "Plots": [[456, "plots"]], "Plotting the Results": [[401, "plotting-the-results"], [418, "plotting-the-results"], [419, "plotting-the-results"]], "Polars": [[454, "polars"]], "PolynomialKernel": [[111, null]], "Posterior Statistics with Desirability Objectives": [[452, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Predictive Statistics": [[452, "predictive-statistics"]], "Prior": [[166, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[418, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[117, null]], "Pure Recommenders": [[459, "pure-recommenders"]], "PureRecommender": [[190, null]], "Purely Continuous Search Spaces": [[450, null]], "PyCharm vs. exceptiongroup": [[445, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[112, null]], "RFFKernel": [[113, null]], "RQKernel": [[114, null]], "RandomForestSurrogate": [[284, null]], "RandomRecommender": [[207, null]], "RecommenderProtocol": [[177, null]], "Recommenders": [[459, null]], "Registering Custom Hooks": [[417, null]], "Removed": [[446, "removed"], [446, "id8"], [446, "id13"], [446, "id22"], [446, "id42"], [446, "id48"], [446, "id57"], [446, "id70"], [446, "id80"], [446, "id86"], [446, "id95"]], "Representation of Data within Discrete Subspaces": [[460, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[467, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[460, "restricting-search-spaces-using-constraints"]], "Row Order": [[454, null]], "Running the Simulation": [[427, "running-the-simulation"]], "Running the Simulation Loop": [[401, "running-the-simulation-loop"]], "SHAPInsight": [[96, null]], "SKLearnClusteringRecommender": [[203, null]], "Sampling Recommenders": [[459, "sampling-recommenders"]], "Scalarizer": [[127, null]], "ScaleKernel": [[118, null]], "Search Space Creation": [[424, "search-space-creation"], [425, "search-space-creation"]], "Search Space Memory Estimation": [[467, "search-space-memory-estimation"]], "Search Spaces": [[460, null]], "SearchSpace": [[212, null]], "SearchSpaceType": [[213, null]], "Searchspaces": [[431, null]], "Seeing Transfer Learning in Action": [[465, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[452, null]], "SequentialMetaRecommender": [[183, null]], "SerialMixin": [[236, null]], "Serialization": [[435, null], [452, "serialization"], [461, null]], "Serialization and de-serialization": [[436, "serialization-and-de-serialization"]], "Settings": [[401, "settings"], [418, "settings"], [419, "settings"], [430, "settings"], [432, "settings"], [440, "settings"], [441, "settings"]], "Setup": [[406, "setup"], [427, "setup"]], "Signature components": [[417, null]], "Simplex Construction": [[424, null]], "Simulating Multiple Scenarios": [[462, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[462, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[462, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[418, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[418, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[462, null]], "Simulation Loop": [[440, "simulation-loop"], [441, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[430, null]], "SingleTargetObjective": [[131, null], [457, "singletargetobjective"]], "Slot-based Representation": [[425, null]], "SmoothedBoxPrior": [[174, null]], "StreamingSequentialMetaRecommender": [[184, null]], "Sub-Sampling Method": [[450, null]], "SubSelectionCondition": [[41, null], [453, "subselectioncondition"]], "SubspaceContinuous": [[210, null]], "SubspaceDiscrete": [[218, null]], "Substance Amounts": [[424, "substance-amounts"]], "SubstanceEncoding": [[148, null]], "SubstanceParameter": [[154, null], [458, "substanceparameter"]], "Suggested Fix": [[445, null], [445, null], [445, null], [445, null]], "Supported Acquisition Functions": [[451, null]], "Supported Recommenders": [[451, null]], "Surrogate": [[255, null]], "Surrogate Model Limitations": [[453, null]], "Surrogate Replication": [[463, "surrogate-replication"]], "SurrogateProtocol": [[256, null]], "Surrogates": [[463, null]], "Synchronizing Pull Requests": [[447, "synchronizing-pull-requests"]], "Target": [[295, null]], "TargetMode": [[300, null]], "TargetTransformation": [[301, null]], "Targets": [[464, null]], "TaskParameter": [[141, null], [458, "taskparameter"]], "Technology": [[465, null]], "Terminology": [[424, "terminology"], [461, null], [465, null]], "Terminology Continued": [[465, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[462, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[427, "the-black-box-model"]], "The Lookup Mechanism": [[462, "the-lookup-mechanism"]], "The Optimization Loop": [[444, "the-optimization-loop"]], "The Role of the TaskParameter": [[465, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[437, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[455, "the-recommend-call"]], "The type field": [[461, "the-type-field"]], "Theoretical Span": [[424, null]], "ThresholdCondition": [[42, null], [453, "thresholdcondition"]], "Trajectory-Based Control": [[455, null]], "Transfer Learning": [[439, null], [441, null], [465, null]], "Triggering the Hook": [[419, "triggering-the-hook"]], "Triggering the Hooks": [[417, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[185, null]], "Unlocking Data Treasures Through Transfer Learning": [[465, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[315, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[466, null]], "Using Custom Models": [[463, "using-custom-models"]], "Using Explicit Bounds": [[460, "using-explicit-bounds"]], "Using None": [[462, "using-none"]], "Using a Callable": [[462, "using-a-callable"]], "Using a Dataframe": [[462, "using-a-dataframe"]], "Using abbreviations": [[461, "using-abbreviations"]], "Using configuration instead": [[421, "using-configuration-instead"], [422, "using-configuration-instead"]], "Using default values": [[461, "using-default-values"]], "Utilities": [[467, null]], "Validation of model parameters": [[422, "validation-of-model-parameters"]], "Verification of Constraints": [[424, "verification-of-constraints"], [425, "verification-of-constraints"]], "Verification of Span": [[424, "verification-of-span"]], "Verification of the two dictionaries": [[438, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[410, "verify-the-constraints"]], "Visualization": [[430, "visualization"]], "Windows \u2013 Torch Problems": [[445, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[409, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [410, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [434, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[447, "writing-docstrings"]], "Writing classes": [[447, "writing-classes"]], "[0.1.0] - 2022-10-01": [[446, "id152"]], "[0.10.0] - 2024-08-02": [[446, "id44"]], "[0.11.0] - 2024-09-09": [[446, "id37"]], "[0.11.1] - 2024-10-01": [[446, "id32"]], "[0.11.2] - 2024-10-11": [[446, "id28"]], "[0.11.3] - 2024-11-06": [[446, "id26"]], "[0.11.4] - 2025-01-27": [[446, "id23"]], "[0.12.0] - 2025-01-28": [[446, "id18"]], "[0.12.1] - 2025-01-29": [[446, "id16"]], "[0.12.2] - 2025-01-31": [[446, "id14"]], "[0.13.0] - 2025-04-16": [[446, "id9"]], "[0.13.1] - 2025-06-06": [[446, "id4"]], "[0.13.2] - 2025-07-09": [[446, "id1"]], "[0.2.0] - 2022-11-10": [[446, "id149"]], "[0.2.1] - 2022-12-01": [[446, "id147"]], "[0.2.2] - 2023-01-13": [[446, "id143"]], "[0.2.3] - 2023-03-14": [[446, "id139"]], "[0.2.4] - 2023-03-24": [[446, "id135"]], "[0.3.0] - 2023-06-27": [[446, "id131"]], "[0.3.1] - 2023-07-17": [[446, "id127"]], "[0.3.2] - 2023-07-24": [[446, "id124"]], "[0.4.0] - 2023-08-16": [[446, "id120"]], "[0.4.1] - 2023-08-23": [[446, "id116"]], "[0.4.2] - 2023-08-29": [[446, "id112"]], "[0.5.0] - 2023-09-15": [[446, "id109"]], "[0.5.1] - 2023-10-19": [[446, "id105"]], "[0.6.0] - 2023-11-17": [[446, "id100"]], "[0.6.1] - 2023-11-27": [[446, "id96"]], "[0.7.0] - 2023-12-04": [[446, "id92"]], "[0.7.1] - 2023-12-07": [[446, "id88"]], "[0.7.2] - 2024-01-24": [[446, "id82"]], "[0.7.3] - 2024-02-09": [[446, "id76"]], "[0.7.4] - 2024-02-28": [[446, "id71"]], "[0.8.0] - 2024-02-29": [[446, "id68"]], "[0.8.1] - 2024-03-11": [[446, "id64"]], "[0.8.2] - 2024-03-27": [[446, "id60"]], "[0.9.0] - 2024-05-21": [[446, "id54"]], "[0.9.1] - 2024-06-04": [[446, "id51"]], "[Unreleased]": [[446, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[23, null]], "baybe.acquisition.partial": [[25, null]], "baybe.acquisition.utils": [[27, null]], "baybe.acquisition.utils.convert_acqf": [[28, null]], "baybe.acquisition.utils.str_to_acqf": [[29, null]], "baybe.campaign": [[30, null]], "baybe.constraints": [[32, null]], "baybe.constraints.base": [[33, null]], "baybe.constraints.conditions": [[39, null]], "baybe.constraints.continuous": [[43, null]], "baybe.constraints.deprecation": [[46, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[47, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[48, null]], "baybe.constraints.discrete": [[49, null]], "baybe.constraints.utils": [[59, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[60, null]], "baybe.constraints.validation": [[61, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[62, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[63, null]], "baybe.constraints.validation.validate_constraints": [[64, null]], "baybe.exceptions": [[65, null]], "baybe.exceptions.DeprecationError": [[66, null]], "baybe.exceptions.EmptySearchSpaceError": [[67, null]], "baybe.exceptions.IncompatibilityError": [[68, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[69, null]], "baybe.exceptions.IncompatibleArgumentError": [[70, null]], "baybe.exceptions.IncompatibleExplainerError": [[71, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[72, null]], "baybe.exceptions.IncompatibleSurrogateError": [[73, null]], "baybe.exceptions.IncompleteMeasurementsError": [[74, null]], "baybe.exceptions.InfeasibilityError": [[75, null]], "baybe.exceptions.InputDataTypeWarning": [[76, null]], "baybe.exceptions.InvalidSurrogateModelError": [[77, null]], "baybe.exceptions.InvalidTargetValueError": [[78, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[79, null]], "baybe.exceptions.ModelNotTrainedError": [[80, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[81, null]], "baybe.exceptions.NoMeasurementsError": [[82, null]], "baybe.exceptions.NoRecommendersLeftError": [[83, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[84, null]], "baybe.exceptions.NothingToSimulateError": [[85, null]], "baybe.exceptions.NumericalUnderflowError": [[86, null]], "baybe.exceptions.OptionalImportError": [[87, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[88, null]], "baybe.exceptions.UnidentifiedSubclassError": [[89, null]], "baybe.exceptions.UnmatchedAttributeError": [[90, null]], "baybe.exceptions.UnusedObjectWarning": [[91, null]], "baybe.insights": [[92, null]], "baybe.insights.shap": [[93, null]], "baybe.insights.shap.EXPLAINERS": [[94, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[95, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[97, null]], "baybe.insights.shap.SHAP_PLOTS": [[98, null]], "baybe.insights.shap.is_shap_explainer": [[99, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[100, null]], "baybe.kernels": [[101, null]], "baybe.kernels.base": [[102, null]], "baybe.kernels.basic": [[106, null]], "baybe.kernels.composite": [[115, null]], "baybe.objectives": [[119, null]], "baybe.objectives.base": [[120, null]], "baybe.objectives.base.to_objective": [[122, null]], "baybe.objectives.desirability": [[123, null]], "baybe.objectives.desirability.scalarize": [[125, null]], "baybe.objectives.enum": [[126, null]], "baybe.objectives.pareto": [[128, null]], "baybe.objectives.single": [[130, null]], "baybe.objectives.validation": [[132, null]], "baybe.objectives.validation.validate_target_names": [[133, null]], "baybe.parameters": [[134, null]], "baybe.parameters.base": [[135, null]], "baybe.parameters.categorical": [[139, null]], "baybe.parameters.custom": [[142, null]], "baybe.parameters.enum": [[144, null]], "baybe.parameters.numerical": [[149, null]], "baybe.parameters.substance": [[152, null]], "baybe.parameters.substance.Smiles": [[153, null]], "baybe.parameters.utils": [[155, null]], "baybe.parameters.utils.activate_parameter": [[156, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[157, null]], "baybe.parameters.utils.is_inactive": [[158, null]], "baybe.parameters.utils.sort_parameters": [[159, null]], "baybe.parameters.validation": [[160, null]], "baybe.parameters.validation.validate_decorrelation": [[161, null]], "baybe.parameters.validation.validate_is_finite": [[162, null]], "baybe.parameters.validation.validate_unique_values": [[163, null]], "baybe.priors": [[164, null]], "baybe.priors.base": [[165, null]], "baybe.priors.basic": [[167, null]], "baybe.recommenders": [[175, null]], "baybe.recommenders.base": [[176, null]], "baybe.recommenders.meta": [[178, null]], "baybe.recommenders.meta.base": [[179, null]], "baybe.recommenders.meta.sequential": [[181, null]], "baybe.recommenders.naive": [[186, null]], "baybe.recommenders.pure": [[188, null]], "baybe.recommenders.pure.base": [[189, null]], "baybe.recommenders.pure.bayesian": [[191, null]], "baybe.recommenders.pure.bayesian.base": [[192, null]], "baybe.recommenders.pure.bayesian.botorch": [[194, null]], "baybe.recommenders.pure.nonpredictive": [[196, null]], "baybe.recommenders.pure.nonpredictive.base": [[197, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[199, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[204, null]], "baybe.searchspace": [[208, null]], "baybe.searchspace.continuous": [[209, null]], "baybe.searchspace.core": [[211, null]], "baybe.searchspace.core.to_searchspace": [[214, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[215, null]], "baybe.searchspace.discrete": [[216, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[219, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[220, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[221, null]], "baybe.searchspace.validation": [[222, null]], "baybe.searchspace.validation.get_transform_parameters": [[223, null]], "baybe.searchspace.validation.validate_parameter_names": [[224, null]], "baybe.searchspace.validation.validate_parameters": [[225, null]], "baybe.serialization": [[226, null]], "baybe.serialization.core": [[227, null]], "baybe.serialization.core.add_type": [[228, null]], "baybe.serialization.core.block_deserialization_hook": [[229, null]], "baybe.serialization.core.block_serialization_hook": [[230, null]], "baybe.serialization.core.converter": [[231, null]], "baybe.serialization.core.make_base_structure_hook": [[232, null]], "baybe.serialization.core.select_constructor_hook": [[233, null]], "baybe.serialization.core.unstructure_with_type": [[234, null]], "baybe.serialization.mixin": [[235, null]], "baybe.serialization.utils": [[237, null]], "baybe.serialization.utils.deserialize_dataframe": [[238, null]], "baybe.serialization.utils.serialize_dataframe": [[239, null]], "baybe.simulation": [[240, null]], "baybe.simulation.core": [[241, null]], "baybe.simulation.core.simulate_experiment": [[242, null]], "baybe.simulation.lookup": [[243, null]], "baybe.simulation.lookup.look_up_targets": [[244, null]], "baybe.simulation.scenarios": [[245, null]], "baybe.simulation.scenarios.simulate_scenarios": [[246, null]], "baybe.simulation.transfer_learning": [[247, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[248, null]], "baybe.surrogates": [[249, null]], "baybe.surrogates.bandit": [[250, null]], "baybe.surrogates.base": [[252, null]], "baybe.surrogates.base.PosteriorStatistic": [[254, null]], "baybe.surrogates.composite": [[257, null]], "baybe.surrogates.custom": [[259, null]], "baybe.surrogates.custom.register_custom_architecture": [[261, null]], "baybe.surrogates.gaussian_process": [[262, null]], "baybe.surrogates.gaussian_process.core": [[263, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[265, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[268, null]], "baybe.surrogates.gaussian_process.presets": [[269, null]], "baybe.surrogates.gaussian_process.presets.core": [[270, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[272, null]], "baybe.surrogates.gaussian_process.presets.default": [[273, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[275, null]], "baybe.surrogates.linear": [[277, null]], "baybe.surrogates.naive": [[279, null]], "baybe.surrogates.ngboost": [[281, null]], "baybe.surrogates.random_forest": [[283, null]], "baybe.surrogates.utils": [[285, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[286, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[287, null]], "baybe.surrogates.utils.catch_constant_targets": [[288, null]], "baybe.surrogates.validation": [[289, null]], "baybe.surrogates.validation.make_dict_validator": [[290, null]], "baybe.surrogates.validation.type_validation_converter": [[291, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[292, null]], "baybe.targets": [[293, null]], "baybe.targets.base": [[294, null]], "baybe.targets.binary": [[296, null]], "baybe.targets.binary.ChoiceValue": [[298, null]], "baybe.targets.enum": [[299, null]], "baybe.targets.numerical": [[302, null]], "baybe.targets.transforms": [[304, null]], "baybe.targets.transforms.bell_transform": [[305, null]], "baybe.targets.transforms.linear_transform": [[306, null]], "baybe.targets.transforms.triangular_transform": [[307, null]], "baybe.utils": [[308, null]], "baybe.utils.augmentation": [[309, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[310, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[311, null]], "baybe.utils.basic": [[312, null]], "baybe.utils.basic.UNSPECIFIED": [[314, null]], "baybe.utils.basic.convert_to_float": [[317, null]], "baybe.utils.basic.find_subclass": [[318, null]], "baybe.utils.basic.get_baseclasses": [[319, null]], "baybe.utils.basic.get_subclasses": [[320, null]], "baybe.utils.basic.group_duplicate_values": [[321, null]], "baybe.utils.basic.hilberts_factory": [[322, null]], "baybe.utils.basic.is_all_instance": [[323, null]], "baybe.utils.basic.match_attributes": [[324, null]], "baybe.utils.basic.refers_to": [[325, null]], "baybe.utils.basic.register_hooks": [[326, null]], "baybe.utils.basic.to_tuple": [[327, null]], "baybe.utils.boolean": [[328, null]], "baybe.utils.boolean.check_if_in": [[329, null]], "baybe.utils.boolean.is_abstract": [[330, null]], "baybe.utils.boolean.strtobool": [[331, null]], "baybe.utils.chemistry": [[332, null]], "baybe.utils.chemistry.get_canonical_smiles": [[333, null]], "baybe.utils.chemistry.get_fingerprint_class": [[334, null]], "baybe.utils.chemistry.name_to_smiles": [[335, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[336, null]], "baybe.utils.clustering_algorithms": [[337, null]], "baybe.utils.clustering_algorithms.third_party": [[338, null]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[339, null]], "baybe.utils.conversion": [[341, null]], "baybe.utils.conversion.fraction_to_float": [[342, null]], "baybe.utils.conversion.nonstring_to_tuple": [[343, null]], "baybe.utils.conversion.to_string": [[344, null]], "baybe.utils.dataframe": [[345, null]], "baybe.utils.dataframe.add_fake_measurements": [[346, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[347, null]], "baybe.utils.dataframe.add_parameter_noise": [[348, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[349, null]], "baybe.utils.dataframe.create_fake_input": [[350, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[351, null]], "baybe.utils.dataframe.df_drop_string_columns": [[352, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[353, null]], "baybe.utils.dataframe.filter_df": [[354, null]], "baybe.utils.dataframe.fuzzy_row_match": [[355, null]], "baybe.utils.dataframe.get_transform_objects": [[356, null]], "baybe.utils.dataframe.handle_missing_values": [[357, null]], "baybe.utils.dataframe.normalize_input_dtypes": [[358, null]], "baybe.utils.dataframe.pretty_print_df": [[359, null]], "baybe.utils.dataframe.to_tensor": [[360, null]], "baybe.utils.dataframe.transform_target_columns": [[361, null]], "baybe.utils.interval": [[362, null]], "baybe.utils.interval.InfiniteIntervalError": [[363, null]], "baybe.utils.interval.convert_bounds": [[365, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[366, null]], "baybe.utils.memory": [[367, null]], "baybe.utils.memory.bytes_to_human_readable": [[368, null]], "baybe.utils.metadata": [[369, null]], "baybe.utils.metadata.to_metadata": [[372, null]], "baybe.utils.numerical": [[373, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[374, null]], "baybe.utils.numerical.DTypeFloatONNX": [[375, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[376, null]], "baybe.utils.numerical.closer_element": [[377, null]], "baybe.utils.numerical.closest_element": [[378, null]], "baybe.utils.numerical.geom_mean": [[379, null]], "baybe.utils.random": [[380, null]], "baybe.utils.random.set_random_seed": [[381, null]], "baybe.utils.random.temporary_seed": [[382, null]], "baybe.utils.sampling_algorithms": [[383, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[385, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[386, null]], "baybe.utils.scaling": [[387, null]], "baybe.utils.torch": [[389, null]], "baybe.utils.torch.DTypeFloatTorch": [[390, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[391, null]], "baybe.utils.validation": [[392, null]], "baybe.utils.validation.finite_float": [[393, null]], "baybe.utils.validation.non_inf_float": [[394, null]], "baybe.utils.validation.non_nan_float": [[395, null]], "baybe.utils.validation.validate_not_nan": [[396, null]], "baybe.utils.validation.validate_object_names": [[397, null]], "baybe.utils.validation.validate_parameter_input": [[398, null]], "baybe.utils.validation.validate_target_input": [[399, null]], "classproperty": [[316, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[445, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNParEGO": [[12, null]], "qLogNoisyExpectedHypervolumeImprovement": [[13, null]], "qLogNoisyExpectedImprovement": [[14, null]], "qNegIntegratedPosteriorVariance": [[15, null]], "qNoisyExpectedHypervolumeImprovement": [[16, null]], "qNoisyExpectedImprovement": [[17, null]], "qPosteriorStandardDeviation": [[18, null]], "qProbabilityOfImprovement": [[19, null]], "qSimpleRegret": [[20, null]], "qThompsonSampling": [[21, null]], "qUpperConfidenceBound": [[22, null]], "\u201cPre-training\u201d stage": [[421, "pre-training-stage"]], "\u26a1 Quick Start": [[444, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[444, "maintainers"]], "\ud83d\udcbb Installation": [[444, "installation"]], "\ud83d\udcc4 License": [[444, "license"]], "\ud83d\udcd6 Citation": [[444, "citation"]], "\ud83d\udce1 Telemetry": [[444, "telemetry"]], "\ud83d\udd0b Batteries Included": [[444, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[444, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.IncompleteMeasurementsError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InputDataTypeWarning", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoMeasurementsError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.add_type", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.make_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_with_type", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.make_dict_validator", "_autosummary/baybe.surrogates.validation.type_validation_converter", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.clustering_algorithms", "_autosummary/baybe.utils.clustering_algorithms.third_party", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.conversion.to_string", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.handle_missing_values", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.metadata", "_autosummary/baybe.utils.metadata.MeasurableMetadata", "_autosummary/baybe.utils.metadata.Metadata", "_autosummary/baybe.utils.metadata.to_metadata", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_object_names", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.IncompleteMeasurementsError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InputDataTypeWarning.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoMeasurementsError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.add_type.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.make_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_with_type.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.make_dict_validator.rst", "_autosummary/baybe.surrogates.validation.type_validation_converter.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.clustering_algorithms.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.conversion.to_string.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.handle_missing_values.rst", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.metadata.rst", "_autosummary/baybe.utils.metadata.MeasurableMetadata.rst", "_autosummary/baybe.utils.metadata.Metadata.rst", "_autosummary/baybe.utils.metadata.to_metadata.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_object_names.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[66, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[67, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[68, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[69, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[70, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[71, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[72, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[73, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.incompletemeasurementserror method)": [[74, "baybe.exceptions.IncompleteMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[75, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.inputdatatypewarning method)": [[76, "baybe.exceptions.InputDataTypeWarning.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[77, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[78, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[79, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[80, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[81, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.nomeasurementserror method)": [[82, "baybe.exceptions.NoMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[83, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[84, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[85, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[86, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[87, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[88, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[89, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[90, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[91, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[96, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[103, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[104, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[105, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[107, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[108, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[109, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[111, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[112, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[113, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[114, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[116, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[117, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[118, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[124, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[129, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[131, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[138, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[166, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[168, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[169, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[170, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[171, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[172, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[173, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[174, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[177, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[190, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[198, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[200, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[212, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[217, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[256, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[274, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[276, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[316, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[313, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[363, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.metadata.measurablemetadata method)": [[370, "baybe.utils.metadata.MeasurableMetadata.__init__", false]], "__init__() (baybe.utils.metadata.metadata method)": [[371, "baybe.utils.metadata.Metadata.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[388, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[66, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[67, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[68, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[69, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[70, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[71, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[72, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[73, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.incompletemeasurementserror method)": [[74, "baybe.exceptions.IncompleteMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[75, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.inputdatatypewarning method)": [[76, "baybe.exceptions.InputDataTypeWarning.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[77, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[78, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[79, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[80, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[81, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.nomeasurementserror method)": [[82, "baybe.exceptions.NoMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[83, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[84, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[85, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[86, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[87, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[88, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[89, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[90, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[91, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[145, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[146, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[148, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[363, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[174, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_values() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[24, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[156, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[346, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[347, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[348, "baybe.utils.dataframe.add_parameter_noise", false]], "add_type() (in module baybe.serialization.core)": [[228, "baybe.serialization.core.add_type", false]], "additivekernel (class in baybe.kernels.composite)": [[116, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[190, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[198, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[200, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[190, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[198, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[200, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[190, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[198, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[200, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[168, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[349, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[174, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[96, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[118, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[116, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[117, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[103, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[286, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[287, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[271, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[23, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[25, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[27, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[30, "module-baybe.campaign", false]], "baybe.constraints": [[32, "module-baybe.constraints", false]], "baybe.constraints.base": [[33, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[39, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[43, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[46, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[49, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[59, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[61, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[65, "module-baybe.exceptions", false]], "baybe.insights": [[92, "module-baybe.insights", false]], "baybe.insights.shap": [[93, "module-baybe.insights.shap", false]], "baybe.kernels": [[101, "module-baybe.kernels", false]], "baybe.kernels.base": [[102, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[106, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[115, "module-baybe.kernels.composite", false]], "baybe.objectives": [[119, "module-baybe.objectives", false]], "baybe.objectives.base": [[120, "module-baybe.objectives.base", false]], "baybe.objectives.desirability": [[123, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[126, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[128, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[130, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[132, "module-baybe.objectives.validation", false]], "baybe.parameters": [[134, "module-baybe.parameters", false]], "baybe.parameters.base": [[135, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[139, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[142, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[144, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[149, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[152, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[155, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[160, "module-baybe.parameters.validation", false]], "baybe.priors": [[164, "module-baybe.priors", false]], "baybe.priors.base": [[165, "module-baybe.priors.base", false]], "baybe.priors.basic": [[167, "module-baybe.priors.basic", false]], "baybe.recommenders": [[175, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[176, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[178, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[179, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[181, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[186, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[188, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[189, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[191, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[192, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[194, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.nonpredictive": [[196, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[197, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[199, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[204, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[208, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[209, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[211, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[216, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[222, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[226, "module-baybe.serialization", false]], "baybe.serialization.core": [[227, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[235, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[237, "module-baybe.serialization.utils", false]], "baybe.simulation": [[240, "module-baybe.simulation", false]], "baybe.simulation.core": [[241, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[243, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[245, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[247, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[249, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[250, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[252, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[257, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[259, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[262, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[263, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[265, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[269, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[270, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[273, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[275, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[277, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[279, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[281, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[283, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[285, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[289, "module-baybe.surrogates.validation", false]], "baybe.targets": [[293, "module-baybe.targets", false]], "baybe.targets.base": [[294, "module-baybe.targets.base", false]], "baybe.targets.binary": [[296, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[299, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[302, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[304, "module-baybe.targets.transforms", false]], "baybe.utils": [[308, "module-baybe.utils", false]], "baybe.utils.augmentation": [[309, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[312, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[328, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[332, "module-baybe.utils.chemistry", false]], "baybe.utils.clustering_algorithms": [[337, "module-baybe.utils.clustering_algorithms", false]], "baybe.utils.clustering_algorithms.third_party": [[338, "module-baybe.utils.clustering_algorithms.third_party", false]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[339, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false]], "baybe.utils.conversion": [[341, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[345, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[362, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[367, "module-baybe.utils.memory", false]], "baybe.utils.metadata": [[369, "module-baybe.utils.metadata", false]], "baybe.utils.numerical": [[373, "module-baybe.utils.numerical", false]], "baybe.utils.random": [[380, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[383, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[387, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[389, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[392, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[301, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[305, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[168, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[168, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[297, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[229, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[230, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[368, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[31, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[288, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[145, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[140, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[329, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[298, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[316, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[377, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[378, "baybe.utils.numerical.closest_element", false]], "cluster_centers_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.cluster_centers_", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[388, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[217, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[136, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[138, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[217, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[217, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[190, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[198, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[200, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[104, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[258, "baybe.surrogates.composite.CompositeSurrogate", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[169, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[40, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[212, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[213, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[36, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[47, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[48, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[136, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[28, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[365, "baybe.utils.interval.convert_bounds", false]], "convert_to_float() (in module baybe.utils.basic)": [[317, "baybe.utils.basic.convert_to_float", false]], "converter (in module baybe.serialization.core)": [[231, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[364, "baybe.utils.interval.Interval.create", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[350, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[146, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[143, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[146, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[274, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[66, "baybe.exceptions.DeprecationError", false]], "description (baybe.objectives.base.objective property)": [[121, "baybe.objectives.base.Objective.description", false]], "description (baybe.objectives.desirability.desirabilityobjective property)": [[124, "baybe.objectives.desirability.DesirabilityObjective.description", false]], "description (baybe.objectives.pareto.paretoobjective property)": [[129, "baybe.objectives.pareto.ParetoObjective.description", false]], "description (baybe.objectives.single.singletargetobjective property)": [[131, "baybe.objectives.single.SingleTargetObjective.description", false]], "description (baybe.parameters.base.continuousparameter property)": [[136, "baybe.parameters.base.ContinuousParameter.description", false]], "description (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.description", false]], "description (baybe.parameters.base.parameter property)": [[138, "baybe.parameters.base.Parameter.description", false]], "description (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.description", false]], "description (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.description", false]], "description (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.description", false]], "description (baybe.parameters.numerical.numericalcontinuousparameter property)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.description", false]], "description (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.description", false]], "description (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.description", false]], "description (baybe.targets.base.target property)": [[295, "baybe.targets.base.Target.description", false]], "description (baybe.targets.binary.binarytarget property)": [[297, "baybe.targets.binary.BinaryTarget.description", false]], "description (baybe.targets.numerical.numericaltarget property)": [[303, "baybe.targets.numerical.NumericalTarget.description", false]], "description (baybe.utils.metadata.measurablemetadata attribute)": [[370, "baybe.utils.metadata.MeasurableMetadata.description", false]], "description (baybe.utils.metadata.metadata attribute)": [[371, "baybe.utils.metadata.Metadata.description", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[238, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[124, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[310, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[311, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[351, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[352, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[353, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[212, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[213, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[137, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[384, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[374, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[375, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[390, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[313, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[276, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[213, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[67, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[137, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[140, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[141, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[212, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.evaluate", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[217, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[217, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[217, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[96, "baybe.insights.shap.SHAPInsight.explain", false]], "explain_target() (baybe.insights.shap.shapinsight method)": [[96, "baybe.insights.shap.SHAPInsight.explain_target", false]], "explainers (baybe.insights.shap.shapinsight attribute)": [[96, "baybe.insights.shap.SHAPInsight.explainers", false]], "explainers (in module baybe.insights.shap)": [[94, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[297, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[205, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.FARTHEST", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[385, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[354, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[318, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[393, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[256, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[388, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fit_predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict", false]], "fit_transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[384, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsinitialization (class in baybe.recommenders.pure.nonpredictive.sampling)": [[205, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[342, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[96, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[212, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[103, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[104, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[105, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[107, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[108, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[109, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[111, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[112, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[113, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[114, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[116, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[117, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[118, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[121, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[124, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[129, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[131, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[136, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[137, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[138, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[140, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[141, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[154, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[166, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[168, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[169, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[170, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[171, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[172, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[173, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[174, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[212, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[236, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[255, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[295, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[297, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[303, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[364, "baybe.utils.interval.Interval.from_dict", false]], "from_dict() (baybe.utils.metadata.measurablemetadata class method)": [[370, "baybe.utils.metadata.MeasurableMetadata.from_dict", false]], "from_dict() (baybe.utils.metadata.metadata class method)": [[371, "baybe.utils.metadata.Metadata.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[103, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[104, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[105, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[107, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[108, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[109, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[111, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[112, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[113, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[114, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[116, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[117, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[118, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[121, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[124, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[129, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[131, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[136, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[137, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[138, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[140, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[141, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[154, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[166, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[168, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[169, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[170, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[171, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[172, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[173, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[174, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[212, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[236, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[255, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[295, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[297, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[303, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[364, "baybe.utils.interval.Interval.from_json", false]], "from_json() (baybe.utils.metadata.measurablemetadata class method)": [[370, "baybe.utils.metadata.MeasurableMetadata.from_json", false]], "from_json() (baybe.utils.metadata.metadata class method)": [[371, "baybe.utils.metadata.Metadata.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[212, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[212, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[96, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[96, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[355, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[169, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[200, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[271, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[127, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[379, "baybe.utils.numerical.geom_mean", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_acquisition_function() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_acquisition_function", false]], "get_baseclasses() (in module baybe.utils.basic)": [[319, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[333, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[212, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[334, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_metadata_routing() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_metadata_routing", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[212, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[157, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params", false]], "get_subclasses() (in module baybe.utils.basic)": [[320, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[356, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[223, "baybe.searchspace.validation.get_transform_parameters", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[321, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[170, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[171, "baybe.priors.basic.HalfNormalPrior", false]], "handle_missing_values() (in module baybe.utils.dataframe)": [[357, "baybe.utils.dataframe.handle_missing_values", false]], "hilberts_factory() (in module baybe.utils.basic)": [[322, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[213, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[68, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[69, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[70, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[71, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[72, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[73, "baybe.exceptions.IncompatibleSurrogateError", false]], "incompletemeasurementserror": [[74, "baybe.exceptions.IncompleteMeasurementsError", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "inertia_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.inertia_", false]], "infeasibilityerror": [[75, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[363, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "initialization (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.initialization", false]], "inputdatatypewarning": [[76, "baybe.exceptions.InputDataTypeWarning", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[145, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[364, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[77, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[78, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[330, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[323, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[60, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[136, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[138, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[136, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[138, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_empty (baybe.utils.metadata.measurablemetadata property)": [[370, "baybe.utils.metadata.MeasurableMetadata.is_empty", false]], "is_empty (baybe.utils.metadata.metadata property)": [[371, "baybe.utils.metadata.Metadata.is_empty", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[138, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[158, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[121, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[124, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[129, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[131, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[136, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[137, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[138, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[140, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[141, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[99, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[180, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "joint_acquisition_value() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.joint_acquisition_value", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[105, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kmedoids (class in baybe.utils.clustering_algorithms.third_party.kmedoids)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "labels_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.labels_", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[108, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[109, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[112, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[113, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[114, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[108, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[109, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[112, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[113, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[114, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[301, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[306, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[107, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[172, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[173, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[172, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[244, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[364, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_base_structure_hook() (in module baybe.serialization.core)": [[232, "baybe.serialization.core.make_base_structure_hook", false]], "make_dict_validator() (in module baybe.surrogates.validation)": [[290, "baybe.surrogates.validation.make_dict_validator", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[100, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[272, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[388, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[300, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[324, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[108, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[300, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[127, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurablemetadata (class in baybe.utils.metadata)": [[370, "baybe.utils.metadata.MeasurableMetadata", false]], "measurements (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.measurements", false]], "medoid_indices_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.medoid_indices_", false]], "memorysize (class in baybe.searchspace.discrete)": [[217, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.objectives.base.objective attribute)": [[121, "baybe.objectives.base.Objective.metadata", false]], "metadata (baybe.objectives.desirability.desirabilityobjective attribute)": [[124, "baybe.objectives.desirability.DesirabilityObjective.metadata", false]], "metadata (baybe.objectives.pareto.paretoobjective attribute)": [[129, "baybe.objectives.pareto.ParetoObjective.metadata", false]], "metadata (baybe.objectives.single.singletargetobjective attribute)": [[131, "baybe.objectives.single.SingleTargetObjective.metadata", false]], "metadata (baybe.parameters.base.continuousparameter attribute)": [[136, "baybe.parameters.base.ContinuousParameter.metadata", false]], "metadata (baybe.parameters.base.discreteparameter attribute)": [[137, "baybe.parameters.base.DiscreteParameter.metadata", false]], "metadata (baybe.parameters.base.parameter attribute)": [[138, "baybe.parameters.base.Parameter.metadata", false]], "metadata (baybe.parameters.categorical.categoricalparameter attribute)": [[140, "baybe.parameters.categorical.CategoricalParameter.metadata", false]], "metadata (baybe.parameters.categorical.taskparameter attribute)": [[141, "baybe.parameters.categorical.TaskParameter.metadata", false]], "metadata (baybe.parameters.custom.customdiscreteparameter attribute)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.metadata", false]], "metadata (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.metadata", false]], "metadata (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.metadata", false]], "metadata (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.metadata", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metadata (baybe.targets.base.target attribute)": [[295, "baybe.targets.base.Target.metadata", false]], "metadata (baybe.targets.binary.binarytarget attribute)": [[297, "baybe.targets.binary.BinaryTarget.metadata", false]], "metadata (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.metadata", false]], "metadata (class in baybe.utils.metadata)": [[371, "baybe.utils.metadata.Metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[180, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[300, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimumcardinalityviolatedwarning": [[79, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "misc (baybe.utils.metadata.measurablemetadata attribute)": [[370, "baybe.utils.metadata.MeasurableMetadata.misc", false]], "misc (baybe.utils.metadata.metadata attribute)": [[371, "baybe.utils.metadata.Metadata.misc", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[200, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[200, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[80, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [23, "module-baybe.acquisition.base", false], [25, "module-baybe.acquisition.partial", false], [27, "module-baybe.acquisition.utils", false], [30, "module-baybe.campaign", false], [32, "module-baybe.constraints", false], [33, "module-baybe.constraints.base", false], [39, "module-baybe.constraints.conditions", false], [43, "module-baybe.constraints.continuous", false], [46, "module-baybe.constraints.deprecation", false], [49, "module-baybe.constraints.discrete", false], [59, "module-baybe.constraints.utils", false], [61, "module-baybe.constraints.validation", false], [65, "module-baybe.exceptions", false], [92, "module-baybe.insights", false], [93, "module-baybe.insights.shap", false], [101, "module-baybe.kernels", false], [102, "module-baybe.kernels.base", false], [106, "module-baybe.kernels.basic", false], [115, "module-baybe.kernels.composite", false], [119, "module-baybe.objectives", false], [120, "module-baybe.objectives.base", false], [123, "module-baybe.objectives.desirability", false], [126, "module-baybe.objectives.enum", false], [128, "module-baybe.objectives.pareto", false], [130, "module-baybe.objectives.single", false], [132, "module-baybe.objectives.validation", false], [134, "module-baybe.parameters", false], [135, "module-baybe.parameters.base", false], [139, "module-baybe.parameters.categorical", false], [142, "module-baybe.parameters.custom", false], [144, "module-baybe.parameters.enum", false], [149, "module-baybe.parameters.numerical", false], [152, "module-baybe.parameters.substance", false], [155, "module-baybe.parameters.utils", false], [160, "module-baybe.parameters.validation", false], [164, "module-baybe.priors", false], [165, "module-baybe.priors.base", false], [167, "module-baybe.priors.basic", false], [175, "module-baybe.recommenders", false], [176, "module-baybe.recommenders.base", false], [178, "module-baybe.recommenders.meta", false], [179, "module-baybe.recommenders.meta.base", false], [181, "module-baybe.recommenders.meta.sequential", false], [186, "module-baybe.recommenders.naive", false], [188, "module-baybe.recommenders.pure", false], [189, "module-baybe.recommenders.pure.base", false], [191, "module-baybe.recommenders.pure.bayesian", false], [192, "module-baybe.recommenders.pure.bayesian.base", false], [194, "module-baybe.recommenders.pure.bayesian.botorch", false], [196, "module-baybe.recommenders.pure.nonpredictive", false], [197, "module-baybe.recommenders.pure.nonpredictive.base", false], [199, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [204, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [208, "module-baybe.searchspace", false], [209, "module-baybe.searchspace.continuous", false], [211, "module-baybe.searchspace.core", false], [216, "module-baybe.searchspace.discrete", false], [222, "module-baybe.searchspace.validation", false], [226, "module-baybe.serialization", false], [227, "module-baybe.serialization.core", false], [235, "module-baybe.serialization.mixin", false], [237, "module-baybe.serialization.utils", false], [240, "module-baybe.simulation", false], [241, "module-baybe.simulation.core", false], [243, "module-baybe.simulation.lookup", false], [245, "module-baybe.simulation.scenarios", false], [247, "module-baybe.simulation.transfer_learning", false], [249, "module-baybe.surrogates", false], [250, "module-baybe.surrogates.bandit", false], [252, "module-baybe.surrogates.base", false], [257, "module-baybe.surrogates.composite", false], [259, "module-baybe.surrogates.custom", false], [262, "module-baybe.surrogates.gaussian_process", false], [263, "module-baybe.surrogates.gaussian_process.core", false], [265, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [269, "module-baybe.surrogates.gaussian_process.presets", false], [270, "module-baybe.surrogates.gaussian_process.presets.core", false], [273, "module-baybe.surrogates.gaussian_process.presets.default", false], [275, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [277, "module-baybe.surrogates.linear", false], [279, "module-baybe.surrogates.naive", false], [281, "module-baybe.surrogates.ngboost", false], [283, "module-baybe.surrogates.random_forest", false], [285, "module-baybe.surrogates.utils", false], [289, "module-baybe.surrogates.validation", false], [293, "module-baybe.targets", false], [294, "module-baybe.targets.base", false], [296, "module-baybe.targets.binary", false], [299, "module-baybe.targets.enum", false], [302, "module-baybe.targets.numerical", false], [304, "module-baybe.targets.transforms", false], [308, "module-baybe.utils", false], [309, "module-baybe.utils.augmentation", false], [312, "module-baybe.utils.basic", false], [328, "module-baybe.utils.boolean", false], [332, "module-baybe.utils.chemistry", false], [337, "module-baybe.utils.clustering_algorithms", false], [338, "module-baybe.utils.clustering_algorithms.third_party", false], [339, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false], [341, "module-baybe.utils.conversion", false], [345, "module-baybe.utils.dataframe", false], [362, "module-baybe.utils.interval", false], [367, "module-baybe.utils.memory", false], [369, "module-baybe.utils.metadata", false], [373, "module-baybe.utils.numerical", false], [380, "module-baybe.utils.random", false], [383, "module-baybe.utils.sampling_algorithms", false], [387, "module-baybe.utils.scaling", false], [389, "module-baybe.utils.torch", false], [392, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[121, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[124, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[129, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[131, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[136, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[137, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[138, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[140, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[141, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[295, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[297, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[335, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[81, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "nomeasurementserror": [[82, "baybe.exceptions.NoMeasurementsError", false]], "non_inf_float() (in module baybe.utils.validation)": [[394, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[395, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[95, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[198, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[343, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[83, "baybe.exceptions.NoRecommendersLeftError", false]], "normalize_input_dtypes() (in module baybe.utils.dataframe)": [[358, "baybe.utils.dataframe.normalize_input_dtypes", false]], "normalprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[84, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[85, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[108, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[113, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[303, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[86, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[121, "baybe.objectives.base.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[111, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[111, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[145, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[87, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[118, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[118, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[138, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[219, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[220, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[147, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[129, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[109, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[109, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[109, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[96, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[254, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[111, "baybe.kernels.basic.PolynomialKernel.power", false]], "predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[359, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[166, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[117, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[190, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[205, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.RANDOM", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[384, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "random_tie_break (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.random_tie_break", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[169, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[177, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[190, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[198, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[200, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[177, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[325, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[261, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[326, "baybe.utils.basic.register_hooks", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "rffkernel (class in baybe.kernels.basic)": [[113, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[114, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[386, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[125, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[124, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[127, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[170, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[171, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[172, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[173, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[118, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[212, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[88, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[213, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[233, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[41, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[239, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[236, "baybe.serialization.mixin.SerialMixin", false]], "set_output() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output", false]], "set_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params", false]], "set_random_seed() (in module baybe.utils.random)": [[381, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[97, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[98, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[96, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[174, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[242, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[246, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[248, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[131, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[153, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[336, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[159, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[29, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[331, "baybe.utils.boolean.strtobool", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[41, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[210, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[148, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[154, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[297, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[138, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[255, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[255, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[255, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[256, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[258, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[295, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[300, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[121, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[124, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[129, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[131, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[301, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[141, "baybe.parameters.categorical.TaskParameter", false]], "temporary_seed() (in module baybe.utils.random)": [[382, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[42, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[256, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[103, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[104, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[105, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[107, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[108, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[109, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[111, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[112, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[113, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[114, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[116, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[117, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[118, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[124, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[129, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[131, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[138, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[166, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[168, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[169, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[170, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[171, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[172, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[173, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[174, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[212, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[236, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_dict", false]], "to_dict() (baybe.utils.metadata.measurablemetadata method)": [[370, "baybe.utils.metadata.MeasurableMetadata.to_dict", false]], "to_dict() (baybe.utils.metadata.metadata method)": [[371, "baybe.utils.metadata.Metadata.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[103, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[104, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[105, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[107, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[108, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[109, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[111, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[112, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[113, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[114, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[116, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[117, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[118, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[103, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[104, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[105, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[107, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[108, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[109, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[111, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[112, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[113, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[114, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[116, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[117, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[118, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[166, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[168, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[169, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[170, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[171, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[172, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[173, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[174, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[53, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[54, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[56, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[57, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[58, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[103, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[104, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[105, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[107, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[108, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[109, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[111, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[112, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[113, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[114, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[116, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[117, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[118, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[124, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[129, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[131, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[138, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[166, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[168, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[169, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[170, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[171, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[172, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[173, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[174, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[212, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[236, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_json", false]], "to_json() (baybe.utils.metadata.measurablemetadata method)": [[370, "baybe.utils.metadata.MeasurableMetadata.to_json", false]], "to_json() (baybe.utils.metadata.metadata method)": [[371, "baybe.utils.metadata.Metadata.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_metadata() (in module baybe.utils.metadata)": [[372, "baybe.utils.metadata.to_metadata", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[122, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[138, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[214, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.conversion)": [[344, "baybe.utils.conversion.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[360, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[327, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[124, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[129, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[131, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[212, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[388, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[361, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[301, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[307, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.type", false]], "type_validation_converter (in module baybe.surrogates.validation)": [[291, "baybe.surrogates.validation.type_validation_converter", false]], "unidentifiedsubclasserror": [[89, "baybe.exceptions.UnidentifiedSubclassError", false]], "unit (baybe.parameters.base.continuousparameter property)": [[136, "baybe.parameters.base.ContinuousParameter.unit", false]], "unit (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.unit", false]], "unit (baybe.parameters.base.parameter property)": [[138, "baybe.parameters.base.Parameter.unit", false]], "unit (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.unit", false]], "unit (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.unit", false]], "unit (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.unit", false]], "unit (baybe.parameters.numerical.numericalcontinuousparameter property)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.unit", false]], "unit (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.unit", false]], "unit (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.unit", false]], "unit (baybe.targets.base.target property)": [[295, "baybe.targets.base.Target.unit", false]], "unit (baybe.targets.binary.binarytarget property)": [[297, "baybe.targets.binary.BinaryTarget.unit", false]], "unit (baybe.targets.numerical.numericaltarget property)": [[303, "baybe.targets.numerical.NumericalTarget.unit", false]], "unit (baybe.utils.metadata.measurablemetadata attribute)": [[370, "baybe.utils.metadata.MeasurableMetadata.unit", false]], "unmatchedattributeerror": [[90, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[314, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[315, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_with_type() (in module baybe.serialization.core)": [[234, "baybe.serialization.core.unstructure_with_type", false]], "unusedobjectwarning": [[91, "baybe.exceptions.UnusedObjectWarning", false]], "update_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.update_measurements", false]], "upper (baybe.utils.interval.interval attribute)": [[364, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[366, "baybe.utils.interval.use_fallback_constructor_hook", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[62, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[63, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[64, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[292, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[161, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[162, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[396, "baybe.utils.validation.validate_not_nan", false]], "validate_object_names() (in module baybe.utils.validation)": [[397, "baybe.utils.validation.validate_object_names", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[398, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[224, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[225, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[215, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[221, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[399, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[133, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[163, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[107, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[107, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[376, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[391, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[124, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [30, 0, 0, "-", "campaign"], [32, 0, 0, "-", "constraints"], [65, 0, 0, "-", "exceptions"], [92, 0, 0, "-", "insights"], [101, 0, 0, "-", "kernels"], [119, 0, 0, "-", "objectives"], [134, 0, 0, "-", "parameters"], [164, 0, 0, "-", "priors"], [175, 0, 0, "-", "recommenders"], [208, 0, 0, "-", "searchspace"], [226, 0, 0, "-", "serialization"], [240, 0, 0, "-", "simulation"], [249, 0, 0, "-", "surrogates"], [293, 0, 0, "-", "targets"], [308, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [23, 0, 0, "-", "base"], [25, 0, 0, "-", "partial"], [27, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNParEGO"], [13, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [14, 1, 1, "", "qLogNoisyExpectedImprovement"], [15, 1, 1, "", "qNegIntegratedPosteriorVariance"], [16, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [17, 1, 1, "", "qNoisyExpectedImprovement"], [18, 1, 1, "", "qPosteriorStandardDeviation"], [19, 1, 1, "", "qProbabilityOfImprovement"], [20, 1, 1, "", "qSimpleRegret"], [21, 1, 1, "", "qThompsonSampling"], [22, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.evaluate.params": [[3, 4, 1, "", "candidates"], [3, 4, 1, "", "jointly"], [3, 4, 1, "", "measurements"], [3, 4, 1, "", "objective"], [3, 4, 1, "", "pending_experiments"], [3, 4, 1, "", "searchspace"], [3, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate.params": [[4, 4, 1, "", "candidates"], [4, 4, 1, "", "jointly"], [4, 4, 1, "", "measurements"], [4, 4, 1, "", "objective"], [4, 4, 1, "", "pending_experiments"], [4, 4, 1, "", "searchspace"], [4, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "evaluate"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.evaluate.params": [[5, 4, 1, "", "candidates"], [5, 4, 1, "", "jointly"], [5, 4, 1, "", "measurements"], [5, 4, 1, "", "objective"], [5, 4, 1, "", "pending_experiments"], [5, 4, 1, "", "searchspace"], [5, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "evaluate"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate.params": [[6, 4, 1, "", "candidates"], [6, 4, 1, "", "jointly"], [6, 4, 1, "", "measurements"], [6, 4, 1, "", "objective"], [6, 4, 1, "", "pending_experiments"], [6, 4, 1, "", "searchspace"], [6, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "evaluate"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate.params": [[7, 4, 1, "", "candidates"], [7, 4, 1, "", "jointly"], [7, 4, 1, "", "measurements"], [7, 4, 1, "", "objective"], [7, 4, 1, "", "pending_experiments"], [7, 4, 1, "", "searchspace"], [7, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate.params": [[8, 4, 1, "", "candidates"], [8, 4, 1, "", "jointly"], [8, 4, 1, "", "measurements"], [8, 4, 1, "", "objective"], [8, 4, 1, "", "pending_experiments"], [8, 4, 1, "", "searchspace"], [8, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "evaluate"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.evaluate.params": [[9, 4, 1, "", "candidates"], [9, 4, 1, "", "jointly"], [9, 4, 1, "", "measurements"], [9, 4, 1, "", "objective"], [9, 4, 1, "", "pending_experiments"], [9, 4, 1, "", "searchspace"], [9, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "evaluate"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate.params": [[10, 4, 1, "", "candidates"], [10, 4, 1, "", "jointly"], [10, 4, 1, "", "measurements"], [10, 4, 1, "", "objective"], [10, 4, 1, "", "pending_experiments"], [10, 4, 1, "", "searchspace"], [10, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "evaluate"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate.params": [[11, 4, 1, "", "candidates"], [11, 4, 1, "", "jointly"], [11, 4, 1, "", "measurements"], [11, 4, 1, "", "objective"], [11, 4, 1, "", "pending_experiments"], [11, 4, 1, "", "searchspace"], [11, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNParEGO": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "evaluate"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.evaluate.params": [[12, 4, 1, "", "candidates"], [12, 4, 1, "", "jointly"], [12, 4, 1, "", "measurements"], [12, 4, 1, "", "objective"], [12, 4, 1, "", "pending_experiments"], [12, 4, 1, "", "searchspace"], [12, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "compute_ref_point"], [13, 2, 1, "", "evaluate"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "prune_baseline"], [13, 3, 1, "", "reference_point"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[13, 4, 1, "", "array"], [13, 4, 1, "", "factor"], [13, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate.params": [[13, 4, 1, "", "candidates"], [13, 4, 1, "", "jointly"], [13, 4, 1, "", "measurements"], [13, 4, 1, "", "objective"], [13, 4, 1, "", "pending_experiments"], [13, 4, 1, "", "searchspace"], [13, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "evaluate"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate.params": [[14, 4, 1, "", "candidates"], [14, 4, 1, "", "jointly"], [14, 4, 1, "", "measurements"], [14, 4, 1, "", "objective"], [14, 4, 1, "", "pending_experiments"], [14, 4, 1, "", "searchspace"], [14, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "evaluate"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "get_integration_points"], [15, 3, 1, "", "sampling_fraction"], [15, 3, 1, "", "sampling_method"], [15, 3, 1, "", "sampling_n_points"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate.params": [[15, 4, 1, "", "candidates"], [15, 4, 1, "", "jointly"], [15, 4, 1, "", "measurements"], [15, 4, 1, "", "objective"], [15, 4, 1, "", "pending_experiments"], [15, 4, 1, "", "searchspace"], [15, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[15, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "compute_ref_point"], [16, 2, 1, "", "evaluate"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "reference_point"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[16, 4, 1, "", "array"], [16, 4, 1, "", "factor"], [16, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate.params": [[16, 4, 1, "", "candidates"], [16, 4, 1, "", "jointly"], [16, 4, 1, "", "measurements"], [16, 4, 1, "", "objective"], [16, 4, 1, "", "pending_experiments"], [16, 4, 1, "", "searchspace"], [16, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "evaluate"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "prune_baseline"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate.params": [[17, 4, 1, "", "candidates"], [17, 4, 1, "", "jointly"], [17, 4, 1, "", "measurements"], [17, 4, 1, "", "objective"], [17, 4, 1, "", "pending_experiments"], [17, 4, 1, "", "searchspace"], [17, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "evaluate"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate.params": [[18, 4, 1, "", "candidates"], [18, 4, 1, "", "jointly"], [18, 4, 1, "", "measurements"], [18, 4, 1, "", "objective"], [18, 4, 1, "", "pending_experiments"], [18, 4, 1, "", "searchspace"], [18, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "evaluate"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate.params": [[19, 4, 1, "", "candidates"], [19, 4, 1, "", "jointly"], [19, 4, 1, "", "measurements"], [19, 4, 1, "", "objective"], [19, 4, 1, "", "pending_experiments"], [19, 4, 1, "", "searchspace"], [19, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "evaluate"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.evaluate.params": [[20, 4, 1, "", "candidates"], [20, 4, 1, "", "jointly"], [20, 4, 1, "", "measurements"], [20, 4, 1, "", "objective"], [20, 4, 1, "", "pending_experiments"], [20, 4, 1, "", "searchspace"], [20, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "evaluate"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "n_mc_samples"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.evaluate.params": [[21, 4, 1, "", "candidates"], [21, 4, 1, "", "jointly"], [21, 4, 1, "", "measurements"], [21, 4, 1, "", "objective"], [21, 4, 1, "", "pending_experiments"], [21, 4, 1, "", "searchspace"], [21, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 3, 1, "", "beta"], [22, 2, 1, "", "evaluate"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate.params": [[22, 4, 1, "", "candidates"], [22, 4, 1, "", "jointly"], [22, 4, 1, "", "measurements"], [22, 4, 1, "", "objective"], [22, 4, 1, "", "pending_experiments"], [22, 4, 1, "", "searchspace"], [22, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[22, 4, 1, "", "string"]], "baybe.acquisition.base": [[24, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 2, 1, "", "evaluate"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.evaluate.params": [[24, 4, 1, "", "candidates"], [24, 4, 1, "", "jointly"], [24, 4, 1, "", "measurements"], [24, 4, 1, "", "objective"], [24, 4, 1, "", "pending_experiments"], [24, 4, 1, "", "searchspace"], [24, 4, 1, "", "surrogate"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[24, 4, 1, "", "string"]], "baybe.acquisition.partial": [[26, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "botorch_acqf"], [26, 3, 1, "", "pin_discrete"], [26, 3, 1, "", "pinned_part"], [26, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[26, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[28, 5, 1, "", "convert_acqf"], [29, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[31, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "acquisition_values"], [31, 2, 1, "", "add_measurements"], [31, 3, 1, "", "allow_recommending_already_measured"], [31, 3, 1, "", "allow_recommending_already_recommended"], [31, 3, 1, "", "allow_recommending_pending_experiments"], [31, 2, 1, "", "from_config"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 2, 1, "", "get_acquisition_function"], [31, 2, 1, "", "get_surrogate"], [31, 2, 1, "", "joint_acquisition_value"], [31, 6, 1, "", "measurements"], [31, 3, 1, "", "n_batches_done"], [31, 3, 1, "", "n_fits_done"], [31, 3, 1, "", "objective"], [31, 6, 1, "", "parameters"], [31, 2, 1, "", "posterior"], [31, 2, 1, "", "posterior_stats"], [31, 2, 1, "", "recommend"], [31, 3, 1, "", "recommender"], [31, 3, 1, "", "searchspace"], [31, 6, 1, "", "targets"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"], [31, 2, 1, "", "toggle_discrete_candidates"], [31, 2, 1, "", "update_measurements"], [31, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.acquisition_values.params": [[31, 4, 1, "", "acquisition_function"], [31, 4, 1, "", "batch_size"], [31, 4, 1, "", "candidates"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.add_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[31, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[31, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_acquisition_function.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.get_surrogate.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[31, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[31, 4, 1, "", "candidates"], [31, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[31, 4, 1, "", "complement"], [31, 4, 1, "", "constraints"], [31, 4, 1, "", "dry_run"], [31, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.update_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.validate_config.params": [[31, 4, 1, "", "config_json"]], "baybe.constraints": [[33, 0, 0, "-", "base"], [39, 0, 0, "-", "conditions"], [43, 0, 0, "-", "continuous"], [46, 0, 0, "-", "deprecation"], [49, 0, 0, "-", "discrete"], [59, 0, 0, "-", "utils"], [61, 0, 0, "-", "validation"]], "baybe.constraints.base": [[34, 1, 1, "", "CardinalityConstraint"], [35, 1, 1, "", "Constraint"], [36, 1, 1, "", "ContinuousConstraint"], [37, 1, 1, "", "ContinuousNonlinearConstraint"], [38, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "max_cardinality"], [34, 3, 1, "", "min_cardinality"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "eval_during_augmentation"], [36, 3, 1, "", "eval_during_creation"], [36, 3, 1, "", "eval_during_modeling"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 6, 1, "", "is_continuous"], [36, 6, 1, "", "is_discrete"], [36, 3, 1, "", "numerical_only"], [36, 3, 1, "", "parameters"], [36, 2, 1, "", "summary"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 2, 1, "", "get_invalid"], [38, 2, 1, "", "get_invalid_polars"], [38, 2, 1, "", "get_valid"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[38, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[38, 4, 1, "", "df"]], "baybe.constraints.conditions": [[40, 1, 1, "", "Condition"], [41, 1, 1, "", "SubSelectionCondition"], [42, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[40, 2, 1, "", "evaluate"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"], [40, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[40, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[40, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "selection"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"], [41, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[41, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[41, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "evaluate"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 3, 1, "", "operator"], [42, 3, 1, "", "threshold"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"], [42, 2, 1, "", "to_polars"], [42, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[42, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[42, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[44, 1, 1, "", "ContinuousCardinalityConstraint"], [45, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "eval_during_augmentation"], [44, 3, 1, "", "eval_during_creation"], [44, 3, 1, "", "eval_during_modeling"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 2, 1, "", "get_absolute_thresholds"], [44, 2, 1, "", "inactive_parameter_combinations"], [44, 6, 1, "", "is_continuous"], [44, 6, 1, "", "is_discrete"], [44, 3, 1, "", "max_cardinality"], [44, 3, 1, "", "min_cardinality"], [44, 6, 1, "", "n_inactive_parameter_combinations"], [44, 3, 1, "", "numerical_only"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "relative_threshold"], [44, 2, 1, "", "sample_inactive_parameters"], [44, 2, 1, "", "summary"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[44, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[44, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[44, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[45, 2, 1, "", "__init__"], [45, 3, 1, "", "coefficients"], [45, 3, 1, "", "eval_during_augmentation"], [45, 3, 1, "", "eval_during_creation"], [45, 3, 1, "", "eval_during_modeling"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 6, 1, "", "is_continuous"], [45, 6, 1, "", "is_discrete"], [45, 6, 1, "", "is_eq"], [45, 3, 1, "", "numerical_only"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "rhs"], [45, 2, 1, "", "summary"], [45, 2, 1, "", "to_botorch"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[45, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[45, 4, 1, "", "idx_offset"], [45, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[47, 5, 1, "", "ContinuousLinearEqualityConstraint"], [48, 5, 1, "", "ContinuousLinearInequalityConstraint"]], "baybe.constraints.discrete": [[50, 1, 1, "", "DiscreteCardinalityConstraint"], [51, 1, 1, "", "DiscreteCustomConstraint"], [52, 1, 1, "", "DiscreteDependenciesConstraint"], [53, 1, 1, "", "DiscreteExcludeConstraint"], [54, 1, 1, "", "DiscreteLinkedParametersConstraint"], [55, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [56, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [57, 1, 1, "", "DiscreteProductConstraint"], [58, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 2, 1, "", "get_valid"], [50, 6, 1, "", "is_continuous"], [50, 6, 1, "", "is_discrete"], [50, 3, 1, "", "max_cardinality"], [50, 3, 1, "", "min_cardinality"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[50, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[50, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[50, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[50, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"], [51, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "affected_parameters"], [52, 3, 1, "", "conditions"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 3, 1, "", "permutation_invariant"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "combiner"], [53, 3, 1, "", "conditions"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "dependencies"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "condition"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "condition"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[58, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.utils": [[60, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[60, 4, 1, "", "check_maximum"], [60, 4, 1, "", "check_minimum"], [60, 4, 1, "", "df"], [60, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[62, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [63, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [64, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[62, 4, 1, "", "constraint"], [62, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[63, 4, 1, "", "constraints"]], "baybe.exceptions": [[66, 7, 1, "", "DeprecationError"], [67, 7, 1, "", "EmptySearchSpaceError"], [68, 7, 1, "", "IncompatibilityError"], [69, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [70, 7, 1, "", "IncompatibleArgumentError"], [71, 7, 1, "", "IncompatibleExplainerError"], [72, 7, 1, "", "IncompatibleSearchSpaceError"], [73, 7, 1, "", "IncompatibleSurrogateError"], [74, 7, 1, "", "IncompleteMeasurementsError"], [75, 7, 1, "", "InfeasibilityError"], [76, 7, 1, "", "InputDataTypeWarning"], [77, 7, 1, "", "InvalidSurrogateModelError"], [78, 7, 1, "", "InvalidTargetValueError"], [79, 7, 1, "", "MinimumCardinalityViolatedWarning"], [80, 7, 1, "", "ModelNotTrainedError"], [81, 7, 1, "", "NoMCAcquisitionFunctionError"], [82, 7, 1, "", "NoMeasurementsError"], [83, 7, 1, "", "NoRecommendersLeftError"], [84, 7, 1, "", "NotEnoughPointsLeftError"], [85, 7, 1, "", "NothingToSimulateError"], [86, 7, 1, "", "NumericalUnderflowError"], [87, 7, 1, "", "OptionalImportError"], [88, 7, 1, "", "SearchSpaceMatchWarning"], [89, 7, 1, "", "UnidentifiedSubclassError"], [90, 7, 1, "", "UnmatchedAttributeError"], [91, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompleteMeasurementsError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.InputDataTypeWarning": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.NoMeasurementsError": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__new__"]], "baybe.insights": [[93, 0, 0, "-", "shap"]], "baybe.insights.shap": [[94, 8, 1, "", "EXPLAINERS"], [95, 8, 1, "", "NON_SHAP_EXPLAINERS"], [96, 1, 1, "", "SHAPInsight"], [97, 8, 1, "", "SHAP_EXPLAINERS"], [98, 8, 1, "", "SHAP_PLOTS"], [99, 5, 1, "", "is_shap_explainer"], [100, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[96, 2, 1, "", "__init__"], [96, 3, 1, "", "background_data"], [96, 2, 1, "", "explain"], [96, 2, 1, "", "explain_target"], [96, 3, 1, "", "explainers"], [96, 2, 1, "", "from_campaign"], [96, 2, 1, "", "from_recommender"], [96, 2, 1, "", "from_surrogate"], [96, 2, 1, "", "plot"]], "baybe.insights.shap.SHAPInsight.explain.params": [[96, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.explain_target.params": [[96, 4, 1, "", "data"], [96, 4, 1, "", "target_index"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[96, 4, 1, "", "campaign"], [96, 4, 1, "", "explainer_cls"], [96, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[96, 4, 1, "", "explainer_cls"], [96, 4, 1, "", "measurements"], [96, 4, 1, "", "objective"], [96, 4, 1, "", "recommender"], [96, 4, 1, "", "searchspace"], [96, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[96, 4, 1, "", "**kwargs"], [96, 4, 1, "", "data"], [96, 4, 1, "", "explanation_index"], [96, 4, 1, "", "plot_type"], [96, 4, 1, "", "show"], [96, 4, 1, "", "target_index"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[100, 4, 1, "", "data"], [100, 4, 1, "", "explainer_cls"], [100, 4, 1, "", "surrogate"], [100, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[102, 0, 0, "-", "base"], [106, 0, 0, "-", "basic"], [115, 0, 0, "-", "composite"]], "baybe.kernels.base": [[103, 1, 1, "", "BasicKernel"], [104, 1, 1, "", "CompositeKernel"], [105, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "from_dict"], [103, 2, 1, "", "from_json"], [103, 2, 1, "", "to_dict"], [103, 2, 1, "", "to_factory"], [103, 2, 1, "", "to_gpytorch"], [103, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[103, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[103, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.kernels.basic": [[107, 1, 1, "", "LinearKernel"], [108, 1, 1, "", "MaternKernel"], [109, 1, 1, "", "PeriodicKernel"], [110, 1, 1, "", "PiecewisePolynomialKernel"], [111, 1, 1, "", "PolynomialKernel"], [112, 1, 1, "", "RBFKernel"], [113, 1, 1, "", "RFFKernel"], [114, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"], [107, 3, 1, "", "variance_initial_value"], [107, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[107, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 3, 1, "", "lengthscale_initial_value"], [108, 3, 1, "", "lengthscale_prior"], [108, 3, 1, "", "nu"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 3, 1, "", "lengthscale_initial_value"], [109, 3, 1, "", "lengthscale_prior"], [109, 3, 1, "", "period_length_initial_value"], [109, 3, 1, "", "period_length_prior"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 3, 1, "", "lengthscale_initial_value"], [110, 3, 1, "", "lengthscale_prior"], [110, 3, 1, "", "q"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_factory"], [110, 2, 1, "", "to_gpytorch"], [110, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[110, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 3, 1, "", "offset_initial_value"], [111, 3, 1, "", "offset_prior"], [111, 3, 1, "", "power"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[111, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "lengthscale_initial_value"], [112, 3, 1, "", "lengthscale_prior"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[112, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 3, 1, "", "lengthscale_initial_value"], [113, 3, 1, "", "lengthscale_prior"], [113, 3, 1, "", "num_samples"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_factory"], [113, 2, 1, "", "to_gpytorch"], [113, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[113, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 3, 1, "", "lengthscale_initial_value"], [114, 3, 1, "", "lengthscale_prior"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_factory"], [114, 2, 1, "", "to_gpytorch"], [114, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[114, 4, 1, "", "string"]], "baybe.kernels.composite": [[116, 1, 1, "", "AdditiveKernel"], [117, 1, 1, "", "ProductKernel"], [118, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[116, 2, 1, "", "__init__"], [116, 3, 1, "", "base_kernels"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_factory"], [116, 2, 1, "", "to_gpytorch"], [116, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[116, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "base_kernels"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_factory"], [117, 2, 1, "", "to_gpytorch"], [117, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[117, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[118, 2, 1, "", "__init__"], [118, 3, 1, "", "base_kernel"], [118, 2, 1, "", "from_dict"], [118, 2, 1, "", "from_json"], [118, 3, 1, "", "outputscale_initial_value"], [118, 3, 1, "", "outputscale_prior"], [118, 2, 1, "", "to_dict"], [118, 2, 1, "", "to_factory"], [118, 2, 1, "", "to_gpytorch"], [118, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[118, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[118, 4, 1, "", "string"]], "baybe.objectives": [[120, 0, 0, "-", "base"], [123, 0, 0, "-", "desirability"], [126, 0, 0, "-", "enum"], [128, 0, 0, "-", "pareto"], [130, 0, 0, "-", "single"], [132, 0, 0, "-", "validation"]], "baybe.objectives.base": [[121, 1, 1, "", "Objective"], [122, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[121, 2, 1, "", "__init__"], [121, 6, 1, "", "description"], [121, 2, 1, "", "from_dict"], [121, 2, 1, "", "from_json"], [121, 3, 1, "", "is_multi_output"], [121, 3, 1, "", "metadata"], [121, 6, 1, "", "n_outputs"], [121, 6, 1, "", "targets"], [121, 2, 1, "", "to_dict"], [121, 2, 1, "", "to_json"], [121, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[121, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[121, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[121, 4, 1, "", "allow_extra"], [121, 4, 1, "", "allow_missing"], [121, 4, 1, "", "df"]], "baybe.objectives.desirability": [[124, 1, 1, "", "DesirabilityObjective"], [125, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[124, 2, 1, "", "__init__"], [124, 6, 1, "", "description"], [124, 2, 1, "", "from_dict"], [124, 2, 1, "", "from_json"], [124, 3, 1, "", "is_multi_output"], [124, 3, 1, "", "metadata"], [124, 6, 1, "", "n_outputs"], [124, 3, 1, "", "scalarizer"], [124, 6, 1, "", "targets"], [124, 2, 1, "", "to_dict"], [124, 2, 1, "", "to_json"], [124, 2, 1, "", "transform"], [124, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[124, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[124, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[124, 4, 1, "", "allow_extra"], [124, 4, 1, "", "allow_missing"], [124, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[125, 4, 1, "", "scalarizer"], [125, 4, 1, "", "values"], [125, 4, 1, "", "weights"]], "baybe.objectives.enum": [[127, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[127, 3, 1, "", "GEOM_MEAN"], [127, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[129, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[129, 2, 1, "", "__init__"], [129, 6, 1, "", "description"], [129, 2, 1, "", "from_dict"], [129, 2, 1, "", "from_json"], [129, 3, 1, "", "is_multi_output"], [129, 3, 1, "", "metadata"], [129, 6, 1, "", "n_outputs"], [129, 6, 1, "", "targets"], [129, 2, 1, "", "to_dict"], [129, 2, 1, "", "to_json"], [129, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[129, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[129, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[129, 4, 1, "", "allow_extra"], [129, 4, 1, "", "allow_missing"], [129, 4, 1, "", "df"]], "baybe.objectives.single": [[131, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[131, 2, 1, "", "__init__"], [131, 6, 1, "", "description"], [131, 2, 1, "", "from_dict"], [131, 2, 1, "", "from_json"], [131, 3, 1, "", "is_multi_output"], [131, 3, 1, "", "metadata"], [131, 6, 1, "", "n_outputs"], [131, 6, 1, "", "targets"], [131, 2, 1, "", "to_dict"], [131, 2, 1, "", "to_json"], [131, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[131, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[131, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[131, 4, 1, "", "allow_extra"], [131, 4, 1, "", "allow_missing"], [131, 4, 1, "", "df"]], "baybe.objectives.validation": [[133, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[135, 0, 0, "-", "base"], [139, 0, 0, "-", "categorical"], [142, 0, 0, "-", "custom"], [144, 0, 0, "-", "enum"], [149, 0, 0, "-", "numerical"], [152, 0, 0, "-", "substance"], [155, 0, 0, "-", "utils"], [160, 0, 0, "-", "validation"]], "baybe.parameters.base": [[136, 1, 1, "", "ContinuousParameter"], [137, 1, 1, "", "DiscreteParameter"], [138, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[136, 2, 1, "", "__init__"], [136, 6, 1, "", "comp_rep_columns"], [136, 6, 1, "", "description"], [136, 2, 1, "", "from_dict"], [136, 2, 1, "", "from_json"], [136, 6, 1, "", "is_continuous"], [136, 6, 1, "", "is_discrete"], [136, 2, 1, "", "is_in_range"], [136, 3, 1, "", "is_numerical"], [136, 3, 1, "", "metadata"], [136, 3, 1, "", "name"], [136, 2, 1, "", "summary"], [136, 2, 1, "", "to_dict"], [136, 2, 1, "", "to_json"], [136, 2, 1, "", "to_searchspace"], [136, 2, 1, "", "to_subspace"], [136, 6, 1, "", "unit"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[136, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[136, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[136, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[137, 2, 1, "", "__init__"], [137, 6, 1, "", "active_values"], [137, 6, 1, "", "comp_df"], [137, 6, 1, "", "comp_rep_columns"], [137, 6, 1, "", "description"], [137, 3, 1, "", "encoding"], [137, 2, 1, "", "from_dict"], [137, 2, 1, "", "from_json"], [137, 6, 1, "", "is_continuous"], [137, 6, 1, "", "is_discrete"], [137, 2, 1, "", "is_in_range"], [137, 3, 1, "", "is_numerical"], [137, 3, 1, "", "metadata"], [137, 3, 1, "", "name"], [137, 2, 1, "", "summary"], [137, 2, 1, "", "to_dict"], [137, 2, 1, "", "to_json"], [137, 2, 1, "", "to_searchspace"], [137, 2, 1, "", "to_subspace"], [137, 2, 1, "", "transform"], [137, 6, 1, "", "unit"], [137, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[137, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[137, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[137, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[137, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[138, 2, 1, "", "__init__"], [138, 6, 1, "", "comp_rep_columns"], [138, 6, 1, "", "description"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 6, 1, "", "is_continuous"], [138, 6, 1, "", "is_discrete"], [138, 2, 1, "", "is_in_range"], [138, 3, 1, "", "is_numerical"], [138, 3, 1, "", "metadata"], [138, 3, 1, "", "name"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_json"], [138, 2, 1, "", "to_searchspace"], [138, 6, 1, "", "unit"]], "baybe.parameters.base.Parameter.from_dict.params": [[138, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[138, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[138, 4, 1, "", "item"]], "baybe.parameters.categorical": [[140, 1, 1, "", "CategoricalParameter"], [141, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[140, 2, 1, "", "__init__"], [140, 6, 1, "", "active_values"], [140, 6, 1, "", "comp_df"], [140, 6, 1, "", "comp_rep_columns"], [140, 6, 1, "", "description"], [140, 3, 1, "", "encoding"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 6, 1, "", "is_continuous"], [140, 6, 1, "", "is_discrete"], [140, 2, 1, "", "is_in_range"], [140, 3, 1, "", "is_numerical"], [140, 3, 1, "", "metadata"], [140, 3, 1, "", "name"], [140, 2, 1, "", "summary"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_json"], [140, 2, 1, "", "to_searchspace"], [140, 2, 1, "", "to_subspace"], [140, 2, 1, "", "transform"], [140, 6, 1, "", "unit"], [140, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[140, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[140, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[140, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[140, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "active_values"], [141, 6, 1, "", "comp_df"], [141, 6, 1, "", "comp_rep_columns"], [141, 6, 1, "", "description"], [141, 3, 1, "", "encoding"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 6, 1, "", "is_continuous"], [141, 6, 1, "", "is_discrete"], [141, 2, 1, "", "is_in_range"], [141, 3, 1, "", "is_numerical"], [141, 3, 1, "", "metadata"], [141, 3, 1, "", "name"], [141, 2, 1, "", "summary"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_json"], [141, 2, 1, "", "to_searchspace"], [141, 2, 1, "", "to_subspace"], [141, 2, 1, "", "transform"], [141, 6, 1, "", "unit"], [141, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[141, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[141, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[141, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[141, 4, 1, "", "series"]], "baybe.parameters.custom": [[143, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[143, 2, 1, "", "__init__"], [143, 6, 1, "", "active_values"], [143, 6, 1, "", "comp_df"], [143, 6, 1, "", "comp_rep_columns"], [143, 3, 1, "", "data"], [143, 3, 1, "", "decorrelate"], [143, 6, 1, "", "description"], [143, 3, 1, "", "encoding"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_json"], [143, 6, 1, "", "is_continuous"], [143, 6, 1, "", "is_discrete"], [143, 2, 1, "", "is_in_range"], [143, 3, 1, "", "is_numerical"], [143, 3, 1, "", "metadata"], [143, 3, 1, "", "name"], [143, 2, 1, "", "summary"], [143, 2, 1, "", "to_dict"], [143, 2, 1, "", "to_json"], [143, 2, 1, "", "to_searchspace"], [143, 2, 1, "", "to_subspace"], [143, 2, 1, "", "transform"], [143, 6, 1, "", "unit"], [143, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[143, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[143, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[143, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[143, 4, 1, "", "series"]], "baybe.parameters.enum": [[145, 1, 1, "", "CategoricalEncoding"], [146, 1, 1, "", "CustomEncoding"], [147, 1, 1, "", "ParameterEncoding"], [148, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[145, 3, 1, "", "INT"], [145, 3, 1, "", "OHE"], [145, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[146, 3, 1, "", "CUSTOM"], [146, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[148, 3, 1, "", "ATOMPAIR"], [148, 3, 1, "", "AUTOCORR"], [148, 3, 1, "", "AVALON"], [148, 3, 1, "", "BCUT2D"], [148, 3, 1, "", "E3FP"], [148, 3, 1, "", "ECFP"], [148, 3, 1, "", "ELECTROSHAPE"], [148, 3, 1, "", "ERG"], [148, 3, 1, "", "ESTATE"], [148, 3, 1, "", "FUNCTIONALGROUPS"], [148, 3, 1, "", "GETAWAY"], [148, 3, 1, "", "GHOSECRIPPEN"], [148, 3, 1, "", "KLEKOTAROTH"], [148, 3, 1, "", "LAGGNER"], [148, 3, 1, "", "LAYERED"], [148, 3, 1, "", "LINGO"], [148, 3, 1, "", "MACCS"], [148, 3, 1, "", "MAP"], [148, 3, 1, "", "MHFP"], [148, 3, 1, "", "MORDRED"], [148, 3, 1, "", "MORGAN_FP"], [148, 3, 1, "", "MORSE"], [148, 3, 1, "", "MQNS"], [148, 3, 1, "", "PATTERN"], [148, 3, 1, "", "PHARMACOPHORE"], [148, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [148, 3, 1, "", "PUBCHEM"], [148, 3, 1, "", "RDF"], [148, 3, 1, "", "RDKIT"], [148, 3, 1, "", "RDKIT2DDESCRIPTORS"], [148, 3, 1, "", "RDKITFINGERPRINT"], [148, 3, 1, "", "SECFP"], [148, 3, 1, "", "TOPOLOGICALTORSION"], [148, 3, 1, "", "USR"], [148, 3, 1, "", "USRCAT"], [148, 3, 1, "", "VSA"], [148, 3, 1, "", "WHIM"], [148, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[150, 1, 1, "", "NumericalContinuousParameter"], [151, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[150, 2, 1, "", "__init__"], [150, 3, 1, "", "bounds"], [150, 6, 1, "", "comp_rep_columns"], [150, 6, 1, "", "description"], [150, 2, 1, "", "from_dict"], [150, 2, 1, "", "from_json"], [150, 6, 1, "", "is_continuous"], [150, 6, 1, "", "is_discrete"], [150, 2, 1, "", "is_in_range"], [150, 3, 1, "", "is_numerical"], [150, 3, 1, "", "metadata"], [150, 3, 1, "", "name"], [150, 2, 1, "", "summary"], [150, 2, 1, "", "to_dict"], [150, 2, 1, "", "to_json"], [150, 2, 1, "", "to_searchspace"], [150, 2, 1, "", "to_subspace"], [150, 6, 1, "", "unit"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[150, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[150, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[150, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[151, 2, 1, "", "__init__"], [151, 6, 1, "", "active_values"], [151, 6, 1, "", "comp_df"], [151, 6, 1, "", "comp_rep_columns"], [151, 6, 1, "", "description"], [151, 3, 1, "", "encoding"], [151, 2, 1, "", "from_dict"], [151, 2, 1, "", "from_json"], [151, 6, 1, "", "is_continuous"], [151, 6, 1, "", "is_discrete"], [151, 2, 1, "", "is_in_range"], [151, 3, 1, "", "is_numerical"], [151, 3, 1, "", "metadata"], [151, 3, 1, "", "name"], [151, 2, 1, "", "summary"], [151, 2, 1, "", "to_dict"], [151, 2, 1, "", "to_json"], [151, 2, 1, "", "to_searchspace"], [151, 2, 1, "", "to_subspace"], [151, 3, 1, "", "tolerance"], [151, 2, 1, "", "transform"], [151, 6, 1, "", "unit"], [151, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[151, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[151, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[151, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[151, 4, 1, "", "series"]], "baybe.parameters.substance": [[153, 3, 1, "", "Smiles"], [154, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[154, 2, 1, "", "__init__"], [154, 6, 1, "", "active_values"], [154, 6, 1, "", "comp_df"], [154, 6, 1, "", "comp_rep_columns"], [154, 3, 1, "", "data"], [154, 3, 1, "", "decorrelate"], [154, 6, 1, "", "description"], [154, 3, 1, "", "encoding"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 6, 1, "", "is_continuous"], [154, 6, 1, "", "is_discrete"], [154, 2, 1, "", "is_in_range"], [154, 3, 1, "", "is_numerical"], [154, 3, 1, "", "kwargs_conformer"], [154, 3, 1, "", "kwargs_fingerprint"], [154, 3, 1, "", "metadata"], [154, 3, 1, "", "name"], [154, 2, 1, "", "summary"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_json"], [154, 2, 1, "", "to_searchspace"], [154, 2, 1, "", "to_subspace"], [154, 2, 1, "", "transform"], [154, 6, 1, "", "unit"], [154, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[154, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[154, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[154, 4, 1, "", "series"]], "baybe.parameters.utils": [[156, 5, 1, "", "activate_parameter"], [157, 5, 1, "", "get_parameters_from_dataframe"], [158, 5, 1, "", "is_inactive"], [159, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[156, 4, 1, "", "parameter"], [156, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[157, 4, 1, "", "df"], [157, 4, 1, "", "factory"], [157, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[158, 4, 1, "", "lower_threshold"], [158, 4, 1, "", "upper_threshold"], [158, 4, 1, "", "x"]], "baybe.parameters.validation": [[161, 5, 1, "", "validate_decorrelation"], [162, 5, 1, "", "validate_is_finite"], [163, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[165, 0, 0, "-", "base"], [167, 0, 0, "-", "basic"]], "baybe.priors.base": [[166, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "from_dict"], [166, 2, 1, "", "from_json"], [166, 2, 1, "", "to_dict"], [166, 2, 1, "", "to_gpytorch"], [166, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[166, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[166, 4, 1, "", "string"]], "baybe.priors.basic": [[168, 1, 1, "", "BetaPrior"], [169, 1, 1, "", "GammaPrior"], [170, 1, 1, "", "HalfCauchyPrior"], [171, 1, 1, "", "HalfNormalPrior"], [172, 1, 1, "", "LogNormalPrior"], [173, 1, 1, "", "NormalPrior"], [174, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[168, 2, 1, "", "__init__"], [168, 3, 1, "", "alpha"], [168, 3, 1, "", "beta"], [168, 2, 1, "", "from_dict"], [168, 2, 1, "", "from_json"], [168, 2, 1, "", "to_dict"], [168, 2, 1, "", "to_gpytorch"], [168, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[168, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[168, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[169, 2, 1, "", "__init__"], [169, 3, 1, "", "concentration"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 3, 1, "", "rate"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_gpytorch"], [169, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[169, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 3, 1, "", "scale"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_gpytorch"], [170, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[170, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 3, 1, "", "scale"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_gpytorch"], [171, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[171, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 3, 1, "", "loc"], [172, 3, 1, "", "scale"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_gpytorch"], [172, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[172, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 3, 1, "", "loc"], [173, 3, 1, "", "scale"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[173, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[174, 2, 1, "", "__init__"], [174, 3, 1, "", "a"], [174, 3, 1, "", "b"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "sigma"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[174, 4, 1, "", "string"]], "baybe.recommenders": [[176, 0, 0, "-", "base"], [178, 0, 0, "-", "meta"], [186, 0, 0, "-", "naive"], [188, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[177, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[177, 4, 1, "", "batch_size"], [177, 4, 1, "", "measurements"], [177, 4, 1, "", "objective"], [177, 4, 1, "", "pending_experiments"], [177, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[179, 0, 0, "-", "base"], [181, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[180, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "from_dict"], [180, 2, 1, "", "from_json"], [180, 2, 1, "", "get_current_recommender"], [180, 2, 1, "", "get_next_recommender"], [180, 2, 1, "", "get_non_meta_recommender"], [180, 6, 1, "", "is_stateful"], [180, 2, 1, "", "recommend"], [180, 2, 1, "", "select_recommender"], [180, 2, 1, "", "to_dict"], [180, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[180, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[180, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[182, 1, 1, "", "BaseSequentialMetaRecommender"], [183, 1, 1, "", "SequentialMetaRecommender"], [184, 1, 1, "", "StreamingSequentialMetaRecommender"], [185, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "from_dict"], [182, 2, 1, "", "from_json"], [182, 2, 1, "", "get_current_recommender"], [182, 2, 1, "", "get_next_recommender"], [182, 2, 1, "", "get_non_meta_recommender"], [182, 6, 1, "", "is_stateful"], [182, 2, 1, "", "recommend"], [182, 2, 1, "", "select_recommender"], [182, 2, 1, "", "to_dict"], [182, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[182, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[182, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "from_dict"], [183, 2, 1, "", "from_json"], [183, 2, 1, "", "get_current_recommender"], [183, 2, 1, "", "get_next_recommender"], [183, 2, 1, "", "get_non_meta_recommender"], [183, 6, 1, "", "is_stateful"], [183, 3, 1, "", "mode"], [183, 2, 1, "", "recommend"], [183, 3, 1, "", "recommenders"], [183, 2, 1, "", "select_recommender"], [183, 2, 1, "", "to_dict"], [183, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[183, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[183, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "get_current_recommender"], [184, 2, 1, "", "get_next_recommender"], [184, 2, 1, "", "get_non_meta_recommender"], [184, 6, 1, "", "is_stateful"], [184, 2, 1, "", "recommend"], [184, 3, 1, "", "recommenders"], [184, 2, 1, "", "select_recommender"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[184, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[184, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "get_current_recommender"], [185, 2, 1, "", "get_next_recommender"], [185, 2, 1, "", "get_non_meta_recommender"], [185, 3, 1, "", "initial_recommender"], [185, 6, 1, "", "is_stateful"], [185, 2, 1, "", "recommend"], [185, 3, 1, "", "recommender"], [185, 3, 1, "", "remain_switched"], [185, 2, 1, "", "select_recommender"], [185, 3, 1, "", "switch_after"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[185, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[185, 4, 1, "", "string"]], "baybe.recommenders.naive": [[187, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[187, 2, 1, "", "__init__"], [187, 6, 1, "", "allow_recommending_already_measured"], [187, 6, 1, "", "allow_recommending_pending_experiments"], [187, 6, 1, "", "allow_repeated_recommendations"], [187, 3, 1, "", "compatibility"], [187, 3, 1, "", "cont_recommender"], [187, 3, 1, "", "disc_recommender"], [187, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[187, 4, 1, "", "batch_size"], [187, 4, 1, "", "measurements"], [187, 4, 1, "", "objective"], [187, 4, 1, "", "pending_experiments"], [187, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[189, 0, 0, "-", "base"], [191, 0, 0, "-", "bayesian"], [196, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[190, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[190, 2, 1, "", "__init__"], [190, 6, 1, "", "allow_recommending_already_measured"], [190, 6, 1, "", "allow_recommending_pending_experiments"], [190, 6, 1, "", "allow_repeated_recommendations"], [190, 3, 1, "", "compatibility"], [190, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[190, 4, 1, "", "batch_size"], [190, 4, 1, "", "measurements"], [190, 4, 1, "", "objective"], [190, 4, 1, "", "pending_experiments"], [190, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[192, 0, 0, "-", "base"], [194, 0, 0, "-", "botorch"]], "baybe.recommenders.pure.bayesian.base": [[193, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[193, 2, 1, "", "__init__"], [193, 3, 1, "", "acquisition_function"], [193, 2, 1, "", "acquisition_values"], [193, 6, 1, "", "allow_recommending_already_measured"], [193, 6, 1, "", "allow_recommending_pending_experiments"], [193, 6, 1, "", "allow_repeated_recommendations"], [193, 3, 1, "", "compatibility"], [193, 2, 1, "", "get_acquisition_function"], [193, 2, 1, "", "get_surrogate"], [193, 2, 1, "", "joint_acquisition_value"], [193, 2, 1, "", "recommend"], [193, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values.params": [[193, 4, 1, "", "acquisition_function"], [193, 4, 1, "", "candidates"], [193, 4, 1, "", "measurements"], [193, 4, 1, "", "objective"], [193, 4, 1, "", "pending_experiments"], [193, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[193, 4, 1, "", "batch_size"], [193, 4, 1, "", "measurements"], [193, 4, 1, "", "objective"], [193, 4, 1, "", "pending_experiments"], [193, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[195, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[195, 2, 1, "", "__init__"], [195, 3, 1, "", "acquisition_function"], [195, 2, 1, "", "acquisition_values"], [195, 6, 1, "", "allow_recommending_already_measured"], [195, 6, 1, "", "allow_recommending_pending_experiments"], [195, 6, 1, "", "allow_repeated_recommendations"], [195, 3, 1, "", "compatibility"], [195, 2, 1, "", "get_acquisition_function"], [195, 2, 1, "", "get_surrogate"], [195, 3, 1, "", "hybrid_sampler"], [195, 2, 1, "", "joint_acquisition_value"], [195, 3, 1, "", "max_n_subspaces"], [195, 3, 1, "", "n_raw_samples"], [195, 3, 1, "", "n_restarts"], [195, 2, 1, "", "recommend"], [195, 3, 1, "", "sampling_percentage"], [195, 3, 1, "", "sequential_continuous"], [195, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values.params": [[195, 4, 1, "", "acquisition_function"], [195, 4, 1, "", "candidates"], [195, 4, 1, "", "measurements"], [195, 4, 1, "", "objective"], [195, 4, 1, "", "pending_experiments"], [195, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[195, 4, 1, "", "batch_size"], [195, 4, 1, "", "measurements"], [195, 4, 1, "", "objective"], [195, 4, 1, "", "pending_experiments"], [195, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive": [[197, 0, 0, "-", "base"], [199, 0, 0, "-", "clustering"], [204, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[198, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[198, 2, 1, "", "__init__"], [198, 6, 1, "", "allow_recommending_already_measured"], [198, 6, 1, "", "allow_recommending_pending_experiments"], [198, 6, 1, "", "allow_repeated_recommendations"], [198, 3, 1, "", "compatibility"], [198, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[198, 4, 1, "", "batch_size"], [198, 4, 1, "", "measurements"], [198, 4, 1, "", "objective"], [198, 4, 1, "", "pending_experiments"], [198, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[200, 1, 1, "", "GaussianMixtureClusteringRecommender"], [201, 1, 1, "", "KMeansClusteringRecommender"], [202, 1, 1, "", "PAMClusteringRecommender"], [203, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[200, 2, 1, "", "__init__"], [200, 6, 1, "", "allow_recommending_already_measured"], [200, 6, 1, "", "allow_recommending_pending_experiments"], [200, 6, 1, "", "allow_repeated_recommendations"], [200, 3, 1, "", "compatibility"], [200, 3, 1, "", "model_cluster_num_parameter_name"], [200, 3, 1, "", "model_params"], [200, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[200, 4, 1, "", "batch_size"], [200, 4, 1, "", "measurements"], [200, 4, 1, "", "objective"], [200, 4, 1, "", "pending_experiments"], [200, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[201, 2, 1, "", "__init__"], [201, 6, 1, "", "allow_recommending_already_measured"], [201, 6, 1, "", "allow_recommending_pending_experiments"], [201, 6, 1, "", "allow_repeated_recommendations"], [201, 3, 1, "", "compatibility"], [201, 3, 1, "", "model_cluster_num_parameter_name"], [201, 3, 1, "", "model_params"], [201, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[201, 4, 1, "", "batch_size"], [201, 4, 1, "", "measurements"], [201, 4, 1, "", "objective"], [201, 4, 1, "", "pending_experiments"], [201, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[202, 2, 1, "", "__init__"], [202, 6, 1, "", "allow_recommending_already_measured"], [202, 6, 1, "", "allow_recommending_pending_experiments"], [202, 6, 1, "", "allow_repeated_recommendations"], [202, 3, 1, "", "compatibility"], [202, 3, 1, "", "model_cluster_num_parameter_name"], [202, 3, 1, "", "model_params"], [202, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[202, 4, 1, "", "batch_size"], [202, 4, 1, "", "measurements"], [202, 4, 1, "", "objective"], [202, 4, 1, "", "pending_experiments"], [202, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[203, 2, 1, "", "__init__"], [203, 6, 1, "", "allow_recommending_already_measured"], [203, 6, 1, "", "allow_recommending_pending_experiments"], [203, 6, 1, "", "allow_repeated_recommendations"], [203, 3, 1, "", "compatibility"], [203, 3, 1, "", "model_cluster_num_parameter_name"], [203, 3, 1, "", "model_params"], [203, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[203, 4, 1, "", "batch_size"], [203, 4, 1, "", "measurements"], [203, 4, 1, "", "objective"], [203, 4, 1, "", "pending_experiments"], [203, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[205, 1, 1, "", "FPSInitialization"], [206, 1, 1, "", "FPSRecommender"], [207, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization": [[205, 3, 1, "", "FARTHEST"], [205, 3, 1, "", "RANDOM"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[206, 2, 1, "", "__init__"], [206, 6, 1, "", "allow_recommending_already_measured"], [206, 6, 1, "", "allow_recommending_pending_experiments"], [206, 6, 1, "", "allow_repeated_recommendations"], [206, 3, 1, "", "compatibility"], [206, 3, 1, "", "initialization"], [206, 3, 1, "", "random_tie_break"], [206, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[206, 4, 1, "", "batch_size"], [206, 4, 1, "", "measurements"], [206, 4, 1, "", "objective"], [206, 4, 1, "", "pending_experiments"], [206, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[207, 2, 1, "", "__init__"], [207, 6, 1, "", "allow_recommending_already_measured"], [207, 6, 1, "", "allow_recommending_pending_experiments"], [207, 6, 1, "", "allow_repeated_recommendations"], [207, 3, 1, "", "compatibility"], [207, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[207, 4, 1, "", "batch_size"], [207, 4, 1, "", "measurements"], [207, 4, 1, "", "objective"], [207, 4, 1, "", "pending_experiments"], [207, 4, 1, "", "searchspace"]], "baybe.searchspace": [[209, 0, 0, "-", "continuous"], [211, 0, 0, "-", "core"], [216, 0, 0, "-", "discrete"], [222, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[210, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[210, 2, 1, "", "__init__"], [210, 6, 1, "", "comp_rep_bounds"], [210, 6, 1, "", "comp_rep_columns"], [210, 6, 1, "", "constraints_cardinality"], [210, 3, 1, "", "constraints_lin_eq"], [210, 3, 1, "", "constraints_lin_ineq"], [210, 3, 1, "", "constraints_nonlin"], [210, 2, 1, "", "empty"], [210, 2, 1, "", "from_bounds"], [210, 2, 1, "", "from_dataframe"], [210, 2, 1, "", "from_dict"], [210, 2, 1, "", "from_json"], [210, 2, 1, "", "from_parameter"], [210, 2, 1, "", "from_product"], [210, 6, 1, "", "full_factorial"], [210, 2, 1, "", "get_parameters_by_name"], [210, 2, 1, "", "inactive_parameter_combinations"], [210, 6, 1, "", "is_empty"], [210, 6, 1, "", "n_inactive_parameter_combinations"], [210, 6, 1, "", "parameter_names"], [210, 6, 1, "", "parameter_names_in_cardinality_constraints"], [210, 3, 1, "", "parameters"], [210, 2, 1, "", "sample_from_full_factorial"], [210, 2, 1, "", "sample_uniform"], [210, 6, 1, "", "scaling_bounds"], [210, 2, 1, "", "to_dict"], [210, 2, 1, "", "to_json"], [210, 2, 1, "", "to_searchspace"], [210, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[210, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[210, 4, 1, "", "df"], [210, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[210, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[210, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[210, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[210, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[210, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[210, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[212, 1, 1, "", "SearchSpace"], [213, 1, 1, "", "SearchSpaceType"], [214, 5, 1, "", "to_searchspace"], [215, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[212, 2, 1, "", "__init__"], [212, 6, 1, "", "comp_rep_bounds"], [212, 6, 1, "", "comp_rep_columns"], [212, 6, 1, "", "constraints"], [212, 6, 1, "", "constraints_augmentable"], [212, 3, 1, "", "continuous"], [212, 3, 1, "", "discrete"], [212, 2, 1, "", "estimate_product_space_size"], [212, 2, 1, "", "from_dataframe"], [212, 2, 1, "", "from_dict"], [212, 2, 1, "", "from_json"], [212, 2, 1, "", "from_parameter"], [212, 2, 1, "", "from_product"], [212, 2, 1, "", "get_comp_rep_parameter_indices"], [212, 2, 1, "", "get_parameters_by_name"], [212, 6, 1, "", "n_tasks"], [212, 6, 1, "", "parameter_names"], [212, 6, 1, "", "parameters"], [212, 6, 1, "", "scaling_bounds"], [212, 6, 1, "", "task_idx"], [212, 2, 1, "", "to_dict"], [212, 2, 1, "", "to_json"], [212, 2, 1, "", "transform"], [212, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[212, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[212, 4, 1, "", "df"], [212, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[212, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[212, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[212, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[212, 4, 1, "", "constraints"], [212, 4, 1, "", "empty_encoding"], [212, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[212, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[212, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[212, 4, 1, "", "allow_extra"], [212, 4, 1, "", "allow_missing"], [212, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[213, 3, 1, "", "CONTINUOUS"], [213, 3, 1, "", "DISCRETE"], [213, 3, 1, "", "EITHER"], [213, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[217, 1, 1, "", "MemorySize"], [218, 1, 1, "", "SubspaceDiscrete"], [219, 5, 1, "", "parameter_cartesian_prod_pandas"], [220, 5, 1, "", "parameter_cartesian_prod_polars"], [221, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[217, 2, 1, "", "__init__"], [217, 3, 1, "", "comp_rep_bytes"], [217, 6, 1, "", "comp_rep_human_readable"], [217, 3, 1, "", "comp_rep_shape"], [217, 3, 1, "", "exp_rep_bytes"], [217, 6, 1, "", "exp_rep_human_readable"], [217, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[218, 2, 1, "", "__init__"], [218, 3, 1, "", "comp_rep"], [218, 6, 1, "", "comp_rep_bounds"], [218, 6, 1, "", "comp_rep_columns"], [218, 3, 1, "", "constraints"], [218, 2, 1, "", "empty"], [218, 3, 1, "", "empty_encoding"], [218, 2, 1, "", "estimate_product_space_size"], [218, 3, 1, "", "exp_rep"], [218, 2, 1, "", "from_dataframe"], [218, 2, 1, "", "from_dict"], [218, 2, 1, "", "from_json"], [218, 2, 1, "", "from_parameter"], [218, 2, 1, "", "from_product"], [218, 2, 1, "", "from_simplex"], [218, 2, 1, "", "get_candidates"], [218, 2, 1, "", "get_parameters_by_name"], [218, 6, 1, "", "is_empty"], [218, 6, 1, "", "metadata"], [218, 6, 1, "", "parameter_names"], [218, 3, 1, "", "parameters"], [218, 6, 1, "", "scaling_bounds"], [218, 2, 1, "", "to_dict"], [218, 2, 1, "", "to_json"], [218, 2, 1, "", "to_searchspace"], [218, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[218, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[218, 4, 1, "", "df"], [218, 4, 1, "", "empty_encoding"], [218, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[218, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[218, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[218, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[218, 4, 1, "", "boundary_only"], [218, 4, 1, "", "constraints"], [218, 4, 1, "", "max_nonzero"], [218, 4, 1, "", "max_sum"], [218, 4, 1, "", "min_nonzero"], [218, 4, 1, "", "product_parameters"], [218, 4, 1, "", "simplex_parameters"], [218, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[218, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[219, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[220, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[223, 5, 1, "", "get_transform_parameters"], [224, 5, 1, "", "validate_parameter_names"], [225, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[227, 0, 0, "-", "core"], [235, 0, 0, "-", "mixin"], [237, 0, 0, "-", "utils"]], "baybe.serialization.core": [[228, 5, 1, "", "add_type"], [229, 5, 1, "", "block_deserialization_hook"], [230, 5, 1, "", "block_serialization_hook"], [231, 8, 1, "", "converter"], [232, 5, 1, "", "make_base_structure_hook"], [233, 5, 1, "", "select_constructor_hook"], [234, 5, 1, "", "unstructure_with_type"]], "baybe.serialization.mixin": [[236, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[236, 2, 1, "", "from_dict"], [236, 2, 1, "", "from_json"], [236, 2, 1, "", "to_dict"], [236, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[236, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[236, 4, 1, "", "string"]], "baybe.serialization.utils": [[238, 5, 1, "", "deserialize_dataframe"], [239, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[241, 0, 0, "-", "core"], [243, 0, 0, "-", "lookup"], [245, 0, 0, "-", "scenarios"], [247, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[242, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[242, 4, 1, "", "batch_size"], [242, 4, 1, "", "campaign"], [242, 4, 1, "", "impute_mode"], [242, 4, 1, "", "initial_data"], [242, 4, 1, "", "lookup"], [242, 4, 1, "", "n_doe_iterations"], [242, 4, 1, "", "noise_percent"], [242, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[244, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[244, 4, 1, "", "impute_mode"], [244, 4, 1, "", "lookup"], [244, 4, 1, "", "queries"], [244, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[246, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[246, 4, 1, "", "batch_size"], [246, 4, 1, "", "groupby"], [246, 4, 1, "", "impute_mode"], [246, 4, 1, "", "initial_data"], [246, 4, 1, "", "lookup"], [246, 4, 1, "", "n_doe_iterations"], [246, 4, 1, "", "n_mc_iterations"], [246, 4, 1, "", "noise_percent"], [246, 4, 1, "", "parallel_runs"], [246, 4, 1, "", "random_seed"], [246, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[248, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[248, 4, 1, "", "batch_size"], [248, 4, 1, "", "campaign"], [248, 4, 1, "", "groupby"], [248, 4, 1, "", "lookup"], [248, 4, 1, "", "n_doe_iterations"], [248, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[250, 0, 0, "-", "bandit"], [252, 0, 0, "-", "base"], [257, 0, 0, "-", "composite"], [259, 0, 0, "-", "custom"], [262, 0, 0, "-", "gaussian_process"], [277, 0, 0, "-", "linear"], [279, 0, 0, "-", "naive"], [281, 0, 0, "-", "ngboost"], [283, 0, 0, "-", "random_forest"], [285, 0, 0, "-", "utils"], [289, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[251, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[251, 2, 1, "", "__init__"], [251, 2, 1, "", "fit"], [251, 2, 1, "", "from_dict"], [251, 2, 1, "", "from_json"], [251, 2, 1, "", "posterior"], [251, 2, 1, "", "posterior_means"], [251, 2, 1, "", "posterior_modes"], [251, 2, 1, "", "posterior_stats"], [251, 3, 1, "", "prior"], [251, 2, 1, "", "replicate"], [251, 3, 1, "", "supports_multi_output"], [251, 3, 1, "", "supports_transfer_learning"], [251, 2, 1, "", "to_botorch"], [251, 2, 1, "", "to_dict"], [251, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[251, 4, 1, "", "measurements"], [251, 4, 1, "", "objective"], [251, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[251, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[251, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[251, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[251, 4, 1, "", "candidates"], [251, 4, 1, "", "stats"]], "baybe.surrogates.base": [[253, 1, 1, "", "IndependentGaussianSurrogate"], [254, 8, 1, "", "PosteriorStatistic"], [255, 1, 1, "", "Surrogate"], [256, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[253, 2, 1, "", "__init__"], [253, 2, 1, "", "fit"], [253, 2, 1, "", "from_dict"], [253, 2, 1, "", "from_json"], [253, 2, 1, "", "posterior"], [253, 2, 1, "", "posterior_stats"], [253, 2, 1, "", "replicate"], [253, 3, 1, "", "supports_multi_output"], [253, 3, 1, "", "supports_transfer_learning"], [253, 2, 1, "", "to_botorch"], [253, 2, 1, "", "to_dict"], [253, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[253, 4, 1, "", "measurements"], [253, 4, 1, "", "objective"], [253, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[253, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[253, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[253, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[253, 4, 1, "", "candidates"], [253, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate": [[255, 2, 1, "", "__init__"], [255, 2, 1, "", "fit"], [255, 2, 1, "", "from_dict"], [255, 2, 1, "", "from_json"], [255, 2, 1, "", "posterior"], [255, 2, 1, "", "posterior_stats"], [255, 2, 1, "", "replicate"], [255, 3, 1, "", "supports_multi_output"], [255, 3, 1, "", "supports_transfer_learning"], [255, 2, 1, "", "to_botorch"], [255, 2, 1, "", "to_dict"], [255, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[255, 4, 1, "", "measurements"], [255, 4, 1, "", "objective"], [255, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[255, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[255, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[255, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[255, 4, 1, "", "candidates"], [255, 4, 1, "", "stats"]], "baybe.surrogates.base.SurrogateProtocol": [[256, 2, 1, "", "__init__"], [256, 2, 1, "", "fit"], [256, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[258, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "fit"], [258, 2, 1, "", "from_dict"], [258, 2, 1, "", "from_json"], [258, 2, 1, "", "from_replication"], [258, 2, 1, "", "posterior"], [258, 2, 1, "", "posterior_stats"], [258, 3, 1, "", "surrogates"], [258, 2, 1, "", "to_botorch"], [258, 2, 1, "", "to_dict"], [258, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[258, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[258, 4, 1, "", "string"]], "baybe.surrogates.custom": [[260, 1, 1, "", "CustomONNXSurrogate"], [261, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "fit"], [260, 2, 1, "", "from_dict"], [260, 2, 1, "", "from_json"], [260, 3, 1, "", "onnx_input_name"], [260, 3, 1, "", "onnx_str"], [260, 2, 1, "", "posterior"], [260, 2, 1, "", "posterior_stats"], [260, 2, 1, "", "replicate"], [260, 3, 1, "", "supports_multi_output"], [260, 3, 1, "", "supports_transfer_learning"], [260, 2, 1, "", "to_botorch"], [260, 2, 1, "", "to_dict"], [260, 2, 1, "", "to_json"], [260, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[260, 4, 1, "", "measurements"], [260, 4, 1, "", "objective"], [260, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[260, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[260, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[260, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[260, 4, 1, "", "candidates"], [260, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[260, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[263, 0, 0, "-", "core"], [265, 0, 0, "-", "kernel_factory"], [269, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[264, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "fit"], [264, 2, 1, "", "from_dict"], [264, 2, 1, "", "from_json"], [264, 2, 1, "", "from_preset"], [264, 3, 1, "", "kernel_factory"], [264, 2, 1, "", "posterior"], [264, 2, 1, "", "posterior_stats"], [264, 2, 1, "", "replicate"], [264, 3, 1, "", "supports_multi_output"], [264, 3, 1, "", "supports_transfer_learning"], [264, 2, 1, "", "to_botorch"], [264, 2, 1, "", "to_dict"], [264, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[264, 4, 1, "", "measurements"], [264, 4, 1, "", "objective"], [264, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[264, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[264, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[264, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[264, 4, 1, "", "candidates"], [264, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.kernel_factory": [[266, 1, 1, "", "KernelFactory"], [267, 1, 1, "", "PlainKernelFactory"], [268, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[266, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[267, 2, 1, "", "__init__"], [267, 2, 1, "", "from_dict"], [267, 2, 1, "", "from_json"], [267, 3, 1, "", "kernel"], [267, 2, 1, "", "to_dict"], [267, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[267, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[267, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[270, 0, 0, "-", "core"], [273, 0, 0, "-", "default"], [275, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[271, 1, 1, "", "GaussianProcessPreset"], [272, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[271, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[274, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[274, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[276, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[276, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[278, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[278, 2, 1, "", "__init__"], [278, 2, 1, "", "fit"], [278, 2, 1, "", "from_dict"], [278, 2, 1, "", "from_json"], [278, 3, 1, "", "model_params"], [278, 2, 1, "", "posterior"], [278, 2, 1, "", "posterior_stats"], [278, 2, 1, "", "replicate"], [278, 3, 1, "", "supports_multi_output"], [278, 3, 1, "", "supports_transfer_learning"], [278, 2, 1, "", "to_botorch"], [278, 2, 1, "", "to_dict"], [278, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[278, 4, 1, "", "measurements"], [278, 4, 1, "", "objective"], [278, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[278, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[278, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[278, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[278, 4, 1, "", "candidates"], [278, 4, 1, "", "stats"]], "baybe.surrogates.naive": [[280, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[280, 2, 1, "", "__init__"], [280, 2, 1, "", "fit"], [280, 2, 1, "", "from_dict"], [280, 2, 1, "", "from_json"], [280, 2, 1, "", "posterior"], [280, 2, 1, "", "posterior_stats"], [280, 2, 1, "", "replicate"], [280, 3, 1, "", "supports_multi_output"], [280, 3, 1, "", "supports_transfer_learning"], [280, 2, 1, "", "to_botorch"], [280, 2, 1, "", "to_dict"], [280, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[280, 4, 1, "", "measurements"], [280, 4, 1, "", "objective"], [280, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[280, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[280, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[280, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[280, 4, 1, "", "candidates"], [280, 4, 1, "", "stats"]], "baybe.surrogates.ngboost": [[282, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[282, 2, 1, "", "__init__"], [282, 2, 1, "", "fit"], [282, 2, 1, "", "from_dict"], [282, 2, 1, "", "from_json"], [282, 3, 1, "", "model_params"], [282, 2, 1, "", "posterior"], [282, 2, 1, "", "posterior_stats"], [282, 2, 1, "", "replicate"], [282, 3, 1, "", "supports_multi_output"], [282, 3, 1, "", "supports_transfer_learning"], [282, 2, 1, "", "to_botorch"], [282, 2, 1, "", "to_dict"], [282, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[282, 4, 1, "", "measurements"], [282, 4, 1, "", "objective"], [282, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[282, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[282, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[282, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[282, 4, 1, "", "candidates"], [282, 4, 1, "", "stats"]], "baybe.surrogates.random_forest": [[284, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[284, 2, 1, "", "__init__"], [284, 2, 1, "", "fit"], [284, 2, 1, "", "from_dict"], [284, 2, 1, "", "from_json"], [284, 3, 1, "", "model_params"], [284, 2, 1, "", "posterior"], [284, 2, 1, "", "posterior_stats"], [284, 2, 1, "", "replicate"], [284, 3, 1, "", "supports_multi_output"], [284, 3, 1, "", "supports_transfer_learning"], [284, 2, 1, "", "to_botorch"], [284, 2, 1, "", "to_dict"], [284, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[284, 4, 1, "", "measurements"], [284, 4, 1, "", "objective"], [284, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[284, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[284, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[284, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[284, 4, 1, "", "candidates"], [284, 4, 1, "", "stats"]], "baybe.surrogates.utils": [[286, 5, 1, "", "batchify_ensemble_predictor"], [287, 5, 1, "", "batchify_mean_var_prediction"], [288, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[286, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[288, 4, 1, "", "cls"], [288, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[290, 5, 1, "", "make_dict_validator"], [291, 8, 1, "", "type_validation_converter"], [292, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.make_dict_validator.params": [[290, 4, 1, "", "specification"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[292, 4, 1, "", "model_cls"]], "baybe.targets": [[294, 0, 0, "-", "base"], [296, 0, 0, "-", "binary"], [299, 0, 0, "-", "enum"], [302, 0, 0, "-", "numerical"], [304, 0, 0, "-", "transforms"]], "baybe.targets.base": [[295, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[295, 2, 1, "", "__init__"], [295, 6, 1, "", "description"], [295, 2, 1, "", "from_dict"], [295, 2, 1, "", "from_json"], [295, 3, 1, "", "metadata"], [295, 3, 1, "", "name"], [295, 2, 1, "", "summary"], [295, 2, 1, "", "to_dict"], [295, 2, 1, "", "to_json"], [295, 2, 1, "", "to_objective"], [295, 2, 1, "", "transform"], [295, 6, 1, "", "unit"]], "baybe.targets.base.Target.from_dict.params": [[295, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[295, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[295, 4, 1, "", "series"]], "baybe.targets.binary": [[297, 1, 1, "", "BinaryTarget"], [298, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[297, 2, 1, "", "__init__"], [297, 6, 1, "", "description"], [297, 3, 1, "", "failure_value"], [297, 2, 1, "", "from_dict"], [297, 2, 1, "", "from_json"], [297, 3, 1, "", "metadata"], [297, 3, 1, "", "name"], [297, 3, 1, "", "success_value"], [297, 2, 1, "", "summary"], [297, 2, 1, "", "to_dict"], [297, 2, 1, "", "to_json"], [297, 2, 1, "", "to_objective"], [297, 2, 1, "", "transform"], [297, 6, 1, "", "unit"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[297, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[297, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[297, 4, 1, "", "series"]], "baybe.targets.enum": [[300, 1, 1, "", "TargetMode"], [301, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[300, 3, 1, "", "MATCH"], [300, 3, 1, "", "MAX"], [300, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[301, 3, 1, "", "BELL"], [301, 3, 1, "", "LINEAR"], [301, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[303, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[303, 2, 1, "", "__init__"], [303, 3, 1, "", "bounds"], [303, 6, 1, "", "description"], [303, 2, 1, "", "from_dict"], [303, 2, 1, "", "from_json"], [303, 3, 1, "", "metadata"], [303, 3, 1, "", "mode"], [303, 3, 1, "", "name"], [303, 2, 1, "", "summary"], [303, 2, 1, "", "to_dict"], [303, 2, 1, "", "to_json"], [303, 2, 1, "", "to_objective"], [303, 2, 1, "", "transform"], [303, 3, 1, "", "transformation"], [303, 6, 1, "", "unit"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[303, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[303, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[303, 4, 1, "", "series"]], "baybe.targets.transforms": [[305, 5, 1, "", "bell_transform"], [306, 5, 1, "", "linear_transform"], [307, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[305, 4, 1, "", "arr"], [305, 4, 1, "", "lower"], [305, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[306, 4, 1, "", "arr"], [306, 4, 1, "", "descending"], [306, 4, 1, "", "lower"], [306, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[307, 4, 1, "", "arr"], [307, 4, 1, "", "lower"], [307, 4, 1, "", "upper"]], "baybe.utils": [[309, 0, 0, "-", "augmentation"], [312, 0, 0, "-", "basic"], [328, 0, 0, "-", "boolean"], [332, 0, 0, "-", "chemistry"], [337, 0, 0, "-", "clustering_algorithms"], [341, 0, 0, "-", "conversion"], [345, 0, 0, "-", "dataframe"], [362, 0, 0, "-", "interval"], [367, 0, 0, "-", "memory"], [369, 0, 0, "-", "metadata"], [373, 0, 0, "-", "numerical"], [380, 0, 0, "-", "random"], [383, 0, 0, "-", "sampling_algorithms"], [387, 0, 0, "-", "scaling"], [389, 0, 0, "-", "torch"], [392, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[310, 5, 1, "", "df_apply_dependency_augmentation"], [311, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[310, 4, 1, "", "affected"], [310, 4, 1, "", "causing"], [310, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[311, 4, 1, "", "column_groups"], [311, 4, 1, "", "df"]], "baybe.utils.basic": [[313, 1, 1, "", "Dummy"], [314, 8, 1, "", "UNSPECIFIED"], [315, 1, 1, "", "UnspecifiedType"], [316, 1, 1, "", "classproperty"], [317, 5, 1, "", "convert_to_float"], [318, 5, 1, "", "find_subclass"], [319, 5, 1, "", "get_baseclasses"], [320, 5, 1, "", "get_subclasses"], [321, 5, 1, "", "group_duplicate_values"], [322, 5, 1, "", "hilberts_factory"], [323, 5, 1, "", "is_all_instance"], [324, 5, 1, "", "match_attributes"], [325, 5, 1, "", "refers_to"], [326, 5, 1, "", "register_hooks"], [327, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[313, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[316, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[319, 4, 1, "", "abstract"], [319, 4, 1, "", "cls"], [319, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[320, 4, 1, "", "abstract"], [320, 4, 1, "", "cls"], [320, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[321, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[324, 4, 1, "", "callable_"], [324, 4, 1, "", "ignore"], [324, 4, 1, "", "object"], [324, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[326, 4, 1, "", "post_hooks"], [326, 4, 1, "", "pre_hooks"], [326, 4, 1, "", "target"]], "baybe.utils.boolean": [[329, 5, 1, "", "check_if_in"], [330, 5, 1, "", "is_abstract"], [331, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[329, 4, 1, "", "allowed"], [329, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[330, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[331, 4, 1, "", "val"]], "baybe.utils.chemistry": [[333, 5, 1, "", "get_canonical_smiles"], [334, 5, 1, "", "get_fingerprint_class"], [335, 5, 1, "", "name_to_smiles"], [336, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[334, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[335, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[336, 4, 1, "", "encoding"], [336, 4, 1, "", "kwargs_conformer"], [336, 4, 1, "", "kwargs_fingerprint"], [336, 4, 1, "", "prefix"], [336, 4, 1, "", "smiles"]], "baybe.utils.clustering_algorithms": [[338, 0, 0, "-", "third_party"]], "baybe.utils.clustering_algorithms.third_party": [[339, 0, 0, "-", "kmedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[340, 1, 1, "", "KMedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids": [[340, 2, 1, "", "__init__"], [340, 3, 1, "", "cluster_centers_"], [340, 2, 1, "", "fit"], [340, 2, 1, "", "fit_predict"], [340, 2, 1, "", "fit_transform"], [340, 2, 1, "", "get_metadata_routing"], [340, 2, 1, "", "get_params"], [340, 3, 1, "", "inertia_"], [340, 3, 1, "", "labels_"], [340, 3, 1, "", "medoid_indices_"], [340, 2, 1, "", "predict"], [340, 2, 1, "", "set_output"], [340, 2, 1, "", "set_params"], [340, 2, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit.params": [[340, 4, 1, "", "X"], [340, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict.params": [[340, 4, 1, "", "**kwargs"], [340, 4, 1, "", "X"], [340, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform.params": [[340, 4, 1, "", "**fit_params"], [340, 4, 1, "", "X"], [340, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params.params": [[340, 4, 1, "", "deep"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params": [[340, 4, 1, "", "init"], [340, 4, 1, "", "max_iter"], [340, 4, 1, "", "method"], [340, 4, 1, "", "metric"], [340, 4, 1, "", "n_clusters"], [340, 4, 1, "", "random_state"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict.params": [[340, 4, 1, "", "X"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output.params": [[340, 4, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params.params": [[340, 4, 1, "", "**params"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform.params": [[340, 4, 1, "", "-------"], [340, 4, 1, "", "Returns"], [340, 4, 1, "", "X"], [340, 4, 1, "", "X_new"]], "baybe.utils.conversion": [[342, 5, 1, "", "fraction_to_float"], [343, 5, 1, "", "nonstring_to_tuple"], [344, 5, 1, "", "to_string"]], "baybe.utils.conversion.fraction_to_float.params": [[342, 4, 1, "", "value"]], "baybe.utils.conversion.to_string.params": [[344, 4, 1, "", "*fields"], [344, 4, 1, "", "header"], [344, 4, 1, "", "single_line"]], "baybe.utils.dataframe": [[346, 5, 1, "", "add_fake_measurements"], [347, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [348, 5, 1, "", "add_parameter_noise"], [349, 5, 1, "", "arrays_to_dataframes"], [350, 5, 1, "", "create_fake_input"], [351, 5, 1, "", "df_drop_single_value_columns"], [352, 5, 1, "", "df_drop_string_columns"], [353, 5, 1, "", "df_uncorrelated_features"], [354, 5, 1, "", "filter_df"], [355, 5, 1, "", "fuzzy_row_match"], [356, 5, 1, "", "get_transform_objects"], [357, 5, 1, "", "handle_missing_values"], [358, 5, 1, "", "normalize_input_dtypes"], [359, 5, 1, "", "pretty_print_df"], [360, 5, 1, "", "to_tensor"], [361, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[346, 4, 1, "", "bad_intervals"], [346, 4, 1, "", "data"], [346, 4, 1, "", "good_intervals"], [346, 4, 1, "", "good_reference_values"], [346, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[347, 4, 1, "", "df"], [347, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[348, 4, 1, "", "data"], [348, 4, 1, "", "noise_level"], [348, 4, 1, "", "noise_type"], [348, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[349, 4, 1, "", "input_labels"], [349, 4, 1, "", "output_labels"], [349, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[350, 4, 1, "", "**kwargs"], [350, 4, 1, "", "n_rows"], [350, 4, 1, "", "parameters"], [350, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[351, 4, 1, "", "df"], [351, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[352, 4, 1, "", "df"], [352, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[353, 4, 1, "", "df"], [353, 4, 1, "", "exclude_list"], [353, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[354, 4, 1, "", "complement"], [354, 4, 1, "", "df"], [354, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[355, 4, 1, "", "left_df"], [355, 4, 1, "", "parameters"], [355, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[356, 4, 1, "", "allow_extra"], [356, 4, 1, "", "allow_missing"], [356, 4, 1, "", "df"], [356, 4, 1, "", "objects"]], "baybe.utils.dataframe.handle_missing_values.params": [[357, 4, 1, "", "columns"], [357, 4, 1, "", "data"], [357, 4, 1, "", "drop"]], "baybe.utils.dataframe.normalize_input_dtypes.params": [[358, 4, 1, "", "df"], [358, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[359, 4, 1, "", "df"], [359, 4, 1, "", "max_columns"], [359, 4, 1, "", "max_colwidth"], [359, 4, 1, "", "max_rows"], [359, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[360, 4, 1, "", "*x"]], "baybe.utils.interval": [[363, 7, 1, "", "InfiniteIntervalError"], [364, 1, 1, "", "Interval"], [365, 5, 1, "", "convert_bounds"], [366, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[363, 2, 1, "", "__init__"], [363, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[364, 2, 1, "", "__init__"], [364, 6, 1, "", "center"], [364, 2, 1, "", "contains"], [364, 2, 1, "", "create"], [364, 2, 1, "", "from_dict"], [364, 2, 1, "", "from_json"], [364, 6, 1, "", "is_bounded"], [364, 6, 1, "", "is_degenerate"], [364, 6, 1, "", "is_fully_unbounded"], [364, 6, 1, "", "is_half_bounded"], [364, 6, 1, "", "is_left_bounded"], [364, 6, 1, "", "is_right_bounded"], [364, 3, 1, "", "lower"], [364, 2, 1, "", "to_dict"], [364, 2, 1, "", "to_json"], [364, 2, 1, "", "to_ndarray"], [364, 2, 1, "", "to_tensor"], [364, 2, 1, "", "to_tuple"], [364, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[364, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[364, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[364, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[365, 4, 1, "", "bounds"]], "baybe.utils.memory": [[368, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[368, 4, 1, "", "num"]], "baybe.utils.metadata": [[370, 1, 1, "", "MeasurableMetadata"], [371, 1, 1, "", "Metadata"], [372, 5, 1, "", "to_metadata"]], "baybe.utils.metadata.MeasurableMetadata": [[370, 2, 1, "", "__init__"], [370, 3, 1, "", "description"], [370, 2, 1, "", "from_dict"], [370, 2, 1, "", "from_json"], [370, 6, 1, "", "is_empty"], [370, 3, 1, "", "misc"], [370, 2, 1, "", "to_dict"], [370, 2, 1, "", "to_json"], [370, 3, 1, "", "unit"]], "baybe.utils.metadata.MeasurableMetadata.from_dict.params": [[370, 4, 1, "", "dictionary"]], "baybe.utils.metadata.MeasurableMetadata.from_json.params": [[370, 4, 1, "", "string"]], "baybe.utils.metadata.Metadata": [[371, 2, 1, "", "__init__"], [371, 3, 1, "", "description"], [371, 2, 1, "", "from_dict"], [371, 2, 1, "", "from_json"], [371, 6, 1, "", "is_empty"], [371, 3, 1, "", "misc"], [371, 2, 1, "", "to_dict"], [371, 2, 1, "", "to_json"]], "baybe.utils.metadata.Metadata.from_dict.params": [[371, 4, 1, "", "dictionary"]], "baybe.utils.metadata.Metadata.from_json.params": [[371, 4, 1, "", "string"]], "baybe.utils.metadata.to_metadata.params": [[372, 4, 1, "", "cls"], [372, 4, 1, "", "value"]], "baybe.utils.numerical": [[374, 3, 1, "", "DTypeFloatNumpy"], [375, 3, 1, "", "DTypeFloatONNX"], [376, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [377, 5, 1, "", "closer_element"], [378, 5, 1, "", "closest_element"], [379, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[377, 4, 1, "", "target"], [377, 4, 1, "", "x"], [377, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[378, 4, 1, "", "array"], [378, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[379, 4, 1, "", "arr"], [379, 4, 1, "", "weights"]], "baybe.utils.random": [[381, 5, 1, "", "set_random_seed"], [382, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[381, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[382, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[384, 1, 1, "", "DiscreteSamplingMethod"], [385, 5, 1, "", "farthest_point_sampling"], [386, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[384, 3, 1, "", "FPS"], [384, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[385, 4, 1, "", "initialization"], [385, 4, 1, "", "n_samples"], [385, 4, 1, "", "points"], [385, 4, 1, "", "random_tie_break"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[386, 4, 1, "", "df"], [386, 4, 1, "", "method"], [386, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[388, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[388, 2, 1, "", "__init__"], [388, 2, 1, "", "fit"], [388, 3, 1, "", "mapping"], [388, 2, 1, "", "transform"]], "baybe.utils.torch": [[390, 8, 1, "", "DTypeFloatTorch"], [391, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[393, 5, 1, "", "finite_float"], [394, 5, 1, "", "non_inf_float"], [395, 5, 1, "", "non_nan_float"], [396, 5, 1, "", "validate_not_nan"], [397, 5, 1, "", "validate_object_names"], [398, 5, 1, "", "validate_parameter_input"], [399, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_object_names.params": [[397, 4, 1, "", "objects"]], "baybe.utils.validation.validate_parameter_input.params": [[398, 4, 1, "", "data"], [398, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [398, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[399, 4, 1, "", "data"], [399, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 195, 210, 212, 218, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 322, 340, 360, 364, 370, 371, 400, 403, 410, 414, 417, 418, 421, 422, 424, 425, 426, 427, 428, 430, 435, 439, 440, 441, 444, 445, 446, 449, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 465], "0": [8, 13, 16, 22, 31, 34, 44, 45, 50, 108, 143, 151, 154, 174, 182, 183, 184, 195, 218, 242, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 305, 306, 307, 310, 311, 331, 340, 347, 348, 353, 354, 375, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 425, 427, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 444, 449, 450, 451, 452, 453, 457, 458, 460, 461, 462, 464, 467], "00": [434, 460], "000": [414, 436], "000000": 436, "0006386589999465286": 417, "000696": 425, "001": [44, 347, 421, 453], "003963": 425, "005": [402, 403, 404, 406, 407], "006954": 406, "007425": 425, "009347": 432, "01": [174, 409, 410, 415, 418, 433, 434, 441], "010637": 425, "012601": 432, "02": 441, "021": [276, 353], "022208": 432, "022280": 425, "022661": 432, "022862": 429, "023405": 425, "03213": [276, 353], "036320": 429, "046672": 425, "047989": 425, "05": 441, "053246": 433, "057": [402, 403, 404, 406, 407, 417], "058375": 407, "06": [218, 288, 421], "071877": 429, "08": 441, "081466": 432, "09653736976391157": 427, "0f": 418, "1": [13, 16, 26, 31, 44, 108, 125, 143, 154, 185, 195, 210, 242, 244, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 305, 306, 307, 310, 311, 321, 331, 340, 348, 350, 354, 375, 379, 385, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 425, 427, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 444, 445, 449, 451, 452, 453, 457, 458, 460, 461, 462, 464, 467], "10": [13, 16, 195, 244, 276, 353, 401, 403, 412, 413, 414, 418, 421, 422, 424, 425, 427, 429, 430, 432, 436, 437, 438, 440, 441, 444, 451, 452, 454, 458, 462, 467], "100": [407, 412, 413, 414, 415, 418, 421, 422, 424, 425, 429, 430, 436, 441, 456, 457, 458, 462, 464, 467], "1000": [430, 462], "101": 434, "1024": [148, 446, 458], "102568": 432, "1038": [276, 353], "1039": 444, "105": [402, 403, 404, 406, 407, 417, 429, 460], "105060": 432, "107": 433, "108469": 429, "11": [316, 406, 407, 424, 425, 429, 445, 451], "111": 436, "1147": 414, "1148": 414, "1149": 414, "115": 433, "1150": 414, "116964": 425, "118004": 425, "12": [424, 425, 434, 451, 452, 460], "120": [402, 403, 404, 406, 407, 412, 414, 417, 458], "120000": 433, "120002": 434, "122": [422, 436], "124125": 429, "126": [412, 414, 415, 445], "1268824": [402, 403, 404], "128": 10, "129": 340, "13": [424, 425, 440, 447, 460], "130630": 429, "133": 434, "1337": [418, 419, 467], "135": 340, "136226": 429, "138663": 407, "139195": 434, "14": [424, 425, 444, 460], "140369": 425, "142": 434, "14448993259018328": 427, "1454": 446, "15": [244, 414, 424, 425, 440, 441, 444, 452, 460], "150": [412, 415, 453], "1500": 458, "151": 414, "153": [402, 403, 404, 406, 407, 417], "158": 429, "16": [359, 375, 424, 425, 437], "165": 429, "166736": 425, "168": 422, "169": 429, "17": [424, 425], "174137": 432, "176191": 432, "177": 436, "177857": 425, "18": [424, 425, 429, 452], "180": 412, "180587": 432, "184": 429, "188": [421, 436], "189": 429, "189114": 425, "19": [424, 425], "192": 414, "193": 429, "1963": 340, "1991": 444, "1e": [218, 288, 421], "2": [8, 13, 16, 22, 108, 110, 125, 244, 310, 311, 321, 340, 346, 354, 379, 385, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 418, 419, 421, 422, 424, 425, 427, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 444, 449, 451, 452, 453, 456, 457, 458, 460, 461, 462, 464], "20": [13, 16, 154, 244, 401, 402, 403, 404, 418, 419, 424, 425, 429, 434, 446, 458, 465, 467], "200": [403, 412, 414, 421, 422, 427, 436], "2000": [421, 444], "2004": 449, "2007": 465, "2009": 340, "2021": 403, "2022": 444, "2025": 444, "206819": 432, "207": 429, "21": [424, 425], "22": [13, 16, 424, 425, 429, 452], "220773": 425, "221": [429, 446], "222": 436, "222222": [422, 436], "225": 433, "23": [424, 452, 462], "24": [406, 413, 424, 429, 434, 460], "241": 458, "241724": 432, "242691": 432, "248131": 432, "25": [418, 424, 425, 440, 460], "250": 450, "251": 407, "255": 433, "26": [424, 425, 460], "263997": 425, "264": 406, "266789": 425, "267098": 429, "267386": 425, "27": [424, 460], "277": 429, "278": 429, "278315": 425, "279": 429, "28": [421, 424], "280": 429, "281340": 425, "283795": 425, "285387": 432, "286461": 425, "29": [421, 424, 429, 444], "293458": 432, "294645": 425, "294780": 425, "295": 407, "298": 407, "299802": 425, "3": [244, 310, 311, 316, 321, 354, 359, 402, 403, 404, 407, 410, 412, 413, 414, 415, 417, 419, 422, 424, 425, 427, 429, 430, 432, 433, 434, 436, 437, 440, 441, 444, 445, 447, 449, 451, 452, 453, 456, 458, 460, 461, 462, 464, 465], "30": [401, 415, 419, 424, 425, 458], "300": [340, 421], "300167": 432, "300595": 425, "303973": 425, "3078f3": 446, "309128": 425, "31": 424, "316387": 432, "316435": 425, "32": [413, 424, 425, 452, 458], "320889": 434, "325692": 429, "327978": 434, "33": [413, 424, 429, 437], "331784": 425, "3336": 340, "3341": 340, "334469": 425, "336123": 432, "34": [413, 452], "341894": 425, "344881": 425, "346728": 425, "35": [413, 424], "36": 340, "366341": 429, "370958": 429, "38": [429, 452], "381660": 425, "386031": 425, "389764": 429, "39": 458, "3d": 419, "4": [13, 16, 148, 310, 311, 340, 359, 409, 410, 412, 413, 414, 415, 419, 424, 425, 427, 429, 432, 433, 434, 444, 449, 451, 452, 453, 458, 460], "40": [424, 457, 458], "406609": 432, "406805": 434, "40x": 446, "410293": 432, "413922": 429, "417436": 425, "419221": 425, "42": [425, 427, 430, 452], "429097": 425, "432703": 425, "433435": 425, "434010": 429, "434032": 432, "44": 425, "440067": 432, "447": 412, "448": 412, "449": 412, "449777": 425, "45": [424, 429, 464], "450": 412, "46": 425, "461254": 429, "467353": 432, "468": 446, "49": 425, "490547": 425, "491983": 432, "493170": 407, "494203": 425, "4x": 446, "5": [108, 154, 310, 311, 402, 404, 409, 412, 413, 414, 415, 418, 421, 422, 424, 425, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 444, 449, 450, 451, 452, 453, 458, 460, 462, 465, 467], "50": [415, 422, 424, 427, 436, 440, 441, 449, 450, 458, 460, 464], "500": [419, 458], "5066666666666667": 427, "507040": 429, "51": 429, "511713": 432, "52": 429, "5313": 327, "532287": 429, "535440": 425, "54": [429, 444, 452], "547356": 434, "548016": 429, "548400": 425, "55": [429, 464], "56": [429, 452, 462], "561967": 432, "566212": 429, "568038": 429, "57": 425, "571981": 432, "574880": 429, "576120": 425, "580665": 432, "583000": 429, "586063": 406, "586148": 429, "586464": 434, "587318": 434, "59": [436, 444, 452], "590": 403, "6": [310, 311, 359, 402, 403, 404, 412, 413, 414, 415, 424, 425, 427, 429, 432, 434, 436, 449, 453, 460], "60": [429, 457], "600979": 429, "602897": 425, "605533": 429, "609078": 425, "610482": 425, "616153": 425, "62": [427, 429, 452], "63": 425, "64": 195, "642467": 432, "646530": 425, "65": [425, 427], "650790": 432, "655426": 429, "655815": 425, "659379": 434, "66": 425, "66368270ffd51418ec58bd793f2d9b1b": 465, "666931": 432, "670550": 425, "675548": 425, "68": [425, 429], "69": [402, 403, 404], "696480": 434, "698855": 433, "7": [154, 310, 311, 353, 413, 415, 419, 424, 425, 429, 430, 432, 440, 449, 451, 452, 458, 460], "70": 424, "700340": 425, "702488": 432, "706667": 433, "71": 458, "710736": 432, "715184": 425, "72": [436, 452], "723742": 425, "724373": 425, "73": 425, "730442": 433, "733742": 434, "745": 467, "746714": 425, "75": [424, 433, 460], "76": 425, "761589": 425, "772581": 425, "777915": 434, "778": 436, "79": [436, 444], "796787": 425, "797241": 429, "7gz": 458, "7hf": 458, "8": [311, 340, 402, 404, 412, 414, 415, 424, 425, 427, 429, 432, 444, 449, 451, 453], "80": [425, 453], "818581": 425, "824419": 429, "83": 452, "831682": 432, "8389": 327, "8417": 327, "843420": 429, "849063": 429, "851958": 432, "855405": 429, "857": 414, "857656": 432, "860382": 425, "861": 415, "862": 415, "863": 415, "864": 415, "87": [436, 452], "870538": 425, "88": 436, "881920": 425, "8859": 421, "888710": 425, "888889": 421, "889": 436, "89": [403, 433, 436], "897911": 425, "8jq": 458, "9": [13, 16, 415, 419, 424, 425, 429, 432, 449, 451, 452, 460, 461], "90": [402, 403, 404, 406, 407, 417, 436, 460], "903380": 425, "904310": 432, "909744": 425, "91": 452, "910963": 429, "914827": 429, "92": 429, "923695": 425, "927333": 425, "933057": 425, "938944": 425, "94": 429, "941411": 429, "941898": 429, "943579": 429, "95": 429, "96": 403, "97": 429, "979399": 425, "984803": 432, "988167": 425, "988369": 425, "988389": 425, "994169": 425, "997276": 432, "999": 453, "A": [0, 13, 16, 26, 31, 38, 40, 41, 42, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 72, 74, 78, 80, 81, 82, 83, 86, 89, 91, 96, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 125, 129, 131, 137, 140, 141, 143, 151, 154, 156, 157, 158, 167, 168, 169, 170, 171, 172, 173, 174, 177, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 219, 220, 236, 237, 242, 244, 246, 248, 251, 253, 255, 258, 260, 264, 266, 267, 274, 276, 278, 280, 282, 284, 295, 297, 303, 305, 306, 307, 310, 316, 319, 320, 321, 324, 334, 340, 346, 353, 354, 356, 357, 368, 370, 371, 379, 383, 385, 388, 401, 413, 422, 424, 425, 427, 429, 437, 438, 443, 445, 446, 447, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465], "AND": [53, 414, 449, 453], "AS": [444, 449], "And": 421, "As": [402, 403, 404, 419, 427, 429, 440, 441, 444, 445, 446, 451, 452, 453, 456, 459, 460, 462, 466], "But": 464, "By": [96, 124, 157, 218, 330, 354, 425, 447, 451, 452, 454, 455, 457, 459, 460], "FOR": 449, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 96, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 164, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 217, 218, 242, 248, 251, 253, 255, 256, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 295, 297, 303, 326, 355, 361, 364, 370, 371, 385, 388, 402, 403, 404, 406, 407, 413, 417, 418, 419, 424, 425, 427, 429, 434, 440, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467], "If": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 96, 100, 121, 124, 125, 129, 131, 133, 156, 157, 162, 163, 183, 184, 187, 193, 195, 206, 210, 212, 218, 224, 225, 242, 244, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 306, 311, 319, 320, 324, 326, 329, 331, 334, 340, 342, 344, 346, 347, 348, 350, 353, 354, 355, 356, 357, 372, 385, 386, 397, 398, 399, 407, 409, 418, 424, 433, 434, 437, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467], "In": [31, 45, 56, 156, 195, 212, 240, 242, 324, 359, 402, 403, 404, 406, 418, 419, 421, 424, 425, 427, 429, 430, 433, 434, 437, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "It": [26, 177, 184, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 240, 259, 280, 340, 346, 402, 406, 407, 413, 422, 424, 427, 429, 434, 436, 437, 438, 440, 446, 451, 452, 453, 454, 458, 459, 460, 462, 467], "Its": [244, 421], "No": [355, 402, 403, 418, 432, 443, 446], "Not": [340, 449, 453], "OF": [444, 449], "OR": [444, 449], "Of": [407, 416, 442, 461], "On": [340, 421, 427], "One": [145, 402, 404, 430, 444], "Or": 454, "Such": [407, 453, 456, 462], "That": [44, 212, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 306, 407, 412, 424, 447, 460, 462, 465], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 67, 96, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 125, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 158, 164, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 217, 218, 231, 236, 240, 242, 244, 246, 251, 253, 255, 256, 258, 260, 264, 267, 278, 280, 282, 284, 286, 288, 292, 295, 297, 300, 303, 305, 306, 307, 310, 311, 316, 319, 320, 321, 324, 326, 329, 330, 331, 334, 340, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 368, 370, 371, 372, 377, 378, 379, 381, 382, 385, 386, 398, 399, 402, 403, 404, 407, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 429, 433, 434, 438, 440, 441, 443, 445, 446, 447, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 463, 464, 466, 467], "Then": 419, "There": [85, 288, 375, 424, 432, 444, 445, 447, 451, 455, 460, 463], "These": [400, 403, 404, 405, 408, 411, 416, 420, 423, 426, 428, 431, 435, 439, 444, 447, 451, 453, 458, 460], "To": [402, 407, 418, 419, 425, 427, 430, 436, 440, 441, 444, 445, 447, 451, 452, 453, 454, 455, 457, 458, 462, 463], "Will": 450, "With": [346, 418, 419, 424, 427, 430, 440, 441, 444, 451, 453, 458, 461], "_": [133, 162, 163, 215, 221, 229, 409, 418, 419, 441], "__": [133, 340], "__class__": [417, 427], "__excepthook__": 445, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 217, 218, 251, 253, 255, 256, 258, 260, 264, 266, 267, 274, 276, 278, 280, 282, 284, 295, 297, 303, 313, 316, 340, 363, 364, 370, 371, 388, 460, 461], "__name__": [417, 427], "__new__": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 145, 146, 148, 363], "__str__": 446, "__version__": 446, "_amount": 424, "_ardregressionparam": 278, "_arraylik": 349, "_buffer": [13, 16, 125, 158, 305, 306, 307, 378, 379], "_c": 320, "_cumbest": 242, "_default_my_attribut": 447, "_discretelabellikeparamet": [140, 143, 154], "_expectedhypervolumeimprov": [13, 16], "_fit": 292, "_iterbest": 242, "_label": 424, "_measur": 242, "_n_last_measur": [182, 183, 184], "_nbase": 336, "_nestedsequ": [13, 16, 125, 158, 305, 306, 307, 378, 379], "_ngbregressorparam": 282, "_no_tl": 440, "_option": 446, "_posterior": 292, "_posterior_comp": 446, "_randomforestregressorparam": 284, "_supportsarrai": [13, 16, 125, 158, 305, 306, 307, 378, 379], "_surrogategett": 258, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 223, 232, 233, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 321, 322, 323, 343, 356, 358, 364, 370, 371], "_target": 446, "_tmetadata": 372, "_tparamet": 157, "_tsurrog": [287, 288], "_u": 321, "_validate_my_attribut": 447, "a1": 311, "a2": 311, "ab": [415, 424], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 318, 325, 446, 466], "abc": [24, 34, 35, 36, 37, 38, 40, 103, 104, 105, 121, 137, 138, 166, 180, 190, 193, 198, 203, 253, 255, 295, 330], "abil": [450, 451, 455, 465], "abl": [419, 445, 451, 453, 458, 461, 467], "about": [8, 26, 31, 138, 154, 295, 402, 403, 404, 424, 433, 434, 444, 446, 447, 452, 456, 458, 460, 463], "abov": [288, 307, 330, 353, 401, 407, 414, 415, 417, 418, 425, 432, 444, 447, 449, 450, 451, 452, 453, 455, 458, 461, 462, 463, 465], "absenc": 457, "absolut": [44, 151, 348], "abstract": [24, 34, 35, 36, 37, 38, 40, 103, 104, 105, 121, 136, 137, 138, 166, 180, 190, 193, 198, 255, 295, 319, 320, 330, 446, 453, 465], "abstractli": 427, "acceler": [444, 446, 448, 465], "accept": [31, 183, 251, 253, 255, 260, 264, 278, 280, 282, 284, 349, 418, 419, 446, 449, 454, 457, 458, 462, 464], "access": [210, 218, 251, 253, 255, 260, 264, 278, 280, 282, 284, 402, 403, 404, 412, 417, 441, 446, 451, 453, 458, 461], "accord": [44, 178, 425, 450, 453, 459, 467], "accordingli": [195, 452, 455, 457, 461], "account": 451, "accumul": [168, 427, 465], "accur": [340, 452], "acet": [402, 403, 404, 406, 407], "aceton": 424, "achiev": [21, 218, 419, 424, 427, 430, 444, 447, 450, 452, 453, 455, 463], "ack": 444, "acq_funct": 407, "acq_valu": 452, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 418, 419, 427], "acqf1": 461, "acqf2": 461, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 69, 81, 193, 195, 412, 413, 414, 415, 418, 419, 427, 429, 436, 444, 446, 450, 457, 459, 461, 463, 466], "acquisition_funct": [31, 193, 195, 407, 418, 419, 427, 437, 438, 446], "acquisition_function_cl": 446, "acquisition_valu": [31, 193, 195, 418, 419, 446, 452], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 31, 193, 195, 427, 446, 461], "across": [424, 427, 440, 451, 459, 465], "act": [424, 446, 449, 453, 462], "action": [21, 417, 427, 443, 446, 466], "activ": [15, 34, 156, 185, 195, 418, 419, 427, 444, 445, 446, 447, 453, 454, 455, 456, 459, 465, 466, 467], "activate_paramet": 446, "active_dim": [103, 104, 105, 108, 110, 112, 113, 114], "active_valu": [137, 140, 141, 143, 151, 154, 440, 441, 446, 455, 458, 465], "actual": [183, 212, 240, 433, 446, 456, 460, 462, 465, 467], "ad": [31, 218, 310, 340, 346, 385, 424, 425, 443, 447, 450, 455, 463, 464, 466], "adapt": [184, 276, 331, 353], "add": [31, 228, 234, 244, 346, 347, 407, 421, 422, 424, 429, 440, 444, 449, 451, 452, 453, 456, 460, 465, 467], "add_collection3d": 419, "add_fake_measur": [350, 406, 407, 412, 413, 414, 415, 421, 422, 429, 446, 451, 462, 467], "add_fake_result": 446, "add_measur": [31, 350, 406, 407, 409, 410, 412, 413, 414, 415, 419, 421, 422, 427, 429, 430, 433, 434, 444, 446, 451, 452, 455], "add_noise_to_perturb_degenerate_row": 446, "add_parameter_nois": [350, 446, 467], "add_subplot": 419, "add_typ": 446, "addendum": 449, "addit": [31, 96, 121, 124, 129, 131, 183, 195, 212, 242, 244, 246, 340, 348, 350, 370, 371, 402, 403, 404, 425, 433, 441, 444, 446, 448, 449, 452, 453, 454, 456, 457, 458, 460, 461, 462, 465, 467], "addition": [417, 425, 444, 456], "additiveexplain": [94, 97], "additivekernel": 446, "address": 462, "adher": [446, 447], "adjust": [156, 184, 403, 407, 433, 446, 455, 457], "administ": 466, "adopt": 407, "adrian": [444, 448], "advanc": [184, 427, 445, 446, 454, 457, 461, 465, 466], "advantag": [424, 447], "advic": 447, "advis": [449, 462], "affect": [31, 52, 62, 64, 195, 210, 310, 417, 436, 443, 445, 453], "affected_paramet": [52, 412, 413, 414, 415, 424, 453], "affili": 444, "afford": 452, "aforement": [212, 454], "after": [185, 326, 406, 407, 412, 413, 414, 415, 419, 429, 436, 444, 452, 456, 457, 458, 461, 466], "afterward": 461, "again": [418, 451, 452, 453, 465], "against": [90, 324, 424, 449, 455, 465], "agent": 425, "aggreg": 457, "agraw": 448, "agre": [444, 449, 456], "agreement": 449, "ai": [101, 164, 375], "aim": [451, 452, 456], "akin": 451, "al": [403, 444, 458], "aldrich": 448, "alex": 448, "alexand": [444, 448], "algorithm": [188, 195, 340, 346, 383, 385, 401, 424, 429, 444, 446, 451, 456, 459], "alia": [153, 254, 458], "alias": 446, "align": [156, 210, 326, 418, 460, 465], "all": [23, 24, 33, 35, 40, 44, 52, 54, 60, 62, 96, 102, 103, 104, 105, 120, 121, 124, 135, 138, 143, 147, 154, 165, 166, 176, 179, 180, 183, 189, 190, 192, 195, 197, 198, 210, 212, 219, 220, 244, 251, 252, 255, 294, 295, 310, 323, 324, 340, 346, 358, 402, 403, 404, 407, 409, 410, 412, 413, 417, 418, 419, 424, 425, 427, 429, 432, 433, 440, 441, 444, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "allclos": [409, 410, 425], "alleg": 449, "allow": [21, 31, 34, 44, 50, 54, 121, 124, 129, 131, 151, 157, 184, 212, 218, 246, 278, 284, 290, 329, 355, 356, 398, 399, 402, 403, 404, 407, 424, 425, 440, 441, 444, 446, 450, 452, 453, 455, 457, 459, 460, 461, 462, 463, 464, 467], "allow_": [446, 455], "allow_extra": [121, 124, 129, 131, 210, 212, 218, 223, 356, 361, 429, 446], "allow_miss": [121, 124, 129, 131, 210, 212, 218, 223, 356, 361, 446], "allow_recommending_already_measur": [31, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 427, 437, 438, 443, 446, 452], "allow_recommending_already_recommend": [31, 419, 427, 437, 438, 443, 446, 452], "allow_recommending_pending_experi": [31, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 446, 452], "allow_repeated_recommend": [187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 446], "almost": 403, "alon": [446, 449], "along": [379, 449, 458, 465], "alongsid": 449, "alpha": [168, 419, 430], "alpha_1": 421, "alpha_2": 421, "alpha_init": 421, "alphabet": [159, 446], "alreadi": [31, 218, 251, 253, 255, 260, 264, 278, 280, 282, 284, 424, 434, 444, 446, 450, 451, 452, 455, 460, 462, 463, 465, 467], "also": [31, 44, 56, 96, 157, 251, 253, 255, 260, 264, 278, 280, 282, 284, 324, 326, 346, 347, 348, 402, 409, 410, 418, 419, 421, 422, 424, 429, 430, 433, 434, 436, 440, 441, 444, 446, 447, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "alter": [424, 446, 452, 455], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 288, 340, 379, 417, 424, 425, 432, 444, 446, 454, 455, 463, 466, 467], "although": [424, 434, 437, 460, 462], "alwai": [15, 31, 40, 229, 230, 385, 421, 424, 425, 447, 450, 452, 453, 462, 463, 465, 467], "ambigu": [151, 314, 315, 460], "amend": 453, "among": [34, 424, 444, 457, 465], "amount": [311, 386, 425, 440, 441, 451, 453, 456, 458, 467], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 69, 70, 71, 73, 75, 76, 77, 81, 87, 90, 91, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 129, 131, 133, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 158, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 234, 236, 240, 242, 244, 246, 251, 253, 255, 258, 260, 261, 264, 267, 278, 280, 282, 284, 286, 287, 290, 295, 297, 303, 310, 314, 315, 322, 324, 326, 329, 335, 340, 343, 344, 353, 354, 355, 357, 359, 363, 364, 365, 370, 371, 378, 386, 397, 402, 404, 405, 407, 414, 415, 417, 418, 421, 422, 425, 429, 432, 436, 437, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "analog": [212, 346, 453, 460, 461], "analogi": [178, 459], "analys": 466, "analysi": [444, 456, 463], "analyt": [3, 4, 7, 8, 81, 451, 462, 465], "analyz": [444, 447, 456], "angl": 419, "ani": [13, 16, 63, 64, 87, 96, 125, 136, 137, 138, 140, 141, 143, 154, 157, 158, 161, 162, 163, 228, 229, 230, 234, 238, 239, 246, 305, 306, 307, 310, 323, 324, 326, 327, 329, 330, 344, 350, 355, 357, 364, 366, 370, 371, 372, 378, 379, 393, 394, 395, 396, 399, 417, 424, 440, 441, 443, 444, 445, 446, 447, 449, 451, 452, 454, 455, 458, 461, 462, 465], "annot": [232, 326, 417, 449], "anoth": [52, 365, 403, 413, 414, 421, 422, 424, 434, 447, 453, 465], "ansatz": 446, "answer": 452, "anti": 354, "anymor": [446, 465], "anyth": 331, "anywai": 463, "anywher": 409, "apach": [444, 449], "apart": [447, 452], "api": [340, 444, 445, 446, 448, 461, 466], "aplei": 456, "appar": 461, "appdata": 445, "appear": [324, 445, 446, 449, 461], "append": [419, 441], "appendix": 449, "appli": [31, 40, 41, 42, 56, 195, 212, 240, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 324, 335, 348, 350, 388, 407, 408, 411, 412, 414, 415, 417, 418, 424, 440, 445, 446, 449, 453, 456, 457, 459, 460, 461, 462, 463, 464, 465], "applic": [340, 344, 444, 447, 449, 458, 459, 462], "approach": [218, 418, 427, 444, 447, 450, 452, 455, 457, 459, 461, 463, 465], "appropri": [47, 48, 218, 427, 447, 449, 455, 460], "approxim": [10, 21, 453, 456], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 38, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 68, 79, 83, 84, 85, 96, 121, 124, 125, 129, 131, 137, 140, 141, 143, 151, 154, 156, 157, 158, 163, 177, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 242, 244, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 307, 310, 311, 319, 320, 321, 323, 324, 326, 330, 331, 340, 346, 347, 349, 350, 351, 355, 356, 358, 385, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 422, 424, 425, 427, 429, 432, 433, 436, 437, 440, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "arang": [409, 419, 458], "arbitrari": [184, 212, 366, 446, 453, 458, 459, 462, 465, 467], "arbitrarili": [457, 461], "architectur": [251, 253, 255, 260, 264, 278, 280, 282, 284, 292, 446, 463, 465], "ard_num_dim": [103, 104, 105, 108, 110, 112, 113, 114], "ardregress": 278, "area": 419, "arg": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 107, 109, 111, 116, 117, 118, 166, 168, 169, 170, 171, 172, 173, 174, 177, 256, 261, 266, 363, 447], "argu": 424, "argument": [31, 70, 91, 96, 101, 154, 157, 164, 180, 182, 183, 184, 185, 193, 195, 210, 218, 246, 256, 258, 326, 340, 350, 354, 407, 422, 429, 446, 453, 456, 458, 459, 460, 461, 462, 465], "aris": [55, 424, 446, 447, 449, 453, 461, 467], "arithmet": [127, 457], "arizona": 448, "arm": [250, 251, 442, 448], "arm_index": 427, "around": [13, 16, 44, 202, 246, 248, 429, 446, 459, 461, 467], "arr": [305, 306, 307, 379, 430], "arrai": [13, 16, 125, 158, 305, 306, 307, 313, 340, 349, 360, 374, 378, 379, 385, 419, 446, 459, 463], "arrays_to_datafram": [409, 410, 419, 430, 433, 434, 440, 441, 446, 462], "arriv": [444, 455], "articl": 444, "artifici": 467, "aryl": [402, 403, 404, 406, 444, 458], "asarrai": 340, "ascend": 429, "ask": [424, 444, 446, 447, 452, 455], "aspect": [405, 409, 410, 434, 451, 454], "aspir": 466, "assembl": [424, 461, 463], "assembli": [463, 466], "assert": [64, 133, 355, 412, 413, 414, 415, 421, 422, 424, 425, 432, 436, 446, 449, 452, 453, 461, 463], "assess": [446, 456, 462], "assign": [346, 418, 425, 432, 458], "associ": [212, 427, 446, 449, 452, 457, 465], "assum": [26, 45, 259, 326, 355, 356, 402, 403, 404, 407, 409, 410, 412, 413, 414, 415, 421, 422, 424, 427, 429, 433, 434, 436, 444, 449, 451, 453, 455, 458, 461, 463, 464, 467], "assumpt": 462, "assur": 453, "asymmetr": 44, "asynchron": [444, 452, 466], "atol": [409, 410], "atompair": 148, "atompairfingerprint": 148, "attach": [26, 326, 417, 418, 419, 449], "attempt": [80, 87, 259, 427, 445, 446, 451, 453, 456, 457, 459], "attent": 185, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 133, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 217, 218, 251, 253, 255, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 290, 295, 297, 303, 324, 327, 364, 370, 371, 388, 396, 446], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 90, 93, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 127, 129, 131, 136, 137, 138, 140, 141, 143, 145, 146, 148, 150, 151, 152, 154, 157, 161, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 205, 206, 207, 210, 212, 213, 217, 218, 227, 251, 252, 253, 255, 258, 260, 264, 267, 271, 274, 276, 278, 280, 282, 284, 289, 292, 295, 296, 297, 300, 301, 303, 312, 315, 324, 343, 356, 364, 370, 371, 373, 384, 388, 389, 392, 393, 394, 395, 396, 432, 446, 447, 449, 453, 459, 461, 463, 464], "audit": [446, 447], "augment": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 212, 286, 287, 288, 446, 452], "author": [444, 449], "authorship": 449, "auto": [12, 13, 14, 16, 17, 446, 448], "auto_tutori": 375, "autocorr": 148, "autocorrfingerprint": 148, "autodoc": 446, "automat": [31, 195, 264, 401, 419, 433, 445, 446, 447, 453, 456, 457, 459, 460, 463, 465, 466], "avail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 74, 82, 127, 143, 145, 146, 148, 154, 183, 184, 242, 244, 271, 300, 301, 384, 385, 386, 404, 406, 409, 410, 424, 429, 433, 434, 444, 445, 446, 447, 449, 451, 452, 454, 456, 458, 459, 460, 461, 462, 465, 466], "available_acq_funct": 407, "avalon": 148, "avalonfingerprint": 148, "averag": [280, 418, 419, 441, 458, 462], "avoid": [212, 327, 379, 446, 447, 451, 452, 458, 460], "awai": [13, 16, 156, 464], "awar": [424, 440, 441, 446, 447, 450, 455, 461], "ax": [96, 401, 403, 418, 419, 430, 440, 441], "axes3d": 419, "axi": [210, 242, 379, 401, 409, 410, 415, 418, 419, 424, 425, 427, 429, 430, 433, 434, 440, 441, 460], "ayesian": 444, "azim": 419, "azur": 446, "b": [44, 55, 174, 276, 310, 321, 353, 354, 403, 413, 422, 427, 437, 438, 443, 444, 447, 449, 452, 455, 458, 461], "b1": 311, "b2": 311, "back": [0, 436, 443, 446, 447, 455], "background": [96, 100, 446, 451, 456], "background_data": 96, "backport": 445, "backtest": [240, 241, 247, 404, 439, 442, 444, 446, 459, 462], "backtick": 447, "backward": 446, "bad": [429, 452, 454, 464], "bad_interv": 346, "badg": 446, "bai": 444, "baird": 448, "balanc": [124, 427, 444], "banana": 447, "bandit": [251, 407, 442, 444, 446, 448], "banner": 446, "bar": [96, 98, 421, 422, 424, 436, 437, 438, 444, 446, 456, 463], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 127, 129, 131, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 181, 182, 183, 184, 185, 187, 190, 193, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 217, 218, 232, 236, 251, 253, 255, 256, 258, 259, 260, 264, 266, 267, 271, 274, 276, 278, 280, 282, 284, 288, 290, 295, 297, 300, 301, 303, 313, 315, 316, 318, 319, 320, 340, 349, 354, 364, 370, 371, 384, 385, 388, 401, 406, 407, 418, 419, 421, 423, 427, 442, 444, 446, 449, 450, 452, 453, 454, 456, 458, 459, 460, 461, 463], "base1": 425, "base2": 425, "base_data": 418, "base_kernel": [116, 117, 118], "base_nam": [401, 403, 418, 419, 440, 441], "base_predictor": 286, "base_smil": 418, "baseestim": 340, "basefingerprinttransform": 334, "baselin": [401, 403, 440, 444, 458], "basesequentialmetarecommend": [183, 184], "bashrc": 454, "basi": [112, 444, 449, 451, 456], "basic": [103, 107, 108, 109, 110, 111, 112, 113, 114, 168, 169, 170, 171, 172, 173, 174, 242, 313, 315, 316, 371, 402, 403, 404, 407, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 429, 433, 434, 435, 436, 439, 442, 446, 447, 455, 457, 458, 462, 466], "basic_transfer_learn": 441, "basickernel": [107, 108, 109, 110, 111, 112, 113, 114, 446], "batch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 177, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 245, 286, 287, 407, 412, 413, 414, 415, 419, 429, 433, 434, 436, 440, 441, 446, 451, 455, 459, 462], "batch_quant": 446, "batch_shap": [103, 104, 105, 108, 110, 112, 113, 114], "batch_siz": [31, 44, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 242, 246, 248, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 421, 422, 425, 427, 429, 430, 433, 434, 436, 437, 440, 441, 444, 446, 451, 452, 455, 462], "batchnr": 429, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 127, 129, 131, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 205, 206, 207, 210, 212, 213, 217, 218, 236, 251, 253, 255, 256, 258, 260, 264, 266, 267, 271, 274, 276, 278, 280, 282, 284, 295, 297, 300, 301, 303, 313, 315, 316, 340, 364, 370, 371, 384, 388, 400, 401, 402, 403, 404, 405, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "baybe_2025": 444, "baybe_cach": 454, "baybe_cache_dir": [446, 454], "baybe_deactivate_polar": [446, 454], "baybe_debug_fake_hosthash": 446, "baybe_debug_fake_userhash": 446, "baybe_numpy_use_single_precis": [376, 446, 454], "baybe_parallel_simulation_run": [246, 454], "baybe_telemetry_endpoint": 446, "baybe_telemetry_host": 446, "baybe_telemetry_hostnam": 446, "baybe_telemetry_usernam": 446, "baybe_telemetry_vpn_check": 446, "baybe_telemetry_vpn_check_timeout": 446, "baybe_torch_use_single_precis": [391, 446, 454], "baybe_use_fpsampl": [206, 446, 454], "bayesian": [0, 187, 193, 195, 240, 242, 246, 248, 259, 278, 427, 446, 450, 452, 456, 463, 466], "bayesian_recommend": 419, "bayesianlinearmodel": 422, "bayesianlinearsurrog": [407, 446, 463], "bayesianrecommend": [187, 195, 259, 446, 459], "bayesianridg": 421, "bcut2d": [148, 446], "bcut2dfingerprint": 148, "bcw07": 465, "becaus": [44, 85, 151, 156, 212, 218, 248, 330, 417, 418, 424, 441, 447, 450, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 465], "becom": [212, 424, 446, 450, 452, 453, 461, 464, 467], "been": [26, 31, 80, 81, 183, 251, 253, 255, 260, 264, 278, 280, 282, 284, 355, 402, 403, 444, 445, 446, 449, 451, 452, 457, 459, 465], "beeswarm": [96, 98, 456], "befor": [80, 185, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 326, 401, 404, 407, 413, 418, 444, 446, 447, 454, 455, 458, 460], "begin": [183, 412, 414, 432, 436, 459, 463], "behalf": 449, "behav": [419, 436, 461], "behavior": [156, 195, 444, 446, 457, 459, 460, 465], "behind": [457, 461, 462, 463, 464], "being": [13, 16, 118, 346, 427, 445, 446, 453, 458, 460], "bell": [301, 305, 429, 464], "belong": [340, 417, 461], "below": [185, 288, 307, 414, 417, 418, 424, 447, 449, 450, 452, 453, 457, 461, 463, 464, 465, 466], "benchmark": [402, 403, 418, 444, 446, 448], "benefici": [449, 450, 454], "benefit": [453, 465], "benzo": 465, "bernoulli": [251, 426, 442, 448], "besid": [444, 457, 464], "best": [12, 13, 14, 16, 17, 242, 244, 246, 404, 427, 444, 454, 459], "bet": 452, "beta": [8, 22, 168, 251, 407, 446, 450], "betabernoullimultiarmedbanditsurrog": [407, 427, 446], "betaprior": [251, 446], "better": [10, 346, 403, 446, 452, 453, 455, 457, 458], "between": [13, 16, 34, 52, 151, 184, 210, 218, 274, 354, 417, 419, 424, 427, 429, 430, 434, 440, 441, 444, 446, 447, 451, 452, 453, 454, 457, 458, 459, 460, 461, 464, 465], "beyond": [156, 444, 456], "bias": 458, "bin": 424, "binar": 446, "binari": [297, 399, 436, 444, 445, 446, 461], "binarytarget": [298, 427, 446], "bind": [417, 419, 449], "bit": [446, 458], "black": [240, 462, 465], "blackbox": [400, 401, 442], "blank": 447, "blob": 276, "block": [418, 424, 445, 446, 461], "blue": 430, "boacquisitionfunct": [193, 195], "bodi": 417, "bonilla": 465, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 96, 99, 100, 121, 124, 125, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 158, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 223, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 297, 298, 305, 306, 307, 319, 320, 324, 325, 330, 331, 340, 344, 349, 354, 356, 357, 361, 364, 370, 371, 378, 379, 385, 398, 427], "boolean": [13, 16, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 96, 100, 136, 137, 138, 140, 141, 143, 150, 151, 154, 158, 180, 182, 183, 184, 185, 356, 446, 452, 454], "boost": [282, 441], "both": [10, 13, 16, 156, 157, 218, 248, 307, 326, 401, 413, 418, 421, 424, 425, 427, 429, 430, 440, 441, 444, 446, 447, 450, 452, 453, 456, 458, 460, 461, 463, 464, 466, 467], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 187, 195, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 409, 410, 419, 434, 440, 441, 446, 454, 459], "botorch_acqf": 26, "botorch_function_wrapp": 446, "botorchrecommend": [187, 407, 412, 413, 414, 415, 418, 419, 421, 422, 427, 429, 434, 436, 437, 438, 444, 446, 451, 452, 453, 455, 459], "bottom": 452, "bound": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 223, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 287, 288, 295, 297, 303, 304, 320, 326, 356, 358, 364, 365, 370, 371, 372, 385, 401, 407, 409, 410, 419, 425, 429, 430, 432, 433, 434, 440, 441, 446, 458, 461, 464, 466, 467], "boundari": [44, 218, 305, 306, 429], "boundary_onli": [218, 424], "bounded": 446, "bounds_transform_func": 446, "box": [174, 240, 462, 465], "brain": [462, 465], "branch": [444, 447], "brandenburg": 444, "break": [259, 461, 466], "brettpho": [402, 403, 404, 406, 407], "briefli": [462, 465], "bring": [444, 446], "bro": 276, "broad": 461, "broadcast": 158, "brute": [195, 459], "bu": [402, 403, 404, 406, 407], "bucket": 424, "budget": 452, "bug": [446, 447], "build": [210, 218, 259, 340, 418, 424, 445, 446, 447, 453, 456, 461, 463, 465, 466, 467], "built": [218, 421, 444, 447, 452, 459, 463], "builtin": 316, "bump": 446, "button": 446, "butyl": [402, 403, 404, 406, 407], "butylphenylphosphin": [402, 403, 404, 406, 407], "butyornitril": [402, 403, 404, 406, 407], "bypass": [157, 418, 454, 463], "byte": [13, 16, 125, 158, 217, 260, 305, 306, 307, 368, 378, 379, 446, 467], "c": [55, 310, 321, 340, 402, 403, 404, 406, 407, 412, 413, 414, 415, 422, 424, 437, 438, 444, 445, 449, 452, 455, 458, 460, 461], "c1": [402, 403, 404, 406, 407, 412, 413, 414, 415, 458], "c1c2": [402, 403, 404, 406, 407], "c1ccccc1": [402, 403, 404, 412, 414], "c1ccoc1": 453, "c2": [402, 403, 404, 406, 407, 412, 414, 415], "c2ccccc2": [402, 403, 404], "c2oc": [402, 403, 404, 406, 407], "c2p": [402, 403, 404, 406, 407], "c3": [402, 403, 404, 406, 407, 412, 414], "c3c": [402, 403, 404], "c3ccccc3": [402, 403, 404, 406, 407], "c4": [402, 403, 404, 412, 414], "c4ccccc4": [402, 403, 404, 406, 407], "c5": [412, 414], "c6": [412, 414], "c_": 430, "c_g2_min": 425, "c_g3_max": 425, "c_i": 453, "c_total_sum": 425, "cach": [31, 446, 461, 466], "calcul": [31, 340, 379, 409, 419, 440, 452, 454, 456, 458, 460], "calibr": 465, "call": [45, 91, 180, 182, 183, 184, 185, 232, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 326, 349, 402, 403, 404, 417, 422, 424, 425, 437, 438, 444, 445, 446, 450, 452, 453, 454, 458, 461, 462, 463, 465, 466], "callabl": [51, 70, 90, 157, 228, 240, 242, 244, 246, 248, 286, 287, 290, 292, 316, 322, 324, 326, 340, 349, 401, 417, 430, 446, 466], "callable_": 324, "campaign": [96, 242, 245, 246, 248, 346, 348, 350, 405, 406, 414, 416, 419, 427, 438, 440, 441, 442, 443, 444, 446, 450, 451, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467], "campaign1": 462, "campaign2": 462, "campaign_json": 452, "campaign_oh": 403, "campaign_par": 430, "campaign_rand": [402, 403, 404], "campaign_recr": 436, "campaign_stop": 418, "campaign_with_hook": 418, "campaign_y0": 430, "campaign_y1": 430, "campaignstoppedexcept": 418, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 55, 96, 137, 143, 151, 154, 158, 177, 184, 187, 188, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 240, 244, 251, 253, 255, 256, 258, 259, 260, 264, 278, 280, 282, 284, 288, 298, 324, 326, 330, 340, 346, 348, 349, 375, 401, 402, 403, 404, 407, 408, 411, 412, 413, 414, 417, 418, 419, 421, 422, 424, 425, 427, 429, 430, 432, 433, 434, 437, 440, 441, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "canada": 448, "candid": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 193, 195, 203, 206, 210, 218, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 385, 418, 419, 441, 446, 450, 453, 459, 460, 466], "cannot": [15, 89, 90, 156, 259, 260, 288, 331, 427, 446, 449, 451, 453, 454, 458, 459, 461, 463, 465], "canon": [333, 461], "capabl": [400, 426, 428, 435, 439, 441, 446, 448, 452, 457, 463, 465], "captur": 458, "cardin": [34, 44, 50, 60, 62, 63, 64, 79, 195, 210, 444, 446, 448, 453], "cardinalityconstraint": [44, 50, 446], "care": [424, 447, 453, 456, 457, 463], "carefulli": 454, "carlo": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 81, 246, 401, 403, 404, 418, 427, 440, 441, 446, 451, 462], "carri": [326, 417, 449, 457], "cartesian": [212, 218, 219, 220, 444, 446, 455, 460], "case": [156, 184, 248, 288, 326, 340, 346, 359, 418, 423, 424, 433, 434, 437, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 458, 461, 462, 463, 464, 465, 467], "cast": [45, 446], "cat": 354, "cat_1": 429, "cat_1_22": 429, "cat_1_33": 429, "cat_2": 429, "catch": 421, "catch_constant_target": 446, "categor": [31, 140, 141, 145, 218, 225, 355, 444, 446, 458, 460, 464], "categori": [403, 418, 444, 446, 461, 464], "categorical_1": [429, 452], "categorical_2": [429, 452], "categorical_paramet": 461, "categorical_parameter_json": 461, "categorical_parameter_reconstruct": 461, "categoricalencod": [140, 141, 412, 413, 414, 415, 429, 436], "categoricalparamet": [141, 218, 403, 412, 413, 414, 415, 422, 427, 429, 436, 437, 438, 444, 446, 455, 456, 460, 461, 466], "cattr": [231, 291, 438, 445, 446, 447], "cauchi": 170, "caus": [151, 310, 316, 446, 449], "caution": 465, "cc": [402, 403, 404, 406, 407, 412, 414, 415, 424, 458, 465], "cc1": [402, 403, 404, 406, 407, 458], "ccc": [412, 414, 422, 444], "cccc": [402, 403, 404, 406, 407, 412, 414], "ccccc": [412, 414, 437, 438], "cccccc": [412, 414], "cccccccco": [453, 458], "ccccoc": [402, 403, 404, 406, 407], "cco": 424, "ccoccoccn": [437, 438], "cdot": [453, 457], "ceil": 418, "cell": [421, 458, 462, 465], "cell_lin": 465, "center": [305, 307, 340, 364, 429, 430, 452], "center_y0": 430, "center_y1": 430, "central": [446, 452, 466], "certain": [31, 52, 90, 185, 240, 323, 346, 413, 418, 427, 444, 446, 447, 453, 455, 456, 459, 461, 465, 467], "cesium": [402, 403, 404, 406, 407], "chai": 465, "chain": [38, 180, 182, 183, 184, 185, 316, 453], "challeng": [447, 461], "chanc": 445, "chang": [52, 183, 346, 347, 348, 407, 424, 433, 444, 445, 447, 449, 452, 454, 456, 458, 460, 465, 466], "changelog": 466, "charact": 449, "characterist": 316, "charg": 449, "chebyshev": 12, "check": [31, 60, 136, 137, 138, 140, 141, 143, 150, 151, 154, 158, 323, 325, 328, 329, 330, 331, 340, 355, 357, 358, 364, 370, 371, 377, 433, 434, 436, 444, 446, 447, 456, 460, 461], "check_maximum": 60, "check_minimum": 60, "checker": 446, "checkout": 447, "chem": [444, 446, 458], "chemic": [335, 403, 406, 424, 446, 448, 453, 456, 458, 465], "cheminformat": [154, 444, 446], "chemistri": [143, 412, 414, 415], "child": [200, 201, 202, 203, 447], "chocol": 447, "choic": [242, 244, 385, 417, 424, 427, 434, 446, 453, 455, 457, 458, 459, 460, 461, 464], "choos": [178, 424, 425, 427, 429, 432, 433, 434, 443, 444, 449, 450, 452, 459, 463, 464], "chose": [433, 461], "chosen": [77, 187, 242, 244, 248, 381, 382, 385, 407, 427, 446, 450, 453, 458, 460], "christoph": 465, "chung": 448, "ci": [410, 440, 441, 446, 447], "circular": 458, "circumv": [445, 461], "cite": 444, "cl": [229, 233, 288, 319, 320, 325, 330, 366, 372], "claim": 449, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 89, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 232, 235, 236, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 288, 292, 294, 295, 296, 297, 299, 300, 301, 302, 303, 312, 313, 315, 316, 318, 319, 320, 325, 330, 334, 339, 340, 344, 362, 364, 369, 370, 371, 383, 384, 387, 388, 407, 417, 418, 421, 427, 437, 446, 452, 453, 456, 457, 458, 459, 460, 461, 463], "classic": [427, 457], "classifi": 458, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 316, 364, 370, 371, 446], "classvalidationerror": [438, 445], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 251, 253, 255, 260, 264, 278, 280, 282, 284], "clean": [351, 352, 353, 445, 446, 447], "clear": [375, 465], "click": [427, 458], "clipboard": 421, "clone": 447, "close": [242, 248, 300, 401, 418, 440, 441, 462], "closer": [13, 16, 377, 458], "closest": [340, 378, 421], "closest_el": 446, "closur": [240, 462], "cluster": [200, 201, 202, 203, 337, 338, 339, 340, 407, 446, 448, 466], "cluster_centers_": 340, "clustering_algorithm": 340, "clustering_x": 446, "clustermixin": 340, "cmap": 419, "cn": [402, 403, 404, 406, 407], "co": 424, "co1": [402, 403, 404], "co2": [402, 403, 404], "co3": [402, 403, 404], "coars": [422, 436, 437, 438, 444], "coc": [422, 437, 438, 444], "cococ": [437, 438], "code": [259, 403, 422, 427, 433, 437, 438, 444, 445, 446, 449, 453, 454, 458, 462, 465, 466, 467], "coeffici": [45, 47, 48, 409, 410, 425, 453], "coerc": 446, "collect": [31, 62, 63, 64, 106, 116, 117, 133, 157, 159, 167, 183, 185, 210, 218, 224, 225, 237, 244, 258, 308, 310, 312, 323, 324, 337, 338, 356, 357, 383, 385, 401, 407, 419, 424, 427, 430, 440, 441, 446, 452], "color": [419, 421, 430], "column": [40, 41, 42, 96, 121, 124, 125, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 242, 244, 246, 248, 310, 311, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 388, 398, 399, 403, 406, 412, 413, 414, 415, 418, 424, 429, 430, 436, 440, 441, 446, 452, 460, 461, 462], "column_group": 311, "com": [276, 327, 353, 444, 446], "comb": 424, "combin": [44, 53, 157, 195, 210, 212, 218, 219, 220, 316, 335, 397, 402, 403, 404, 412, 414, 417, 418, 424, 429, 444, 445, 449, 453, 455, 456, 457, 458, 459, 460, 462, 465, 467], "combinatori": [195, 467], "combo_runn": 246, "come": [13, 16, 427, 444, 452, 453, 456, 461, 465, 467], "command": 445, "comment": 446, "commerci": 449, "commit": [444, 446, 447], "common": [167, 421, 425, 446, 447, 449, 451, 452, 453, 458, 461], "commonli": [457, 466], "commun": [449, 457, 465], "comp_df": [137, 140, 141, 143, 151, 154, 446], "comp_rep": [218, 421, 446, 460], "comp_rep_bound": [210, 212, 218, 446], "comp_rep_byt": [217, 467], "comp_rep_column": [136, 137, 138, 140, 141, 143, 150, 151, 154, 210, 212, 218, 446], "comp_rep_human_read": [217, 467], "comp_rep_shap": [217, 467], "compar": [157, 183, 401, 424, 425, 427, 430, 440, 444, 446, 447, 453, 455, 458, 464], "comparison": [418, 430, 440, 441, 459, 461], "compat": [133, 157, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 213, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 290, 326, 356, 396, 407, 412, 413, 414, 415, 417, 419, 429, 436, 446, 459, 463], "compens": 446, "compil": [445, 449], "complain": 447, "complaint": 447, "complement": [31, 354, 455], "complementari": 44, "complet": [74, 419, 424, 451, 453, 455, 457, 461], "complex": [13, 16, 125, 158, 305, 306, 307, 340, 378, 379, 424, 436, 440, 441, 447, 450, 451, 453, 455, 462, 465], "compli": [449, 453], "complianc": 444, "complic": [424, 465], "compon": [68, 340, 424, 425, 447, 450, 452, 453, 454, 455, 461, 463, 465, 466], "compos": [115, 258, 446, 461], "composit": [104, 116, 117, 118, 258, 446, 466], "composite_a": 463, "composite_b": 463, "compositekernel": [116, 117, 118, 446], "compositesurrog": [251, 253, 255, 260, 264, 278, 280, 282, 284, 446, 451, 456, 457, 463], "compound": 335, "comprehens": [444, 463], "compress": 461, "comput": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 86, 96, 100, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 193, 195, 210, 212, 217, 218, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 288, 295, 297, 303, 336, 340, 379, 412, 413, 414, 415, 417, 424, 425, 429, 430, 436, 446, 449, 450, 452, 454, 458, 460, 461, 462, 466, 467], "computation": 195, "compute_ref_point": [13, 16], "compute_scor": 421, "computedstyl": 421, "concat": [409, 410, 418, 419, 429, 430, 433, 434, 440, 441], "concentr": [168, 169, 402, 403, 404, 406, 407, 412, 417, 418, 453], "concentrati": 412, "concentration_valu": 418, "concept": [310, 424, 457, 458, 461], "concis": 446, "concret": [446, 461], "conda": 446, "condit": [34, 35, 36, 37, 38, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 346, 354, 403, 409, 413, 414, 415, 424, 430, 444, 446, 449, 465, 466], "conduct": [31, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 402, 403, 404, 444, 447, 452, 465], "confid": [8, 22, 407], "config": [421, 422, 435, 442, 446, 466], "config_json": 31, "configur": [13, 16, 31, 38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 84, 85, 177, 184, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 240, 242, 248, 251, 253, 255, 256, 258, 260, 264, 270, 278, 280, 282, 284, 340, 346, 385, 405, 406, 424, 431, 434, 438, 444, 445, 446, 449, 450, 451, 452, 453, 454, 458, 459, 460, 462, 464, 465, 466, 467], "confirm": 419, "conflict": [444, 447, 457], "conform": [154, 336, 458], "confront": [427, 444, 455], "confus": 447, "conjunct": 463, "connect": [56, 346, 446, 458, 464], "consequ": [404, 445, 453, 454, 459, 460, 462, 463], "consequenti": 449, "consid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 124, 137, 140, 141, 143, 151, 154, 156, 158, 183, 195, 212, 246, 346, 355, 356, 401, 424, 427, 429, 440, 441, 444, 446, 447, 451, 453, 455, 456, 457, 458, 461, 467], "consider": [212, 451], "consist": [178, 217, 340, 419, 447, 449, 456], "consol": [421, 445], "consolid": [446, 459], "consortium": 448, "conspicu": 449, "const": 421, "constant": [280, 288, 306, 429, 446, 447, 458, 460, 466], "constitut": 449, "constrain": [446, 453, 464, 465], "constraint": [31, 34, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 79, 138, 195, 210, 212, 218, 313, 421, 422, 429, 436, 437, 438, 442, 444, 446, 448, 454, 458, 466], "constraint_1": 414, "constraint_2": 414, "constraint_3": 414, "constraints_augment": 212, "constraints_cardin": 210, "constraints_lin_eq": 210, "constraints_lin_ineq": 210, "constraints_nonlin": 210, "constru": 449, "construct": [31, 210, 212, 218, 260, 290, 401, 430, 432, 440, 441, 444, 446, 450, 453, 456, 461, 463, 466], "constructor": [200, 201, 202, 203, 212, 233, 278, 282, 284, 424, 432, 437, 438, 446, 450, 452, 455, 457, 458, 463, 466, 467], "consum": [183, 417, 446], "consumpt": 454, "cont_ind": 434, "cont_indic": [433, 434], "cont_paramet": 434, "cont_recommend": [187, 434], "contact": [444, 448], "contain": [13, 16, 31, 34, 40, 41, 42, 44, 64, 67, 72, 96, 121, 124, 125, 129, 131, 133, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 158, 162, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 217, 219, 220, 224, 240, 242, 244, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 295, 297, 303, 305, 306, 307, 310, 311, 326, 336, 340, 344, 346, 348, 354, 355, 357, 364, 370, 371, 379, 385, 397, 398, 399, 403, 404, 418, 419, 425, 427, 434, 440, 441, 445, 446, 447, 449, 452, 453, 455, 456, 459, 460, 461, 462, 467], "content": [157, 183, 212, 244, 347, 386, 421, 446, 449, 461], "context": [74, 82, 156, 180, 182, 183, 184, 185, 193, 195, 240, 256, 258, 382, 417, 427, 432, 440, 441, 446, 452, 455, 456, 458, 461, 462, 463, 465, 467], "contextu": 465, "continu": [10, 15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 72, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 187, 195, 210, 212, 213, 218, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 407, 409, 412, 413, 414, 415, 425, 429, 430, 431, 434, 436, 442, 444, 446, 452, 454, 455, 459, 461, 462, 466], "continuous_subspac": 460, "continuouscardinalityconstraint": [62, 63, 210, 446, 466], "continuousconstraint": [37, 45, 210, 446, 453, 455], "continuouslinearconstraint": [210, 409, 410, 425, 446, 466], "continuouslinearequalityconstraint": 446, "continuouslinearinequalityconstraint": 446, "continuousnonlinearconstraint": [44, 210, 446], "continuousparamet": [150, 210, 446], "contour": 430, "contract": 449, "contractor": 448, "contraint": 453, "contrast": [218, 330, 425, 427, 451, 455, 457], "contribut": [444, 446, 449, 467], "contributor": [444, 449], "contributori": 449, "control": [13, 15, 16, 21, 157, 168, 195, 210, 218, 356, 429, 433, 444, 446, 449, 450, 453, 457, 458, 459, 464, 466], "convei": 461, "conveni": [446, 460, 461, 463], "convent": [212, 340], "converg": 456, "convers": [31, 184, 421, 432, 446, 449, 456, 463, 466], "convert": [28, 122, 214, 227, 291, 317, 327, 331, 335, 342, 343, 358, 359, 360, 365, 368, 372, 375, 422, 437, 438, 446, 452, 454, 461, 462], "convert_sklearn": 421, "convert_sklearn_bayesian_ridg": 421, "convertibletofloat": [13, 16, 317], "cooki": 447, "coordin": [13, 16, 385], "copi": [156, 251, 253, 255, 260, 264, 278, 280, 282, 284, 338, 358, 418, 421, 444, 446, 449, 467], "copy_x": 421, "copyright": [444, 449], "copytoclipboard": 421, "core": [31, 210, 212, 213, 218, 246, 248, 251, 253, 255, 256, 258, 260, 264, 271, 278, 280, 282, 284, 407, 444, 446, 455, 464], "coregion": 465, "coretest": [446, 447], "corpu": 458, "correct": [31, 232, 292, 419, 444, 446, 447, 461], "correctli": [424, 434, 446], "correl": [143, 154, 353, 458, 465], "correspond": [26, 31, 44, 121, 124, 129, 131, 156, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 240, 242, 244, 251, 253, 254, 255, 260, 264, 278, 280, 282, 284, 290, 305, 326, 329, 331, 334, 335, 346, 349, 350, 356, 357, 358, 359, 361, 385, 398, 399, 401, 406, 407, 424, 427, 430, 434, 440, 441, 444, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "correspondingli": 31, "corrupt": 348, "cost": [340, 403, 427, 454], "costli": [212, 215, 221, 452], "could": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 151, 342, 407, 417, 418, 424, 425, 441, 446, 451, 453, 458, 462, 464, 465], "count": [418, 424, 453], "counterclaim": 449, "counterpart": [326, 460], "coupl": 419, "cours": [440, 441, 447, 461, 465], "cousin": 453, "cov": [446, 447], "cover": [330, 346, 453, 455], "coverag": [446, 447], "cp": [402, 403, 404], "craft": 462, "crash": [445, 446], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 67, 96, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 219, 220, 232, 236, 244, 251, 253, 255, 256, 258, 260, 264, 267, 272, 278, 280, 282, 284, 295, 297, 303, 344, 346, 349, 350, 364, 370, 371, 372, 385, 406, 417, 418, 419, 424, 425, 430, 434, 435, 442, 443, 444, 445, 446, 447, 451, 453, 454, 455, 456, 458, 461, 462, 463, 464, 466, 467], "create_example_plot": [401, 403, 418, 419, 440, 441, 446], "create_from_config": [421, 422], "create_pi_plot": 419, "creation": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 157, 215, 218, 221, 413, 415, 421, 422, 460, 461, 466], "criteria": 419, "criterion": [340, 418, 450], "critic": 446, "cross": [440, 449], "crucial": [444, 464], "csv": [402, 403, 418], "cube": 453, "cuda": 445, "cultur": [458, 465], "curran": 465, "current": [10, 31, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 246, 248, 259, 375, 418, 419, 424, 450, 451, 452, 453, 454, 455, 458, 462, 464, 465, 466, 467], "curv": [305, 419, 429, 453, 464], "custom": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 136, 137, 138, 140, 141, 143, 146, 150, 151, 154, 157, 206, 260, 292, 295, 297, 303, 326, 359, 400, 407, 411, 418, 427, 434, 442, 444, 446, 452, 453, 458, 459, 462, 465, 466, 467], "custom_blackbox": 401, "custom_conversion_funct": 421, "custom_filt": 453, "custom_funct": 412, "customari": 449, "customconstraint": 412, "customdiscreteparamet": [446, 456, 466], "customencod": 143, "customonnxsurrog": [407, 421, 446], "cycl": [183, 444, 446, 455], "cyclic": 183, "d": [13, 16, 26, 55, 125, 310, 321, 379, 385, 419, 422, 437, 438, 440, 441, 444, 449, 460, 465], "d401": 412, "d5dd00050e": 444, "damag": 449, "daniel": 448, "darmstadt": [444, 448], "dashboard": 446, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 71, 76, 88, 96, 100, 124, 129, 131, 143, 151, 154, 177, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 242, 246, 248, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 297, 303, 309, 313, 340, 346, 348, 355, 357, 374, 375, 386, 390, 398, 399, 400, 401, 406, 407, 409, 410, 412, 413, 414, 415, 418, 422, 424, 429, 430, 433, 436, 437, 438, 440, 441, 442, 443, 444, 446, 450, 451, 452, 453, 454, 456, 458, 459, 461, 462, 463, 466, 467], "data_typ": 421, "databas": [31, 429, 444, 461], "dataclass": [417, 427], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 88, 96, 100, 121, 124, 129, 131, 137, 140, 141, 143, 151, 154, 157, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 217, 218, 219, 220, 223, 238, 239, 242, 244, 246, 248, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 297, 303, 310, 311, 335, 336, 340, 386, 398, 399, 401, 402, 406, 407, 412, 413, 414, 415, 418, 419, 421, 422, 424, 425, 429, 430, 433, 436, 440, 441, 446, 451, 452, 453, 455, 458, 466, 467], "datapoint": 446, "dataset": [183, 240, 340, 421, 462], "datatyp": 446, "date": 449, "dditiv": 456, "de": [231, 435, 444, 445, 446, 447, 452, 459, 466], "deactiv": [446, 454], "deal": [404, 451, 458, 462], "debug": 446, "decid": [151, 424, 427, 434, 450], "declar": [52, 56, 64, 203, 413, 447, 453], "decod": 421, "decor": [118, 288, 316, 349, 417, 446, 447, 462], "decorrel": [143, 154, 161, 437, 438, 458], "decreas": [183, 306, 429, 461, 465], "deduc": [409, 410, 433], "dedupl": 446, "deep": [340, 418], "deepcopi": 446, "deeper": 456, "deepli": 463, "def": [401, 412, 417, 418, 419, 424, 427, 430, 440, 447, 453, 462], "default": [13, 16, 42, 96, 124, 143, 154, 157, 187, 193, 195, 200, 201, 202, 203, 210, 218, 231, 251, 271, 274, 340, 354, 401, 402, 404, 407, 421, 422, 429, 434, 444, 446, 447, 452, 453, 454, 456, 457, 458, 466], "default_campaign": 401, "defaultkernelfactori": [407, 412, 413, 414, 415, 429, 436], "defaultscal": 446, "defend": 449, "defer": 446, "defin": [26, 31, 41, 44, 45, 51, 146, 156, 177, 183, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 218, 240, 264, 266, 267, 292, 348, 353, 354, 370, 371, 388, 402, 403, 404, 406, 412, 413, 414, 415, 421, 422, 427, 432, 446, 447, 449, 452, 453, 455, 458, 461, 462, 464], "definit": [210, 218, 330, 425, 430, 444, 446, 449, 457, 460], "degener": [347, 364, 446], "degr": 436, "degre": 461, "degree_c": [421, 422, 436], "deliber": 449, "delici": 447, "deliveri": 458, "demand": [31, 441], "demo": 446, "demonstr": [400, 401, 402, 405, 408, 411, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 431, 435, 436, 439, 440, 441, 446, 457, 460, 461, 465], "denot": 26, "densiti": 419, "depend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 52, 56, 87, 212, 218, 240, 306, 310, 403, 407, 411, 424, 425, 432, 442, 443, 445, 446, 447, 453, 454, 455, 456, 460, 462, 463, 464, 465, 467], "dependenciesconstraint": 446, "deprec": [66, 148, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 218, 223, 261, 316, 412, 414, 415], "deprecationwarn": [412, 414, 415, 418], "depth": 460, "deriv": [200, 201, 202, 203, 218, 330, 449, 453, 460], "descend": 306, "describ": [200, 201, 202, 203, 251, 253, 255, 260, 264, 278, 280, 282, 284, 290, 407, 412, 417, 418, 425, 427, 429, 430, 447, 449, 451, 452, 453, 457, 458, 461, 462], "descript": [121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 295, 297, 303, 370, 371, 446, 447], "descriptor": [154, 336, 446, 456, 458, 465], "deseri": [229, 233, 238, 436, 445, 446, 452, 466], "deserialize_datafram": 461, "design": [0, 21, 26, 242, 340, 349, 417, 421, 424, 427, 449, 450, 453, 455, 456, 457, 459, 461], "desir": [124, 127, 350, 428, 429, 442, 444, 446, 450, 454, 456, 457, 459, 461, 464, 467], "desirabilityobject": [31, 429, 444, 446, 451, 452, 461, 463, 466], "desktop": 446, "despit": 446, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 96, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 164, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 217, 218, 242, 246, 251, 253, 255, 256, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 295, 297, 303, 354, 361, 364, 370, 371, 388, 402, 404, 409, 410, 421, 429, 434, 443, 444, 445, 446, 451, 452, 453, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466], "detect": [313, 355, 445, 447], "determin": [13, 16, 31, 44, 96, 185, 218, 246, 330, 354, 368, 377, 385, 402, 424, 427, 446, 449, 454, 459], "determinist": [385, 446], "detriment": 458, "dev": [444, 446, 447], "develop": [444, 446, 458, 462, 466], "deviat": [6, 18, 288, 355, 421, 446, 452], "df": [38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 121, 124, 129, 131, 157, 210, 212, 218, 223, 239, 244, 310, 311, 335, 347, 351, 352, 353, 354, 356, 358, 359, 361, 386, 401, 412, 427, 444, 453, 460, 461, 462], "df_y": 430, "dfa": [310, 311], "di": [402, 403, 404, 406, 407, 448], "diagram": [446, 448, 466], "dicret": 453, "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 200, 201, 202, 203, 210, 212, 215, 218, 221, 233, 234, 236, 246, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 321, 324, 336, 340, 346, 364, 370, 371, 372, 388, 418, 421, 440, 441, 446], "dict_bas": [402, 403, 404, 406, 407], "dict_ligand": [402, 403, 404, 406, 407], "dict_solv": [402, 403, 404, 406, 407, 412, 413, 414, 415, 424, 453], "dictat": [121, 124, 129, 131, 195, 212, 440, 441], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 236, 246, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 288, 290, 295, 297, 303, 321, 324, 346, 364, 370, 371, 372, 402, 403, 404, 406, 422, 458, 462], "diff": 447, "differ": [13, 16, 54, 124, 195, 210, 212, 213, 218, 240, 248, 311, 346, 348, 388, 403, 412, 417, 424, 427, 429, 430, 433, 434, 440, 441, 444, 446, 447, 449, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465], "differenti": [462, 465], "difficult": 465, "digit": [359, 444], "dilemma": 427, "dim": [26, 409, 410, 419, 421, 433, 434, 440, 441], "dimens": [26, 385, 401, 409, 410, 419, 421, 432, 433, 440, 441, 446, 458, 460, 463, 465], "dimension": [13, 16, 125, 136, 137, 138, 140, 141, 143, 150, 151, 154, 274, 349, 385, 401, 440, 441, 446], "dimethylisoxazol": 465, "direct": [13, 16, 402, 403, 404, 406, 444, 446, 449, 455, 458, 467], "direct_aryl": [402, 403, 418], "directli": [13, 16, 330, 441, 444, 446, 453, 454, 457, 461, 463], "directori": [402, 403, 418, 434, 446], "disabl": [251, 253, 255, 260, 264, 278, 280, 282, 284, 412, 414, 415, 446, 452, 454, 455], "disadvantag": 461, "disappear": 446, "disc_ind": 434, "disc_indic": [433, 434], "disc_paramet": 434, "disc_recommend": [187, 434], "discard": [8, 424], "disclaim": 449, "discourag": 452, "discoveri": 444, "discret": [15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 72, 136, 137, 138, 140, 141, 143, 150, 151, 154, 187, 195, 200, 201, 202, 203, 206, 210, 212, 213, 217, 218, 248, 384, 406, 409, 415, 418, 419, 421, 429, 431, 434, 436, 441, 442, 444, 446, 450, 455, 456, 459, 461, 462, 466, 467], "discrete_param": [419, 440, 441], "discrete_spac": [409, 410, 434], "discrete_subspac": 460, "discretecardinalityconstraint": [446, 466], "discreteconstraint": [31, 50, 51, 52, 53, 54, 55, 56, 57, 58, 218, 446, 453, 455], "discretecust": 412, "discretecustomconstraint": [412, 446, 466], "discretedep": 413, "discretedependenciesconstraint": [56, 64, 413, 424, 466], "discreteexcl": 414, "discreteexcludeconstraint": [414, 446, 455, 466], "discretelinkedparametersconstraint": [446, 466], "discretenolabelduplicatesconstraint": [56, 424, 446, 466], "discreteparamet": [151, 218, 219, 220, 446], "discretepermutationinvarianceconstraint": [424, 466], "discreteprod": 415, "discreteproductconstraint": [415, 446, 466], "discretesamplingmethod": [15, 195, 386, 446, 450], "discretesumc": 415, "discretesumconstraint": [409, 415, 424, 446, 466], "discuss": [429, 449, 453, 460, 462], "disjoint": 218, "disk": [446, 466], "displai": [359, 418, 449, 456], "distanc": [151, 205, 340, 385], "distinct": [417, 452, 459], "distinguish": [347, 424, 446, 453, 458, 465], "distribut": [31, 164, 167, 251, 253, 255, 260, 264, 278, 280, 282, 284, 424, 429, 434, 444, 446, 449, 450, 451, 463], "distutil": 331, "div": 421, "divers": 463, "divid": 425, "divis": 379, "dll": 445, "dmac": [402, 403, 404, 406, 407], "dmf": 453, "do": [62, 212, 218, 259, 417, 421, 422, 424, 427, 434, 436, 437, 438, 440, 443, 444, 445, 449, 451, 453, 454, 455, 456, 458, 459, 461, 465, 466, 467], "do_baybe_work": 454, "doc": [101, 164, 316, 444, 446], "doc101": 447, "doc103": 447, "docstr": 446, "doctest": 446, "document": [31, 375, 421, 444, 446, 447, 448, 449, 452, 456, 462], "doe": [30, 31, 38, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 64, 96, 156, 195, 240, 242, 244, 246, 251, 253, 255, 259, 260, 264, 278, 280, 282, 284, 292, 326, 335, 355, 375, 404, 407, 418, 421, 422, 424, 437, 438, 440, 441, 446, 447, 449, 451, 453, 457, 459, 462, 463, 465, 467], "doi": [276, 353, 444], "domain": [251, 253, 255, 260, 264, 278, 280, 282, 284, 401, 444, 446, 460, 462], "don": [443, 455], "done": [31, 354, 355, 404, 406, 412, 413, 414, 415, 421, 422, 429, 436, 446, 450, 452, 453, 454, 455], "doubl": [375, 447, 454], "down": [461, 467], "downsid": 184, "draft": 446, "dramat": 465, "drastic": 458, "draw": [10, 113, 210, 425, 427, 432], "draw_arm": 427, "drawback": 457, "drawn": [21, 195], "drive": [419, 465], "driven": [346, 450], "driver": 445, "drop": [351, 352, 353, 357, 418, 446, 451, 453], "drug": 451, "dry_run": 31, "dtype": [13, 16, 125, 158, 305, 306, 307, 340, 358, 378, 379, 446], "due": [156, 441, 446, 447, 450, 453, 454, 458, 459, 460, 461, 464], "duplic": [31, 56, 163, 313, 321, 446, 453], "durat": [340, 451], "dure": [31, 34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 212, 218, 240, 324, 385, 424, 427, 440, 441, 444, 445, 446, 447, 448, 452, 453, 454, 455, 456, 460, 461, 462, 463], "dx": 444, "dynam": [427, 446, 461, 466], "d\u00fcbendorf": 448, "e": [8, 21, 26, 31, 34, 44, 52, 54, 55, 72, 99, 143, 157, 158, 185, 212, 218, 240, 313, 319, 320, 336, 340, 346, 354, 355, 364, 393, 402, 403, 404, 418, 422, 424, 425, 427, 444, 445, 446, 447, 450, 451, 453, 454, 456, 458, 459, 460, 461, 462, 465, 467], "e3fp": 148, "e3fpfingerprint": 148, "each": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 121, 124, 129, 131, 157, 177, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 212, 242, 244, 246, 248, 251, 253, 255, 259, 260, 264, 278, 280, 282, 284, 311, 336, 340, 346, 347, 355, 401, 403, 404, 407, 419, 424, 425, 427, 429, 430, 434, 440, 441, 446, 447, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467], "eagerli": 446, "earli": [418, 446], "earlier": [31, 443, 445], "earn": 427, "earned_reward": 427, "easi": [335, 447, 461], "easier": [447, 451, 467], "easiest": [444, 447], "easili": [418, 444, 447, 452, 455, 458, 460, 461, 465], "ecfp": [148, 403, 446, 458], "ecfpfingerprint": 148, "ecosystem": 461, "edbo": [274, 276, 353, 446], "edbokernelfactori": [274, 446], "edg": 156, "edit": [444, 447], "editor": 465, "editori": 449, "edwin": 465, "effect": [54, 180, 182, 183, 184, 185, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 417, 418, 427, 441, 446, 450, 453, 458, 459, 462, 465, 467], "effici": [218, 340, 424, 444, 446, 454, 460], "effortlessli": 462, "ei": [3, 407], "either": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 213, 242, 248, 264, 288, 355, 403, 414, 429, 434, 444, 449, 457, 458, 459, 460, 462, 463], "elabor": 449, "elaps": 417, "elapsedtimeprint": 417, "electron": [448, 449], "electroshap": 148, "electroshapefingerprint": 148, "eleg": [440, 461], "element": [40, 41, 42, 51, 158, 248, 313, 323, 329, 340, 344, 377, 378, 421, 424, 440, 441, 446, 453, 462], "elev": 419, "elif": [433, 434], "elimin": [447, 450], "els": [330, 331, 401, 402, 403, 404, 409, 410, 412, 413, 415, 418, 419, 427, 430, 433, 434, 440, 441], "elsewher": 421, "emd": 448, "emdgroup": 444, "emelin": 448, "emerg": 452, "empir": 427, "emploi": [31, 427, 459], "empow": 463, "empti": [100, 210, 212, 218, 225, 311, 326, 335, 354, 359, 398, 399, 424, 429, 434, 436, 446, 460], "empty_encod": [212, 218], "emptysearchspaceerror": 225, "emul": [21, 445, 446], "en": [101, 164], "enabl": [184, 246, 402, 403, 404, 424, 440, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 464, 465], "encapsul": 340, "encod": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 150, 151, 154, 212, 218, 251, 253, 255, 260, 264, 278, 280, 282, 284, 334, 336, 402, 403, 404, 406, 407, 412, 413, 414, 415, 418, 422, 424, 427, 429, 436, 437, 438, 440, 441, 444, 446, 453, 460, 461, 465], "encompass": 452, "encount": [156, 180, 182, 183, 184, 185, 385, 445, 446, 447, 457], "end": [0, 307, 364, 418, 422, 427, 429, 436, 449, 453, 461], "endeavor": 450, "endpoint": 446, "enforc": [206, 376, 391, 446, 447, 458], "engin": [445, 459, 461, 462, 467], "enhanc": [26, 444], "enlarg": 458, "enough": [210, 461], "ensembl": 286, "ensur": [156, 157, 358, 402, 403, 404, 424, 425, 444, 446, 453, 461, 462], "enter": [78, 218, 460], "entir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 364, 386, 446, 447, 450, 452, 453, 454, 467], "entiti": 449, "entri": [31, 38, 41, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 251, 253, 255, 260, 264, 278, 280, 282, 284, 311, 346, 355, 386, 404, 412, 413, 414, 415, 424, 443, 446, 453, 454, 455, 456, 464, 467], "enum": [127, 145, 146, 147, 148, 205, 213, 271, 300, 301, 315, 384, 446, 461], "enumer": [126, 144, 299, 419, 440, 441, 457], "env": [446, 447], "envar_nam": 454, "environ": [206, 246, 376, 391, 401, 402, 403, 404, 410, 412, 413, 415, 418, 419, 421, 427, 430, 440, 441, 444, 445, 446, 447, 453, 466], "envvar_nam": 454, "eq": [412, 424], "equal": [45, 124, 185, 210, 427, 429, 436, 446, 453, 457, 460, 461, 464], "equat": [45, 453, 462], "equidist": [385, 446, 458], "equip": 453, "equival": [21, 34, 56, 410, 432, 450, 453, 462], "erg": 148, "ergfingerprint": 148, "err": 421, "errno": [402, 403, 418], "erron": 446, "error": [183, 242, 244, 246, 261, 324, 357, 379, 404, 421, 422, 427, 445, 446, 451, 453, 457, 459], "esian": 444, "especi": [447, 451], "essenti": [452, 459], "establish": [418, 440, 441, 465], "estat": 148, "estatefingerprint": 148, "ester": [402, 403, 404, 406, 407], "estim": [212, 217, 218, 251, 340, 427, 446, 463, 466], "estimate_product_space_s": [212, 218, 467], "estimated_win_r": 427, "estimation_bia": 427, "estimation_vari": 427, "et": [403, 444, 458], "etc": [40, 41, 42, 138, 212, 295, 465], "ethanol": [424, 453], "euclidean": [340, 385], "eval_during_augment": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58], "eval_during_cr": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58], "eval_during_model": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58], "evalu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 193, 195, 286, 287, 331, 433, 434, 446, 452, 454, 459, 462, 465], "even": [185, 288, 352, 440, 441, 449, 451, 452, 454, 458, 462, 463, 465, 467], "event": [31, 418, 449], "everi": [451, 467], "everyth": [447, 453], "evolv": [419, 447], "ex": 456, "exabyt": 467, "exact": [31, 355, 417, 445, 446, 453, 457, 458, 463], "exactexplain": [94, 97, 456], "exactli": [13, 16, 44, 121, 124, 129, 131, 212, 424, 446, 451, 452, 460, 461], "examin": 452, "exampl": [13, 16, 156, 157, 244, 310, 311, 321, 330, 340, 354, 400, 401, 405, 408, 411, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431, 432, 435, 439, 440, 441, 445, 446, 447, 448, 449, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "example_input_nam": 421, "exceed": 418, "exceedingli": 462, "except": [31, 326, 335, 343, 362, 363, 402, 403, 404, 418, 422, 437, 438, 444, 445, 446, 449, 455, 463], "excepthook": 445, "exceptiongroup": [62, 446], "excess": 467, "exclud": [31, 55, 351, 412, 413, 414, 415, 429, 436, 446, 449, 453, 466], "exclude_list": 353, "exclus": [53, 411, 442, 446, 449, 453, 462, 466], "execut": [31, 66, 242, 326, 401, 403, 445, 446, 447, 449, 454, 461, 462, 465], "exemplari": 452, "exercis": 449, "exhaust": [183, 195, 456, 459], "exist": [31, 118, 212, 232, 316, 326, 424, 445, 446, 447, 450, 452, 453, 455, 461, 463, 465, 466], "exot": 446, "exp_rep": [218, 412, 413, 414, 415, 424, 460], "exp_rep_byt": [217, 467], "exp_rep_human_read": [217, 467], "exp_rep_shap": [217, 467], "expect": [3, 4, 9, 11, 13, 14, 16, 17, 51, 74, 82, 256, 258, 266, 326, 349, 358, 407, 413, 419, 421, 424, 425, 427, 438, 446, 447, 452, 453, 456, 457, 458, 461, 462, 464, 467], "expens": [10, 195, 409, 462], "experi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 177, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 240, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 402, 403, 404, 406, 407, 433, 434, 446, 450, 452, 453, 455, 457, 458, 459, 464, 465, 466], "experiment": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 100, 121, 124, 129, 131, 137, 140, 141, 143, 151, 154, 177, 180, 181, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 212, 217, 218, 240, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 295, 297, 303, 346, 348, 412, 413, 414, 415, 419, 429, 436, 444, 446, 450, 451, 453, 455, 457, 458, 460, 461, 462, 464, 465, 466, 467], "experimentalist": 443, "expert": 340, "expir": 466, "explain": [71, 95, 96, 97, 99, 100, 419, 446, 448, 463, 466], "explain_target": [96, 446], "explainer_cl": [96, 100, 456], "explan": [96, 100, 446, 452, 456, 463], "explanation_index": [96, 456], "explicit": [157, 184, 417, 418, 422, 424, 432, 437, 438, 446, 447, 457, 461, 463, 465, 466], "explicitli": [210, 218, 417, 434, 441, 449, 455, 460, 465], "exploit": [8, 21, 427, 446], "explor": [8, 31, 427, 450, 459, 460, 465], "exploratori": 450, "exponenti": 218, "expos": [31, 417, 446], "exposur": 446, "expr": [38, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58], "express": [38, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 444, 446, 449, 453], "extend": [156, 455, 458, 465], "extens": [446, 459], "extern": [447, 448], "extra": [340, 403, 444, 446, 454], "extract": [31, 180, 182, 183, 184, 185, 356, 419, 440, 456, 466], "extract_pi": 419, "f": [331, 340, 401, 402, 403, 404, 409, 410, 412, 413, 414, 415, 417, 418, 419, 424, 425, 429, 432, 433, 434, 440, 441, 467], "f1": 462, "f2": 462, "fa": 421, "fabian": [444, 448], "face": [251, 253, 255, 260, 264, 278, 280, 282, 284, 425, 427], "facilit": 459, "fact": [21, 419, 424, 443, 453, 457], "factor": [13, 16, 444, 452, 453, 467], "factori": [157, 210, 264, 265, 266, 267, 268, 274, 276, 322, 407, 412, 413, 414, 415, 429, 436, 446], "fail": [421, 434, 438, 445, 446, 463], "failur": [297, 446, 449], "failure_valu": 297, "fairli": 457, "fake": [244, 346, 350, 406, 407, 421, 422, 429, 446, 451, 462, 466], "fall": [156, 185, 418, 452, 464], "fallback": [206, 218, 246, 366, 421, 446, 460], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 96, 100, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 185, 206, 210, 212, 218, 223, 251, 253, 255, 260, 264, 278, 280, 282, 284, 297, 306, 319, 320, 324, 330, 331, 344, 349, 354, 356, 357, 361, 398, 407, 412, 413, 414, 415, 421, 429, 436, 437, 438, 446, 454], "falsi": 454, "famili": 453, "familiar": [402, 403, 404, 407, 409, 410, 412, 413, 414, 415, 421, 422, 429, 433, 434, 436], "fang": 448, "fantasi": 10, "far": [452, 454], "farthest": [205, 206, 384, 385, 407, 444, 446, 448, 450, 454, 459], "farthest_point_sampl": [206, 446], "fashion": [305, 307], "fast": [340, 412, 414, 415, 451, 460, 464], "faster": [218, 340, 451], "fault": 91, "faulti": 445, "favicon": 446, "favor": 446, "fc": [402, 403, 404], "feasibl": [75, 452, 456], "featur": [96, 113, 154, 353, 444, 445, 446, 447, 453, 456, 463, 465], "fed": [444, 456], "feder": 448, "fee": 449, "feed": [340, 430, 443, 444, 455, 465], "feedback": 448, "feel": 418, "fetch": 447, "few": [401, 427, 446, 447, 450, 458, 461, 463, 465, 467], "field": [233, 343, 344, 446, 465, 466], "fifti": 449, "fig": [419, 430], "figsiz": 430, "figur": 419, "file": [402, 403, 404, 418, 421, 422, 434, 444, 446, 449, 454, 461, 465], "filenotfounderror": [402, 403, 404, 418], "fill": [31, 244, 419], "filler": 453, "filter": [31, 38, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 212, 218, 351, 354, 412, 424, 446, 453, 455, 460, 465, 467], "filter_attribut": 446, "filter_df": [31, 446], "filterwarn": 418, "final": [401, 403, 406, 418, 424, 441], "find": [212, 324, 378, 444, 450, 452, 453, 457, 465], "fine": [422, 436, 437, 438, 444], "finer": [157, 444], "fingerprint": [148, 154, 334, 336, 444, 446, 448, 458], "finish": 451, "finit": [183, 240, 248, 363, 393, 427, 458, 462], "first": [205, 212, 246, 377, 385, 401, 403, 406, 407, 412, 417, 418, 421, 422, 424, 429, 430, 434, 438, 440, 441, 444, 445, 446, 452, 453, 457, 458, 459, 460, 465, 467], "fit": [31, 203, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 340, 386, 388, 402, 403, 404, 412, 413, 414, 415, 421, 429, 436, 446, 449, 451, 453, 458, 463], "fit_gpytorch_ml": 446, "fit_gpytorch_mll_torch": 446, "fit_intercept": 421, "fit_param": 340, "fit_predict": 340, "fit_transform": 340, "fitnr": [31, 429], "fitzner": [444, 448], "fix": [240, 267, 418, 419, 424, 427, 430, 433, 434, 447, 452, 458, 462, 465, 467], "flag": [26, 31, 52, 96, 100, 121, 124, 129, 131, 195, 212, 213, 218, 349, 356, 443, 446, 452, 455, 456, 459], "flake8": 446, "flexibl": [417, 432, 446, 461, 462], "flexibli": [457, 459], "float": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 42, 44, 45, 47, 48, 107, 108, 109, 110, 111, 112, 113, 114, 118, 124, 125, 143, 150, 151, 154, 158, 161, 162, 168, 169, 170, 171, 172, 173, 174, 193, 195, 217, 218, 242, 246, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 288, 297, 298, 305, 306, 307, 317, 340, 342, 346, 347, 348, 353, 364, 368, 374, 375, 377, 378, 379, 390, 393, 394, 395, 417, 419, 421, 427, 429, 446, 447, 451, 452, 466], "float64": [390, 430], "floattensortyp": 421, "fly": [184, 461, 463], "fn": 316, "focu": 452, "focus": [131, 430, 434, 444], "folder": [403, 444, 447, 454, 463], "follow": [158, 180, 182, 183, 184, 185, 212, 242, 244, 246, 402, 403, 404, 407, 409, 410, 412, 413, 414, 415, 417, 418, 422, 427, 429, 434, 437, 438, 440, 441, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "footprint": [10, 212], "forbid": 396, "forc": [96, 98, 156, 195, 446, 447, 456, 459], "foreach": 421, "forest": [283, 284], "forgiv": 464, "fork": 447, "form": [218, 240, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 340, 346, 443, 444, 447, 449, 450, 452, 457, 458, 459, 460, 461, 462, 467], "formal": [425, 443], "format": [45, 340, 359, 365, 368, 421, 422, 436, 437, 444, 445, 446, 447, 452, 454, 461, 462], "format_except": 445, "former": [424, 446], "formul": [451, 465], "formula": 424, "forrest": 446, "found": [89, 157, 210, 218, 324, 334, 375, 378, 418, 424, 429, 444, 445, 447, 452, 453, 459, 465, 466], "foundat": 459, "four": 424, "fourier": 113, "fourth": 453, "fp": [384, 446, 450, 466], "fp_size": [148, 458], "fpsampl": [206, 446, 448, 454], "fpsiniti": 206, "fpsrecommend": [407, 421, 422, 436, 437, 438, 444, 446, 448, 451, 454, 459], "frac": [441, 457], "frac1": 413, "fraction": [15, 108, 342, 418, 450, 453], "fraction1": 413, "fraction_1": 453, "fraction_2": 453, "fraction_3": 453, "fractur": 453, "frame": [348, 456, 467], "frame1": 413, "frame2": 413, "frame_1": 453, "frame_2": 453, "framea": 413, "framea_a": 413, "frameb": 413, "framework": [452, 458], "free": [447, 449], "freedom": 461, "freeli": 424, "frequenc": 113, "frequent": 427, "fresh": 418, "frictionless": 461, "friendli": 446, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 96, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 148, 150, 151, 154, 156, 157, 164, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 232, 236, 244, 246, 248, 251, 253, 255, 258, 260, 264, 267, 272, 276, 278, 280, 282, 284, 288, 295, 297, 303, 306, 307, 326, 330, 331, 335, 338, 340, 348, 349, 351, 353, 364, 370, 371, 379, 385, 386, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 425, 427, 429, 430, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 445, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467], "from_bound": [210, 446, 460], "from_campaign": [96, 456], "from_config": [31, 437, 438, 452], "from_datafram": [210, 212, 218, 446, 455, 460, 461, 467], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371, 421], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371, 421, 422, 436, 452, 461], "from_paramet": [210, 212, 218, 446], "from_preset": 264, "from_product": [210, 212, 218, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 425, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 444, 446, 453, 455, 460, 461, 462], "from_recommend": [96, 456], "from_record": [461, 462], "from_repl": [258, 463], "from_simplex": [218, 424, 446, 455, 460, 467], "from_surrog": [96, 456], "front": 457, "frontier": 430, "frozenset": [44, 210, 424], "fsspec": 446, "fulfil": [38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 418, 424, 425], "full": [26, 210, 375, 400, 442, 446, 452, 453, 455, 456, 458, 465, 466], "full_factori": 210, "full_lik": 419, "full_lookup": [402, 403, 404], "fulli": [424, 444, 446, 454, 455, 462], "fullparamnam": 421, "fulltest": 447, "func": [340, 447], "func_nam": 440, "funci": 446, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 39, 45, 46, 51, 59, 61, 69, 81, 91, 93, 96, 112, 120, 123, 128, 130, 132, 155, 156, 160, 193, 195, 211, 216, 222, 226, 227, 236, 237, 240, 241, 243, 245, 246, 247, 252, 259, 265, 270, 285, 289, 294, 301, 304, 305, 306, 307, 309, 312, 328, 332, 341, 345, 348, 350, 355, 356, 359, 362, 367, 369, 373, 380, 383, 392, 406, 412, 413, 414, 415, 417, 419, 421, 424, 427, 430, 436, 440, 441, 444, 445, 446, 450, 453, 454, 455, 457, 459, 460, 462, 463, 464, 465, 466, 467], "function_nam": [440, 441], "functionalgroup": 148, "functionalgroupsfingerprint": 148, "fundament": [458, 461], "furo": 446, "further": [13, 16, 355, 424, 425, 436, 444, 451, 455, 459, 460, 463, 465, 466], "furthermor": [429, 451], "furyl": [402, 403, 404], "futur": [56, 259, 412, 414, 415, 418, 440, 456, 464], "fuzzy_row_match": 446, "g": [52, 54, 55, 72, 99, 143, 157, 212, 218, 313, 336, 355, 427, 444, 445, 446, 447, 450, 451, 453, 454, 456, 458, 459, 460, 462, 467], "g1": 425, "g2": 425, "g3": 425, "gain": [218, 452, 456], "gamma": 169, "gammaprior": 446, "garbag": 446, "gather": [185, 440, 441, 450, 465], "gaussian": [101, 200, 253, 262, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 305, 407, 429, 446, 453, 459, 465], "gaussian_kd": 419, "gaussian_process": [103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 264, 266, 267, 271, 274, 276, 407, 446], "gaussianmixtureclusteringrecommend": 459, "gaussianprocesspreset": [264, 272], "gaussianprocesssurrog": [272, 407, 412, 413, 414, 415, 419, 429, 436, 437, 438, 446, 463], "gcf": [402, 404], "ge": 410, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 96, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 147, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 217, 218, 251, 253, 255, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 295, 297, 303, 330, 336, 340, 347, 364, 369, 370, 371, 380, 388, 401, 407, 417, 424, 430, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 461, 462, 463, 464, 465, 466, 467], "geom_mean": [124, 127, 429, 457], "geometr": [127, 379, 429, 457], "gerit": 444, "germani": [444, 448], "get": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 193, 195, 210, 264, 340, 346, 407, 418, 421, 424, 433, 434, 443, 444, 446, 451, 466, 467], "get_absolute_threshold": [44, 446], "get_acquisition_funct": [31, 193, 195, 446], "get_base_structure_hook": 446, "get_candid": [218, 418, 419], "get_cmap": 419, "get_comp_rep_parameter_indic": [212, 446], "get_current_recommend": [180, 182, 183, 184, 185, 446], "get_integration_point": 15, "get_invalid": [38, 50, 51, 52, 53, 54, 55, 56, 57, 58], "get_invalid_polar": [38, 50, 51, 52, 53, 54, 55, 56, 57, 58], "get_lin": 418, "get_metadata_rout": 340, "get_next_recommend": [180, 182, 183, 184, 185, 446], "get_non_meta_recommend": [180, 182, 183, 184, 185, 446], "get_param": 340, "get_parameters_by_nam": [210, 212, 218], "get_parameters_from_datafram": [210, 218], "get_subclass": 407, "get_surrog": [31, 96, 193, 195, 446, 456, 463], "get_transform_object": [361, 446], "get_transform_paramet": 446, "get_valid": [38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 446], "getawai": 148, "getawayfingerprint": 148, "getcomputedstyl": 421, "ghosecrippen": 148, "ghosecrippenfingerprint": 148, "git": [444, 447], "github": [276, 327, 353, 421, 446, 447, 448], "give": [421, 422, 424, 441, 449, 452, 453, 457, 461], "given": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 40, 41, 42, 44, 64, 89, 96, 99, 100, 121, 124, 129, 131, 133, 154, 156, 157, 158, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 224, 228, 232, 240, 244, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 288, 300, 311, 319, 320, 324, 325, 326, 329, 330, 333, 334, 342, 344, 346, 349, 356, 364, 365, 377, 379, 385, 388, 412, 413, 414, 415, 418, 424, 427, 429, 434, 440, 441, 446, 451, 452, 453, 460, 462, 463], "glass_transition_tempc": 458, "global": [15, 381, 446, 466, 467], "gmean": 379, "gmm": 200, "go": [310, 424, 444], "goal": [401, 427, 457, 465], "goe": 463, "good": [346, 418, 429, 452, 464], "good_interv": 346, "good_reference_valu": 346, "goodwil": 449, "googl": [446, 447], "got": 446, "govern": 444, "gp": [251, 253, 255, 260, 264, 278, 280, 282, 284, 446], "gpytorch": [101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 164, 166, 168, 169, 170, 171, 172, 173, 174, 446], "grab": 443, "gradient": [10, 195, 282, 446, 454, 459], "grant": [446, 449], "granular": [422, 436, 437, 438, 444], "granularity_coar": 436, "granularity_fin": 436, "great": [427, 461], "greater": [185, 195], "greatli": 447, "greedi": [195, 446, 459], "green": 421, "grid": [430, 440, 441], "grid_d": [440, 441], "grossli": 449, "ground": 446, "group": [87, 195, 311, 321, 388, 425, 444, 446, 452, 453, 454, 456], "groupbi": [246, 248], "grow": 467, "gt": [415, 424], "gu16": 458, "guarante": [446, 453, 454, 459], "guid": [340, 406, 444, 445, 446, 447, 450, 452, 455, 457, 460, 462, 465], "guidelin": [446, 447, 450], "h": 340, "ha": [31, 52, 75, 76, 80, 81, 96, 183, 210, 212, 218, 251, 253, 255, 260, 264, 278, 280, 282, 284, 310, 324, 326, 330, 347, 358, 385, 386, 403, 407, 412, 413, 414, 415, 424, 429, 434, 436, 444, 446, 447, 449, 451, 452, 453, 456, 458, 460, 461, 462, 464, 465], "had": [240, 453, 458, 462], "half": [151, 170, 171, 364, 434, 451], "halfcauchyprior": 446, "halfnormalprior": 446, "halter": 444, "hamster": 465, "hand": [45, 154, 246, 425, 427, 430, 440, 441, 444, 452, 461, 463], "handi": 453, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 96, 129, 138, 242, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 357, 362, 412, 413, 427, 429, 446, 452, 457, 467], "happen": [88, 183, 429, 434, 441, 445, 446, 447, 460, 461, 465], "happili": 457, "hard": [446, 465, 467], "hardcod": 446, "harmless": 449, "hartmann": [419, 440, 441], "hasattr": [409, 410, 433, 434], "hash": 458, "hashabledict": 446, "have": [26, 31, 38, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 121, 124, 129, 131, 154, 156, 203, 212, 240, 259, 292, 311, 321, 324, 340, 346, 355, 356, 375, 397, 402, 403, 406, 407, 412, 413, 417, 419, 424, 425, 427, 429, 433, 434, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 461, 462, 463, 465, 467], "head": 446, "header": 344, "heart": 465, "heatmap": [96, 98], "help": [427, 461, 462, 465], "helper": [417, 419, 421, 424, 461], "henc": [335, 424, 427, 436, 451, 453, 458, 467], "here": [55, 375, 402, 404, 406, 409, 410, 417, 418, 422, 424, 425, 433, 434, 436, 440, 441, 443, 444, 445, 451, 453, 455, 457, 458, 459, 460, 461, 462, 464, 465], "herebi": 449, "herein": [449, 452], "heurist": [195, 340], "hierarch": 461, "hierarchi": [89, 446, 447, 452, 461], "high": [274, 401, 427, 446, 447, 450, 452, 453, 458, 461], "higher": [154, 427, 445, 453, 456, 459], "highest": [450, 461], "highlight": 465, "hint": 447, "histor": 458, "histori": 447, "hoc": 457, "hold": [44, 321, 449, 461], "home": [412, 414, 415], "homepag": [444, 446], "hood": 458, "hook": [218, 227, 228, 232, 326, 442, 445, 446, 447], "hopp": [444, 448], "host": 446, "hot": [145, 403, 427, 444, 446, 458], "how": [53, 242, 244, 340, 355, 385, 401, 402, 404, 405, 406, 407, 408, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 434, 436, 437, 438, 441, 444, 452, 453, 457, 462, 463, 464, 465, 466], "howev": [157, 218, 259, 326, 417, 424, 427, 433, 434, 443, 445, 447, 449, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 465, 467], "hrovatin": [444, 448], "hsuan": 448, "html": [101, 164, 316, 375, 421, 446], "http": [101, 164, 276, 316, 327, 353, 375, 444, 446, 449, 465], "hue": [401, 402, 403, 404, 418, 440, 441], "human": [217, 368, 436, 446, 448, 461], "hybrid": [25, 26, 72, 186, 187, 195, 207, 212, 213, 407, 408, 412, 413, 414, 415, 429, 431, 436, 442, 444, 446, 459, 460], "hybrid_recommend": 434, "hybrid_sampl": [195, 459], "hyperrectangl": [210, 460], "hypervolum": [13, 16], "hypothesi": [444, 446, 447], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 71, 72, 78, 80, 81, 83, 85, 96, 99, 100, 115, 118, 125, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 158, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 225, 240, 242, 244, 246, 248, 251, 253, 255, 256, 258, 259, 260, 264, 274, 278, 280, 282, 284, 288, 292, 300, 305, 306, 307, 311, 314, 315, 316, 319, 320, 324, 326, 327, 329, 330, 331, 334, 335, 340, 344, 346, 347, 348, 349, 350, 354, 355, 356, 359, 363, 364, 372, 375, 377, 378, 385, 386, 393, 398, 399, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 425, 427, 429, 433, 434, 436, 437, 438, 440, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "ibm": 340, "icon": 421, "ideal": [451, 453, 462], "ident": [157, 310, 311, 446, 455, 458, 461, 465], "identif": 427, "identifi": [38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 246, 321, 335, 355, 356, 418, 446, 453, 456, 457, 458, 460, 461, 462, 465], "idx_offset": 45, "ignor": [121, 124, 129, 131, 183, 195, 212, 242, 244, 246, 324, 340, 353, 404, 418, 434, 446, 453, 461, 467], "ignore_exampl": 446, "ignore_list": 352, "ii": 449, "iii": 449, "illustr": [430, 432, 455], "iloc": 451, "imag": [427, 446], "imagin": [424, 427], "immedi": [417, 452], "immut": 446, "impact": [403, 441, 454], "imperfect": 348, "implement": [21, 38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 125, 177, 188, 206, 248, 256, 328, 412, 418, 424, 440, 446, 447, 448, 450, 456, 459, 460, 462, 465, 466], "impli": [424, 444, 449, 453, 458], "implicitli": 461, "import": [13, 16, 87, 96, 124, 244, 340, 418, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "impos": [424, 425, 453], "imposs": [455, 461], "improv": [3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 407, 410, 416, 418, 442, 444, 446, 449, 454], "imput": [242, 244, 400, 404, 442, 444], "impute_mod": [242, 244, 246, 404, 462], "inabl": 449, "inaccuraci": [444, 446], "inact": [44, 156, 158, 195, 210, 446], "inactive_parameter_combin": [44, 210, 446], "inc": 465, "incident": 449, "includ": [62, 64, 121, 124, 129, 131, 156, 185, 242, 319, 320, 352, 402, 413, 422, 424, 437, 438, 441, 446, 447, 449, 450, 451, 453, 455, 467], "inclus": 449, "incom": 461, "incompat": [68, 69, 70, 71, 72, 73, 100, 260, 414, 453], "incompatibilityerror": 31, "incompatibleacquisitionfunctionerror": 451, "incompatibleexplainererror": 456, "incomplet": [446, 451], "inconsist": 446, "incorpor": [449, 451, 463, 467], "incorrect": 446, "incorrectli": 446, "increas": [10, 183, 246, 306, 307, 429, 440, 441, 446, 450, 458, 465], "increment": 218, "incur": 449, "inde": 452, "indefinit": [183, 242], "indemn": 449, "indemnifi": 449, "indent": [344, 446], "independ": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 187, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 421, 446, 457, 459, 462, 463], "independentgaussiansurrog": [260, 278, 280, 282, 446], "index": [31, 38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 96, 212, 246, 258, 310, 311, 340, 354, 355, 421, 422, 429, 434, 436, 446, 451, 456, 458, 460, 462], "indexkernel": 446, "indic": [13, 16, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 91, 99, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 158, 180, 182, 183, 184, 185, 212, 251, 253, 255, 260, 264, 278, 280, 282, 284, 310, 311, 314, 315, 340, 349, 385, 424, 434, 446, 449, 451, 455, 459, 462, 463], "indirect": [319, 320, 449], "indistinguish": 424, "individu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 52, 53, 116, 117, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 242, 258, 359, 418, 425, 430, 449, 452, 455, 457, 459, 465, 466], "induc": [44, 427], "industri": 465, "ineffici": [218, 453], "inequ": [45, 210, 460], "inertia_": 340, "inf": [8, 412, 413, 414, 415, 436], "infeas": [453, 455], "infer": [157, 440, 441, 446, 460], "infin": 162, "infinit": [183, 184, 322, 363, 393, 394, 446, 458], "influenti": 465, "info": 446, "inform": [26, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 228, 232, 234, 295, 297, 303, 340, 356, 370, 371, 402, 403, 404, 419, 424, 433, 434, 441, 444, 446, 447, 449, 451, 455, 458, 460, 465, 466], "infring": 449, "ingest": [218, 242, 446, 458, 459], "ingredi": [424, 425, 453], "inher": [21, 156, 251, 253, 255, 260, 264, 278, 280, 282, 284, 424, 463], "inherit": 447, "init": 340, "initi": [107, 108, 109, 110, 111, 112, 113, 114, 118, 185, 187, 195, 200, 201, 202, 203, 205, 206, 218, 242, 246, 340, 385, 400, 412, 413, 414, 415, 418, 419, 429, 436, 441, 442, 446, 448, 451, 452, 454, 458, 459, 461, 462, 465], "initial_data": [242, 246, 402, 441, 462], "initial_recommend": [185, 407, 418, 419, 421, 422, 427, 436, 437, 438, 444, 459], "initial_recommender_cl": 446, "initial_strategi": 446, "initial_typ": 421, "initialis": 340, "inject": 461, "inner": [178, 354, 456, 459, 461], "innerhtml": 421, "inplac": [403, 440, 441, 467], "input": [40, 41, 42, 76, 125, 137, 140, 141, 143, 151, 154, 210, 212, 218, 232, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 295, 297, 303, 305, 321, 340, 342, 343, 348, 349, 350, 354, 357, 358, 364, 366, 372, 377, 385, 398, 399, 401, 421, 429, 430, 440, 441, 446, 457, 461, 462, 465], "input_dim": 421, "input_label": 349, "inputtransform": 388, "insid": [418, 421, 422, 445, 461], "insight": [96, 418, 444, 446, 448, 466], "inspect": [330, 417, 424], "instabl": [446, 453], "instal": [206, 446, 447, 453, 454, 456, 458, 467], "instanc": [40, 41, 42, 52, 55, 96, 185, 212, 340, 346, 372, 413, 418, 424, 425, 444, 445, 447, 451, 452, 453, 454, 456, 458, 460, 461, 462, 467], "instanti": [418, 452], "instead": [180, 182, 183, 184, 185, 335, 349, 357, 412, 414, 415, 444, 445, 446, 452, 453, 457, 458, 461, 462, 464, 465, 467], "institut": [448, 449], "instruct": [444, 446, 464, 466], "int": [10, 13, 15, 16, 21, 31, 34, 44, 45, 50, 96, 103, 104, 105, 108, 110, 111, 112, 113, 114, 121, 124, 125, 129, 131, 145, 158, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 217, 218, 242, 246, 248, 297, 298, 305, 306, 307, 340, 350, 359, 378, 379, 381, 382, 385, 386, 388, 412, 414, 415, 424, 427, 429, 441, 446, 447, 458], "int64": 340, "integ": [34, 145, 212, 246, 434, 446, 447, 458], "integr": [15, 446, 447, 450, 452], "intend": [406, 417, 440, 447, 459], "intens": 458, "intention": 449, "interact": [30, 31, 406, 444, 445, 452, 455, 461], "interchang": 424, "interconnect": 452, "interest": [452, 456, 457, 458, 467], "interfac": [177, 256, 266, 417, 419, 446, 449, 452, 455, 456, 466], "intermedi": [203, 385], "intern": [31, 45, 56, 183, 401, 418, 429, 446, 451, 453, 454, 458, 459, 460, 461], "internship": 448, "interplai": 446, "interpol": [108, 274, 446], "interpret": [13, 16, 212, 240, 342, 422, 424, 437, 438, 441, 454, 460, 462], "interrupt": 66, "intersect": 434, "interv": [31, 44, 150, 156, 158, 251, 253, 255, 260, 264, 278, 280, 282, 284, 303, 305, 306, 307, 429, 446, 452, 458, 461, 464], "intrins": 465, "introduc": [340, 445, 446, 453, 458, 459, 462], "intuit": [452, 456], "invalid": [38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 77, 218, 335, 386, 422, 437, 445, 452, 453, 460], "invalid_config": 438, "invalid_surrogate_model": 422, "invalid_typ": 438, "invari": [52, 55, 56, 310, 311, 453], "invers": 461, "invert": [31, 354], "investig": [240, 462, 463], "invok": [462, 466, 467], "involv": [31, 218, 258, 417, 424, 444, 456, 457, 458, 461, 465], "irrelev": [424, 446, 453], "irrevoc": 449, "is_bound": [364, 446], "is_cardinality_fulfil": 446, "is_continu": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 136, 137, 138, 140, 141, 143, 150, 151, 154], "is_degener": 364, "is_discret": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 136, 137, 138, 140, 141, 143, 150, 151, 154], "is_empti": [210, 218, 370, 371, 446], "is_eq": 45, "is_finit": 446, "is_fully_unbound": 364, "is_half_bound": 364, "is_in_rang": [136, 137, 138, 140, 141, 143, 150, 151, 154], "is_inact": 446, "is_left_bound": 364, "is_mc": 446, "is_multi_output": [121, 124, 129, 131, 446], "is_numer": [136, 137, 138, 140, 141, 143, 150, 151, 154, 446], "is_right_bound": 364, "is_stat": [180, 182, 183, 184, 185, 446, 455], "iso": 421, "isol": 452, "isoxazol": 465, "issu": [259, 316, 327, 358, 446, 449, 462, 467], "item": [41, 136, 137, 138, 140, 141, 143, 150, 151, 154, 424, 427, 440, 441, 458], "iter": [13, 16, 31, 44, 150, 183, 184, 210, 212, 242, 259, 303, 317, 322, 340, 346, 348, 350, 358, 365, 397, 398, 399, 402, 412, 413, 414, 415, 418, 419, 427, 440, 441, 444, 446, 450, 452, 458, 459, 462, 463, 467], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 206, 210, 212, 218, 234, 236, 246, 248, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 310, 318, 326, 330, 346, 364, 368, 370, 371, 401, 407, 417, 419, 424, 425, 427, 441, 444, 445, 447, 449, 450, 451, 453, 455, 457, 458, 459, 460, 461, 462, 463, 465, 467], "itself": [251, 253, 255, 260, 264, 278, 280, 282, 284, 417, 440, 445, 465], "j": [403, 444, 458, 465], "jackiepho": [402, 403, 404], "jan": 444, "januari": 449, "javadi": 448, "jin": 448, "join": [354, 445], "joint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 193, 195, 258, 452, 463], "joint_acq_valu": 452, "joint_acquisition_valu": [31, 193, 195, 446, 452], "jointli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 430, 452], "jonathan": 448, "journal": [340, 444], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371, 421, 422, 436, 437, 446, 466], "json_str": 461, "juli": 448, "julian": 448, "jump": [446, 465], "jun": 340, "jupyt": 421, "just": [427, 443, 447, 461], "k": [151, 201, 340, 385, 401, 402, 403, 404, 406, 407, 409, 410, 418, 424, 430, 432, 433, 434, 446, 455, 459, 467], "karin": [444, 448], "kde": 419, "keep": [51, 154, 210, 218, 418, 446, 447], "kei": [278, 284, 290, 321, 346, 403, 447, 456], "kept": [354, 458, 463], "kernel": [103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 264, 265, 266, 267, 268, 274, 276, 340, 407, 412, 413, 414, 415, 429, 436, 446, 453, 465], "kernel_factori": [103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 264, 266, 267], "kernel_or_factori": 264, "kernelexplain": [94, 96, 97, 100, 456], "kernelfactori": [264, 267, 268, 274, 276, 446], "keyword": [96, 154, 404, 407, 434, 441, 446, 451, 453, 460, 462], "kgaa": [444, 448], "kian": 465, "kickstart": 461, "kind": [195, 444, 446, 449, 453, 458, 459], "kiter": [412, 413, 414, 415, 429], "klekotaroth": 148, "klekotarothfingerprint": 148, "kmean": [340, 407], "kmeansclusteringrecommend": [407, 459], "knob": 444, "know": [427, 437, 444, 445, 457, 461, 465], "knowledg": [8, 10, 444, 446, 465], "known": [453, 455, 463, 465], "koller": 465, "kwarg": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 107, 109, 111, 116, 117, 118, 166, 168, 169, 170, 171, 172, 173, 174, 177, 256, 261, 266, 336, 340, 350, 363], "kwargs_conform": [154, 336, 458], "kwargs_fingerprint": [154, 336, 458], "l0": 34, "l1": 458, "l664": 276, "label": [55, 56, 143, 154, 340, 349, 424, 425, 430, 444, 446, 453, 455, 460, 462], "labelpad": 419, "labels_": 340, "laboratori": 430, "laggner": 148, "laggnerfingerprint": 148, "lambda": [412, 414, 415, 418, 424, 440, 463], "lambda_1": 421, "lambda_2": 421, "lambda_init": 421, "lanat": 456, "land": 446, "languag": [316, 425, 444], "larg": [154, 218, 340, 409, 410, 425, 446, 453, 454, 458, 462, 467], "larger": [108, 151, 386, 407, 414, 452, 453, 461, 465], "largest": [205, 385, 427, 450], "last": [183, 427, 447, 452, 459, 466], "last_call_tim": 417, "lastli": 419, "latent": 458, "later": [151, 445, 451, 452, 461], "latest": [184, 444, 447, 452], "latter": [21, 31, 310, 330, 340, 418, 424, 452, 457, 465], "law": [444, 449], "lawsuit": 449, "layer": 148, "layeredfingerprint": 148, "layout": 446, "lazi": [220, 389, 446], "lazili": [446, 454], "lazyfram": [38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 220], "le": 410, "le_method": 447, "lead": [86, 429, 446, 454, 461], "lean": 447, "learn": [15, 247, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 340, 407, 412, 413, 414, 415, 427, 429, 436, 440, 442, 444, 446, 453, 456, 458, 463, 464, 466], "least": [158, 183, 425, 444, 449, 451, 452], "leav": 461, "lee": 448, "left": [83, 84, 174, 242, 347, 355, 364, 413, 430, 446, 457], "left_df": 355, "leftov": 446, "legal": 449, "legend": [402, 404, 430], "len": [413, 418, 419, 424, 425, 427], "length": [109, 183, 184, 251], "lengthi": 452, "lengthscal": [108, 109, 110, 112, 113, 114], "lengthscale_initial_valu": [108, 109, 110, 112, 113, 114], "lengthscale_prior": [108, 109, 110, 112, 113, 114], "leq": 34, "less": [8, 311, 350, 385, 418, 419, 427, 452, 453, 467], "let": [401, 403, 417, 418, 419, 421, 422, 424, 425, 430, 432, 441, 444, 451, 453, 457, 461], "level": [348, 446, 447, 451, 452, 453, 459, 461], "leverag": [418, 451, 452, 459], "li": [158, 458], "liabil": 449, "liabl": 449, "lib": 445, "librari": [445, 446], "licensor": 449, "lie": [31, 251, 253, 255, 260, 264, 278, 280, 282, 284, 346], "liebig": [444, 448], "life": [444, 447, 448, 467], "lifecycl": 452, "ligand": [402, 403, 404, 406, 407, 418, 444, 456, 458], "ligand_data": 418, "ligand_smil": 418, "like": [13, 16, 158, 203, 246, 313, 340, 419, 424, 427, 444, 445, 446, 447, 451, 452, 453, 455, 461, 462, 465, 467], "likelihood": 251, "lime": [96, 99, 456], "limetabular": [94, 95, 456], "limit": [8, 274, 419, 444, 448, 449, 460, 466], "line": [344, 364, 402, 404, 418, 427, 446, 447, 450, 452, 458, 462, 465], "linear": [45, 107, 210, 278, 301, 306, 407, 408, 429, 442, 446, 447, 456, 460, 464], "linear_model": 421, "linear_regressor": 421, "linearkernel": 446, "linearli": [274, 306, 307, 429, 446], "lineplot": [401, 402, 403, 404, 418, 440, 441], "lingo": 148, "lingofingerprint": 148, "link": [54, 445, 446, 449, 458], "linspac": [412, 413, 414, 415, 419, 421, 422, 424, 430, 433, 434, 436, 440, 441, 467], "lint": [444, 446, 447], "linter": [446, 447], "list": [34, 35, 36, 37, 38, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 157, 163, 183, 184, 210, 212, 218, 219, 220, 223, 224, 225, 242, 246, 248, 319, 320, 321, 329, 336, 346, 351, 352, 353, 356, 385, 402, 407, 412, 413, 414, 415, 419, 424, 425, 427, 429, 433, 434, 441, 444, 446, 447, 449, 453, 457, 458, 459, 460, 462], "liter": [31, 96, 183, 242, 244, 246, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 348, 385, 447], "literatur": 446, "litig": 449, "littl": 445, "live": 463, "liver": [462, 465], "ll": 455, "ller": 444, "load": [389, 418, 421, 437, 438, 445, 446], "loc": [172, 173, 402, 404, 430, 451], "local": [445, 446, 447, 454, 456, 466], "locat": [13, 16, 172, 173, 340, 451, 454, 465], "lock": 446, "lockfil": 446, "log": [172, 407], "logarithm": [4, 11, 13, 14, 379], "logei": [4, 446], "logic": [178, 258, 346, 349, 401, 446, 453, 459, 462, 467], "lognormalprior": 446, "logo": 446, "long": [452, 461, 462], "longer": [156, 446, 454], "look": [244, 407, 424, 427, 445, 450, 452, 453, 455, 456, 461, 462, 464], "look_up_target": 242, "lookup": [240, 242, 246, 248, 349, 355, 400, 401, 419, 430, 433, 442, 446, 454, 456, 466], "lookup_df": 244, "lookup_test_task": 441, "lookup_training_task": 441, "lookup_valu": [409, 410, 419, 433, 434], "lookup_withmiss": 404, "loop": [240, 242, 248, 412, 413, 414, 415, 418, 429, 446, 451, 456, 462, 466, 467], "loss": 449, "lost": 461, "lot": 432, "low": [274, 427, 444, 445, 446, 456, 458, 461], "lower": [158, 174, 305, 306, 307, 364, 402, 404, 419, 429, 440, 441, 453, 458, 464], "lower_bound": 460, "lower_threshold": 158, "lst_exclud": 351, "lt": 445, "luxuri": 452, "m": [424, 444], "m1": 445, "mac": 445, "macc": 148, "maccsfingerprint": 148, "machin": [427, 445, 446, 447, 450, 454, 458, 464, 465], "machineri": [21, 195, 445, 447, 455, 465, 467], "made": [31, 87, 242, 385, 404, 444, 445, 449, 453, 454, 462], "magic": 465, "magnitud": [347, 348, 453, 467], "mai": [31, 44, 121, 124, 129, 131, 212, 326, 340, 443, 444, 449, 452, 455, 461, 462, 463], "mail": 449, "main": [30, 31, 444, 446, 453], "maintain": [288, 447, 455, 457], "major": [446, 462], "make": [56, 195, 251, 253, 255, 260, 264, 278, 280, 282, 284, 286, 287, 288, 316, 347, 349, 402, 404, 407, 409, 424, 425, 444, 445, 446, 447, 449, 451, 452, 453, 455, 456, 458, 461, 463, 465, 467], "make_base_structure_hook": 446, "make_explainer_for_surrog": 96, "malfunct": 449, "manag": [30, 210, 211, 212, 218, 382, 446, 449, 462], "mandatori": [443, 446, 464], "mani": [195, 386, 424, 433, 434, 444, 452, 453, 458, 461, 464, 465], "manipul": [446, 454], "manner": 454, "manual": [434, 445, 446, 461, 463], "map": [143, 148, 154, 244, 246, 258, 305, 306, 307, 324, 340, 349, 388, 402, 403, 404, 429, 462, 464], "mapfingerprint": 148, "mapl": [94, 95, 96, 99, 456], "maranzana": 340, "marcel": 444, "margin": 446, "mark": [449, 452, 465, 466], "markdown": [422, 437, 438, 446], "marker": [401, 402, 403, 404, 418, 440, 441, 446], "markers": [401, 403, 418, 430, 440, 441], "market": 427, "marketplac": 446, "martin": [444, 448], "mask_bad1": 412, "mask_bad2": 412, "mask_bad3": 412, "mask_good": [412, 453], "mass": 168, "master": 276, "match": [31, 88, 90, 137, 140, 141, 143, 151, 154, 157, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 295, 297, 300, 303, 324, 326, 355, 356, 398, 417, 419, 429, 434, 444, 446, 451, 452, 455, 457, 461, 462, 466], "match_attribut": 446, "match_targeta": 464, "match_targetb": 464, "materi": [427, 448, 465], "matern": 108, "maternkernel": 446, "math": [418, 424], "mathemat": 446, "mathia": 444, "matmin": 445, "matplotlib": [402, 404, 419, 430, 446], "matrix": 340, "matter": [424, 432, 447, 457], "max": [244, 300, 347, 402, 403, 404, 406, 407, 412, 413, 414, 415, 418, 419, 421, 422, 427, 429, 430, 436, 437, 438, 444, 446, 457, 461, 462, 466], "max_cardin": [34, 44, 50, 453], "max_column": [359, 424], "max_colwidth": 359, "max_it": [340, 421], "max_n_subspac": [195, 446, 453], "max_nonzero": 218, "max_row": [359, 424], "max_sum": [218, 424, 460], "max_target": 464, "max_yield": [402, 404], "maxim": [6, 13, 16, 300, 406, 419, 427, 429, 444, 446, 456, 464], "maximum": [6, 34, 44, 50, 60, 154, 195, 210, 212, 218, 305, 340, 359, 424, 425, 429, 446, 453, 458, 460], "mc": [427, 451], "md": 446, "me2pph": [402, 403, 404], "mean": [5, 8, 21, 31, 56, 127, 201, 240, 242, 244, 246, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 288, 379, 404, 407, 421, 427, 429, 430, 446, 447, 449, 450, 451, 452, 453, 455, 457, 458, 459, 461, 463, 466], "meaning": [370, 371, 457], "meaningless": [424, 450], "meanpredictionsurrog": [288, 407, 463], "meantim": [447, 453], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 74, 82, 96, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 240, 242, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 295, 297, 303, 346, 350, 355, 370, 402, 403, 404, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 429, 433, 434, 436, 443, 444, 446, 447, 450, 451, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466], "measurablemetadata": [136, 137, 138, 140, 141, 143, 150, 151, 154, 295, 297, 303, 446], "mechan": [31, 66, 124, 125, 127, 240, 243, 244, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 326, 340, 354, 366, 385, 401, 417, 418, 419, 440, 441, 446, 449, 455, 456, 458, 460, 461, 463, 465, 466], "mechanist": 444, "media": [449, 458, 465], "medic": 451, "mediocr": 464, "medium": [422, 436, 444, 449, 458], "medoid": [202, 340, 446, 459], "medoid_indices_": 340, "meet": [346, 449], "mem_estim": 467, "member": [330, 453, 458], "memori": [10, 212, 217, 218, 340, 446, 453, 454, 466], "memorys": [212, 218, 467], "mention": 450, "merchant": 449, "merck": [444, 448], "mere": [449, 457], "merg": 447, "meshgrid": [430, 440, 441], "messag": [88, 418], "meta": [31, 83, 180, 182, 183, 184, 185, 188, 412, 413, 414, 415, 429, 436, 444, 446, 466], "metadata": [31, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 210, 218, 295, 297, 303, 340, 370, 446, 448], "metadatarequest": 340, "metarecommend": [182, 183, 184, 185, 446, 455], "methanol": 424, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 91, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 205, 206, 207, 210, 212, 217, 218, 236, 251, 253, 255, 256, 258, 260, 264, 266, 267, 274, 276, 278, 280, 282, 284, 287, 292, 295, 297, 303, 313, 316, 326, 330, 340, 364, 370, 371, 384, 385, 386, 388, 419, 422, 437, 438, 443, 446, 448, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465], "methodtyp": [417, 418, 419], "methyldiphenylphosphin": [402, 403, 404], "methylisoxazol": 465, "metric": [340, 427, 458], "mhfp": 148, "mhfpfingerprint": 148, "micromamba": 446, "middl": 455, "midpoint": 464, "might": [52, 56, 154, 212, 403, 407, 409, 413, 434, 441, 445, 447, 451, 452, 453, 454, 456, 460, 462, 465, 466, 467], "mimic": [101, 164, 453], "min": [300, 347, 401, 409, 410, 419, 429, 430, 433, 434, 440, 441, 444, 446, 457, 461, 466], "min_cardin": [34, 44, 50, 453], "min_nonzero": 218, "min_target": 464, "mind": [427, 463], "miniconda": 446, "minim": [6, 300, 340, 429, 440, 441, 446, 453, 460, 464], "minimum": [34, 44, 50, 60, 79, 151, 210, 212, 218, 385, 446, 453], "minimumcardinalityviolatedwarn": [446, 453], "minor": [446, 466], "mirror": [13, 16, 452, 461], "misc": [370, 371], "miss": [242, 244, 357, 398, 399, 404, 446, 447], "mistak": [31, 447], "mix": [248, 424, 425, 444, 453, 458, 461, 465], "mixin": 236, "mixtur": [200, 442, 446, 453, 458, 459, 465, 467], "mobil": 446, "mode": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 143, 154, 183, 242, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 300, 303, 306, 324, 346, 400, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 418, 419, 421, 422, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 452, 457, 459, 461, 466], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 77, 80, 96, 100, 101, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 251, 253, 255, 256, 257, 258, 259, 260, 264, 278, 280, 282, 284, 288, 292, 375, 409, 410, 420, 430, 440, 441, 444, 446, 448, 450, 451, 452, 457, 458, 459, 461, 462, 464, 465, 466], "model_cl": 292, "model_cluster_num_parameter_nam": [200, 201, 202, 203], "model_from_config": 421, "model_from_python": 421, "model_json": 421, "model_param": [200, 201, 202, 203, 278, 282, 284, 422, 446], "modellist": 258, "modelnottrainederror": [251, 253, 255, 260, 264, 278, 280, 282, 284], "modif": [445, 449], "modifi": [184, 244, 288, 346, 347, 348, 446, 449, 467], "modul": [0, 1, 32, 92, 93, 101, 119, 134, 152, 164, 175, 178, 188, 191, 196, 208, 226, 227, 240, 249, 252, 262, 269, 289, 293, 296, 308, 312, 337, 338, 373, 389, 392, 444, 445, 446, 447], "modular": 447, "molecul": [54, 154, 335, 424, 458], "molecular": [336, 458], "moment": [248, 274, 447, 466], "monitor": 446, "monkeypatch": 445, "mont": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 81, 246, 401, 403, 404, 418, 427, 440, 441, 446, 451, 462], "monte_carlo_run": [246, 418], "mordr": [148, 154, 402, 403, 404, 406, 407, 413, 418, 422, 424, 437, 438, 444, 446, 453, 458], "mordredcommun": 446, "mordredfingerprint": [148, 458], "more": [8, 10, 56, 64, 84, 154, 183, 184, 210, 212, 218, 225, 242, 288, 330, 340, 344, 361, 385, 397, 404, 407, 419, 424, 425, 440, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 455, 458, 460, 461, 462, 463, 464, 467], "morgan": 458, "morgan_fp": [148, 446], "mors": 148, "morsefingerprint": 148, "most": [218, 242, 405, 427, 444, 447, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467], "motiv": 446, "mous": 451, "move": [13, 16, 156, 446, 461], "mpl_toolkit": 419, "mplot3d": 419, "mqn": 148, "mqnsfingerprint": 148, "mse": 427, "mu": [172, 173], "much": [403, 453, 457, 458], "multi": [96, 128, 250, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 430, 442, 444, 446, 448, 451, 465, 466], "multiarmedbandit": 427, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 40, 121, 124, 129, 131, 245, 246, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 348, 402, 403, 404, 413, 424, 427, 444, 446, 451, 453, 456, 457, 463, 464, 465, 466], "multipli": 117, "multitask": 446, "must": [52, 121, 124, 129, 131, 212, 218, 244, 248, 326, 340, 348, 398, 407, 417, 418, 424, 427, 429, 446, 447, 449, 450, 453, 454, 455, 456, 457, 458, 462], "mutual": 462, "my_attribut": 447, "my_valu": 454, "mypi": [316, 327, 444, 446, 447], "mystr": 447, "n": [26, 251, 311, 331, 385, 402, 403, 404, 406, 407, 412, 413, 414, 415, 422, 424, 427, 429, 433, 434, 436], "n_arm": 427, "n_batches_don": 31, "n_cluster": [201, 202, 340], "n_combin": 424, "n_combinations_actu": 424, "n_combinations_expect": 424, "n_compon": 200, "n_doe_iter": [242, 246, 248, 401, 402, 403, 404, 418, 419, 440, 441, 462], "n_duplic": 424, "n_estim": 422, "n_featur": 340, "n_features_new": 340, "n_fits_don": 31, "n_grid_point": 430, "n_inactive_parameter_combin": [44, 210, 446], "n_index": 340, "n_interrupted_campaign": 418, "n_iter": [409, 410, 412, 413, 414, 415, 427, 429], "n_mc_iter": [246, 248, 401, 403, 404, 418, 440, 441, 454, 462], "n_mc_run": 427, "n_mc_sampl": 21, "n_output": [121, 124, 129, 131, 340, 446], "n_permut": 424, "n_pis_ov": 418, "n_pis_over_requir": 418, "n_point": 386, "n_queri": 340, "n_raw_sampl": [195, 446, 459], "n_restart": [195, 446, 459], "n_row": 350, "n_sampl": [340, 385], "n_task": 212, "n_task_param": 446, "n_training_data": 430, "n_wrong_sum": 424, "na": 451, "nactivevalu": [412, 413, 414, 415, 429, 436], "naiv": [187, 280, 288, 407, 446, 460], "naivehybridrecommend": 446, "naivehybridspacerecommend": [434, 446, 459], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 44, 64, 87, 133, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 159, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 224, 246, 258, 260, 295, 297, 303, 310, 318, 324, 325, 326, 335, 336, 340, 344, 346, 351, 355, 356, 357, 376, 391, 397, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 425, 427, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 444, 446, 447, 449, 451, 452, 453, 454, 457, 460, 461, 462, 463, 464, 465, 467], "name_or_abbr": [318, 325], "namedtupl": 427, "namespac": [446, 447], "nan": [162, 251, 357, 393, 395, 396, 398, 399, 412, 413, 414, 415, 429, 436, 446, 451], "nativ": [421, 446, 463], "natur": [282, 403, 447, 453, 459, 461, 464], "navig": [421, 444, 452], "nbase": 336, "nbsp": 421, "nbviewer": 421, "nd": 444, "ndarrai": [13, 16, 125, 158, 305, 306, 307, 340, 349, 360, 364, 379, 385, 419, 427, 430, 446, 462], "ne": 424, "nearli": 464, "necessari": [356, 417, 446, 447, 452, 453, 457, 458, 460, 462, 463], "necessarili": [449, 452, 453, 460, 465], "need": [26, 31, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 248, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 326, 355, 356, 402, 403, 404, 407, 412, 415, 417, 419, 421, 424, 427, 429, 440, 441, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 467], "neg": [15, 430, 446, 453], "negat": [6, 45, 441, 446, 465], "neglig": 449, "neither": [8, 248, 348], "neq": 34, "nest": [340, 344, 452, 466], "neural": 465, "neurip": 465, "neutral": 8, "never": [414, 451], "nevertheless": [330, 445], "new": [31, 47, 48, 183, 185, 210, 244, 259, 305, 306, 307, 310, 340, 353, 354, 357, 406, 418, 419, 436, 444, 446, 447, 452, 453, 463, 465, 466], "new_measur": 456, "new_rec": 452, "newli": [444, 447, 455, 465], "next": [31, 401, 417, 419, 424, 425, 430, 436, 440, 441, 444, 450, 451, 452, 459, 461], "nextelements": 421, "ngboost": [282, 407, 446], "ngboostmodel": 422, "ngboostsurrog": [407, 422, 446, 463], "nice": [419, 445], "nicknam": 335, "nintern": 429, "no_duplicates_constraint": 424, "no_tl": 440, "nois": [242, 347, 348, 441, 446, 466], "noise_level": 348, "noise_perc": [242, 246, 462], "noise_ratio": 347, "noise_std": [440, 441], "noise_typ": 348, "noisi": [13, 14, 16, 17, 350, 440, 444, 446, 465], "non": [63, 64, 95, 121, 124, 129, 131, 180, 182, 183, 184, 185, 187, 212, 242, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 324, 326, 330, 347, 385, 386, 393, 394, 395, 398, 399, 424, 440, 444, 446, 449, 451, 453, 455, 456, 460, 461], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 42, 47, 48, 56, 62, 63, 64, 74, 82, 87, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 121, 124, 129, 131, 133, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 161, 162, 163, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 215, 218, 221, 224, 225, 242, 244, 246, 248, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 292, 295, 297, 303, 314, 315, 326, 336, 340, 346, 351, 352, 353, 359, 364, 365, 370, 371, 388, 393, 394, 395, 396, 397, 398, 399, 407, 412, 413, 414, 415, 417, 418, 419, 421, 422, 429, 436, 451, 460, 464, 466], "nonetheless": 465, "nonlinear": [37, 210], "nonpredict": [198, 200, 201, 202, 203, 205, 206, 207], "nonpredictiverecommend": [203, 206, 207, 446], "nonzero": [34, 44, 218, 446], "noqa": [412, 447], "nor": [8, 348, 443], "norecommenderslefterror": [183, 184], "noreturn": [187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 229, 230, 261], "normal": [171, 172, 173, 412, 414, 415, 429, 445, 446, 449, 457, 460], "normaliz": 457, "normalize_input_dtyp": 446, "normalprior": 446, "not_a_param": 422, "notabl": [446, 455, 463], "note": [34, 44, 56, 212, 242, 246, 248, 259, 260, 340, 346, 347, 348, 402, 403, 404, 407, 413, 417, 421, 422, 424, 429, 433, 434, 436, 437, 438, 443, 444, 452, 453, 454, 455, 457, 459, 460, 461, 462, 463, 465, 466], "notebook": 421, "noteworthi": 452, "noth": [15, 31, 34, 42, 44, 45, 50, 85, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 185, 187, 193, 195, 200, 201, 202, 203, 206, 210, 212, 218, 251, 264, 278, 282, 284, 295, 297, 303, 370, 371, 449, 458], "notic": [417, 447, 449, 461, 463], "notimplementederror": [38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 125, 156, 225, 229, 230, 248, 251, 253, 255, 259, 260, 264, 278, 280, 282, 284], "notwithstand": 449, "now": [401, 402, 403, 404, 406, 407, 412, 414, 417, 418, 419, 424, 425, 427, 429, 430, 432, 436, 437, 440, 441, 443, 444, 446, 465, 467], "np": [125, 340, 409, 410, 412, 413, 414, 415, 419, 421, 422, 424, 425, 427, 430, 432, 433, 434, 436, 440, 441, 451, 453, 458, 462, 467], "nrecommend": [406, 407, 429, 433, 434], "nu": 108, "num": [354, 368], "num_disc_1": [429, 452], "num_disc_2": 429, "num_experi": [242, 401, 402, 403, 404, 418, 440, 441], "num_fantasi": 10, "num_parameter_1": 415, "num_parameter_2": 415, "num_parameter_3": 415, "num_parameter_4": 415, "num_parameter_5": 415, "num_parameter_6": 415, "num_sampl": 113, "num_valu": 460, "number": [10, 15, 21, 31, 44, 113, 121, 124, 129, 131, 154, 177, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 242, 246, 248, 251, 340, 350, 359, 364, 368, 380, 385, 386, 402, 403, 404, 409, 410, 412, 413, 414, 415, 419, 424, 427, 433, 440, 441, 444, 445, 446, 450, 452, 453, 457, 458, 460, 461, 462, 467], "numer": [13, 16, 31, 34, 35, 36, 37, 38, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 86, 136, 137, 138, 140, 141, 143, 150, 151, 154, 158, 210, 218, 244, 303, 347, 348, 355, 386, 398, 399, 401, 406, 409, 424, 425, 444, 446, 453, 454, 456, 457, 458, 460, 462, 464], "numerical_measurements_must_be_within_toler": [31, 398, 446, 452], "numerical_onli": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58], "numericalcontinuousparamet": [45, 62, 156, 210, 401, 409, 410, 425, 430, 432, 434, 441, 460, 462, 466], "numericaldiscreteparamet": [218, 402, 403, 404, 406, 407, 409, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 429, 433, 434, 436, 437, 438, 440, 441, 444, 460, 461, 462, 466, 467], "numericaltarget": [244, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 418, 419, 421, 422, 429, 430, 433, 434, 436, 437, 438, 440, 441, 444, 446, 457, 461, 462, 466], "numericcontinu": 434, "numparam1": 415, "numparam2": 415, "numparam3": 415, "numparam4": 415, "numparam5": 415, "numparam6": 415, "numpi": [158, 340, 349, 360, 364, 374, 376, 409, 410, 412, 413, 414, 415, 419, 421, 422, 424, 425, 427, 430, 432, 433, 434, 436, 440, 441, 446, 451, 453, 462, 467], "nuniqu": 424, "nyou": [433, 434], "o": [340, 401, 402, 403, 404, 406, 407, 410, 412, 413, 414, 415, 418, 419, 422, 424, 427, 430, 440, 441, 444, 453, 454, 458], "o2": [402, 403, 404], "obj": [161, 162, 163, 230], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 96, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 124, 127, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 158, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 217, 218, 219, 220, 228, 230, 231, 234, 236, 251, 253, 255, 256, 258, 260, 264, 267, 278, 280, 282, 284, 291, 295, 297, 303, 313, 316, 324, 326, 340, 348, 355, 356, 358, 361, 364, 369, 370, 371, 388, 397, 401, 406, 417, 418, 419, 421, 422, 427, 430, 432, 434, 437, 438, 445, 446, 447, 449, 453, 455, 456, 459, 460, 462, 463, 464, 466, 467], "objective_json": 461, "oblig": 449, "observ": [240, 251, 253, 255, 260, 264, 278, 280, 282, 284, 427, 462, 464], "obsolet": 446, "obtain": [242, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 403, 419, 427, 430, 441, 444, 446, 452, 456, 457, 461, 465], "oc": [402, 403, 404, 406, 407], "oc1": [402, 403, 404], "occur": [55, 447], "occurr": [451, 453], "octanol": [453, 458], "off": [8, 248, 331, 413, 446, 451, 453, 454, 457, 464], "offer": [326, 419, 424, 427, 433, 443, 444, 445, 449, 450, 453, 455, 458, 459, 461, 462, 463, 465, 467], "offset": [45, 111], "offset_initial_valu": 111, "offset_prior": 111, "often": [425, 427, 445, 450, 453, 455, 456, 458, 461, 467], "oftentim": [461, 462], "oh": [140, 145, 403, 413, 422, 427, 429, 436, 437, 438, 444, 460, 461], "ok": 429, "old": [465, 466], "omit": [13, 16, 193, 195, 246, 326, 417, 444, 460, 461], "onc": [246, 418, 458, 462], "onclick": 421, "one": [13, 16, 21, 31, 62, 64, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 158, 168, 177, 178, 183, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 212, 225, 244, 264, 288, 310, 311, 344, 350, 402, 403, 404, 407, 409, 424, 427, 429, 438, 440, 441, 443, 444, 445, 446, 447, 449, 451, 452, 453, 455, 457, 458, 460, 461, 462, 463, 464, 465], "onehot": 403, "ones": [212, 355, 403, 434, 446, 451, 465], "ongo": [418, 447, 465], "onli": [10, 31, 34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 96, 108, 121, 124, 129, 131, 154, 206, 212, 218, 244, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 326, 327, 330, 340, 344, 346, 355, 357, 364, 385, 386, 402, 407, 412, 413, 418, 419, 421, 422, 424, 433, 434, 441, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 467], "onlin": 427, "onnx": [259, 260, 375, 420, 444, 446, 463], "onnx_input_nam": [260, 421], "onnx_str": [260, 421, 446], "onto": [13, 16, 447], "open": [31, 44, 156, 158, 251, 253, 255, 260, 264, 278, 280, 282, 284, 447], "opentelemetri": 446, "oper": [42, 45, 53, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 349, 373, 409, 410, 414, 415, 424, 425, 445, 446, 451, 453, 454, 455, 456, 459, 461, 466], "operator_convert": 421, "opposit": 453, "optim": [12, 21, 31, 44, 45, 75, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 240, 242, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 346, 403, 405, 406, 409, 410, 418, 419, 424, 427, 429, 434, 446, 448, 450, 453, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466], "optimize_acqf": [45, 195], "optimize_acqf_": 45, "optimize_acqf_discret": 195, "optimize_acqf_mix": 195, "option": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 87, 92, 96, 107, 108, 109, 110, 111, 112, 113, 114, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 242, 246, 248, 278, 282, 284, 295, 297, 303, 326, 336, 340, 346, 351, 352, 353, 404, 407, 421, 422, 427, 445, 446, 447, 450, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 467], "oracl": 462, "orchestr": [447, 452], "order": [212, 218, 418, 427, 443, 444, 446, 447, 452, 453, 458, 461, 465], "ordin": 464, "org": [276, 316, 353, 421, 444, 449], "organ": 447, "origin": [26, 31, 156, 310, 311, 321, 340, 349, 358, 436, 443, 446, 447, 449, 459, 461, 463], "originalhtml": 421, "originalstyl": 421, "originalwidth": 421, "orthogon": 447, "oserror": 445, "other": [52, 115, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 210, 295, 297, 303, 311, 402, 404, 406, 407, 409, 410, 418, 425, 427, 434, 440, 441, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 467], "otherwis": [45, 60, 136, 137, 138, 140, 141, 143, 150, 151, 154, 206, 358, 385, 449, 450, 455, 457, 465], "our": [401, 412, 414, 417, 418, 419, 422, 424, 425, 427, 430, 432, 433, 434, 437, 438, 440, 441, 444, 447, 450, 452, 453, 455, 461, 462], "out": [218, 385, 429, 441, 444, 449, 457, 462, 465], "out_par": 430, "out_y0": 430, "out_y1": 430, "outcom": [177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 403, 444, 451, 458, 464], "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 96, 118, 121, 124, 129, 131, 251, 253, 255, 260, 264, 278, 280, 282, 284, 340, 348, 349, 350, 401, 430, 440, 441, 445, 446, 448, 451, 462, 466], "output_label": 349, "outputscal": 118, "outputscale_initial_valu": 118, "outputscale_prior": 118, "outsid": [31, 156, 184, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 306, 307, 346, 429, 446, 461], "outstand": 449, "over": [31, 34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 210, 246, 424, 443, 446, 450, 452, 454, 455, 465], "overal": [212, 421, 422, 424, 425, 427, 446, 447, 452, 457, 465], "overhead": 454, "overlap": [63, 64, 156, 409, 410, 453], "overrid": [417, 446], "overridden": [417, 447], "overview": [444, 448, 461], "overwritten": 434, "own": [187, 401, 425, 444, 445, 446, 447, 449, 453, 458], "owner": 449, "ownership": 449, "p": [401, 402, 403, 404, 406, 407, 409, 410, 417, 419, 433, 440, 441, 447, 455, 456, 463, 467], "p1": [460, 461, 462], "p1_json": 461, "p1_via_json": 461, "p2": [460, 461, 462], "p2_json": 461, "p2_via_json": 461, "p3c4": [402, 403, 404], "p_cont": 460, "p_disc": 460, "p_g1_amount": 425, "p_g2_amount": 425, "p_g3_amount": 425, "p_i": 34, "pack": 461, "packag": [96, 148, 206, 445, 446, 447, 454, 458, 462, 463, 467], "page": [421, 444, 446, 447, 455], "pair": [310, 430, 444, 458], "pairwis": 340, "pairwise_dist": 340, "pam": [202, 340], "pamclusteringrecommend": 459, "panda": [51, 219, 238, 239, 244, 335, 340, 360, 401, 402, 403, 404, 409, 410, 412, 418, 419, 424, 425, 429, 430, 433, 434, 440, 441, 446, 451, 453, 454, 458, 460, 461, 462], "panic": 443, "paper": [444, 465], "paper_fil": 465, "parallel": [246, 446, 447, 466], "parallel_run": [246, 454], "param": [340, 420, 421, 442], "param1": [460, 462], "param2": [460, 462], "param_1": 451, "param_2": 451, "param_bounds_comp": 446, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 67, 84, 88, 96, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 125, 129, 131, 136, 137, 140, 141, 143, 145, 146, 147, 148, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 214, 217, 218, 219, 220, 223, 224, 225, 236, 240, 242, 244, 246, 248, 251, 253, 255, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 286, 288, 290, 292, 295, 297, 303, 305, 306, 307, 310, 311, 319, 320, 321, 324, 326, 329, 330, 331, 334, 335, 336, 340, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 368, 370, 371, 372, 377, 378, 379, 381, 382, 385, 386, 388, 397, 398, 399, 401, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 427, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 444, 446, 447, 453, 454, 455, 457, 461, 462, 463, 465, 466], "parameter": [168, 169, 170, 171, 172, 173, 174], "parameter_json": 461, "parameter_nam": [210, 212, 218, 434], "parameter_names_in_cardinality_constraint": 210, "parameterencod": [137, 145, 146, 148, 151], "parametr": 453, "paramnam": 421, "paramprefix": 421, "parent": 447, "parentel": 421, "pareto": [12, 129, 428, 442, 444, 446, 457], "paretoobject": [430, 444, 446, 451, 456, 466], "park": 340, "pars": [366, 446], "parser": 446, "part": [15, 26, 31, 40, 72, 188, 210, 212, 218, 346, 399, 422, 434, 437, 438, 440, 441, 446, 447, 449, 450, 451, 452, 453, 458, 459, 460, 461, 466, 467], "parti": [338, 449, 462], "partial": [26, 418, 444, 446, 466], "particl": 465, "particular": [31, 218, 240, 417, 430, 434, 443, 444, 445, 447, 449, 452, 457, 458, 460, 461, 462], "particularli": [326, 452], "partit": [202, 246, 248, 446, 459, 462], "partitionexplain": [94, 97], "pass": [31, 38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 70, 96, 154, 200, 201, 202, 203, 212, 218, 230, 264, 278, 282, 284, 340, 350, 356, 424, 436, 441, 446, 447, 451, 455, 456, 457, 458, 461], "passthrough": [28, 122, 214, 268, 372], "past": 421, "patch": [418, 446], "patent": 449, "path": [87, 403, 424, 446, 447, 454, 467], "pattern": [148, 447, 465], "patternfingerprint": 148, "pd": [31, 193, 195, 244, 258, 310, 311, 354, 401, 402, 403, 404, 409, 410, 412, 418, 419, 424, 425, 429, 430, 433, 434, 440, 441, 446, 451, 453, 455, 458, 460, 461, 462], "pdf": 465, "peek": 461, "pend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 444, 446, 466], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 446, 451, 452], "per": [242, 258, 402, 403, 404, 407, 424, 429, 433, 440, 441, 446, 458, 460, 462], "percent": [242, 449], "percentag": [195, 348, 407, 412, 413, 414, 415, 424, 429, 436, 441, 459], "perf_count": 417, "perfectli": 461, "perform": [195, 242, 340, 355, 403, 412, 413, 414, 415, 419, 424, 437, 440, 441, 443, 444, 446, 447, 449, 450, 451, 452, 454, 456, 458, 459, 462, 463, 465, 466], "period": 109, "period_length_initial_valu": 109, "period_length_prior": 109, "periodickernel": 446, "perm_inv_constraint": 424, "perman": [444, 466], "permiss": [444, 449], "permut": [52, 55, 56, 311, 446, 453], "permutation_invari": 52, "permutationexplain": [94, 97], "perpetu": 449, "persist": [446, 448, 452, 454, 461, 463], "perspect": 461, "pertain": 449, "pharmacophor": 148, "pharmacophorefingerprint": 148, "phase": [185, 425], "phaseagent1": 425, "phaseagent2": 425, "phcpho": [402, 403, 404, 406, 407], "phenomenon": 452, "philosophi": 461, "physic": [456, 462], "physiochemicalproperti": 148, "physiochemicalpropertiesfingerprint": 148, "pi": [7, 407, 418, 419], "pi_max": 419, "pi_per_iter": 419, "pi_required_fract": 418, "pi_threshold": 418, "pickl": 446, "pictur": 444, "piec": [427, 444, 452, 453], "piecewis": 110, "piecewisepolynomialkernel": 446, "pin": [26, 446], "pin_discret": 26, "pinned_part": 26, "pip": [444, 446, 447, 453, 454, 456, 467], "pipelin": [340, 440, 441, 446, 447], "pival": [402, 403, 404, 406, 407], "pl": [38, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58], "place": [13, 16, 34, 244, 346, 347, 348, 421, 422, 424, 427, 445, 446, 447, 449, 452, 455, 458, 461, 465], "placehold": 313, "plai": [452, 456, 464], "plain": 268, "plainkernelfactori": [103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 264], "plan": [259, 444, 455, 458], "platt": 465, "pleas": [340, 421, 422, 444, 447, 450, 456, 459], "plenti": 456, "plot": [96, 98, 242, 402, 404, 430, 441, 446, 463, 465, 466], "plot_abegin_convert_pipelin": 375, "plot_ebegin_float_doubl": 375, "plot_kmedoids_digit": 340, "plot_typ": 96, "plt": [402, 404, 419, 430], "plu": [244, 444, 447], "plugin": 446, "pl\u00f6tz": 448, "pm": [5, 407], "png": [402, 404], "po16": 458, "poetri": 446, "point": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 30, 31, 96, 151, 156, 177, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 205, 206, 207, 210, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 340, 355, 374, 375, 383, 384, 385, 386, 390, 402, 406, 407, 418, 425, 430, 433, 434, 440, 441, 443, 444, 446, 448, 450, 451, 452, 455, 456, 457, 459, 460, 466, 467], "points_per_dim": [419, 433, 434, 440, 441], "polar": [38, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 220, 340, 444, 446, 448, 466, 467], "poli": 419, "polici": 427, "polycollect": 419, "polym": 458, "polynomi": [110, 111], "polynomialkernel": 446, "polytop": 446, "popul": 424, "popular": [456, 458, 463], "posit": [13, 16, 96, 326, 385, 446, 453, 456, 457], "possibl": [31, 44, 157, 210, 218, 219, 220, 240, 326, 340, 346, 404, 418, 419, 424, 429, 444, 446, 449, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 464, 465, 467], "possibli": [446, 451, 452], "post": [457, 458, 466], "post_hook": [326, 417, 418, 419], "posterior": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 193, 195, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 287, 407, 446, 450, 463], "posterior_mean": [251, 427], "posterior_mod": 251, "posterior_stat": [31, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 446, 452], "posteriorlist": 258, "posteriorstandarddevi": [427, 446, 450], "postprocess": 335, "potassium": [402, 403, 404, 406, 407], "potenti": [212, 444, 445, 446, 447, 452, 453, 456, 457, 460, 467], "power": [111, 449, 453, 459], "pp": 340, "pph3": [402, 403, 404], "pr": [446, 447], "practic": [450, 456, 459], "pre": [157, 183, 267, 385, 420, 445, 446, 447], "pre_hook": [326, 417], "preced": 454, "precis": [56, 183, 210, 359, 375, 376, 391, 446, 466], "precomput": [143, 340], "predefin": [452, 459], "predict": [31, 80, 203, 251, 253, 255, 260, 264, 278, 280, 282, 284, 340, 444, 446, 450, 451, 457, 462, 463, 465, 466], "predictor": 286, "prefer": [31, 449, 455, 457, 461], "prefix": [336, 421], "preliminari": 465, "prepar": [419, 447, 449, 467], "preprocess": 446, "presenc": [195, 445, 446], "present": [31, 71, 96, 121, 124, 129, 131, 212, 310, 311, 326, 340, 406, 427, 446, 453, 462, 467], "preset": [264, 271, 274, 276, 446], "pressur": [414, 421, 422, 436, 437, 438, 444, 453], "pretrain": [260, 420, 442], "pretti": 359, "pretty_print_df": [424, 446], "prevent": [156, 229, 230, 326, 445, 446, 447], "previou": [183, 418, 419, 446, 452, 465], "previous": [31, 402, 403, 404, 406, 414, 451, 452], "price": 458, "primari": 452, "primarili": 450, "principl": [424, 427, 463], "print": [244, 344, 359, 402, 403, 404, 406, 407, 409, 410, 414, 417, 418, 421, 422, 424, 425, 427, 432, 433, 434, 436, 437, 438, 444, 446, 460, 467], "print_parameter_names_hook": 417, "printer_inst": 417, "prior": [107, 108, 109, 110, 111, 112, 113, 114, 118, 168, 169, 170, 171, 172, 173, 174, 251, 274, 415, 444, 445, 446], "priori": [453, 461, 465], "privat": [446, 448], "probabilist": 450, "probability_of_improv": 419, "probabilityofimprov": [418, 419], "probabl": [7, 19, 21, 407, 416, 418, 442, 446], "problem": [75, 424, 425, 427, 440, 441, 446, 447, 452, 457, 461], "problemat": [330, 445, 458], "proce": [242, 406, 451, 454], "procedur": [450, 465], "proceed": 465, "process": [31, 101, 262, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 354, 385, 407, 417, 424, 427, 440, 441, 446, 447, 450, 451, 452, 453, 454, 455, 457, 458, 461, 465], "prod": 415, "prod_constraint": 415, "prod_i": 457, "produc": [121, 124, 125, 129, 131, 244, 444, 446, 447, 454, 462], "product": [57, 117, 212, 218, 219, 220, 322, 411, 442, 444, 446, 449, 453, 455, 466, 467], "product_paramet": [218, 424, 460], "productkernel": 446, "programmat": 424, "progress": [31, 181, 419, 446, 455], "prohibit": 450, "project": [419, 446], "promin": [447, 449], "promis": [418, 451], "prompt": 454, "proper": 446, "properli": [26, 429, 445, 446, 460], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 127, 129, 131, 136, 137, 138, 140, 141, 143, 145, 146, 148, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 205, 206, 207, 210, 212, 213, 217, 218, 251, 253, 255, 258, 260, 264, 267, 271, 274, 276, 278, 280, 282, 284, 295, 297, 300, 301, 303, 315, 316, 364, 370, 371, 384, 388, 446, 447, 453, 455, 458], "proport": 441, "propos": 452, "protobuf": 446, "protocol": [176, 177, 256, 266, 330, 446], "prototyp": 448, "provid": [13, 15, 16, 31, 45, 96, 100, 125, 143, 154, 157, 177, 183, 184, 187, 188, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 236, 240, 242, 244, 246, 248, 251, 253, 255, 260, 264, 274, 276, 278, 280, 282, 284, 310, 322, 326, 340, 342, 347, 348, 353, 356, 360, 370, 371, 385, 386, 397, 401, 402, 403, 404, 417, 422, 424, 430, 432, 433, 434, 437, 440, 441, 444, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "prune": [12, 13, 14, 16, 17], "prune_baselin": [12, 13, 14, 16, 17], "pstd": [6, 446, 450], "pubchem": 148, "pubchemfingerprint": 148, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 127, 129, 131, 136, 137, 138, 140, 141, 143, 145, 146, 148, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 205, 206, 207, 210, 212, 213, 217, 218, 236, 251, 253, 255, 256, 258, 260, 264, 266, 267, 271, 274, 276, 278, 280, 282, 284, 295, 297, 300, 301, 303, 313, 315, 316, 340, 364, 370, 371, 384, 388, 446, 447], "publicli": 449, "publish": [444, 446], "pull": [427, 446], "punish": 8, "pure": [8, 10, 15, 178, 187, 190, 193, 195, 198, 200, 201, 202, 203, 205, 206, 207, 212, 248, 259, 386, 433, 446, 466], "purerecommend": [180, 182, 183, 184, 185, 187, 193, 198, 446], "purpl": 430, "purpos": [15, 417, 418, 421, 427, 444, 445, 447, 449, 452, 455, 461, 467], "push": [44, 447], "put": [424, 427, 454, 458], "puzzl": 444, "py": [276, 340, 412, 414, 415, 446, 454], "py313": 447, "pyarrow": 446, "pydant": 446, "pydoclint": [446, 447], "pydocstyl": 447, "pylint": 446, "pymatgen": 445, "pypi": [444, 446], "pyplot": [402, 404, 419, 430], "pyproject": 446, "pytest": [446, 447], "python": [30, 316, 327, 403, 422, 437, 438, 444, 445, 446, 447, 452, 453, 454, 461], "python310": 445, "pytorch": 446, "pyupgrad": 446, "q": [110, 286, 287, 407, 451], "qei": [9, 407, 437, 438, 446], "qkg": [10, 446], "qlogei": [11, 407, 446], "qlogexpectedimprov": 407, "qlognehvi": [13, 16], "qlognei": [14, 446], "qlognoisyexpectedhypervolumeimprov": [446, 457], "qlognparego": 446, "qnegintegratedposteriorvari": 450, "qnehvi": 16, "qnei": [17, 446], "qnipv": [15, 446, 450], "qnoisyexpectedhypervolumeimprov": 446, "qpi": [19, 407], "qposteriorstandarddevi": 450, "qpstd": [18, 446, 450, 452], "qsimpleregret": 21, "qsr": [20, 446], "qt": 21, "qthompsonsampl": [427, 446], "quadrat": [114, 401, 430], "qualiti": 447, "quantif": 465, "quantifi": [427, 450, 465], "quantil": [31, 251, 253, 254, 255, 260, 264, 278, 280, 282, 284, 452], "quantiti": [31, 54, 452, 456, 457, 463, 467], "quantum": 143, "qucb": [22, 407, 446, 450], "queri": [178, 188, 240, 242, 244, 430, 444, 452, 455, 462], "queryselectoral": 421, "question": [447, 452, 465], "quick": 451, "quickli": 453, "qupperconfidencebound": 450, "qvarucb": 446, "r": [44, 402, 403, 404, 406, 407], "radial": 112, "radiu": [148, 446, 458], "rais": [13, 15, 16, 31, 38, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 96, 100, 125, 133, 156, 157, 162, 163, 183, 184, 210, 212, 218, 224, 225, 229, 230, 242, 244, 248, 251, 253, 255, 259, 260, 261, 264, 278, 280, 282, 284, 292, 311, 324, 326, 329, 331, 334, 342, 343, 344, 346, 347, 348, 350, 355, 356, 357, 372, 385, 386, 397, 398, 399, 417, 418, 419, 434, 445, 446, 447, 451, 459], "rand": 421, "random": [15, 113, 205, 210, 212, 242, 244, 246, 283, 284, 340, 346, 384, 385, 386, 401, 402, 403, 404, 407, 418, 419, 421, 425, 427, 430, 441, 444, 446, 450, 458, 459, 462, 467], "random_campaign": 401, "random_forest": [284, 407], "random_se": [242, 246, 418, 462], "random_st": 340, "random_tie_break": [206, 385, 446, 454], "randomforestmodel": 422, "randomforestregressor": 284, "randomforestsurrog": [407, 446, 463], "randomli": [195, 207, 385, 401, 403, 430, 450, 456, 459], "randomrecommend": [401, 402, 403, 404, 407, 412, 413, 414, 415, 417, 418, 419, 425, 427, 429, 446, 451, 459], "randomst": 340, "rang": [44, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 295, 346, 347, 401, 409, 410, 412, 413, 414, 415, 419, 424, 427, 429, 432, 433, 434, 441, 444, 446, 453, 460, 461, 462, 464, 467], "rank": 464, "rare": 446, "rastrigin": [409, 410, 433, 434], "rate": [169, 251, 427], "rather": [436, 445, 450, 461], "ration": 114, "ravel": [430, 440, 441], "raw": [195, 461], "rbf": 112, "rbfkernel": 446, "rdf": 148, "rdffingerprint": 148, "rdkit": [148, 412, 414, 415, 446, 453, 458], "rdkit2ddescriptor": [148, 403, 412, 414, 415, 446], "rdkit2ddescriptorsfingerprint": 148, "rdkitfingerprint": 148, "re": [418, 433, 434, 447, 459], "reach": [305, 307, 429], "reactant": [456, 458], "reaction": [403, 406, 444, 453, 456, 458, 465], "reactor": [451, 465], "reactora": 465, "reactorb": 465, "reactorc": 465, "read": [143, 212, 232, 403, 406, 444, 446, 447], "read_csv": [402, 403, 418], "read_excel": 404, "readabl": [217, 359, 368, 436, 446, 448, 449, 461], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 242, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 447, 451], "readm": [446, 447], "reagent": [453, 458], "real": [364, 444, 452, 464], "realist": 462, "realiz": [240, 462], "reason": [42, 200, 201, 202, 203, 403, 433, 446, 447, 449, 450, 451, 453, 454, 458, 462], "reassembl": 461, "rebas": 447, "rec": [412, 413, 414, 415, 429, 451, 452], "rec_finish": 451, "rec_next": 451, "rec_par": 430, "rec_pend": 451, "rec_y0": 430, "rec_y1": 430, "receiv": [449, 461], "recip": 447, "recipi": 449, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 72, 83, 84, 96, 137, 140, 141, 143, 151, 154, 156, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 205, 206, 207, 240, 242, 256, 258, 259, 346, 348, 350, 401, 402, 403, 404, 405, 409, 410, 412, 413, 414, 415, 417, 418, 419, 425, 427, 429, 430, 437, 438, 440, 441, 442, 443, 444, 446, 447, 450, 454, 456, 458, 462, 463, 465, 466, 467], "recommendation_orig": 436, "recommendation_recr": 436, "recommended_arm_idx": 427, "recommender_with_hook": 418, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 96, 180, 182, 183, 184, 185, 190, 193, 195, 256, 258, 417, 419, 443, 446, 451], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371, 452, 461], "record": [31, 465], "recreat": [271, 436, 461], "recreate_model": 422, "recurs": [180, 182, 183, 184, 185, 319, 320], "red": [421, 430], "redesign": 446, "redistribut": 449, "reduc": [154, 419, 427, 440, 441, 447, 453, 455, 458], "reduct": 466, "ref": 444, "refactor": 446, "refer": [13, 16, 240, 276, 325, 340, 346, 355, 375, 402, 403, 404, 407, 409, 410, 412, 413, 414, 415, 417, 419, 421, 422, 424, 429, 433, 434, 436, 445, 446, 452, 456, 457, 458, 459, 460, 461, 462, 463, 465], "referenc": 447, "reference_point": [13, 16], "refin": [418, 444, 446, 452, 455], "reflect": [187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 419, 446, 447, 450, 453, 458], "regard": [34, 40, 409, 410, 447, 449], "regardless": 463, "regim": [444, 446, 456], "region": 158, "regist": [326, 416, 418], "register_custom_architectur": 446, "register_hook": [416, 417, 418, 419, 446], "registr": 446, "regress": 278, "regressor": 421, "regret": [20, 21], "regroup": 446, "regular": [21, 156, 288, 421, 432, 445, 446, 451, 465], "reinstal": 444, "rel": [13, 16, 44, 242, 347, 453, 457], "relat": [54, 121, 124, 126, 129, 131, 144, 212, 231, 299, 309, 434, 440, 441, 443, 446, 447, 452, 453, 465], "relationship": [440, 441, 444, 447, 457, 465], "relative_perc": 348, "relative_threshold": [44, 446, 453], "releas": [444, 446], "relev": [52, 96, 244, 355, 356, 357, 413, 424, 446, 447, 452, 453, 455, 465, 467], "reli": [445, 446, 457], "reliabl": 458, "reloc": 446, "remain": [55, 156, 185, 248, 306, 401, 407, 412, 413, 414, 415, 424, 427, 429, 434, 436, 440, 441, 449, 458, 461, 462], "remain_switch": [185, 446], "remaind": 386, "remind": 446, "remot": 447, "remov": [51, 54, 55, 218, 424, 444, 447, 453, 460, 466], "renam": [403, 440, 441, 446, 447], "render": [96, 421], "reoccur": 465, "reorder": 446, "reorgan": 446, "repeat": [427, 446, 447, 451, 452], "repetit": [246, 407, 418], "rephras": 453, "replac": [421, 433, 434, 446, 447], "replic": [251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 446, 457, 461, 466], "repo": 446, "report": [177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 427, 445], "repositori": [403, 444, 447], "repr": 421, "repres": [13, 16, 38, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 116, 117, 143, 212, 248, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 342, 360, 364, 368, 385, 401, 424, 425, 427, 430, 437, 438, 444, 446, 449, 452, 457, 458, 460, 462, 467], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 217, 218, 236, 251, 253, 255, 256, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 331, 333, 342, 344, 346, 359, 364, 370, 371, 412, 413, 414, 415, 421, 423, 429, 436, 446, 451, 452, 458, 461, 462, 466, 467], "reproduc": [418, 427, 430, 446, 449, 466], "reproduct": 449, "request": [31, 83, 84, 125, 183, 184, 185, 225, 251, 253, 254, 255, 260, 264, 267, 278, 280, 282, 284, 350, 372, 385, 386, 430, 443, 446, 451, 452, 455, 456], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 45, 50, 81, 96, 185, 218, 292, 326, 406, 417, 418, 421, 425, 427, 429, 433, 437, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467], "rerun": 421, "reserv": [444, 447], "reset": [31, 451], "reset_index": [440, 451], "reshap": 430, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 413, 415, 424, 461], "resolv": 335, "resort": [288, 447, 461, 467], "resource_track": 445, "resp": [213, 404, 434], "respect": [31, 195, 213, 242, 246, 310, 346, 424, 425, 446, 447, 452, 453, 455, 456, 457, 461, 462, 463, 464, 467], "respond": 443, "respons": [180, 182, 183, 184, 185, 449, 452, 459], "restart": [183, 195], "restor": 461, "restr": 21, "restrain": 458, "restrict": [212, 218, 240, 246, 248, 412, 425, 446, 455, 462, 465, 466], "result": [10, 13, 16, 31, 154, 156, 218, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 346, 354, 402, 403, 404, 406, 421, 422, 424, 425, 427, 429, 430, 432, 440, 441, 444, 446, 448, 449, 450, 452, 453, 454, 456, 458, 459, 461, 462, 465, 466, 467], "result_baselin": [440, 441], "result_fract": 441, "results_interrupt": 418, "results_uninterrupt": 418, "retain": [449, 453], "retrain": [259, 260, 463], "retriev": [212, 232, 240, 318, 319, 320, 334, 446, 447, 462], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 96, 99, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 125, 129, 131, 133, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 214, 215, 218, 219, 220, 221, 223, 224, 225, 228, 229, 230, 233, 234, 236, 238, 239, 242, 244, 246, 248, 251, 253, 255, 256, 258, 260, 261, 264, 267, 268, 272, 278, 280, 282, 284, 286, 287, 288, 290, 292, 295, 297, 303, 305, 306, 307, 310, 311, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 333, 334, 335, 336, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 370, 371, 372, 377, 378, 379, 385, 386, 388, 393, 394, 395, 396, 397, 398, 399, 401, 412, 418, 419, 421, 424, 427, 430, 440, 446, 452, 453, 462, 463, 467], "return_std": 421, "reus": [185, 446], "reuse_last": 183, "reveal": [419, 425, 441], "review": 447, "revis": [446, 449], "reward": [8, 427], "rework": 446, "rewrit": 446, "rff": 113, "rffkernel": 446, "rh": [45, 47, 48, 409, 410, 425, 453], "right": [45, 174, 355, 364, 402, 404, 413, 427, 444, 445, 447, 449, 453, 455, 457, 458, 464], "right_df": 355, "rihana": [444, 448], "rim": [444, 448], "risk": [8, 445, 449, 452], "roam": 445, "robust": [444, 446, 465], "robustli": 288, "role": [446, 447, 452, 456, 457, 462, 464, 466], "room": [419, 452], "root": [403, 444, 447, 453], "round": [359, 409, 421, 422, 453], "roundtrip": [446, 461], "rout": [340, 461], "routin": 44, "row": [13, 16, 38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 125, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 244, 310, 311, 340, 347, 350, 354, 355, 357, 359, 379, 402, 404, 412, 413, 414, 415, 424, 425, 429, 436, 446, 451, 452, 455, 460, 462], "rowei": 465, "roya": 448, "royalti": 449, "rq": 114, "rqkernel": 446, "rsc": 444, "ruff": [446, 447], "rule": [417, 446], "run": [242, 246, 402, 403, 404, 418, 419, 440, 441, 444, 445, 446, 447, 452, 455, 458, 461, 462, 466, 467], "run_full_initial_data": 402, "run_impute_mod": 404, "runner": [246, 412, 414, 415, 454], "runtim": [375, 445, 451], "runtimeerror": [183, 417], "rv": 427, "s3": 446, "s41586": [276, 353], "safe": [446, 447, 452], "safeti": 326, "sai": 453, "said": 447, "sake": 424, "same": [54, 133, 185, 218, 224, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 321, 397, 407, 418, 421, 422, 424, 427, 430, 436, 445, 446, 453, 454, 455, 461, 462, 463, 465], "sampl": [10, 15, 21, 44, 195, 205, 206, 207, 210, 340, 383, 384, 385, 386, 402, 407, 412, 413, 414, 415, 427, 429, 430, 432, 436, 441, 444, 446, 448, 456, 466], "sample_from_full_factori": [210, 446], "sample_inactive_paramet": 44, "sample_uniform": [210, 430, 432, 446, 462], "sampler": [407, 412, 413, 414, 415, 429, 436], "samples_full_factori": 446, "samples_random": 446, "sampling_algorithm": [384, 450], "sampling_fract": [15, 450], "sampling_method": [15, 450], "sampling_n_point": [15, 450], "sampling_percentag": [195, 459], "satisfi": [40, 41, 42, 218, 409, 410, 424], "save": [402, 404, 421, 446, 462], "savefig": [402, 404, 430], "sca": 430, "scalabl": 454, "scalar": [12, 124, 429, 444, 446, 452, 457, 461], "scale": [118, 170, 171, 172, 173, 174, 210, 212, 218, 340, 388, 429, 430, 440, 446, 450, 457], "scalekernel": 446, "scaler": 446, "scaling_bound": [210, 212, 218], "scatter": [96, 98], "scenario": [248, 401, 402, 403, 404, 418, 424, 440, 441, 451, 453, 457, 465, 466, 467], "scene": [457, 462, 463], "schema": 452, "schembl15068049": [402, 403, 404], "scheme": [446, 453], "scienc": [444, 448], "scientif": [446, 465], "scikit": [148, 340, 444, 446, 448, 458], "scipi": [379, 419, 427, 446], "scm": 446, "scope": 401, "screen": [321, 465], "script": [335, 421, 445, 446, 454, 467], "seaborn": [401, 402, 403, 404, 418, 440, 441], "seamlessli": 461, "search": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 38, 51, 54, 67, 72, 84, 88, 136, 137, 138, 140, 141, 143, 150, 151, 154, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 222, 242, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 355, 356, 401, 404, 406, 408, 411, 412, 413, 414, 415, 417, 418, 419, 427, 429, 431, 436, 441, 446, 448, 451, 452, 453, 454, 455, 456, 459, 461, 462, 466], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 96, 136, 137, 138, 140, 141, 143, 150, 151, 154, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 213, 217, 218, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 401, 403, 406, 417, 418, 419, 421, 422, 424, 425, 427, 430, 432, 436, 437, 438, 440, 442, 444, 446, 452, 453, 454, 455, 456, 458, 460, 461, 462, 467], "searchspace1": 432, "searchspace2": 432, "searchspace3": 432, "searchspace_ful": 455, "searchspace_json": 461, "searchspace_reduc": 455, "searchspacetyp": [187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 212, 407, 412, 413, 414, 415, 418, 419, 429, 436, 460], "secfp": 148, "secfpfingerprint": 148, "second": [354, 377, 379, 421, 422, 429, 430, 438, 440, 453, 456], "section": [444, 446, 447, 449, 461], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 96, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 164, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 217, 218, 242, 246, 248, 251, 253, 255, 256, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 295, 297, 303, 324, 330, 340, 348, 354, 361, 364, 370, 371, 388, 402, 403, 404, 409, 410, 417, 418, 422, 425, 434, 443, 444, 447, 451, 452, 454, 455, 456, 457, 458, 461, 462, 466], "seed": [242, 246, 381, 382, 418, 419, 427, 430, 444, 446, 467], "seek": [429, 457], "seem": [375, 438, 445], "seen": 450, "select": [6, 40, 41, 42, 69, 73, 81, 180, 182, 183, 184, 185, 188, 195, 203, 205, 206, 251, 253, 255, 260, 264, 278, 280, 282, 284, 306, 354, 385, 407, 413, 414, 424, 425, 427, 434, 444, 446, 450, 452, 453, 456, 458, 459, 461, 463], "select_recommend": [180, 182, 183, 184, 185, 446], "selectivity_mean": 452, "selectivity_mod": 452, "selectivity_q_0": 452, "selectivity_std": 452, "self": [326, 340, 343, 393, 394, 395, 396, 417, 418, 419, 427, 447], "sell": 449, "semant": [446, 461], "sens": [56, 129, 326, 330, 354, 453, 458, 463], "sent": 449, "sentinel": [314, 315], "separ": [246, 248, 288, 324, 388, 389, 419, 443, 446, 447, 449, 451, 456, 461], "sequenc": [31, 41, 45, 116, 117, 124, 129, 140, 141, 143, 154, 162, 183, 184, 210, 212, 218, 219, 220, 223, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 310, 311, 326, 327, 336, 343, 349, 355, 356, 361, 452, 457, 459], "sequenti": [182, 183, 184, 185, 195, 407, 412, 413, 414, 415, 429, 436, 446, 459], "sequential_continu": [195, 446, 459], "sequential_greedy_x": 446, "sequentialgreedyrecommend": 446, "sequentialmetarecommend": [184, 459], "sequentialstrategi": 446, "seri": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 40, 41, 42, 51, 137, 140, 141, 143, 151, 154, 193, 195, 295, 297, 303, 412, 424, 446, 453, 455], "serial": [184, 218, 236, 421, 442, 445, 446, 447, 453, 459, 466], "serializ": [444, 459], "serialize_datafram": 461, "serialized_df": 238, "serializetostr": 421, "serialmixin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371, 446], "serv": [248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 355, 440, 441, 452, 453, 458], "servic": 449, "session": [454, 461], "set": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 42, 44, 54, 56, 63, 64, 96, 100, 154, 177, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 242, 246, 271, 340, 346, 353, 354, 381, 382, 402, 403, 404, 405, 407, 412, 414, 417, 422, 423, 424, 425, 427, 429, 434, 443, 444, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 467], "set_box_aspect": 419, "set_dash": 418, "set_output": 340, "set_param": 340, "set_random_se": [419, 427, 430, 467], "set_size_inch": [402, 404], "set_x_pend": 26, "set_xlabel": 419, "set_xtick": 419, "set_xticklabel": 419, "set_ylabel": 419, "set_ylim": 419, "set_zlabel": 419, "setattribut": 421, "setpoint": 151, "settimeout": 421, "setup": [242, 418, 453, 462, 467], "setuptool": 446, "sever": [62, 157, 178, 401, 403, 407, 418, 421, 427, 429, 432, 441, 444, 446, 447, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 467], "sh": 456, "shall": [183, 348, 449, 457], "shan": 448, "shap": [96, 444, 446, 448, 463, 466], "shap_valu": 463, "shape": [21, 210, 217, 301, 305, 307, 340, 385, 430, 446, 460, 467], "shapinsight": [94, 95, 97, 98, 446, 456], "shaplei": 96, "share": [251, 253, 255, 260, 264, 278, 280, 282, 284, 446, 449, 465], "shield": [276, 353, 403, 444, 458], "shift": 440, "shifted_hartmann": 440, "ship": [389, 461], "shm": 445, "short": 447, "shortcut": [218, 460, 461], "shorten": [446, 447], "shot": 465, "should": [31, 44, 52, 96, 154, 185, 246, 300, 310, 311, 346, 348, 352, 353, 359, 363, 364, 365, 377, 412, 414, 418, 421, 424, 425, 434, 438, 444, 446, 447, 451, 452, 453, 456, 460, 462, 463, 465, 467], "show": [96, 402, 403, 404, 406, 407, 412, 413, 414, 421, 422, 424, 427, 434, 436, 437, 438, 440, 441, 453, 456], "showcas": 459, "shown": [418, 427, 441, 446, 452], "shrink": 419, "shutdown": 445, "side": [45, 156, 306, 446], "sigma": [171, 172, 173, 174, 305, 429, 448], "signal": [66, 457], "signatur": [90, 292, 324, 326, 419, 446, 447, 453, 461], "significantli": [218, 427, 440, 441, 453, 454], "silenc": 447, "silent": [446, 453], "similar": [184, 445, 446, 453, 454, 456, 458, 459, 460, 461, 465, 467], "similarli": [430, 458], "simpl": [20, 21, 316, 340, 403, 417, 418, 425, 444, 446, 451, 452, 459, 462, 464, 465], "simpler": [447, 461], "simplest": [460, 463], "simplex": [218, 466], "simplex_paramet": [218, 424, 460], "simpli": [330, 417, 418, 447, 453, 455, 457, 458, 459, 460, 461, 464, 465], "simplic": 326, "simplifi": 447, "simul": [85, 348, 414, 419, 444, 446, 465, 466], "simulate_experi": [246, 248, 462], "simulate_scenario": [248, 401, 402, 403, 404, 418, 440, 441, 446, 454, 462], "simulate_transfer_learn": [440, 462], "simulationresult": 427, "simultan": [457, 463], "sinc": [56, 156, 212, 259, 326, 340, 402, 409, 410, 422, 433, 436, 437, 438, 440, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 465], "singer": 465, "singl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 40, 52, 96, 131, 156, 210, 212, 218, 242, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 295, 297, 303, 344, 364, 376, 385, 391, 402, 403, 404, 413, 418, 424, 429, 440, 441, 444, 446, 452, 453, 454, 455, 456, 457, 458, 460, 463, 465, 466], "single_lin": 344, "single_y0": 430, "single_y1": 430, "singledispatch": 366, "singletargetobject": [31, 295, 297, 303, 402, 403, 404, 406, 407, 412, 413, 414, 415, 418, 421, 422, 436, 437, 438, 444, 446, 463, 466], "site": 445, "situat": [96, 156, 385, 412, 414, 424, 445, 447, 451, 453, 457, 458, 461, 462, 465], "six": [424, 425], "size": [21, 103, 104, 105, 108, 110, 112, 113, 114, 183, 185, 212, 217, 218, 368, 419, 421, 427, 433, 434, 440, 441, 452, 461, 462, 465, 467], "sk": 421, "skeleton": 446, "skfp": 148, "skicit": 446, "skin": 462, "skip": [215, 221, 446, 452], "skl2onnx": 421, "sklearn": [203, 375, 421], "sklearnclusteringrecommend": [200, 201, 202, 446, 451], "slightli": [240, 403, 424, 462], "slot": [423, 427, 442, 446, 453], "slot1_amount": 424, "slot1_label": 424, "slot2_amount": 424, "slot2_label": 424, "slot3_amount": 424, "slot3_label": 424, "slow": [412, 414, 415, 451, 460], "slower": 451, "slowest": 446, "small": [308, 312, 409, 424, 440, 441, 446, 447, 450, 458], "smaller": [31, 427, 452, 465], "smallest": [210, 355, 460], "smart": 444, "smartli": 424, "smile": [154, 333, 335, 336, 444, 458], "smoke": 446, "smoke_test": [401, 402, 403, 404, 410, 412, 413, 415, 418, 419, 427, 430, 440, 441], "smooth": [108, 110, 174], "smoothedboxprior": 446, "smoother": 108, "sn": [401, 402, 403, 404, 418, 440, 441], "snippet": 454, "so": [31, 242, 259, 340, 354, 404, 418, 424, 427, 433, 434, 444, 445, 452, 453, 454, 455, 457, 458, 459, 461, 464], "softwar": [444, 449], "sola": 448, "sole": 449, "solut": [75, 452, 453, 457, 460, 461, 465], "solv": [259, 413, 414, 424, 427, 446], "solv_rdkit2ddesc": 414, "solvent": [402, 403, 404, 406, 407, 412, 413, 414, 415, 418, 422, 424, 425, 437, 438, 444, 453, 458], "solvent1": [424, 425], "solvent2": [424, 425], "solvent3": 424, "solvent4": 424, "solvent5": 424, "solvent8": 424, "solvent9": 424, "solvent_1": 453, "solvent_2": 453, "solvent_3": 453, "solvent_data": 418, "solvent_encoding1": 453, "solvent_encoding2": 453, "solvent_mordred_enc": 453, "solvent_rdkit2dd": [412, 415], "solvent_rdkit_enc": 453, "solvent_smil": 418, "solver": 462, "some": [52, 375, 402, 403, 404, 407, 412, 413, 414, 415, 418, 419, 421, 422, 424, 425, 430, 432, 433, 434, 436, 441, 446, 451, 452, 453, 454, 458, 459, 461, 462, 463, 467], "someth": [88, 438], "sometim": [453, 462], "somewhat": 454, "somewher": 452, "soon": [444, 452, 459], "sophist": [446, 455, 461], "sort": 159, "sourabh": 448, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 99, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 125, 127, 129, 131, 133, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 205, 206, 207, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 228, 229, 230, 232, 233, 234, 236, 238, 239, 242, 244, 246, 248, 251, 253, 255, 256, 258, 260, 261, 264, 266, 267, 268, 271, 272, 274, 276, 278, 280, 282, 284, 286, 287, 288, 290, 292, 295, 297, 300, 301, 303, 305, 306, 307, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 368, 370, 371, 372, 377, 378, 379, 381, 382, 384, 385, 386, 388, 396, 397, 398, 399, 445, 446, 447, 449], "space": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 31, 38, 45, 51, 54, 67, 72, 78, 84, 88, 136, 137, 138, 140, 141, 143, 150, 151, 154, 177, 186, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 221, 222, 242, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 340, 355, 385, 401, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 427, 429, 430, 431, 433, 436, 441, 442, 446, 448, 451, 453, 454, 455, 456, 458, 459, 461, 462, 466], "span": [60, 136, 137, 138, 140, 141, 143, 150, 151, 154, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 417, 427, 432, 456], "spars": 340, "speak": 465, "spec": [215, 221, 233], "special": [185, 444, 445, 449, 450, 455, 465, 467], "specif": [101, 157, 164, 203, 206, 212, 215, 229, 246, 288, 290, 318, 372, 398, 417, 418, 433, 444, 446, 447, 452, 453, 455, 458, 459, 460, 461, 462, 463, 464, 465], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 52, 89, 96, 100, 143, 154, 156, 157, 158, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 233, 242, 244, 246, 256, 305, 306, 307, 310, 325, 334, 340, 346, 349, 355, 356, 372, 386, 403, 407, 409, 421, 422, 427, 429, 440, 444, 445, 446, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465], "speed": [218, 412, 414, 415, 440, 441, 454, 460], "speed_fast": 460, "speed_norm": 460, "speed_slow": 460, "speedup": [446, 465], "spell": 447, "spellcheck": 446, "sphinx": [446, 447], "split": [187, 451], "sporad": 446, "spread": 464, "sqrt": 453, "squar": [340, 427, 430, 453], "squash": 447, "stabil": [446, 454], "stabl": [101, 164], "stage": [452, 453, 461], "stand": 446, "standard": [6, 18, 288, 421, 446, 452, 458], "star": 424, "start": [242, 401, 417, 418, 419, 425, 427, 430, 445, 446, 447, 451, 458, 459, 461, 462, 465], "startup": 446, "stat": [31, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 419, 425, 427, 452], "state": [180, 182, 183, 184, 185, 340, 418, 424, 443, 446, 449, 452, 455, 466], "stateless": [427, 443, 446, 455], "statement": [359, 433, 449], "static": [13, 16, 212, 218, 264, 444, 447, 465], "statist": [31, 251, 253, 254, 255, 260, 264, 278, 280, 282, 284, 441, 446, 466], "statu": 452, "std": [31, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284], "std_threshold": 288, "stem": [445, 465], "step": [215, 221, 242, 424, 427, 443, 444, 447, 452, 457, 461, 463], "sterl": 448, "steven": 403, "still": [157, 346, 418, 427, 451, 453, 454, 456, 458, 463, 465, 467], "stop": [416, 442, 446, 447], "stop_on_pi": 418, "stoppag": 449, "storag": [452, 454, 461], "store": [26, 138, 288, 295, 340, 419, 424, 427, 444, 446, 452, 467], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 87, 88, 96, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 125, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 158, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 193, 195, 200, 201, 202, 203, 210, 212, 217, 218, 234, 236, 246, 248, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 298, 303, 305, 306, 307, 310, 311, 318, 324, 325, 331, 333, 335, 336, 342, 344, 346, 349, 352, 353, 357, 359, 364, 368, 370, 371, 372, 378, 379, 422, 427, 437, 438, 440, 441], "straightforward": [452, 464, 465], "strategi": [15, 195, 212, 240, 401, 427, 446], "stream": [322, 446, 454], "streamingsequentialmetarecommend": [183, 459], "streamingsequentialstrategi": 446, "streamlin": 447, "streamlit": [444, 446], "streibel": 448, "strict": [291, 324], "strictli": [422, 437, 438], "stride": 409, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 153, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 331, 335, 336, 340, 342, 343, 344, 352, 364, 370, 371, 421, 436, 446, 452, 453, 458, 464, 466], "strip": [242, 404], "strong": 446, "strongli": 452, "strtobool": [446, 454], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 232, 444, 445, 446, 447, 448, 452, 458, 461], "studi": [178, 456, 459, 466], "style": [421, 440, 446, 447], "sub": [203, 446, 456, 461], "subclass": [89, 232, 318, 320, 330, 372, 407, 446, 447, 459, 461], "subfold": 454, "subgraph": 458, "subgroup": 425, "subject": 449, "sublicens": 449, "submiss": [446, 449], "submit": [26, 444, 447, 449], "subobject": 340, "subpackag": [446, 447, 462], "subplot": 430, "subselectioncondit": [413, 414, 446, 455, 466], "subsequ": [185, 212, 218, 246, 335, 443, 449, 452, 461, 463], "subset": [31, 121, 124, 129, 131, 154, 212, 321, 356, 385, 452, 453, 455, 458], "subspac": [26, 60, 187, 195, 209, 210, 212, 214, 216, 218, 409, 412, 413, 414, 415, 429, 432, 434, 436, 446, 453, 459, 461, 466, 467], "subspace_continu": 60, "subspace_json": 461, "subspacecontinu": [31, 60, 136, 150, 212, 214, 432, 446, 460], "subspacediscret": [31, 137, 140, 141, 143, 151, 154, 212, 214, 217, 412, 413, 414, 415, 424, 429, 436, 446, 460, 461, 467], "substanc": [148, 154, 334, 403, 406, 412, 414, 415, 425, 446, 453, 456, 458, 465], "substance_12": 453, "substance_3": 453, "substance_43": 453, "substance_data": 446, "substance_encod": 403, "substanceencod": [154, 334, 336, 412, 413, 414, 415, 446, 458], "substanceparamet": [402, 403, 404, 406, 407, 412, 413, 414, 415, 418, 422, 424, 437, 438, 444, 446, 453, 454, 456, 460, 466], "substanti": [154, 467], "substrat": 465, "subtyp": 461, "success": [297, 385, 427, 461], "success_valu": 297, "suffic": 447, "suffici": [340, 418, 460, 461], "suggest": [456, 462, 466], "suit": 447, "suitabl": [203, 218, 242, 331, 340, 447, 450, 452, 458, 462, 463, 465], "sum": [58, 116, 218, 340, 401, 411, 412, 413, 414, 418, 424, 425, 427, 430, 442, 453, 457, 460], "sum_": [453, 457], "sum_constraint": 424, "sum_constraint_1": 415, "sum_constraint_2": 415, "sum_toler": 424, "summar": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 136, 137, 138, 140, 141, 143, 150, 151, 154, 295, 297, 303], "summari": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 136, 137, 138, 140, 141, 143, 150, 151, 154, 295, 297, 303, 446, 447], "superior": 450, "supersed": 449, "suppli": 340, "support": [10, 31, 94, 95, 96, 97, 98, 184, 206, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 375, 407, 412, 413, 414, 415, 418, 419, 421, 424, 429, 436, 444, 446, 447, 448, 449, 453, 456, 458, 459, 460, 462, 463, 466], "supports_batch": 446, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 251, 253, 255, 260, 264, 278, 280, 282, 284, 446, 463], "supports_pending_experi": 446, "supports_transfer_learn": [251, 253, 255, 260, 264, 278, 280, 282, 284, 463], "suppos": 453, "sure": [424, 432, 444, 447], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 73, 77, 96, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 193, 195, 200, 201, 202, 203, 210, 212, 218, 251, 253, 256, 258, 260, 264, 266, 267, 271, 274, 276, 278, 280, 282, 284, 412, 413, 414, 415, 419, 427, 429, 436, 442, 444, 446, 448, 451, 452, 457, 458, 459, 465, 466], "surrogate_model": [193, 195, 407, 419, 421, 422, 427, 437, 438, 446], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 96, 193, 195, 255, 258, 446], "svg": 430, "sw": 413, "swiss": 448, "switch": [52, 181, 184, 185, 288, 407, 412, 413, 414, 415, 427, 429, 436, 444, 446, 453, 459], "switch1": 413, "switch2": 413, "switch2_left": 413, "switch2_right": 413, "switch_1": 453, "switch_2": 453, "switch_aft": [185, 437, 438, 459], "switzerland": 448, "sy": 445, "symmetri": 453, "sync": [446, 447], "syntax": [444, 446], "synthet": [409, 410, 419, 430, 440, 441, 446], "system": [340, 369, 403, 427, 444, 445, 448, 449, 454, 462, 465], "t": [286, 287, 323, 331, 402, 403, 404, 406, 407, 414, 419, 430, 440, 441, 443, 455, 458, 461, 462], "t1": [461, 462], "t2": 461, "t3": 461, "t_1": 457, "t_2": 457, "t_3": 457, "t_i": 457, "tab": 430, "tabl": [359, 421, 446, 452, 453, 456], "tabular": 462, "tag": [444, 446, 461], "tailor": 452, "take": [8, 108, 137, 151, 156, 157, 251, 253, 255, 260, 264, 274, 278, 280, 282, 284, 298, 417, 424, 446, 451, 452, 453, 454, 457, 458, 459, 465], "taken": [183, 418, 446, 452, 455, 457], "tantamount": 450, "target": [12, 13, 16, 31, 78, 96, 121, 122, 124, 128, 129, 130, 131, 133, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 240, 242, 243, 244, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 288, 297, 300, 301, 303, 326, 340, 346, 349, 350, 356, 357, 358, 361, 377, 378, 380, 397, 399, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 418, 419, 421, 422, 427, 433, 434, 436, 437, 438, 440, 441, 442, 444, 446, 451, 452, 456, 461, 462, 463, 466], "target_1": [413, 414, 415, 429, 451, 457, 464], "target_2": [429, 451, 457, 464], "target_3": [429, 451, 457], "target_3a": 464, "target_3b": 464, "target_a": 463, "target_b": 463, "target_cumbest": [401, 440, 441], "target_index": [96, 446, 456], "target_max": 452, "target_transform": 429, "targetmod": [303, 461, 464], "targetnam": 242, "targettransform": [303, 446, 464], "task": [141, 212, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 295, 297, 303, 427, 446, 452, 459, 461, 462, 465], "task_idx": [212, 446], "task_param": [440, 441, 462], "task_paramet": 461, "task_parameter_json": 461, "task_parameter_reconstruct": 461, "taskparamet": [225, 440, 441, 446, 455, 461, 462, 466], "tb": 467, "tbodi": 421, "td": 421, "technic": [218, 451, 462, 465], "techniqu": [203, 459], "technologi": 448, "telemetri": [446, 448], "temp": [412, 414, 448], "temp_c": [402, 403, 404, 418], "temperatur": [402, 404, 406, 407, 412, 414, 417, 421, 422, 436, 453, 458, 460, 465], "temperature_resolut": 412, "temperature_valu": 418, "temporari": [382, 418, 446, 454, 461], "temporarili": [446, 467], "temporary_se": 467, "tempt": 465, "tenac": 446, "tend": 419, "tensor": [26, 45, 251, 286, 287, 349, 360, 364, 388, 390, 440, 446], "term": [111, 240, 418, 427, 447, 449, 452, 456, 460, 461, 462, 465], "termin": [418, 419, 445, 449], "terminologi": 466, "tert": [402, 403, 404, 406, 407], "test": [218, 242, 260, 346, 427, 440, 441, 444, 445, 446, 447, 452, 456, 462, 467], "test_funct": [409, 410, 419, 433, 434, 440, 441], "test_scenario": [402, 404], "testabl": [85, 242], "testfunct": [409, 410, 433, 434], "testfunctionclass": [409, 410, 433, 434], "text": [34, 421, 430, 449, 453, 454, 457], "textcont": 421, "th": [311, 453], "than": [31, 64, 84, 151, 183, 184, 185, 195, 210, 212, 225, 311, 330, 344, 350, 385, 386, 403, 414, 418, 425, 450, 453, 454, 456, 458, 461, 463], "thei": [157, 178, 188, 306, 352, 356, 407, 415, 418, 424, 427, 432, 446, 447, 451, 452, 453, 456, 458, 459, 460, 461, 464, 465, 467], "them": [38, 274, 347, 407, 445, 446, 447, 451, 453, 454, 455, 456, 458, 459, 461, 465], "theme": 446, "theori": 449, "therebi": 218, "therefor": [44, 185, 251, 253, 255, 260, 264, 278, 280, 282, 284, 407, 445, 452, 461, 463, 465], "therein": 446, "thereof": 449, "thf": 453, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 180, 182, 183, 184, 185, 187, 195, 200, 201, 202, 203, 210, 212, 218, 240, 244, 246, 248, 251, 253, 255, 256, 258, 259, 260, 264, 274, 278, 280, 282, 284, 288, 310, 326, 327, 330, 335, 340, 346, 348, 350, 351, 353, 355, 359, 401, 417, 418, 419, 421, 422, 424, 425, 427, 430, 432, 436, 437, 438, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "think": [427, 458], "third": [338, 429, 449, 456, 462], "third_parti": 340, "thompson": [21, 448], "thomson": 21, "those": [62, 157, 185, 187, 240, 385, 407, 445, 449, 451, 453, 462], "though": 465, "three": [403, 424, 425, 429, 430, 444, 452, 453, 456, 457, 459, 460, 465, 466], "threshold": [42, 44, 143, 154, 156, 158, 185, 195, 288, 353, 409, 414, 415, 418, 424, 446, 453, 458], "thresholdcondit": [57, 58, 409, 414, 415, 424, 466], "through": [31, 212, 305, 310, 346, 356, 422, 424, 427, 429, 444, 446, 447, 449, 453, 457, 461, 462, 466], "throughout": 185, "throw": [335, 453], "thrown": [244, 404, 418, 437, 445, 451, 457], "thu": [195, 326, 356, 402, 403, 409, 410, 412, 413, 414, 415, 421, 422, 424, 427, 429, 433, 434, 436, 445, 447, 452, 454, 455, 458, 459, 461, 462, 465, 467], "tick": 419, "tight_layout": 430, "time": [10, 195, 386, 410, 417, 424, 427, 444, 446, 451, 452, 453, 454, 455, 458, 461, 462, 463, 466, 467], "timeout": 446, "timer": 417, "titl": [421, 430, 444, 449], "tl": 440, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 446], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371, 446], "to_factori": [103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118], "to_fram": 401, "to_gpytorch": [103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 166, 168, 169, 170, 171, 172, 173, 174, 446], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371, 421, 422, 436, 446, 452, 461], "to_keep": 354, "to_ndarrai": 364, "to_numpi": [419, 430], "to_object": [295, 297, 303, 401, 409, 410, 419, 427, 430, 433, 434, 440, 441, 457, 462], "to_polar": [40, 41, 42], "to_searchspac": [136, 137, 138, 140, 141, 143, 150, 151, 154, 210, 218, 427, 432, 446, 455], "to_str": 446, "to_subspac": [136, 137, 140, 141, 143, 150, 151, 154, 446], "to_tensor": [364, 421, 446], "to_tupl": [364, 430], "tobia": 448, "togeth": [38, 68, 311, 407, 427, 434, 444, 446, 453], "toggl": [31, 446], "toggle_discrete_candid": [31, 446, 455], "toggleabl": 421, "toggleable__cont": 421, "toggleablecont": 421, "tol": 421, "toler": [31, 42, 151, 218, 398, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 418, 421, 422, 424, 429, 433, 434, 436, 437, 438, 444, 446, 453], "tolist": 409, "toluen": 458, "toml": 446, "too": [409, 462, 465], "tool": [332, 444, 446, 453, 461], "toolbox": 444, "top": [446, 447], "topic": 452, "topolog": 458, "topologicaltors": 148, "topologicaltorsionfingerprint": 148, "torch": [349, 364, 421, 440, 446], "toronto": 448, "tort": 449, "total": [184, 185, 385, 424, 425, 427, 460], "total_bas": 425, "total_phase_ag": 425, "toward": [168, 346, 453], "towel": 443, "tox": [446, 447], "tr": 421, "tracebackexcept": 445, "track": [177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 218, 418, 449, 455], "trade": [8, 449, 457], "trademark": 449, "tradit": [403, 423, 424, 442, 444, 446], "train": [80, 96, 177, 183, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 248, 251, 253, 255, 256, 258, 259, 260, 264, 278, 280, 282, 284, 288, 420, 430, 440, 441, 446, 462], "train_i": 421, "train_x": 421, "training_funct": 441, "trajectori": [240, 401, 418, 427, 452, 462], "transfer": [247, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 407, 412, 413, 414, 415, 429, 436, 440, 442, 444, 446, 449, 458, 463, 466], "transform": [31, 80, 121, 124, 129, 131, 137, 138, 140, 141, 143, 151, 154, 210, 212, 218, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 295, 297, 301, 303, 336, 340, 349, 356, 361, 364, 365, 388, 412, 413, 414, 415, 436, 446, 449, 454, 458, 463, 464], "transform_rep_exp2comp": 446, "transformermixin": 340, "transit": 446, "translat": [38, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 446, 449, 455, 458], "transmiss": 461, "transport": 340, "travers": 446, "treasur": 466, "treat": [154, 158, 251, 253, 255, 260, 264, 278, 280, 282, 284, 403, 444, 453, 458, 464, 467], "tree": 446, "tremend": 403, "trend": 465, "tri": 460, "triangl": 307, "triangular": [301, 307, 429, 464], "tricki": 456, "tricyclohexylphosphin": [402, 403, 404], "trigger": [183, 310, 418, 422, 427, 446, 447, 451, 457, 461], "trim": 421, "trivial": [267, 280, 457, 458, 463], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 96, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 158, 195, 212, 246, 264, 297, 306, 319, 320, 324, 330, 331, 340, 344, 354, 385, 398, 403, 407, 409, 410, 412, 413, 414, 415, 419, 421, 422, 424, 427, 429, 433, 434, 436, 437, 438, 440, 441, 446, 451, 452, 453, 455, 456, 458, 461], "trust": 421, "truth": 331, "truthi": 454, "try": [88, 346, 402, 403, 404, 418, 421, 422, 438, 445, 446, 467], "tune": 444, "tupl": [13, 16, 31, 41, 45, 96, 103, 104, 105, 108, 110, 112, 113, 114, 116, 117, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 159, 210, 212, 217, 218, 287, 310, 317, 324, 327, 343, 346, 360, 364, 368, 388, 446], "turn": [44, 210, 218, 251, 253, 255, 260, 264, 278, 280, 282, 284, 368, 432, 445, 446, 453, 454, 457], "turnaround": 462, "twice": [455, 457], "two": [13, 16, 34, 54, 63, 64, 125, 185, 195, 205, 240, 311, 316, 349, 377, 385, 397, 401, 402, 404, 417, 424, 427, 429, 430, 434, 440, 441, 443, 444, 446, 447, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464], "twofold": 427, "twophasemetarecommend": [402, 404, 407, 412, 413, 414, 415, 418, 419, 421, 422, 427, 429, 434, 436, 437, 438, 444, 446, 459], "twophasestrategi": 446, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 76, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 125, 129, 131, 133, 136, 137, 138, 140, 141, 143, 150, 151, 153, 154, 156, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 213, 214, 215, 218, 219, 220, 221, 223, 224, 225, 228, 229, 230, 232, 233, 234, 236, 238, 239, 242, 244, 246, 248, 251, 253, 254, 255, 256, 258, 260, 261, 264, 267, 268, 272, 278, 280, 282, 284, 286, 287, 288, 290, 291, 292, 295, 297, 298, 303, 305, 306, 307, 310, 311, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 333, 334, 335, 336, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 370, 371, 372, 374, 375, 377, 378, 379, 385, 386, 388, 390, 393, 394, 395, 396, 397, 398, 399, 403, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 425, 427, 429, 436, 437, 438, 444, 446, 447, 449, 450, 453, 456, 457, 458, 459, 460, 463, 465, 466], "typealia": 298, "typeddict": [290, 446], "typeerror": [31, 96, 100, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 326, 346, 347, 372, 386, 398, 399, 418, 419, 422], "typeguard": 323, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 210, 212, 218, 223, 233, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 287, 288, 295, 297, 303, 320, 321, 322, 323, 343, 349, 356, 358, 364, 370, 371, 372], "typic": [15, 326, 344, 403, 444, 446, 451, 452, 456, 458, 461, 467], "typing_extens": 447, "typo": [446, 447], "u": [21, 401, 402, 403, 404, 417, 419, 424, 425, 427, 432, 441, 444, 450, 451, 453, 457], "ucb": [8, 407, 446, 450, 452, 461], "ultim": 447, "ultra": [437, 438], "un": 446, "unabl": 421, "unavail": 446, "unawar": 451, "unbound": [364, 417], "uncaught": 446, "uncertainti": [8, 15, 407, 466], "unchang": [156, 340], "uncharacter": 465, "uncorrel": [353, 465], "undefin": [251, 455], "under": [38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 356, 415, 419, 427, 430, 444, 445, 449, 458], "underflow": 86, "underli": [31, 54, 418, 427, 444, 446, 452, 456, 459, 461], "underscor": 446, "understand": [444, 465], "undesir": [38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 91, 453, 455, 458, 467], "undo": 445, "unequ": 415, "unevenli": 458, "unexpect": [76, 88, 446], "unfilt": 453, "unfinish": 451, "unfortun": 465, "unhandl": 446, "uniform": [210, 251, 347, 348, 446], "uniformli": [205, 385], "uniniti": 330, "uninstal": 87, "unintend": [91, 326, 446, 447], "unintention": 467, "union": [13, 16, 31, 125, 158, 242, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 305, 306, 307, 372, 378, 379, 385, 434, 449, 460], "uniqu": [55, 133, 157, 385, 397, 424, 446, 458], "unit": [136, 137, 138, 140, 141, 143, 150, 151, 154, 217, 295, 297, 303, 368, 370, 446], "unknown": [184, 385, 401, 427, 446, 463, 465], "unlabel": 349, "unless": [444, 447, 449, 454, 458, 461], "unlik": [12, 13, 14, 16, 17, 424, 457, 467], "unlock": 466, "unmaintain": 446, "unmatch": 324, "unmatchedattributeerror": 324, "unmeasur": [242, 404], "unnecessari": [446, 452], "unpromis": [418, 451], "unreach": 446, "unrealist": 462, "unrecogn": 346, "unrestrict": 326, "unsaf": 446, "unspecifi": [315, 446, 461], "unspecifiedtyp": 31, "unstructur": [228, 234, 461], "unstructure_bas": 446, "unstructure_with_typ": 446, "unsupervis": 340, "unsupport": [210, 244, 451], "until": [180, 182, 183, 184, 185, 242, 427, 444, 451, 462], "untouch": 347, "untransform": [31, 463], "unusedobjectwarn": [418, 446, 451], "unveil": 441, "unwant": 38, "up": [31, 218, 242, 244, 401, 402, 403, 404, 405, 412, 414, 417, 419, 423, 424, 425, 430, 434, 440, 441, 444, 445, 446, 450, 453, 454, 457, 467], "updat": [31, 340, 403, 406, 446, 447, 451], "update_measur": [31, 446], "upgrad": 446, "upon": [187, 267, 445, 446, 447, 453, 460, 463, 465], "upper": [8, 22, 158, 174, 212, 218, 305, 306, 307, 364, 407, 419, 429, 430, 440, 441, 446, 453, 464, 467], "upper_bound": [412, 413, 414, 415, 436, 460], "upper_threshold": 158, "upperconfidencebound": [22, 450, 461], "upstream": 447, "urg": 456, "url": [444, 465], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 66, 68, 72, 96, 108, 124, 125, 143, 148, 151, 154, 157, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 210, 212, 218, 219, 220, 232, 233, 242, 244, 246, 251, 253, 255, 260, 261, 264, 278, 280, 282, 284, 291, 301, 313, 326, 327, 335, 336, 340, 346, 348, 349, 355, 366, 374, 375, 385, 390, 401, 409, 410, 416, 417, 418, 419, 420, 423, 424, 425, 432, 436, 437, 438, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 464, 465, 466, 467], "usa": 448, "usabl": [330, 445, 446, 458, 461], "usag": [367, 446, 453, 459, 466], "use_comp_rep": [96, 100, 456], "use_torch": [349, 409, 410, 419, 433, 434, 440, 441], "user": [51, 52, 66, 81, 91, 143, 146, 251, 253, 255, 260, 264, 278, 280, 282, 284, 292, 340, 348, 370, 371, 406, 407, 412, 429, 438, 444, 445, 446, 447, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465], "usernam": 446, "userwarn": 445, "uses_shap_explain": 446, "usort": 446, "usr": 148, "usrcat": 148, "usrcatfingerprint": 148, "usrfingerprint": 148, "usual": [242, 402, 403, 404, 437, 445, 454, 456, 458], "util": [31, 195, 210, 218, 251, 253, 255, 260, 264, 278, 280, 282, 284, 313, 315, 316, 340, 364, 370, 371, 384, 388, 401, 403, 406, 407, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 427, 429, 430, 433, 434, 440, 441, 444, 446, 450, 451, 452, 456, 457, 458, 459, 461, 462, 463, 465, 466], "uv": 446, "v": [444, 465], "val": [331, 440], "val_from_param1": 56, "val_from_param2": 56, "valid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 156, 157, 212, 215, 218, 221, 260, 350, 355, 412, 435, 437, 442, 445, 446, 447, 452, 453, 462], "validate_compat": 260, "validate_config": [31, 438, 446, 452], "validate_parameter_input": 31, "validate_target_input": 31, "valu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 44, 45, 52, 54, 78, 96, 107, 108, 109, 110, 111, 112, 113, 114, 118, 121, 124, 125, 129, 131, 137, 140, 141, 143, 145, 146, 148, 151, 154, 156, 157, 158, 161, 162, 163, 185, 193, 195, 200, 201, 202, 203, 210, 212, 218, 219, 220, 240, 242, 244, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 290, 297, 298, 300, 305, 306, 307, 310, 314, 315, 321, 324, 331, 340, 342, 346, 347, 348, 350, 352, 355, 356, 359, 364, 366, 372, 377, 378, 379, 393, 394, 395, 396, 398, 399, 402, 403, 404, 406, 407, 409, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 427, 429, 430, 433, 434, 436, 437, 438, 440, 441, 444, 446, 447, 450, 451, 453, 454, 455, 456, 457, 464, 465, 466, 467], "valuabl": [459, 462], "valueerror": [13, 15, 16, 31, 44, 62, 63, 64, 96, 100, 125, 133, 156, 157, 162, 163, 210, 212, 218, 224, 242, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 292, 311, 324, 329, 331, 334, 342, 344, 346, 348, 350, 355, 356, 357, 385, 386, 397, 398, 399, 434, 445], "var": [31, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 427, 466], "vari": [31, 218, 403, 454, 457], "variabl": [34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 295, 376, 391, 433, 446, 447, 453, 458, 459, 461, 463], "varianc": [8, 15, 107, 280, 351, 446, 450], "variance_initial_valu": 107, "variance_prior": 107, "variant": [407, 440, 456, 465], "variat": 430, "varieti": [433, 447, 461, 462], "variou": [340, 364, 424, 431, 446, 447, 451, 456, 459, 462], "varucb": 446, "vector": [34, 421, 446, 448, 457], "vendor": 458, "verbal": 449, "verbos": [421, 422, 446], "veri": [412, 414, 429, 451, 454, 456, 458, 463, 467], "verifi": [330, 409, 412, 413, 414, 415, 424, 425, 432, 434, 436, 447], "versa": [440, 465], "versatil": 459, "version": [340, 375, 412, 414, 415, 424, 427, 432, 440, 441, 444, 445, 446, 447, 449, 461, 466], "vert": 419, "via": [12, 15, 21, 30, 31, 44, 96, 185, 195, 206, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 318, 326, 346, 354, 404, 410, 417, 418, 421, 432, 444, 446, 447, 450, 451, 452, 454, 455, 457, 458, 459, 460, 461, 464, 465, 466], "via_init": 461, "via_json": 461, "viabl": [84, 429], "vice": [440, 465], "view": [210, 218, 419, 460], "view_init": 419, "violat": [38, 50, 51, 52, 53, 54, 55, 56, 57, 58, 79, 446], "viridi": 419, "virtual": 447, "visibl": 446, "visual": [403, 440, 441, 456, 464], "vitro": 451, "vivo": 451, "volum": [444, 465], "vsa": 148, "vsafingerprint": 148, "vulner": [446, 447], "w_i": 457, "wa": [15, 69, 70, 73, 77, 78, 87, 91, 157, 185, 251, 253, 255, 260, 264, 278, 280, 282, 284, 340, 342, 346, 350, 386, 403, 444, 445, 446, 447, 449, 453, 454, 456, 458, 461, 465], "wai": [212, 417, 424, 425, 431, 432, 440, 443, 444, 451, 455, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467], "wait": 451, "wall": 10, "want": [51, 407, 412, 424, 427, 434, 441, 444, 446, 447, 452, 453, 454, 455, 456, 458, 459, 461, 463, 464], "warn": [65, 327, 412, 414, 415, 418, 433, 434, 446, 447], "warranti": [444, 449], "watch": 417, "water": [412, 413, 414, 415, 424, 453, 458], "waterfal": [96, 98, 446], "we": [26, 240, 401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 417, 418, 419, 421, 422, 424, 425, 427, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467], "web": 447, "weber": 448, "weight": [124, 125, 379, 429, 457, 461], "weight_kdalton": 458, "welcom": 447, "well": [340, 407, 418, 423, 443, 446, 447, 452, 453, 456, 458, 462], "were": [31, 74, 82, 346, 404, 441, 445, 446, 451, 453, 458, 460], "what": [157, 183, 212, 240, 340, 346, 388, 401, 421, 429, 438, 443, 447, 450, 452, 456, 458, 465, 466], "whatsnew": 316, "when": [13, 16, 31, 44, 52, 88, 151, 156, 158, 183, 184, 185, 193, 195, 212, 246, 251, 253, 255, 260, 261, 264, 278, 280, 282, 284, 292, 314, 315, 324, 326, 330, 340, 344, 346, 349, 386, 412, 413, 415, 417, 422, 424, 425, 427, 429, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "whenev": [26, 183, 346, 461], "where": [13, 16, 21, 26, 34, 38, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 177, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 240, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 310, 346, 385, 402, 403, 404, 407, 412, 414, 424, 427, 444, 445, 446, 447, 449, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465], "wherea": 461, "wherev": [449, 451], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 34, 35, 36, 37, 38, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 100, 136, 137, 138, 140, 141, 143, 150, 151, 154, 195, 210, 218, 251, 253, 255, 260, 264, 278, 280, 282, 284, 348, 357, 364, 424, 446, 449, 452, 455, 464], "which": [13, 15, 16, 31, 40, 41, 42, 44, 91, 96, 121, 124, 129, 131, 157, 158, 177, 178, 180, 182, 183, 184, 185, 187, 190, 193, 195, 198, 200, 201, 202, 203, 206, 207, 212, 218, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 326, 330, 340, 346, 348, 353, 355, 358, 359, 377, 378, 388, 401, 403, 407, 410, 417, 418, 424, 425, 427, 432, 433, 434, 438, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467], "while": [212, 215, 221, 340, 418, 427, 429, 441, 445, 446, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465], "whilst": 346, "whim": 148, "whimfingerprint": 148, "whole": 449, "whom": 449, "whose": [125, 156, 157, 212, 244, 321, 324, 349, 401, 417, 424, 451, 462], "wide": 462, "wider": 464, "width": [359, 421], "wieczorek": 448, "william": 465, "willing": 452, "win": [251, 427], "win_rat": 427, "window": [421, 446, 454], "winerror": 445, "winkel": 444, "wise": 379, "wish": 461, "within": [31, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 340, 398, 432, 446, 449, 453, 454, 458, 463, 465, 466, 467], "without": [184, 440, 441, 444, 446, 449, 451, 452, 453, 454, 458, 462, 465, 467], "wolfgang": 444, "won": 458, "work": [26, 285, 310, 340, 349, 412, 414, 415, 418, 429, 436, 438, 446, 447, 448, 449, 451, 453, 454, 459, 461, 462], "workaround": [445, 446], "workflow": [421, 444, 452, 461, 466], "workload": 447, "world": [444, 452], "worldwid": 449, "worst": [13, 16, 242, 244, 246, 404], "would": [55, 86, 156, 157, 240, 242, 248, 259, 417, 424, 427, 444, 447, 451, 453, 455, 456, 458, 459, 460, 461, 462, 463, 465, 467], "wrap": [103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 228, 264, 268, 286, 287, 326, 444, 446, 457], "wrapper": [1, 25, 246, 248, 260, 327, 440, 441, 444, 459], "write": [444, 445, 449, 461], "writetext": 421, "written": [433, 434, 447, 449], "wrong": [438, 446], "wrongli": 445, "www": [444, 449], "x": [26, 122, 158, 214, 234, 242, 244, 268, 317, 323, 327, 340, 343, 360, 377, 388, 401, 402, 403, 404, 412, 413, 414, 415, 418, 419, 424, 429, 436, 440, 441, 444, 446, 460, 463], "x0": [430, 460], "x0_mesh": 430, "x1": [430, 460], "x1_mesh": 430, "x2": 460, "x_": [401, 409, 410, 432, 433, 434], "x_1": [409, 410, 432, 433, 434, 453], "x_2": [409, 410, 432, 433, 434, 453], "x_3": [409, 410, 432, 433, 434, 453], "x_4": [409, 410, 432, 433, 434], "x_5": 434, "x_6": 434, "x_i": 453, "x_new": 340, "x_pend": 26, "xlabel": 430, "xlsx": [402, 403, 404], "xpho": [402, 403, 404], "xxxx": 445, "xylen": [402, 403, 404, 406, 407], "y": [276, 331, 340, 353, 377, 401, 402, 403, 404, 418, 419, 421, 424, 440, 441, 444, 465], "y0": 430, "y0_mesh": 430, "y1": 430, "y1_mesh": 430, "ye": 331, "year": [444, 465], "yet": [26, 446, 451, 459], "yield": [6, 108, 254, 402, 403, 404, 406, 407, 412, 418, 421, 422, 424, 434, 436, 437, 438, 444, 446, 450, 456, 457, 461], "yield_cumbest": [402, 403, 404, 418], "yield_mean": 452, "yield_mod": 452, "yield_q_0": 452, "yield_std": 452, "ylabel": 430, "yml": 446, "you": [31, 51, 403, 407, 409, 417, 422, 424, 427, 433, 434, 437, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "your": [403, 417, 424, 427, 434, 443, 444, 445, 446, 447, 449, 452, 453, 454, 455, 456, 458, 461, 462, 463, 464, 465, 466, 467], "your_branch_nam": 447, "yourself": 427, "z": [419, 444], "zdir": 419, "zero": [44, 62, 64, 156, 158, 168, 340, 351, 424, 427, 453, 465], "zip": [418, 419], "\u00b5fmt": 446, "\u0161o\u0161i\u0107": [444, 448]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.IncompleteMeasurementsError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InputDataTypeWarning", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoMeasurementsError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSInitialization", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.add_type", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.make_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_with_type", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.make_dict_validator", "baybe.surrogates.validation.type_validation_converter", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.clustering_algorithms", "baybe.utils.clustering_algorithms.third_party", "baybe.utils.clustering_algorithms.third_party.kmedoids", "KMedoids", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.conversion.to_string", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.handle_missing_values", "baybe.utils.dataframe.normalize_input_dtypes", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.metadata", "MeasurableMetadata", "Metadata", "baybe.utils.metadata.to_metadata", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_object_names", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 447, "0": 446, "01": 446, "02": 446, "03": 446, "04": 446, "05": 446, "06": 446, "07": 446, "08": 446, "09": 446, "1": 446, "10": 446, "11": 446, "12": 446, "13": 446, "14": 446, "15": 446, "16": 446, "17": 446, "19": 446, "2": 446, "2022": 446, "2023": 446, "2024": 446, "2025": 446, "21": 446, "23": 446, "24": 446, "27": 446, "28": 446, "29": 446, "3": 446, "31": 446, "4": 446, "5": 446, "6": 446, "7": 446, "8": 446, "9": 446, "A": 444, "For": 458, "On": 456, "The": [427, 437, 444, 455, 461, 462, 465], "abbrevi": 461, "acqf": 2, "acquisit": [1, 2, 23, 25, 27, 28, 29, 407, 451, 452], "acquisitionfunct": 24, "action": 465, "activ": [450, 458], "activate_paramet": 156, "ad": [406, 446, 451, 452, 465, 467], "add_fake_measur": 346, "add_noise_to_perturb_degenerate_row": 347, "add_parameter_nois": 348, "add_typ": 228, "addendum": 429, "addit": 424, "additivekernel": 116, "advanc": [444, 463], "altern": 461, "amount": 424, "an": 427, "appli": 455, "arm": [426, 427], "arm64": 445, "arrai": 462, "arrays_to_datafram": 349, "assembli": 461, "asynchron": 451, "attr": 447, "augment": [309, 310, 311], "auto": 463, "automat": 461, "avail": [407, 463], "avx": 445, "back": 444, "backtest": [400, 440], "backward": 466, "bandit": [250, 426, 427], "base": [23, 33, 102, 120, 122, 135, 165, 176, 179, 189, 192, 197, 252, 254, 294, 402, 403, 404, 409, 410, 424, 425, 434, 455, 462], "basesequentialmetarecommend": 182, "basic": [106, 167, 312, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 405, 406, 452, 454, 456, 461], "basickernel": 103, "batch": 452, "batchify_ensemble_predictor": 286, "batchify_mean_var_predict": 287, "batteri": 444, "bayb": [0, 1, 2, 23, 25, 27, 28, 29, 30, 32, 33, 39, 43, 46, 47, 48, 49, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 106, 115, 119, 120, 122, 123, 125, 126, 128, 130, 132, 133, 134, 135, 139, 142, 144, 149, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 175, 176, 178, 179, 181, 186, 188, 189, 191, 192, 194, 196, 197, 199, 204, 208, 209, 211, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 257, 259, 261, 262, 263, 265, 268, 269, 270, 272, 273, 275, 277, 279, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 406, 444, 447], "bayesian": [191, 192, 194, 444, 459], "bayesianlinearsurrog": 278, "bayesianrecommend": 193, "bell_transform": 305, "bernoulli": 427, "betabernoullimultiarmedbanditsurrog": 251, "betaprior": 168, "binari": [296, 298], "binarytarget": 297, "black": [401, 427], "block_deserialization_hook": 229, "block_serialization_hook": 230, "bo": 456, "boolean": [328, 329, 330, 331], "both": 436, "botorch": [194, 433], "botorchrecommend": 195, "bound": [417, 457, 460], "box": [401, 427], "break": 446, "build": [427, 460], "bytes_to_human_read": 368, "cach": [452, 454], "call": 455, "callabl": [409, 410, 434, 462], "campaign": [30, 31, 401, 402, 403, 404, 407, 409, 410, 412, 413, 415, 418, 421, 422, 429, 430, 433, 434, 436, 437, 452], "candid": [452, 455], "cardinalityconstraint": 34, "case": 427, "cast": 457, "catch_constant_target": 288, "categor": 139, "categoricalencod": 145, "categoricalparamet": [140, 458], "caution": 455, "challeng": 453, "chang": 446, "changelog": 446, "check_if_in": 329, "chemic": 444, "chemistri": [332, 333, 334, 335, 336], "choicevalu": 298, "citat": 444, "class": 447, "classproperti": 316, "clone": 444, "closer_el": 377, "closest_el": 378, "cluster": [199, 459], "clustering_algorithm": [337, 338, 339], "code": 447, "columntransform": 388, "compar": 436, "compat": 466, "compon": 417, "composit": [115, 257, 463], "compositekernel": 104, "compositesurrog": 258, "comput": [453, 456], "condit": [39, 40, 453], "config": [437, 438, 452], "configur": [421, 422, 437, 455, 457, 461], "constraint": [32, 33, 35, 39, 43, 46, 47, 48, 49, 59, 60, 61, 62, 63, 64, 408, 409, 410, 411, 412, 413, 414, 415, 424, 425, 453, 455, 460, 467], "construct": [402, 403, 404, 409, 410, 424, 433, 434, 457, 460], "constructor": [460, 461], "continu": [43, 209, 408, 410, 424, 432, 450, 453, 458, 460, 465, 467], "continuouscardinalityconstraint": [44, 453], "continuousconstraint": 36, "continuouslinearconstraint": [45, 453], "continuouslinearequalityconstraint": 47, "continuouslinearinequalityconstraint": 48, "continuousnonlinearconstraint": 37, "continuousparamet": 136, "contribut": 447, "contributor": 448, "control": [452, 455], "conveni": 457, "convent": 447, "convers": [341, 342, 343, 344, 457, 461], "convert": [231, 421], "convert_acqf": 28, "convert_bound": 365, "convert_to_float": 317, "copi": 461, "core": [211, 214, 215, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 263, 270, 272], "cpu": 445, "creat": [401, 402, 403, 404, 407, 409, 410, 412, 413, 414, 415, 421, 422, 429, 432, 433, 436, 437, 440, 441, 452, 460], "create_fake_input": 350, "creation": [402, 403, 404, 424, 425, 452, 467], "current": 463, "custom": [142, 259, 261, 401, 412, 416, 417, 420, 421, 422, 463], "customdiscreteparamet": [143, 458], "customencod": 146, "customonnxsurrog": 260, "data": [402, 403, 404, 460, 465], "datafram": [345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 409, 410, 434, 460, 461, 462], "de": [436, 453, 461], "default": [273, 460, 461], "defaultkernelfactori": 274, "defin": [401, 409, 410, 417, 418, 419, 429, 430, 433, 434, 438, 440, 441, 444], "definit": 418, "depend": [413, 444, 458], "deprec": [46, 47, 48, 446, 466], "deprecationerror": 66, "descript": 429, "deseri": 461, "deserialize_datafram": 238, "design": [444, 447], "desir": [123, 125, 452], "desirabilityobject": [124, 457], "develop": 447, "df_apply_dependency_augment": 310, "df_apply_permutation_augment": 311, "df_drop_single_value_column": 351, "df_drop_string_column": 352, "df_uncorrelated_featur": 353, "dictionari": [437, 438], "differ": 407, "dimens": 434, "discret": [49, 216, 219, 220, 221, 411, 412, 413, 414, 424, 433, 452, 453, 458, 460], "discretecardinalityconstraint": [50, 453], "discreteconstraint": 38, "discretecustomconstraint": [51, 453], "discretedependenciesconstraint": [52, 453], "discreteexcludeconstraint": [53, 453], "discretelinkedparametersconstraint": [54, 453], "discretenolabelduplicatesconstraint": [55, 453], "discreteparamet": 137, "discretepermutationinvarianceconstraint": [56, 453], "discreteproductconstraint": [57, 453], "discretesamplingmethod": 384, "discretesumconstraint": [58, 453], "discuss": 427, "disk": 454, "do": 462, "docstr": 447, "document": 422, "domin": 457, "dtypefloatnumpi": 374, "dtypefloatonnx": 375, "dtypefloattorch": 390, "dummi": 313, "duplic": 424, "dure": 467, "dynam": 455, "edbo": 275, "edbokernelfactori": 276, "effici": [453, 467], "emptysearchspaceerror": 67, "encod": 458, "end": 444, "enum": [126, 144, 299], "environ": 454, "equival": 461, "estim": 467, "exampl": [402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 421, 422, 429, 433, 434, 436, 437, 438, 442, 444, 456], "except": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "exceptiongroup": 445, "exclud": 455, "exclus": [414, 415, 455], "expect": 465, "expectedimprov": 3, "experi": [412, 413, 414, 415, 421, 422, 429, 436, 444, 451, 462], "experiment": [452, 454, 456], "expir": 446, "explain": [94, 456], "explicit": 460, "extend": 447, "extract": 463, "fake": 467, "faq": 443, "farthest_point_sampl": 385, "featur": 454, "field": 461, "file": [437, 438], "filter_df": 354, "find_subclass": 318, "finite_float": 393, "fix": [445, 446], "float": 454, "fp": 454, "fpsiniti": 205, "fpsrecommend": 206, "fraction_to_float": 342, "from": [437, 444, 446, 452, 460, 461], "full": [402, 403, 404, 460], "function": [401, 402, 403, 404, 407, 409, 410, 418, 429, 433, 434, 447, 451, 452], "further": 452, "fuzzy_row_match": 355, "gammaprior": 169, "gaussian_process": [262, 263, 265, 268, 269, 270, 272, 273, 275], "gaussianmixtureclusteringrecommend": 200, "gaussianprocesspreset": 271, "gaussianprocesssurrog": 264, "gener": [440, 441, 447, 459], "geom_mean": 379, "get": [406, 452, 455], "get_baseclass": 319, "get_canonical_smil": 333, "get_fingerprint_class": 334, "get_parameters_from_datafram": 157, "get_subclass": 320, "get_transform_object": 356, "get_transform_paramet": 223, "github": 444, "global": 450, "group_duplicate_valu": 321, "guid": 466, "halfcauchyprior": 170, "halfnormalprior": 171, "handle_missing_valu": 357, "hilberts_factori": 322, "hook": [416, 417, 418, 419], "hybrid": [409, 434, 453], "imaginari": 427, "implement": [453, 454], "implicit": 457, "import": [401, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 417, 419, 421, 422, 424, 425, 427, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 456], "improv": 419, "includ": 444, "inclus": 402, "incompatibilityerror": 68, "incompatibleacquisitionfunctionerror": 69, "incompatibleargumenterror": 70, "incompatibleexplainererror": 71, "incompatiblesearchspaceerror": 72, "incompatiblesurrogateerror": 73, "incomplet": 404, "incompletemeasurementserror": 74, "incorpor": 415, "independentgaussiansurrog": 253, "index": 444, "indic": 444, "infeasibilityerror": 75, "infiniteintervalerror": 363, "influenc": [453, 467], "inform": [452, 459], "initi": [402, 407], "inputdatatypewarn": 76, "insight": [92, 93, 94, 95, 97, 98, 99, 100, 456], "instal": [444, 445], "instanc": 417, "instead": [421, 422], "instruct": 454, "interpret": 456, "interrupt": 418, "interv": [362, 363, 364, 365, 366], "invalidsurrogatemodelerror": 77, "invalidtargetvalueerror": 78, "invari": 424, "invok": 461, "irrelev": 465, "is_abstract": 330, "is_all_inst": 323, "is_cardinality_fulfil": 60, "is_inact": 158, "is_shap_explain": 99, "issu": [444, 445], "iter": [409, 410, 421, 422, 429], "json": [452, 461], "kernel": [101, 102, 105, 106, 115], "kernel_factori": [265, 268], "kernelfactori": 266, "kmeansclusteringrecommend": 201, "kmedoid": [339, 340], "known": [444, 445], "label": 458, "leak": 445, "learn": [439, 441, 450, 462, 465], "licens": [444, 449], "like": 458, "limit": [451, 453, 456, 463, 464], "linear": [277, 410], "linear_transform": 306, "linearkernel": 107, "link": 422, "local": [444, 450], "logexpectedimprov": 4, "lognormalprior": 172, "look_up_target": 244, "lookup": [243, 244, 402, 403, 404, 409, 410, 418, 434, 440, 441, 462], "loop": [401, 402, 403, 404, 440, 441, 444], "maco": 445, "maintain": [444, 448], "make_base_structure_hook": 232, "make_dict_valid": 290, "make_explainer_for_surrog": 100, "make_gp_from_preset": 272, "mandatori": 457, "manual": [412, 413, 414, 415], "mark": 451, "match": 464, "match_attribut": 324, "maternkernel": 108, "max": 464, "mean": 462, "meanpredictionsurrog": 280, "measur": [406, 421, 422, 452, 467], "measurablemetadata": 370, "mechan": [402, 403, 404, 462], "memori": [367, 368, 467], "memorys": 217, "meta": [178, 179, 181, 455, 459], "metadata": [369, 371, 372], "metarecommend": 180, "method": [417, 447, 450], "min": 464, "minimumcardinalityviolatedwarn": 79, "miss": 462, "mixin": 235, "mixtur": [423, 424, 425], "mode": [429, 464], "model": [407, 421, 422, 424, 425, 427, 453, 456, 463], "modelnottrainederror": 80, "monitor": 419, "monkeypatch": [417, 418, 419], "multi": [426, 427, 428, 429, 456, 457, 463], "multipl": 462, "naiv": [186, 279], "naivehybridspacerecommend": 187, "name": 458, "name_to_smil": 335, "necessari": [402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 421, 422, 429, 433, 434, 436, 437, 438], "nest": 461, "ngboost": 281, "ngboostsurrog": 282, "nois": 467, "nomcacquisitionfunctionerror": 81, "nomeasurementserror": 82, "non": 457, "non_inf_float": 394, "non_nan_float": 395, "non_shap_explain": 95, "none": 462, "nonpredict": [196, 197, 199, 204], "nonpredictiverecommend": 198, "nonstring_to_tupl": 343, "norecommenderslefterror": 83, "normalize_input_dtyp": 358, "normalprior": 173, "notenoughpointslefterror": 84, "nothingtosimulateerror": 85, "numer": [149, 302, 373, 374, 375, 376, 377, 378, 379], "numericalcontinuousparamet": [150, 458], "numericaldiscreteparamet": [151, 458], "numericaltarget": [303, 464], "numericalunderflowerror": 86, "object": [119, 120, 121, 122, 123, 125, 126, 128, 130, 132, 133, 402, 403, 404, 407, 409, 410, 412, 413, 414, 415, 429, 433, 436, 440, 441, 444, 452, 457, 461], "onnx": 421, "optim": [401, 430, 440, 441, 444, 452, 467], "option": [444, 458], "optionalimporterror": 87, "order": [424, 454], "output": [421, 422, 456, 457, 463], "overrid": 447, "packag": 444, "page": 456, "pamclusteringrecommend": 202, "parallel": [452, 454], "paramet": [134, 135, 138, 139, 142, 144, 149, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 402, 403, 404, 407, 422, 424, 425, 452, 456, 458, 460, 467], "parameter_cartesian_prod_panda": 219, "parameter_cartesian_prod_polar": 220, "parameterencod": 147, "pareto": [128, 430], "paretoobject": [129, 457], "partial": [25, 451], "partialacquisitionfunct": 26, "pass": 422, "pend": 451, "perform": [402, 429, 433, 434], "periodickernel": 109, "perman": 455, "permut": 424, "piecewisepolynomialkernel": 110, "plainkernelfactori": 267, "plot": [401, 418, 419, 456], "point": 454, "polar": [445, 453, 454], "polynomialkernel": 111, "posterior": 452, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 254, "pre": 421, "precis": 454, "predict": 452, "preset": [269, 270, 272, 273, 275], "pretrain": 421, "pretty_print_df": 359, "print": [412, 413, 415, 429], "prior": [164, 165, 166, 167], "probabilityofimprov": 7, "probabl": 419, "problem": [401, 418, 430, 445], "product": [415, 460], "productkernel": 117, "pull": 447, "pure": [188, 189, 191, 192, 194, 196, 197, 199, 204, 450, 459], "purerecommend": 190, "pycharm": 445, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedhypervolumeimprov": 13, "qlognoisyexpectedimprov": 14, "qlognparego": 12, "qnegintegratedposteriorvari": 15, "qnoisyexpectedhypervolumeimprov": 16, "qnoisyexpectedimprov": 17, "qposteriorstandarddevi": 18, "qprobabilityofimprov": 19, "qsimpleregret": 20, "qthompsonsampl": 21, "quick": 444, "qupperconfidencebound": 22, "random": [380, 381, 382], "random_forest": 283, "randomforestsurrog": 284, "randomrecommend": 207, "rbfkernel": 112, "recommend": [175, 176, 178, 179, 181, 186, 188, 189, 191, 192, 194, 196, 197, 199, 204, 406, 407, 421, 422, 433, 434, 436, 451, 452, 455, 459], "recommenderprotocol": 177, "reduct": 450, "refers_to": 325, "regist": 417, "register_custom_architectur": 261, "register_hook": 326, "relat": 445, "remov": 446, "replic": 463, "represent": [424, 425, 456, 460], "reproduc": 467, "request": 447, "restrict": 460, "result": [401, 418, 419, 451], "rffkernel": 113, "role": 465, "row": 454, "rqkernel": 114, "run": [401, 409, 410, 427, 454], "sampl": [204, 450, 454, 459], "sample_numerical_df": 386, "sampling_algorithm": [383, 385, 386], "scalar": [125, 127, 463], "scale": 387, "scalekernel": 118, "scenario": [245, 246, 454, 462], "search": [424, 425, 432, 440, 444, 450, 460, 467], "searchspac": [208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 402, 404, 407, 409, 410, 412, 413, 414, 415, 429, 431, 433, 434, 441], "searchspacematchwarn": 88, "searchspacetyp": 213, "see": 465, "select_constructor_hook": 233, "semaphor": 445, "sequenti": [181, 452], "sequentialmetarecommend": 183, "serial": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 435, 436, 452, 461], "serializ": 453, "serialize_datafram": 239, "serialmixin": 236, "set": [401, 418, 419, 430, 432, 440, 441], "set_random_se": 381, "setup": [406, 412, 413, 414, 415, 421, 422, 424, 425, 427, 429, 430, 436], "shap": [93, 94, 95, 97, 98, 99, 100, 456], "shap_explain": 97, "shap_plot": 98, "shapinsight": 96, "signatur": 417, "simplex": [424, 460], "simul": [240, 241, 242, 243, 244, 245, 246, 247, 248, 401, 402, 403, 404, 418, 427, 440, 441, 454, 462], "simulate_experi": 242, "simulate_scenario": 246, "simulate_transfer_learn": 248, "singl": [130, 430, 462], "singletargetobject": [131, 457], "sklearnclusteringrecommend": 203, "slot": [424, 425], "smile": 153, "smiles_to_fingerprint_featur": 336, "smoothedboxprior": 174, "some": [409, 410, 429], "sort_paramet": 159, "space": [424, 425, 432, 434, 440, 444, 450, 452, 460, 467], "span": 424, "stage": 421, "start": 444, "statist": 452, "stop": 418, "str_to_acqf": 29, "strategi": [407, 444], "streamingsequentialmetarecommend": 184, "string": [437, 461], "strtobool": 331, "studi": 463, "sub": 450, "subselectioncondit": [41, 453], "subspac": 460, "subspacecontinu": 210, "subspacediscret": 218, "substanc": [152, 153, 424, 444], "substanceencod": 148, "substanceparamet": [154, 458], "suggest": 445, "suitabl": 407, "sum": 415, "support": [445, 451], "surrog": [249, 250, 252, 254, 255, 257, 259, 261, 262, 263, 265, 268, 269, 270, 272, 273, 275, 277, 279, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 407, 420, 421, 422, 453, 456, 463], "surrogateprotocol": 256, "synchron": 447, "synthet": [433, 434], "tabl": [402, 403, 404, 440, 441, 444], "target": [293, 294, 295, 296, 298, 299, 302, 304, 305, 306, 307, 417, 428, 429, 430, 457, 464, 467], "targetmod": 300, "targettransform": 301, "task": [440, 441], "taskparamet": [141, 458, 465], "technologi": 465, "telemetri": 444, "temporary_se": 382, "terminologi": [424, 461, 462, 465], "test": [409, 410, 433, 434], "theoret": 424, "thi": [402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 415, 429, 433, 434, 456], "third_parti": [338, 339], "thresholdcondit": [42, 453], "through": 465, "to_kernel_factori": 268, "to_metadata": 372, "to_object": 122, "to_searchspac": 214, "to_str": 344, "to_tensor": 360, "to_tupl": 327, "toggl": 455, "toler": 452, "tool": 447, "torch": [389, 390, 391, 445], "tradit": 425, "train": 421, "trajectori": 455, "transfer": [439, 441, 462, 465], "transfer_learn": [247, 248], "transform": [304, 305, 306, 307, 429], "transform_target_column": 361, "treasur": 465, "triangular_transform": 307, "trigger": [417, 419], "two": 438, "twophasemetarecommend": 185, "type": 461, "type_validation_convert": 291, "uncertainti": 450, "unidentifiedsubclasserror": 89, "uninterrupt": 418, "unlock": 465, "unmatchedattributeerror": 90, "unreleas": 446, "unspecifi": 314, "unspecifiedtyp": 315, "unstructure_with_typ": 234, "unsupport": 453, "unusedobjectwarn": 91, "upperconfidencebound": 8, "us": [402, 403, 404, 406, 407, 412, 413, 414, 415, 421, 422, 427, 429, 433, 434, 460, 461, 462, 463], "usag": 456, "use_fallback_constructor_hook": 366, "user": 466, "util": [27, 28, 29, 59, 60, 155, 156, 157, 158, 159, 237, 238, 239, 285, 286, 287, 288, 308, 309, 310, 311, 312, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 467], "v": [417, 424, 430, 445, 452, 455], "valid": [61, 62, 63, 64, 132, 133, 160, 161, 162, 163, 222, 223, 224, 225, 289, 290, 291, 292, 392, 393, 394, 395, 396, 397, 398, 399, 422, 438], "validate_cardinality_constraint_parameter_bound": 62, "validate_cardinality_constraints_are_nonoverlap": 63, "validate_constraint": 64, "validate_custom_architecture_cl": 292, "validate_decorrel": 161, "validate_is_finit": 162, "validate_not_nan": 396, "validate_object_nam": 397, "validate_paramet": 225, "validate_parameter_input": 398, "validate_parameter_nam": 224, "validate_searchspace_from_config": 215, "validate_simplex_subspace_from_config": 221, "validate_target_input": 399, "validate_target_nam": 133, "validate_unique_valu": 163, "valu": [452, 458, 460, 461, 462], "variabl": 454, "varname_numpy_use_single_precis": 376, "varname_torch_use_single_precis": 391, "verif": [412, 413, 414, 415, 424, 425, 438], "verifi": 410, "via": [453, 456], "visual": 430, "we": 462, "what": 462, "window": 445, "within": 460, "without": 445, "workflow": [447, 451], "wrap": [409, 410, 434], "write": 447}})