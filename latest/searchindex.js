Search.setIndex({"alltitles": {"Acquisition function": [[385, "acquisition-function"]], "AcquisitionFunction": [[21, null]], "Active Learning": [[427, null]], "Added": [[423, "added"], [423, "id6"], [423, "id15"], [423, "id19"], [423, "id25"], [423, "id32"], [423, "id41"], [423, "id47"], [423, "id51"], [423, "id58"], [423, "id63"], [423, "id69"], [423, "id75"], [423, "id79"], [423, "id83"], [423, "id87"], [423, "id92"], [423, "id96"], [423, "id99"], [423, "id103"], [423, "id107"], [423, "id111"], [423, "id114"], [423, "id118"], [423, "id122"], [423, "id126"], [423, "id130"], [423, "id136"], [423, "id139"]], "Addendum: Description of transformation functions": [[407, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[444, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[442, null]], "Adding Partial Results": [[428, "adding-partial-results"]], "Adding measurements": [[429, "adding-measurements"]], "AdditiveKernel": [[105, null]], "Advanced Example: Chemical Substances": [[421, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[405, "an-imaginary-use-case"]], "Array-Based Callables": [[439, null]], "Asynchronous Workflows": [[428, null]], "Automatic field conversion": [[438, "automatic-field-conversion"]], "Available Models": [[440, "available-models"]], "Available recommenders suitable for initial recommendation": [[385, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[385, "available-surrogate-models"]], "Backtesting": [[378, null], [417, null]], "BaseSequentialMetaRecommender": [[169, null]], "Basic Instructions": [[431, "basic-instructions"]], "Basic Usage": [[433, "basic-usage"]], "Basic creation": [[429, "basic-creation"]], "Basic example for using BayBE": [[384, null]], "Basic string assembly": [[438, "basic-string-assembly"]], "BasicKernel": [[92, null]], "Basics": [[383, null], [429, "basics"]], "Batch optimization": [[429, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[421, null]], "Bayesian Recommenders": [[436, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[262, null]], "BayesianRecommender": [[180, null]], "Bernoulli Multi Armed Bandit": [[405, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[238, null]], "BetaPrior": [[155, null]], "BinaryTarget": [[280, null]], "BotorchRecommender": [[182, null]], "Bound methods": [[395, "bound-methods"]], "Breaking Changes": [[423, "breaking-changes"], [423, "id24"], [423, "id31"]], "Building from the Product of Parameter Values": [[437, "building-from-the-product-of-parameter-values"], [437, "id2"]], "Building the Model": [[405, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[422, "cpus-without-avx-support-installation-of-polars"]], "Caching of recommendations": [[429, "caching-of-recommendations"]], "Campaign": [[28, null]], "Campaign Stopping": [[396, null]], "Campaigns": [[429, null]], "Candidate Control in Discrete Spaces": [[429, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[432, null]], "CardinalityConstraint": [[31, null]], "CategoricalEncoding": [[134, null]], "CategoricalParameter": [[129, null], [435, "categoricalparameter"]], "Caution": [[432, null]], "Changed": [[423, "changed"], [423, "id2"], [423, "id4"], [423, "id7"], [423, "id10"], [423, "id16"], [423, "id20"], [423, "id26"], [423, "id33"], [423, "id38"], [423, "id42"], [423, "id48"], [423, "id52"], [423, "id55"], [423, "id59"], [423, "id64"], [423, "id70"], [423, "id76"], [423, "id80"], [423, "id84"], [423, "id88"], [423, "id93"], [423, "id97"], [423, "id100"], [423, "id104"], [423, "id108"], [423, "id112"], [423, "id115"], [423, "id119"], [423, "id123"], [423, "id127"], [423, "id131"]], "Changelog": [[423, null]], "Clustering Recommenders": [[436, "clustering-recommenders"]], "Code Design": [[424, "code-design"]], "ColumnTransformer": [[367, null]], "Comparing recommendations in both objects": [[413, "comparing-recommendations-in-both-objects"]], "CompositeKernel": [[93, null]], "Condition": [[37, null]], "Conditions": [[430, "conditions"]], "Constraint": [[32, null]], "Constraint Setup": [[402, "constraint-setup"]], "Constraints": [[430, null]], "Constraints Continuous": [[386, null]], "Constraints Discrete": [[389, null]], "Constraints Setup": [[403, "constraints-setup"]], "Construct the campaign and run some iterations": [[387, "construct-the-campaign-and-run-some-iterations"], [388, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[437, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[380, "constructing-campaigns-for-the-simulation-loop"], [381, "constructing-campaigns-for-the-simulation-loop"], [382, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[437, "constructing-from-a-dataframe"], [437, "id1"], [437, "id3"]], "Constructing hybrid recommenders": [[411, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[410, "constructing-the-campaign-and-performing-a-recommendation"], [411, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[411, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[430, "continuous-constraints"]], "Continuous Parameters": [[435, "continuous-parameters"]], "Continuous Subspaces": [[437, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[41, null]], "ContinuousConstraint": [[33, null]], "ContinuousLinearConstraint": [[42, null], [430, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[34, null]], "ContinuousParameter": [[125, null]], "Contributing to BayBE": [[424, null]], "Contributors": [[425, null], [425, "id1"]], "Convenience construction and implicit conversion": [[434, null]], "Conventions for attrs classes": [[424, "conventions-for-attrs-classes"]], "Convert model to onnx": [[399, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[399, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[400, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[399, "create-campaign"]], "Creating Continuous Search Spaces": [[409, null]], "Creating a Simplex-Bound Discrete Subspace": [[437, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[429, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[414, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[390, "creating-and-printing-the-campaign"], [391, "creating-and-printing-the-campaign"], [393, "creating-and-printing-the-campaign"], [407, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[379, "creating-the-campaigns"]], "Creating the Objective": [[381, "creating-the-objective"]], "Creating the Optimization Objective": [[417, "creating-the-optimization-objective"], [418, "creating-the-optimization-objective"]], "Creating the Search Space": [[417, "creating-the-search-space"]], "Creating the Searchspace": [[418, "creating-the-searchspace"]], "Creating the campaign": [[385, "creating-the-campaign"], [400, "creating-the-campaign"], [413, "creating-the-campaign"]], "Creating the constraint": [[390, "creating-the-constraint"], [392, "creating-the-constraint"]], "Creating the constraints": [[391, "creating-the-constraints"], [393, "creating-the-constraints"]], "Creating the objective": [[407, "creating-the-objective"]], "Creating the recommender object": [[385, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[380, "creating-the-searchspace-and-the-objective"], [382, "creating-the-searchspace-and-the-objective"], [387, "creating-the-searchspace-and-the-objective"], [388, "creating-the-searchspace-and-the-objective"], [390, "creating-the-searchspace-and-the-objective"], [391, "creating-the-searchspace-and-the-objective"], [392, "creating-the-searchspace-and-the-objective"], [393, "creating-the-searchspace-and-the-objective"], [410, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[429, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[440, null]], "Custom Hooks": [[394, null]], "Custom Surrogates": [[398, null]], "CustomDiscreteParameter": [[132, null], [435, "customdiscreteparameter"]], "CustomEncoding": [[135, null]], "CustomONNXSurrogate": [[244, null]], "Dataframe deserialization": [[438, "dataframe-deserialization"]], "DefaultKernelFactory": [[258, null]], "Defining config dictionaries": [[415, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[396, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[397, "defining-the-hook"]], "Defining the Hooks": [[395, "defining-the-hooks"]], "Defining the Optimization Objective": [[421, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[379, "defining-the-optimization-problem"]], "Defining the Search Space": [[421, "defining-the-search-space"]], "Defining the Tasks": [[417, "defining-the-tasks"], [418, "defining-the-tasks"]], "Defining the targets": [[407, "defining-the-targets"]], "Defining the test function": [[387, "defining-the-test-function"], [388, "defining-the-test-function"], [410, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[411, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[423, "deprecations"], [423, "id22"], [423, "id29"], [423, "id36"], [423, "id45"], [423, "id61"], [423, "id67"], [423, "id73"], [423, "id90"]], "Deserialization from configuration strings": [[438, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[117, null], [434, "desirabilityobjective"]], "Developer Tools": [[424, "developer-tools"]], "Discrete Constraints": [[430, "discrete-constraints"]], "Discrete Parameters": [[435, "discrete-parameters"]], "Discrete Subspaces": [[437, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[402, null]], "DiscreteCardinalityConstraint": [[48, null]], "DiscreteConstraint": [[35, null]], "DiscreteCustomConstraint": [[49, null], [430, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[50, null], [430, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[51, null], [430, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[52, null], [430, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[53, null], [430, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[126, null]], "DiscretePermutationInvarianceConstraint": [[54, null], [430, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[55, null]], "DiscreteSamplingMethod": [[363, null]], "DiscreteSumConstraint": [[56, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[430, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[405, "discussion"]], "Disk Caching": [[431, "disk-caching"]], "Dummy": [[301, null]], "Duplicate Substances": [[402, "duplicate-substances"]], "Dynamic Exclusion": [[432, "dynamic-exclusion"]], "EDBOKernelFactory": [[260, null]], "EXPERIMENTAL: Floating Point Precision": [[431, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[444, null]], "Environment Variables": [[431, null]], "Equivalent copies": [[438, null]], "Estimation with Constraints": [[444, null]], "Example Searchspace and objective parameters": [[385, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[387, null]], "Example for creating campaigns from configs": [[414, null]], "Example for custom parameter passing in surrogate models": [[400, null]], "Example for full simulation loop using a table-based lookup mechanism": [[381, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[382, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[380, null]], "Example for linear constraints in a continuous searchspace": [[388, null]], "Example for surrogate model with a custom pretrained model": [[399, null]], "Example for the serialization of a campaign": [[413, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[410, null]], "Example for using custom constraints in discrete searchspaces": [[390, null]], "Example for using dependency constraints in discrete searchspaces": [[391, null]], "Example for using different strategies": [[385, null]], "Example for using exclusion constraints in discrete searchspaces": [[392, null]], "Example for using exclusion constraints incorporating sums and products": [[393, null]], "Example for using synthetic test functions in hybrid spaces": [[411, null]], "Example for using the multi target mode for the objective": [[407, null]], "Example for validation of a config file": [[415, null]], "Examples": [[419, null]], "Examples On This Page": [[433, null]], "Excluding Configurations": [[432, "excluding-configurations"]], "Expectations": [[442, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[399, "experiment-setup"], [400, "experiment-setup"]], "Experiment setup": [[390, "experiment-setup"], [391, "experiment-setup"], [392, "experiment-setup"], [393, "experiment-setup"], [413, "experiment-setup"]], "Experiment setup and creating the searchspace": [[407, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[432, null]], "Experimental Representation Limits": [[433, null]], "Experimental and Computational Representations": [[433, "experimental-and-computational-representations"]], "Experimental feature only!": [[431, null]], "Expired Deprecations (from 0.6.*)": [[423, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[423, "expired-deprecations-from-0-7"]], "Explainers": [[433, "explainers"]], "Extending BayBE\u2019s Functionality": [[424, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[440, "extracting-the-model-for-advanced-study"]], "FAQ": [[420, null]], "FPSRecommender": [[194, null]], "Fixed": [[423, "fixed"], [423, "id8"], [423, "id11"], [423, "id13"], [423, "id17"], [423, "id21"], [423, "id27"], [423, "id35"], [423, "id39"], [423, "id44"], [423, "id49"], [423, "id53"], [423, "id60"], [423, "id65"], [423, "id71"], [423, "id77"], [423, "id85"], [423, "id89"], [423, "id94"], [423, "id101"], [423, "id105"], [423, "id109"], [423, "id116"], [423, "id120"], [423, "id124"], [423, "id128"], [423, "id132"], [423, "id134"], [423, "id137"]], "From GitHub": [[421, "from-github"]], "From Local Clone": [[421, "from-local-clone"]], "From Package Index": [[421, "from-package-index"]], "From the Default Constructor": [[437, "from-the-default-constructor"]], "Further information": [[429, "further-information"]], "GammaPrior": [[156, null]], "GaussianMixtureClusteringRecommender": [[189, null]], "GaussianProcessPreset": [[255, null]], "GaussianProcessSurrogate": [[248, null]], "General Information": [[436, "general-information"]], "General Workflow": [[424, "general-workflow"]], "Generating Lookup Tables": [[417, "generating-lookup-tables"], [418, "generating-lookup-tables"]], "Getting Recommendations": [[432, null]], "Getting a recommendation and adding measurements": [[384, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[429, "getting-recommendations"]], "Global Uncertainty Reduction": [[427, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[157, null]], "HalfNormalPrior": [[158, null]], "Hook instance vs. target instance": [[395, null]], "Hybrid constraints": [[430, null]], "Imports": [[379, "imports"], [395, "imports"], [397, "imports"], [402, "imports"], [403, "imports"], [405, "imports"], [409, "imports"], [417, "imports"], [418, "imports"]], "Inclusion of initial data": [[380, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[240, null]], "Indices and Tables": [[421, "indices-and-tables"]], "Influence of Continuous Parameters": [[444, null]], "Insights": [[433, null]], "Installation Related Issues": [[422, "installation-related-issues"]], "Interval": [[343, null]], "Invoking alternative constructors": [[438, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[399, "iterate-with-recommendations-and-measurements"], [400, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[438, "json-de-serialization"]], "KMeansClusteringRecommender": [[190, null]], "Kernel": [[94, null]], "KernelFactory": [[250, null]], "Known Issues": [[422, null]], "License": [[426, null]], "Limitations": [[441, "limitations"]], "LinearKernel": [[96, null]], "Links for documentation": [[400, "links-for-documentation"]], "Local Uncertainty Reduction": [[427, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[159, null]], "Lookup functionality and data creation": [[380, "lookup-functionality-and-data-creation"], [381, "lookup-functionality-and-data-creation"], [382, "lookup-functionality-and-data-creation"]], "MATCH mode": [[441, "match-mode"]], "MIN and MAX mode": [[441, "min-and-max-mode"]], "Maintainers": [[425, "maintainers"]], "Mandatory target bounds": [[434, null]], "Manual verification of the constraint": [[390, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[391, "manual-verification-of-the-constraints"], [392, "manual-verification-of-the-constraints"], [393, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[428, "marking-experiments-as-pending"]], "MaternKernel": [[97, null]], "MeanPredictionSurrogate": [[264, null]], "Memory During Optimization": [[444, null]], "MemorySize": [[205, null]], "Meta Recommenders": [[432, null], [436, "meta-recommenders"]], "MetaRecommender": [[167, null]], "Method overrides": [[424, "method-overrides"]], "Missing Lookup Values": [[439, null]], "Mixtures": [[401, null]], "Model Interpretation in BO": [[433, null]], "Model Outputs": [[399, "model-outputs"], [400, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[402, null]], "Modeling a Mixture in Traditional Representation": [[403, null]], "Monitoring the Probability of Improvement": [[397, null]], "Monkeypatching": [[395, "monkeypatching"], [396, null], [397, "monkeypatching"]], "Multi Target": [[406, null]], "Multi-Armed Bandit": [[404, null]], "NGBoostSurrogate": [[266, null]], "NaiveHybridSpaceRecommender": [[174, null]], "Necessary imports": [[399, "necessary-imports"], [400, "necessary-imports"], [413, "necessary-imports"], [414, "necessary-imports"], [415, "necessary-imports"]], "Necessary imports for this example": [[380, "necessary-imports-for-this-example"], [381, "necessary-imports-for-this-example"], [382, "necessary-imports-for-this-example"], [384, "necessary-imports-for-this-example"], [385, "necessary-imports-for-this-example"], [387, "necessary-imports-for-this-example"], [388, "necessary-imports-for-this-example"], [390, "necessary-imports-for-this-example"], [391, "necessary-imports-for-this-example"], [392, "necessary-imports-for-this-example"], [393, "necessary-imports-for-this-example"], [407, "necessary-imports-for-this-example"], [410, "necessary-imports-for-this-example"], [411, "necessary-imports-for-this-example"]], "Nesting objects": [[438, "nesting-objects"]], "NonPredictiveRecommender": [[187, null]], "NormalPrior": [[160, null]], "NumericalContinuousParameter": [[139, null], [435, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[140, null], [435, "numericaldiscreteparameter"]], "NumericalTarget": [[286, null], [441, "numericaltarget"]], "Objective": [[112, null], [434, null]], "Optimizing a Custom Black-Box Function": [[379, null]], "Optional Dependencies": [[421, "optional-dependencies"]], "Optional dependency": [[435, null]], "Optional: Defining the Optimization Strategy": [[421, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[402, null]], "PAMClusteringRecommender": [[191, null]], "Parameter": [[127, null]], "Parameter Importance via SHAP": [[433, "parameter-importance-via-shap"]], "Parameter Setup": [[402, "parameter-setup"], [403, "parameter-setup"]], "Parameter encoding": [[435, null]], "Parameter names": [[435, null]], "Parameter tolerances": [[429, null]], "ParameterEncoding": [[136, null]], "Parameters": [[435, null]], "Parameters for a full simulation loop": [[380, "parameters-for-a-full-simulation-loop"], [381, "parameters-for-a-full-simulation-loop"], [382, "parameters-for-a-full-simulation-loop"]], "PartialAcquisitionFunction": [[23, null]], "Performing some iterations": [[407, "performing-some-iterations"]], "Performing the simulation loop": [[380, "performing-the-simulation-loop"]], "PeriodicKernel": [[98, null]], "Permanent Exclusion": [[432, "permanent-exclusion"]], "Permutation Invariance": [[402, "permutation-invariance"]], "PiecewisePolynomialKernel": [[99, null]], "PlainKernelFactory": [[251, null]], "Plots": [[433, "plots"]], "Plotting the Results": [[379, "plotting-the-results"], [396, "plotting-the-results"], [397, "plotting-the-results"]], "Polars": [[431, "polars"]], "PolynomialKernel": [[100, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[153, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[396, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[106, null]], "Pure Recommenders": [[436, "pure-recommenders"]], "PureRecommender": [[177, null]], "Purely Continuous Search Spaces": [[427, null]], "PyCharm vs. exceptiongroup": [[422, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[101, null]], "RFFKernel": [[102, null]], "RQKernel": [[103, null]], "RandomForestSurrogate": [[268, null]], "RandomRecommender": [[195, null]], "RecommenderProtocol": [[164, null]], "Recommenders": [[436, null]], "Registering Custom Hooks": [[395, null]], "Removed": [[423, "removed"], [423, "id28"], [423, "id34"], [423, "id43"], [423, "id56"], [423, "id66"], [423, "id72"], [423, "id81"]], "Representation of Data within Discrete Subspaces": [[437, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[444, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[437, "restricting-search-spaces-using-constraints"]], "Row Order": [[431, null]], "Running the Simulation": [[405, "running-the-simulation"]], "Running the Simulation Loop": [[379, "running-the-simulation-loop"]], "SHAPInsight": [[85, null]], "SKLearnClusteringRecommender": [[192, null]], "Sampling Recommenders": [[436, "sampling-recommenders"]], "Scalarizer": [[120, null]], "ScaleKernel": [[107, null]], "Search Space Creation": [[402, "search-space-creation"], [403, "search-space-creation"]], "Search Space Memory Estimation": [[444, "search-space-memory-estimation"]], "Search Spaces": [[437, null]], "SearchSpace": [[200, null]], "SearchSpaceType": [[201, null]], "Searchspaces": [[408, null]], "Seeing Transfer Learning in Action": [[442, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[429, null]], "SequentialMetaRecommender": [[170, null]], "SerialMixin": [[223, null]], "Serialization": [[412, null], [429, "serialization"], [438, null]], "Serialization and de-serialization": [[413, "serialization-and-de-serialization"]], "Settings": [[379, "settings"], [396, "settings"], [397, "settings"], [409, "settings"], [417, "settings"], [418, "settings"]], "Setup": [[384, "setup"], [405, "setup"]], "Signature components": [[395, null]], "Simplex Construction": [[402, null]], "Simulating Multiple Scenarios": [[439, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[439, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[439, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[396, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[396, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[439, null]], "Simulation Loop": [[417, "simulation-loop"], [418, "simulation-loop"]], "SingleTargetObjective": [[122, null], [434, "singletargetobjective"]], "Slot-based Representation": [[403, null]], "SmoothedBoxPrior": [[161, null]], "StreamingSequentialMetaRecommender": [[171, null]], "Sub-Sampling Method": [[427, null]], "SubSelectionCondition": [[38, null], [430, "subselectioncondition"]], "SubspaceContinuous": [[198, null]], "SubspaceDiscrete": [[206, null]], "Substance Amounts": [[402, "substance-amounts"]], "SubstanceEncoding": [[137, null]], "SubstanceParameter": [[143, null], [435, "substanceparameter"]], "Suggested Fix": [[422, null], [422, null], [422, null], [422, null]], "Supported Acquisition Functions": [[428, null]], "Supported Recommenders": [[428, null]], "Surrogate": [[241, null]], "SurrogateProtocol": [[242, null]], "Surrogates": [[440, null]], "Synchronizing Pull Requests": [[424, "synchronizing-pull-requests"]], "Target": [[278, null]], "TargetMode": [[283, null]], "TargetTransformation": [[284, null]], "Targets": [[441, null]], "TaskParameter": [[130, null], [435, "taskparameter"]], "Technology": [[442, null]], "Telemetry": [[431, "telemetry"]], "Telemetry Scope": [[431, null]], "Terminology": [[402, "terminology"], [438, null], [442, null]], "Terminology Continued": [[442, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[439, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[405, "the-black-box-model"]], "The Lookup Mechanism": [[439, "the-lookup-mechanism"]], "The Optimization Loop": [[421, "the-optimization-loop"]], "The Role of the TaskParameter": [[442, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[414, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[432, "the-recommend-call"]], "The type field": [[438, "the-type-field"]], "Theoretical Span": [[402, null]], "ThresholdCondition": [[39, null], [430, "thresholdcondition"]], "Trajectory-Based Control": [[432, null]], "Transfer Learning": [[416, null], [418, null], [442, null]], "Triggering the Hook": [[397, "triggering-the-hook"]], "Triggering the Hooks": [[395, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[172, null]], "Uninstalling Internet Packages": [[431, null]], "Unlocking Data Treasures Through Transfer Learning": [[442, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[303, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[443, null]], "Using Custom Models": [[440, "using-custom-models"]], "Using Explicit Bounds": [[437, "using-explicit-bounds"]], "Using None": [[439, "using-none"]], "Using a Callable": [[439, "using-a-callable"]], "Using a Dataframe": [[439, "using-a-dataframe"]], "Using abbreviations": [[438, "using-abbreviations"]], "Using configuration instead": [[399, "using-configuration-instead"], [400, "using-configuration-instead"]], "Using default values": [[438, "using-default-values"]], "Utilities": [[444, null]], "Validation of model parameters": [[400, "validation-of-model-parameters"]], "Verification of Constraints": [[402, "verification-of-constraints"], [403, "verification-of-constraints"]], "Verification of Span": [[402, "verification-of-span"]], "Verification of the two dictionaries": [[415, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[388, "verify-the-constraints"]], "Windows \u2013 Torch Problems": [[422, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[387, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [388, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [411, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[424, "writing-docstrings"]], "Writing classes": [[424, "writing-classes"]], "[0.1.0] - 2022-10-01": [[423, "id138"]], "[0.10.0] - 2024-08-02": [[423, "id30"]], "[0.11.0] - 2024-09-09": [[423, "id23"]], "[0.11.1] - 2024-10-01": [[423, "id18"]], "[0.11.2] - 2024-10-11": [[423, "id14"]], "[0.11.3] - 2024-11-06": [[423, "id12"]], "[0.11.4] - 2025-01-27": [[423, "id9"]], "[0.12.0] - 2025-01-28": [[423, "id5"]], "[0.12.1] - 2025-01-29": [[423, "id3"]], "[0.12.2] - 2025-01-31": [[423, "id1"]], "[0.2.0] - 2022-11-10": [[423, "id135"]], "[0.2.1] - 2022-12-01": [[423, "id133"]], "[0.2.2] - 2023-01-13": [[423, "id129"]], "[0.2.3] - 2023-03-14": [[423, "id125"]], "[0.2.4] - 2023-03-24": [[423, "id121"]], "[0.3.0] - 2023-06-27": [[423, "id117"]], "[0.3.1] - 2023-07-17": [[423, "id113"]], "[0.3.2] - 2023-07-24": [[423, "id110"]], "[0.4.0] - 2023-08-16": [[423, "id106"]], "[0.4.1] - 2023-08-23": [[423, "id102"]], "[0.4.2] - 2023-08-29": [[423, "id98"]], "[0.5.0] - 2023-09-15": [[423, "id95"]], "[0.5.1] - 2023-10-19": [[423, "id91"]], "[0.6.0] - 2023-11-17": [[423, "id86"]], "[0.6.1] - 2023-11-27": [[423, "id82"]], "[0.7.0] - 2023-12-04": [[423, "id78"]], "[0.7.1] - 2023-12-07": [[423, "id74"]], "[0.7.2] - 2024-01-24": [[423, "id68"]], "[0.7.3] - 2024-02-09": [[423, "id62"]], "[0.7.4] - 2024-02-28": [[423, "id57"]], "[0.8.0] - 2024-02-29": [[423, "id54"]], "[0.8.1] - 2024-03-11": [[423, "id50"]], "[0.8.2] - 2024-03-27": [[423, "id46"]], "[0.9.0] - 2024-05-21": [[423, "id40"]], "[0.9.1] - 2024-06-04": [[423, "id37"]], "[Unreleased]": [[423, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[20, null]], "baybe.acquisition.partial": [[22, null]], "baybe.acquisition.utils": [[24, null]], "baybe.acquisition.utils.convert_acqf": [[25, null]], "baybe.acquisition.utils.str_to_acqf": [[26, null]], "baybe.campaign": [[27, null]], "baybe.constraints": [[29, null]], "baybe.constraints.base": [[30, null]], "baybe.constraints.conditions": [[36, null]], "baybe.constraints.continuous": [[40, null]], "baybe.constraints.deprecation": [[43, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[44, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[45, null]], "baybe.constraints.deprecation.structure_constraints": [[46, null]], "baybe.constraints.discrete": [[47, null]], "baybe.constraints.validation": [[57, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[58, null]], "baybe.constraints.validation.validate_constraints": [[59, null]], "baybe.exceptions": [[60, null]], "baybe.exceptions.DeprecationError": [[61, null]], "baybe.exceptions.EmptySearchSpaceError": [[62, null]], "baybe.exceptions.IncompatibilityError": [[63, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[64, null]], "baybe.exceptions.IncompatibleArgumentError": [[65, null]], "baybe.exceptions.IncompatibleExplainerError": [[66, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[67, null]], "baybe.exceptions.InvalidSurrogateModelError": [[68, null]], "baybe.exceptions.InvalidTargetValueError": [[69, null]], "baybe.exceptions.ModelNotTrainedError": [[70, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[71, null]], "baybe.exceptions.NoRecommendersLeftError": [[72, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[73, null]], "baybe.exceptions.NothingToSimulateError": [[74, null]], "baybe.exceptions.NumericalUnderflowError": [[75, null]], "baybe.exceptions.OptionalImportError": [[76, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[77, null]], "baybe.exceptions.UnidentifiedSubclassError": [[78, null]], "baybe.exceptions.UnmatchedAttributeError": [[79, null]], "baybe.exceptions.UnusedObjectWarning": [[80, null]], "baybe.insights": [[81, null]], "baybe.insights.shap": [[82, null]], "baybe.insights.shap.EXPLAINERS": [[83, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[84, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[86, null]], "baybe.insights.shap.SHAP_PLOTS": [[87, null]], "baybe.insights.shap.is_shap_explainer": [[88, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[89, null]], "baybe.kernels": [[90, null]], "baybe.kernels.base": [[91, null]], "baybe.kernels.basic": [[95, null]], "baybe.kernels.composite": [[104, null]], "baybe.objective": [[108, null]], "baybe.objective.Objective": [[109, null]], "baybe.objectives": [[110, null]], "baybe.objectives.base": [[111, null]], "baybe.objectives.base.to_objective": [[113, null]], "baybe.objectives.deprecation": [[114, null]], "baybe.objectives.deprecation.structure_objective": [[115, null]], "baybe.objectives.desirability": [[116, null]], "baybe.objectives.desirability.scalarize": [[118, null]], "baybe.objectives.enum": [[119, null]], "baybe.objectives.single": [[121, null]], "baybe.parameters": [[123, null]], "baybe.parameters.base": [[124, null]], "baybe.parameters.categorical": [[128, null]], "baybe.parameters.custom": [[131, null]], "baybe.parameters.enum": [[133, null]], "baybe.parameters.numerical": [[138, null]], "baybe.parameters.substance": [[141, null]], "baybe.parameters.substance.Smiles": [[142, null]], "baybe.parameters.utils": [[144, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[145, null]], "baybe.parameters.utils.sort_parameters": [[146, null]], "baybe.parameters.validation": [[147, null]], "baybe.parameters.validation.validate_decorrelation": [[148, null]], "baybe.parameters.validation.validate_is_finite": [[149, null]], "baybe.parameters.validation.validate_unique_values": [[150, null]], "baybe.priors": [[151, null]], "baybe.priors.base": [[152, null]], "baybe.priors.basic": [[154, null]], "baybe.recommenders": [[162, null]], "baybe.recommenders.base": [[163, null]], "baybe.recommenders.meta": [[165, null]], "baybe.recommenders.meta.base": [[166, null]], "baybe.recommenders.meta.sequential": [[168, null]], "baybe.recommenders.naive": [[173, null]], "baybe.recommenders.pure": [[175, null]], "baybe.recommenders.pure.base": [[176, null]], "baybe.recommenders.pure.bayesian": [[178, null]], "baybe.recommenders.pure.bayesian.base": [[179, null]], "baybe.recommenders.pure.bayesian.botorch": [[181, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[183, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[184, null]], "baybe.recommenders.pure.nonpredictive": [[185, null]], "baybe.recommenders.pure.nonpredictive.base": [[186, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[188, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[193, null]], "baybe.searchspace": [[196, null]], "baybe.searchspace.continuous": [[197, null]], "baybe.searchspace.core": [[199, null]], "baybe.searchspace.core.to_searchspace": [[202, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[203, null]], "baybe.searchspace.discrete": [[204, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[207, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[208, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[209, null]], "baybe.searchspace.validation": [[210, null]], "baybe.searchspace.validation.get_transform_parameters": [[211, null]], "baybe.searchspace.validation.validate_parameter_names": [[212, null]], "baybe.searchspace.validation.validate_parameters": [[213, null]], "baybe.serialization": [[214, null]], "baybe.serialization.core": [[215, null]], "baybe.serialization.core.block_deserialization_hook": [[216, null]], "baybe.serialization.core.block_serialization_hook": [[217, null]], "baybe.serialization.core.converter": [[218, null]], "baybe.serialization.core.get_base_structure_hook": [[219, null]], "baybe.serialization.core.select_constructor_hook": [[220, null]], "baybe.serialization.core.unstructure_base": [[221, null]], "baybe.serialization.mixin": [[222, null]], "baybe.serialization.utils": [[224, null]], "baybe.serialization.utils.deserialize_dataframe": [[225, null]], "baybe.serialization.utils.serialize_dataframe": [[226, null]], "baybe.simulation": [[227, null]], "baybe.simulation.core": [[228, null]], "baybe.simulation.core.simulate_experiment": [[229, null]], "baybe.simulation.lookup": [[230, null]], "baybe.simulation.lookup.look_up_targets": [[231, null]], "baybe.simulation.scenarios": [[232, null]], "baybe.simulation.scenarios.simulate_scenarios": [[233, null]], "baybe.simulation.transfer_learning": [[234, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[235, null]], "baybe.surrogates": [[236, null]], "baybe.surrogates.bandit": [[237, null]], "baybe.surrogates.base": [[239, null]], "baybe.surrogates.custom": [[243, null]], "baybe.surrogates.custom.register_custom_architecture": [[245, null]], "baybe.surrogates.gaussian_process": [[246, null]], "baybe.surrogates.gaussian_process.core": [[247, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[249, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[252, null]], "baybe.surrogates.gaussian_process.presets": [[253, null]], "baybe.surrogates.gaussian_process.presets.core": [[254, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[256, null]], "baybe.surrogates.gaussian_process.presets.default": [[257, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[259, null]], "baybe.surrogates.linear": [[261, null]], "baybe.surrogates.naive": [[263, null]], "baybe.surrogates.ngboost": [[265, null]], "baybe.surrogates.random_forest": [[267, null]], "baybe.surrogates.utils": [[269, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[270, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[271, null]], "baybe.surrogates.utils.catch_constant_targets": [[272, null]], "baybe.surrogates.validation": [[273, null]], "baybe.surrogates.validation.get_model_params_validator": [[274, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[275, null]], "baybe.targets": [[276, null]], "baybe.targets.base": [[277, null]], "baybe.targets.binary": [[279, null]], "baybe.targets.binary.ChoiceValue": [[281, null]], "baybe.targets.enum": [[282, null]], "baybe.targets.numerical": [[285, null]], "baybe.targets.transforms": [[287, null]], "baybe.targets.transforms.bell_transform": [[288, null]], "baybe.targets.transforms.linear_transform": [[289, null]], "baybe.targets.transforms.triangular_transform": [[290, null]], "baybe.telemetry": [[291, null]], "baybe.telemetry.get_user_details": [[292, null]], "baybe.telemetry.is_enabled": [[293, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[294, null]], "baybe.telemetry.telemetry_record_value": [[295, null]], "baybe.utils": [[296, null]], "baybe.utils.augmentation": [[297, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[298, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[299, null]], "baybe.utils.basic": [[300, null]], "baybe.utils.basic.UNSPECIFIED": [[302, null]], "baybe.utils.basic.find_subclass": [[305, null]], "baybe.utils.basic.get_baseclasses": [[306, null]], "baybe.utils.basic.get_subclasses": [[307, null]], "baybe.utils.basic.group_duplicate_values": [[308, null]], "baybe.utils.basic.hilberts_factory": [[309, null]], "baybe.utils.basic.is_all_instance": [[310, null]], "baybe.utils.basic.match_attributes": [[311, null]], "baybe.utils.basic.refers_to": [[312, null]], "baybe.utils.basic.register_hooks": [[313, null]], "baybe.utils.basic.to_tuple": [[314, null]], "baybe.utils.boolean": [[315, null]], "baybe.utils.boolean.check_if_in": [[316, null]], "baybe.utils.boolean.is_abstract": [[317, null]], "baybe.utils.boolean.strtobool": [[318, null]], "baybe.utils.chemistry": [[319, null]], "baybe.utils.chemistry.get_canonical_smiles": [[320, null]], "baybe.utils.chemistry.get_fingerprint_class": [[321, null]], "baybe.utils.chemistry.name_to_smiles": [[322, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[323, null]], "baybe.utils.conversion": [[324, null]], "baybe.utils.conversion.fraction_to_float": [[325, null]], "baybe.utils.conversion.nonstring_to_tuple": [[326, null]], "baybe.utils.dataframe": [[327, null]], "baybe.utils.dataframe.add_fake_measurements": [[328, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[329, null]], "baybe.utils.dataframe.add_parameter_noise": [[330, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[331, null]], "baybe.utils.dataframe.create_fake_input": [[332, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[333, null]], "baybe.utils.dataframe.df_drop_string_columns": [[334, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[335, null]], "baybe.utils.dataframe.filter_df": [[336, null]], "baybe.utils.dataframe.fuzzy_row_match": [[337, null]], "baybe.utils.dataframe.get_transform_objects": [[338, null]], "baybe.utils.dataframe.pretty_print_df": [[339, null]], "baybe.utils.dataframe.to_tensor": [[340, null]], "baybe.utils.interval": [[341, null]], "baybe.utils.interval.InfiniteIntervalError": [[342, null]], "baybe.utils.interval.convert_bounds": [[344, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[345, null]], "baybe.utils.memory": [[346, null]], "baybe.utils.memory.bytes_to_human_readable": [[347, null]], "baybe.utils.numerical": [[348, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[349, null]], "baybe.utils.numerical.DTypeFloatONNX": [[350, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[351, null]], "baybe.utils.numerical.closer_element": [[352, null]], "baybe.utils.numerical.closest_element": [[353, null]], "baybe.utils.numerical.geom_mean": [[354, null]], "baybe.utils.plotting": [[355, null]], "baybe.utils.plotting.create_example_plots": [[356, null]], "baybe.utils.plotting.indent": [[357, null]], "baybe.utils.plotting.to_string": [[358, null]], "baybe.utils.random": [[359, null]], "baybe.utils.random.set_random_seed": [[360, null]], "baybe.utils.random.temporary_seed": [[361, null]], "baybe.utils.sampling_algorithms": [[362, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[364, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[365, null]], "baybe.utils.scaling": [[366, null]], "baybe.utils.torch": [[368, null]], "baybe.utils.torch.DTypeFloatTorch": [[369, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[370, null]], "baybe.utils.validation": [[371, null]], "baybe.utils.validation.finite_float": [[372, null]], "baybe.utils.validation.non_inf_float": [[373, null]], "baybe.utils.validation.non_nan_float": [[374, null]], "baybe.utils.validation.validate_not_nan": [[375, null]], "baybe.utils.validation.validate_parameter_input": [[376, null]], "baybe.utils.validation.validate_target_input": [[377, null]], "classproperty": [[304, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[422, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedImprovement": [[12, null]], "qNegIntegratedPosteriorVariance": [[13, null]], "qNoisyExpectedImprovement": [[14, null]], "qPosteriorStandardDeviation": [[15, null]], "qProbabilityOfImprovement": [[16, null]], "qSimpleRegret": [[17, null]], "qThompsonSampling": [[18, null]], "qUpperConfidenceBound": [[19, null]], "\u201cPre-training\u201d stage": [[399, "pre-training-stage"]], "\u26a1 Quick Start": [[421, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[421, "maintainers"]], "\ud83d\udcbb Installation": [[421, "installation"]], "\ud83d\udcc4 License": [[421, "license"]], "\ud83d\udce1 Telemetry": [[421, "telemetry"]], "\ud83d\udd0b Batteries Included": [[421, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[421, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[21, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[31, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[32, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[33, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[61, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[62, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[63, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[64, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[65, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[66, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[67, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[68, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[69, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[70, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[71, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[72, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[73, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[74, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[75, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[76, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[77, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[78, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[79, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[80, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[85, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[92, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[93, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[94, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[96, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[97, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[98, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[99, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[100, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[101, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[102, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[103, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[105, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[106, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[107, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[112, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[117, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[122, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[125, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[126, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[127, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[129, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[130, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[143, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[153, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[155, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[156, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[157, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[158, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[159, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[160, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[161, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[164, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[167, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[174, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[177, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[180, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[187, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[192, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[195, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[200, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[205, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[240, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[241, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[242, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[248, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[251, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[258, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[260, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[262, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[264, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[266, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[268, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[278, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[280, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[286, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[304, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[301, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[342, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[343, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[367, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[61, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[62, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[63, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[64, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[65, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[66, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[67, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[68, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[69, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[70, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[71, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[72, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[73, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[74, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[75, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[76, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[77, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[78, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[79, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[80, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[134, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[135, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[137, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[342, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[161, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[21, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[180, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[180, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[21, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[130, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[328, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[329, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[330, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[105, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[174, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[177, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[180, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[187, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[192, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[195, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[174, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[177, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[180, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[187, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[192, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[195, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[174, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[177, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[180, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[187, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[192, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[195, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[155, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[331, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[161, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[85, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[107, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[105, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[106, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[169, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[92, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[270, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[271, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[255, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[20, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[22, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[24, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[27, "module-baybe.campaign", false]], "baybe.constraints": [[29, "module-baybe.constraints", false]], "baybe.constraints.base": [[30, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[36, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[40, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[43, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[47, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[57, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[60, "module-baybe.exceptions", false]], "baybe.insights": [[81, "module-baybe.insights", false]], "baybe.insights.shap": [[82, "module-baybe.insights.shap", false]], "baybe.kernels": [[90, "module-baybe.kernels", false]], "baybe.kernels.base": [[91, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[95, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[104, "module-baybe.kernels.composite", false]], "baybe.objective": [[108, "module-baybe.objective", false]], "baybe.objectives": [[110, "module-baybe.objectives", false]], "baybe.objectives.base": [[111, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[114, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[116, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[119, "module-baybe.objectives.enum", false]], "baybe.objectives.single": [[121, "module-baybe.objectives.single", false]], "baybe.parameters": [[123, "module-baybe.parameters", false]], "baybe.parameters.base": [[124, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[128, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[131, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[133, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[138, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[141, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[144, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[147, "module-baybe.parameters.validation", false]], "baybe.priors": [[151, "module-baybe.priors", false]], "baybe.priors.base": [[152, "module-baybe.priors.base", false]], "baybe.priors.basic": [[154, "module-baybe.priors.basic", false]], "baybe.recommenders": [[162, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[163, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[165, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[166, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[168, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[173, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[175, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[176, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[178, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[179, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[181, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[183, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[185, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[186, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[188, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[193, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[196, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[197, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[199, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[204, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[210, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[214, "module-baybe.serialization", false]], "baybe.serialization.core": [[215, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[222, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[224, "module-baybe.serialization.utils", false]], "baybe.simulation": [[227, "module-baybe.simulation", false]], "baybe.simulation.core": [[228, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[230, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[232, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[234, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[236, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[237, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[239, "module-baybe.surrogates.base", false]], "baybe.surrogates.custom": [[243, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[246, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[247, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[249, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[253, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[254, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[257, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[259, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[261, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[263, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[265, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[267, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[269, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[273, "module-baybe.surrogates.validation", false]], "baybe.targets": [[276, "module-baybe.targets", false]], "baybe.targets.base": [[277, "module-baybe.targets.base", false]], "baybe.targets.binary": [[279, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[282, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[285, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[287, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[291, "module-baybe.telemetry", false]], "baybe.utils": [[296, "module-baybe.utils", false]], "baybe.utils.augmentation": [[297, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[300, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[315, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[319, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[324, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[327, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[341, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[346, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[348, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[355, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[359, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[362, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[366, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[368, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[371, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[262, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[180, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[284, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[288, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[155, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[155, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[280, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[216, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[217, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[286, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[347, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[28, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[31, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[272, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[134, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[129, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[343, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[316, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[281, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[304, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[352, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[353, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[367, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[126, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[129, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[130, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[143, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[200, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[205, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[125, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[126, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[127, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[129, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[130, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[143, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[200, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[205, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[205, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[174, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[177, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[180, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[192, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[195, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[93, "baybe.kernels.base.CompositeKernel", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[156, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[37, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[200, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[200, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[174, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[343, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[200, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[201, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[44, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[45, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[125, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[25, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[344, "baybe.utils.interval.convert_bounds", false]], "converter (in module baybe.serialization.core)": [[218, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[343, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[356, "baybe.utils.plotting.create_example_plots", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[332, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[135, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[132, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[135, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[143, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[143, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[258, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[61, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[225, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[117, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[298, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[299, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[333, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[334, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[335, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[174, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[200, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[201, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[126, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[363, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[349, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[350, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[369, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[301, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[260, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[201, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[62, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[126, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[129, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[130, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[143, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[200, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[205, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[205, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[205, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[85, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[85, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[83, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[280, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[364, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[336, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[305, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[372, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[240, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[241, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[242, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[248, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[262, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[264, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[266, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[268, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[367, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[363, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[325, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[85, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[28, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[200, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[21, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[28, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[31, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[32, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[33, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[35, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[37, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[39, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[92, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[93, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[94, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[96, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[97, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[98, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[99, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[100, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[101, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[102, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[103, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[105, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[106, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[107, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[112, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[117, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[122, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[125, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[126, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[127, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[129, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[130, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[143, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[153, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[155, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[156, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[157, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[158, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[159, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[160, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[161, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[167, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[169, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[200, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[223, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[240, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[241, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[248, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[251, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[262, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[264, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[266, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[268, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[278, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[280, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[286, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[343, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[21, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[28, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[31, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[32, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[33, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[35, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[37, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[39, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[92, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[93, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[94, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[96, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[97, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[98, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[99, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[100, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[101, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[102, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[103, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[105, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[106, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[107, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[112, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[117, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[122, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[125, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[126, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[127, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[129, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[130, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[143, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[153, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[155, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[156, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[157, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[158, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[159, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[160, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[161, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[167, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[169, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[200, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[223, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[240, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[241, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[248, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[251, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[262, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[264, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[266, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[268, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[278, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[280, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[286, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[343, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[200, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[248, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[200, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[85, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[85, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[337, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[156, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[255, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[248, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[120, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[354, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[219, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[306, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[320, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[200, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[167, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[321, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[274, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[167, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[167, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[200, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[145, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[307, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[180, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[338, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[211, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[292, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[308, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[157, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[158, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[309, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[201, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatibilityerror": [[63, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[64, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[65, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[66, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[67, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "indent() (in module baybe.utils.plotting)": [[357, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[240, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infiniteintervalerror": [[342, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[134, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[343, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[68, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[69, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[317, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[310, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[343, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[31, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[32, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[33, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[35, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[125, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[126, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[127, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[129, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[130, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[143, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[343, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[31, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[32, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[33, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[35, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[125, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[126, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[127, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[129, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[130, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[143, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[293, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[343, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[343, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[125, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[126, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[127, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[129, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[130, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[143, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[343, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[125, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[126, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[127, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[129, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[130, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[143, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[343, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[88, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[167, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[169, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[251, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[94, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[248, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[143, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[143, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[97, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[98, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[99, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[101, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[102, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[103, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[97, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[98, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[99, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[101, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[102, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[103, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[284, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[289, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[96, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[159, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[160, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[159, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[231, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[343, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[89, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[256, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[367, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[283, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[311, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[97, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[283, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[120, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[264, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[28, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[205, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[167, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[283, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[286, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[192, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[192, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[262, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[266, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[268, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[70, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [20, "module-baybe.acquisition.base", false], [22, "module-baybe.acquisition.partial", false], [24, "module-baybe.acquisition.utils", false], [27, "module-baybe.campaign", false], [29, "module-baybe.constraints", false], [30, "module-baybe.constraints.base", false], [36, "module-baybe.constraints.conditions", false], [40, "module-baybe.constraints.continuous", false], [43, "module-baybe.constraints.deprecation", false], [47, "module-baybe.constraints.discrete", false], [57, "module-baybe.constraints.validation", false], [60, "module-baybe.exceptions", false], [81, "module-baybe.insights", false], [82, "module-baybe.insights.shap", false], [90, "module-baybe.kernels", false], [91, "module-baybe.kernels.base", false], [95, "module-baybe.kernels.basic", false], [104, "module-baybe.kernels.composite", false], [108, "module-baybe.objective", false], [110, "module-baybe.objectives", false], [111, "module-baybe.objectives.base", false], [114, "module-baybe.objectives.deprecation", false], [116, "module-baybe.objectives.desirability", false], [119, "module-baybe.objectives.enum", false], [121, "module-baybe.objectives.single", false], [123, "module-baybe.parameters", false], [124, "module-baybe.parameters.base", false], [128, "module-baybe.parameters.categorical", false], [131, "module-baybe.parameters.custom", false], [133, "module-baybe.parameters.enum", false], [138, "module-baybe.parameters.numerical", false], [141, "module-baybe.parameters.substance", false], [144, "module-baybe.parameters.utils", false], [147, "module-baybe.parameters.validation", false], [151, "module-baybe.priors", false], [152, "module-baybe.priors.base", false], [154, "module-baybe.priors.basic", false], [162, "module-baybe.recommenders", false], [163, "module-baybe.recommenders.base", false], [165, "module-baybe.recommenders.meta", false], [166, "module-baybe.recommenders.meta.base", false], [168, "module-baybe.recommenders.meta.sequential", false], [173, "module-baybe.recommenders.naive", false], [175, "module-baybe.recommenders.pure", false], [176, "module-baybe.recommenders.pure.base", false], [178, "module-baybe.recommenders.pure.bayesian", false], [179, "module-baybe.recommenders.pure.bayesian.base", false], [181, "module-baybe.recommenders.pure.bayesian.botorch", false], [183, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [185, "module-baybe.recommenders.pure.nonpredictive", false], [186, "module-baybe.recommenders.pure.nonpredictive.base", false], [188, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [193, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [196, "module-baybe.searchspace", false], [197, "module-baybe.searchspace.continuous", false], [199, "module-baybe.searchspace.core", false], [204, "module-baybe.searchspace.discrete", false], [210, "module-baybe.searchspace.validation", false], [214, "module-baybe.serialization", false], [215, "module-baybe.serialization.core", false], [222, "module-baybe.serialization.mixin", false], [224, "module-baybe.serialization.utils", false], [227, "module-baybe.simulation", false], [228, "module-baybe.simulation.core", false], [230, "module-baybe.simulation.lookup", false], [232, "module-baybe.simulation.scenarios", false], [234, "module-baybe.simulation.transfer_learning", false], [236, "module-baybe.surrogates", false], [237, "module-baybe.surrogates.bandit", false], [239, "module-baybe.surrogates.base", false], [243, "module-baybe.surrogates.custom", false], [246, "module-baybe.surrogates.gaussian_process", false], [247, "module-baybe.surrogates.gaussian_process.core", false], [249, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [253, "module-baybe.surrogates.gaussian_process.presets", false], [254, "module-baybe.surrogates.gaussian_process.presets.core", false], [257, "module-baybe.surrogates.gaussian_process.presets.default", false], [259, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [261, "module-baybe.surrogates.linear", false], [263, "module-baybe.surrogates.naive", false], [265, "module-baybe.surrogates.ngboost", false], [267, "module-baybe.surrogates.random_forest", false], [269, "module-baybe.surrogates.utils", false], [273, "module-baybe.surrogates.validation", false], [276, "module-baybe.targets", false], [277, "module-baybe.targets.base", false], [279, "module-baybe.targets.binary", false], [282, "module-baybe.targets.enum", false], [285, "module-baybe.targets.numerical", false], [287, "module-baybe.targets.transforms", false], [291, "module-baybe.telemetry", false], [296, "module-baybe.utils", false], [297, "module-baybe.utils.augmentation", false], [300, "module-baybe.utils.basic", false], [315, "module-baybe.utils.boolean", false], [319, "module-baybe.utils.chemistry", false], [324, "module-baybe.utils.conversion", false], [327, "module-baybe.utils.dataframe", false], [341, "module-baybe.utils.interval", false], [346, "module-baybe.utils.memory", false], [348, "module-baybe.utils.numerical", false], [355, "module-baybe.utils.plotting", false], [359, "module-baybe.utils.random", false], [362, "module-baybe.utils.sampling_algorithms", false], [366, "module-baybe.utils.scaling", false], [368, "module-baybe.utils.torch", false], [371, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.n_fits_done", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[200, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[174, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[125, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[126, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[127, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[129, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[130, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[143, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[278, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[280, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[286, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[322, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[266, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[71, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[373, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[374, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[84, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[187, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[326, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[72, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[160, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[73, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[74, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[97, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[102, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[286, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[75, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[112, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[109, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[100, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[100, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[134, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[39, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[76, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[107, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[107, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[127, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[207, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[208, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[200, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameterencoding (class in baybe.parameters.enum)": [[136, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[28, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[200, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[98, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[98, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[98, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[99, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[251, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[85, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[100, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[240, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[241, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[248, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[262, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[264, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[266, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[268, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[100, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[339, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[153, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[106, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[177, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[99, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[363, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[268, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[195, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[156, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[101, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[164, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[167, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[174, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[177, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[180, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[187, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[192, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[195, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[164, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "refers_to() (in module baybe.utils.basic)": [[312, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[245, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[313, "baybe.utils.basic.register_hooks", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "rffkernel (class in baybe.kernels.basic)": [[102, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[103, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[365, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[118, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[117, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[120, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[157, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[158, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[159, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[160, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[107, "baybe.kernels.composite.ScaleKernel", false]], "searchspace (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[200, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[77, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[201, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[220, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[167, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[38, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[184, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[226, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[223, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[360, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[86, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[87, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[85, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[161, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[229, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[233, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[235, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[122, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[192, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[142, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[323, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[161, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[146, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[26, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[318, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[46, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[115, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[198, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[137, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[143, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[280, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[31, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[32, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[33, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[125, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[126, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[127, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[129, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[130, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[143, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[278, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[280, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[286, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[240, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[241, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[248, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[262, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[264, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[266, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[268, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[241, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[180, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[182, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[242, "baybe.surrogates.base.SurrogateProtocol", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[278, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[283, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[28, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[112, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[117, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[122, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[284, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[200, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[130, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[294, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[295, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[361, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[39, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[39, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[21, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[240, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[241, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[242, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[248, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[262, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[264, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[266, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[268, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[21, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[31, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[32, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[33, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[92, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[93, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[94, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[96, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[97, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[98, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[99, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[100, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[101, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[102, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[103, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[105, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[106, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[107, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[112, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[117, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[122, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[125, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[126, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[127, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[129, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[130, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[143, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[153, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[155, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[156, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[157, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[158, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[159, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[160, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[161, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[167, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[200, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[223, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[240, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[241, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[248, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[251, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[262, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[264, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[266, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[268, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[278, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[280, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[286, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[343, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[92, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[93, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[94, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[96, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[97, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[98, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[99, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[100, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[101, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[102, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[103, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[105, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[106, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[107, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[92, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[93, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[94, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[96, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[97, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[98, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[99, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[100, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[101, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[102, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[103, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[105, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[106, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[107, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[153, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[155, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[156, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[157, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[158, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[159, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[160, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[161, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[21, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[31, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[32, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[33, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[92, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[93, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[94, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[96, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[97, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[98, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[99, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[100, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[101, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[102, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[103, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[105, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[106, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[107, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[112, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[117, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[122, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[125, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[126, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[127, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[129, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[130, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[143, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[153, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[155, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[156, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[157, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[158, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[159, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[160, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[161, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[167, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[171, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[200, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[223, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[238, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[240, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[241, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[248, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[251, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[262, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[264, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[266, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[268, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[278, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[280, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[286, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[343, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[252, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[343, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[278, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[280, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[286, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[113, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[125, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[126, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[127, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[129, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[130, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[143, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[202, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[358, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[125, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[126, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[129, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[130, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[139, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[143, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[343, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[340, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[343, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[314, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[39, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[112, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[117, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[122, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[126, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[129, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[130, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[143, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[198, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[200, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[206, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[278, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[280, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[286, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[367, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[286, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[284, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[290, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[172, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[200, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[78, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[79, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[302, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[303, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[221, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[80, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[343, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[345, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[85, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[58, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[244, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[28, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[59, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[275, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[148, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[149, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[375, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[376, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[212, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[213, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[203, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[209, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[377, "baybe.utils.validation.validate_target_input", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[150, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[126, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[129, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[130, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[132, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[140, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[143, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[96, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[96, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[351, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[370, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[117, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[137, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [27, 0, 0, "-", "campaign"], [29, 0, 0, "-", "constraints"], [60, 0, 0, "-", "exceptions"], [81, 0, 0, "-", "insights"], [90, 0, 0, "-", "kernels"], [108, 0, 0, "-", "objective"], [110, 0, 0, "-", "objectives"], [123, 0, 0, "-", "parameters"], [151, 0, 0, "-", "priors"], [162, 0, 0, "-", "recommenders"], [196, 0, 0, "-", "searchspace"], [214, 0, 0, "-", "serialization"], [227, 0, 0, "-", "simulation"], [236, 0, 0, "-", "surrogates"], [276, 0, 0, "-", "targets"], [291, 0, 0, "-", "telemetry"], [296, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [20, 0, 0, "-", "base"], [22, 0, 0, "-", "partial"], [24, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedImprovement"], [13, 1, 1, "", "qNegIntegratedPosteriorVariance"], [14, 1, 1, "", "qNoisyExpectedImprovement"], [15, 1, 1, "", "qPosteriorStandardDeviation"], [16, 1, 1, "", "qProbabilityOfImprovement"], [17, 1, 1, "", "qSimpleRegret"], [18, 1, 1, "", "qThompsonSampling"], [19, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 2, 1, "", "get_integration_points"], [13, 3, 1, "", "sampling_fraction"], [13, 3, 1, "", "sampling_method"], [13, 3, 1, "", "sampling_n_points"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[13, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "n_mc_samples"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 3, 1, "", "beta"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.base": [[21, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.partial": [[23, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "botorch_acqf"], [23, 3, 1, "", "pin_discrete"], [23, 3, 1, "", "pinned_part"], [23, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[23, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[25, 5, 1, "", "convert_acqf"], [26, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[28, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "add_measurements"], [28, 3, 1, "", "allow_recommending_already_measured"], [28, 3, 1, "", "allow_recommending_already_recommended"], [28, 3, 1, "", "allow_recommending_pending_experiments"], [28, 2, 1, "", "from_config"], [28, 2, 1, "", "from_dict"], [28, 2, 1, "", "from_json"], [28, 2, 1, "", "get_surrogate"], [28, 6, 1, "", "measurements"], [28, 3, 1, "", "n_batches_done"], [28, 3, 1, "", "n_fits_done"], [28, 3, 1, "", "objective"], [28, 6, 1, "", "parameters"], [28, 2, 1, "", "posterior"], [28, 2, 1, "", "recommend"], [28, 3, 1, "", "recommender"], [28, 3, 1, "", "searchspace"], [28, 6, 1, "", "targets"], [28, 2, 1, "", "to_dict"], [28, 2, 1, "", "to_json"], [28, 2, 1, "", "toggle_discrete_candidates"], [28, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[28, 4, 1, "", "data"], [28, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[28, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[28, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[28, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_surrogate.params": [[28, 4, 1, "", "batch_size"], [28, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[28, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.recommend.params": [[28, 4, 1, "", "batch_size"], [28, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[28, 4, 1, "", "complement"], [28, 4, 1, "", "constraints"], [28, 4, 1, "", "dry_run"], [28, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[28, 4, 1, "", "config_json"]], "baybe.constraints": [[30, 0, 0, "-", "base"], [36, 0, 0, "-", "conditions"], [40, 0, 0, "-", "continuous"], [43, 0, 0, "-", "deprecation"], [47, 0, 0, "-", "discrete"], [57, 0, 0, "-", "validation"]], "baybe.constraints.base": [[31, 1, 1, "", "CardinalityConstraint"], [32, 1, 1, "", "Constraint"], [33, 1, 1, "", "ContinuousConstraint"], [34, 1, 1, "", "ContinuousNonlinearConstraint"], [35, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "eval_during_augmentation"], [31, 3, 1, "", "eval_during_creation"], [31, 3, 1, "", "eval_during_modeling"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 6, 1, "", "is_continuous"], [31, 6, 1, "", "is_discrete"], [31, 3, 1, "", "max_cardinality"], [31, 3, 1, "", "min_cardinality"], [31, 3, 1, "", "numerical_only"], [31, 3, 1, "", "parameters"], [31, 2, 1, "", "summary"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[31, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 6, 1, "", "is_continuous"], [32, 6, 1, "", "is_discrete"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[32, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[32, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 6, 1, "", "is_continuous"], [33, 6, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[33, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[33, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 2, 1, "", "get_invalid"], [35, 2, 1, "", "get_invalid_polars"], [35, 2, 1, "", "get_valid"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[35, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[35, 4, 1, "", "df"]], "baybe.constraints.conditions": [[37, 1, 1, "", "Condition"], [38, 1, 1, "", "SubSelectionCondition"], [39, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[37, 2, 1, "", "evaluate"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"], [37, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[37, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[37, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 6, 1, "", "selection"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[38, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[38, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "evaluate"], [39, 2, 1, "", "from_dict"], [39, 2, 1, "", "from_json"], [39, 3, 1, "", "operator"], [39, 3, 1, "", "threshold"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "to_json"], [39, 2, 1, "", "to_polars"], [39, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[39, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[39, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[39, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[39, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[41, 1, 1, "", "ContinuousCardinalityConstraint"], [42, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 3, 1, "", "max_cardinality"], [41, 3, 1, "", "min_cardinality"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "parameters"], [41, 2, 1, "", "sample_inactive_parameters"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[41, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[42, 2, 1, "", "__init__"], [42, 3, 1, "", "coefficients"], [42, 3, 1, "", "eval_during_augmentation"], [42, 3, 1, "", "eval_during_creation"], [42, 3, 1, "", "eval_during_modeling"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 6, 1, "", "is_continuous"], [42, 6, 1, "", "is_discrete"], [42, 6, 1, "", "is_eq"], [42, 3, 1, "", "numerical_only"], [42, 3, 1, "", "operator"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "rhs"], [42, 2, 1, "", "summary"], [42, 2, 1, "", "to_botorch"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[42, 4, 1, "", "idx_offset"], [42, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[44, 5, 1, "", "ContinuousLinearEqualityConstraint"], [45, 5, 1, "", "ContinuousLinearInequalityConstraint"], [46, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[48, 1, 1, "", "DiscreteCardinalityConstraint"], [49, 1, 1, "", "DiscreteCustomConstraint"], [50, 1, 1, "", "DiscreteDependenciesConstraint"], [51, 1, 1, "", "DiscreteExcludeConstraint"], [52, 1, 1, "", "DiscreteLinkedParametersConstraint"], [53, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [54, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [55, 1, 1, "", "DiscreteProductConstraint"], [56, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 2, 1, "", "get_invalid"], [48, 2, 1, "", "get_invalid_polars"], [48, 2, 1, "", "get_valid"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 3, 1, "", "max_cardinality"], [48, 3, 1, "", "min_cardinality"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "parameters"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[48, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[48, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[48, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 2, 1, "", "get_valid"], [49, 6, 1, "", "is_continuous"], [49, 6, 1, "", "is_discrete"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"], [49, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[49, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[49, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[49, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[49, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "affected_parameters"], [50, 3, 1, "", "conditions"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 2, 1, "", "get_valid"], [50, 6, 1, "", "is_continuous"], [50, 6, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 3, 1, "", "permutation_invariant"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[50, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[50, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[50, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[50, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "combiner"], [51, 3, 1, "", "conditions"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "dependencies"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "condition"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "condition"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.validation": [[58, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [59, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[58, 4, 1, "", "constraints"]], "baybe.exceptions": [[61, 7, 1, "", "DeprecationError"], [62, 7, 1, "", "EmptySearchSpaceError"], [63, 7, 1, "", "IncompatibilityError"], [64, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [65, 7, 1, "", "IncompatibleArgumentError"], [66, 7, 1, "", "IncompatibleExplainerError"], [67, 7, 1, "", "IncompatibleSearchSpaceError"], [68, 7, 1, "", "InvalidSurrogateModelError"], [69, 7, 1, "", "InvalidTargetValueError"], [70, 7, 1, "", "ModelNotTrainedError"], [71, 7, 1, "", "NoMCAcquisitionFunctionError"], [72, 7, 1, "", "NoRecommendersLeftError"], [73, 7, 1, "", "NotEnoughPointsLeftError"], [74, 7, 1, "", "NothingToSimulateError"], [75, 7, 1, "", "NumericalUnderflowError"], [76, 7, 1, "", "OptionalImportError"], [77, 7, 1, "", "SearchSpaceMatchWarning"], [78, 7, 1, "", "UnidentifiedSubclassError"], [79, 7, 1, "", "UnmatchedAttributeError"], [80, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.insights": [[82, 0, 0, "-", "shap"]], "baybe.insights.shap": [[83, 8, 1, "", "EXPLAINERS"], [84, 8, 1, "", "NON_SHAP_EXPLAINERS"], [85, 1, 1, "", "SHAPInsight"], [86, 8, 1, "", "SHAP_EXPLAINERS"], [87, 8, 1, "", "SHAP_PLOTS"], [88, 5, 1, "", "is_shap_explainer"], [89, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[85, 2, 1, "", "__init__"], [85, 3, 1, "", "background_data"], [85, 2, 1, "", "explain"], [85, 3, 1, "", "explainer"], [85, 2, 1, "", "from_campaign"], [85, 2, 1, "", "from_recommender"], [85, 2, 1, "", "from_surrogate"], [85, 2, 1, "", "plot"], [85, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[85, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[85, 4, 1, "", "campaign"], [85, 4, 1, "", "explainer_cls"], [85, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[85, 4, 1, "", "explainer_cls"], [85, 4, 1, "", "measurements"], [85, 4, 1, "", "objective"], [85, 4, 1, "", "recommender"], [85, 4, 1, "", "searchspace"], [85, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[85, 4, 1, "", "**kwargs"], [85, 4, 1, "", "data"], [85, 4, 1, "", "explanation_index"], [85, 4, 1, "", "plot_type"], [85, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[89, 4, 1, "", "data"], [89, 4, 1, "", "explainer_cls"], [89, 4, 1, "", "surrogate"], [89, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[91, 0, 0, "-", "base"], [95, 0, 0, "-", "basic"], [104, 0, 0, "-", "composite"]], "baybe.kernels.base": [[92, 1, 1, "", "BasicKernel"], [93, 1, 1, "", "CompositeKernel"], [94, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "from_dict"], [92, 2, 1, "", "from_json"], [92, 2, 1, "", "to_dict"], [92, 2, 1, "", "to_factory"], [92, 2, 1, "", "to_gpytorch"], [92, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[92, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[92, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "from_dict"], [93, 2, 1, "", "from_json"], [93, 2, 1, "", "to_dict"], [93, 2, 1, "", "to_factory"], [93, 2, 1, "", "to_gpytorch"], [93, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[93, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[93, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "from_dict"], [94, 2, 1, "", "from_json"], [94, 2, 1, "", "to_dict"], [94, 2, 1, "", "to_factory"], [94, 2, 1, "", "to_gpytorch"], [94, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[94, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[94, 4, 1, "", "string"]], "baybe.kernels.basic": [[96, 1, 1, "", "LinearKernel"], [97, 1, 1, "", "MaternKernel"], [98, 1, 1, "", "PeriodicKernel"], [99, 1, 1, "", "PiecewisePolynomialKernel"], [100, 1, 1, "", "PolynomialKernel"], [101, 1, 1, "", "RBFKernel"], [102, 1, 1, "", "RFFKernel"], [103, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "from_dict"], [96, 2, 1, "", "from_json"], [96, 2, 1, "", "to_dict"], [96, 2, 1, "", "to_factory"], [96, 2, 1, "", "to_gpytorch"], [96, 2, 1, "", "to_json"], [96, 3, 1, "", "variance_initial_value"], [96, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[96, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[96, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "from_dict"], [97, 2, 1, "", "from_json"], [97, 3, 1, "", "lengthscale_initial_value"], [97, 3, 1, "", "lengthscale_prior"], [97, 3, 1, "", "nu"], [97, 2, 1, "", "to_dict"], [97, 2, 1, "", "to_factory"], [97, 2, 1, "", "to_gpytorch"], [97, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[97, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[97, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "from_dict"], [98, 2, 1, "", "from_json"], [98, 3, 1, "", "lengthscale_initial_value"], [98, 3, 1, "", "lengthscale_prior"], [98, 3, 1, "", "period_length_initial_value"], [98, 3, 1, "", "period_length_prior"], [98, 2, 1, "", "to_dict"], [98, 2, 1, "", "to_factory"], [98, 2, 1, "", "to_gpytorch"], [98, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[98, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[98, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "from_dict"], [99, 2, 1, "", "from_json"], [99, 3, 1, "", "lengthscale_initial_value"], [99, 3, 1, "", "lengthscale_prior"], [99, 3, 1, "", "q"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "to_factory"], [99, 2, 1, "", "to_gpytorch"], [99, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[99, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[99, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "from_dict"], [100, 2, 1, "", "from_json"], [100, 3, 1, "", "offset_initial_value"], [100, 3, 1, "", "offset_prior"], [100, 3, 1, "", "power"], [100, 2, 1, "", "to_dict"], [100, 2, 1, "", "to_factory"], [100, 2, 1, "", "to_gpytorch"], [100, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[100, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[100, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "from_dict"], [101, 2, 1, "", "from_json"], [101, 3, 1, "", "lengthscale_initial_value"], [101, 3, 1, "", "lengthscale_prior"], [101, 2, 1, "", "to_dict"], [101, 2, 1, "", "to_factory"], [101, 2, 1, "", "to_gpytorch"], [101, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[101, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[101, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "from_dict"], [102, 2, 1, "", "from_json"], [102, 3, 1, "", "lengthscale_initial_value"], [102, 3, 1, "", "lengthscale_prior"], [102, 3, 1, "", "num_samples"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "to_factory"], [102, 2, 1, "", "to_gpytorch"], [102, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[102, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[102, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "from_dict"], [103, 2, 1, "", "from_json"], [103, 3, 1, "", "lengthscale_initial_value"], [103, 3, 1, "", "lengthscale_prior"], [103, 2, 1, "", "to_dict"], [103, 2, 1, "", "to_factory"], [103, 2, 1, "", "to_gpytorch"], [103, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[103, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[103, 4, 1, "", "string"]], "baybe.kernels.composite": [[105, 1, 1, "", "AdditiveKernel"], [106, 1, 1, "", "ProductKernel"], [107, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[105, 2, 1, "", "__init__"], [105, 3, 1, "", "base_kernels"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[106, 2, 1, "", "__init__"], [106, 3, 1, "", "base_kernels"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[106, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[107, 2, 1, "", "__init__"], [107, 3, 1, "", "base_kernel"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 3, 1, "", "outputscale_initial_value"], [107, 3, 1, "", "outputscale_prior"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[107, 4, 1, "", "string"]], "baybe.objective": [[109, 5, 1, "", "Objective"]], "baybe.objectives": [[111, 0, 0, "-", "base"], [114, 0, 0, "-", "deprecation"], [116, 0, 0, "-", "desirability"], [119, 0, 0, "-", "enum"], [121, 0, 0, "-", "single"]], "baybe.objectives.base": [[112, 1, 1, "", "Objective"], [113, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 6, 1, "", "targets"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_json"], [112, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[112, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[112, 4, 1, "", "allow_extra"], [112, 4, 1, "", "allow_missing"], [112, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[115, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[117, 1, 1, "", "DesirabilityObjective"], [118, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 3, 1, "", "scalarizer"], [117, 6, 1, "", "targets"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_json"], [117, 2, 1, "", "transform"], [117, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[117, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[117, 4, 1, "", "allow_extra"], [117, 4, 1, "", "allow_missing"], [117, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[118, 4, 1, "", "scalarizer"], [118, 4, 1, "", "values"], [118, 4, 1, "", "weights"]], "baybe.objectives.enum": [[120, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[120, 3, 1, "", "GEOM_MEAN"], [120, 3, 1, "", "MEAN"]], "baybe.objectives.single": [[122, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "from_dict"], [122, 2, 1, "", "from_json"], [122, 6, 1, "", "targets"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "to_json"], [122, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[122, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[122, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[122, 4, 1, "", "allow_extra"], [122, 4, 1, "", "allow_missing"], [122, 4, 1, "", "df"]], "baybe.parameters": [[124, 0, 0, "-", "base"], [128, 0, 0, "-", "categorical"], [131, 0, 0, "-", "custom"], [133, 0, 0, "-", "enum"], [138, 0, 0, "-", "numerical"], [141, 0, 0, "-", "substance"], [144, 0, 0, "-", "utils"], [147, 0, 0, "-", "validation"]], "baybe.parameters.base": [[125, 1, 1, "", "ContinuousParameter"], [126, 1, 1, "", "DiscreteParameter"], [127, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[125, 2, 1, "", "__init__"], [125, 6, 1, "", "comp_rep_columns"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 6, 1, "", "is_continuous"], [125, 6, 1, "", "is_discrete"], [125, 2, 1, "", "is_in_range"], [125, 3, 1, "", "is_numerical"], [125, 3, 1, "", "name"], [125, 2, 1, "", "summary"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "to_searchspace"], [125, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[125, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[125, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[125, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[126, 2, 1, "", "__init__"], [126, 6, 1, "", "comp_df"], [126, 6, 1, "", "comp_rep_columns"], [126, 3, 1, "", "encoding"], [126, 2, 1, "", "from_dict"], [126, 2, 1, "", "from_json"], [126, 6, 1, "", "is_continuous"], [126, 6, 1, "", "is_discrete"], [126, 2, 1, "", "is_in_range"], [126, 3, 1, "", "is_numerical"], [126, 3, 1, "", "name"], [126, 2, 1, "", "summary"], [126, 2, 1, "", "to_dict"], [126, 2, 1, "", "to_json"], [126, 2, 1, "", "to_searchspace"], [126, 2, 1, "", "to_subspace"], [126, 2, 1, "", "transform"], [126, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[126, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[126, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[126, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[126, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[127, 2, 1, "", "__init__"], [127, 6, 1, "", "comp_rep_columns"], [127, 2, 1, "", "from_dict"], [127, 2, 1, "", "from_json"], [127, 6, 1, "", "is_continuous"], [127, 6, 1, "", "is_discrete"], [127, 2, 1, "", "is_in_range"], [127, 3, 1, "", "is_numerical"], [127, 3, 1, "", "name"], [127, 2, 1, "", "summary"], [127, 2, 1, "", "to_dict"], [127, 2, 1, "", "to_json"], [127, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[127, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[127, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[127, 4, 1, "", "item"]], "baybe.parameters.categorical": [[129, 1, 1, "", "CategoricalParameter"], [130, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[129, 2, 1, "", "__init__"], [129, 6, 1, "", "comp_df"], [129, 6, 1, "", "comp_rep_columns"], [129, 3, 1, "", "encoding"], [129, 2, 1, "", "from_dict"], [129, 2, 1, "", "from_json"], [129, 6, 1, "", "is_continuous"], [129, 6, 1, "", "is_discrete"], [129, 2, 1, "", "is_in_range"], [129, 3, 1, "", "is_numerical"], [129, 3, 1, "", "name"], [129, 2, 1, "", "summary"], [129, 2, 1, "", "to_dict"], [129, 2, 1, "", "to_json"], [129, 2, 1, "", "to_searchspace"], [129, 2, 1, "", "to_subspace"], [129, 2, 1, "", "transform"], [129, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[129, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[129, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[129, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[129, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[130, 2, 1, "", "__init__"], [130, 3, 1, "", "active_values"], [130, 6, 1, "", "comp_df"], [130, 6, 1, "", "comp_rep_columns"], [130, 3, 1, "", "encoding"], [130, 2, 1, "", "from_dict"], [130, 2, 1, "", "from_json"], [130, 6, 1, "", "is_continuous"], [130, 6, 1, "", "is_discrete"], [130, 2, 1, "", "is_in_range"], [130, 3, 1, "", "is_numerical"], [130, 3, 1, "", "name"], [130, 2, 1, "", "summary"], [130, 2, 1, "", "to_dict"], [130, 2, 1, "", "to_json"], [130, 2, 1, "", "to_searchspace"], [130, 2, 1, "", "to_subspace"], [130, 2, 1, "", "transform"], [130, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[130, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[130, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[130, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[130, 4, 1, "", "series"]], "baybe.parameters.custom": [[132, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[132, 2, 1, "", "__init__"], [132, 6, 1, "", "comp_df"], [132, 6, 1, "", "comp_rep_columns"], [132, 3, 1, "", "data"], [132, 3, 1, "", "decorrelate"], [132, 3, 1, "", "encoding"], [132, 2, 1, "", "from_dict"], [132, 2, 1, "", "from_json"], [132, 6, 1, "", "is_continuous"], [132, 6, 1, "", "is_discrete"], [132, 2, 1, "", "is_in_range"], [132, 3, 1, "", "is_numerical"], [132, 3, 1, "", "name"], [132, 2, 1, "", "summary"], [132, 2, 1, "", "to_dict"], [132, 2, 1, "", "to_json"], [132, 2, 1, "", "to_searchspace"], [132, 2, 1, "", "to_subspace"], [132, 2, 1, "", "transform"], [132, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[132, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[132, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[132, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[132, 4, 1, "", "series"]], "baybe.parameters.enum": [[134, 1, 1, "", "CategoricalEncoding"], [135, 1, 1, "", "CustomEncoding"], [136, 1, 1, "", "ParameterEncoding"], [137, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[134, 3, 1, "", "INT"], [134, 3, 1, "", "OHE"], [134, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[135, 3, 1, "", "CUSTOM"], [135, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[137, 3, 1, "", "ATOMPAIR"], [137, 3, 1, "", "AUTOCORR"], [137, 3, 1, "", "AVALON"], [137, 3, 1, "", "BCUT2D"], [137, 3, 1, "", "E3FP"], [137, 3, 1, "", "ECFP"], [137, 3, 1, "", "ELECTROSHAPE"], [137, 3, 1, "", "ERG"], [137, 3, 1, "", "ESTATE"], [137, 3, 1, "", "FUNCTIONALGROUPS"], [137, 3, 1, "", "GETAWAY"], [137, 3, 1, "", "GHOSECRIPPEN"], [137, 3, 1, "", "KLEKOTAROTH"], [137, 3, 1, "", "LAGGNER"], [137, 3, 1, "", "LAYERED"], [137, 3, 1, "", "LINGO"], [137, 3, 1, "", "MACCS"], [137, 3, 1, "", "MAP"], [137, 3, 1, "", "MHFP"], [137, 3, 1, "", "MORDRED"], [137, 3, 1, "", "MORGAN_FP"], [137, 3, 1, "", "MORSE"], [137, 3, 1, "", "MQNS"], [137, 3, 1, "", "PATTERN"], [137, 3, 1, "", "PHARMACOPHORE"], [137, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [137, 3, 1, "", "PUBCHEM"], [137, 3, 1, "", "RDF"], [137, 3, 1, "", "RDKIT"], [137, 3, 1, "", "RDKIT2DDESCRIPTORS"], [137, 3, 1, "", "RDKITFINGERPRINT"], [137, 3, 1, "", "SECFP"], [137, 3, 1, "", "TOPOLOGICALTORSION"], [137, 3, 1, "", "USR"], [137, 3, 1, "", "USRCAT"], [137, 3, 1, "", "VSA"], [137, 3, 1, "", "WHIM"], [137, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[139, 1, 1, "", "NumericalContinuousParameter"], [140, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[139, 2, 1, "", "__init__"], [139, 3, 1, "", "bounds"], [139, 6, 1, "", "comp_rep_columns"], [139, 2, 1, "", "from_dict"], [139, 2, 1, "", "from_json"], [139, 6, 1, "", "is_continuous"], [139, 6, 1, "", "is_discrete"], [139, 2, 1, "", "is_in_range"], [139, 3, 1, "", "is_numerical"], [139, 3, 1, "", "name"], [139, 2, 1, "", "summary"], [139, 2, 1, "", "to_dict"], [139, 2, 1, "", "to_json"], [139, 2, 1, "", "to_searchspace"], [139, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[139, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[139, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[139, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[140, 2, 1, "", "__init__"], [140, 6, 1, "", "comp_df"], [140, 6, 1, "", "comp_rep_columns"], [140, 3, 1, "", "encoding"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 6, 1, "", "is_continuous"], [140, 6, 1, "", "is_discrete"], [140, 2, 1, "", "is_in_range"], [140, 3, 1, "", "is_numerical"], [140, 3, 1, "", "name"], [140, 2, 1, "", "summary"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_json"], [140, 2, 1, "", "to_searchspace"], [140, 2, 1, "", "to_subspace"], [140, 3, 1, "", "tolerance"], [140, 2, 1, "", "transform"], [140, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[140, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[140, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[140, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[140, 4, 1, "", "series"]], "baybe.parameters.substance": [[142, 3, 1, "", "Smiles"], [143, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[143, 2, 1, "", "__init__"], [143, 6, 1, "", "comp_df"], [143, 6, 1, "", "comp_rep_columns"], [143, 3, 1, "", "data"], [143, 3, 1, "", "decorrelate"], [143, 3, 1, "", "encoding"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_json"], [143, 6, 1, "", "is_continuous"], [143, 6, 1, "", "is_discrete"], [143, 2, 1, "", "is_in_range"], [143, 3, 1, "", "is_numerical"], [143, 3, 1, "", "kwargs_conformer"], [143, 3, 1, "", "kwargs_fingerprint"], [143, 3, 1, "", "name"], [143, 2, 1, "", "summary"], [143, 2, 1, "", "to_dict"], [143, 2, 1, "", "to_json"], [143, 2, 1, "", "to_searchspace"], [143, 2, 1, "", "to_subspace"], [143, 2, 1, "", "transform"], [143, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[143, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[143, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[143, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[143, 4, 1, "", "series"]], "baybe.parameters.utils": [[145, 5, 1, "", "get_parameters_from_dataframe"], [146, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[145, 4, 1, "", "df"], [145, 4, 1, "", "factory"], [145, 4, 1, "", "parameters"]], "baybe.parameters.validation": [[148, 5, 1, "", "validate_decorrelation"], [149, 5, 1, "", "validate_is_finite"], [150, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[152, 0, 0, "-", "base"], [154, 0, 0, "-", "basic"]], "baybe.priors.base": [[153, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "from_dict"], [153, 2, 1, "", "from_json"], [153, 2, 1, "", "to_dict"], [153, 2, 1, "", "to_gpytorch"], [153, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[153, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[153, 4, 1, "", "string"]], "baybe.priors.basic": [[155, 1, 1, "", "BetaPrior"], [156, 1, 1, "", "GammaPrior"], [157, 1, 1, "", "HalfCauchyPrior"], [158, 1, 1, "", "HalfNormalPrior"], [159, 1, 1, "", "LogNormalPrior"], [160, 1, 1, "", "NormalPrior"], [161, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[155, 2, 1, "", "__init__"], [155, 3, 1, "", "alpha"], [155, 3, 1, "", "beta"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_gpytorch"], [155, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[155, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[156, 2, 1, "", "__init__"], [156, 3, 1, "", "concentration"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 3, 1, "", "rate"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_gpytorch"], [156, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[156, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[156, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "from_dict"], [157, 2, 1, "", "from_json"], [157, 3, 1, "", "scale"], [157, 2, 1, "", "to_dict"], [157, 2, 1, "", "to_gpytorch"], [157, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[157, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[157, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "from_dict"], [158, 2, 1, "", "from_json"], [158, 3, 1, "", "scale"], [158, 2, 1, "", "to_dict"], [158, 2, 1, "", "to_gpytorch"], [158, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[158, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[158, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "from_dict"], [159, 2, 1, "", "from_json"], [159, 3, 1, "", "loc"], [159, 3, 1, "", "scale"], [159, 2, 1, "", "to_dict"], [159, 2, 1, "", "to_gpytorch"], [159, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[159, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[159, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "from_dict"], [160, 2, 1, "", "from_json"], [160, 3, 1, "", "loc"], [160, 3, 1, "", "scale"], [160, 2, 1, "", "to_dict"], [160, 2, 1, "", "to_gpytorch"], [160, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[160, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[160, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[161, 2, 1, "", "__init__"], [161, 3, 1, "", "a"], [161, 3, 1, "", "b"], [161, 2, 1, "", "from_dict"], [161, 2, 1, "", "from_json"], [161, 3, 1, "", "sigma"], [161, 2, 1, "", "to_dict"], [161, 2, 1, "", "to_gpytorch"], [161, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[161, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[161, 4, 1, "", "string"]], "baybe.recommenders": [[163, 0, 0, "-", "base"], [165, 0, 0, "-", "meta"], [173, 0, 0, "-", "naive"], [175, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[164, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[164, 4, 1, "", "batch_size"], [164, 4, 1, "", "measurements"], [164, 4, 1, "", "objective"], [164, 4, 1, "", "pending_experiments"], [164, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[166, 0, 0, "-", "base"], [168, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[167, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "from_dict"], [167, 2, 1, "", "from_json"], [167, 2, 1, "", "get_current_recommender"], [167, 2, 1, "", "get_next_recommender"], [167, 2, 1, "", "get_non_meta_recommender"], [167, 6, 1, "", "is_stateful"], [167, 2, 1, "", "recommend"], [167, 2, 1, "", "select_recommender"], [167, 2, 1, "", "to_dict"], [167, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[167, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[167, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[169, 1, 1, "", "BaseSequentialMetaRecommender"], [170, 1, 1, "", "SequentialMetaRecommender"], [171, 1, 1, "", "StreamingSequentialMetaRecommender"], [172, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 2, 1, "", "get_current_recommender"], [169, 2, 1, "", "get_next_recommender"], [169, 2, 1, "", "get_non_meta_recommender"], [169, 6, 1, "", "is_stateful"], [169, 2, 1, "", "recommend"], [169, 2, 1, "", "select_recommender"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[169, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 2, 1, "", "get_current_recommender"], [170, 2, 1, "", "get_next_recommender"], [170, 2, 1, "", "get_non_meta_recommender"], [170, 6, 1, "", "is_stateful"], [170, 3, 1, "", "mode"], [170, 2, 1, "", "recommend"], [170, 3, 1, "", "recommenders"], [170, 2, 1, "", "select_recommender"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[170, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 2, 1, "", "get_current_recommender"], [171, 2, 1, "", "get_next_recommender"], [171, 2, 1, "", "get_non_meta_recommender"], [171, 6, 1, "", "is_stateful"], [171, 2, 1, "", "recommend"], [171, 3, 1, "", "recommenders"], [171, 2, 1, "", "select_recommender"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[171, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 2, 1, "", "get_current_recommender"], [172, 2, 1, "", "get_next_recommender"], [172, 2, 1, "", "get_non_meta_recommender"], [172, 3, 1, "", "initial_recommender"], [172, 6, 1, "", "is_stateful"], [172, 2, 1, "", "recommend"], [172, 3, 1, "", "recommender"], [172, 3, 1, "", "remain_switched"], [172, 2, 1, "", "select_recommender"], [172, 3, 1, "", "switch_after"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[172, 4, 1, "", "string"]], "baybe.recommenders.naive": [[174, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[174, 2, 1, "", "__init__"], [174, 6, 1, "", "allow_recommending_already_measured"], [174, 6, 1, "", "allow_recommending_pending_experiments"], [174, 6, 1, "", "allow_repeated_recommendations"], [174, 3, 1, "", "compatibility"], [174, 3, 1, "", "cont_recommender"], [174, 3, 1, "", "disc_recommender"], [174, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[174, 4, 1, "", "batch_size"], [174, 4, 1, "", "measurements"], [174, 4, 1, "", "objective"], [174, 4, 1, "", "pending_experiments"], [174, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[176, 0, 0, "-", "base"], [178, 0, 0, "-", "bayesian"], [185, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[177, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[177, 2, 1, "", "__init__"], [177, 6, 1, "", "allow_recommending_already_measured"], [177, 6, 1, "", "allow_recommending_pending_experiments"], [177, 6, 1, "", "allow_repeated_recommendations"], [177, 3, 1, "", "compatibility"], [177, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[177, 4, 1, "", "batch_size"], [177, 4, 1, "", "measurements"], [177, 4, 1, "", "objective"], [177, 4, 1, "", "pending_experiments"], [177, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[179, 0, 0, "-", "base"], [181, 0, 0, "-", "botorch"], [183, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[180, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[180, 2, 1, "", "__init__"], [180, 3, 1, "", "acquisition_function"], [180, 3, 1, "", "acquisition_function_cls"], [180, 6, 1, "", "allow_recommending_already_measured"], [180, 6, 1, "", "allow_recommending_pending_experiments"], [180, 6, 1, "", "allow_repeated_recommendations"], [180, 3, 1, "", "compatibility"], [180, 2, 1, "", "get_surrogate"], [180, 2, 1, "", "recommend"], [180, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[180, 4, 1, "", "batch_size"], [180, 4, 1, "", "measurements"], [180, 4, 1, "", "objective"], [180, 4, 1, "", "pending_experiments"], [180, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[182, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[182, 2, 1, "", "__init__"], [182, 3, 1, "", "acquisition_function"], [182, 3, 1, "", "acquisition_function_cls"], [182, 6, 1, "", "allow_recommending_already_measured"], [182, 6, 1, "", "allow_recommending_pending_experiments"], [182, 6, 1, "", "allow_repeated_recommendations"], [182, 3, 1, "", "compatibility"], [182, 2, 1, "", "get_surrogate"], [182, 3, 1, "", "hybrid_sampler"], [182, 3, 1, "", "n_raw_samples"], [182, 3, 1, "", "n_restarts"], [182, 2, 1, "", "recommend"], [182, 3, 1, "", "sampling_percentage"], [182, 3, 1, "", "sequential_continuous"], [182, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[182, 4, 1, "", "batch_size"], [182, 4, 1, "", "measurements"], [182, 4, 1, "", "objective"], [182, 4, 1, "", "pending_experiments"], [182, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[184, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[186, 0, 0, "-", "base"], [188, 0, 0, "-", "clustering"], [193, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[187, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[187, 2, 1, "", "__init__"], [187, 6, 1, "", "allow_recommending_already_measured"], [187, 6, 1, "", "allow_recommending_pending_experiments"], [187, 6, 1, "", "allow_repeated_recommendations"], [187, 3, 1, "", "compatibility"], [187, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[187, 4, 1, "", "batch_size"], [187, 4, 1, "", "measurements"], [187, 4, 1, "", "objective"], [187, 4, 1, "", "pending_experiments"], [187, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[189, 1, 1, "", "GaussianMixtureClusteringRecommender"], [190, 1, 1, "", "KMeansClusteringRecommender"], [191, 1, 1, "", "PAMClusteringRecommender"], [192, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[189, 2, 1, "", "__init__"], [189, 6, 1, "", "allow_recommending_already_measured"], [189, 6, 1, "", "allow_recommending_pending_experiments"], [189, 6, 1, "", "allow_repeated_recommendations"], [189, 3, 1, "", "compatibility"], [189, 3, 1, "", "model_cluster_num_parameter_name"], [189, 3, 1, "", "model_params"], [189, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[189, 4, 1, "", "batch_size"], [189, 4, 1, "", "measurements"], [189, 4, 1, "", "objective"], [189, 4, 1, "", "pending_experiments"], [189, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[190, 2, 1, "", "__init__"], [190, 6, 1, "", "allow_recommending_already_measured"], [190, 6, 1, "", "allow_recommending_pending_experiments"], [190, 6, 1, "", "allow_repeated_recommendations"], [190, 3, 1, "", "compatibility"], [190, 3, 1, "", "model_cluster_num_parameter_name"], [190, 3, 1, "", "model_params"], [190, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[190, 4, 1, "", "batch_size"], [190, 4, 1, "", "measurements"], [190, 4, 1, "", "objective"], [190, 4, 1, "", "pending_experiments"], [190, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[191, 2, 1, "", "__init__"], [191, 6, 1, "", "allow_recommending_already_measured"], [191, 6, 1, "", "allow_recommending_pending_experiments"], [191, 6, 1, "", "allow_repeated_recommendations"], [191, 3, 1, "", "compatibility"], [191, 3, 1, "", "model_cluster_num_parameter_name"], [191, 3, 1, "", "model_params"], [191, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[191, 4, 1, "", "batch_size"], [191, 4, 1, "", "measurements"], [191, 4, 1, "", "objective"], [191, 4, 1, "", "pending_experiments"], [191, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[192, 2, 1, "", "__init__"], [192, 6, 1, "", "allow_recommending_already_measured"], [192, 6, 1, "", "allow_recommending_pending_experiments"], [192, 6, 1, "", "allow_repeated_recommendations"], [192, 3, 1, "", "compatibility"], [192, 3, 1, "", "model_cluster_num_parameter_name"], [192, 3, 1, "", "model_params"], [192, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[192, 4, 1, "", "batch_size"], [192, 4, 1, "", "measurements"], [192, 4, 1, "", "objective"], [192, 4, 1, "", "pending_experiments"], [192, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[194, 1, 1, "", "FPSRecommender"], [195, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[194, 2, 1, "", "__init__"], [194, 6, 1, "", "allow_recommending_already_measured"], [194, 6, 1, "", "allow_recommending_pending_experiments"], [194, 6, 1, "", "allow_repeated_recommendations"], [194, 3, 1, "", "compatibility"], [194, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[194, 4, 1, "", "batch_size"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[195, 2, 1, "", "__init__"], [195, 6, 1, "", "allow_recommending_already_measured"], [195, 6, 1, "", "allow_recommending_pending_experiments"], [195, 6, 1, "", "allow_repeated_recommendations"], [195, 3, 1, "", "compatibility"], [195, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[195, 4, 1, "", "batch_size"], [195, 4, 1, "", "measurements"], [195, 4, 1, "", "objective"], [195, 4, 1, "", "pending_experiments"], [195, 4, 1, "", "searchspace"]], "baybe.searchspace": [[197, 0, 0, "-", "continuous"], [199, 0, 0, "-", "core"], [204, 0, 0, "-", "discrete"], [210, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[198, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[198, 2, 1, "", "__init__"], [198, 6, 1, "", "comp_rep_bounds"], [198, 6, 1, "", "comp_rep_columns"], [198, 6, 1, "", "constraints_cardinality"], [198, 3, 1, "", "constraints_lin_eq"], [198, 3, 1, "", "constraints_lin_ineq"], [198, 3, 1, "", "constraints_nonlin"], [198, 2, 1, "", "empty"], [198, 2, 1, "", "from_bounds"], [198, 2, 1, "", "from_dataframe"], [198, 2, 1, "", "from_dict"], [198, 2, 1, "", "from_json"], [198, 2, 1, "", "from_parameter"], [198, 2, 1, "", "from_product"], [198, 6, 1, "", "full_factorial"], [198, 2, 1, "", "get_parameters_by_name"], [198, 6, 1, "", "is_empty"], [198, 6, 1, "", "parameter_names"], [198, 3, 1, "", "parameters"], [198, 2, 1, "", "sample_from_full_factorial"], [198, 2, 1, "", "sample_uniform"], [198, 2, 1, "", "samples_full_factorial"], [198, 2, 1, "", "samples_random"], [198, 2, 1, "", "to_dict"], [198, 2, 1, "", "to_json"], [198, 2, 1, "", "to_searchspace"], [198, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[198, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[198, 4, 1, "", "df"], [198, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[198, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[198, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[198, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[198, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[198, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[198, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[200, 1, 1, "", "SearchSpace"], [201, 1, 1, "", "SearchSpaceType"], [202, 5, 1, "", "to_searchspace"], [203, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[200, 2, 1, "", "__init__"], [200, 6, 1, "", "comp_rep_bounds"], [200, 6, 1, "", "comp_rep_columns"], [200, 6, 1, "", "constraints"], [200, 6, 1, "", "constraints_augmentable"], [200, 3, 1, "", "continuous"], [200, 3, 1, "", "discrete"], [200, 2, 1, "", "estimate_product_space_size"], [200, 2, 1, "", "from_dataframe"], [200, 2, 1, "", "from_dict"], [200, 2, 1, "", "from_json"], [200, 2, 1, "", "from_parameter"], [200, 2, 1, "", "from_product"], [200, 2, 1, "", "get_comp_rep_parameter_indices"], [200, 2, 1, "", "get_parameters_by_name"], [200, 6, 1, "", "n_tasks"], [200, 6, 1, "", "parameter_names"], [200, 6, 1, "", "parameters"], [200, 6, 1, "", "task_idx"], [200, 2, 1, "", "to_dict"], [200, 2, 1, "", "to_json"], [200, 2, 1, "", "transform"], [200, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[200, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[200, 4, 1, "", "df"], [200, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[200, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[200, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[200, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[200, 4, 1, "", "constraints"], [200, 4, 1, "", "empty_encoding"], [200, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[200, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[200, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[200, 4, 1, "", "allow_extra"], [200, 4, 1, "", "allow_missing"], [200, 4, 1, "", "data"], [200, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[201, 3, 1, "", "CONTINUOUS"], [201, 3, 1, "", "DISCRETE"], [201, 3, 1, "", "EITHER"], [201, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[205, 1, 1, "", "MemorySize"], [206, 1, 1, "", "SubspaceDiscrete"], [207, 5, 1, "", "parameter_cartesian_prod_pandas"], [208, 5, 1, "", "parameter_cartesian_prod_polars"], [209, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[205, 2, 1, "", "__init__"], [205, 3, 1, "", "comp_rep_bytes"], [205, 6, 1, "", "comp_rep_human_readable"], [205, 3, 1, "", "comp_rep_shape"], [205, 3, 1, "", "exp_rep_bytes"], [205, 6, 1, "", "exp_rep_human_readable"], [205, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[206, 2, 1, "", "__init__"], [206, 3, 1, "", "comp_rep"], [206, 6, 1, "", "comp_rep_bounds"], [206, 6, 1, "", "comp_rep_columns"], [206, 3, 1, "", "constraints"], [206, 2, 1, "", "empty"], [206, 3, 1, "", "empty_encoding"], [206, 2, 1, "", "estimate_product_space_size"], [206, 3, 1, "", "exp_rep"], [206, 2, 1, "", "from_dataframe"], [206, 2, 1, "", "from_dict"], [206, 2, 1, "", "from_json"], [206, 2, 1, "", "from_parameter"], [206, 2, 1, "", "from_product"], [206, 2, 1, "", "from_simplex"], [206, 2, 1, "", "get_candidates"], [206, 2, 1, "", "get_parameters_by_name"], [206, 6, 1, "", "is_empty"], [206, 6, 1, "", "metadata"], [206, 6, 1, "", "parameter_names"], [206, 3, 1, "", "parameters"], [206, 2, 1, "", "to_dict"], [206, 2, 1, "", "to_json"], [206, 2, 1, "", "to_searchspace"], [206, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[206, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[206, 4, 1, "", "df"], [206, 4, 1, "", "empty_encoding"], [206, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[206, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[206, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[206, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[206, 4, 1, "", "boundary_only"], [206, 4, 1, "", "constraints"], [206, 4, 1, "", "max_nonzero"], [206, 4, 1, "", "max_sum"], [206, 4, 1, "", "min_nonzero"], [206, 4, 1, "", "product_parameters"], [206, 4, 1, "", "simplex_parameters"], [206, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[206, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[207, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[208, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[211, 5, 1, "", "get_transform_parameters"], [212, 5, 1, "", "validate_parameter_names"], [213, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[215, 0, 0, "-", "core"], [222, 0, 0, "-", "mixin"], [224, 0, 0, "-", "utils"]], "baybe.serialization.core": [[216, 5, 1, "", "block_deserialization_hook"], [217, 5, 1, "", "block_serialization_hook"], [218, 8, 1, "", "converter"], [219, 5, 1, "", "get_base_structure_hook"], [220, 5, 1, "", "select_constructor_hook"], [221, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[219, 4, 1, "", "base"], [219, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[221, 4, 1, "", "base"], [221, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[223, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[223, 2, 1, "", "from_dict"], [223, 2, 1, "", "from_json"], [223, 2, 1, "", "to_dict"], [223, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[223, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[223, 4, 1, "", "string"]], "baybe.serialization.utils": [[225, 5, 1, "", "deserialize_dataframe"], [226, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[228, 0, 0, "-", "core"], [230, 0, 0, "-", "lookup"], [232, 0, 0, "-", "scenarios"], [234, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[229, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[229, 4, 1, "", "batch_size"], [229, 4, 1, "", "campaign"], [229, 4, 1, "", "impute_mode"], [229, 4, 1, "", "initial_data"], [229, 4, 1, "", "lookup"], [229, 4, 1, "", "n_doe_iterations"], [229, 4, 1, "", "noise_percent"], [229, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[231, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[231, 4, 1, "", "impute_mode"], [231, 4, 1, "", "lookup"], [231, 4, 1, "", "queries"], [231, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[233, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[233, 4, 1, "", "batch_size"], [233, 4, 1, "", "groupby"], [233, 4, 1, "", "impute_mode"], [233, 4, 1, "", "initial_data"], [233, 4, 1, "", "lookup"], [233, 4, 1, "", "n_doe_iterations"], [233, 4, 1, "", "n_mc_iterations"], [233, 4, 1, "", "noise_percent"], [233, 4, 1, "", "random_seed"], [233, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[235, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[235, 4, 1, "", "batch_size"], [235, 4, 1, "", "campaign"], [235, 4, 1, "", "groupby"], [235, 4, 1, "", "lookup"], [235, 4, 1, "", "n_doe_iterations"], [235, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[237, 0, 0, "-", "bandit"], [239, 0, 0, "-", "base"], [243, 0, 0, "-", "custom"], [246, 0, 0, "-", "gaussian_process"], [261, 0, 0, "-", "linear"], [263, 0, 0, "-", "naive"], [265, 0, 0, "-", "ngboost"], [267, 0, 0, "-", "random_forest"], [269, 0, 0, "-", "utils"], [273, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[238, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[238, 2, 1, "", "__init__"], [238, 2, 1, "", "fit"], [238, 2, 1, "", "from_dict"], [238, 2, 1, "", "from_json"], [238, 2, 1, "", "posterior"], [238, 2, 1, "", "posterior_means"], [238, 2, 1, "", "posterior_modes"], [238, 3, 1, "", "prior"], [238, 3, 1, "", "supports_transfer_learning"], [238, 2, 1, "", "to_botorch"], [238, 2, 1, "", "to_dict"], [238, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[238, 4, 1, "", "measurements"], [238, 4, 1, "", "objective"], [238, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[238, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[238, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[238, 4, 1, "", "candidates"]], "baybe.surrogates.base": [[240, 1, 1, "", "IndependentGaussianSurrogate"], [241, 1, 1, "", "Surrogate"], [242, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "fit"], [240, 2, 1, "", "from_dict"], [240, 2, 1, "", "from_json"], [240, 2, 1, "", "posterior"], [240, 3, 1, "", "supports_transfer_learning"], [240, 2, 1, "", "to_botorch"], [240, 2, 1, "", "to_dict"], [240, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[240, 4, 1, "", "measurements"], [240, 4, 1, "", "objective"], [240, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[240, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[240, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[240, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate": [[241, 2, 1, "", "__init__"], [241, 2, 1, "", "fit"], [241, 2, 1, "", "from_dict"], [241, 2, 1, "", "from_json"], [241, 2, 1, "", "posterior"], [241, 3, 1, "", "supports_transfer_learning"], [241, 2, 1, "", "to_botorch"], [241, 2, 1, "", "to_dict"], [241, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[241, 4, 1, "", "measurements"], [241, 4, 1, "", "objective"], [241, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[241, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[241, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[241, 4, 1, "", "candidates"]], "baybe.surrogates.base.SurrogateProtocol": [[242, 2, 1, "", "__init__"], [242, 2, 1, "", "fit"], [242, 2, 1, "", "to_botorch"]], "baybe.surrogates.custom": [[244, 1, 1, "", "CustomONNXSurrogate"], [245, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[244, 2, 1, "", "__init__"], [244, 2, 1, "", "default_model"], [244, 2, 1, "", "fit"], [244, 2, 1, "", "from_dict"], [244, 2, 1, "", "from_json"], [244, 3, 1, "", "onnx_input_name"], [244, 3, 1, "", "onnx_str"], [244, 2, 1, "", "posterior"], [244, 3, 1, "", "supports_transfer_learning"], [244, 2, 1, "", "to_botorch"], [244, 2, 1, "", "to_dict"], [244, 2, 1, "", "to_json"], [244, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[244, 4, 1, "", "measurements"], [244, 4, 1, "", "objective"], [244, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[244, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[244, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[244, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[244, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[247, 0, 0, "-", "core"], [249, 0, 0, "-", "kernel_factory"], [253, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[248, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[248, 2, 1, "", "__init__"], [248, 2, 1, "", "fit"], [248, 2, 1, "", "from_dict"], [248, 2, 1, "", "from_json"], [248, 2, 1, "", "from_preset"], [248, 3, 1, "", "kernel_factory"], [248, 2, 1, "", "posterior"], [248, 3, 1, "", "supports_transfer_learning"], [248, 2, 1, "", "to_botorch"], [248, 2, 1, "", "to_dict"], [248, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[248, 4, 1, "", "measurements"], [248, 4, 1, "", "objective"], [248, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[248, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[248, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[248, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.kernel_factory": [[250, 1, 1, "", "KernelFactory"], [251, 1, 1, "", "PlainKernelFactory"], [252, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[250, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[251, 2, 1, "", "__init__"], [251, 2, 1, "", "from_dict"], [251, 2, 1, "", "from_json"], [251, 3, 1, "", "kernel"], [251, 2, 1, "", "to_dict"], [251, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[251, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[251, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[254, 0, 0, "-", "core"], [257, 0, 0, "-", "default"], [259, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[255, 1, 1, "", "GaussianProcessPreset"], [256, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[255, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[258, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[258, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[260, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[260, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[262, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "fit"], [262, 2, 1, "", "from_dict"], [262, 2, 1, "", "from_json"], [262, 3, 1, "", "model_params"], [262, 2, 1, "", "posterior"], [262, 3, 1, "", "supports_transfer_learning"], [262, 2, 1, "", "to_botorch"], [262, 2, 1, "", "to_dict"], [262, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[262, 4, 1, "", "measurements"], [262, 4, 1, "", "objective"], [262, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[262, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[262, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[262, 4, 1, "", "candidates"]], "baybe.surrogates.naive": [[264, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "fit"], [264, 2, 1, "", "from_dict"], [264, 2, 1, "", "from_json"], [264, 2, 1, "", "posterior"], [264, 3, 1, "", "supports_transfer_learning"], [264, 2, 1, "", "to_botorch"], [264, 2, 1, "", "to_dict"], [264, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[264, 4, 1, "", "measurements"], [264, 4, 1, "", "objective"], [264, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[264, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[264, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[264, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost": [[266, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[266, 2, 1, "", "__init__"], [266, 2, 1, "", "fit"], [266, 2, 1, "", "from_dict"], [266, 2, 1, "", "from_json"], [266, 3, 1, "", "model_params"], [266, 2, 1, "", "posterior"], [266, 3, 1, "", "supports_transfer_learning"], [266, 2, 1, "", "to_botorch"], [266, 2, 1, "", "to_dict"], [266, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[266, 4, 1, "", "measurements"], [266, 4, 1, "", "objective"], [266, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[266, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[266, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[266, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest": [[268, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[268, 2, 1, "", "__init__"], [268, 2, 1, "", "fit"], [268, 2, 1, "", "from_dict"], [268, 2, 1, "", "from_json"], [268, 3, 1, "", "model_params"], [268, 2, 1, "", "posterior"], [268, 3, 1, "", "supports_transfer_learning"], [268, 2, 1, "", "to_botorch"], [268, 2, 1, "", "to_dict"], [268, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[268, 4, 1, "", "measurements"], [268, 4, 1, "", "objective"], [268, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[268, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[268, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[268, 4, 1, "", "candidates"]], "baybe.surrogates.utils": [[270, 5, 1, "", "batchify_ensemble_predictor"], [271, 5, 1, "", "batchify_mean_var_prediction"], [272, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[270, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[272, 4, 1, "", "cls"], [272, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[274, 5, 1, "", "get_model_params_validator"], [275, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[274, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[275, 4, 1, "", "model_cls"]], "baybe.targets": [[277, 0, 0, "-", "base"], [279, 0, 0, "-", "binary"], [282, 0, 0, "-", "enum"], [285, 0, 0, "-", "numerical"], [287, 0, 0, "-", "transforms"]], "baybe.targets.base": [[278, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[278, 2, 1, "", "__init__"], [278, 2, 1, "", "from_dict"], [278, 2, 1, "", "from_json"], [278, 3, 1, "", "name"], [278, 2, 1, "", "summary"], [278, 2, 1, "", "to_dict"], [278, 2, 1, "", "to_json"], [278, 2, 1, "", "to_objective"], [278, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[278, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[278, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[278, 4, 1, "", "series"]], "baybe.targets.binary": [[280, 1, 1, "", "BinaryTarget"], [281, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[280, 2, 1, "", "__init__"], [280, 3, 1, "", "failure_value"], [280, 2, 1, "", "from_dict"], [280, 2, 1, "", "from_json"], [280, 3, 1, "", "name"], [280, 3, 1, "", "success_value"], [280, 2, 1, "", "summary"], [280, 2, 1, "", "to_dict"], [280, 2, 1, "", "to_json"], [280, 2, 1, "", "to_objective"], [280, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[280, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[280, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[280, 4, 1, "", "series"]], "baybe.targets.enum": [[283, 1, 1, "", "TargetMode"], [284, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[283, 3, 1, "", "MATCH"], [283, 3, 1, "", "MAX"], [283, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[284, 3, 1, "", "BELL"], [284, 3, 1, "", "LINEAR"], [284, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[286, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[286, 2, 1, "", "__init__"], [286, 3, 1, "", "bounds"], [286, 2, 1, "", "from_dict"], [286, 2, 1, "", "from_json"], [286, 3, 1, "", "mode"], [286, 3, 1, "", "name"], [286, 2, 1, "", "summary"], [286, 2, 1, "", "to_dict"], [286, 2, 1, "", "to_json"], [286, 2, 1, "", "to_objective"], [286, 2, 1, "", "transform"], [286, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[286, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[286, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[286, 4, 1, "", "series"]], "baybe.targets.transforms": [[288, 5, 1, "", "bell_transform"], [289, 5, 1, "", "linear_transform"], [290, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[288, 4, 1, "", "arr"], [288, 4, 1, "", "lower"], [288, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[289, 4, 1, "", "arr"], [289, 4, 1, "", "descending"], [289, 4, 1, "", "lower"], [289, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[290, 4, 1, "", "arr"], [290, 4, 1, "", "lower"], [290, 4, 1, "", "upper"]], "baybe.telemetry": [[292, 5, 1, "", "get_user_details"], [293, 5, 1, "", "is_enabled"], [294, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [295, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[294, 4, 1, "", "cached_recommendation"], [294, 4, 1, "", "measurements"], [294, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[295, 4, 1, "", "instrument_name"], [295, 4, 1, "", "value"]], "baybe.utils": [[297, 0, 0, "-", "augmentation"], [300, 0, 0, "-", "basic"], [315, 0, 0, "-", "boolean"], [319, 0, 0, "-", "chemistry"], [324, 0, 0, "-", "conversion"], [327, 0, 0, "-", "dataframe"], [341, 0, 0, "-", "interval"], [346, 0, 0, "-", "memory"], [348, 0, 0, "-", "numerical"], [355, 0, 0, "-", "plotting"], [359, 0, 0, "-", "random"], [362, 0, 0, "-", "sampling_algorithms"], [366, 0, 0, "-", "scaling"], [368, 0, 0, "-", "torch"], [371, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[298, 5, 1, "", "df_apply_dependency_augmentation"], [299, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[298, 4, 1, "", "affected"], [298, 4, 1, "", "causing"], [298, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[299, 4, 1, "", "column_groups"], [299, 4, 1, "", "df"]], "baybe.utils.basic": [[301, 1, 1, "", "Dummy"], [302, 8, 1, "", "UNSPECIFIED"], [303, 1, 1, "", "UnspecifiedType"], [304, 1, 1, "", "classproperty"], [305, 5, 1, "", "find_subclass"], [306, 5, 1, "", "get_baseclasses"], [307, 5, 1, "", "get_subclasses"], [308, 5, 1, "", "group_duplicate_values"], [309, 5, 1, "", "hilberts_factory"], [310, 5, 1, "", "is_all_instance"], [311, 5, 1, "", "match_attributes"], [312, 5, 1, "", "refers_to"], [313, 5, 1, "", "register_hooks"], [314, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[301, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[304, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[306, 4, 1, "", "abstract"], [306, 4, 1, "", "cls"], [306, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[307, 4, 1, "", "abstract"], [307, 4, 1, "", "cls"], [307, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[308, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[311, 4, 1, "", "callable_"], [311, 4, 1, "", "ignore"], [311, 4, 1, "", "object"], [311, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[313, 4, 1, "", "post_hooks"], [313, 4, 1, "", "pre_hooks"], [313, 4, 1, "", "target"]], "baybe.utils.boolean": [[316, 5, 1, "", "check_if_in"], [317, 5, 1, "", "is_abstract"], [318, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[316, 4, 1, "", "allowed"], [316, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[317, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[318, 4, 1, "", "val"]], "baybe.utils.chemistry": [[320, 5, 1, "", "get_canonical_smiles"], [321, 5, 1, "", "get_fingerprint_class"], [322, 5, 1, "", "name_to_smiles"], [323, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[321, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[322, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[323, 4, 1, "", "encoding"], [323, 4, 1, "", "kwargs_conformer"], [323, 4, 1, "", "kwargs_fingerprint"], [323, 4, 1, "", "prefix"], [323, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[325, 5, 1, "", "fraction_to_float"], [326, 5, 1, "", "nonstring_to_tuple"]], "baybe.utils.conversion.fraction_to_float.params": [[325, 4, 1, "", "value"]], "baybe.utils.dataframe": [[328, 5, 1, "", "add_fake_measurements"], [329, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [330, 5, 1, "", "add_parameter_noise"], [331, 5, 1, "", "arrays_to_dataframes"], [332, 5, 1, "", "create_fake_input"], [333, 5, 1, "", "df_drop_single_value_columns"], [334, 5, 1, "", "df_drop_string_columns"], [335, 5, 1, "", "df_uncorrelated_features"], [336, 5, 1, "", "filter_df"], [337, 5, 1, "", "fuzzy_row_match"], [338, 5, 1, "", "get_transform_objects"], [339, 5, 1, "", "pretty_print_df"], [340, 5, 1, "", "to_tensor"]], "baybe.utils.dataframe.add_fake_measurements.params": [[328, 4, 1, "", "bad_intervals"], [328, 4, 1, "", "data"], [328, 4, 1, "", "good_intervals"], [328, 4, 1, "", "good_reference_values"], [328, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[329, 4, 1, "", "df"], [329, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[330, 4, 1, "", "data"], [330, 4, 1, "", "noise_level"], [330, 4, 1, "", "noise_type"], [330, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[331, 4, 1, "", "input_labels"], [331, 4, 1, "", "output_labels"], [331, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[332, 4, 1, "", "**kwargs"], [332, 4, 1, "", "n_rows"], [332, 4, 1, "", "parameters"], [332, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[333, 4, 1, "", "df"], [333, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[334, 4, 1, "", "df"], [334, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[335, 4, 1, "", "df"], [335, 4, 1, "", "exclude_list"], [335, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[336, 4, 1, "", "complement"], [336, 4, 1, "", "df"], [336, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[337, 4, 1, "", "left_df"], [337, 4, 1, "", "parameters"], [337, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[338, 4, 1, "", "allow_extra"], [338, 4, 1, "", "allow_missing"], [338, 4, 1, "", "df"], [338, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[339, 4, 1, "", "df"], [339, 4, 1, "", "max_columns"], [339, 4, 1, "", "max_colwidth"], [339, 4, 1, "", "max_rows"], [339, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[340, 4, 1, "", "*x"]], "baybe.utils.interval": [[342, 7, 1, "", "InfiniteIntervalError"], [343, 1, 1, "", "Interval"], [344, 5, 1, "", "convert_bounds"], [345, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[342, 2, 1, "", "__init__"], [342, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[343, 2, 1, "", "__init__"], [343, 6, 1, "", "center"], [343, 2, 1, "", "contains"], [343, 2, 1, "", "create"], [343, 2, 1, "", "from_dict"], [343, 2, 1, "", "from_json"], [343, 6, 1, "", "is_bounded"], [343, 6, 1, "", "is_degenerate"], [343, 6, 1, "", "is_fully_unbounded"], [343, 6, 1, "", "is_half_bounded"], [343, 6, 1, "", "is_left_bounded"], [343, 6, 1, "", "is_right_bounded"], [343, 3, 1, "", "lower"], [343, 2, 1, "", "to_dict"], [343, 2, 1, "", "to_json"], [343, 2, 1, "", "to_ndarray"], [343, 2, 1, "", "to_tensor"], [343, 2, 1, "", "to_tuple"], [343, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[343, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[343, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[343, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[344, 4, 1, "", "bounds"]], "baybe.utils.memory": [[347, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[347, 4, 1, "", "num"]], "baybe.utils.numerical": [[349, 3, 1, "", "DTypeFloatNumpy"], [350, 3, 1, "", "DTypeFloatONNX"], [351, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [352, 5, 1, "", "closer_element"], [353, 5, 1, "", "closest_element"], [354, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[352, 4, 1, "", "target"], [352, 4, 1, "", "x"], [352, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[353, 4, 1, "", "array"], [353, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[354, 4, 1, "", "arr"], [354, 4, 1, "", "weights"]], "baybe.utils.plotting": [[356, 5, 1, "", "create_example_plots"], [357, 5, 1, "", "indent"], [358, 5, 1, "", "to_string"]], "baybe.utils.plotting.create_example_plots.params": [[356, 4, 1, "", "ax"], [356, 4, 1, "", "base_name"], [356, 4, 1, "", "path"]], "baybe.utils.plotting.to_string.params": [[358, 4, 1, "", "*fields"], [358, 4, 1, "", "header"], [358, 4, 1, "", "single_line"]], "baybe.utils.random": [[360, 5, 1, "", "set_random_seed"], [361, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[360, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[361, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[363, 1, 1, "", "DiscreteSamplingMethod"], [364, 5, 1, "", "farthest_point_sampling"], [365, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[363, 3, 1, "", "FPS"], [363, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[364, 4, 1, "", "initialization"], [364, 4, 1, "", "n_samples"], [364, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[365, 4, 1, "", "df"], [365, 4, 1, "", "method"], [365, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[367, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[367, 2, 1, "", "__init__"], [367, 2, 1, "", "fit"], [367, 3, 1, "", "mapping"], [367, 2, 1, "", "transform"]], "baybe.utils.torch": [[369, 8, 1, "", "DTypeFloatTorch"], [370, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[372, 5, 1, "", "finite_float"], [373, 5, 1, "", "non_inf_float"], [374, 5, 1, "", "non_nan_float"], [375, 5, 1, "", "validate_not_nan"], [376, 5, 1, "", "validate_parameter_input"], [377, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[376, 4, 1, "", "data"], [376, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [376, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[377, 4, 1, "", "data"], [377, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 182, 198, 200, 206, 223, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 309, 340, 343, 378, 381, 388, 392, 395, 396, 399, 400, 402, 403, 404, 405, 406, 412, 416, 417, 418, 421, 422, 423, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442], "0": [8, 19, 31, 41, 42, 48, 97, 132, 140, 143, 161, 169, 170, 171, 182, 206, 229, 231, 288, 289, 290, 298, 299, 318, 329, 330, 335, 336, 350, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 403, 405, 407, 409, 410, 411, 413, 414, 415, 417, 418, 421, 426, 427, 430, 434, 435, 437, 438, 439, 441, 444], "00": [411, 437], "000": [392, 413], "001": [329, 430], "0013265889999729552": 395, "001412": 403, "005": [380, 381, 382, 384, 385], "007771": 407, "01": [161, 387, 388, 393, 396, 410, 411, 418], "02": 418, "021": [260, 335], "021669": 403, "023821": 409, "028710": 403, "03213": [260, 335], "049229": 403, "05": 418, "051506": 411, "053246": 410, "055949": 403, "056616": 409, "057": [380, 381, 382, 384, 385, 395], "06": [206, 272], "08": 418, "084687": 403, "087665": 411, "089218": 403, "091097": 403, "09653736976391157": 405, "0f": 396, "1": [23, 28, 41, 97, 118, 132, 143, 172, 182, 198, 229, 231, 233, 235, 288, 289, 290, 295, 298, 299, 308, 318, 330, 332, 336, 350, 354, 364, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 403, 405, 407, 409, 410, 411, 413, 414, 415, 417, 418, 421, 422, 426, 429, 430, 434, 435, 437, 438, 439, 441, 444], "10": [182, 231, 260, 335, 379, 381, 390, 391, 392, 393, 396, 399, 400, 402, 403, 405, 407, 409, 413, 414, 415, 417, 418, 421, 428, 435, 439, 444], "100": [385, 390, 391, 392, 393, 396, 399, 400, 402, 403, 407, 413, 418, 433, 434, 435, 439, 441, 444], "1000": 439, "102": 410, "1024": [137, 423, 435], "1038": [260, 335], "105": [380, 381, 382, 384, 385, 395, 407, 437], "11": [304, 402, 403, 407, 422], "110776": 409, "111": 413, "1147": 392, "1148": 392, "1149": 392, "1150": 392, "12": [384, 402, 403, 411, 424, 437], "120": [380, 381, 382, 384, 385, 390, 392, 395, 435], "120000": 410, "122": 413, "123349": 403, "126": [390, 392, 393, 422], "126186": 407, "1268824": [380, 381, 382], "128": 10, "13": [402, 403, 411, 417, 437], "130": 384, "133125": 409, "1337": [396, 397, 444], "134": 407, "135": 411, "14": [402, 403, 437], "14448993259018328": 405, "1454": 423, "15": [231, 384, 392, 402, 403, 417, 418, 421, 429, 437], "150": [390, 393, 430], "1500": 435, "150399": 403, "151": [392, 411], "153": [380, 381, 382, 384, 385, 395], "153620": 403, "157694": 409, "16": [339, 350, 402, 403], "160": 410, "161985": 411, "162468": 409, "17": [402, 403], "176": 410, "177": 413, "18": [402, 403, 429], "180": 390, "188": 413, "189731": 403, "189767": 403, "19": [402, 403], "191147": 403, "192": 392, "193940": 411, "197301": 403, "1e": [206, 272], "2": [8, 19, 97, 99, 118, 231, 298, 299, 308, 328, 336, 354, 364, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 396, 397, 399, 400, 402, 403, 405, 407, 409, 410, 411, 413, 414, 415, 417, 418, 421, 426, 429, 430, 434, 435, 437, 438, 439, 441], "20": [143, 231, 379, 380, 381, 382, 396, 397, 402, 403, 407, 423, 435, 442, 444], "200": [381, 390, 392, 399, 400, 405, 413], "2004": 426, "2007": 442, "2021": 381, "2022": 421, "2025": 421, "202829": 407, "206337": 409, "208712": 411, "21": [402, 411, 414], "214": 410, "215205": 403, "219": 385, "22": [402, 407], "220": 407, "221": 423, "222": 413, "23": [402, 403, 439], "24": [391, 402, 403, 437], "241": 435, "244": 407, "246732": 403, "248": 407, "249": 407, "25": [396, 402, 417, 437], "250": 427, "26": [402, 411, 437], "27": [402, 407, 437], "271697": 403, "274880": 403, "276": 407, "277": 407, "278": 407, "279": 407, "28": [402, 403, 407], "280": 407, "287120": 403, "29": [402, 421], "292379": 403, "295529": 411, "298303": 403, "298323": 409, "3": [231, 298, 299, 304, 308, 336, 339, 357, 380, 381, 382, 385, 388, 390, 391, 392, 393, 395, 397, 400, 402, 403, 405, 407, 409, 410, 411, 413, 414, 417, 418, 421, 422, 424, 426, 429, 430, 433, 435, 437, 438, 439, 441, 442], "30": [379, 393, 397, 402, 435], "300753": 407, "302681": 403, "306611": 409, "3078f3": 423, "31": [402, 414], "312739": 407, "313764": 409, "319": 384, "32": [391, 402, 403, 435], "327049": 403, "328": 385, "33": [391, 402, 407], "34": 391, "345863": 407, "346493": 403, "35": [391, 402], "359634": 403, "360189": 403, "364760": 411, "371061": 409, "373548": 407, "376050": 410, "379358": 403, "38": 407, "381304": 403, "383498": 409, "384542": 385, "386": 385, "388320": 409, "389625": 403, "39": [407, 435], "392463": 407, "397875": 403, "3d": 397, "4": [137, 298, 299, 339, 387, 388, 390, 391, 392, 393, 397, 402, 403, 405, 407, 409, 410, 411, 421, 426, 429, 430, 435, 437], "40": [402, 434, 435], "400093": 403, "401492": 409, "404577": 411, "40x": 423, "410635": 407, "415698": 409, "42": 405, "426149": 403, "435591": 409, "438734": 403, "44": 407, "447": 390, "448": 390, "449": 390, "45": [402, 407, 441], "450": 390, "450708": 403, "459368": 407, "461164": 403, "468": 423, "47": 403, "471296": 385, "472840": 384, "473471": 403, "478834": 407, "48": 407, "488210": 407, "488972": 403, "489746": 407, "494523": 403, "495533": 409, "4x": 423, "5": [97, 143, 298, 299, 380, 382, 385, 387, 390, 391, 392, 393, 396, 399, 400, 402, 403, 407, 409, 410, 411, 413, 414, 415, 417, 418, 421, 426, 427, 428, 429, 430, 435, 437, 439, 442, 444], "50": [393, 400, 402, 405, 417, 418, 426, 427, 435, 437, 441], "500": [397, 435], "5066666666666667": 405, "51": [403, 407], "510372": 409, "511494": 407, "52": [403, 407], "53": [403, 407], "5313": 314, "531345": 407, "54": [403, 407, 411, 421], "541818": 403, "547440": 407, "55": [407, 441], "550704": 403, "551375": 403, "552369": 407, "553713": 403, "554027": 403, "56": [407, 439], "560396": 409, "562194": 409, "577057": 411, "582086": 409, "585761": 407, "588115": 407, "589238": 409, "59": [413, 421], "590": 381, "592256": 407, "599255": 407, "6": [298, 299, 339, 380, 381, 382, 390, 391, 392, 393, 402, 403, 405, 407, 409, 411, 413, 426, 430, 437], "60": [407, 434], "605098": 407, "605468": 407, "609001": 403, "610135": 403, "614168": 403, "62": [405, 407], "623634": 403, "624618": 403, "638265": 403, "64": 182, "641958": 409, "643054": 407, "643620": 407, "65": 405, "650082": 411, "66": 407, "66368270ffd51418ec58bd793f2d9b1b": 442, "667808": 411, "668459": 409, "677834": 403, "68": 403, "69": [380, 381, 382, 403, 407], "696943": 407, "7": [143, 298, 299, 335, 391, 393, 397, 402, 403, 407, 409, 417, 426, 435, 437], "70": 402, "701740": 407, "703747": 407, "706667": 410, "706955": 409, "709860": 403, "71": 435, "711637": 403, "716336": 407, "72": 407, "722548": 409, "725806": 409, "728314": 409, "73": 403, "730442": 410, "738885": 403, "745": 444, "745338": 384, "746982": 403, "75": [402, 403, 407, 410, 437], "757872": 407, "76": 403, "762933": 403, "764556": 409, "765543": 409, "767142": 403, "768805": 409, "769025": 407, "778": 413, "79": 421, "7gz": 435, "7hf": 435, "8": [299, 380, 382, 390, 392, 393, 402, 403, 405, 407, 409, 421, 426, 430], "80": [403, 430], "801257": 403, "801522": 403, "808915": 407, "810519": 403, "819964": 403, "820230": 409, "821195": 409, "821763": 409, "827343": 407, "828317": 407, "83": 407, "834197": 403, "8389": 314, "8417": 314, "85": 407, "850905": 407, "851187": 403, "857": 392, "861": 393, "861753": 403, "862": 393, "862410": 411, "863": 393, "864": 393, "864663": 403, "867601": 403, "869919": 409, "87": 413, "870754": 403, "879805": 403, "88": 413, "8859": 399, "889": 413, "89": [381, 410, 413], "893909": 407, "898270": 403, "899464": 403, "8jq": 435, "9": [393, 397, 399, 402, 403, 407, 409, 426, 429, 437, 438], "90": [380, 381, 382, 384, 385, 395, 413, 437], "908438": 403, "91": 407, "910112": 403, "914477": 403, "923900": 409, "925957": 409, "926627": 403, "929409": 403, "940864": 409, "942312": 409, "946225": 403, "95": 407, "951243": 385, "96": 381, "969693": 403, "973061": 403, "973165": 403, "980426": 409, "990109": 403, "999": 430, "A": [0, 23, 28, 35, 37, 38, 39, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 69, 70, 71, 72, 75, 78, 80, 85, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 115, 117, 118, 122, 126, 129, 130, 132, 140, 143, 145, 154, 155, 156, 157, 158, 159, 160, 161, 164, 170, 171, 172, 174, 177, 180, 182, 184, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 207, 208, 223, 224, 229, 231, 233, 235, 238, 240, 241, 244, 248, 250, 251, 258, 260, 262, 264, 266, 268, 274, 278, 280, 286, 288, 289, 290, 298, 304, 306, 307, 308, 311, 321, 328, 335, 336, 338, 347, 354, 362, 364, 367, 379, 391, 400, 402, 403, 405, 407, 414, 415, 420, 422, 423, 424, 426, 430, 432, 433, 435, 436, 437, 438, 441, 442], "AND": [51, 392, 426, 430], "AS": [421, 426], "And": 399, "As": [380, 381, 382, 397, 405, 407, 417, 418, 421, 422, 423, 430, 433, 436, 437, 439], "At": 441, "But": 441, "By": [85, 117, 130, 145, 206, 317, 336, 403, 424, 428, 431, 432, 436, 437], "FOR": 426, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 85, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 151, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 206, 229, 235, 238, 240, 241, 242, 244, 248, 251, 258, 260, 262, 264, 266, 268, 278, 280, 286, 291, 313, 337, 343, 356, 367, 380, 381, 382, 384, 385, 391, 395, 396, 397, 402, 403, 405, 407, 411, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "If": [6, 13, 28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 85, 89, 112, 117, 118, 122, 145, 149, 150, 170, 171, 174, 198, 200, 206, 212, 213, 229, 231, 233, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 289, 294, 299, 306, 307, 311, 313, 316, 318, 321, 325, 328, 329, 330, 332, 335, 336, 337, 338, 356, 358, 364, 365, 376, 377, 385, 387, 396, 402, 410, 411, 414, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 444], "In": [28, 42, 54, 182, 200, 227, 229, 311, 339, 380, 381, 382, 384, 396, 397, 399, 402, 403, 405, 407, 410, 411, 414, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "It": [23, 164, 171, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 227, 243, 264, 328, 380, 384, 385, 391, 400, 402, 405, 407, 411, 413, 414, 415, 417, 421, 428, 429, 430, 431, 432, 435, 436, 437, 439, 444], "Its": [231, 399], "No": [337, 409, 420, 423], "Not": [426, 430], "OF": [421, 426], "OR": [421, 426], "Of": [385, 394, 419, 438], "On": [399, 405], "One": [134, 380, 382, 421], "Or": 431, "Such": [385, 430, 433, 439], "That": [200, 231, 238, 240, 241, 244, 248, 262, 264, 266, 268, 289, 385, 390, 402, 424, 437, 439, 442], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 85, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 118, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 151, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 206, 218, 219, 221, 223, 227, 229, 231, 233, 238, 240, 241, 242, 244, 248, 251, 262, 264, 266, 268, 270, 272, 274, 275, 278, 280, 283, 286, 288, 289, 290, 292, 294, 295, 298, 299, 304, 306, 307, 308, 311, 313, 316, 317, 318, 321, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 347, 352, 353, 354, 356, 358, 360, 361, 364, 365, 376, 377, 380, 381, 382, 385, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 407, 410, 411, 415, 417, 418, 420, 422, 423, 424, 426, 429, 430, 431, 433, 434, 435, 436, 437, 440, 441, 443, 444], "Then": 397, "There": [74, 272, 350, 402, 409, 421, 422, 424, 428, 432, 437], "These": [292, 378, 381, 382, 383, 386, 389, 394, 398, 401, 404, 406, 408, 412, 416, 424, 428, 430, 431, 435, 437], "To": [380, 385, 396, 397, 403, 405, 413, 417, 418, 421, 422, 424, 428, 429, 431, 432, 435, 439], "Will": 427, "With": [328, 396, 397, 402, 405, 417, 418, 421, 428, 430, 435, 438], "_": [149, 150, 203, 209, 216, 356, 387, 396, 418], "__class__": [395, 405], "__excepthook__": 422, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 206, 238, 240, 241, 242, 244, 248, 250, 251, 258, 260, 262, 264, 266, 268, 278, 280, 286, 301, 304, 342, 343, 367, 437, 438], "__name__": [395, 405], "__new__": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 134, 135, 137, 342], "__str__": 423, "__version__": 423, "_amount": 402, "_arraylik": 331, "_c": 307, "_cumbest": 229, "_default_my_attribut": 424, "_fit": 275, "_has_switch": 172, "_iterbest": 229, "_label": 402, "_measur": 229, "_n_last_measur": [169, 170, 171], "_nbase": 323, "_nestedsequ": [118, 288, 289, 290, 353], "_no_tl": 417, "_option": 423, "_posterior": 275, "_step": [169, 170, 171], "_supportsarrai": [118, 288, 289, 290, 353], "_surrogate_model": [396, 397], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 198, 200, 206, 211, 219, 220, 223, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 308, 309, 310, 326, 338, 343], "_target": 423, "_tparamet": 145, "_tsurrog": 271, "_u": 308, "_validate_my_attribut": 424, "_was_us": [169, 170, 171], "a1": 299, "a2": 299, "ab": [393, 402], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 305, 312, 423, 443], "abc": [21, 31, 32, 33, 34, 35, 37, 92, 93, 94, 112, 126, 127, 153, 167, 177, 180, 187, 192, 240, 241, 278, 317], "abil": [427, 432, 442], "abl": [397, 422, 428, 430, 435, 438, 444], "about": [8, 23, 28, 127, 143, 278, 295, 380, 381, 382, 402, 410, 411, 421, 423, 424, 433, 435, 437], "abov": [272, 290, 317, 335, 379, 385, 392, 393, 395, 396, 403, 409, 421, 424, 426, 427, 428, 429, 430, 431, 432, 435, 438, 439, 442], "absenc": 434, "absolut": [140, 330, 421], "abstract": [21, 31, 32, 33, 34, 35, 37, 92, 93, 94, 112, 125, 126, 127, 153, 167, 177, 180, 187, 241, 278, 306, 307, 317, 423, 430, 442], "abstractli": 405, "acceler": [421, 423, 425, 442], "accept": [28, 170, 248, 331, 396, 397, 423, 426, 431, 434, 435, 439, 441], "access": [198, 206, 238, 240, 241, 244, 248, 262, 264, 266, 268, 380, 381, 382, 390, 395, 418, 423, 430, 438], "accord": [41, 165, 403, 427, 430, 431, 436, 444], "accordingli": [182, 429, 432, 438], "account": 428, "accumul": [155, 405, 442], "accur": 429, "acet": [380, 381, 382, 384, 385], "aceton": 402, "achiev": [18, 206, 397, 402, 405, 421, 424, 427, 429, 430, 432], "ack": 421, "acq_funct": 385, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 396, 397, 405], "acqf1": 438, "acqf2": 438, "acqf_valu": 396, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 64, 71, 180, 182, 390, 391, 392, 393, 396, 397, 405, 407, 413, 421, 423, 427, 436, 438, 440], "acquisition_funct": [180, 182, 385, 405, 414, 415, 423], "acquisition_function_cl": [180, 182, 423], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 23, 25, 26, 180, 182, 405, 438], "across": [402, 405, 417, 428, 436, 442], "act": [402, 423, 426, 430, 439], "action": [18, 395, 405, 420, 423, 443], "activ": [13, 31, 130, 172, 396, 397, 405, 421, 422, 423, 424, 430, 431, 432, 433, 434, 436, 442, 443, 444], "active_dim": [92, 93, 94, 97, 99, 101, 102, 103], "active_valu": [130, 417, 418, 432, 442], "actual": [170, 200, 227, 410, 423, 433, 437, 439, 442, 444], "ad": [28, 206, 294, 298, 328, 364, 402, 403, 420, 424, 427, 431, 432, 434, 435, 440, 441, 443], "adapt": [171, 260, 318, 335], "add": [28, 221, 231, 328, 329, 385, 399, 400, 402, 407, 417, 421, 426, 428, 429, 430, 433, 437, 442, 444], "add_collection3d": 397, "add_fake_measur": [332, 384, 385, 390, 391, 392, 393, 399, 400, 407, 423, 428, 439, 444], "add_fake_result": 423, "add_measur": [28, 332, 384, 385, 387, 388, 390, 391, 392, 393, 397, 399, 400, 405, 407, 410, 411, 421, 423, 428, 429, 431, 432], "add_noise_to_perturb_degenerate_row": 423, "add_parameter_nois": [332, 423, 444], "add_subplot": 397, "addendum": 426, "addit": [28, 85, 112, 117, 122, 170, 182, 200, 221, 229, 231, 233, 330, 332, 380, 381, 382, 403, 410, 418, 421, 423, 425, 426, 429, 430, 431, 433, 434, 435, 437, 438, 439, 442, 444], "addition": [395, 403, 421, 433], "additiveexplain": [83, 86], "additivekernel": 423, "address": 439, "adher": [423, 424], "adjust": [171, 381, 385, 410, 423, 432], "adopt": 385, "adrian": [421, 425], "advanc": [171, 405, 422, 423, 431, 438, 442, 443], "advantag": [402, 424], "advic": 424, "advis": [426, 439], "affect": [28, 50, 182, 298, 395, 413, 420, 422, 430], "affected_paramet": [50, 390, 391, 392, 393, 402, 430], "affili": [421, 431], "afford": 429, "aforement": [200, 431], "after": [172, 313, 384, 385, 390, 391, 392, 393, 397, 407, 413, 421, 429, 433, 438], "afterward": 438, "again": [396, 428, 429, 430, 442], "against": [79, 294, 311, 402, 426, 432, 442], "agent": 403, "agraw": 425, "agre": [421, 426, 433], "agreement": 426, "ai": [90, 151, 350], "aim": [429, 433], "akin": 428, "al": [381, 421, 435], "aldrich": 425, "alex": 425, "alexand": [421, 425], "algorithm": [175, 182, 328, 362, 364, 379, 402, 407, 421, 423, 428, 433, 436], "alia": [142, 184, 435], "alias": 423, "align": [198, 313, 396, 437, 442], "all": [20, 21, 30, 32, 37, 50, 52, 85, 91, 92, 93, 94, 111, 112, 117, 124, 127, 130, 132, 136, 143, 152, 153, 163, 166, 167, 170, 176, 177, 179, 182, 186, 187, 200, 207, 208, 231, 238, 239, 241, 277, 278, 298, 310, 311, 328, 380, 381, 382, 385, 387, 388, 390, 391, 395, 396, 397, 402, 403, 405, 407, 409, 410, 417, 418, 421, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "allclos": [387, 388, 403], "alleg": 426, "allow": [18, 28, 31, 41, 48, 52, 112, 117, 122, 140, 145, 171, 200, 206, 233, 295, 316, 337, 338, 376, 377, 380, 381, 382, 385, 402, 403, 417, 418, 421, 423, 427, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 444], "allow_": [423, 432], "allow_extra": [112, 117, 122, 198, 200, 206, 211, 338, 407, 423], "allow_miss": [112, 117, 122, 198, 200, 206, 211, 338, 423], "allow_recommending_already_measur": [28, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 405, 414, 415, 420, 423, 429], "allow_recommending_already_recommend": [28, 405, 414, 415, 420, 423, 429], "allow_recommending_pending_experi": [28, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 423, 429], "allow_repeated_recommend": [174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 423], "almost": 381, "alon": [423, 426], "along": [354, 426, 435, 442], "alongsid": 426, "alpha": [155, 397], "alphabet": [146, 423], "alreadi": [28, 206, 402, 411, 421, 423, 427, 428, 429, 432, 437, 439, 440, 442, 444], "also": [54, 85, 145, 238, 240, 241, 244, 248, 262, 264, 266, 268, 295, 311, 313, 328, 329, 330, 380, 387, 388, 396, 397, 399, 400, 402, 407, 410, 411, 413, 417, 418, 421, 423, 424, 427, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "alter": [402, 423, 429, 432], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 272, 354, 395, 402, 403, 409, 421, 423, 432, 443, 444], "although": [402, 411, 414, 437, 439], "alwai": [13, 28, 37, 216, 217, 399, 402, 403, 421, 427, 429, 430, 439, 440, 442, 444], "ambigu": [140, 302, 303, 437], "amend": 430, "among": [31, 402, 421, 442], "amount": [299, 357, 365, 403, 417, 418, 428, 433, 435, 444], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 64, 65, 66, 68, 71, 76, 79, 80, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 113, 115, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 219, 221, 223, 227, 229, 231, 233, 238, 240, 241, 244, 245, 248, 251, 262, 264, 266, 268, 270, 271, 278, 280, 286, 298, 302, 303, 309, 311, 313, 316, 322, 326, 335, 336, 337, 339, 342, 343, 344, 353, 356, 358, 364, 365, 380, 382, 383, 385, 392, 393, 395, 396, 399, 400, 403, 407, 409, 413, 414, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "analog": [200, 328, 437, 438], "analogi": [165, 436], "analysi": [421, 433, 440], "analyt": [3, 4, 7, 8, 71, 439, 442], "analyz": [421, 424, 433], "angl": 397, "ani": [58, 59, 85, 118, 125, 126, 127, 129, 130, 132, 143, 145, 148, 149, 150, 216, 217, 221, 225, 226, 233, 262, 266, 268, 288, 289, 290, 295, 298, 310, 311, 313, 314, 316, 317, 332, 337, 343, 345, 353, 358, 372, 373, 374, 375, 377, 395, 402, 417, 418, 420, 421, 422, 423, 424, 426, 429, 431, 432, 435, 438, 439, 442], "annot": [313, 395, 426], "anonym": [421, 431], "anoth": [50, 344, 381, 391, 392, 399, 400, 402, 411, 424, 430, 442], "ansatz": 423, "answer": 429, "anti": 336, "anymor": [423, 442], "anyth": 318, "anywai": 440, "anywher": 387, "apach": [421, 426], "apart": [424, 429], "api": [421, 422, 438], "aplei": 433, "appar": 438, "appdata": 422, "appear": [311, 422, 423, 426, 438], "append": [397, 418], "appendix": 426, "appli": [28, 37, 38, 39, 54, 182, 200, 227, 229, 311, 322, 330, 332, 367, 385, 386, 389, 390, 392, 393, 395, 396, 402, 417, 422, 423, 426, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442], "applic": [358, 421, 424, 426, 435, 436, 439], "approach": [206, 396, 405, 421, 424, 427, 429, 432, 436, 438, 442], "appropri": [44, 45, 109, 206, 405, 424, 426, 432, 437], "approxim": [10, 18, 433], "ar": [6, 12, 14, 28, 31, 35, 37, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 63, 72, 73, 74, 85, 112, 117, 118, 122, 130, 143, 145, 150, 164, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 229, 231, 233, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 290, 292, 294, 295, 298, 299, 306, 307, 308, 310, 311, 313, 317, 318, 328, 329, 331, 332, 333, 337, 338, 356, 364, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 395, 396, 397, 400, 402, 403, 405, 407, 409, 410, 413, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "arang": [387, 397, 435], "arbitrari": [171, 200, 345, 423, 430, 435, 436, 439, 442, 444], "arbitrarili": [434, 438], "architectur": [275, 423, 440, 442], "ard_num_dim": [92, 93, 94, 97, 99, 101, 102, 103], "area": 397, "arg": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 96, 98, 100, 105, 106, 107, 153, 155, 156, 157, 158, 159, 160, 161, 164, 184, 242, 245, 250, 342, 424], "argu": 402, "argument": [65, 80, 85, 90, 143, 145, 151, 167, 169, 170, 171, 172, 198, 206, 242, 313, 332, 336, 385, 400, 407, 423, 430, 433, 435, 436, 437, 438, 439, 442], "aris": [53, 402, 423, 426, 430, 438, 444], "arithmet": [120, 434], "arizona": 425, "arm": [237, 238, 419, 425], "arm_index": 405, "around": [191, 233, 235, 407, 423, 436, 438, 444], "arr": [288, 289, 290, 354], "arrai": [118, 288, 289, 290, 301, 331, 340, 349, 353, 354, 364, 397, 423, 436, 440], "arrays_to_datafram": [387, 388, 397, 410, 411, 417, 418, 423, 439], "arriv": [421, 432], "artifici": 444, "aryl": [380, 381, 382, 384, 421, 435], "ascend": 407, "ask": [402, 421, 423, 424, 429, 432], "aspect": [383, 387, 388, 411, 428, 431], "assembl": [402, 438], "assembli": 443, "assert": [59, 337, 390, 391, 392, 393, 399, 400, 402, 403, 409, 413, 423, 426, 429, 430, 438], "assess": 439, "assign": [328, 396, 403, 409, 435], "associ": [200, 405, 426, 429, 431, 434, 442], "assum": [23, 42, 243, 313, 337, 338, 380, 381, 382, 385, 387, 388, 390, 391, 392, 393, 399, 400, 402, 405, 407, 410, 411, 413, 421, 426, 430, 432, 435, 438, 440, 441, 444], "assumpt": 439, "assur": 430, "asynchron": [421, 429, 443], "atol": [387, 388], "atompair": 137, "atompairfingerprint": 137, "attach": [23, 313, 395, 396, 397, 426], "attempt": [70, 76, 243, 356, 405, 422, 423, 428, 430, 433, 436], "attent": 172, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 85, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 206, 238, 240, 241, 244, 248, 251, 258, 260, 262, 264, 266, 268, 278, 280, 286, 311, 314, 343, 367, 375, 423], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 79, 82, 85, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 120, 122, 125, 126, 127, 129, 130, 132, 134, 135, 137, 139, 140, 141, 143, 145, 148, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 201, 205, 206, 215, 219, 221, 238, 240, 241, 244, 248, 251, 255, 258, 260, 262, 264, 266, 268, 275, 278, 279, 280, 283, 284, 286, 300, 303, 311, 326, 338, 343, 348, 363, 367, 368, 371, 372, 373, 374, 375, 409, 423, 424, 426, 436, 438, 440, 441], "audit": [421, 423, 424], "augment": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 200, 270, 271, 272, 423, 429], "author": 426, "authorship": 426, "auto": [12, 14, 423, 425], "auto_tutori": 350, "autocorr": 137, "autocorrfingerprint": 137, "autodoc": 423, "automat": [28, 115, 182, 248, 379, 397, 410, 422, 423, 424, 433, 434, 436, 437, 442, 443], "avail": [2, 120, 132, 134, 135, 137, 143, 170, 171, 229, 231, 255, 283, 284, 295, 363, 364, 365, 382, 384, 387, 388, 402, 407, 410, 411, 421, 422, 423, 424, 426, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 442, 443], "available_acq_funct": 385, "avalon": 137, "avalonfingerprint": 137, "averag": [264, 396, 397, 418, 435, 439], "avoid": [200, 314, 354, 423, 424, 428, 429, 435, 437], "awai": 441, "awar": [402, 417, 418, 423, 427, 432, 438], "ax": [85, 356, 379, 381, 396, 397, 417, 418], "axes3d": [356, 397], "axi": [198, 229, 354, 379, 387, 388, 393, 396, 397, 402, 403, 405, 407, 410, 411, 417, 418, 437], "azim": 397, "azur": 423, "b": [53, 161, 260, 298, 308, 335, 336, 381, 391, 400, 405, 414, 415, 420, 421, 424, 426, 429, 432, 435, 438], "b1": 299, "b2": 299, "back": [0, 413, 420, 423, 424, 432], "backend": 295, "background": [85, 89, 423, 433], "background_data": 85, "backport": 422, "backtest": [227, 228, 234, 380, 381, 382, 396, 416, 419, 421, 423, 436, 439], "backtick": 424, "backward": [108, 114, 183, 184, 200, 423], "bad": [407, 429, 431, 441], "bad_interv": 328, "badg": 423, "bai": 421, "baird": 425, "balanc": [117, 405, 421], "banana": 424, "bandit": [238, 385, 419, 421, 423, 425], "banner": 423, "bar": [85, 87, 399, 400, 402, 413, 414, 415, 421, 423, 433, 440], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 120, 122, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 168, 169, 170, 171, 172, 174, 177, 180, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 200, 201, 205, 206, 219, 221, 223, 238, 240, 241, 242, 243, 244, 248, 250, 251, 255, 258, 260, 262, 264, 266, 268, 272, 274, 278, 280, 283, 284, 286, 301, 303, 304, 305, 306, 307, 331, 336, 343, 356, 363, 364, 367, 379, 384, 385, 396, 397, 399, 401, 405, 419, 421, 423, 426, 427, 429, 430, 431, 433, 435, 436, 437, 438, 440], "base1": 403, "base2": 403, "base_data": 396, "base_kernel": [105, 106, 107], "base_nam": [356, 379, 381, 396, 397, 417, 418], "base_predictor": 270, "base_smil": 396, "basefingerprinttransform": 321, "baselin": [379, 381, 417, 421, 435], "basesequentialmetarecommend": [170, 171], "bashrc": 431, "basi": [101, 421, 426, 433], "basic": [92, 96, 97, 98, 99, 100, 101, 102, 103, 155, 156, 157, 158, 159, 160, 161, 229, 301, 303, 304, 380, 381, 382, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 407, 410, 411, 412, 413, 416, 419, 423, 424, 432, 434, 435, 439, 443], "basic_transfer_learn": 418, "basickernel": [96, 97, 98, 99, 100, 101, 102, 103, 423], "batch": [28, 164, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 232, 270, 271, 385, 390, 391, 392, 393, 397, 407, 410, 411, 413, 417, 418, 423, 428, 432, 436, 439], "batch_quant": 423, "batch_shap": [92, 93, 94, 97, 99, 101, 102, 103], "batch_siz": [28, 41, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 229, 233, 235, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 403, 405, 407, 410, 411, 413, 414, 417, 418, 421, 423, 428, 429, 431, 432, 439], "batchnr": 407, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 120, 122, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 201, 205, 206, 223, 238, 240, 241, 242, 244, 248, 250, 251, 255, 258, 260, 262, 264, 266, 268, 278, 280, 283, 284, 286, 301, 303, 304, 343, 363, 367, 378, 379, 380, 381, 382, 383, 385, 387, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "baybe_cach": 431, "baybe_cache_dir": [423, 431], "baybe_deactivate_polar": [423, 431], "baybe_debug_fake_hosthash": 423, "baybe_debug_fake_userhash": 423, "baybe_numpy_use_single_precis": [351, 423, 431], "baybe_telemetry_en": [421, 431], "baybe_telemetry_endpoint": [423, 431], "baybe_telemetry_host": 423, "baybe_telemetry_hostnam": [423, 431], "baybe_telemetry_usernam": [423, 431], "baybe_telemetry_vpn_check": [423, 431], "baybe_telemetry_vpn_check_timeout": [423, 431], "baybe_torch_use_single_precis": [370, 423, 431], "bayesian": [0, 174, 180, 182, 227, 229, 233, 235, 243, 262, 405, 423, 427, 429, 433, 440, 443], "bayesian_recommend": 397, "bayesianlinearmodel": 400, "bayesianlinearsurrog": [385, 440], "bayesianrecommend": [174, 182, 243, 423, 436], "bayesianridg": 399, "bcut2d": [137, 423], "bcut2dfingerprint": 137, "bcw07": 442, "becaus": [74, 140, 200, 206, 235, 317, 395, 396, 402, 418, 424, 427, 429, 430, 431, 432, 433, 434, 435, 438, 439, 442], "becom": [200, 402, 423, 427, 429, 430, 438, 441, 444], "been": [23, 70, 71, 170, 238, 240, 241, 244, 248, 262, 264, 266, 268, 337, 380, 381, 421, 422, 423, 426, 428, 429, 436, 442], "beeswarm": [85, 87, 433], "befor": [70, 172, 229, 238, 240, 241, 244, 248, 262, 264, 266, 268, 313, 379, 382, 385, 391, 396, 421, 423, 424, 431, 432, 435, 437], "begin": [170, 390, 392, 409, 413, 436], "behalf": 426, "behav": [397, 413, 438], "behavior": [182, 421, 423, 431, 434, 436, 437, 442], "behind": [434, 438, 439, 441], "being": [107, 328, 356, 405, 422, 423, 430, 431, 435, 437], "bell": [284, 288, 407, 441], "belong": [395, 438], "below": [172, 272, 290, 392, 395, 396, 402, 424, 426, 427, 429, 430, 434, 438, 440, 441, 442], "benchmark": [421, 423, 425], "benefici": [426, 427, 431], "benefit": [430, 442], "benzo": 442, "bernoulli": [238, 404, 419, 425], "besid": [421, 434, 441], "best": [12, 14, 229, 231, 233, 382, 405, 421, 431, 436], "bet": 429, "beta": [8, 19, 155, 238, 385, 423, 427], "betabernoullimultiarmedbanditsurrog": [385, 405, 423], "betaprior": [238, 423], "better": [10, 328, 381, 423, 429, 430, 432, 435], "between": [31, 50, 140, 171, 198, 206, 258, 336, 395, 397, 402, 405, 407, 411, 417, 418, 421, 423, 424, 428, 429, 430, 431, 435, 436, 437, 438, 441, 442], "beyond": [421, 433], "bias": 435, "bin": 402, "binar": 423, "binari": [280, 377, 413, 422, 423, 438], "binarytarget": [281, 405, 423], "bind": [395, 397, 426], "bit": [423, 435], "black": [227, 439, 442], "blackbox": [378, 379, 419], "blank": 424, "blob": 260, "block": [396, 402, 421, 422, 423, 431, 438], "bodi": 395, "bonilla": 442, "bool": [6, 12, 14, 23, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 88, 89, 112, 117, 118, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 211, 238, 240, 241, 244, 248, 262, 264, 266, 268, 280, 281, 288, 289, 290, 293, 306, 307, 311, 312, 317, 318, 331, 336, 338, 343, 353, 358, 376, 405], "boolean": [31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 89, 125, 126, 127, 129, 130, 132, 139, 140, 143, 167, 169, 170, 171, 172, 338, 429, 431], "boost": [266, 418], "both": [10, 145, 200, 206, 235, 290, 313, 379, 391, 396, 399, 402, 403, 405, 407, 417, 418, 421, 424, 427, 430, 433, 435, 437, 438, 441, 444], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 42, 174, 182, 184, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 387, 388, 397, 411, 417, 418, 423, 431, 436], "botorch_acqf": [23, 396, 397], "botorch_function_wrapp": 423, "botorchrecommend": [174, 184, 385, 390, 391, 392, 393, 396, 397, 399, 400, 405, 407, 411, 413, 414, 415, 421, 423, 428, 429, 432, 436], "bottom": 429, "bound": [8, 19, 31, 139, 145, 161, 198, 200, 206, 211, 271, 286, 287, 307, 313, 338, 343, 344, 379, 385, 387, 388, 397, 403, 407, 409, 410, 411, 417, 418, 423, 435, 438, 441, 443, 444], "boundari": [206, 288, 289, 407], "boundary_onli": [206, 402], "bounded": 423, "bounds_transform_func": 423, "box": [161, 227, 439, 442], "brain": [439, 442], "branch": [421, 424], "break": [243, 438], "brettpho": [380, 381, 382, 384, 385], "briefli": [439, 442], "bring": [421, 423], "bro": 260, "broad": 438, "brute": [182, 436], "bu": [380, 381, 382, 384, 385], "bucket": 402, "budget": 429, "bug": [423, 424], "build": [198, 206, 243, 396, 402, 422, 423, 424, 430, 433, 438, 442, 443, 444], "built": [206, 399, 421, 424, 429, 436], "builtin": 304, "bump": 423, "button": 423, "butyl": [380, 381, 382, 384, 385], "butylphenylphosphin": [380, 381, 382, 384, 385], "butyornitril": [380, 381, 382, 384, 385], "bypass": [145, 396], "byte": [118, 205, 244, 288, 289, 290, 347, 353, 423, 444], "c": [53, 298, 308, 380, 381, 382, 384, 385, 390, 391, 392, 393, 400, 402, 414, 415, 421, 422, 426, 429, 432, 435, 437, 438], "c1": [380, 381, 382, 384, 385, 390, 391, 392, 393, 435], "c1c2": [380, 381, 382, 384, 385], "c1ccccc1": [380, 381, 382, 390, 392], "c1ccoc1": 430, "c2": [380, 381, 382, 384, 385, 390, 392, 393], "c2ccccc2": [380, 381, 382], "c2oc": [380, 381, 382, 384, 385], "c2p": [380, 381, 382, 384, 385], "c3": [380, 381, 382, 384, 385, 390, 392], "c3c": [380, 381, 382], "c3ccccc3": [380, 381, 382, 384, 385], "c4": [380, 381, 382, 390, 392], "c4ccccc4": [380, 381, 382, 384, 385], "c5": [390, 392], "c6": [390, 392], "c_g2_min": 403, "c_g3_max": 403, "c_i": 430, "c_total_sum": 403, "cach": [294, 423, 438, 443], "cached_recommend": 294, "calcul": [294, 354, 387, 397, 417, 431, 435, 437], "calibr": 442, "call": [42, 80, 167, 169, 170, 171, 172, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 294, 295, 313, 331, 380, 381, 382, 395, 400, 402, 403, 414, 415, 421, 422, 423, 427, 429, 430, 431, 435, 438, 439, 442, 443], "callabl": [49, 65, 79, 145, 219, 227, 229, 231, 233, 235, 270, 271, 274, 275, 304, 309, 311, 313, 331, 379, 395, 423, 443], "callable_": 311, "campaign": [85, 229, 232, 233, 235, 328, 330, 332, 383, 384, 392, 394, 397, 405, 415, 417, 418, 419, 420, 421, 423, 427, 428, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444], "campaign1": 439, "campaign2": 439, "campaign_json": 429, "campaign_oh": 381, "campaign_rand": [380, 381, 382], "campaign_recr": 413, "campaign_stop": 396, "campaign_with_hook": 396, "campaignstoppedexcept": 396, "can": [13, 18, 23, 28, 31, 37, 38, 39, 53, 85, 126, 132, 140, 143, 164, 171, 174, 175, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 227, 231, 238, 240, 241, 242, 243, 244, 248, 262, 264, 266, 268, 272, 281, 293, 295, 311, 313, 317, 328, 330, 331, 350, 379, 380, 381, 382, 385, 386, 389, 390, 391, 392, 395, 396, 397, 399, 400, 402, 403, 405, 407, 409, 410, 411, 414, 417, 418, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "canada": 425, "candid": [12, 14, 28, 192, 194, 198, 206, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 396, 418, 423, 427, 436, 437, 443], "candidates_comp_rep": 396, "cannot": [13, 78, 79, 243, 244, 272, 318, 356, 405, 423, 426, 428, 430, 431, 435, 436, 438, 440, 442], "canon": [320, 438], "capabl": [378, 404, 406, 412, 416, 418, 423, 425, 429, 442], "captur": 435, "cardin": [31, 41, 48, 58, 59, 198, 423, 425], "cardinalityconstraint": [41, 48, 423], "care": [46, 402, 424, 430, 433, 434], "carefulli": 431, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 71, 233, 379, 381, 382, 396, 405, 417, 418, 423, 428, 439], "carri": [313, 395, 426], "cartesian": [200, 206, 207, 208, 421, 423, 432, 437], "case": [171, 235, 272, 313, 328, 339, 396, 401, 402, 410, 411, 414, 421, 422, 424, 427, 428, 429, 430, 431, 432, 435, 438, 439, 441, 442, 444], "cast": [42, 423], "cat": 336, "cat_1": 407, "cat_1_22": 407, "cat_1_33": 407, "cat_2": 407, "catch_constant_target": 423, "categor": [28, 129, 130, 134, 206, 213, 337, 421, 423, 432, 435, 437, 441], "categori": [381, 396, 421, 423, 438, 441], "categorical_1": [407, 429], "categorical_2": [407, 429], "categorical_paramet": 438, "categorical_parameter_json": 438, "categorical_parameter_reconstruct": 438, "categoricalencod": [129, 130, 390, 391, 392, 393, 407, 413], "categoricalparamet": [130, 206, 381, 390, 391, 392, 393, 400, 405, 407, 413, 414, 415, 421, 423, 432, 433, 437, 438, 443], "cattr": [218, 219, 221, 415, 422, 423, 424], "cauchi": 157, "caus": [140, 298, 304, 423, 426], "caution": 442, "cc": [380, 381, 382, 384, 385, 390, 392, 393, 402, 435, 442], "cc1": [380, 381, 382, 384, 385, 435], "ccc": [390, 392, 400, 421], "cccc": [380, 381, 382, 384, 385, 390, 392], "ccccc": [390, 392, 414, 415], "cccccc": [390, 392], "cccccccco": [430, 435], "ccccoc": [380, 381, 382, 384, 385], "cco": 402, "ccoccoccn": [414, 415], "cdot": [430, 434], "ceil": 396, "cell": [399, 435, 439, 442], "cell_lin": 442, "center": [288, 290, 343, 407, 429], "central": [423, 429], "certain": [28, 50, 79, 172, 219, 221, 227, 295, 310, 328, 357, 391, 396, 405, 421, 424, 430, 432, 433, 436, 438, 442, 444], "cesium": [380, 381, 382, 384, 385], "ch": 357, "chai": 442, "chain": [35, 167, 169, 170, 171, 172, 304, 430], "challeng": [424, 438], "chanc": 422, "chang": [50, 170, 328, 329, 330, 385, 402, 410, 421, 422, 424, 426, 429, 431, 433, 435, 437, 442], "charact": 426, "characterist": 304, "charg": 426, "check": [28, 125, 126, 127, 129, 130, 132, 139, 140, 143, 294, 310, 312, 315, 316, 317, 318, 337, 343, 352, 410, 411, 413, 421, 423, 424, 431, 433, 437, 438], "checker": 423, "checkout": 424, "chem": [421, 423, 435], "chemic": [322, 381, 384, 402, 423, 425, 430, 433, 435, 442], "cheminformat": [143, 421, 423], "chemistri": [132, 390, 392, 393], "child": [189, 190, 191, 192, 424], "chocol": 424, "choic": [229, 231, 364, 395, 402, 405, 411, 423, 430, 432, 434, 435, 436, 437, 438, 441], "choos": [165, 402, 403, 405, 407, 409, 410, 411, 420, 421, 426, 427, 429, 436, 440, 441], "chose": [410, 438], "chosen": [68, 174, 229, 231, 235, 360, 361, 385, 405, 423, 427, 430, 435, 437], "christoph": 442, "ci": [388, 417, 418, 423, 424], "circular": 435, "circumv": [422, 438], "cl": [46, 115, 216, 220, 272, 306, 307, 312, 317, 345], "claim": 426, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 78, 82, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 219, 221, 222, 223, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 300, 301, 303, 304, 305, 306, 307, 312, 317, 321, 341, 343, 358, 362, 363, 366, 367, 385, 395, 396, 399, 405, 414, 423, 429, 430, 433, 434, 435, 436, 437, 438, 440], "classic": [405, 434], "classifi": 435, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 198, 200, 206, 223, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 304, 343, 423], "classvalidationerror": [415, 422], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 125, 126, 127, 129, 130, 132, 139, 140, 143, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 238, 240, 241, 244, 248, 262, 264, 266, 268], "clean": [333, 334, 335, 422, 423, 424], "clear": [350, 442], "click": [405, 435], "clone": 424, "close": [229, 235, 283, 379, 396, 417, 418, 439], "closer": [352, 435], "closest": 353, "closest_el": 423, "closur": [227, 439], "cluster": [189, 190, 191, 192, 385, 423, 425, 443], "clustering_x": 423, "cmap": 397, "cn": [380, 381, 382, 384, 385], "co": 402, "co1": [380, 381, 382], "co2": [380, 381, 382], "co3": [380, 381, 382], "coars": [400, 413, 414, 415, 421], "coc": [400, 414, 415, 421], "cococ": [414, 415], "code": [243, 381, 400, 405, 410, 414, 415, 421, 422, 423, 426, 430, 431, 435, 439, 442, 444], "coeffici": [42, 44, 45, 387, 388, 403, 430], "coerc": 423, "collect": [28, 58, 59, 95, 105, 106, 145, 146, 154, 170, 172, 198, 206, 212, 213, 224, 231, 296, 298, 300, 310, 311, 338, 362, 364, 379, 385, 397, 402, 405, 417, 418, 421, 423, 429, 431], "color": 397, "column": [37, 38, 39, 85, 112, 117, 118, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 229, 231, 233, 235, 298, 299, 329, 331, 333, 334, 335, 336, 337, 338, 339, 367, 376, 377, 381, 384, 390, 391, 392, 393, 396, 402, 407, 413, 417, 418, 423, 429, 437, 438, 439], "column_group": 299, "com": [260, 314, 335, 421, 423], "comb": 402, "combin": [51, 145, 200, 206, 207, 208, 304, 322, 380, 381, 382, 390, 392, 395, 396, 402, 407, 421, 422, 426, 430, 432, 433, 434, 436, 437, 439, 442, 444], "combinatori": 444, "combine_func": 109, "come": [405, 421, 429, 433, 438, 442, 444], "command": 422, "comment": 423, "commerci": 426, "commit": [421, 423, 424], "common": [154, 399, 403, 423, 424, 426, 429, 430, 435, 438], "commonli": 434, "commun": [426, 434, 442], "comp_df": [126, 129, 130, 132, 140, 143, 423], "comp_rep": [206, 397, 399, 423, 437], "comp_rep_bound": [198, 200, 206, 423], "comp_rep_byt": [205, 444], "comp_rep_column": [125, 126, 127, 129, 130, 132, 139, 140, 143, 198, 200, 206, 423], "comp_rep_human_read": [205, 444], "comp_rep_shap": [205, 444], "comp_rep_tensor": [396, 397], "compar": [145, 170, 379, 402, 403, 405, 417, 421, 423, 424, 432, 435, 441], "comparison": [396, 417, 418, 436, 438], "compat": [108, 114, 145, 174, 177, 180, 182, 183, 184, 187, 189, 190, 191, 192, 194, 195, 200, 201, 231, 244, 313, 338, 375, 385, 390, 391, 392, 393, 395, 397, 407, 413, 423, 436], "compens": 423, "compil": [422, 426], "complain": 424, "complaint": 424, "complement": [28, 336, 432], "complet": [397, 402, 428, 430, 432, 434, 438], "complex": [118, 288, 289, 290, 353, 402, 413, 417, 418, 424, 427, 428, 430, 432, 439, 442], "compli": 426, "complianc": 421, "complic": [402, 442], "compon": [63, 402, 403, 424, 427, 429, 430, 431, 432, 438, 442], "compos": [104, 423, 438], "composit": [93, 105, 106, 107], "compositekernel": [105, 106, 107, 423], "compound": 322, "comprehens": [421, 440], "compress": 438, "comput": [23, 28, 75, 85, 89, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 198, 200, 205, 206, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 272, 278, 280, 286, 323, 354, 390, 391, 392, 393, 395, 402, 403, 407, 413, 423, 426, 427, 429, 431, 435, 437, 438, 439, 443, 444], "computation": 182, "concat": [387, 388, 396, 397, 407, 410, 411, 417, 418], "concentr": [155, 156, 380, 381, 382, 384, 385, 390, 395, 396, 430], "concentrati": 390, "concentration_valu": 396, "concept": [298, 402, 434, 435, 438], "concis": 423, "concret": [423, 438], "conda": 423, "condit": [31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 328, 336, 381, 387, 391, 392, 393, 402, 421, 423, 426, 442, 443], "conduct": [28, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 233, 238, 240, 241, 244, 248, 262, 264, 266, 268, 380, 381, 382, 421, 424, 429, 442], "confid": [8, 19, 385], "config": [399, 400, 412, 419, 423, 443], "config_json": 28, "configur": [28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 73, 74, 164, 171, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 227, 229, 235, 238, 240, 241, 242, 244, 248, 254, 262, 264, 266, 268, 328, 356, 364, 383, 384, 402, 408, 411, 415, 421, 422, 423, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 439, 441, 442, 443, 444], "confirm": 397, "conflict": [421, 424, 434], "conform": [143, 323, 435], "confront": [405, 421, 432], "conjunct": 440, "connect": [54, 328, 423, 431, 435, 441], "consequ": [382, 422, 430, 431, 436, 437, 439], "consequenti": 426, "consid": [28, 31, 32, 33, 34, 35, 38, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 117, 130, 170, 200, 233, 328, 337, 338, 379, 402, 405, 407, 417, 418, 421, 423, 424, 428, 430, 432, 433, 434, 435, 438, 444], "consider": [200, 428], "consist": [165, 205, 397, 424, 426, 433], "consol": 422, "consolid": [423, 436], "consortium": 425, "conspicu": 426, "constant": [264, 272, 289, 407, 423, 424, 435, 437], "constitut": 426, "constrain": [423, 430, 441, 442], "constraint": [28, 31, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 127, 198, 200, 206, 301, 399, 400, 407, 413, 414, 415, 419, 421, 423, 425, 431, 435, 443], "constraint_1": 392, "constraint_2": 392, "constraint_3": 392, "constraints_augment": 200, "constraints_cardin": 198, "constraints_lin_eq": 198, "constraints_lin_ineq": 198, "constraints_nonlin": 198, "constru": 426, "construct": [28, 198, 200, 206, 244, 274, 379, 409, 417, 418, 421, 423, 427, 433, 438, 443], "constructor": [189, 190, 191, 192, 200, 220, 262, 266, 268, 402, 409, 414, 415, 423, 427, 429, 432, 434, 435, 443, 444], "consult": 421, "consum": [170, 395], "consumpt": 431, "cont_ind": 411, "cont_indic": [410, 411], "cont_paramet": 411, "cont_recommend": [174, 411], "contact": [421, 425], "contain": [28, 31, 37, 38, 39, 59, 62, 67, 85, 112, 117, 118, 122, 126, 129, 130, 132, 140, 143, 145, 149, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 207, 208, 212, 227, 229, 231, 233, 238, 240, 241, 244, 248, 262, 264, 266, 268, 278, 280, 286, 288, 289, 290, 298, 299, 313, 323, 328, 330, 336, 337, 343, 354, 356, 358, 364, 376, 377, 381, 382, 396, 397, 403, 405, 411, 417, 418, 422, 423, 424, 426, 429, 430, 432, 433, 436, 437, 438, 439, 444], "content": [145, 170, 200, 231, 329, 365, 423, 426, 438], "context": [167, 169, 170, 171, 172, 227, 242, 361, 395, 405, 409, 417, 418, 423, 429, 432, 433, 435, 438, 439, 442, 444], "contextu": 442, "continu": [10, 13, 23, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 67, 125, 126, 127, 129, 130, 132, 139, 140, 143, 174, 182, 198, 200, 201, 206, 207, 208, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 385, 387, 390, 391, 392, 393, 403, 407, 408, 411, 413, 419, 421, 423, 429, 431, 432, 436, 438, 439, 443], "continuous_subspac": 437, "continuouscardinalityconstraint": [58, 198, 423], "continuousconstraint": [34, 42, 198, 423, 430, 432], "continuouslinearconstraint": [198, 387, 388, 403, 423, 443], "continuouslinearequalityconstraint": 423, "continuouslinearinequalityconstraint": 423, "continuousnonlinearconstraint": [41, 198, 423], "continuousparamet": [139, 198, 423], "contract": 426, "contrast": [206, 317, 403, 405, 428, 432], "contribut": [421, 423, 426, 444], "contributor": [421, 426], "contributori": 426, "control": [13, 18, 145, 155, 182, 198, 206, 338, 407, 410, 421, 423, 426, 427, 431, 434, 435, 436, 441, 443], "convei": 438, "conveni": [423, 437, 438], "convent": 200, "converg": 433, "convers": [28, 171, 399, 409, 423, 426, 433, 443], "convert": [25, 113, 202, 215, 314, 318, 322, 325, 326, 339, 340, 344, 347, 350, 400, 414, 415, 423, 429, 431, 438, 439], "convert_sklearn": 399, "convert_sklearn_bayesian_ridg": 399, "cooki": 424, "coordin": 364, "copi": [396, 421, 423, 426, 444], "copyright": [421, 426], "core": [28, 198, 200, 201, 206, 233, 235, 238, 240, 241, 242, 244, 248, 255, 262, 264, 266, 268, 385, 421, 423, 432, 441], "coregion": 442, "coretest": [423, 424], "corpu": 435, "correct": [28, 275, 397, 421, 423, 424, 438], "correctli": [402, 411, 423], "correl": [132, 143, 335, 435, 442], "correspond": [23, 28, 41, 112, 117, 122, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 219, 227, 229, 231, 238, 240, 241, 244, 248, 262, 264, 266, 268, 288, 294, 313, 316, 318, 321, 322, 328, 331, 332, 338, 339, 376, 377, 379, 384, 385, 402, 405, 411, 417, 418, 421, 423, 424, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "correspondingli": 28, "corrupt": 330, "cost": [381, 405], "costli": [200, 203, 209, 429], "could": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 140, 325, 385, 395, 396, 402, 403, 418, 423, 428, 430, 435, 439, 441, 442], "count": [295, 396, 402, 430], "counterclaim": 426, "counterpart": [313, 437], "coupl": 397, "cours": [417, 418, 424, 438, 442], "cov": [423, 424], "cover": [317, 328, 432], "coverag": [423, 424], "cp": [380, 381, 382], "craft": 439, "crash": [422, 423], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 85, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 198, 200, 206, 207, 208, 223, 231, 238, 240, 241, 242, 244, 248, 251, 256, 262, 264, 266, 268, 278, 280, 286, 328, 331, 332, 343, 356, 358, 364, 384, 395, 396, 397, 402, 403, 411, 412, 419, 420, 421, 422, 423, 424, 430, 431, 432, 433, 438, 439, 440, 441, 443, 444], "create_example_plot": [379, 381, 396, 397, 417, 418], "create_from_config": [399, 400], "create_pi_plot": 397, "creation": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 145, 203, 206, 209, 391, 393, 399, 400, 437, 438, 443], "criteria": 397, "criterion": [396, 427], "critic": 423, "cross": [417, 426], "crucial": [421, 441], "cube": 430, "cuda": 422, "cultur": [435, 442], "curran": 442, "current": [10, 28, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 233, 235, 243, 293, 350, 396, 397, 402, 427, 429, 430, 431, 432, 435, 439, 441, 442, 444], "curv": [288, 397, 407, 430, 441], "custom": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 125, 126, 127, 129, 130, 132, 135, 139, 140, 143, 145, 244, 275, 278, 280, 286, 313, 339, 378, 385, 389, 396, 405, 411, 419, 421, 423, 430, 435, 436, 439, 442, 443, 444], "custom_blackbox": 379, "custom_conversion_funct": 399, "custom_filt": 430, "custom_funct": 390, "customari": 426, "customconstraint": 390, "customdiscreteparamet": [423, 433, 443], "customencod": 132, "customonnxsurrog": [385, 399, 423], "cycl": [170, 421, 423, 432], "cyclic": 170, "d": [23, 53, 118, 298, 308, 354, 364, 397, 400, 414, 415, 417, 418, 421, 426, 437, 442], "d401": 390, "damag": 426, "daniel": 425, "darmstadt": [421, 425, 431], "dashboard": 423, "data": [13, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 66, 77, 85, 89, 117, 122, 132, 140, 143, 164, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 229, 233, 235, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 280, 286, 295, 297, 301, 328, 330, 337, 349, 350, 365, 369, 376, 377, 378, 379, 384, 385, 387, 388, 390, 391, 392, 393, 396, 400, 402, 407, 410, 413, 414, 415, 417, 418, 419, 420, 421, 423, 427, 428, 429, 430, 431, 433, 435, 436, 438, 439, 440, 443, 444], "data_typ": 399, "databas": [28, 407, 421, 438], "dataclass": [395, 405], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 85, 89, 112, 117, 122, 126, 129, 130, 132, 140, 143, 145, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 206, 207, 208, 211, 225, 226, 229, 231, 233, 235, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 280, 286, 294, 298, 299, 322, 323, 365, 376, 377, 379, 380, 384, 385, 390, 391, 392, 393, 396, 397, 399, 400, 402, 403, 407, 410, 413, 417, 418, 423, 428, 429, 430, 432, 435, 443, 444], "datapoint": 423, "dataset": [170, 227, 439], "datatyp": 423, "date": 426, "dditiv": 433, "de": [218, 412, 421, 422, 423, 424, 429, 430, 436, 443], "deactiv": [421, 423, 431], "deal": [382, 428, 435, 439], "debug": 423, "decid": [140, 402, 405, 411, 427], "declar": [50, 54, 59, 192, 391, 424, 430], "decod": 399, "decor": [107, 272, 304, 331, 395, 423, 424, 439], "decorrel": [132, 143, 148, 414, 415, 435], "decreas": [170, 289, 407, 438, 442], "deduc": [387, 388, 410], "dedupl": 423, "deep": 396, "deepcopi": 423, "deeper": 433, "def": [379, 390, 395, 396, 397, 402, 405, 417, 424, 430, 439], "default": [39, 85, 117, 130, 132, 143, 145, 174, 189, 190, 191, 192, 198, 200, 206, 218, 238, 255, 258, 336, 379, 380, 382, 385, 400, 407, 411, 421, 423, 424, 429, 431, 433, 434, 435, 443], "default_campaign": 379, "default_model": 244, "defaultkernelfactori": [385, 390, 391, 392, 393, 407, 413], "defaultscal": 423, "defend": 426, "defin": [23, 28, 38, 42, 49, 135, 164, 170, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 206, 227, 248, 250, 251, 275, 330, 335, 336, 367, 380, 381, 382, 384, 390, 391, 392, 393, 399, 400, 405, 409, 423, 424, 426, 429, 430, 432, 435, 438, 439, 441], "definit": [198, 206, 317, 403, 421, 423, 426, 434, 437], "degener": [329, 343, 423], "degr": 413, "degre": 438, "degree_c": [399, 400, 413], "deliber": 426, "delici": 424, "deliveri": 435, "demand": [28, 418], "demo": 423, "demonstr": [378, 379, 380, 383, 386, 389, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 412, 413, 416, 417, 418, 423, 434, 437, 438, 442], "denot": 23, "densiti": 397, "depend": [50, 54, 76, 109, 200, 206, 227, 289, 298, 381, 385, 389, 402, 403, 409, 419, 420, 422, 423, 424, 430, 431, 432, 433, 437, 439, 441, 442, 444], "dependenciesconstraint": 423, "deprec": [61, 137, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 206, 211, 245, 304, 390, 392, 393], "deprecationwarn": [390, 392, 393, 396], "depth": 437, "deriv": [189, 190, 191, 192, 206, 317, 426, 430, 437], "descend": 289, "describ": [130, 189, 190, 191, 192, 238, 240, 241, 244, 248, 262, 264, 266, 268, 385, 390, 395, 396, 403, 405, 407, 424, 426, 428, 429, 430, 434, 435, 438, 439], "descript": 424, "descriptor": [143, 323, 423, 433, 435, 442], "deseri": [216, 220, 225, 413, 422, 423, 429, 443], "deserialize_datafram": 438, "design": [0, 18, 23, 229, 331, 395, 399, 402, 405, 426, 427, 432, 433, 434, 436, 438], "desir": [109, 117, 120, 332, 406, 407, 419, 421, 423, 427, 429, 431, 433, 434, 436, 438, 441, 444], "desirabilityobject": [28, 407, 421, 423, 438, 440, 443], "desktop": 423, "despit": 423, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 85, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 151, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 206, 229, 233, 238, 240, 241, 242, 244, 248, 251, 258, 260, 262, 264, 266, 268, 278, 280, 286, 291, 292, 336, 343, 367, 380, 382, 387, 388, 407, 411, 420, 421, 422, 423, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 442], "detect": [301, 337, 422, 424], "determin": [28, 85, 115, 172, 206, 317, 336, 347, 352, 364, 380, 402, 405, 426, 431, 436], "determinist": 364, "detriment": 435, "dev": [421, 423, 424], "develop": [421, 423, 428, 435, 439], "deviat": [6, 15, 272, 337, 399, 423], "df": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 112, 117, 122, 145, 198, 200, 206, 211, 226, 231, 298, 299, 322, 329, 333, 334, 335, 336, 338, 339, 365, 379, 390, 405, 421, 430, 437, 438, 439], "dfa": [298, 299], "di": [380, 381, 382, 384, 385, 425], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 115, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 189, 190, 191, 192, 198, 200, 203, 206, 209, 219, 220, 221, 223, 233, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 292, 308, 311, 323, 328, 343, 367, 396, 399, 417, 418, 423], "dict_bas": [380, 381, 382, 384, 385], "dict_ligand": [380, 381, 382, 384, 385], "dict_solv": [380, 381, 382, 384, 385, 390, 391, 392, 393, 402, 430], "dictat": [112, 117, 122, 200, 417, 418], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 198, 200, 206, 219, 221, 223, 233, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 272, 278, 280, 286, 308, 311, 328, 343, 380, 381, 382, 384, 435, 439], "diff": 424, "differ": [52, 117, 182, 198, 200, 201, 206, 227, 235, 294, 299, 328, 330, 367, 381, 390, 395, 402, 405, 407, 410, 411, 417, 418, 421, 423, 424, 426, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 441, 442], "differenti": [439, 442], "difficult": 442, "digit": 339, "dilemma": 405, "dim": [23, 387, 388, 397, 399, 410, 411, 417, 418], "dimens": [23, 364, 379, 387, 388, 397, 399, 409, 410, 417, 418, 423, 435, 437, 442], "dimension": [118, 125, 126, 127, 129, 130, 132, 139, 140, 143, 258, 331, 364, 379, 417, 418, 423], "dimethylisoxazol": 442, "direct": [380, 381, 382, 384, 421, 423, 426, 432, 435, 444], "directli": [317, 418, 421, 423, 430, 434, 438, 440], "directori": [356, 411, 423], "disabl": [293, 390, 392, 393, 423, 429, 432], "disadvantag": 438, "disappear": 423, "disc_ind": 411, "disc_indic": [410, 411], "disc_paramet": 411, "disc_recommend": [174, 411], "discard": [8, 402], "disclaim": 426, "discourag": 429, "discret": [13, 23, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 67, 125, 126, 127, 129, 130, 132, 139, 140, 143, 174, 182, 189, 190, 191, 192, 194, 198, 200, 201, 205, 206, 235, 363, 384, 387, 393, 396, 397, 399, 407, 408, 411, 413, 418, 419, 421, 423, 427, 432, 433, 436, 438, 439, 443, 444], "discrete_param": [397, 417, 418], "discrete_spac": [387, 388, 411], "discrete_subspac": 437, "discretecardinalityconstraint": 423, "discreteconstraint": [28, 48, 49, 50, 51, 52, 53, 54, 55, 56, 206, 423, 430, 432], "discretecust": 390, "discretecustomconstraint": [390, 423, 443], "discretedep": 391, "discretedependenciesconstraint": [54, 59, 391, 402, 443], "discreteexcl": 392, "discreteexcludeconstraint": [392, 423, 432, 443], "discretelinkedparametersconstraint": [423, 443], "discretenolabelduplicatesconstraint": [54, 402, 423, 443], "discreteparamet": [129, 132, 140, 143, 206, 423], "discretepermutationinvarianceconstraint": [402, 443], "discreteprod": 393, "discreteproductconstraint": [393, 423, 443], "discretesamplingmethod": [13, 182, 365, 423, 427], "discretesumc": 393, "discretesumconstraint": [387, 393, 402, 423, 443], "discuss": [407, 426, 430, 437, 439], "disjoint": 206, "disk": [423, 443], "dispatch": 108, "displai": [339, 396, 426], "distanc": [140, 364], "distinct": [395, 429, 436], "distinguish": [329, 402, 423, 430, 435, 442], "distribut": [28, 151, 154, 238, 240, 241, 244, 248, 262, 264, 266, 268, 402, 407, 411, 421, 423, 426, 427, 428], "distutil": 318, "div": 399, "divers": 440, "divid": 403, "divis": 354, "dll": 422, "dmac": [380, 381, 382, 384, 385], "dmf": 430, "do": [200, 206, 243, 395, 399, 400, 402, 405, 411, 413, 414, 415, 417, 420, 421, 422, 426, 428, 430, 431, 432, 433, 435, 436, 438, 442, 443, 444], "do_baybe_work": 431, "doc": [90, 151, 304, 390, 392, 393, 421, 423], "doc101": 424, "doc103": 424, "docstr": 423, "doctest": 423, "document": [28, 350, 399, 421, 423, 424, 425, 426, 429, 433, 439], "doe": [27, 28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 182, 227, 229, 231, 233, 238, 240, 241, 243, 244, 248, 262, 264, 266, 268, 275, 313, 322, 337, 350, 382, 385, 396, 399, 400, 402, 414, 415, 417, 418, 423, 424, 426, 430, 434, 436, 439, 440, 442, 444], "doi": [260, 335], "domain": [238, 240, 241, 244, 248, 262, 264, 266, 268, 379, 421, 437, 439], "don": [420, 432], "done": [28, 336, 337, 382, 384, 390, 391, 392, 393, 399, 400, 407, 413, 423, 427, 429, 430, 431, 432], "doubl": [350, 424, 431], "down": [438, 444], "downsid": 171, "draft": 423, "dramat": 442, "drastic": 435, "draw": [10, 102, 198, 403, 405, 409], "draw_arm": 405, "drawn": [18, 182], "drive": [397, 442], "driven": [328, 427], "driver": 422, "drop": [333, 334, 335, 396, 423, 430], "dry_run": 28, "dtype": [118, 288, 289, 290, 353], "due": [295, 418, 421, 423, 427, 430, 431, 435, 436, 437, 438, 441], "duplic": [54, 150, 301, 308, 423, 430], "dure": [28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 200, 206, 227, 311, 364, 402, 405, 417, 418, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 437, 438, 439, 440], "dynam": [405, 423, 438, 443], "d\u00fcbendorf": 425, "e": [8, 18, 23, 28, 31, 50, 52, 53, 67, 85, 88, 132, 145, 172, 200, 206, 227, 295, 301, 306, 307, 323, 328, 336, 337, 343, 372, 380, 381, 382, 400, 402, 403, 405, 421, 422, 423, 424, 427, 428, 430, 431, 433, 435, 436, 437, 438, 439, 442, 444], "e3fp": 137, "e3fpfingerprint": 137, "each": [18, 28, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 112, 117, 122, 145, 164, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 200, 229, 231, 233, 235, 243, 299, 323, 328, 329, 337, 356, 379, 381, 382, 385, 397, 402, 403, 405, 407, 411, 417, 418, 424, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 444], "eagerli": 423, "earli": [396, 423], "earlier": [28, 420, 422], "earn": 405, "earned_reward": 405, "easi": [322, 424, 438], "easier": [424, 444], "easiest": [421, 424], "easili": [396, 421, 424, 429, 432, 435, 437, 438, 442], "ecfp": [137, 381, 423, 435], "ecfpfingerprint": 137, "ecosystem": 438, "edbo": [258, 260, 335, 423], "edbokernelfactori": [258, 423], "edit": [421, 424], "editor": 442, "editori": 426, "edwin": 442, "effect": [52, 167, 169, 170, 171, 172, 235, 395, 396, 405, 418, 423, 427, 430, 435, 436, 439, 442, 444], "effici": [206, 402, 421, 423, 437], "effortlessli": 439, "ei": [3, 385], "either": [23, 28, 201, 229, 235, 248, 272, 337, 381, 392, 407, 411, 421, 426, 434, 435, 436, 437, 439], "elabor": 426, "elaps": 395, "elapsedtimeprint": 395, "electron": [425, 426], "electroshap": 137, "electroshapefingerprint": 137, "eleg": [417, 438], "element": [37, 38, 39, 49, 235, 301, 310, 316, 352, 353, 358, 402, 417, 418, 423, 430, 439], "elev": 397, "elif": [410, 411], "elimin": [424, 427], "els": [317, 318, 379, 380, 381, 382, 387, 388, 390, 391, 393, 396, 397, 405, 410, 411, 417, 418], "elsewher": 399, "emd": 425, "emdgroup": [291, 421], "emelin": 425, "emerg": 429, "empir": 405, "emploi": [28, 405, 436], "employe": [421, 431], "empow": 440, "empti": [89, 198, 200, 206, 213, 299, 313, 322, 336, 339, 376, 377, 402, 407, 411, 413, 423, 437], "empty_encod": [200, 206], "emptysearchspaceerror": 213, "emul": [18, 422, 423], "en": [90, 151], "enabl": [171, 293, 294, 380, 381, 382, 402, 417, 421, 422, 423, 429, 430, 431, 432, 433, 434, 436, 438, 439, 441, 442], "encod": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 139, 140, 143, 200, 206, 238, 240, 241, 244, 248, 262, 264, 266, 268, 321, 323, 380, 381, 382, 384, 385, 390, 391, 392, 393, 396, 400, 402, 405, 407, 413, 414, 415, 417, 418, 421, 423, 430, 437, 438, 442], "encompass": 429, "encount": [167, 169, 170, 171, 172, 364, 422, 423, 424, 434], "end": [0, 290, 343, 396, 400, 405, 407, 413, 426, 430, 438], "endeavor": 427, "endpoint": [423, 431], "enforc": [351, 370, 423, 424], "engin": [422, 436, 438, 439, 444], "enhanc": [23, 421], "enlarg": 435, "enough": [198, 438], "ensembl": 270, "ensur": [145, 380, 381, 382, 402, 403, 421, 430, 438, 439], "enter": [69, 206, 437], "entir": [294, 343, 365, 423, 424, 427, 431, 444], "entiti": 426, "entri": [35, 38, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 221, 238, 240, 241, 244, 248, 262, 264, 266, 268, 299, 328, 337, 365, 382, 390, 391, 392, 393, 402, 420, 423, 430, 431, 432, 433, 441, 444], "enum": [120, 134, 135, 136, 137, 201, 255, 283, 284, 303, 363, 423, 438], "enumer": [119, 133, 282, 397, 417, 418, 434], "env": [423, 424], "envar_nam": 431, "environ": [293, 351, 370, 379, 380, 381, 382, 388, 390, 391, 393, 396, 397, 399, 405, 417, 418, 421, 422, 423, 424, 443], "envvar": 291, "envvar_nam": 431, "eq": [390, 402], "equal": [42, 117, 172, 198, 405, 407, 413, 423, 430, 434, 437, 438, 441], "equat": [42, 430, 439], "equidist": 435, "equip": 430, "equival": [18, 31, 54, 388, 409, 427, 430, 439], "erg": 137, "ergfingerprint": 137, "erron": 423, "error": [170, 180, 182, 229, 231, 233, 245, 311, 354, 382, 400, 405, 422, 423, 430, 434, 435, 436], "esian": 421, "especi": 424, "essenti": [429, 436], "establish": [396, 417, 418, 442], "estat": 137, "estatefingerprint": 137, "ester": [380, 381, 382, 384, 385], "estim": [200, 205, 206, 238, 405, 423, 440, 443], "estimate_product_space_s": [200, 206, 444], "estimated_win_r": 405, "estimation_bia": 405, "estimation_vari": 405, "et": [381, 421, 435], "etc": [37, 38, 39, 127, 200, 278, 442], "ethanol": [402, 430], "euclidean": 364, "eval_during_augment": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56], "eval_during_cr": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56], "eval_during_model": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56], "evalu": [23, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 270, 271, 318, 410, 411, 423, 429, 431, 436, 439, 442], "even": [172, 272, 334, 417, 418, 426, 428, 429, 431, 435, 439, 440, 442, 444], "event": [28, 294, 396, 426], "everi": [428, 444], "everyth": [424, 430], "evolv": [397, 424], "ex": 433, "exabyt": 444, "exact": [28, 337, 395, 422, 423, 430, 435], "exactexplain": [83, 86, 433], "exactli": [112, 117, 122, 200, 402, 423, 428, 429, 437, 438], "exampl": [145, 231, 298, 299, 308, 317, 336, 378, 379, 383, 386, 389, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409, 412, 416, 417, 418, 422, 423, 424, 425, 426, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "example_input_nam": 399, "exceed": 396, "exceedingli": 439, "except": [28, 313, 322, 326, 341, 342, 380, 381, 382, 396, 400, 414, 415, 421, 422, 423, 426, 432], "excepthook": 422, "exceptiongroup": 423, "excess": 444, "exclud": [28, 53, 333, 390, 391, 392, 393, 407, 413, 423, 426, 430, 443], "exclude_list": 335, "exclus": [51, 389, 419, 423, 426, 430, 439, 443], "execut": [28, 61, 229, 313, 379, 381, 422, 423, 424, 426, 431, 438, 439, 442], "exemplari": 429, "exercis": 426, "exhaust": [170, 433, 436], "exist": [107, 200, 294, 304, 313, 402, 422, 423, 424, 427, 429, 430, 432, 438, 442], "exp_rep": [206, 390, 391, 392, 393, 402, 437], "exp_rep_byt": [205, 444], "exp_rep_human_read": [205, 444], "exp_rep_shap": [205, 444], "expect": [3, 4, 9, 11, 12, 14, 49, 242, 250, 313, 331, 385, 391, 397, 399, 402, 403, 405, 415, 423, 424, 429, 430, 433, 434, 435, 438, 439, 441, 444], "expens": [10, 182, 387, 439], "experi": [0, 28, 164, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 227, 229, 238, 240, 241, 244, 248, 262, 264, 266, 268, 380, 381, 382, 384, 385, 410, 411, 423, 427, 429, 430, 432, 434, 435, 436, 441, 442, 443], "experiment": [28, 89, 112, 117, 122, 126, 129, 130, 132, 140, 143, 164, 167, 168, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 200, 205, 206, 227, 238, 240, 241, 244, 248, 262, 264, 266, 268, 278, 280, 286, 328, 330, 390, 391, 392, 393, 397, 407, 413, 421, 423, 427, 428, 430, 434, 435, 437, 438, 439, 441, 442, 443, 444], "experimentalist": 420, "explain": [66, 84, 85, 86, 88, 89, 397, 423, 425, 440, 443], "explainer_cl": [85, 89, 433], "explan": [85, 89, 423, 429, 440], "explanation_index": [85, 433], "explicit": [145, 171, 395, 396, 400, 402, 409, 414, 415, 423, 424, 438, 442, 443], "explicitli": [198, 206, 395, 411, 418, 426, 432, 437, 442], "exploit": [8, 18, 405, 423], "explor": [8, 28, 405, 427, 436, 437, 442], "exploratori": 427, "exponenti": 206, "expos": [28, 395, 423], "exposur": 423, "expr": [35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56], "express": [35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 421, 423, 426, 430], "extend": [432, 435, 442], "extens": [423, 436], "extra": [381, 422, 423], "extract": [28, 167, 169, 170, 171, 172, 338, 397, 417, 433, 443], "extract_pi": 397, "f": [318, 379, 380, 381, 382, 387, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 407, 409, 410, 411, 417, 418, 444], "f1": 439, "f2": 439, "fabian": 425, "face": [238, 240, 241, 244, 248, 262, 264, 266, 268, 403, 405], "facilit": 436, "fact": [18, 397, 402, 420, 430, 434], "factor": [145, 429, 444], "factori": [145, 198, 248, 249, 250, 251, 252, 258, 260, 309, 385, 390, 391, 392, 393, 407, 413, 423], "fail": [411, 415, 422, 423], "failur": [280, 426], "failure_valu": 280, "fairli": 434, "fake": [231, 328, 332, 384, 385, 399, 400, 407, 423, 428, 439, 443], "fall": [172, 396, 429, 441], "fallback": [115, 206, 345, 356, 399, 423, 437], "fals": [6, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 89, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 169, 170, 171, 172, 182, 198, 200, 206, 211, 238, 244, 262, 264, 266, 268, 280, 289, 306, 307, 311, 317, 318, 331, 336, 338, 358, 376, 385, 390, 391, 392, 393, 407, 413, 414, 415, 421, 423, 431], "famili": 430, "familiar": [380, 381, 382, 385, 387, 388, 390, 391, 392, 393, 399, 400, 407, 410, 411, 413], "fang": 425, "fantasi": 10, "far": 429, "farthest": [194, 363, 364, 385, 421, 423, 425, 427, 436], "farthest_point_sampl": 423, "fashion": [288, 290], "fast": [390, 392, 393, 437, 441], "faster": 206, "fault": 80, "faulti": 422, "favicon": 423, "favor": 423, "fc": [380, 381, 382], "feasibl": [429, 433], "featur": [85, 102, 143, 335, 421, 422, 424, 430, 433, 440, 442], "fed": [421, 433], "feder": 425, "fee": 426, "feed": [420, 421, 432, 442], "feedback": 425, "feel": 396, "few": [379, 405, 423, 424, 427, 435, 438, 442, 444], "field": [220, 326, 358, 423, 442, 443], "fifti": 426, "fig": 397, "figur": [356, 397], "file": [356, 380, 381, 382, 399, 400, 411, 421, 423, 426, 431, 438, 442], "filenotfounderror": [380, 381, 382, 396], "fill": [28, 231, 397], "filler": 430, "filter": [28, 35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 200, 206, 333, 336, 390, 402, 423, 430, 432, 437, 442, 444], "filter_attribut": 423, "filter_df": [28, 423], "filterwarn": 396, "final": [379, 381, 384, 396, 402, 418], "find": [200, 311, 353, 356, 421, 427, 429, 430, 442], "fine": [400, 413, 414, 415, 421], "finer": [145, 421], "fingerprint": [137, 143, 321, 323, 421, 423, 425, 435], "finish": 428, "finit": [170, 227, 235, 342, 372, 405, 435, 439], "first": [200, 233, 352, 364, 379, 381, 384, 385, 390, 395, 396, 399, 400, 402, 407, 411, 415, 417, 418, 421, 422, 423, 429, 430, 434, 435, 436, 437, 442, 444], "fit": [28, 192, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 365, 367, 380, 381, 382, 390, 391, 392, 393, 399, 407, 413, 423, 426, 430, 435, 440], "fit_gpytorch_ml": 423, "fit_gpytorch_mll_torch": 423, "fitnr": 407, "fitzner": [421, 425], "fix": [227, 251, 396, 397, 402, 405, 410, 411, 424, 429, 435, 439, 442, 444], "flag": [23, 28, 50, 85, 89, 112, 117, 122, 182, 200, 201, 206, 331, 338, 420, 423, 429, 431, 432, 433, 436], "flake8": 423, "flexibl": [395, 409, 423, 438, 439], "flexibli": 436, "float": [8, 13, 19, 39, 42, 44, 45, 96, 97, 98, 99, 100, 101, 102, 103, 107, 109, 117, 118, 132, 139, 140, 143, 148, 149, 155, 156, 157, 158, 159, 160, 161, 182, 205, 206, 229, 233, 238, 272, 280, 281, 288, 289, 290, 295, 325, 328, 329, 330, 335, 343, 347, 349, 350, 352, 353, 354, 369, 372, 373, 374, 395, 397, 399, 405, 407, 423, 424, 443], "float64": 369, "floattensortyp": 399, "fly": [171, 438], "fn": 304, "focu": 429, "focus": [122, 411, 421], "folder": [381, 421, 424, 431, 440], "follow": [167, 169, 170, 171, 172, 200, 229, 231, 233, 380, 381, 382, 385, 387, 388, 390, 391, 392, 393, 395, 396, 400, 405, 407, 411, 414, 415, 417, 418, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "footprint": [10, 200], "forbid": 375, "forc": [85, 87, 182, 423, 424, 433, 436], "forest": [267, 268], "forgiv": 441, "fork": 424, "form": [206, 227, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 328, 420, 421, 426, 427, 429, 434, 435, 436, 437, 438, 439, 444], "formal": [403, 420], "format": [42, 292, 339, 344, 347, 399, 400, 413, 414, 421, 422, 423, 424, 429, 431, 438, 439], "format_except": 422, "former": [402, 423], "formul": 442, "formula": 402, "forrest": 423, "found": [78, 145, 198, 206, 311, 321, 350, 353, 356, 396, 402, 407, 421, 422, 424, 429, 430, 436, 442], "foundat": 436, "four": 402, "fourier": 102, "fourth": 430, "fp": [363, 423, 427], "fp_size": [137, 435], "fpsrecommend": [385, 399, 400, 413, 414, 415, 421, 428, 436], "frac": [418, 434], "frac1": 391, "fraction": [13, 97, 325, 396, 427, 430, 431], "fraction1": 391, "fraction_1": 430, "fraction_2": 430, "fraction_3": 430, "frame": [330, 433, 444], "frame1": 391, "frame2": 391, "frame_1": 430, "frame_2": 430, "framea": 391, "framea_a": 391, "frameb": 391, "framework": [429, 435], "free": [424, 426, 431], "freedom": 438, "freeli": 402, "frequenc": 102, "frequent": 405, "fresh": 396, "frictionless": 438, "friendli": 423, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 137, 139, 140, 143, 145, 151, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 223, 231, 233, 235, 238, 240, 241, 244, 248, 251, 256, 260, 262, 264, 266, 268, 272, 278, 280, 286, 289, 290, 313, 317, 318, 322, 330, 331, 333, 335, 343, 354, 356, 365, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 403, 405, 407, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 422, 424, 426, 427, 428, 430, 432, 433, 434, 435, 436, 439, 441, 442, 443, 444], "from_bound": [198, 423, 437], "from_campaign": [85, 433], "from_config": [28, 414, 415, 429], "from_datafram": [198, 200, 206, 423, 432, 437, 438, 444], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 198, 200, 206, 223, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 343, 399], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 198, 200, 206, 223, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 343, 399, 400, 413, 429, 438], "from_paramet": [198, 200, 206, 423], "from_preset": 248, "from_product": [198, 200, 206, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 403, 407, 409, 410, 411, 413, 414, 415, 417, 418, 421, 423, 430, 432, 437, 438, 439], "from_recommend": [85, 433], "from_record": [438, 439], "from_simplex": [206, 402, 423, 432, 437, 444], "from_surrog": [85, 433], "frozenset": 402, "fsspec": 423, "fulfil": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 396, 402, 403], "full": [23, 198, 350, 378, 419, 423, 429, 432, 433, 435, 442, 443], "full_factori": 198, "full_lik": 397, "full_lookup": [380, 381, 382], "fulli": [402, 421, 423, 431, 432, 439], "fulltest": 424, "func": 424, "func_nam": 417, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 36, 42, 43, 49, 57, 64, 71, 80, 82, 85, 101, 108, 111, 114, 116, 121, 144, 147, 180, 182, 183, 199, 204, 210, 214, 215, 223, 224, 227, 228, 230, 232, 233, 234, 239, 243, 249, 254, 269, 273, 274, 277, 284, 287, 288, 289, 290, 291, 294, 295, 297, 300, 315, 319, 324, 327, 330, 332, 337, 338, 339, 341, 346, 348, 355, 356, 359, 362, 371, 384, 390, 391, 392, 393, 395, 397, 402, 405, 413, 417, 418, 421, 422, 423, 427, 429, 430, 432, 434, 436, 437, 439, 440, 441, 442, 444], "function_nam": [417, 418], "functionalgroup": 137, "functionalgroupsfingerprint": 137, "fundament": [435, 438], "furo": 423, "further": [337, 402, 403, 413, 421, 428, 432, 436, 437, 440, 442, 443], "furthermor": 407, "furyl": [380, 381, 382], "futur": [54, 200, 243, 390, 392, 393, 396, 417, 432, 433, 441], "fuzzi": 294, "fuzzy_row_match": [294, 423], "g": [50, 52, 53, 67, 85, 88, 132, 145, 200, 206, 301, 323, 337, 405, 421, 422, 423, 424, 427, 428, 430, 431, 433, 435, 436, 437, 439, 444], "g1": 403, "g2": 403, "g3": 403, "gain": [206, 429, 433], "gamma": 156, "gammaprior": 423, "garbag": 423, "gather": [172, 417, 418, 427, 442], "gaussian": [90, 189, 240, 246, 247, 248, 249, 253, 254, 255, 257, 258, 259, 260, 288, 385, 407, 423, 430, 436, 442], "gaussian_kd": 397, "gaussian_process": [92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 248, 250, 251, 255, 258, 260, 385, 423], "gaussianmixtureclusteringrecommend": 436, "gaussianprocesspreset": [248, 256], "gaussianprocesssurrog": [256, 385, 390, 391, 392, 393, 397, 407, 413, 414, 415, 423, 440], "gcf": [380, 382], "ge": 388, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 85, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 136, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 206, 238, 240, 241, 244, 248, 251, 258, 260, 262, 264, 266, 268, 278, 280, 286, 292, 317, 323, 329, 343, 359, 367, 379, 385, 395, 402, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 438, 439, 440, 441, 442, 443, 444], "geom_mean": [109, 117, 120, 407, 434], "geometr": [120, 354, 407, 434], "germani": [421, 425, 431], "get": [28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 180, 182, 198, 248, 328, 385, 396, 402, 410, 411, 420, 421, 423, 428, 443, 444], "get_candid": [206, 396], "get_cmap": 397, "get_comp_rep_parameter_indic": [200, 423], "get_current_recommend": [167, 169, 170, 171, 172, 423], "get_integration_point": 13, "get_invalid": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56], "get_invalid_polar": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56], "get_lin": 396, "get_next_recommend": [167, 169, 170, 171, 172, 423], "get_non_meta_recommend": [167, 169, 170, 171, 172, 423], "get_parameters_by_nam": [198, 200, 206], "get_parameters_from_datafram": [198, 206], "get_subclass": 385, "get_surrog": [28, 85, 180, 182, 423, 433, 440], "get_transform_object": 423, "get_transform_paramet": 423, "get_valid": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 423], "getawai": 137, "getawayfingerprint": 137, "ghosecrippen": 137, "ghosecrippenfingerprint": 137, "git": [421, 424], "github": [260, 291, 314, 335, 399, 423, 424, 425], "give": [399, 400, 402, 418, 426, 429, 434, 438], "given": [26, 28, 31, 37, 38, 39, 59, 78, 85, 88, 89, 112, 117, 122, 130, 143, 145, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 212, 227, 231, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 272, 283, 295, 299, 306, 307, 311, 312, 313, 316, 317, 320, 321, 325, 328, 331, 338, 343, 344, 352, 354, 357, 358, 364, 367, 390, 391, 392, 393, 396, 402, 405, 407, 411, 417, 418, 429, 437, 439], "glass_transition_tempc": 435, "global": [13, 360, 423, 443, 444], "gmean": 354, "gmm": 189, "go": [298, 402, 421], "goal": [379, 405, 434, 442], "goe": 440, "good": [328, 396, 407, 429, 431, 441], "good_interv": 328, "good_reference_valu": 328, "goodwil": 426, "googl": [423, 424], "govern": 421, "gp": [238, 240, 241, 244, 248, 262, 264, 266, 268, 423], "gpytorch": [90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 151, 153, 155, 156, 157, 158, 159, 160, 161, 423], "grab": 420, "gradient": [10, 182, 266, 423, 431, 436], "grant": [423, 426], "granular": [400, 413, 414, 415, 421], "granularity_coar": 413, "granularity_fin": 413, "great": [405, 438], "greater": 172, "greatli": 424, "greedi": [182, 423, 436], "grid": [417, 418], "grid_d": [417, 418], "grossli": 426, "group": [299, 308, 367, 403, 421, 423, 429, 433], "groupbi": [233, 235], "grow": 444, "gt": [393, 402], "gu16": 435, "guarante": [423, 430, 431, 436], "guid": [384, 421, 422, 423, 424, 427, 429, 432, 434, 437, 439, 442], "guidelin": [423, 424, 427], "ha": [50, 70, 71, 85, 170, 198, 200, 206, 238, 240, 241, 244, 248, 262, 264, 266, 268, 298, 311, 313, 317, 329, 364, 365, 381, 385, 390, 391, 392, 393, 402, 407, 411, 413, 421, 423, 424, 426, 428, 429, 430, 433, 435, 437, 438, 439, 441, 442], "had": [227, 430, 435, 439], "half": [140, 157, 158, 343, 411, 428], "halfcauchyprior": 423, "halfnormalprior": 423, "hamster": 442, "hand": [42, 143, 403, 405, 417, 418, 421, 429, 438], "handl": [85, 127, 229, 231, 272, 341, 390, 391, 405, 407, 423, 429, 434, 444], "happen": [77, 170, 407, 411, 418, 422, 423, 424, 437, 438, 442], "happili": 434, "hard": [423, 442, 444], "harmless": 426, "hartmann": [397, 417, 418], "hasattr": [387, 388, 410, 411], "hash": [292, 421, 431, 435], "hashabledict": 423, "have": [23, 28, 35, 37, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 112, 117, 122, 143, 192, 200, 227, 243, 275, 299, 308, 311, 328, 337, 338, 350, 380, 381, 384, 385, 390, 391, 395, 397, 402, 403, 405, 407, 410, 411, 417, 418, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 434, 435, 436, 438, 439, 440, 442, 444], "head": 423, "header": 358, "heart": 442, "heatmap": [85, 87], "help": [405, 438, 439, 442], "helper": [395, 397, 399, 402, 438], "henc": [322, 402, 405, 413, 430, 435, 444], "here": [53, 350, 380, 382, 384, 387, 388, 395, 396, 400, 402, 403, 410, 411, 413, 417, 418, 420, 421, 422, 428, 430, 432, 434, 435, 436, 437, 438, 439, 441, 442], "herebi": 426, "herein": [426, 429], "heurist": 182, "hierarch": 438, "hierarchi": [78, 423, 424, 429, 438], "high": [258, 379, 405, 423, 424, 427, 429, 430, 435, 438], "higher": [143, 405, 422, 430, 433, 436], "highest": [427, 438], "highlight": 442, "hint": 424, "histogram": 295, "histori": 424, "hold": [41, 308, 426, 438], "home": [390, 392, 393], "homepag": [421, 423], "hood": 435, "hook": [46, 115, 206, 215, 219, 313, 419, 422, 423, 424], "hopp": [421, 425], "host": [421, 423, 431], "hostnam": [292, 431], "hot": [134, 381, 405, 421, 423, 435], "how": [51, 229, 231, 337, 364, 379, 380, 382, 383, 384, 385, 386, 389, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 411, 413, 414, 415, 418, 421, 429, 430, 431, 434, 439, 440, 441, 442], "howev": [145, 206, 243, 313, 395, 402, 405, 410, 411, 420, 422, 424, 426, 427, 428, 429, 430, 431, 433, 435, 437, 438, 439, 440, 442, 444], "hrovatin": 425, "html": [90, 151, 291, 304, 350, 399, 423], "http": [90, 151, 260, 291, 304, 314, 335, 350, 421, 423, 426, 442], "hue": [379, 380, 381, 382, 396, 417, 418], "human": [205, 347, 413, 423, 425, 438], "hybrid": [22, 23, 67, 173, 174, 182, 195, 200, 201, 385, 386, 390, 391, 392, 393, 407, 408, 413, 419, 421, 423, 436, 437], "hybrid_recommend": 411, "hybrid_sampl": [182, 436], "hyperrectangl": [198, 437], "hypothesi": [421, 423, 424], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 66, 67, 69, 70, 71, 72, 74, 85, 88, 89, 104, 107, 118, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 213, 227, 229, 231, 233, 235, 238, 240, 241, 242, 243, 244, 248, 258, 262, 264, 266, 268, 272, 275, 283, 288, 289, 290, 293, 294, 295, 299, 302, 303, 304, 306, 307, 311, 313, 314, 316, 317, 318, 321, 322, 328, 329, 330, 331, 332, 336, 337, 338, 339, 342, 343, 350, 352, 353, 356, 358, 364, 365, 372, 376, 377, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 403, 405, 407, 410, 411, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "ideal": [428, 430, 439], "ident": [145, 298, 299, 432, 435, 438, 442], "identif": 405, "identifi": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 233, 308, 322, 337, 338, 396, 423, 430, 433, 435, 437, 438, 439, 442], "idx_offset": 42, "ignor": [112, 117, 122, 170, 182, 200, 207, 208, 229, 231, 233, 311, 335, 382, 396, 411, 423, 430, 438, 444], "ignore_exampl": 423, "ignore_list": 334, "ii": 426, "iii": 426, "illustr": [409, 432], "iloc": 428, "imag": [405, 423], "imagin": [402, 405], "immedi": [356, 395, 429], "immut": 423, "impact": [381, 418, 431], "imperfect": 330, "implement": [18, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 118, 164, 175, 235, 242, 315, 390, 396, 402, 417, 423, 424, 425, 427, 433, 436, 437, 439, 442], "impli": [402, 421, 426, 430, 435], "implicitli": 438, "import": [76, 85, 117, 231, 396, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444], "impos": [402, 403, 430], "imposs": [421, 431, 432, 438], "improv": [3, 4, 7, 9, 11, 12, 14, 16, 385, 388, 394, 396, 419, 421, 423, 426, 431], "imput": [229, 231, 378, 382, 419, 421], "impute_mod": [229, 231, 233, 382, 439], "inabl": [421, 426], "inaccuraci": 421, "inact": 41, "inc": 442, "incident": 426, "includ": [59, 112, 117, 122, 172, 229, 306, 307, 334, 380, 391, 400, 402, 414, 415, 418, 423, 424, 426, 427, 428, 430, 432, 444], "inclus": 426, "incom": 438, "incompat": [63, 64, 65, 66, 67, 89, 244, 392, 430], "incompatibilityerror": 28, "incompatibleacquisitionfunctionerror": 428, "incompatibleexplainererror": 433, "incomplet": 423, "inconsist": 423, "incorpor": [426, 428, 440, 444], "incorrect": 423, "incorrectli": 423, "increas": [10, 170, 233, 289, 290, 407, 417, 418, 423, 427, 435, 442], "increment": 206, "incur": 426, "indefinit": [170, 229], "indemn": 426, "indemnifi": 426, "indent": 358, "independ": [174, 240, 264, 399, 423, 436, 439], "independentgaussiansurrog": [244, 262, 264, 266, 423], "index": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 200, 233, 298, 299, 336, 337, 399, 400, 407, 411, 413, 423, 433, 435, 437, 439], "indexkernel": 423, "indic": [28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 80, 85, 88, 125, 126, 127, 129, 130, 132, 139, 140, 143, 167, 169, 170, 171, 172, 200, 298, 299, 302, 303, 331, 364, 402, 411, 423, 426, 432, 436, 439, 440], "indirect": [306, 307, 426], "indistinguish": 402, "individu": [50, 51, 105, 106, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 229, 339, 396, 403, 426, 429, 432, 434, 436, 442], "induc": 405, "industri": 442, "ineffici": 206, "inequ": [42, 198, 437], "inf": [8, 390, 391, 392, 393, 413], "infeas": 432, "infer": [145, 244, 417, 418, 423, 437], "inferencesess": 244, "infin": 149, "infinit": [170, 171, 309, 342, 372, 373, 423, 435], "influenti": 442, "info": [295, 423], "inform": [23, 127, 278, 338, 380, 381, 382, 397, 402, 410, 411, 418, 421, 423, 424, 426, 428, 431, 432, 435, 437, 442, 443], "infring": 426, "ingest": [206, 229, 435, 436], "ingredi": [402, 403, 430], "inher": [18, 402], "inherit": 424, "init": 274, "initi": [96, 97, 98, 99, 100, 101, 102, 103, 107, 172, 174, 182, 189, 190, 191, 192, 194, 206, 229, 233, 294, 364, 378, 390, 391, 392, 393, 396, 397, 407, 413, 418, 419, 423, 425, 429, 431, 435, 436, 438, 439, 442], "initial_data": [229, 233, 380, 418, 439], "initial_recommend": [172, 385, 396, 397, 399, 400, 405, 413, 414, 415, 421, 436], "initial_recommender_cl": 423, "initial_strategi": 423, "initial_typ": 399, "inject": 438, "inner": [165, 336, 433, 436, 438], "inplac": [381, 417, 418, 444], "input": [37, 38, 39, 118, 126, 129, 130, 132, 140, 143, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 278, 280, 286, 288, 308, 325, 326, 330, 331, 332, 336, 343, 345, 352, 364, 376, 377, 379, 399, 407, 417, 418, 423, 438, 439, 442], "input_dim": 399, "input_label": 331, "inputtransform": 367, "insid": [396, 399, 400, 422, 438], "insight": [85, 396, 421, 423, 425, 443], "inspect": [317, 395, 402], "instabl": [423, 430], "instal": [423, 424, 431, 433, 435, 444], "instanc": [37, 38, 39, 50, 53, 85, 172, 200, 328, 391, 396, 402, 403, 421, 422, 424, 428, 429, 430, 431, 433, 435, 437, 438, 439, 444], "instanti": [244, 396, 429], "instead": [167, 169, 170, 171, 172, 294, 322, 331, 390, 392, 393, 421, 422, 423, 429, 430, 434, 435, 438, 439, 441, 442, 444], "institut": [425, 426], "instruct": [421, 423, 441, 443], "instrument_nam": 295, "int": [10, 13, 18, 28, 31, 41, 42, 48, 85, 92, 93, 94, 97, 99, 100, 101, 102, 103, 118, 134, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 206, 229, 233, 235, 280, 281, 288, 289, 290, 295, 332, 339, 353, 357, 360, 361, 364, 365, 367, 390, 392, 393, 402, 405, 407, 418, 424, 435], "integ": [31, 134, 200, 233, 411, 423, 424, 435], "integr": [13, 423, 424, 427, 429], "intend": [384, 395, 417, 424, 436], "intens": 435, "intention": 426, "interact": [27, 28, 384, 421, 422, 429, 432, 438], "interchang": 402, "interconnect": 429, "interest": [433, 434, 444], "interfac": [164, 242, 250, 395, 397, 423, 426, 429, 432, 433], "intermedi": [192, 364], "intern": [28, 42, 54, 170, 379, 396, 407, 423, 430, 431, 435, 436, 437, 438], "internet": 421, "internship": 425, "interplai": 423, "interpol": [97, 258, 423], "interpret": [200, 227, 325, 400, 402, 414, 415, 418, 431, 437, 439], "interrupt": 61, "intersect": 411, "interv": [139, 286, 288, 289, 290, 407, 423, 429, 435, 438, 441], "intrins": 442, "introduc": [422, 423, 430, 435, 436, 439], "intuit": [429, 433], "invalid": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 68, 206, 322, 365, 400, 414, 422, 429, 430, 437], "invalid_config": 415, "invalid_surrogate_model": 400, "invalid_typ": 415, "invari": [50, 53, 54, 298, 299, 430], "invers": [219, 438], "invert": [28, 336], "investig": [227, 439, 440], "invok": [439, 443, 444], "involv": [28, 206, 395, 402, 421, 431, 433, 434, 435, 438, 442], "io": 291, "irrelev": [402, 423, 430], "irrevoc": 426, "is_bound": [343, 423], "is_continu": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 125, 126, 127, 129, 130, 132, 139, 140, 143], "is_degener": 343, "is_discret": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 125, 126, 127, 129, 130, 132, 139, 140, 143], "is_empti": [198, 206, 423], "is_eq": 42, "is_finit": 423, "is_fully_unbound": 343, "is_half_bound": 343, "is_in_rang": [125, 126, 127, 129, 130, 132, 139, 140, 143], "is_left_bound": 343, "is_mc": 423, "is_numer": [125, 126, 127, 129, 130, 132, 139, 140, 143, 423], "is_right_bound": 343, "is_stat": [167, 169, 170, 171, 172, 423, 432], "iso": 399, "isoxazol": 442, "issu": [243, 304, 314, 423, 426, 439, 444], "item": [38, 125, 126, 127, 129, 130, 132, 139, 140, 143, 402, 405, 417, 418, 435], "iter": [28, 139, 170, 171, 200, 229, 243, 286, 309, 328, 330, 332, 344, 376, 377, 380, 390, 391, 392, 393, 396, 397, 405, 417, 418, 421, 423, 427, 429, 435, 436, 439, 440, 444], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 174, 198, 200, 206, 223, 235, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 295, 298, 305, 313, 317, 328, 343, 347, 379, 385, 395, 397, 402, 403, 405, 418, 421, 422, 424, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 442, 444], "itself": [395, 417, 422, 442], "j": [381, 421, 435, 442], "jackiepho": [380, 381, 382], "januari": 426, "javadi": 425, "jin": 425, "join": [336, 422], "joint": 429, "jointli": 429, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 198, 200, 206, 223, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 343, 356, 399, 400, 413, 414, 423, 443], "json_str": 438, "juli": 425, "julian": 425, "jump": [423, 442], "jupyt": 399, "just": [405, 420, 424, 438], "k": [140, 190, 364, 379, 380, 381, 382, 384, 385, 387, 388, 396, 402, 409, 410, 411, 423, 432, 436, 444], "karin": 425, "kde": 397, "keep": [49, 143, 198, 206, 396, 423, 424], "kei": [308, 328, 381, 424, 433], "kept": [336, 435, 440], "kernel": [92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 248, 249, 250, 251, 252, 258, 260, 385, 390, 391, 392, 393, 407, 413, 423, 430, 442], "kernel_factori": [92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 248, 250, 251], "kernel_or_factori": 248, "kernelexplain": [83, 85, 86, 89, 433], "kernelfactori": [248, 251, 252, 258, 260, 423], "keyword": [85, 143, 382, 385, 411, 418, 423, 428, 430, 437, 439], "kgaa": [421, 425, 431], "kian": 442, "kickstart": 438, "kind": [182, 421, 423, 426, 430, 435, 436], "kiter": [390, 391, 392, 393, 407], "klekotaroth": 137, "klekotarothfingerprint": 137, "kmean": 385, "kmeansclusteringrecommend": [385, 436], "knob": 421, "know": [405, 414, 421, 422, 438, 442], "knowledg": [8, 10, 421, 423, 442], "known": [430, 432, 442], "koller": 442, "kwarg": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 96, 98, 100, 105, 106, 107, 153, 155, 156, 157, 158, 159, 160, 161, 164, 184, 242, 245, 250, 323, 332, 342], "kwargs_conform": [143, 323, 435], "kwargs_fingerprint": [143, 323, 435], "l0": 31, "l1": 435, "l664": 260, "label": [53, 54, 132, 143, 295, 331, 402, 403, 421, 423, 430, 435, 437, 439], "labelpad": 397, "laggner": 137, "laggnerfingerprint": 137, "lambda": [390, 392, 393, 396, 402, 417, 440], "lanat": 433, "land": 423, "languag": [304, 403, 421], "larg": [143, 206, 387, 388, 403, 423, 431, 435, 439, 444], "larger": [97, 140, 365, 385, 392, 429, 430, 438, 442], "largest": [364, 405, 427], "last": [170, 405, 424, 429, 436], "last_call_tim": 395, "lastli": 397, "latent": 435, "later": [140, 422, 429, 438], "latest": [171, 421, 424, 429], "latter": [18, 28, 298, 317, 396, 402, 429, 442], "law": [421, 426], "lawsuit": 426, "layer": 137, "layeredfingerprint": 137, "layout": 423, "lazi": [208, 368, 423], "lazili": [423, 431], "lazyfram": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 208], "le": 388, "le_method": 424, "lead": [75, 407, 423, 438], "lean": 424, "learn": [13, 234, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 385, 390, 391, 392, 393, 405, 407, 413, 417, 419, 421, 423, 430, 433, 435, 440, 441, 443], "least": [170, 403, 421, 426, 428, 429], "leav": 438, "lee": 425, "left": [72, 73, 161, 229, 329, 337, 343, 391, 423, 434], "left_df": 337, "leftov": 423, "legal": 426, "legend": [380, 382], "len": [391, 396, 397, 402, 403, 405], "length": [98, 170, 171, 238], "lengthi": 429, "lengthscal": [97, 98, 99, 101, 102, 103], "lengthscale_initial_valu": [97, 98, 99, 101, 102, 103], "lengthscale_prior": [97, 98, 99, 101, 102, 103], "leq": 31, "less": [8, 299, 332, 396, 397, 405, 429, 444], "let": [379, 381, 395, 396, 397, 399, 400, 402, 403, 409, 418, 421, 430, 434, 438], "level": [330, 423, 424, 428, 429, 430, 436, 438], "leverag": [396, 429, 436], "li": 435, "liabil": 426, "liabl": 426, "lib": [390, 392, 393, 422], "librari": 422, "licensor": 426, "lie": [28, 238, 240, 241, 244, 248, 262, 264, 266, 268, 328], "liebig": 425, "life": [421, 424, 425, 444], "lifecycl": 429, "ligand": [380, 381, 382, 384, 385, 396, 421, 433, 435], "ligand_data": 396, "ligand_smil": 396, "like": [192, 233, 301, 397, 402, 405, 421, 422, 423, 424, 428, 429, 430, 432, 435, 438, 439, 442, 444], "likelihood": 238, "lime": [85, 88, 433], "limetabular": [83, 84, 433], "limit": [8, 258, 295, 397, 421, 425, 426, 430, 437, 443], "line": [343, 358, 380, 382, 396, 405, 423, 424, 427, 429, 435, 439, 442], "linear": [42, 96, 198, 262, 284, 289, 385, 386, 407, 419, 423, 424, 433, 437, 441], "linear_model": 399, "linear_regressor": 399, "linearkernel": 423, "linearli": [258, 289, 290, 407, 423], "lineplot": [379, 380, 381, 382, 396, 417, 418], "lingo": 137, "lingofingerprint": 137, "link": [52, 422, 423, 426, 435], "linspac": [390, 391, 392, 393, 397, 399, 400, 402, 410, 411, 413, 417, 418, 444], "lint": [421, 423, 424], "linter": [423, 424], "list": [31, 32, 33, 34, 35, 38, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 109, 130, 145, 150, 170, 171, 198, 200, 206, 207, 208, 211, 212, 213, 229, 233, 235, 294, 306, 307, 308, 316, 323, 328, 333, 334, 335, 338, 364, 380, 385, 390, 391, 392, 393, 397, 402, 403, 405, 407, 410, 411, 418, 421, 424, 426, 430, 434, 435, 436, 437, 439], "liter": [85, 109, 170, 229, 231, 233, 330, 364, 424], "literatur": 423, "litig": 426, "littl": 422, "liver": [439, 442], "ll": 432, "load": [356, 368, 396, 399, 414, 415, 422, 423], "loc": [159, 160, 380, 382], "local": [422, 424, 431, 433, 443], "locat": [159, 160, 428, 431, 442], "lockfil": 423, "log": [159, 295, 385, 421, 431], "logarithm": [4, 11, 12, 354], "logei": [4, 423], "logic": [165, 328, 331, 379, 423, 430, 436, 439, 444], "lognormalprior": 423, "logo": 423, "long": [429, 438, 439], "longer": 423, "look": [231, 385, 402, 405, 422, 427, 429, 430, 432, 433, 438, 439, 441], "look_up_target": 229, "lookup": [227, 229, 233, 235, 331, 337, 378, 379, 397, 410, 419, 423, 433, 443], "lookup_df": 231, "lookup_test_task": 418, "lookup_training_task": 418, "lookup_valu": [387, 388, 397, 410, 411], "lookup_withmiss": 382, "loop": [227, 229, 235, 390, 391, 392, 393, 396, 407, 423, 428, 433, 439, 444], "loss": 426, "lost": 438, "lot": 409, "low": [258, 405, 422, 423, 433, 435, 438], "lower": [161, 288, 289, 290, 343, 380, 382, 397, 407, 417, 418, 435, 441], "lower_bound": 437, "lst_exclud": 333, "lt": 422, "luxuri": 429, "m": 402, "m1": 422, "mac": 422, "macc": 137, "maccsfingerprint": 137, "machin": [405, 421, 422, 424, 427, 431, 435, 441, 442], "machineri": [18, 182, 422, 424, 432, 442, 444], "made": [76, 229, 364, 382, 421, 422, 426, 430, 431, 432, 439], "magic": 442, "magnitud": [329, 330, 444], "mai": [28, 112, 117, 122, 200, 313, 420, 421, 426, 429, 432, 438, 439], "mail": 426, "main": [27, 28, 421, 423], "maintain": [272, 424, 432], "major": [423, 439], "make": [54, 182, 270, 271, 272, 304, 329, 331, 380, 382, 385, 387, 402, 403, 421, 422, 424, 426, 428, 429, 430, 432, 433, 435, 438, 442, 444], "make_explainer_for_surrog": 85, "malfunct": 426, "manag": [27, 198, 199, 200, 206, 361, 423, 426, 439], "mandatori": [420, 423, 441], "mani": [365, 402, 410, 411, 421, 429, 435, 438, 441, 442], "manipul": [423, 431], "manner": 431, "manual": [411, 422, 423, 438], "map": [132, 137, 143, 231, 233, 288, 289, 290, 311, 331, 367, 380, 381, 382, 407, 439, 441], "mapfingerprint": 137, "mapl": [83, 84, 85, 88, 433], "margin": 423, "mark": [426, 429, 442, 443], "markdown": [400, 414, 415, 423], "marker": [379, 380, 381, 382, 396, 417, 418, 423], "markers": [379, 381, 396, 417, 418], "market": 405, "marketplac": 423, "martin": [421, 425], "mask_bad1": 390, "mask_bad2": 390, "mask_bad3": 390, "mask_good": [390, 430], "mass": 155, "master": 260, "match": [28, 77, 79, 126, 129, 130, 132, 140, 143, 145, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 278, 280, 283, 286, 294, 311, 313, 337, 338, 376, 395, 397, 407, 411, 421, 423, 428, 429, 432, 434, 438, 439, 443], "match_attribut": 423, "match_targeta": 441, "match_targetb": 441, "materi": [405, 425, 442], "matern": 97, "maternkernel": 423, "math": [396, 402], "mathemat": 423, "matmin": 422, "matplotlib": [380, 382, 397, 423], "matter": [402, 409, 424, 434], "max": [231, 283, 329, 380, 381, 382, 384, 385, 390, 391, 392, 393, 396, 397, 399, 400, 405, 407, 413, 414, 415, 421, 423, 434, 438, 439, 443], "max_cardin": [31, 41, 48], "max_column": [339, 402], "max_colwidth": 339, "max_nonzero": 206, "max_row": [339, 402], "max_sum": [206, 402, 437], "max_target": 441, "max_yield": [380, 382], "maxim": [6, 283, 384, 397, 405, 407, 421, 423, 433, 441], "maximum": [6, 31, 41, 48, 143, 198, 200, 206, 288, 339, 402, 403, 407, 423, 430, 435, 437], "mc": [405, 428], "md": 423, "me2pph": [380, 381, 382], "mean": [5, 8, 18, 28, 54, 109, 120, 190, 227, 229, 231, 233, 238, 264, 272, 354, 382, 385, 399, 405, 407, 423, 424, 426, 427, 428, 429, 430, 432, 434, 435, 436, 438, 440, 443], "meaning": 434, "meaningless": [402, 427], "meanpredictionsurrog": [272, 385, 440], "meantim": [424, 430], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 85, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 227, 229, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 278, 280, 286, 294, 328, 332, 337, 380, 381, 382, 385, 387, 388, 390, 391, 392, 393, 395, 396, 397, 407, 410, 411, 413, 420, 421, 423, 424, 427, 428, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443], "mechan": [28, 61, 117, 118, 120, 227, 230, 231, 235, 313, 336, 345, 364, 379, 395, 396, 397, 417, 418, 423, 426, 432, 433, 437, 438, 442, 443], "mechanist": 421, "media": [426, 435, 442], "mediocr": 441, "medium": [400, 413, 421, 426, 435], "medoid": [191, 423, 436], "meet": [328, 426], "mem_estim": 444, "member": [317, 430, 435], "memori": [10, 200, 205, 206, 423, 431, 443], "memorys": [200, 206, 444], "mention": 427, "merchant": 426, "merck": [421, 425, 431], "mere": [426, 434], "merg": 424, "meshgrid": [417, 418], "messag": [77, 396], "meta": [28, 72, 167, 169, 170, 171, 172, 175, 390, 391, 392, 393, 407, 413, 421, 423, 443], "metadata": [28, 198, 206, 292, 423], "metarecommend": [169, 170, 171, 172, 423, 432], "methanol": 402, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 80, 85, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 206, 223, 238, 240, 241, 242, 244, 248, 250, 251, 258, 260, 262, 264, 266, 268, 271, 274, 275, 278, 280, 286, 301, 304, 313, 317, 343, 356, 363, 364, 365, 367, 397, 400, 414, 415, 420, 423, 425, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 442], "methodtyp": [395, 396, 397], "methyldiphenylphosphin": [380, 381, 382], "methylisoxazol": 442, "metric": [405, 421, 431, 435], "mhfp": 137, "mhfpfingerprint": 137, "micromamba": 423, "middl": 432, "midpoint": 441, "might": [50, 54, 143, 200, 381, 385, 387, 391, 411, 418, 422, 428, 429, 430, 431, 433, 437, 439, 442, 444], "mimic": [90, 151, 430], "min": [283, 329, 379, 387, 388, 397, 407, 410, 411, 417, 418, 421, 423, 434, 438, 443], "min_cardin": [31, 41, 48], "min_nonzero": 206, "min_target": 441, "mind": [405, 440], "miniconda": 423, "minim": [6, 283, 407, 417, 418, 423, 437, 441], "minimum": [31, 41, 48, 140, 198, 200, 206], "minor": 423, "mirror": [429, 438], "miss": [229, 231, 382, 423, 424], "mistak": 424, "mix": [235, 402, 403, 421, 430, 435, 438, 442], "mixin": 223, "mixtur": [189, 419, 423, 430, 435, 436, 442, 444], "mobil": 423, "mode": [109, 132, 143, 170, 229, 238, 283, 286, 289, 311, 328, 378, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 396, 397, 399, 400, 410, 411, 413, 414, 415, 417, 418, 419, 421, 422, 423, 434, 436, 438, 443], "model": [13, 28, 31, 32, 33, 34, 35, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 68, 70, 85, 89, 90, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 238, 240, 241, 242, 243, 244, 248, 262, 264, 266, 268, 272, 274, 275, 350, 387, 388, 398, 417, 418, 421, 423, 425, 427, 428, 429, 430, 435, 436, 438, 439, 441, 442, 443], "model_cl": 275, "model_cluster_num_parameter_nam": [189, 190, 191, 192], "model_from_config": 399, "model_from_python": 399, "model_init": 274, "model_json": 399, "model_param": [189, 190, 191, 192, 262, 266, 268, 400, 423], "modelnottrainederror": [238, 240, 241, 244, 248, 262, 264, 266, 268], "modif": [422, 426], "modifi": [171, 231, 272, 328, 329, 330, 423, 426, 444], "modul": [0, 1, 29, 81, 82, 90, 110, 123, 141, 151, 162, 165, 175, 178, 185, 196, 214, 215, 227, 236, 246, 253, 276, 279, 296, 300, 348, 368, 371, 421, 422, 423, 424], "modular": 424, "molecul": [52, 143, 322, 402, 435], "molecular": [323, 435], "moment": [235, 258, 424, 441], "monitor": [423, 431], "monkeypatch": 422, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 71, 233, 379, 381, 382, 396, 405, 417, 418, 423, 428, 439], "monte_carlo_run": [233, 396], "mordr": [137, 143, 380, 381, 382, 384, 385, 391, 396, 400, 402, 414, 415, 421, 423, 430, 435], "mordredcommun": 423, "mordredfingerprint": [137, 435], "more": [8, 10, 54, 59, 73, 143, 170, 171, 198, 200, 206, 213, 229, 272, 291, 294, 317, 358, 382, 385, 397, 402, 403, 417, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 435, 437, 438, 439, 441, 444], "morgan": 435, "morgan_fp": [137, 423], "mors": 137, "morsefingerprint": 137, "most": [206, 229, 383, 405, 421, 424, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444], "motiv": 423, "move": [423, 438], "mpl_toolkit": 397, "mplot3d": 397, "mqn": 137, "mqnsfingerprint": 137, "mse": 405, "mu": [159, 160], "much": [381, 434, 435], "multi": [237, 238, 419, 423, 425, 428, 442], "multiarmedbandit": 405, "multipl": [37, 117, 232, 233, 330, 380, 381, 382, 391, 402, 405, 421, 423, 428, 430, 434, 441, 442, 443], "multipli": 106, "multitask": 423, "must": [50, 112, 117, 122, 200, 206, 231, 235, 313, 330, 376, 385, 395, 396, 402, 405, 407, 423, 424, 426, 427, 430, 431, 432, 434, 435, 439], "mutual": 439, "my_attribut": 424, "my_valu": 431, "mypi": [304, 314, 421, 423, 424], "mystr": 424, "n": [23, 238, 299, 318, 364, 380, 381, 382, 384, 385, 390, 391, 392, 393, 400, 402, 405, 407, 410, 411, 413], "n_arm": 405, "n_batches_don": 28, "n_cluster": [190, 191], "n_combin": 402, "n_combinations_actu": 402, "n_combinations_expect": 402, "n_compon": 189, "n_doe_iter": [229, 233, 235, 379, 380, 381, 382, 396, 397, 417, 418, 439], "n_duplic": 402, "n_estim": 400, "n_fits_don": 28, "n_interrupted_campaign": 396, "n_iter": [387, 388, 390, 391, 392, 393, 405, 407], "n_mc_iter": [233, 235, 379, 381, 382, 396, 417, 418, 439], "n_mc_run": 405, "n_mc_sampl": 18, "n_permut": 402, "n_pis_ov": 396, "n_pis_over_requir": 396, "n_point": [198, 365], "n_raw_sampl": [182, 423, 436], "n_restart": [182, 423, 436], "n_row": 332, "n_sampl": 364, "n_task": 200, "n_task_param": 423, "n_wrong_sum": 402, "naiv": [174, 264, 272, 385, 423, 437], "naivehybridrecommend": 423, "naivehybridspacerecommend": [411, 423, 436], "nake": [294, 431], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 41, 59, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 146, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 212, 221, 233, 244, 278, 280, 286, 298, 305, 311, 312, 313, 322, 323, 328, 333, 337, 338, 351, 356, 358, 370, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 403, 405, 407, 409, 410, 411, 413, 414, 415, 417, 418, 421, 423, 424, 426, 428, 430, 431, 434, 437, 438, 439, 440, 441, 442, 444], "name_or_abbr": [305, 312], "namedtupl": 405, "namespac": [183, 423, 424], "nan": [149, 238, 372, 374, 375, 376, 377, 407], "nativ": [399, 423], "natur": [266, 381, 424, 430, 436, 438, 441], "navig": [421, 429], "nbase": 323, "nbviewer": 399, "nd": 421, "ndarrai": [118, 288, 289, 290, 331, 340, 343, 354, 364, 397, 405, 423, 439], "ne": 402, "nearli": 441, "necessari": [338, 395, 423, 424, 429, 430, 434, 435, 437, 439], "necessarili": [426, 429, 430, 437, 442], "need": [23, 28, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 235, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 313, 337, 338, 380, 381, 382, 385, 390, 393, 395, 397, 399, 402, 405, 407, 417, 418, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 444], "neg": [13, 423], "negat": [6, 42, 418, 423, 442], "neglig": 426, "neither": [8, 235, 330], "neq": 31, "nest": [358, 429, 443], "neural": 442, "neurip": 442, "neutral": 8, "never": 392, "nevertheless": [317, 422], "new": [28, 44, 45, 109, 170, 172, 198, 231, 243, 288, 289, 290, 298, 335, 336, 384, 396, 397, 413, 421, 423, 424, 429, 430, 440, 442], "new_measur": 433, "new_rec": 429, "newli": [421, 424, 431, 432, 442], "next": [28, 379, 395, 397, 402, 403, 413, 417, 418, 421, 427, 428, 429, 436, 438], "ngboost": [266, 385, 423], "ngboostmodel": 400, "ngboostsurrog": [385, 400, 440], "nice": [397, 422], "nicknam": 322, "nintern": 407, "no_duplicates_constraint": 402, "no_grad": 397, "no_tl": 417, "nois": [229, 329, 330, 418, 423, 443], "noise_level": 330, "noise_perc": [229, 233, 439], "noise_ratio": 329, "noise_std": [417, 418], "noise_typ": 330, "noisi": [12, 14, 332, 417, 421, 423, 442], "non": [58, 59, 84, 112, 117, 122, 167, 169, 170, 171, 172, 174, 200, 229, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 311, 313, 317, 329, 365, 372, 373, 374, 376, 377, 402, 417, 421, 423, 426, 428, 432, 433, 437, 438], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 39, 44, 45, 54, 58, 59, 85, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 107, 109, 117, 122, 126, 139, 140, 145, 148, 149, 150, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 203, 206, 209, 212, 213, 216, 217, 219, 221, 229, 231, 233, 235, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 274, 275, 280, 286, 294, 295, 302, 303, 313, 323, 328, 333, 334, 335, 339, 343, 344, 356, 367, 372, 373, 374, 375, 376, 377, 385, 390, 391, 392, 393, 395, 396, 397, 399, 400, 407, 413, 437, 441, 443], "nonetheless": 442, "nonlinear": [34, 198], "nonpredict": [187, 189, 190, 191, 192, 194, 195], "nonpredictiverecommend": [192, 194, 195, 423], "nonzero": [31, 206, 423], "noqa": [390, 424], "nor": [8, 330, 420], "norecommenderslefterror": [170, 171], "noreturn": [174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 245], "normal": [158, 159, 160, 390, 392, 393, 407, 422, 426, 434, 437], "normaliz": 434, "normalprior": 423, "not_a_param": 400, "notabl": [423, 432], "note": [31, 54, 200, 229, 233, 235, 243, 244, 328, 329, 330, 380, 381, 382, 385, 391, 395, 399, 400, 402, 407, 410, 411, 413, 414, 415, 420, 421, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 442], "notebook": 399, "noteworthi": 429, "noth": [13, 28, 31, 39, 41, 42, 48, 74, 117, 130, 143, 172, 174, 180, 182, 189, 190, 191, 192, 198, 200, 206, 238, 248, 262, 266, 268, 286, 426, 435], "notic": [395, 424, 426, 438], "notimplementederror": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 118, 213, 216, 217, 235, 238, 240, 241, 243, 244, 248, 262, 264, 266, 268], "notwithstand": 426, "now": [379, 380, 381, 382, 384, 385, 390, 392, 395, 396, 397, 402, 403, 405, 407, 409, 413, 414, 417, 418, 420, 421, 423, 442, 444], "np": [118, 387, 388, 390, 391, 392, 393, 397, 399, 400, 402, 403, 405, 409, 410, 411, 413, 417, 418, 430, 435, 439, 444], "nrecommend": [384, 385, 407, 410, 411], "nu": 97, "num": [336, 347], "num_disc_1": [407, 429], "num_disc_2": 407, "num_experi": [229, 379, 380, 381, 382, 396, 417, 418], "num_fantasi": 10, "num_parameter_1": 393, "num_parameter_2": 393, "num_parameter_3": 393, "num_parameter_4": 393, "num_parameter_5": 393, "num_parameter_6": 393, "num_sampl": 102, "num_valu": [390, 391, 392, 393, 407, 413, 437], "number": [10, 13, 18, 28, 41, 102, 143, 164, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 229, 233, 235, 238, 332, 339, 343, 347, 359, 364, 365, 380, 381, 382, 387, 388, 390, 391, 392, 393, 397, 402, 405, 410, 417, 418, 421, 422, 423, 427, 429, 430, 431, 434, 435, 437, 438, 439, 444], "numer": [28, 31, 32, 33, 34, 35, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 75, 125, 126, 127, 129, 130, 132, 139, 140, 143, 198, 206, 231, 286, 329, 330, 337, 365, 376, 377, 379, 384, 387, 402, 403, 423, 430, 431, 433, 434, 435, 437, 439, 441], "numerical_measurements_must_be_within_toler": [28, 376, 423, 429], "numerical_onli": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56], "numericalcontinuousparamet": [42, 198, 379, 387, 388, 403, 409, 411, 418, 437, 439, 443], "numericaldiscreteparamet": [206, 380, 381, 382, 384, 385, 387, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 407, 410, 411, 413, 414, 415, 417, 418, 421, 437, 438, 439, 443, 444], "numericaltarget": [231, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 396, 397, 399, 400, 407, 410, 411, 413, 414, 415, 417, 418, 421, 423, 434, 438, 439, 443], "numericcontinu": 411, "numparam1": 393, "numparam2": 393, "numparam3": 393, "numparam4": 393, "numparam5": 393, "numparam6": 393, "numpi": [331, 340, 343, 349, 351, 387, 388, 390, 391, 392, 393, 397, 399, 400, 402, 403, 405, 409, 410, 411, 413, 417, 418, 423, 430, 439, 444], "nuniqu": 402, "nyou": [410, 411], "o": [379, 380, 381, 382, 384, 385, 388, 390, 391, 392, 393, 396, 397, 400, 402, 405, 417, 418, 421, 430, 431, 435], "o2": [380, 381, 382], "obj": [148, 149, 150, 217], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 117, 120, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 206, 207, 208, 217, 218, 221, 223, 238, 240, 241, 242, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 301, 304, 311, 313, 330, 337, 338, 343, 356, 367, 379, 384, 395, 396, 397, 399, 400, 405, 409, 411, 414, 415, 422, 423, 424, 426, 429, 430, 432, 433, 436, 437, 439, 440, 441, 443, 444], "objective_json": 438, "oblig": 426, "observ": [227, 405, 439, 441], "obsolet": 423, "obtain": [229, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 381, 397, 405, 418, 421, 423, 429, 433, 438, 442], "oc": [380, 381, 382, 384, 385], "oc1": [380, 381, 382], "occur": [53, 424], "occurr": 430, "octanol": [430, 435], "off": [8, 235, 318, 391, 421, 423, 430, 431, 441], "offer": [313, 397, 402, 405, 410, 420, 421, 422, 426, 427, 432, 435, 436, 438, 439, 440, 442, 444], "offset": [42, 100], "offset_initial_valu": 100, "offset_prior": 100, "often": [403, 405, 422, 427, 430, 431, 432, 433, 435, 438, 444], "oftentim": [438, 439], "oh": [129, 134, 381, 391, 400, 405, 407, 413, 414, 415, 421, 437, 438], "ok": 407, "old": 442, "omit": [233, 313, 395, 421, 437, 438], "onc": [233, 396, 435, 439], "one": [18, 59, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 155, 164, 165, 170, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 200, 213, 231, 248, 272, 298, 299, 332, 358, 380, 381, 382, 385, 387, 402, 405, 407, 415, 417, 418, 420, 421, 422, 423, 424, 426, 428, 429, 430, 432, 434, 435, 437, 438, 439, 440, 441, 442], "onehot": 381, "ones": [200, 294, 337, 381, 411, 423, 428, 442], "ongo": [396, 442], "onli": [10, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 85, 97, 112, 117, 122, 143, 200, 206, 231, 235, 272, 294, 295, 313, 314, 317, 328, 337, 343, 358, 364, 365, 380, 385, 390, 391, 396, 397, 399, 400, 402, 410, 411, 418, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444], "onlin": 405, "onnx": [243, 244, 350, 398, 421, 423, 440], "onnx_input_nam": [244, 399], "onnx_str": [244, 399], "onto": 424, "open": [421, 424], "opentelemetri": [421, 423, 431], "oper": [39, 42, 51, 219, 272, 331, 348, 387, 388, 392, 393, 402, 403, 422, 423, 428, 430, 431, 432, 433, 436, 438], "operator_convert": 399, "opposit": 430, "opt": [421, 431], "optim": [18, 28, 42, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 227, 229, 233, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 328, 381, 383, 384, 387, 388, 396, 397, 402, 405, 407, 411, 423, 425, 427, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442], "optimize_acqf": [42, 182], "optimize_acqf_": 42, "optimize_acqf_discret": 182, "optimize_acqf_mix": 182, "option": [28, 76, 81, 85, 96, 97, 98, 99, 100, 101, 102, 103, 107, 117, 122, 126, 129, 130, 132, 140, 143, 145, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 219, 221, 229, 233, 235, 262, 266, 268, 274, 280, 286, 313, 323, 328, 333, 334, 335, 356, 382, 385, 399, 400, 405, 422, 423, 424, 427, 429, 430, 432, 433, 434, 437, 438, 439, 440, 441, 444], "oracl": 439, "orchestr": [424, 429], "order": [200, 206, 396, 405, 420, 421, 423, 424, 429, 430, 435, 438, 442], "ordin": 441, "org": [260, 304, 335, 399, 421, 426], "organ": 424, "origin": [23, 28, 298, 299, 308, 331, 413, 420, 423, 424, 426, 436, 438, 440], "orthogon": 424, "oserror": 422, "other": [50, 104, 198, 299, 380, 382, 384, 385, 387, 388, 396, 403, 405, 411, 417, 418, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 444], "otherwis": [42, 125, 126, 127, 129, 130, 132, 139, 140, 143, 426, 427, 432, 434, 442], "our": [379, 390, 392, 395, 396, 397, 400, 402, 403, 405, 409, 410, 411, 414, 415, 417, 418, 421, 424, 427, 429, 430, 432, 438, 439], "out": [206, 407, 418, 421, 426, 431, 439, 442], "outcom": [164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 381, 421, 435, 441], "output": [28, 107, 330, 331, 332, 356, 379, 417, 418, 422, 423, 425, 439, 440], "output_label": 331, "outputscal": 107, "outputscale_initial_valu": 107, "outputscale_prior": 107, "outsid": [28, 171, 272, 289, 290, 328, 407, 423, 438], "outstand": 426, "over": [28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 402, 420, 423, 427, 429, 432, 442], "overal": [200, 399, 400, 402, 403, 405, 423, 424, 429, 434, 442], "overlap": [58, 59, 387, 388, 430], "overrid": [219, 221, 395, 423], "overridden": [395, 424], "overview": [421, 438], "overwritten": 411, "own": [174, 379, 403, 421, 422, 423, 424, 426, 430, 435], "owner": 426, "ownership": 426, "p": [379, 380, 381, 382, 384, 385, 387, 388, 395, 397, 410, 417, 418, 424, 432, 433, 440, 444], "p1": [437, 438, 439], "p1_json": 438, "p1_via_json": 438, "p2": [437, 438, 439], "p2_json": 438, "p2_via_json": 438, "p3c4": [380, 381, 382], "p_cont": 437, "p_disc": 437, "p_g1_amount": 403, "p_g2_amount": 403, "p_g3_amount": 403, "p_i": 31, "pack": 438, "packag": [85, 137, 292, 390, 392, 393, 422, 423, 424, 435, 439, 440, 444], "page": [399, 421, 423, 424, 432], "pair": [298, 421, 435], "pam": 191, "pamclusteringrecommend": 436, "panda": [49, 207, 225, 226, 231, 322, 340, 379, 380, 381, 382, 387, 388, 390, 396, 397, 402, 403, 407, 410, 411, 417, 418, 423, 430, 431, 435, 437, 438, 439], "panic": 420, "paper": 442, "paper_fil": 442, "parallel": 424, "param": [398, 400, 419], "param1": [437, 439], "param2": [437, 439], "param_bounds_comp": 423, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 73, 77, 85, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 118, 122, 125, 126, 129, 130, 132, 134, 135, 136, 137, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 202, 205, 206, 207, 208, 211, 212, 213, 219, 221, 223, 227, 229, 231, 233, 235, 238, 240, 241, 244, 248, 251, 258, 260, 262, 264, 266, 268, 270, 272, 274, 275, 278, 280, 286, 288, 289, 290, 294, 295, 298, 299, 306, 307, 308, 311, 313, 316, 317, 318, 321, 322, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 347, 352, 353, 354, 356, 358, 360, 361, 364, 365, 367, 376, 377, 379, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 399, 405, 407, 409, 410, 411, 413, 414, 415, 417, 418, 421, 423, 424, 430, 431, 432, 434, 438, 439, 440, 442, 443], "parameter": [155, 156, 157, 158, 159, 160, 161], "parameter_json": 438, "parameter_nam": [198, 200, 206, 411], "parameterencod": [126, 134, 135, 137, 140], "parametr": 430, "parent": 424, "pars": [345, 423], "parser": 423, "part": [13, 23, 28, 37, 67, 175, 198, 200, 206, 328, 377, 400, 411, 414, 415, 417, 418, 423, 424, 426, 427, 428, 429, 430, 436, 437, 438, 444], "parti": [426, 439], "partial": [23, 396, 443], "particl": 442, "particular": [28, 206, 227, 395, 411, 420, 421, 422, 424, 426, 429, 435, 437, 438, 439], "particularli": [313, 429], "partit": [191, 233, 235, 423, 436, 439], "partitionexplain": [83, 86], "pass": [28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 65, 85, 143, 189, 190, 191, 192, 200, 206, 217, 248, 262, 266, 268, 332, 338, 402, 413, 418, 423, 424, 428, 432, 433, 434, 435, 438], "passthrough": [25, 113, 202, 252], "patch": 396, "patent": 426, "path": [356, 381, 402, 423, 424, 431, 444], "pattern": [137, 424, 442], "patternfingerprint": 137, "pd": [28, 231, 298, 299, 336, 379, 380, 381, 382, 387, 388, 390, 396, 397, 402, 403, 407, 410, 411, 417, 418, 423, 430, 432, 435, 437, 438, 439], "pdf": 442, "peek": 438, "pend": [23, 28, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 421, 423, 443], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 423, 428, 429], "per": [229, 380, 381, 382, 385, 402, 407, 410, 417, 418, 423, 435, 437, 439], "percent": [229, 426], "percentag": [182, 294, 330, 385, 390, 391, 392, 393, 402, 407, 413, 418, 436], "perf_count": 395, "perfectli": 438, "perform": [182, 229, 294, 337, 381, 390, 391, 392, 393, 397, 402, 414, 417, 418, 420, 421, 423, 424, 426, 427, 429, 431, 433, 435, 436, 439, 440, 442], "period": 98, "period_length_initial_valu": 98, "period_length_prior": 98, "periodickernel": 423, "perm_inv_constraint": 402, "perman": 443, "permiss": [421, 426], "permut": [50, 53, 54, 299, 423, 430], "permutation_invari": 50, "permutationexplain": [83, 86], "perpetu": 426, "persist": [423, 425, 429, 431, 438, 440], "perspect": 438, "pertain": 426, "pharmacophor": 137, "pharmacophorefingerprint": 137, "phase": [172, 403], "phaseagent1": 403, "phaseagent2": 403, "phcpho": [380, 381, 382, 384, 385], "phenomenon": 429, "philosophi": 438, "physic": [433, 439], "physiochemicalproperti": 137, "physiochemicalpropertiesfingerprint": 137, "pi": [7, 385, 396, 397], "pi_max": 397, "pi_per_iter": 397, "pi_required_fract": 396, "pi_threshold": 396, "pickl": 423, "pictur": 421, "piec": [405, 421, 429, 430], "piecewis": 99, "piecewisepolynomialkernel": 423, "pin": [23, 423], "pin_discret": 23, "pinned_part": 23, "pip": [421, 423, 424, 433, 444], "pipelin": [417, 418, 423, 424], "pival": [380, 381, 382, 384, 385], "pl": [35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56], "place": [31, 231, 328, 329, 330, 399, 400, 402, 405, 422, 423, 424, 426, 429, 432, 435, 438, 442], "placehold": 301, "plai": [429, 433, 441], "plain": 252, "plainkernelfactori": [92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 248], "plan": [243, 432, 435], "platt": 442, "pleas": [399, 400, 421, 427, 433, 436], "plenti": 433, "plot": [85, 87, 229, 380, 381, 382, 417, 418, 423, 440, 442, 443], "plot_abegin_convert_pipelin": 350, "plot_ebegin_float_doubl": 350, "plot_typ": 85, "plotting_them": 356, "plt": [380, 382, 397], "plu": [231, 421], "plugin": 423, "pm": [5, 385], "png": [380, 382], "po16": 435, "poetri": 423, "point": [6, 13, 18, 23, 27, 28, 85, 140, 164, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 337, 349, 350, 362, 363, 364, 365, 369, 380, 384, 385, 396, 403, 410, 411, 417, 418, 420, 421, 423, 425, 427, 428, 429, 432, 433, 436, 437, 443, 444], "points_per_dim": [397, 410, 411, 417, 418], "polar": [35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 208, 421, 423, 425, 443, 444], "poli": 397, "polici": 405, "polycollect": 397, "polym": 435, "polynomi": [99, 100], "polynomialkernel": 423, "polytop": 423, "popul": 402, "popular": [433, 435, 440], "posit": [85, 313, 364, 423, 433, 434], "posixpath": 356, "possibl": [28, 145, 206, 207, 208, 227, 313, 328, 382, 396, 397, 402, 407, 421, 423, 426, 429, 430, 431, 432, 435, 436, 437, 438, 439, 441, 442, 444], "post": 435, "post_hook": [313, 395, 396, 397], "posterior": [5, 6, 13, 15, 18, 28, 238, 240, 241, 244, 248, 262, 264, 266, 268, 271, 385, 423, 427, 440], "posterior_mean": [238, 405], "posterior_mod": 238, "posteriorstandarddevi": [405, 427], "postprocess": 322, "potassium": [380, 381, 382, 384, 385], "potenti": [200, 421, 422, 423, 424, 429, 433, 434, 437, 444], "power": [100, 426, 430, 436], "pph3": [380, 381, 382], "pr": [423, 424], "practic": [427, 433, 436], "pre": [145, 170, 251, 398, 422, 423, 424], "pre_hook": [313, 395], "precis": [54, 170, 198, 294, 339, 350, 351, 370, 423, 443], "precomput": 132, "predefin": [356, 429, 436], "predict": [28, 70, 192, 238, 240, 241, 244, 248, 262, 264, 266, 268, 421, 423, 427, 428, 429, 439, 440, 442], "predictor": 270, "prefer": [28, 426, 432, 438], "prefix": 323, "preliminari": 442, "prepar": [397, 424, 426, 444], "preprocess": 423, "presenc": 422, "present": [66, 85, 112, 117, 122, 200, 298, 299, 313, 384, 405, 423, 430, 439, 444], "preset": [248, 255, 258, 260, 423], "pressur": [392, 399, 400, 413, 414, 415, 421, 430], "pretrain": [244, 398, 419], "pretti": 339, "pretty_print_df": [402, 423], "prevent": [216, 217, 313, 422, 423, 424], "previou": [170, 396, 397, 423, 429, 431, 442], "previous": [294, 380, 381, 382, 384, 392, 428, 429], "price": 435, "primari": 429, "primarili": 427, "principl": [402, 405, 440], "print": [231, 339, 358, 380, 381, 382, 384, 385, 387, 388, 392, 395, 399, 400, 402, 403, 405, 409, 410, 411, 413, 414, 415, 421, 423, 437, 444], "print_parameter_names_hook": 395, "printer_inst": 395, "prior": [96, 97, 98, 99, 100, 101, 102, 103, 107, 155, 156, 157, 158, 159, 160, 161, 238, 258, 393, 421, 422, 423], "priori": [430, 438, 442], "privat": [423, 425], "probabilist": 427, "probability_of_improv": 397, "probabilityofimprov": [396, 397], "probabl": [7, 16, 18, 385, 394, 396, 419, 423], "problem": [402, 403, 405, 417, 418, 423, 424, 429, 434, 438], "problemat": [317, 422, 435], "proce": [229, 384, 431], "procedur": [427, 442], "proceed": 442, "process": [28, 90, 246, 247, 248, 249, 253, 254, 255, 257, 258, 259, 260, 336, 364, 385, 395, 402, 405, 417, 418, 423, 424, 427, 428, 429, 430, 431, 432, 435, 438, 442], "prod": 393, "prod_constraint": 393, "prod_i": 434, "produc": [118, 231, 421, 423, 424, 431, 439], "product": [55, 106, 200, 206, 207, 208, 309, 389, 419, 421, 423, 426, 430, 432, 443, 444], "product_paramet": [206, 402, 437], "productkernel": 423, "programmat": 402, "progress": [28, 168, 397, 423, 432], "prohibit": 427, "project": [397, 421, 423, 431], "promin": 426, "promis": [396, 428], "proper": 423, "properli": [23, 407, 422, 437], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 85, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 120, 122, 125, 126, 127, 129, 130, 132, 134, 135, 137, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 201, 205, 206, 238, 240, 241, 244, 248, 251, 255, 258, 260, 262, 264, 266, 268, 278, 280, 283, 284, 286, 303, 304, 343, 363, 367, 423, 424, 430, 432], "proport": 418, "propos": 429, "protobuf": 423, "protocol": [163, 164, 242, 250, 317, 423], "prototyp": 425, "provid": [13, 28, 42, 85, 89, 118, 132, 143, 145, 164, 170, 171, 174, 175, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 219, 223, 227, 229, 231, 233, 235, 238, 240, 241, 244, 248, 258, 260, 262, 264, 266, 268, 298, 309, 313, 325, 329, 330, 335, 338, 340, 364, 365, 379, 380, 381, 382, 395, 402, 409, 410, 411, 414, 417, 418, 421, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "prune": [12, 14], "prune_baselin": [12, 14], "pstd": [6, 423, 427], "pubchem": 137, "pubchemfingerprint": 137, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 85, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 120, 122, 125, 126, 127, 129, 130, 132, 134, 135, 137, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 201, 205, 206, 223, 238, 240, 241, 242, 244, 248, 250, 251, 255, 258, 260, 262, 264, 266, 268, 278, 280, 283, 284, 286, 301, 303, 304, 343, 363, 367, 423, 424], "publicli": 426, "publish": 423, "pull": [405, 423], "punish": 8, "pure": [8, 10, 13, 165, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 200, 235, 243, 365, 410, 423, 443], "purerecommend": [167, 169, 170, 171, 172, 174, 180, 187, 423], "purpos": [13, 395, 396, 399, 405, 421, 422, 424, 426, 432, 438, 444], "push": 424, "put": [402, 405, 431, 435], "puzzl": 421, "py": [260, 390, 392, 393, 423, 431], "py310": [390, 392, 393], "py312": 424, "pyarrow": 423, "pydant": 423, "pydoclint": [423, 424], "pydocstyl": 424, "pylint": 423, "pymatgen": 422, "pypi": [421, 423], "pyplot": [380, 382, 397], "pyproject": 423, "pytest": [423, 424], "python": [27, 304, 314, 381, 400, 414, 415, 421, 422, 423, 424, 429, 431, 438], "python3": [390, 392, 393], "python310": 422, "pytorch": 423, "pyupgrad": 423, "q": [99, 270, 271, 385, 428], "qei": [9, 385, 414, 415, 423], "qkg": [10, 423], "qlogei": [11, 385, 423], "qlogexpectedimprov": [385, 390, 391, 392, 393, 407, 413], "qlognei": [12, 423], "qnegintegratedposteriorvari": 427, "qnei": [14, 423], "qnipv": [13, 423, 427], "qpi": [16, 385], "qposteriorstandarddevi": 427, "qpstd": [15, 423, 427], "qsimpleregret": 18, "qsr": [17, 423], "qt": 18, "qthompsonsampl": [405, 423], "quadrat": [103, 379], "qualiti": 424, "quantif": 442, "quantifi": [405, 427, 442], "quantiti": [28, 52, 431, 433, 434, 440, 444], "quantum": 132, "qucb": [19, 385, 423, 427], "queri": [165, 175, 227, 229, 231, 421, 429, 431, 432, 439], "question": [424, 429, 442], "qupperconfidencebound": 427, "qvarucb": 423, "r": [380, 381, 382, 384, 385], "radial": 101, "radiu": [137, 423, 435], "rais": [13, 28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 85, 89, 118, 145, 149, 150, 170, 171, 180, 182, 198, 200, 206, 212, 213, 216, 217, 229, 231, 235, 238, 240, 241, 243, 244, 245, 248, 262, 264, 266, 268, 275, 299, 311, 313, 316, 318, 321, 325, 326, 328, 329, 330, 332, 337, 338, 358, 364, 365, 376, 377, 395, 396, 397, 411, 422, 423, 424, 428, 436], "rand": 399, "random": [13, 102, 198, 200, 229, 231, 233, 267, 268, 328, 363, 364, 365, 379, 380, 381, 382, 385, 396, 397, 399, 403, 405, 418, 421, 423, 427, 435, 436, 439, 444], "random_campaign": 379, "random_forest": [268, 385], "random_se": [229, 233, 396, 439], "randomforestmodel": 400, "randomforestsurrog": [385, 423, 440], "randomli": [195, 379, 381, 427, 433, 436], "randomrecommend": [379, 380, 381, 382, 385, 390, 391, 392, 393, 395, 396, 397, 403, 405, 407, 423, 428, 436], "rang": [125, 126, 127, 129, 130, 132, 139, 140, 143, 278, 328, 329, 379, 387, 388, 390, 391, 392, 393, 397, 402, 405, 407, 409, 410, 411, 418, 421, 430, 437, 438, 439, 441, 444], "rank": 441, "rare": 423, "rastrigin": [387, 388, 410, 411], "rate": [156, 238, 405], "rather": [413, 422, 427, 438], "ration": 103, "ravel": [417, 418], "raw": [182, 438], "rbf": 101, "rbfkernel": 423, "rdf": 137, "rdffingerprint": 137, "rdkit": [137, 390, 392, 393, 423, 430, 435], "rdkit2ddescriptor": [137, 381, 390, 392, 393, 423], "rdkit2ddescriptorsfingerprint": 137, "rdkitfingerprint": 137, "re": [396, 410, 411, 424, 436], "reach": [288, 290, 407], "reachabl": 431, "reactant": [433, 435], "reaction": [381, 384, 421, 430, 433, 435, 442], "reactor": [428, 442], "reactora": 442, "reactorb": 442, "reactorc": 442, "read": [132, 200, 356, 381, 384, 421, 423, 424], "read_excel": [380, 381, 382, 396], "readabl": [205, 339, 347, 413, 423, 425, 426, 438], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 229, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 424, 428], "readm": [423, 424], "reagent": [430, 435], "real": [343, 421, 429, 441], "realist": 439, "realiz": [227, 439], "reason": [39, 189, 190, 191, 192, 381, 410, 423, 426, 427, 428, 430, 431, 435, 439], "reassembl": 438, "rebas": 424, "rec": [390, 391, 392, 393, 407, 428, 429], "rec_finish": 428, "rec_next": 428, "rec_pend": 428, "receiv": [426, 431, 438], "recip": 424, "recipi": 426, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 67, 72, 73, 85, 130, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 227, 229, 242, 243, 294, 328, 330, 332, 379, 380, 381, 382, 383, 387, 388, 390, 391, 392, 393, 395, 396, 397, 403, 405, 407, 414, 415, 417, 418, 419, 420, 421, 423, 424, 427, 431, 433, 435, 439, 440, 442, 443, 444], "recommendation_orig": 413, "recommendation_recr": 413, "recommended_arm_idx": 405, "recommender_with_hook": 396, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 85, 167, 169, 170, 171, 172, 177, 242, 395, 397, 420, 423, 428], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 198, 200, 206, 223, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 343, 421, 429, 431, 438], "record": [28, 294, 295, 421, 431, 442], "recreat": [255, 413, 438], "recreate_model": 400, "recurs": [167, 169, 170, 171, 172, 306, 307], "redesign": 423, "redistribut": 426, "reduc": [143, 397, 405, 417, 418, 432, 435], "reduct": 443, "ref": 421, "refactor": 423, "refer": [227, 260, 312, 328, 337, 350, 380, 381, 382, 385, 387, 388, 390, 391, 392, 393, 395, 397, 399, 400, 402, 407, 410, 411, 413, 422, 423, 429, 433, 434, 435, 436, 437, 438, 439, 440, 442], "referenc": 424, "refin": [396, 421, 423, 429, 432], "reflect": [174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 397, 423, 424, 427, 430, 435], "regard": [31, 37, 387, 388, 424, 426], "regim": [423, 433], "regist": [313, 394, 396], "register_custom_architectur": 423, "register_hook": [394, 395, 396, 397, 423], "registr": 423, "regress": 262, "regressor": 399, "regret": [17, 18], "regroup": 423, "regular": [18, 272, 409, 422, 423, 428, 442], "reinstal": 421, "rel": [229, 329, 430, 434], "relat": [52, 112, 117, 119, 122, 133, 200, 218, 282, 297, 411, 417, 418, 420, 421, 423, 429, 430, 431, 442], "relationship": [417, 418, 421, 424, 434, 442], "relative_perc": 330, "releas": [421, 423], "relev": [50, 85, 231, 337, 338, 391, 402, 423, 424, 429, 430, 432, 442, 444], "reli": [422, 423], "reliabl": 435, "remain": [53, 172, 235, 289, 379, 385, 390, 391, 392, 393, 402, 405, 407, 411, 413, 417, 418, 426, 435, 438, 439], "remain_switch": [172, 423], "remaind": 365, "remind": 423, "remot": 424, "remov": [49, 52, 53, 200, 206, 402, 424, 430, 437], "renam": [381, 417, 418, 423, 424], "render": [85, 399], "reoccur": 442, "reorder": 423, "reorgan": 423, "repeat": [405, 423, 424, 428, 429], "repetit": [233, 385, 396], "rephras": 430, "replac": [410, 411, 423, 424], "replic": 438, "repo": 423, "report": [164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 405, 422], "repositori": [381, 421, 424], "repr": 399, "repres": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 105, 106, 132, 200, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 325, 340, 343, 347, 364, 379, 402, 403, 405, 414, 415, 421, 423, 426, 429, 435, 437, 439, 444], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 206, 223, 238, 240, 241, 242, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 318, 320, 325, 328, 339, 343, 358, 390, 391, 392, 393, 399, 401, 407, 413, 423, 428, 429, 435, 438, 439, 443, 444], "reproduc": [396, 405, 423, 426, 443], "reproduct": 426, "request": [28, 72, 73, 118, 170, 171, 172, 213, 251, 292, 332, 364, 365, 420, 423, 428, 429, 432], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 41, 42, 48, 71, 172, 206, 275, 313, 384, 395, 396, 399, 403, 405, 407, 410, 414, 420, 421, 422, 423, 424, 426, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 441, 442, 444], "rerun": 399, "reserv": [421, 424], "reset_index": 417, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 391, 393, 402, 438], "resolv": 322, "resort": [272, 424, 438, 444], "resource_track": 422, "resp": [201, 382, 411], "respect": [28, 182, 201, 229, 233, 293, 298, 328, 402, 403, 424, 429, 430, 432, 433, 434, 438, 439, 440, 441, 444], "respond": 420, "respons": [167, 169, 170, 171, 172, 426, 429, 436], "restart": [170, 182], "restor": 438, "restr": 18, "restrain": 435, "restrict": [200, 206, 227, 233, 235, 390, 403, 423, 432, 439, 442, 443], "result": [10, 28, 143, 206, 229, 328, 336, 380, 381, 382, 384, 399, 400, 402, 403, 405, 407, 409, 417, 418, 421, 423, 425, 426, 427, 429, 430, 431, 433, 435, 436, 438, 439, 442, 443, 444], "result_baselin": [417, 418], "result_fract": 418, "results_interrupt": 396, "results_uninterrupt": 396, "retain": [426, 430], "retrain": [243, 244, 440], "retriev": [200, 227, 305, 306, 307, 321, 424, 439], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 85, 88, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 112, 113, 115, 117, 118, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 146, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 184, 187, 189, 190, 191, 192, 194, 195, 198, 200, 202, 203, 206, 207, 208, 209, 211, 212, 213, 216, 217, 219, 220, 221, 223, 225, 226, 229, 231, 233, 235, 238, 240, 241, 242, 244, 245, 248, 251, 252, 256, 262, 264, 266, 268, 270, 271, 272, 274, 275, 278, 280, 286, 288, 289, 290, 292, 293, 294, 295, 298, 299, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347, 352, 353, 354, 356, 357, 358, 364, 365, 367, 372, 373, 374, 375, 376, 377, 379, 390, 396, 397, 399, 402, 405, 417, 423, 429, 430, 439, 440, 444], "return_std": 399, "reus": [172, 423], "reuse_last": 170, "reveal": [397, 403, 418], "review": 424, "revis": [423, 426], "reward": [8, 405], "rework": 423, "rewrit": 423, "rff": 102, "rffkernel": 423, "rh": [42, 44, 45, 387, 388, 403, 430], "right": [42, 161, 337, 343, 380, 382, 391, 405, 421, 422, 424, 426, 430, 432, 434, 435, 441], "right_df": 337, "rihana": 425, "rim": 425, "risk": [8, 422, 426, 429], "roam": 422, "robust": [421, 423, 442], "robustli": 272, "role": [423, 424, 429, 433, 434, 439, 441, 443], "room": [397, 429], "root": [381, 421, 424, 430], "round": [339, 387, 399, 400, 430], "roundtrip": [423, 438], "rout": 438, "row": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 118, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 231, 294, 298, 299, 329, 332, 336, 337, 339, 354, 380, 382, 390, 391, 392, 393, 402, 403, 407, 413, 423, 429, 432, 437, 439], "rowei": 442, "roya": 425, "royalti": 426, "rq": 103, "rqkernel": 423, "ruff": [423, 424], "rule": [395, 423], "run": [229, 233, 380, 381, 382, 396, 397, 417, 418, 421, 422, 423, 424, 429, 432, 438, 439, 444], "run_full_initial_data": 380, "run_impute_mod": 382, "runner": [390, 392, 393], "runtim": [350, 422], "runtimeerror": [28, 170, 395], "rv": 405, "s3": 423, "s41586": [260, 335], "safe": [423, 424, 429], "safeti": 313, "sai": 430, "said": 424, "sake": 402, "same": [52, 172, 206, 212, 231, 238, 240, 241, 244, 248, 262, 264, 266, 268, 308, 385, 396, 399, 400, 402, 405, 413, 422, 423, 430, 431, 432, 438, 439, 442], "sampl": [10, 13, 18, 41, 182, 194, 195, 198, 295, 362, 363, 364, 365, 380, 385, 390, 391, 392, 393, 405, 407, 409, 413, 418, 421, 423, 425, 433, 443], "sample_from_full_factori": [198, 423], "sample_inactive_paramet": 41, "sample_uniform": [198, 409, 423, 439], "sampler": [385, 390, 391, 392, 393, 407, 413], "samples_full_factori": [198, 423], "samples_random": [198, 423], "sampling_algorithm": [363, 427], "sampling_fract": [13, 427], "sampling_method": [13, 427], "sampling_n_point": [13, 427], "sampling_percentag": [182, 436], "satisfi": [37, 38, 39, 206, 387, 388, 402], "save": [356, 380, 382, 399, 423, 439], "savefig": [380, 382], "scalar": [117, 407, 423, 434, 438], "scale": [107, 157, 158, 159, 160, 161, 367, 407, 417, 423, 427, 434], "scalekernel": 423, "scaler": 423, "scatter": [85, 87], "scenario": [235, 379, 380, 381, 382, 396, 402, 417, 418, 428, 430, 434, 442, 443, 444], "scene": [434, 439], "schema": 429, "schembl15068049": [380, 381, 382], "scheme": 423, "scienc": [421, 425], "scientif": [423, 442], "scikit": [137, 421, 423, 425, 435], "scipi": [354, 397, 405, 423], "scope": 379, "screen": [308, 442], "script": [322, 422, 423, 431, 444], "seaborn": [379, 380, 381, 382, 396, 417, 418], "seamlessli": 438, "search": [13, 23, 28, 35, 49, 52, 62, 67, 73, 77, 125, 126, 127, 129, 130, 132, 139, 140, 143, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 206, 210, 229, 233, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 294, 337, 338, 379, 382, 384, 386, 389, 390, 391, 392, 393, 395, 396, 397, 405, 407, 408, 413, 418, 423, 425, 428, 429, 430, 431, 432, 433, 436, 438, 439, 443], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 85, 125, 126, 127, 129, 130, 132, 139, 140, 143, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 201, 205, 206, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 379, 381, 384, 395, 396, 397, 399, 400, 402, 403, 405, 409, 413, 414, 415, 417, 419, 421, 423, 429, 430, 431, 432, 433, 435, 437, 438, 439, 444], "searchspace1": 409, "searchspace2": 409, "searchspace3": 409, "searchspace_ful": 432, "searchspace_json": 438, "searchspace_reduc": 432, "searchspacetyp": [174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 200, 385, 390, 391, 392, 393, 396, 397, 407, 413, 437], "secfp": 137, "secfpfingerprint": 137, "second": [336, 352, 354, 399, 400, 407, 415, 417, 430, 431, 433], "secondari": [421, 431], "section": [421, 423, 424, 426, 438], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 85, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 151, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 205, 206, 229, 233, 235, 238, 240, 241, 242, 244, 248, 251, 258, 260, 262, 264, 266, 268, 278, 280, 286, 291, 311, 317, 330, 336, 343, 367, 380, 381, 382, 387, 388, 395, 396, 400, 403, 411, 420, 421, 424, 429, 431, 432, 433, 434, 435, 438, 439, 443], "seed": [229, 233, 360, 361, 396, 397, 405, 421, 423, 444], "seek": 407, "seem": [350, 415, 422], "seen": 427, "select": [6, 37, 38, 39, 64, 71, 167, 169, 170, 171, 172, 175, 192, 194, 238, 240, 241, 244, 248, 262, 264, 266, 268, 289, 336, 364, 385, 391, 392, 402, 403, 405, 411, 421, 423, 427, 429, 430, 433, 435, 436, 438, 440], "select_recommend": [167, 169, 170, 171, 172, 423], "self": [313, 326, 372, 373, 374, 375, 395, 396, 397, 405, 424], "sell": 426, "semant": [423, 438], "sens": [54, 313, 317, 336, 430, 435], "sent": 426, "sentinel": [302, 303], "separ": [233, 235, 272, 311, 367, 368, 397, 420, 423, 424, 426, 438], "sequenc": [28, 42, 117, 149, 170, 171, 198, 200, 206, 207, 208, 211, 294, 298, 299, 313, 314, 323, 326, 331, 337, 338, 354, 434, 436], "sequenti": [169, 170, 171, 172, 182, 385, 390, 391, 392, 393, 407, 413, 423, 436], "sequential_continu": [182, 436], "sequential_greedy_x": 423, "sequentialgreedyrecommend": 423, "sequentialmetarecommend": [171, 436], "sequentialstrategi": 423, "seri": [28, 37, 38, 39, 49, 126, 129, 130, 132, 140, 143, 278, 280, 286, 390, 402, 423, 430, 432], "serial": [171, 206, 223, 295, 399, 419, 422, 423, 424, 430, 436, 443], "serializ": [421, 430, 436], "serialize_datafram": 438, "serialized_df": 225, "serializetostr": 399, "serialmixin": [21, 28, 32, 37, 94, 112, 127, 153, 167, 198, 200, 206, 241, 251, 278, 280, 286, 343, 423], "serv": [235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 337, 417, 418, 429, 430, 435], "servic": 426, "session": [244, 431, 438], "set": [28, 31, 39, 41, 52, 54, 58, 59, 85, 89, 143, 164, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 229, 233, 255, 293, 328, 335, 336, 356, 360, 361, 380, 381, 382, 383, 385, 390, 392, 395, 400, 401, 402, 403, 405, 407, 411, 420, 421, 423, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 442, 444], "set_box_aspect": 397, "set_dash": 396, "set_random_se": [397, 405, 444], "set_size_inch": [380, 382], "set_x_pend": 23, "set_xlabel": 397, "set_xtick": 397, "set_xticklabel": 397, "set_ylabel": 397, "set_ylim": 397, "set_zlabel": 397, "setpoint": 140, "setup": [229, 396, 430, 439, 444], "sever": [145, 165, 379, 381, 385, 396, 399, 405, 407, 409, 418, 421, 423, 424, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 442, 444], "sh": 433, "shall": [170, 330, 426, 434], "shap": [85, 421, 423, 425, 440, 443], "shap_valu": 440, "shape": [18, 198, 205, 284, 288, 290, 364, 437, 444], "shapinsight": [83, 84, 86, 87, 423, 433], "shaplei": 85, "share": [423, 426, 442], "shield": [260, 335, 381, 421, 435], "shift": 417, "shifted_hartmann": 417, "ship": [368, 431, 438], "shm": 422, "short": 424, "shortcut": [206, 437, 438], "shorten": [423, 424], "shot": 442, "should": [28, 50, 85, 130, 143, 172, 221, 233, 283, 298, 299, 328, 330, 334, 335, 339, 342, 343, 344, 352, 356, 390, 392, 396, 399, 402, 403, 411, 415, 421, 423, 424, 428, 429, 430, 437, 439, 440, 442, 444], "show": [85, 380, 381, 382, 384, 385, 390, 391, 392, 399, 400, 402, 405, 411, 413, 414, 415, 417, 418, 430, 433], "showcas": 436, "shown": [396, 405, 418, 423], "shrink": 397, "shutdown": 422, "side": [42, 289, 423], "sigma": [158, 159, 160, 161, 288, 407, 425], "signal": [61, 434], "signatur": [79, 275, 311, 313, 397, 423, 424, 430, 438], "significantli": [206, 405, 417, 418], "silenc": 424, "silent": [423, 430], "similar": [171, 422, 430, 431, 433, 435, 436, 437, 438, 442, 444], "similarli": 435, "simpl": [17, 18, 304, 381, 395, 396, 403, 421, 423, 436, 439, 441, 442], "simpler": [424, 438], "simplest": 437, "simplex": [206, 443], "simplex_paramet": [206, 402, 437], "simpli": [317, 395, 396, 424, 430, 432, 435, 436, 437, 438, 441, 442], "simplic": 313, "simplifi": 424, "simul": [74, 330, 392, 397, 421, 423, 442, 443], "simulate_experi": [233, 235, 439], "simulate_scenario": [235, 379, 380, 381, 382, 396, 417, 418, 439], "simulate_transfer_learn": [417, 439], "simulationresult": 405, "simultan": 434, "sinc": [54, 200, 243, 313, 380, 387, 388, 400, 410, 413, 414, 415, 417, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 442], "singer": 442, "singl": [18, 28, 37, 50, 85, 109, 122, 198, 200, 206, 229, 278, 280, 286, 343, 351, 358, 364, 370, 380, 381, 382, 391, 396, 402, 407, 417, 418, 421, 423, 430, 431, 432, 433, 434, 435, 437, 442, 443], "single_lin": 358, "singledispatch": 345, "singletargetobject": [28, 278, 280, 286, 380, 381, 382, 384, 385, 390, 391, 392, 393, 396, 399, 400, 413, 414, 415, 421, 423, 440, 443], "site": [390, 392, 393, 422], "situat": [390, 392, 402, 422, 424, 428, 430, 434, 435, 438, 439, 442], "six": [402, 403], "size": [18, 92, 93, 94, 97, 99, 101, 102, 103, 170, 172, 200, 205, 206, 295, 347, 397, 399, 405, 410, 411, 417, 418, 429, 438, 439, 442, 444], "sk": 399, "skeleton": 423, "skfp": 137, "skicit": 423, "skin": 439, "skip": [203, 209, 423, 429], "skl2onnx": 399, "sklearn": [192, 350, 399, 422], "sklearnclusteringrecommend": [189, 190, 191, 423, 428], "slightli": [227, 381, 402, 439], "slot": [401, 405, 419, 423, 430], "slot1_amount": 402, "slot1_label": 402, "slot2_amount": 402, "slot2_label": 402, "slot3_amount": 402, "slot3_label": 402, "slow": [390, 392, 393, 437], "slowest": 423, "small": [296, 300, 387, 402, 417, 418, 423, 427, 435], "smaller": [28, 405, 429, 442], "smallest": [198, 337, 437], "smart": 421, "smartli": 402, "smile": [143, 320, 322, 323, 421, 435], "smoke": 423, "smoke_test": [356, 379, 380, 381, 382, 388, 390, 391, 393, 396, 397, 405, 417, 418], "smooth": [97, 99, 161], "smoothedboxprior": 423, "smoother": 97, "sn": [379, 380, 381, 382, 396, 417, 418], "snippet": 431, "so": [28, 229, 243, 336, 382, 396, 402, 405, 410, 411, 421, 422, 429, 430, 431, 432, 434, 435, 436, 438, 441], "softwar": [421, 426], "sola": 425, "sole": 426, "solut": [429, 437, 438, 442], "solv": [243, 391, 392, 402, 405], "solv_rdkit2ddesc": 392, "solvent": [380, 381, 382, 384, 385, 390, 391, 392, 393, 396, 400, 402, 403, 414, 415, 421, 430, 435], "solvent1": [402, 403], "solvent2": [402, 403], "solvent3": 402, "solvent4": 402, "solvent5": 402, "solvent8": 402, "solvent9": 402, "solvent_1": 430, "solvent_2": 430, "solvent_3": 430, "solvent_data": 396, "solvent_encoding1": 430, "solvent_encoding2": 430, "solvent_mordred_enc": 430, "solvent_rdkit2dd": [390, 393], "solvent_rdkit_enc": 430, "solvent_smil": 396, "solver": 439, "some": [50, 350, 380, 381, 382, 385, 390, 391, 392, 393, 396, 397, 399, 400, 402, 403, 409, 410, 411, 413, 418, 428, 430, 431, 435, 436, 438, 439, 440, 444], "someth": [77, 415], "sometim": [430, 439], "somewhat": 431, "somewher": 429, "soon": [421, 429, 436], "sophist": [423, 432, 438], "sort": 146, "sourabh": 425, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 88, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 112, 113, 115, 117, 118, 120, 122, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 139, 140, 143, 145, 146, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 184, 187, 189, 190, 191, 192, 194, 195, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 216, 217, 219, 220, 221, 223, 225, 226, 229, 231, 233, 235, 238, 240, 241, 242, 244, 245, 248, 250, 251, 252, 255, 256, 258, 260, 262, 264, 266, 268, 270, 271, 272, 274, 275, 278, 280, 283, 284, 286, 288, 289, 290, 292, 293, 294, 295, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 352, 353, 354, 356, 357, 358, 360, 361, 363, 364, 365, 367, 375, 376, 377, 421, 422, 423, 424, 426], "space": [10, 13, 22, 23, 28, 35, 42, 49, 52, 62, 67, 69, 73, 77, 125, 126, 127, 129, 130, 132, 139, 140, 143, 164, 173, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 206, 209, 210, 229, 233, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 294, 337, 364, 379, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 405, 407, 408, 410, 413, 418, 419, 423, 425, 428, 430, 431, 432, 433, 435, 436, 438, 439, 443], "span": [125, 126, 127, 129, 130, 132, 139, 140, 143, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 294, 395, 405, 409, 433], "speak": 442, "spec": [203, 209, 220], "special": [172, 421, 422, 426, 427, 432, 442, 444], "specif": [90, 145, 151, 192, 200, 203, 216, 233, 272, 305, 376, 395, 396, 410, 421, 424, 429, 430, 432, 435, 436, 437, 438, 439, 440, 441, 442], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 50, 78, 89, 132, 143, 145, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 219, 220, 229, 231, 233, 242, 288, 289, 290, 298, 312, 321, 328, 331, 337, 338, 364, 365, 381, 385, 387, 399, 400, 405, 407, 417, 421, 422, 423, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442], "speed": [206, 390, 392, 393, 417, 418, 431, 437], "speed_fast": 437, "speed_norm": 437, "speed_slow": 437, "speedup": [423, 442], "spell": 424, "spellcheck": 423, "sphinx": [423, 424], "split": [174, 428], "sporad": 423, "spread": 441, "sqrt": 430, "squar": [405, 430], "squash": 424, "stabil": [423, 431], "stabl": [90, 151, 291], "stage": [429, 430, 438], "stand": 423, "standard": [6, 15, 272, 399, 423, 435], "star": 402, "start": [229, 379, 395, 396, 397, 403, 405, 422, 423, 428, 435, 436, 438, 439, 442], "startup": 423, "stat": [292, 397, 403, 405], "state": [167, 169, 170, 171, 172, 396, 402, 420, 423, 426, 429, 432], "stateless": [405, 420, 423, 432], "statement": [339, 410, 421, 426], "static": [200, 206, 248, 421, 424, 442], "statist": [295, 418, 421, 431], "statu": 429, "std_threshold": 272, "stem": [422, 442], "step": [203, 209, 229, 402, 405, 420, 421, 424, 429, 434, 438, 440], "sterl": 425, "steven": 381, "still": [145, 328, 396, 405, 428, 430, 431, 433, 435, 442, 444], "stop": [394, 419, 423, 424], "stop_on_pi": 396, "stoppag": 426, "storag": [429, 431, 438], "store": [23, 127, 272, 278, 397, 402, 405, 421, 423, 429, 444], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 85, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 118, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 180, 182, 189, 190, 191, 192, 198, 200, 205, 206, 219, 223, 233, 235, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 281, 286, 288, 289, 290, 292, 295, 298, 299, 305, 311, 312, 318, 320, 322, 323, 325, 328, 331, 334, 335, 339, 343, 347, 353, 356, 357, 358, 400, 405, 414, 415, 417, 418], "straightforward": [441, 442], "strategi": [13, 182, 200, 227, 379, 405, 423], "stream": [309, 423, 431], "streamingsequentialmetarecommend": [170, 436], "streamingsequentialstrategi": 423, "streamlin": 424, "streamlit": [421, 423], "streibel": 425, "strict": 311, "strictli": [400, 414, 415], "stride": 387, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 142, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 198, 200, 206, 223, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 318, 322, 323, 325, 326, 334, 343, 358, 399, 413, 423, 429, 430, 435, 441, 443], "strip": [229, 382], "strong": 423, "strongli": 429, "strtobool": [423, 431], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 46, 115, 219, 421, 422, 423, 424, 425, 429, 435, 438], "studi": [165, 421, 433, 436, 443], "style": [109, 417, 423, 424], "sub": [192, 423, 433, 438], "subclass": [78, 219, 305, 307, 317, 385, 423, 424, 436, 438], "subfold": 431, "subgraph": 435, "subgroup": 403, "subject": 426, "sublicens": 426, "submiss": [423, 426], "submit": [23, 292, 294, 421, 424, 426], "subpackag": [423, 424, 439], "subselectioncondit": [391, 392, 423, 432, 443], "subsequ": [172, 200, 206, 233, 322, 420, 426, 429, 438, 440], "subset": [28, 112, 117, 122, 143, 200, 308, 338, 364, 429, 430, 432], "subspac": [23, 174, 182, 197, 198, 200, 202, 204, 206, 387, 390, 391, 392, 393, 407, 409, 411, 413, 423, 436, 438, 443, 444], "subspace_json": 438, "subspacecontinu": [28, 125, 139, 200, 202, 409, 423, 437], "subspacediscret": [28, 126, 129, 130, 132, 140, 143, 200, 202, 205, 390, 391, 392, 393, 402, 407, 413, 423, 437, 438, 444], "substanc": [137, 143, 321, 381, 384, 390, 392, 393, 403, 423, 430, 433, 435, 442], "substance_12": 430, "substance_3": 430, "substance_43": 430, "substance_data": 423, "substance_encod": 381, "substanceencod": [143, 321, 323, 390, 391, 392, 393, 423, 435], "substanceparamet": [380, 381, 382, 384, 385, 390, 391, 392, 393, 396, 400, 402, 414, 415, 421, 423, 430, 431, 433, 437, 443], "substanti": [143, 444], "substrat": 442, "subtyp": 438, "success": [280, 364, 405, 438], "success_valu": 280, "suffic": 424, "suffici": [396, 437, 438], "suggest": [433, 439], "suit": 424, "suitabl": [192, 206, 229, 318, 424, 427, 429, 435, 439, 440, 442], "sum": [56, 105, 206, 379, 389, 390, 391, 392, 396, 402, 403, 405, 419, 430, 434, 437], "sum_": [430, 434], "sum_constraint": 402, "sum_constraint_1": 393, "sum_constraint_2": 393, "sum_toler": 402, "summar": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 125, 126, 127, 129, 130, 132, 139, 140, 143, 278, 280, 286], "summari": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 125, 126, 127, 129, 130, 132, 139, 140, 143, 278, 280, 286, 423, 424], "superior": 427, "supersed": 426, "support": [10, 83, 84, 85, 86, 87, 171, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 350, 385, 390, 391, 392, 393, 396, 397, 399, 402, 407, 413, 423, 424, 425, 426, 430, 433, 435, 436, 437, 439, 440], "supports_batch": 423, "supports_pending_experi": 423, "supports_transfer_learn": [238, 240, 241, 244, 248, 262, 264, 266, 268, 440], "suppos": [294, 430], "sure": [402, 409, 421, 424], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 68, 85, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 180, 182, 189, 190, 191, 192, 238, 240, 242, 244, 248, 250, 251, 255, 258, 260, 262, 264, 266, 268, 390, 391, 392, 393, 397, 405, 407, 413, 419, 421, 423, 425, 430, 433, 435, 436, 442, 443], "surrogate_model": [180, 182, 385, 397, 399, 400, 405, 414, 415, 423], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 85, 180, 182, 241, 423], "svg": 356, "sw": 391, "swiss": 425, "switch": [50, 168, 171, 172, 272, 385, 390, 391, 392, 393, 405, 407, 413, 421, 423, 430, 436], "switch1": 391, "switch2": 391, "switch2_left": 391, "switch2_right": 391, "switch_1": 430, "switch_2": 430, "switch_aft": [172, 414, 415, 436], "switzerland": 425, "sy": 422, "symmetri": 430, "syntax": [421, 423], "synthet": [387, 388, 397, 417, 418], "system": [381, 405, 421, 422, 426, 431, 439, 442], "t": [270, 271, 310, 318, 380, 381, 382, 384, 385, 392, 397, 417, 418, 420, 432, 438, 439], "t1": [438, 439], "t2": 438, "t3": 438, "t_1": 434, "t_2": 434, "t_3": 434, "t_i": 434, "tabl": [339, 423, 430, 433], "tabular": 439, "tag": [421, 423, 438], "tailor": 429, "take": [8, 46, 97, 126, 140, 145, 238, 240, 241, 244, 248, 258, 262, 264, 266, 268, 281, 395, 402, 423, 428, 429, 430, 434, 435, 436, 442], "taken": [170, 396, 423, 429, 432, 434], "tantamount": 427, "target": [28, 69, 109, 112, 113, 117, 121, 122, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 227, 229, 230, 231, 238, 240, 241, 244, 248, 262, 264, 266, 268, 272, 280, 283, 284, 286, 313, 328, 331, 332, 338, 352, 353, 359, 377, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 396, 397, 399, 400, 405, 410, 411, 413, 414, 415, 417, 418, 419, 421, 423, 428, 429, 431, 433, 438, 439, 440, 443], "target_1": [391, 392, 393, 407, 434, 441], "target_2": [407, 434, 441], "target_3": [407, 434], "target_3a": 441, "target_3b": 441, "target_cumbest": [379, 417, 418], "target_max": 429, "target_transform": 407, "targetmod": [286, 438, 441], "targetnam": 229, "targettransform": [286, 423, 441], "task": [130, 200, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 278, 280, 286, 405, 423, 429, 436, 438, 439, 442], "task_idx": [200, 423], "task_param": [417, 418, 439], "task_paramet": 438, "task_parameter_json": 438, "task_parameter_reconstruct": 438, "taskparamet": [213, 417, 418, 423, 432, 438, 439, 443], "tb": 444, "technic": [206, 428, 439, 442], "techniqu": [192, 436], "technologi": 425, "telemetri": [423, 425, 443], "tell": 293, "temp": [390, 392, 425], "temp_c": [380, 381, 382, 396], "temperatur": [380, 382, 384, 385, 390, 392, 395, 399, 400, 413, 430, 435, 437, 442], "temperature_resolut": 390, "temperature_valu": 396, "temporari": [108, 114, 183, 200, 361, 396, 423, 431, 438], "temporarili": [423, 444], "temporary_se": 444, "tempt": 442, "tenac": 423, "tend": 397, "tensor": [23, 42, 238, 270, 271, 331, 340, 343, 367, 369, 417, 423], "term": [100, 227, 396, 405, 424, 426, 429, 433, 437, 438, 439, 442], "termin": [396, 397, 422, 426], "terminologi": 443, "tert": [380, 381, 382, 384, 385], "test": [206, 229, 244, 328, 405, 417, 418, 421, 422, 423, 424, 429, 433, 439, 444], "test_funct": [387, 388, 397, 410, 411, 417, 418], "test_scenario": [380, 382], "testabl": [74, 229], "testfunct": [387, 388, 410, 411], "testfunctionclass": [387, 388, 410, 411], "text": [31, 357, 399, 426, 430, 431, 434], "th": [299, 430], "than": [28, 59, 73, 140, 170, 171, 172, 198, 200, 213, 299, 317, 332, 358, 365, 381, 392, 396, 403, 427, 430, 431, 433, 435, 438], "thei": [145, 165, 175, 289, 334, 338, 385, 393, 396, 402, 405, 409, 423, 424, 428, 429, 430, 433, 435, 436, 437, 438, 441, 442, 444], "them": [35, 258, 329, 356, 385, 421, 422, 423, 424, 428, 430, 431, 432, 433, 435, 436, 438, 442], "theme": [356, 423], "theori": 426, "therebi": 206, "therefor": [172, 238, 240, 241, 244, 248, 262, 264, 266, 268, 385, 422, 429, 438, 442], "therein": 423, "thereof": 426, "thf": 430, "thi": [10, 13, 18, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 167, 169, 170, 171, 172, 174, 182, 189, 190, 191, 192, 198, 200, 206, 227, 231, 233, 235, 238, 240, 241, 242, 243, 244, 248, 258, 262, 264, 266, 268, 272, 295, 298, 313, 314, 317, 322, 328, 330, 332, 333, 335, 337, 339, 356, 379, 395, 396, 397, 399, 400, 402, 403, 405, 409, 413, 414, 415, 417, 418, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "think": [405, 435], "third": [407, 426, 439], "thompson": [18, 425], "thomson": 18, "those": [145, 172, 174, 227, 364, 385, 422, 426, 430, 439], "though": 442, "three": [381, 402, 403, 407, 421, 429, 430, 433, 434, 436, 437, 442], "threshold": [39, 132, 143, 172, 272, 335, 387, 392, 393, 396, 402, 423, 430, 435], "thresholdcondit": [55, 56, 387, 392, 393, 402, 443], "through": [28, 200, 288, 298, 328, 338, 400, 402, 405, 407, 421, 423, 424, 426, 430, 438, 439, 443], "throughout": 172, "throw": [322, 430, 435], "thrown": [231, 382, 396, 414, 422, 434], "thu": [182, 313, 338, 380, 381, 387, 388, 390, 391, 392, 393, 399, 400, 402, 405, 407, 410, 411, 413, 422, 424, 429, 431, 432, 435, 436, 438, 439, 442, 444], "tick": 397, "time": [10, 182, 295, 365, 388, 395, 402, 405, 421, 423, 428, 429, 430, 432, 435, 438, 439, 444], "timeout": [423, 431], "timer": 395, "titl": 426, "tl": 417, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 42, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 396, 397, 423], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 198, 200, 206, 223, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 343], "to_factori": [92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107], "to_fram": 379, "to_gpytorch": [92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 153, 155, 156, 157, 158, 159, 160, 161, 423], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 198, 200, 206, 223, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 278, 280, 286, 343, 399, 400, 413, 429, 438], "to_keep": 336, "to_ndarrai": 343, "to_object": [278, 280, 286, 379, 387, 388, 397, 405, 410, 411, 417, 418, 434, 439], "to_polar": [37, 38, 39], "to_searchspac": [125, 126, 127, 129, 130, 132, 139, 140, 143, 198, 206, 405, 409, 423, 432], "to_subspac": [125, 126, 129, 130, 132, 139, 140, 143, 423], "to_tensor": [343, 396, 397, 399, 423], "to_tupl": 343, "togeth": [35, 63, 299, 385, 405, 411, 421, 423], "toggl": 28, "toggle_discrete_candid": [28, 423, 432], "toler": [28, 39, 140, 206, 376, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 396, 399, 400, 402, 407, 410, 411, 413, 414, 415, 421, 423, 430, 435], "tolist": 387, "toluen": 435, "toml": 423, "too": [387, 439, 442], "tool": [319, 423, 438], "toolbox": 421, "top": [423, 424], "topic": 429, "topolog": 435, "topologicaltors": 137, "topologicaltorsionfingerprint": 137, "torch": [331, 343, 396, 397, 399, 417, 423], "toronto": 425, "tort": 426, "total": [171, 172, 364, 402, 403, 405, 437], "total_bas": 403, "total_phase_ag": 403, "toward": [155, 328, 430], "towel": 420, "tox": [390, 392, 393, 421, 423, 424], "tracebackexcept": 422, "track": [164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 206, 396, 426, 432], "trade": [8, 426], "trademark": 426, "tradit": [381, 401, 402, 419, 421, 423], "train": [70, 85, 164, 170, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 235, 238, 240, 241, 242, 243, 244, 248, 262, 264, 266, 268, 272, 398, 417, 418, 423, 439], "train_i": 399, "train_x": 399, "training_funct": 418, "trajectori": [227, 379, 396, 405, 429, 439], "transfer": [234, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 385, 390, 391, 392, 393, 407, 413, 417, 419, 421, 423, 426, 435, 440, 443], "transform": [28, 70, 112, 117, 122, 126, 127, 129, 130, 132, 140, 143, 198, 200, 206, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 278, 280, 284, 286, 323, 331, 338, 343, 344, 367, 390, 391, 392, 393, 413, 423, 426, 431, 435, 440, 441], "transform_rep_exp2comp": 423, "transit": 423, "translat": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 423, 426, 432, 435], "transmiss": 438, "transmit": 295, "travers": 423, "treasur": 443, "treat": [143, 381, 421, 430, 435, 441, 444], "tree": 423, "tremend": 381, "trend": 442, "tri": 437, "triangl": 290, "triangular": [284, 290, 407, 441], "tricki": 433, "tricyclohexylphosphin": [380, 381, 382], "trigger": [170, 298, 396, 400, 405, 423, 424, 428, 434, 438], "trivial": [251, 264, 434, 435], "true": [6, 12, 14, 28, 31, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 200, 248, 280, 289, 306, 307, 311, 317, 318, 336, 358, 376, 381, 385, 387, 388, 390, 391, 392, 393, 397, 399, 400, 402, 405, 407, 410, 411, 413, 414, 415, 417, 418, 423, 429, 430, 431, 432, 433, 435, 438], "truncat": [421, 431], "trust": [399, 431], "truth": 318, "truthi": 431, "try": [77, 328, 380, 381, 382, 396, 399, 400, 415, 422, 423, 444], "tune": 421, "tupl": [28, 38, 42, 92, 93, 94, 97, 99, 101, 102, 103, 105, 106, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 146, 198, 200, 205, 206, 271, 298, 311, 314, 326, 328, 340, 343, 347, 367], "turn": [198, 206, 347, 409, 421, 422, 423, 430, 431], "turnaround": 439, "twice": [432, 434], "two": [31, 52, 58, 59, 118, 172, 182, 227, 299, 304, 331, 352, 364, 379, 380, 382, 395, 402, 405, 407, 411, 417, 418, 420, 421, 423, 424, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441], "twofold": 405, "twophasemetarecommend": [380, 382, 385, 390, 391, 392, 393, 396, 397, 399, 400, 405, 407, 411, 413, 414, 415, 421, 423, 436], "twophasestrategi": 423, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 113, 115, 117, 118, 122, 125, 126, 127, 129, 130, 132, 139, 140, 142, 143, 145, 146, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 184, 187, 189, 190, 191, 192, 194, 195, 198, 200, 201, 202, 203, 206, 207, 208, 209, 211, 212, 213, 216, 217, 219, 220, 221, 223, 225, 226, 229, 231, 233, 235, 238, 240, 241, 242, 244, 245, 248, 251, 252, 256, 262, 264, 266, 268, 270, 271, 272, 274, 275, 278, 280, 281, 286, 288, 289, 290, 292, 293, 294, 295, 298, 299, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 343, 344, 345, 347, 349, 350, 352, 353, 354, 356, 357, 358, 364, 365, 367, 369, 372, 373, 374, 375, 376, 377, 381, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 403, 405, 407, 413, 414, 415, 421, 423, 424, 426, 427, 430, 433, 434, 435, 436, 437, 442, 443], "typealia": 281, "typeerror": [85, 89, 229, 244, 313, 328, 329, 365, 376, 377, 396, 397], "typeguard": 310, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 117, 122, 125, 126, 127, 129, 130, 132, 139, 140, 143, 145, 153, 155, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 172, 198, 200, 206, 211, 219, 220, 223, 238, 240, 241, 244, 248, 251, 262, 264, 266, 268, 271, 278, 280, 286, 307, 308, 309, 310, 326, 331, 338, 343], "typic": [13, 313, 358, 381, 421, 428, 429, 433, 435, 438, 444], "typing_extens": 424, "typo": [423, 424], "u": [18, 379, 380, 381, 382, 395, 397, 402, 403, 405, 409, 418, 421, 427, 430, 434], "ucb": [8, 385, 423, 427, 438], "ultim": 424, "ultra": [414, 415], "un": 423, "unabl": 399, "unavail": 423, "unawar": 428, "unbound": [343, 395], "uncaught": 423, "uncertainti": [8, 13, 385, 443], "uncharacter": 442, "uncorrel": [335, 442], "undefin": [238, 432], "under": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 295, 338, 393, 397, 405, 421, 422, 426, 428, 435], "underflow": 75, "underli": [28, 52, 396, 405, 421, 429, 433, 436, 438], "underscor": 423, "understand": [421, 442], "undesir": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 80, 430, 432, 435, 444], "undo": 422, "unequ": 393, "unevenli": 435, "unexpect": 77, "unfinish": 428, "unfortun": 442, "unhandl": 423, "uniform": [198, 238, 329, 330, 423], "uniformli": 364, "uniniti": 317, "uninstal": [76, 421], "unintend": [80, 313, 423, 424], "unintention": 444, "union": [118, 229, 233, 288, 289, 290, 353, 411, 426, 437], "uniqu": [53, 145, 402, 423, 435], "unit": [205, 347], "unknown": [171, 364, 379, 405, 423, 440, 442], "unlabel": 331, "unless": [421, 424, 426, 431, 435, 438], "unlik": [12, 14, 402, 444], "unlock": 443, "unmaintain": 423, "unmatch": 311, "unmatchedattributeerror": 311, "unmeasur": [229, 382], "unnecessari": [423, 429], "unpromis": 396, "unreach": 423, "unrealist": 439, "unrecogn": 328, "unrestrict": 313, "unsaf": 423, "unspecifi": [303, 423, 438], "unspecifiedtyp": 28, "unsqueez": [396, 397], "unstructur": [221, 438], "unstructure_bas": 219, "unsupport": [198, 231], "until": [167, 169, 170, 171, 172, 229, 405, 421, 439], "untouch": 329, "untransform": [28, 440], "unusedobjectwarn": [396, 423, 428], "unveil": 418, "unwant": 35, "up": [28, 206, 229, 231, 379, 380, 381, 382, 383, 390, 392, 395, 397, 401, 402, 403, 411, 417, 418, 421, 422, 423, 427, 430, 444], "updat": [28, 381, 384, 423, 424, 428], "upgrad": 423, "upon": [174, 251, 422, 423, 424, 430, 437, 440, 442], "upper": [8, 19, 161, 200, 206, 288, 289, 290, 343, 385, 397, 407, 417, 418, 423, 441, 444], "upper_bound": [390, 391, 392, 393, 413, 437], "upperconfidencebound": [19, 427, 438], "upstream": 424, "urg": 433, "url": [431, 442], "us": [13, 18, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 63, 67, 85, 97, 117, 118, 132, 137, 140, 143, 145, 164, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 198, 200, 206, 207, 208, 220, 229, 231, 233, 238, 240, 241, 244, 245, 248, 262, 264, 266, 268, 284, 294, 295, 301, 313, 314, 322, 323, 328, 330, 331, 337, 345, 349, 350, 356, 364, 369, 379, 387, 388, 394, 395, 396, 397, 398, 401, 402, 403, 409, 413, 414, 415, 417, 418, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 442, 443, 444], "usa": 425, "usabl": [317, 422, 423, 435, 438], "usag": [346, 421, 423, 430, 431, 436, 443], "use_comp_rep": [85, 89, 433], "use_torch": [331, 387, 388, 397, 410, 411, 417, 418], "user": [49, 50, 61, 71, 80, 132, 135, 238, 240, 241, 244, 248, 262, 264, 266, 268, 275, 292, 330, 384, 385, 390, 407, 415, 421, 422, 423, 424, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 442], "userguid": 291, "usernam": [292, 423, 431], "userwarn": 422, "uses_shap_explain": 85, "usort": 423, "usr": 137, "usrcat": 137, "usrcatfingerprint": 137, "usrfingerprint": 137, "usual": [229, 380, 381, 382, 414, 422, 433, 435], "util": [28, 182, 198, 206, 294, 301, 303, 304, 343, 363, 367, 379, 381, 384, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 405, 407, 410, 411, 417, 418, 421, 423, 427, 428, 433, 434, 435, 436, 438, 439, 440, 442, 443], "uv": 423, "v": 442, "val": [46, 115, 318, 417], "val_from_param1": 54, "val_from_param2": 54, "valid": [28, 31, 32, 33, 34, 35, 38, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 145, 200, 203, 206, 209, 244, 332, 337, 390, 412, 414, 419, 422, 423, 424, 429, 430, 439], "validate_compat": 244, "validate_config": [28, 415, 423, 429], "validate_parameter_input": 28, "validate_target_input": 28, "valu": [6, 23, 28, 31, 37, 38, 39, 42, 50, 52, 69, 85, 96, 97, 98, 99, 100, 101, 102, 103, 107, 112, 117, 118, 122, 126, 129, 130, 132, 134, 135, 137, 140, 143, 145, 148, 149, 150, 172, 189, 190, 191, 192, 198, 200, 206, 207, 208, 227, 229, 231, 233, 238, 240, 241, 244, 248, 262, 264, 266, 268, 280, 281, 283, 288, 289, 290, 295, 298, 302, 303, 308, 311, 318, 325, 328, 329, 330, 332, 334, 337, 338, 339, 343, 345, 352, 353, 354, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 387, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 405, 407, 410, 411, 413, 414, 415, 417, 418, 421, 423, 424, 427, 429, 430, 431, 432, 433, 434, 435, 441, 442, 443, 444], "valuabl": [436, 439], "valueerror": [13, 28, 58, 59, 85, 89, 118, 145, 149, 150, 198, 200, 206, 212, 229, 231, 238, 240, 241, 244, 248, 262, 264, 266, 268, 275, 299, 311, 316, 318, 321, 325, 328, 330, 332, 337, 338, 358, 364, 365, 376, 377, 400, 411, 422], "var": [405, 443], "vari": [28, 206, 381, 434], "variabl": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 125, 126, 127, 129, 130, 132, 139, 140, 143, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 238, 240, 241, 244, 248, 262, 264, 266, 268, 278, 293, 295, 351, 356, 370, 410, 421, 423, 424, 430, 435, 436, 438], "varianc": [8, 13, 96, 264, 333, 423, 427], "variance_initial_valu": 96, "variance_prior": 96, "variant": [385, 417, 433, 442], "varieti": [410, 424, 438, 439], "variou": [343, 402, 408, 423, 428, 433, 436, 439], "varucb": 423, "vector": [31, 399, 423, 425], "vendor": 435, "verbal": 426, "verbos": [400, 423], "veri": [390, 392, 407, 428, 431, 433, 435, 444], "verifi": [317, 387, 390, 391, 392, 393, 402, 403, 409, 411, 413, 421, 424], "versa": [417, 442], "versatil": 436, "version": [200, 292, 350, 390, 392, 393, 402, 405, 409, 417, 418, 421, 422, 423, 424, 426, 438], "vert": 397, "via": [13, 18, 27, 28, 85, 172, 182, 194, 238, 240, 241, 242, 244, 248, 262, 264, 266, 268, 294, 305, 313, 328, 336, 382, 388, 395, 396, 399, 409, 421, 423, 424, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443], "via_init": 438, "via_json": 438, "viabl": [73, 407], "vice": [417, 442], "view": [198, 206, 397, 437], "view_init": 397, "violat": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56], "viridi": 397, "virtual": 424, "visibl": 423, "visual": [381, 417, 418, 433, 441], "volum": 442, "vpn": [421, 431], "vsa": 137, "vsafingerprint": 137, "vulner": [423, 424], "w_i": 434, "wa": [13, 64, 65, 68, 69, 76, 80, 145, 172, 238, 240, 241, 244, 248, 262, 264, 266, 268, 325, 328, 332, 365, 381, 422, 423, 424, 426, 431, 433, 435, 438, 442], "wai": [200, 395, 402, 403, 408, 409, 417, 420, 421, 431, 432, 433, 435, 437, 438, 439, 441, 442, 444], "wall": 10, "want": [49, 385, 390, 402, 405, 411, 418, 421, 424, 430, 431, 432, 433, 435, 436, 438, 441], "warn": [60, 314, 390, 392, 393, 396, 410, 411, 423, 424], "warranti": [421, 426], "watch": 395, "water": [390, 391, 392, 393, 402, 430, 435], "waterfal": [85, 87, 423], "we": [23, 227, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 402, 403, 405, 407, 409, 410, 411, 413, 414, 415, 417, 418, 421, 422, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444], "web": 424, "weber": 425, "weight": [109, 117, 118, 354, 407, 434, 438], "weight_kdalton": 435, "welcom": 424, "well": [292, 356, 385, 396, 401, 420, 424, 429, 430, 433, 435, 439], "were": [28, 328, 382, 418, 422, 423, 428, 430, 431, 435, 437], "what": [145, 170, 200, 227, 328, 367, 379, 399, 407, 415, 420, 424, 427, 429, 433, 435, 442, 443], "whatsnew": 304, "when": [28, 50, 77, 140, 170, 171, 172, 180, 182, 200, 238, 240, 241, 244, 245, 248, 262, 264, 266, 268, 275, 302, 303, 311, 313, 317, 328, 331, 358, 365, 390, 391, 393, 395, 400, 402, 403, 405, 407, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 444], "whenev": [23, 170, 328, 438], "where": [18, 23, 31, 35, 41, 48, 49, 50, 51, 52, 53, 54, 55, 56, 164, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 227, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 298, 328, 364, 380, 381, 382, 385, 390, 392, 402, 405, 421, 422, 423, 424, 426, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 441, 442], "wherea": 438, "wherev": [426, 428], "whether": [23, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 89, 125, 126, 127, 129, 130, 132, 139, 140, 143, 182, 198, 206, 238, 240, 241, 244, 248, 262, 264, 266, 268, 293, 330, 343, 402, 423, 426, 429, 431, 432, 441], "which": [13, 28, 37, 38, 39, 80, 85, 112, 117, 122, 130, 145, 164, 165, 167, 169, 170, 171, 172, 174, 177, 180, 182, 187, 189, 190, 191, 192, 194, 195, 200, 206, 233, 235, 238, 240, 241, 244, 248, 262, 264, 266, 268, 272, 294, 295, 313, 317, 328, 330, 335, 337, 339, 352, 353, 356, 367, 379, 381, 385, 388, 395, 396, 402, 403, 405, 409, 410, 411, 415, 417, 418, 421, 422, 423, 424, 426, 427, 429, 430, 432, 433, 435, 437, 438, 439, 440, 441, 442, 444], "while": [200, 203, 209, 396, 405, 407, 418, 422, 426, 427, 429, 430, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442], "whilst": 328, "whim": 137, "whimfingerprint": 137, "whole": 426, "whom": 426, "whose": [118, 145, 200, 231, 308, 311, 331, 379, 395, 402, 428, 439], "wide": 439, "wider": 441, "width": 339, "wieczorek": 425, "william": 442, "willing": 429, "win": [238, 405], "win_rat": 405, "window": [423, 431], "winerror": 422, "wise": 354, "wish": 438, "within": [28, 125, 126, 127, 129, 130, 132, 139, 140, 143, 376, 409, 426, 430, 431, 435, 440, 442, 443, 444], "without": [171, 417, 418, 421, 423, 426, 428, 429, 430, 431, 435, 439, 442, 444], "work": [23, 269, 298, 331, 390, 392, 393, 396, 407, 413, 415, 421, 423, 424, 425, 426, 430, 431, 434, 436, 438, 439], "workaround": [422, 423], "workflow": [399, 421, 429, 438, 443], "world": [421, 429], "worldwid": 426, "worst": [229, 231, 233, 382], "would": [53, 75, 145, 227, 229, 235, 243, 395, 402, 405, 421, 424, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 442, 444], "wrap": [92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 248, 252, 270, 271, 313, 421, 423, 434], "wrapper": [1, 22, 233, 235, 244, 314, 417, 418, 421, 436], "write": [421, 422, 426, 438], "written": [410, 411, 424, 426], "wrong": [415, 423], "wrongli": 422, "www": [421, 426], "x": [23, 113, 202, 229, 231, 252, 310, 314, 326, 340, 352, 367, 379, 380, 381, 382, 390, 391, 392, 393, 396, 397, 402, 407, 413, 417, 418, 421, 423, 437, 440], "x0": 437, "x1": 437, "x2": 437, "x_": [379, 387, 388, 409, 410, 411], "x_1": [387, 388, 409, 410, 411, 430], "x_2": [387, 388, 409, 410, 411, 430], "x_3": [387, 388, 409, 410, 411, 430], "x_4": [387, 388, 409, 410, 411], "x_5": 411, "x_6": 411, "x_i": 430, "x_pend": 23, "xlsx": [380, 381, 382, 396], "xpho": [380, 381, 382], "xxxx": 422, "xylen": [380, 381, 382, 384, 385], "y": [260, 318, 335, 352, 379, 380, 381, 382, 396, 397, 399, 402, 417, 418, 421, 442], "ye": 318, "year": 442, "yet": [23, 423, 428, 436], "yield": [6, 97, 380, 381, 382, 384, 385, 390, 396, 399, 400, 402, 411, 413, 414, 415, 421, 423, 427, 433, 434, 438], "yield_cumbest": [380, 381, 382, 396], "yml": 423, "you": [28, 49, 381, 385, 387, 395, 400, 402, 405, 410, 411, 414, 420, 421, 422, 424, 426, 427, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444], "your": [381, 395, 402, 405, 411, 420, 421, 422, 423, 424, 426, 429, 431, 432, 433, 435, 438, 439, 440, 441, 442, 444], "your_branch_nam": 424, "yourself": 405, "z": [397, 421], "zdir": 397, "zero": [155, 333, 402, 405, 442], "zip": [396, 397], "\u00b5fmt": 423, "\u0161o\u0161i\u0107": [421, 425]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.single", "SingleTargetObjective", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "Surrogate", "SurrogateProtocol", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 424, "0": 423, "01": 423, "02": 423, "03": 423, "04": 423, "05": 423, "06": 423, "07": 423, "08": 423, "09": 423, "1": 423, "10": 423, "11": 423, "12": 423, "13": 423, "14": 423, "15": 423, "16": 423, "17": 423, "19": 423, "2": 423, "2022": 423, "2023": 423, "2024": 423, "2025": 423, "21": 423, "23": 423, "24": 423, "27": 423, "28": 423, "29": 423, "3": 423, "31": 423, "4": 423, "5": 423, "6": 423, "7": 423, "8": 423, "9": 423, "A": 421, "On": 433, "The": [405, 414, 421, 432, 438, 439, 442], "abbrevi": 438, "acqf": 2, "acquisit": [1, 2, 20, 22, 24, 25, 26, 385, 428], "acquisitionfunct": 21, "action": 442, "activ": 427, "ad": [384, 423, 428, 429, 442, 444], "add_fake_measur": 328, "add_noise_to_perturb_degenerate_row": 329, "add_parameter_nois": 330, "addendum": 407, "addit": 402, "additivekernel": 105, "advanc": [421, 440], "altern": 438, "amount": 402, "an": 405, "appli": 432, "arm": [404, 405], "arm64": 422, "arrai": 439, "arrays_to_datafram": 331, "assembli": 438, "asynchron": 428, "attr": 424, "augment": [297, 298, 299], "automat": 438, "avail": [385, 440], "avx": 422, "back": 421, "backtest": [378, 417], "bandit": [237, 404, 405], "base": [20, 30, 91, 111, 113, 124, 152, 163, 166, 176, 179, 186, 239, 277, 380, 381, 382, 387, 388, 402, 403, 411, 432, 439], "basesequentialmetarecommend": 169, "basic": [95, 154, 300, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 383, 384, 429, 431, 433, 438], "basickernel": 92, "batch": 429, "batchify_ensemble_predictor": 270, "batchify_mean_var_predict": 271, "batteri": 421, "bayb": [0, 1, 2, 20, 22, 24, 25, 26, 27, 29, 30, 36, 40, 43, 44, 45, 46, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 95, 104, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 121, 123, 124, 128, 131, 133, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 162, 163, 165, 166, 168, 173, 175, 176, 178, 179, 181, 183, 184, 185, 186, 188, 193, 196, 197, 199, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 245, 246, 247, 249, 252, 253, 254, 256, 257, 259, 261, 263, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 384, 421, 424], "bayesian": [178, 179, 181, 183, 184, 421, 436], "bayesianlinearsurrog": 262, "bayesianrecommend": 180, "bell_transform": 288, "bernoulli": 405, "betabernoullimultiarmedbanditsurrog": 238, "betaprior": 155, "binari": [279, 281], "binarytarget": 280, "black": [379, 405], "block_deserialization_hook": 216, "block_serialization_hook": 217, "bo": 433, "boolean": [315, 316, 317, 318], "both": 413, "botorch": [181, 410], "botorchrecommend": 182, "bound": [395, 434, 437], "box": [379, 405], "break": 423, "build": [405, 437], "bytes_to_human_read": 347, "cach": [429, 431], "call": 432, "callabl": [387, 388, 411, 439], "campaign": [27, 28, 379, 380, 381, 382, 385, 387, 388, 390, 391, 393, 396, 399, 400, 407, 410, 411, 413, 414, 429], "candid": [429, 432], "cardinalityconstraint": 31, "case": 405, "catch_constant_target": 272, "categor": 128, "categoricalencod": 134, "categoricalparamet": [129, 435], "caution": 432, "chang": 423, "changelog": 423, "check_if_in": 316, "chemic": 421, "chemistri": [319, 320, 321, 322, 323], "choicevalu": 281, "class": 424, "classproperti": 304, "clone": 421, "closer_el": 352, "closest_el": 353, "cluster": [188, 436], "code": 424, "columntransform": 367, "compar": 413, "compon": 395, "composit": 104, "compositekernel": 93, "comput": 433, "condit": [36, 37, 430], "config": [414, 415, 429], "configur": [399, 400, 414, 432, 438], "constraint": [29, 30, 32, 36, 40, 43, 44, 45, 46, 47, 57, 58, 59, 386, 387, 388, 389, 390, 391, 392, 393, 402, 403, 430, 432, 437, 444], "construct": [380, 381, 382, 387, 388, 402, 410, 411, 434, 437], "constructor": [437, 438], "continu": [40, 197, 386, 388, 402, 409, 427, 430, 435, 437, 442, 444], "continuouscardinalityconstraint": 41, "continuousconstraint": 33, "continuouslinearconstraint": [42, 430], "continuouslinearequalityconstraint": 44, "continuouslinearinequalityconstraint": 45, "continuousnonlinearconstraint": 34, "continuousparamet": 125, "contribut": 424, "contributor": 425, "control": [429, 432], "conveni": 434, "convent": 424, "convers": [324, 325, 326, 434, 438], "convert": [218, 399], "convert_acqf": 25, "convert_bound": 344, "copi": 438, "core": [199, 202, 203, 215, 216, 217, 218, 219, 220, 221, 228, 229, 247, 254, 256], "cpu": 422, "creat": [379, 380, 381, 382, 385, 387, 388, 390, 391, 392, 393, 399, 400, 407, 409, 410, 413, 414, 417, 418, 429, 437], "create_example_plot": 356, "create_fake_input": 332, "creation": [380, 381, 382, 402, 403, 429, 444], "current": 440, "custom": [131, 243, 245, 379, 390, 394, 395, 398, 399, 400, 440], "customdiscreteparamet": [132, 435], "customencod": 135, "customonnxsurrog": 244, "data": [380, 381, 382, 437, 442], "datafram": [327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 387, 388, 411, 437, 438, 439], "de": [413, 438], "default": [257, 437, 438], "defaultkernelfactori": 258, "defin": [379, 387, 388, 395, 396, 397, 407, 410, 411, 415, 417, 418, 421], "definit": 396, "depend": [391, 421, 435], "deprec": [43, 44, 45, 46, 114, 115, 423], "deprecationerror": 61, "descript": 407, "deseri": 438, "deserialize_datafram": 225, "design": [421, 424], "desir": [116, 118], "desirabilityobject": [117, 434], "develop": 424, "df_apply_dependency_augment": 298, "df_apply_permutation_augment": 299, "df_drop_single_value_column": 333, "df_drop_string_column": 334, "df_uncorrelated_featur": 335, "dictionari": [414, 415], "differ": 385, "dimens": 411, "discret": [47, 204, 207, 208, 209, 389, 390, 391, 392, 402, 410, 429, 430, 435, 437], "discretecardinalityconstraint": 48, "discreteconstraint": 35, "discretecustomconstraint": [49, 430], "discretedependenciesconstraint": [50, 430], "discreteexcludeconstraint": [51, 430], "discretelinkedparametersconstraint": [52, 430], "discretenolabelduplicatesconstraint": [53, 430], "discreteparamet": 126, "discretepermutationinvarianceconstraint": [54, 430], "discreteproductconstraint": [55, 430], "discretesamplingmethod": 363, "discretesumconstraint": [56, 430], "discuss": 405, "disk": 431, "do": 439, "docstr": 424, "document": 400, "dtypefloatnumpi": 349, "dtypefloatonnx": 350, "dtypefloattorch": 369, "dummi": 301, "duplic": 402, "dure": 444, "dynam": 432, "edbo": 259, "edbokernelfactori": 260, "effici": 444, "emptysearchspaceerror": 62, "encod": 435, "end": 421, "enum": [119, 133, 282], "environ": 431, "equival": 438, "estim": 444, "exampl": [380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 399, 400, 407, 410, 411, 413, 414, 415, 419, 421, 433], "except": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "exceptiongroup": 422, "exclud": 432, "exclus": [392, 393, 432], "expect": 442, "expectedimprov": 3, "experi": [390, 391, 392, 393, 399, 400, 407, 413, 421, 428, 439], "experiment": [429, 431, 432, 433], "expir": 423, "explain": [83, 433], "explicit": 437, "extend": 424, "extract": 440, "fake": 444, "faq": 420, "farthest_point_sampl": 364, "featur": [431, 432], "field": 438, "file": [414, 415], "filter_df": 336, "find_subclass": 305, "finite_float": 372, "fix": [422, 423], "float": 431, "fpsrecommend": 194, "fraction_to_float": 325, "from": [414, 421, 423, 429, 437, 438], "full": [380, 381, 382, 437], "function": [379, 380, 381, 382, 385, 387, 388, 396, 407, 410, 411, 424, 428], "further": 429, "fuzzy_row_match": 337, "gammaprior": 156, "gaussian_process": [246, 247, 249, 252, 253, 254, 256, 257, 259], "gaussianmixtureclusteringrecommend": 189, "gaussianprocesspreset": 255, "gaussianprocesssurrog": 248, "gener": [417, 418, 424, 436], "geom_mean": 354, "get": [384, 429, 432], "get_base_structure_hook": 219, "get_baseclass": 306, "get_canonical_smil": 320, "get_fingerprint_class": 321, "get_model_params_valid": 274, "get_parameters_from_datafram": 145, "get_subclass": 307, "get_transform_object": 338, "get_transform_paramet": 211, "get_user_detail": 292, "github": 421, "global": 427, "group_duplicate_valu": 308, "guid": 443, "halfcauchyprior": 157, "halfnormalprior": 158, "hilberts_factori": 309, "hook": [394, 395, 396, 397], "hybrid": [387, 411, 430], "imaginari": 405, "implicit": 434, "import": [379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 395, 397, 399, 400, 402, 403, 405, 407, 409, 410, 411, 413, 414, 415, 417, 418, 433], "improv": 397, "includ": 421, "inclus": 380, "incompatibilityerror": 63, "incompatibleacquisitionfunctionerror": 64, "incompatibleargumenterror": 65, "incompatibleexplainererror": 66, "incompatiblesearchspaceerror": 67, "incomplet": 382, "incorpor": 393, "indent": 357, "independentgaussiansurrog": 240, "index": 421, "indic": 421, "infiniteintervalerror": 342, "influenc": 444, "inform": [429, 436], "initi": [380, 385], "insight": [81, 82, 83, 84, 86, 87, 88, 89, 433], "instal": [421, 422], "instanc": 395, "instead": [399, 400], "instruct": 431, "internet": 431, "interpret": 433, "interrupt": 396, "interv": [341, 342, 343, 344, 345], "invalidsurrogatemodelerror": 68, "invalidtargetvalueerror": 69, "invari": 402, "invok": 438, "irrelev": 442, "is_abstract": 317, "is_all_inst": 310, "is_en": 293, "is_shap_explain": 88, "issu": [421, 422], "iter": [387, 388, 399, 400, 407], "json": [429, 438], "kernel": [90, 91, 94, 95, 104], "kernel_factori": [249, 252], "kernelfactori": 250, "kmeansclusteringrecommend": 190, "known": [421, 422], "leak": 422, "learn": [416, 418, 427, 439, 442], "licens": [421, 426], "limit": [433, 440, 441], "linear": [261, 388], "linear_transform": 289, "linearkernel": 96, "link": 400, "local": [421, 427], "logexpectedimprov": 4, "lognormalprior": 159, "look_up_target": 231, "lookup": [230, 231, 380, 381, 382, 387, 388, 396, 411, 417, 418, 439], "loop": [379, 380, 381, 382, 417, 418, 421], "maco": 422, "maintain": [421, 425], "make_explainer_for_surrog": 89, "make_gp_from_preset": 256, "mandatori": 434, "manual": [390, 391, 392, 393], "mark": 428, "match": 441, "match_attribut": 311, "maternkernel": 97, "max": 441, "mean": 439, "meanpredictionsurrog": 264, "measur": [384, 399, 400, 429, 444], "mechan": [380, 381, 382, 439], "memori": [346, 347, 444], "memorys": 205, "meta": [165, 166, 168, 432, 436], "metarecommend": 167, "method": [395, 424, 427], "min": 441, "miss": 439, "mixin": 222, "mixtur": [401, 402, 403], "mode": [407, 441], "model": [385, 399, 400, 402, 403, 405, 433, 440], "modelnottrainederror": 70, "monitor": 397, "monkeypatch": [395, 396, 397], "multi": [404, 405, 406, 407], "multipl": 439, "naiv": [173, 263], "naivehybridspacerecommend": 174, "name": 435, "name_to_smil": 322, "necessari": [380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 399, 400, 407, 410, 411, 413, 414, 415], "nest": 438, "ngboost": 265, "ngboostsurrog": 266, "nois": 444, "nomcacquisitionfunctionerror": 71, "non_inf_float": 373, "non_nan_float": 374, "non_shap_explain": 84, "none": 439, "nonpredict": [185, 186, 188, 193], "nonpredictiverecommend": 187, "nonstring_to_tupl": 326, "norecommenderslefterror": 72, "normalprior": 160, "notenoughpointslefterror": 73, "nothingtosimulateerror": 74, "numer": [138, 285, 348, 349, 350, 351, 352, 353, 354], "numericalcontinuousparamet": [139, 435], "numericaldiscreteparamet": [140, 435], "numericaltarget": [286, 441], "numericalunderflowerror": 75, "object": [108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 380, 381, 382, 385, 387, 388, 390, 391, 392, 393, 407, 410, 413, 417, 418, 421, 434, 438], "onli": 431, "onnx": 399, "optim": [379, 417, 418, 421, 429, 444], "option": [421, 435], "optionalimporterror": 76, "order": [402, 431], "output": [399, 400], "overrid": 424, "packag": [421, 431], "page": 433, "pamclusteringrecommend": 191, "parallel": 429, "paramet": [123, 124, 127, 128, 131, 133, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 380, 381, 382, 385, 400, 402, 403, 429, 433, 435, 437, 444], "parameter_cartesian_prod_panda": 207, "parameter_cartesian_prod_polar": 208, "parameterencod": 136, "partial": [22, 428], "partialacquisitionfunct": 23, "pass": 400, "pend": 428, "perform": [380, 407, 410, 411], "periodickernel": 98, "perman": 432, "permut": 402, "piecewisepolynomialkernel": 99, "plainkernelfactori": 251, "plot": [355, 356, 357, 358, 379, 396, 397, 433], "point": 431, "polar": [422, 431], "polynomialkernel": 100, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 399, "precis": 431, "preset": [253, 254, 256, 257, 259], "pretrain": 399, "pretty_print_df": 339, "print": [390, 391, 393, 407], "prior": [151, 152, 153, 154], "probabilityofimprov": 7, "probabl": 397, "problem": [379, 396, 422], "product": [393, 437], "productkernel": 106, "pull": 424, "pure": [175, 176, 178, 179, 181, 183, 184, 185, 186, 188, 193, 427, 436], "purerecommend": 177, "pycharm": 422, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedimprov": 12, "qnegintegratedposteriorvari": 13, "qnoisyexpectedimprov": 14, "qposteriorstandarddevi": 15, "qprobabilityofimprov": 16, "qsimpleregret": 17, "qthompsonsampl": 18, "quick": 421, "qupperconfidencebound": 19, "random": [359, 360, 361], "random_forest": 267, "randomforestsurrog": 268, "randomrecommend": 195, "rbfkernel": 101, "recommend": [162, 163, 165, 166, 168, 173, 175, 176, 178, 179, 181, 183, 184, 185, 186, 188, 193, 384, 385, 399, 400, 410, 411, 413, 428, 429, 432, 436], "recommenderprotocol": 164, "reduct": 427, "refers_to": 312, "regist": 395, "register_custom_architectur": 245, "register_hook": 313, "relat": 422, "remov": 423, "represent": [402, 403, 433, 437], "reproduc": 444, "request": 424, "restrict": 437, "result": [379, 396, 397, 428], "rffkernel": 102, "role": 442, "row": 431, "rqkernel": 103, "run": [379, 387, 388, 405], "sampl": [193, 427, 436], "sample_numerical_df": 365, "sampling_algorithm": [362, 364, 365], "scalar": [118, 120, 440], "scale": 366, "scalekernel": 107, "scenario": [232, 233, 439], "scope": 431, "search": [402, 403, 409, 417, 421, 427, 437, 444], "searchspac": [196, 197, 199, 200, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 380, 382, 385, 387, 388, 390, 391, 392, 393, 407, 408, 410, 411, 418], "searchspacematchwarn": 77, "searchspacetyp": 201, "see": 442, "select_constructor_hook": 220, "semaphor": 422, "sequenti": [168, 429], "sequential_greedi": [183, 184], "sequentialgreedyrecommend": 184, "sequentialmetarecommend": 170, "serial": [214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 412, 413, 429, 438], "serialize_datafram": 226, "serialmixin": 223, "set": [379, 396, 397, 409, 417, 418], "set_random_se": 360, "setup": [384, 390, 391, 392, 393, 399, 400, 402, 403, 405, 407, 413], "shap": [82, 83, 84, 86, 87, 88, 89, 433], "shap_explain": 86, "shap_plot": 87, "shapinsight": 85, "signatur": 395, "simplex": [402, 437], "simul": [227, 228, 229, 230, 231, 232, 233, 234, 235, 379, 380, 381, 382, 396, 405, 417, 418, 439], "simulate_experi": 229, "simulate_scenario": 233, "simulate_transfer_learn": 235, "singl": [121, 439], "singletargetobject": [122, 434], "sklearnclusteringrecommend": 192, "slot": [402, 403], "smile": 142, "smiles_to_fingerprint_featur": 323, "smoothedboxprior": 161, "some": [387, 388, 407], "sort_paramet": 146, "space": [402, 403, 409, 411, 417, 421, 427, 429, 437, 444], "span": 402, "stage": 399, "start": 421, "stop": 396, "str_to_acqf": 26, "strategi": [385, 421], "streamingsequentialmetarecommend": 171, "string": [414, 438], "strtobool": 318, "structure_constraint": 46, "structure_object": 115, "studi": 440, "sub": 427, "subselectioncondit": [38, 430], "subspac": 437, "subspacecontinu": 198, "subspacediscret": 206, "substanc": [141, 142, 402, 421], "substanceencod": 137, "substanceparamet": [143, 435], "suggest": 422, "suitabl": 385, "sum": 393, "support": [422, 428], "surrog": [236, 237, 239, 241, 243, 245, 246, 247, 249, 252, 253, 254, 256, 257, 259, 261, 263, 265, 267, 269, 270, 271, 272, 273, 274, 275, 385, 398, 399, 400, 440], "surrogateprotocol": 242, "synchron": 424, "synthet": [410, 411], "tabl": [380, 381, 382, 417, 418, 421], "target": [276, 277, 278, 279, 281, 282, 285, 287, 288, 289, 290, 395, 406, 407, 434, 441, 444], "targetmod": 283, "targettransform": 284, "task": [417, 418], "taskparamet": [130, 435, 442], "technologi": 442, "telemetri": [291, 292, 293, 294, 295, 421, 431], "telemetry_record_recommended_measurement_percentag": 294, "telemetry_record_valu": 295, "temporary_se": 361, "terminologi": [402, 438, 439, 442], "test": [387, 388, 410, 411], "theoret": 402, "thi": [380, 381, 382, 384, 385, 387, 388, 390, 391, 392, 393, 407, 410, 411, 433], "thresholdcondit": [39, 430], "through": 442, "to_kernel_factori": 252, "to_object": 113, "to_searchspac": 202, "to_str": 358, "to_tensor": 340, "to_tupl": 314, "toggl": 432, "toler": 429, "tool": 424, "torch": [368, 369, 370, 422], "tradit": 403, "train": 399, "trajectori": 432, "transfer": [416, 418, 439, 442], "transfer_learn": [234, 235], "transform": [287, 288, 289, 290, 407], "treasur": 442, "triangular_transform": 290, "trigger": [395, 397], "two": 415, "twophasemetarecommend": 172, "type": 438, "uncertainti": 427, "unidentifiedsubclasserror": 78, "uninstal": 431, "uninterrupt": 396, "unlock": 442, "unmatchedattributeerror": 79, "unreleas": 423, "unspecifi": 302, "unspecifiedtyp": 303, "unstructure_bas": 221, "unusedobjectwarn": 80, "upperconfidencebound": 8, "us": [380, 381, 382, 384, 385, 390, 391, 392, 393, 399, 400, 405, 407, 410, 411, 437, 438, 439, 440], "usag": 433, "use_fallback_constructor_hook": 345, "user": 443, "util": [24, 25, 26, 144, 145, 146, 224, 225, 226, 269, 270, 271, 272, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 444], "v": [395, 402, 422, 429, 432], "valid": [57, 58, 59, 147, 148, 149, 150, 210, 211, 212, 213, 273, 274, 275, 371, 372, 373, 374, 375, 376, 377, 400, 415], "validate_cardinality_constraints_are_nonoverlap": 58, "validate_constraint": 59, "validate_custom_architecture_cl": 275, "validate_decorrel": 148, "validate_is_finit": 149, "validate_not_nan": 375, "validate_paramet": 213, "validate_parameter_input": 376, "validate_parameter_nam": 212, "validate_searchspace_from_config": 203, "validate_simplex_subspace_from_config": 209, "validate_target_input": 377, "validate_unique_valu": 150, "valu": [437, 438, 439], "variabl": 431, "varname_numpy_use_single_precis": 351, "varname_torch_use_single_precis": 370, "verif": [390, 391, 392, 393, 402, 403, 415], "verifi": 388, "via": 433, "we": 439, "what": 439, "window": 422, "within": 437, "without": 422, "workflow": [424, 428], "wrap": [387, 388, 411], "write": 424}})