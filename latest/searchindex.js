Search.setIndex({"alltitles": {"Acquisition Function Values": [[446, "acquisition-function-values"]], "Acquisition function": [[401, "acquisition-function"]], "AcquisitionFunction": [[24, null]], "Active Learning": [[444, null]], "Added": [[440, "added"], [440, "id6"], [440, "id16"], [440, "id20"], [440, "id26"], [440, "id33"], [440, "id42"], [440, "id48"], [440, "id52"], [440, "id59"], [440, "id64"], [440, "id70"], [440, "id76"], [440, "id80"], [440, "id84"], [440, "id88"], [440, "id93"], [440, "id97"], [440, "id100"], [440, "id104"], [440, "id108"], [440, "id112"], [440, "id115"], [440, "id119"], [440, "id123"], [440, "id127"], [440, "id131"], [440, "id137"], [440, "id140"]], "Addendum: Description of transformation functions": [[423, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[461, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[459, null]], "Adding Measurements": [[446, "adding-measurements"]], "Adding Partial Results": [[445, "adding-partial-results"]], "AdditiveKernel": [[116, null]], "Advanced Example: Chemical Substances": [[438, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[421, "an-imaginary-use-case"]], "Array-Based Callables": [[456, null]], "Asynchronous Workflows": [[445, null]], "Auto-Replication": [[457, "auto-replication"]], "Automatic field conversion": [[455, "automatic-field-conversion"]], "Available Models": [[457, "available-models"]], "Available recommenders suitable for initial recommendation": [[401, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[401, "available-surrogate-models"]], "Backtesting": [[394, null], [434, null]], "BaseSequentialMetaRecommender": [[182, null]], "Basic Creation": [[446, "basic-creation"]], "Basic Instructions": [[448, "basic-instructions"]], "Basic Usage": [[450, "basic-usage"]], "Basic example for using BayBE": [[400, null]], "Basic string assembly": [[455, "basic-string-assembly"]], "BasicKernel": [[103, null]], "Basics": [[399, null], [446, "basics"]], "Batch Optimization": [[446, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[438, null]], "Bayesian Recommenders": [[453, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[278, null]], "BayesianRecommender": [[193, null]], "Bernoulli Multi Armed Bandit": [[421, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[251, null]], "BetaPrior": [[168, null]], "BinaryTarget": [[296, null]], "BotorchRecommender": [[195, null]], "Bound methods": [[411, "bound-methods"]], "Breaking Changes": [[440, "breaking-changes"], [440, "id25"], [440, "id32"]], "Building from the Product of Parameter Values": [[454, "building-from-the-product-of-parameter-values"], [454, "id2"]], "Building the Model": [[421, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[439, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[446, "caching-of-recommendations"]], "Campaign": [[31, null]], "Campaign Setup": [[424, "campaign-setup"]], "Campaign Stopping": [[412, null]], "Campaigns": [[446, null]], "Candidate Control in Discrete Spaces": [[446, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[449, null]], "CardinalityConstraint": [[34, null]], "CategoricalEncoding": [[145, null]], "CategoricalParameter": [[140, null], [452, "categoricalparameter"]], "Caution": [[449, null]], "Changed": [[440, "changed"], [440, "id2"], [440, "id4"], [440, "id7"], [440, "id11"], [440, "id17"], [440, "id21"], [440, "id27"], [440, "id34"], [440, "id39"], [440, "id43"], [440, "id49"], [440, "id53"], [440, "id56"], [440, "id60"], [440, "id65"], [440, "id71"], [440, "id77"], [440, "id81"], [440, "id85"], [440, "id89"], [440, "id94"], [440, "id98"], [440, "id101"], [440, "id105"], [440, "id109"], [440, "id113"], [440, "id116"], [440, "id120"], [440, "id124"], [440, "id128"], [440, "id132"]], "Changelog": [[440, null]], "Clustering Recommenders": [[453, "clustering-recommenders"]], "Code Design": [[441, "code-design"]], "ColumnTransformer": [[383, null]], "Comparing recommendations in both objects": [[430, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[457, "composite-surrogates"]], "CompositeKernel": [[104, null]], "CompositeSurrogate": [[258, null]], "Computational Challenges": [[447, null]], "Condition": [[40, null]], "Conditions": [[447, "conditions"]], "Constraint": [[35, null]], "Constraint Setup": [[418, "constraint-setup"]], "Constraints": [[447, null]], "Constraints Continuous": [[402, null]], "Constraints Discrete": [[405, null]], "Constraints Setup": [[419, "constraints-setup"]], "Construct the campaign and run some iterations": [[403, "construct-the-campaign-and-run-some-iterations"], [404, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[454, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[396, "constructing-campaigns-for-the-simulation-loop"], [397, "constructing-campaigns-for-the-simulation-loop"], [398, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[454, "constructing-from-a-dataframe"], [454, "id1"], [454, "id3"]], "Constructing hybrid recommenders": [[428, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[427, "constructing-the-campaign-and-performing-a-recommendation"], [428, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[428, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[447, "continuous-constraints"]], "Continuous Parameters": [[452, "continuous-parameters"]], "Continuous Subspaces": [[454, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[44, null], [447, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[36, null]], "ContinuousLinearConstraint": [[45, null], [447, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[37, null]], "ContinuousParameter": [[136, null]], "Contributing to BayBE": [[441, null]], "Contributors": [[442, null], [442, "id1"]], "Convenience Construction and Implicit Conversion": [[451, null]], "Convenience Multi-Output Casting": [[451, null]], "Conventions for attrs classes": [[441, "conventions-for-attrs-classes"]], "Convert model to onnx": [[415, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[415, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[416, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[415, "create-campaign"]], "Creating Continuous Search Spaces": [[426, null]], "Creating a Campaign": [[446, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[454, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[431, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[406, "creating-and-printing-the-campaign"], [407, "creating-and-printing-the-campaign"], [409, "creating-and-printing-the-campaign"], [423, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[395, "creating-the-campaigns"]], "Creating the Objective": [[397, "creating-the-objective"]], "Creating the Optimization Objective": [[434, "creating-the-optimization-objective"], [435, "creating-the-optimization-objective"]], "Creating the Search Space": [[434, "creating-the-search-space"]], "Creating the Searchspace": [[435, "creating-the-searchspace"]], "Creating the campaign": [[401, "creating-the-campaign"], [416, "creating-the-campaign"], [430, "creating-the-campaign"]], "Creating the constraint": [[406, "creating-the-constraint"], [408, "creating-the-constraint"]], "Creating the constraints": [[407, "creating-the-constraints"], [409, "creating-the-constraints"]], "Creating the objective": [[423, "creating-the-objective"]], "Creating the recommender object": [[401, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[396, "creating-the-searchspace-and-the-objective"], [398, "creating-the-searchspace-and-the-objective"], [403, "creating-the-searchspace-and-the-objective"], [404, "creating-the-searchspace-and-the-objective"], [406, "creating-the-searchspace-and-the-objective"], [407, "creating-the-searchspace-and-the-objective"], [408, "creating-the-searchspace-and-the-objective"], [409, "creating-the-searchspace-and-the-objective"], [427, "creating-the-searchspace-and-the-objective"]], "Creation From a JSON Config": [[446, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[457, null]], "Custom Hooks": [[410, null]], "Custom Surrogates": [[414, null]], "CustomDiscreteParameter": [[143, null], [452, "customdiscreteparameter"]], "CustomEncoding": [[146, null]], "CustomONNXSurrogate": [[260, null]], "Dataframe deserialization": [[455, "dataframe-deserialization"]], "DefaultKernelFactory": [[274, null]], "Defining config dictionaries": [[432, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[412, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[413, "defining-the-hook"]], "Defining the Hooks": [[411, "defining-the-hooks"]], "Defining the Optimization Objective": [[438, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[395, "defining-the-optimization-problem"], [424, "defining-the-optimization-problem"]], "Defining the Search Space": [[438, "defining-the-search-space"]], "Defining the Tasks": [[434, "defining-the-tasks"], [435, "defining-the-tasks"]], "Defining the targets": [[423, "defining-the-targets"]], "Defining the test function": [[403, "defining-the-test-function"], [404, "defining-the-test-function"], [427, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[428, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[440, "deprecations"], [440, "id23"], [440, "id30"], [440, "id37"], [440, "id46"], [440, "id62"], [440, "id68"], [440, "id74"], [440, "id91"]], "Deserialization from configuration strings": [[455, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[124, null], [451, "desirabilityobjective"]], "Developer Tools": [[441, "developer-tools"]], "Discrete Constraints": [[447, "discrete-constraints"]], "Discrete Parameters": [[452, "discrete-parameters"]], "Discrete Subspaces": [[454, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[418, null]], "DiscreteCardinalityConstraint": [[51, null], [447, "discretecardinalityconstraint"]], "DiscreteConstraint": [[38, null]], "DiscreteCustomConstraint": [[52, null], [447, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[53, null], [447, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[54, null], [447, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[55, null], [447, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[56, null], [447, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[137, null]], "DiscretePermutationInvarianceConstraint": [[57, null], [447, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[58, null]], "DiscreteSamplingMethod": [[379, null]], "DiscreteSumConstraint": [[59, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[447, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[421, "discussion"]], "Disk Caching": [[448, "disk-caching"]], "Dummy": [[317, null]], "Duplicate Substances": [[418, "duplicate-substances"]], "Dynamic Exclusion": [[449, "dynamic-exclusion"]], "EDBOKernelFactory": [[276, null]], "EXPERIMENTAL: Floating Point Precision": [[448, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[461, null]], "Environment Variables": [[448, null]], "Equivalent copies": [[455, null]], "Estimation with Constraints": [[461, null]], "Example Searchspace and objective parameters": [[401, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[403, null]], "Example for creating campaigns from configs": [[431, null]], "Example for custom parameter passing in surrogate models": [[416, null]], "Example for full simulation loop using a table-based lookup mechanism": [[397, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[398, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[396, null]], "Example for linear constraints in a continuous searchspace": [[404, null]], "Example for surrogate model with a custom pretrained model": [[415, null]], "Example for the serialization of a campaign": [[430, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[427, null]], "Example for using custom constraints in discrete searchspaces": [[406, null]], "Example for using dependency constraints in discrete searchspaces": [[407, null]], "Example for using different strategies": [[401, null]], "Example for using exclusion constraints in discrete searchspaces": [[408, null]], "Example for using exclusion constraints incorporating sums and products": [[409, null]], "Example for using synthetic test functions in hybrid spaces": [[428, null]], "Example for using the multi target mode for the objective": [[423, null]], "Example for validation of a config file": [[432, null]], "Examples": [[436, null]], "Examples On This Page": [[450, null]], "Excluding Configurations": [[449, "excluding-configurations"]], "Expectations": [[459, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[415, "experiment-setup"], [416, "experiment-setup"]], "Experiment setup": [[406, "experiment-setup"], [407, "experiment-setup"], [408, "experiment-setup"], [409, "experiment-setup"], [430, "experiment-setup"]], "Experiment setup and creating the searchspace": [[423, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[448, null]], "Experimental Representation Limits": [[450, null]], "Experimental and Computational Representations": [[450, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.6.*)": [[440, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[440, "expired-deprecations-from-0-7"]], "Expired Deprecations (from 0.9.*)": [[440, "expired-deprecations-from-0-9"]], "Explainers": [[450, "explainers"]], "Extending BayBE\u2019s Functionality": [[441, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[457, "extracting-the-model-for-advanced-study"]], "FAQ": [[437, null]], "FPSRecommender": [[207, null]], "Fixed": [[440, "fixed"], [440, "id8"], [440, "id12"], [440, "id14"], [440, "id18"], [440, "id22"], [440, "id28"], [440, "id36"], [440, "id40"], [440, "id45"], [440, "id50"], [440, "id54"], [440, "id61"], [440, "id66"], [440, "id72"], [440, "id78"], [440, "id86"], [440, "id90"], [440, "id95"], [440, "id102"], [440, "id106"], [440, "id110"], [440, "id117"], [440, "id121"], [440, "id125"], [440, "id129"], [440, "id133"], [440, "id135"], [440, "id138"]], "For Label-Like Parameters: Values and Active Values": [[452, "label-like"]], "From GitHub": [[438, "from-github"]], "From Local Clone": [[438, "from-local-clone"]], "From Package Index": [[438, "from-package-index"]], "From the Default Constructor": [[454, "from-the-default-constructor"]], "Further Information": [[446, "further-information"]], "GammaPrior": [[169, null]], "GaussianMixtureClusteringRecommender": [[202, null]], "GaussianProcessPreset": [[271, null]], "GaussianProcessSurrogate": [[264, null]], "General Information": [[453, "general-information"]], "General Workflow": [[441, "general-workflow"]], "Generating Lookup Tables": [[434, "generating-lookup-tables"], [435, "generating-lookup-tables"]], "Getting Recommendations": [[446, "getting-recommendations"], [449, null]], "Getting a recommendation and adding measurements": [[400, "getting-a-recommendation-and-adding-measurements"]], "Global Uncertainty Reduction": [[444, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[170, null]], "HalfNormalPrior": [[171, null]], "Hook instance vs. target instance": [[411, null]], "Hybrid constraints": [[447, null]], "Imports": [[395, "imports"], [411, "imports"], [413, "imports"], [418, "imports"], [419, "imports"], [421, "imports"], [424, "imports"], [426, "imports"], [434, "imports"], [435, "imports"]], "Inclusion of initial data": [[396, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[253, null]], "Indices and Tables": [[438, "indices-and-tables"]], "Influence of Continuous Parameters": [[461, null]], "Insights": [[450, null]], "Installation Related Issues": [[439, "installation-related-issues"]], "Interval": [[363, null]], "Invoking alternative constructors": [[455, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[415, "iterate-with-recommendations-and-measurements"], [416, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[455, "json-de-serialization"]], "KMeansClusteringRecommender": [[203, null]], "Kernel": [[105, null]], "KernelFactory": [[266, null]], "Known Issues": [[439, null]], "License": [[443, null]], "Limitations": [[445, null], [458, "limitations"]], "LinearKernel": [[107, null]], "Links for documentation": [[416, "links-for-documentation"]], "Local Uncertainty Reduction": [[444, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[172, null]], "Lookup functionality and data creation": [[396, "lookup-functionality-and-data-creation"], [397, "lookup-functionality-and-data-creation"], [398, "lookup-functionality-and-data-creation"]], "MATCH mode": [[458, "match-mode"]], "MIN and MAX mode": [[458, "min-and-max-mode"]], "Maintainers": [[442, "maintainers"]], "Mandatory Target Bounds": [[451, null]], "Manual verification of the constraint": [[406, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[407, "manual-verification-of-the-constraints"], [408, "manual-verification-of-the-constraints"], [409, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[445, "marking-experiments-as-pending"]], "MaternKernel": [[108, null]], "MeanPredictionSurrogate": [[280, null]], "Memory During Optimization": [[461, null]], "MemorySize": [[218, null]], "Meta Recommenders": [[449, null], [453, "meta-recommenders"]], "MetaRecommender": [[180, null]], "Method overrides": [[441, "method-overrides"]], "Missing Lookup Values": [[456, null]], "Mixtures": [[417, null]], "Model Interpretation in BO": [[450, null]], "Model Outputs": [[415, "model-outputs"], [416, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[418, null]], "Modeling a Mixture in Traditional Representation": [[419, null]], "Monitoring the Probability of Improvement": [[413, null]], "Monkeypatching": [[411, "monkeypatching"], [412, null], [413, "monkeypatching"]], "Multi Target": [[422, null]], "Multi-Armed Bandit": [[420, null]], "Multi-Output Modeling": [[457, "multi-output-modeling"]], "NGBoostSurrogate": [[282, null]], "NaiveHybridSpaceRecommender": [[187, null]], "Necessary imports": [[415, "necessary-imports"], [416, "necessary-imports"], [430, "necessary-imports"], [431, "necessary-imports"], [432, "necessary-imports"]], "Necessary imports for this example": [[396, "necessary-imports-for-this-example"], [397, "necessary-imports-for-this-example"], [398, "necessary-imports-for-this-example"], [400, "necessary-imports-for-this-example"], [401, "necessary-imports-for-this-example"], [403, "necessary-imports-for-this-example"], [404, "necessary-imports-for-this-example"], [406, "necessary-imports-for-this-example"], [407, "necessary-imports-for-this-example"], [408, "necessary-imports-for-this-example"], [409, "necessary-imports-for-this-example"], [423, "necessary-imports-for-this-example"], [427, "necessary-imports-for-this-example"], [428, "necessary-imports-for-this-example"]], "Nesting objects": [[455, "nesting-objects"]], "Non-Dominated Configurations": [[451, null]], "NonPredictiveRecommender": [[200, null]], "NormalPrior": [[173, null]], "NumericalContinuousParameter": [[150, null], [452, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[151, null], [452, "numericaldiscreteparameter"]], "NumericalTarget": [[302, null], [458, "numericaltarget"]], "Objective": [[121, null], [451, null]], "Optimizing a Custom Black-Box Function": [[395, null]], "Optional Dependencies": [[438, "optional-dependencies"]], "Optional Dependency": [[452, null]], "Optional: Defining the Optimization Strategy": [[438, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[418, null]], "PAMClusteringRecommender": [[204, null]], "Parameter": [[138, null]], "Parameter Encoding": [[452, null]], "Parameter Importance via SHAP": [[450, "parameter-importance-via-shap"]], "Parameter Names": [[452, null]], "Parameter Setup": [[418, "parameter-setup"], [419, "parameter-setup"]], "Parameter tolerances": [[446, null]], "ParameterEncoding": [[147, null]], "Parameters": [[452, null]], "Parameters for a full simulation loop": [[396, "parameters-for-a-full-simulation-loop"], [397, "parameters-for-a-full-simulation-loop"], [398, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[129, null], [451, "paretoobjective"]], "PartialAcquisitionFunction": [[26, null]], "Performing some iterations": [[423, "performing-some-iterations"]], "Performing the simulation loop": [[396, "performing-the-simulation-loop"]], "PeriodicKernel": [[109, null]], "Permanent Exclusion": [[449, "permanent-exclusion"]], "Permutation Invariance": [[418, "permutation-invariance"]], "PiecewisePolynomialKernel": [[110, null]], "PlainKernelFactory": [[267, null]], "Plots": [[450, "plots"]], "Plotting the Results": [[395, "plotting-the-results"], [412, "plotting-the-results"], [413, "plotting-the-results"]], "Polars": [[448, "polars"]], "PolynomialKernel": [[111, null]], "Posterior Statistics with Desirability Objectives": [[446, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Predictive Statistics": [[446, "predictive-statistics"]], "Prior": [[166, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[412, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[117, null]], "Pure Recommenders": [[453, "pure-recommenders"]], "PureRecommender": [[190, null]], "Purely Continuous Search Spaces": [[444, null]], "PyCharm vs. exceptiongroup": [[439, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[112, null]], "RFFKernel": [[113, null]], "RQKernel": [[114, null]], "RandomForestSurrogate": [[284, null]], "RandomRecommender": [[208, null]], "RecommenderProtocol": [[177, null]], "Recommenders": [[453, null]], "Registering Custom Hooks": [[411, null]], "Removed": [[440, "removed"], [440, "id9"], [440, "id29"], [440, "id35"], [440, "id44"], [440, "id57"], [440, "id67"], [440, "id73"], [440, "id82"]], "Representation of Data within Discrete Subspaces": [[454, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[461, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[454, "restricting-search-spaces-using-constraints"]], "Row Order": [[448, null]], "Running the Simulation": [[421, "running-the-simulation"]], "Running the Simulation Loop": [[395, "running-the-simulation-loop"]], "SHAPInsight": [[96, null]], "SKLearnClusteringRecommender": [[205, null]], "Sampling Recommenders": [[453, "sampling-recommenders"]], "Scalarizer": [[127, null]], "ScaleKernel": [[118, null]], "Search Space Creation": [[418, "search-space-creation"], [419, "search-space-creation"]], "Search Space Memory Estimation": [[461, "search-space-memory-estimation"]], "Search Spaces": [[454, null]], "SearchSpace": [[213, null]], "SearchSpaceType": [[214, null]], "Searchspaces": [[425, null]], "Seeing Transfer Learning in Action": [[459, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[446, null]], "SequentialMetaRecommender": [[183, null]], "SerialMixin": [[236, null]], "Serialization": [[429, null], [446, "serialization"], [455, null]], "Serialization and de-serialization": [[430, "serialization-and-de-serialization"]], "Settings": [[395, "settings"], [412, "settings"], [413, "settings"], [424, "settings"], [426, "settings"], [434, "settings"], [435, "settings"]], "Setup": [[400, "setup"], [421, "setup"]], "Signature components": [[411, null]], "Simplex Construction": [[418, null]], "Simulating Multiple Scenarios": [[456, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[456, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[456, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[412, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[412, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[456, null]], "Simulation Loop": [[434, "simulation-loop"], [435, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[424, null]], "SingleTargetObjective": [[131, null], [451, "singletargetobjective"]], "Slot-based Representation": [[419, null]], "SmoothedBoxPrior": [[174, null]], "StreamingSequentialMetaRecommender": [[184, null]], "Sub-Sampling Method": [[444, null]], "SubSelectionCondition": [[41, null], [447, "subselectioncondition"]], "SubspaceContinuous": [[211, null]], "SubspaceDiscrete": [[219, null]], "Substance Amounts": [[418, "substance-amounts"]], "SubstanceEncoding": [[148, null]], "SubstanceParameter": [[154, null], [452, "substanceparameter"]], "Suggested Fix": [[439, null], [439, null], [439, null], [439, null]], "Supported Acquisition Functions": [[445, null]], "Supported Recommenders": [[445, null]], "Surrogate": [[255, null]], "Surrogate Replication": [[457, "surrogate-replication"]], "SurrogateProtocol": [[256, null]], "Surrogates": [[457, null]], "Synchronizing Pull Requests": [[441, "synchronizing-pull-requests"]], "Target": [[294, null]], "TargetMode": [[299, null]], "TargetTransformation": [[300, null]], "Targets": [[458, null]], "TaskParameter": [[141, null], [452, "taskparameter"]], "Technology": [[459, null]], "Telemetry": [[448, "telemetry"]], "Telemetry Scope": [[448, null]], "Terminology": [[418, "terminology"], [455, null], [459, null]], "Terminology Continued": [[459, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[456, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[421, "the-black-box-model"]], "The Lookup Mechanism": [[456, "the-lookup-mechanism"]], "The Optimization Loop": [[438, "the-optimization-loop"]], "The Role of the TaskParameter": [[459, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[431, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[449, "the-recommend-call"]], "The type field": [[455, "the-type-field"]], "Theoretical Span": [[418, null]], "ThresholdCondition": [[42, null], [447, "thresholdcondition"]], "Trajectory-Based Control": [[449, null]], "Transfer Learning": [[433, null], [435, null], [459, null]], "Triggering the Hook": [[413, "triggering-the-hook"]], "Triggering the Hooks": [[411, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[185, null]], "Uninstalling Internet Packages": [[448, null]], "Unlocking Data Treasures Through Transfer Learning": [[459, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[319, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[460, null]], "Using Custom Models": [[457, "using-custom-models"]], "Using Explicit Bounds": [[454, "using-explicit-bounds"]], "Using None": [[456, "using-none"]], "Using a Callable": [[456, "using-a-callable"]], "Using a Dataframe": [[456, "using-a-dataframe"]], "Using abbreviations": [[455, "using-abbreviations"]], "Using configuration instead": [[415, "using-configuration-instead"], [416, "using-configuration-instead"]], "Using default values": [[455, "using-default-values"]], "Utilities": [[461, null]], "Validation of model parameters": [[416, "validation-of-model-parameters"]], "Verification of Constraints": [[418, "verification-of-constraints"], [419, "verification-of-constraints"]], "Verification of Span": [[418, "verification-of-span"]], "Verification of the two dictionaries": [[432, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[404, "verify-the-constraints"]], "Visualization": [[424, "visualization"]], "Windows \u2013 Torch Problems": [[439, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[403, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [404, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [428, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[441, "writing-docstrings"]], "Writing classes": [[441, "writing-classes"]], "[0.1.0] - 2022-10-01": [[440, "id139"]], "[0.10.0] - 2024-08-02": [[440, "id31"]], "[0.11.0] - 2024-09-09": [[440, "id24"]], "[0.11.1] - 2024-10-01": [[440, "id19"]], "[0.11.2] - 2024-10-11": [[440, "id15"]], "[0.11.3] - 2024-11-06": [[440, "id13"]], "[0.11.4] - 2025-01-27": [[440, "id10"]], "[0.12.0] - 2025-01-28": [[440, "id5"]], "[0.12.1] - 2025-01-29": [[440, "id3"]], "[0.12.2] - 2025-01-31": [[440, "id1"]], "[0.2.0] - 2022-11-10": [[440, "id136"]], "[0.2.1] - 2022-12-01": [[440, "id134"]], "[0.2.2] - 2023-01-13": [[440, "id130"]], "[0.2.3] - 2023-03-14": [[440, "id126"]], "[0.2.4] - 2023-03-24": [[440, "id122"]], "[0.3.0] - 2023-06-27": [[440, "id118"]], "[0.3.1] - 2023-07-17": [[440, "id114"]], "[0.3.2] - 2023-07-24": [[440, "id111"]], "[0.4.0] - 2023-08-16": [[440, "id107"]], "[0.4.1] - 2023-08-23": [[440, "id103"]], "[0.4.2] - 2023-08-29": [[440, "id99"]], "[0.5.0] - 2023-09-15": [[440, "id96"]], "[0.5.1] - 2023-10-19": [[440, "id92"]], "[0.6.0] - 2023-11-17": [[440, "id87"]], "[0.6.1] - 2023-11-27": [[440, "id83"]], "[0.7.0] - 2023-12-04": [[440, "id79"]], "[0.7.1] - 2023-12-07": [[440, "id75"]], "[0.7.2] - 2024-01-24": [[440, "id69"]], "[0.7.3] - 2024-02-09": [[440, "id63"]], "[0.7.4] - 2024-02-28": [[440, "id58"]], "[0.8.0] - 2024-02-29": [[440, "id55"]], "[0.8.1] - 2024-03-11": [[440, "id51"]], "[0.8.2] - 2024-03-27": [[440, "id47"]], "[0.9.0] - 2024-05-21": [[440, "id41"]], "[0.9.1] - 2024-06-04": [[440, "id38"]], "[Unreleased]": [[440, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[23, null]], "baybe.acquisition.partial": [[25, null]], "baybe.acquisition.utils": [[27, null]], "baybe.acquisition.utils.convert_acqf": [[28, null]], "baybe.acquisition.utils.str_to_acqf": [[29, null]], "baybe.campaign": [[30, null]], "baybe.constraints": [[32, null]], "baybe.constraints.base": [[33, null]], "baybe.constraints.conditions": [[39, null]], "baybe.constraints.continuous": [[43, null]], "baybe.constraints.deprecation": [[46, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[47, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[48, null]], "baybe.constraints.deprecation.structure_constraints": [[49, null]], "baybe.constraints.discrete": [[50, null]], "baybe.constraints.utils": [[60, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[61, null]], "baybe.constraints.validation": [[62, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[63, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[64, null]], "baybe.constraints.validation.validate_constraints": [[65, null]], "baybe.exceptions": [[66, null]], "baybe.exceptions.DeprecationError": [[67, null]], "baybe.exceptions.EmptySearchSpaceError": [[68, null]], "baybe.exceptions.IncompatibilityError": [[69, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, null]], "baybe.exceptions.IncompatibleArgumentError": [[71, null]], "baybe.exceptions.IncompatibleExplainerError": [[72, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, null]], "baybe.exceptions.IncompatibleSurrogateError": [[74, null]], "baybe.exceptions.IncompleteMeasurementsError": [[75, null]], "baybe.exceptions.InfeasibilityError": [[76, null]], "baybe.exceptions.InvalidSurrogateModelError": [[77, null]], "baybe.exceptions.InvalidTargetValueError": [[78, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[79, null]], "baybe.exceptions.ModelNotTrainedError": [[80, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[81, null]], "baybe.exceptions.NoMeasurementsError": [[82, null]], "baybe.exceptions.NoRecommendersLeftError": [[83, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[84, null]], "baybe.exceptions.NothingToSimulateError": [[85, null]], "baybe.exceptions.NumericalUnderflowError": [[86, null]], "baybe.exceptions.OptionalImportError": [[87, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[88, null]], "baybe.exceptions.UnidentifiedSubclassError": [[89, null]], "baybe.exceptions.UnmatchedAttributeError": [[90, null]], "baybe.exceptions.UnusedObjectWarning": [[91, null]], "baybe.insights": [[92, null]], "baybe.insights.shap": [[93, null]], "baybe.insights.shap.EXPLAINERS": [[94, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[95, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[97, null]], "baybe.insights.shap.SHAP_PLOTS": [[98, null]], "baybe.insights.shap.is_shap_explainer": [[99, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[100, null]], "baybe.kernels": [[101, null]], "baybe.kernels.base": [[102, null]], "baybe.kernels.basic": [[106, null]], "baybe.kernels.composite": [[115, null]], "baybe.objectives": [[119, null]], "baybe.objectives.base": [[120, null]], "baybe.objectives.base.to_objective": [[122, null]], "baybe.objectives.desirability": [[123, null]], "baybe.objectives.desirability.scalarize": [[125, null]], "baybe.objectives.enum": [[126, null]], "baybe.objectives.pareto": [[128, null]], "baybe.objectives.single": [[130, null]], "baybe.objectives.validation": [[132, null]], "baybe.objectives.validation.validate_target_names": [[133, null]], "baybe.parameters": [[134, null]], "baybe.parameters.base": [[135, null]], "baybe.parameters.categorical": [[139, null]], "baybe.parameters.custom": [[142, null]], "baybe.parameters.enum": [[144, null]], "baybe.parameters.numerical": [[149, null]], "baybe.parameters.substance": [[152, null]], "baybe.parameters.substance.Smiles": [[153, null]], "baybe.parameters.utils": [[155, null]], "baybe.parameters.utils.activate_parameter": [[156, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[157, null]], "baybe.parameters.utils.is_inactive": [[158, null]], "baybe.parameters.utils.sort_parameters": [[159, null]], "baybe.parameters.validation": [[160, null]], "baybe.parameters.validation.validate_decorrelation": [[161, null]], "baybe.parameters.validation.validate_is_finite": [[162, null]], "baybe.parameters.validation.validate_unique_values": [[163, null]], "baybe.priors": [[164, null]], "baybe.priors.base": [[165, null]], "baybe.priors.basic": [[167, null]], "baybe.recommenders": [[175, null]], "baybe.recommenders.base": [[176, null]], "baybe.recommenders.meta": [[178, null]], "baybe.recommenders.meta.base": [[179, null]], "baybe.recommenders.meta.sequential": [[181, null]], "baybe.recommenders.naive": [[186, null]], "baybe.recommenders.pure": [[188, null]], "baybe.recommenders.pure.base": [[189, null]], "baybe.recommenders.pure.bayesian": [[191, null]], "baybe.recommenders.pure.bayesian.base": [[192, null]], "baybe.recommenders.pure.bayesian.botorch": [[194, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[196, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[197, null]], "baybe.recommenders.pure.nonpredictive": [[198, null]], "baybe.recommenders.pure.nonpredictive.base": [[199, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[201, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[206, null]], "baybe.searchspace": [[209, null]], "baybe.searchspace.continuous": [[210, null]], "baybe.searchspace.core": [[212, null]], "baybe.searchspace.core.to_searchspace": [[215, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[216, null]], "baybe.searchspace.discrete": [[217, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[220, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[221, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[222, null]], "baybe.searchspace.validation": [[223, null]], "baybe.searchspace.validation.get_transform_parameters": [[224, null]], "baybe.searchspace.validation.validate_parameter_names": [[225, null]], "baybe.searchspace.validation.validate_parameters": [[226, null]], "baybe.serialization": [[227, null]], "baybe.serialization.core": [[228, null]], "baybe.serialization.core.block_deserialization_hook": [[229, null]], "baybe.serialization.core.block_serialization_hook": [[230, null]], "baybe.serialization.core.converter": [[231, null]], "baybe.serialization.core.get_base_structure_hook": [[232, null]], "baybe.serialization.core.select_constructor_hook": [[233, null]], "baybe.serialization.core.unstructure_base": [[234, null]], "baybe.serialization.mixin": [[235, null]], "baybe.serialization.utils": [[237, null]], "baybe.serialization.utils.deserialize_dataframe": [[238, null]], "baybe.serialization.utils.serialize_dataframe": [[239, null]], "baybe.simulation": [[240, null]], "baybe.simulation.core": [[241, null]], "baybe.simulation.core.simulate_experiment": [[242, null]], "baybe.simulation.lookup": [[243, null]], "baybe.simulation.lookup.look_up_targets": [[244, null]], "baybe.simulation.scenarios": [[245, null]], "baybe.simulation.scenarios.simulate_scenarios": [[246, null]], "baybe.simulation.transfer_learning": [[247, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[248, null]], "baybe.surrogates": [[249, null]], "baybe.surrogates.bandit": [[250, null]], "baybe.surrogates.base": [[252, null]], "baybe.surrogates.base.PosteriorStatistic": [[254, null]], "baybe.surrogates.composite": [[257, null]], "baybe.surrogates.custom": [[259, null]], "baybe.surrogates.custom.register_custom_architecture": [[261, null]], "baybe.surrogates.gaussian_process": [[262, null]], "baybe.surrogates.gaussian_process.core": [[263, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[265, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[268, null]], "baybe.surrogates.gaussian_process.presets": [[269, null]], "baybe.surrogates.gaussian_process.presets.core": [[270, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[272, null]], "baybe.surrogates.gaussian_process.presets.default": [[273, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[275, null]], "baybe.surrogates.linear": [[277, null]], "baybe.surrogates.naive": [[279, null]], "baybe.surrogates.ngboost": [[281, null]], "baybe.surrogates.random_forest": [[283, null]], "baybe.surrogates.utils": [[285, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[286, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[287, null]], "baybe.surrogates.utils.catch_constant_targets": [[288, null]], "baybe.surrogates.validation": [[289, null]], "baybe.surrogates.validation.get_model_params_validator": [[290, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[291, null]], "baybe.targets": [[292, null]], "baybe.targets.base": [[293, null]], "baybe.targets.binary": [[295, null]], "baybe.targets.binary.ChoiceValue": [[297, null]], "baybe.targets.enum": [[298, null]], "baybe.targets.numerical": [[301, null]], "baybe.targets.transforms": [[303, null]], "baybe.targets.transforms.bell_transform": [[304, null]], "baybe.targets.transforms.linear_transform": [[305, null]], "baybe.targets.transforms.triangular_transform": [[306, null]], "baybe.telemetry": [[307, null]], "baybe.telemetry.get_user_details": [[308, null]], "baybe.telemetry.is_enabled": [[309, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[310, null]], "baybe.telemetry.telemetry_record_value": [[311, null]], "baybe.utils": [[312, null]], "baybe.utils.augmentation": [[313, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[314, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[315, null]], "baybe.utils.basic": [[316, null]], "baybe.utils.basic.UNSPECIFIED": [[318, null]], "baybe.utils.basic.convert_to_float": [[321, null]], "baybe.utils.basic.find_subclass": [[322, null]], "baybe.utils.basic.get_baseclasses": [[323, null]], "baybe.utils.basic.get_subclasses": [[324, null]], "baybe.utils.basic.group_duplicate_values": [[325, null]], "baybe.utils.basic.hilberts_factory": [[326, null]], "baybe.utils.basic.is_all_instance": [[327, null]], "baybe.utils.basic.match_attributes": [[328, null]], "baybe.utils.basic.refers_to": [[329, null]], "baybe.utils.basic.register_hooks": [[330, null]], "baybe.utils.basic.to_tuple": [[331, null]], "baybe.utils.boolean": [[332, null]], "baybe.utils.boolean.check_if_in": [[333, null]], "baybe.utils.boolean.is_abstract": [[334, null]], "baybe.utils.boolean.strtobool": [[335, null]], "baybe.utils.chemistry": [[336, null]], "baybe.utils.chemistry.get_canonical_smiles": [[337, null]], "baybe.utils.chemistry.get_fingerprint_class": [[338, null]], "baybe.utils.chemistry.name_to_smiles": [[339, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[340, null]], "baybe.utils.conversion": [[341, null]], "baybe.utils.conversion.fraction_to_float": [[342, null]], "baybe.utils.conversion.nonstring_to_tuple": [[343, null]], "baybe.utils.conversion.to_string": [[344, null]], "baybe.utils.dataframe": [[345, null]], "baybe.utils.dataframe.add_fake_measurements": [[346, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[347, null]], "baybe.utils.dataframe.add_parameter_noise": [[348, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[349, null]], "baybe.utils.dataframe.create_fake_input": [[350, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[351, null]], "baybe.utils.dataframe.df_drop_string_columns": [[352, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[353, null]], "baybe.utils.dataframe.filter_df": [[354, null]], "baybe.utils.dataframe.fuzzy_row_match": [[355, null]], "baybe.utils.dataframe.get_transform_objects": [[356, null]], "baybe.utils.dataframe.handle_missing_values": [[357, null]], "baybe.utils.dataframe.pretty_print_df": [[358, null]], "baybe.utils.dataframe.to_tensor": [[359, null]], "baybe.utils.dataframe.transform_target_columns": [[360, null]], "baybe.utils.interval": [[361, null]], "baybe.utils.interval.InfiniteIntervalError": [[362, null]], "baybe.utils.interval.convert_bounds": [[364, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[365, null]], "baybe.utils.memory": [[366, null]], "baybe.utils.memory.bytes_to_human_readable": [[367, null]], "baybe.utils.numerical": [[368, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[369, null]], "baybe.utils.numerical.DTypeFloatONNX": [[370, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[371, null]], "baybe.utils.numerical.closer_element": [[372, null]], "baybe.utils.numerical.closest_element": [[373, null]], "baybe.utils.numerical.geom_mean": [[374, null]], "baybe.utils.random": [[375, null]], "baybe.utils.random.set_random_seed": [[376, null]], "baybe.utils.random.temporary_seed": [[377, null]], "baybe.utils.sampling_algorithms": [[378, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[380, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[381, null]], "baybe.utils.scaling": [[382, null]], "baybe.utils.torch": [[384, null]], "baybe.utils.torch.DTypeFloatTorch": [[385, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[386, null]], "baybe.utils.validation": [[387, null]], "baybe.utils.validation.finite_float": [[388, null]], "baybe.utils.validation.non_inf_float": [[389, null]], "baybe.utils.validation.non_nan_float": [[390, null]], "baybe.utils.validation.validate_not_nan": [[391, null]], "baybe.utils.validation.validate_parameter_input": [[392, null]], "baybe.utils.validation.validate_target_input": [[393, null]], "classproperty": [[320, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[439, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNParEGO": [[12, null]], "qLogNoisyExpectedHypervolumeImprovement": [[13, null]], "qLogNoisyExpectedImprovement": [[14, null]], "qNegIntegratedPosteriorVariance": [[15, null]], "qNoisyExpectedHypervolumeImprovement": [[16, null]], "qNoisyExpectedImprovement": [[17, null]], "qPosteriorStandardDeviation": [[18, null]], "qProbabilityOfImprovement": [[19, null]], "qSimpleRegret": [[20, null]], "qThompsonSampling": [[21, null]], "qUpperConfidenceBound": [[22, null]], "\u201cPre-training\u201d stage": [[415, "pre-training-stage"]], "\u26a1 Quick Start": [[438, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[438, "maintainers"]], "\ud83d\udcbb Installation": [[438, "installation"]], "\ud83d\udcc4 License": [[438, "license"]], "\ud83d\udce1 Telemetry": [[438, "telemetry"]], "\ud83d\udd0b Batteries Included": [[438, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[438, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.IncompleteMeasurementsError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoMeasurementsError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.conversion.to_string", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.handle_missing_values", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.IncompleteMeasurementsError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoMeasurementsError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.conversion.to_string.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.handle_missing_values.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.incompletemeasurementserror method)": [[75, "baybe.exceptions.IncompleteMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[76, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[77, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[78, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[79, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[80, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[81, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.nomeasurementserror method)": [[82, "baybe.exceptions.NoMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[83, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[84, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[85, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[86, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[87, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[88, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[89, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[90, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[91, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[96, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[103, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[104, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[105, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[107, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[108, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[109, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[111, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[112, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[113, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[114, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[116, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[117, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[118, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[124, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[129, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[131, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[138, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[166, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[168, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[169, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[170, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[171, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[172, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[173, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[174, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[177, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[190, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[200, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[213, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[218, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[256, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[274, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[276, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[294, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[296, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[302, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[320, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[317, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[362, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[383, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.incompletemeasurementserror method)": [[75, "baybe.exceptions.IncompleteMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[76, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[77, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[78, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[79, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[80, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[81, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.nomeasurementserror method)": [[82, "baybe.exceptions.NoMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[83, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[84, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[85, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[86, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[87, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[88, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[89, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[90, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[91, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[145, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[146, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[148, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[362, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[174, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_values() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[24, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[156, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[346, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[347, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[348, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[116, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[190, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[200, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[190, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[200, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[190, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[200, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[168, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[349, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[174, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[96, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[118, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[116, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[117, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[103, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[286, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[287, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[271, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[23, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[25, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[27, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[30, "module-baybe.campaign", false]], "baybe.constraints": [[32, "module-baybe.constraints", false]], "baybe.constraints.base": [[33, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[39, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[43, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[46, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[50, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[60, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[62, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[66, "module-baybe.exceptions", false]], "baybe.insights": [[92, "module-baybe.insights", false]], "baybe.insights.shap": [[93, "module-baybe.insights.shap", false]], "baybe.kernels": [[101, "module-baybe.kernels", false]], "baybe.kernels.base": [[102, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[106, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[115, "module-baybe.kernels.composite", false]], "baybe.objectives": [[119, "module-baybe.objectives", false]], "baybe.objectives.base": [[120, "module-baybe.objectives.base", false]], "baybe.objectives.desirability": [[123, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[126, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[128, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[130, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[132, "module-baybe.objectives.validation", false]], "baybe.parameters": [[134, "module-baybe.parameters", false]], "baybe.parameters.base": [[135, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[139, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[142, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[144, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[149, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[152, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[155, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[160, "module-baybe.parameters.validation", false]], "baybe.priors": [[164, "module-baybe.priors", false]], "baybe.priors.base": [[165, "module-baybe.priors.base", false]], "baybe.priors.basic": [[167, "module-baybe.priors.basic", false]], "baybe.recommenders": [[175, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[176, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[178, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[179, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[181, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[186, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[188, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[189, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[191, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[192, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[194, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[196, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[198, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[199, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[201, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[206, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[209, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[210, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[212, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[217, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[223, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[227, "module-baybe.serialization", false]], "baybe.serialization.core": [[228, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[235, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[237, "module-baybe.serialization.utils", false]], "baybe.simulation": [[240, "module-baybe.simulation", false]], "baybe.simulation.core": [[241, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[243, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[245, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[247, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[249, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[250, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[252, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[257, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[259, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[262, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[263, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[265, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[269, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[270, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[273, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[275, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[277, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[279, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[281, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[283, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[285, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[289, "module-baybe.surrogates.validation", false]], "baybe.targets": [[292, "module-baybe.targets", false]], "baybe.targets.base": [[293, "module-baybe.targets.base", false]], "baybe.targets.binary": [[295, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[298, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[301, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[303, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[307, "module-baybe.telemetry", false]], "baybe.utils": [[312, "module-baybe.utils", false]], "baybe.utils.augmentation": [[313, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[316, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[332, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[336, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[341, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[345, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[361, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[366, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[368, "module-baybe.utils.numerical", false]], "baybe.utils.random": [[375, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[378, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[382, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[384, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[387, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[300, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[304, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[168, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[168, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[296, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[229, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[230, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[302, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[367, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[31, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[288, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[145, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[140, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[333, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[297, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[320, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[372, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[373, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[383, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[218, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[136, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[138, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[218, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[218, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[190, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[200, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[104, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[258, "baybe.surrogates.composite.CompositeSurrogate", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[169, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[40, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[213, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[214, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[36, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[47, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[48, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[136, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[28, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[364, "baybe.utils.interval.convert_bounds", false]], "convert_to_float() (in module baybe.utils.basic)": [[321, "baybe.utils.basic.convert_to_float", false]], "converter (in module baybe.serialization.core)": [[231, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[363, "baybe.utils.interval.Interval.create", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[350, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[146, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[143, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[146, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[274, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[67, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[238, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[124, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[314, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[315, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[351, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[352, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[353, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[213, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[214, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[137, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[379, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[369, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[370, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[385, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[317, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[276, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[214, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[68, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[137, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[140, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[141, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[213, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.evaluate", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[218, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[218, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[218, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[96, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[96, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[94, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[296, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[380, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[354, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[322, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[388, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[256, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[383, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[379, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[342, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[96, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[213, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[103, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[104, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[105, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[107, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[108, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[109, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[111, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[112, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[113, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[114, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[116, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[117, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[118, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[121, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[124, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[129, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[131, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[136, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[137, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[138, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[140, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[141, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[154, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[166, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[168, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[169, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[170, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[171, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[172, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[173, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[174, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[213, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[236, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[255, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[294, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[296, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[302, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[363, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[103, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[104, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[105, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[107, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[108, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[109, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[111, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[112, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[113, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[114, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[116, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[117, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[118, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[121, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[124, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[129, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[131, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[136, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[137, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[138, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[140, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[141, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[154, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[166, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[168, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[169, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[170, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[171, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[172, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[173, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[174, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[213, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[236, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[255, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[294, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[296, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[302, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[363, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[213, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[213, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[96, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[96, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[355, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[169, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[271, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[127, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[374, "baybe.utils.numerical.geom_mean", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_acquisition_function() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_acquisition_function", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[232, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[323, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[337, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[213, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[338, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[290, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[213, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[157, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[324, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[356, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[224, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[308, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[325, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[170, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[171, "baybe.priors.basic.HalfNormalPrior", false]], "handle_missing_values() (in module baybe.utils.dataframe)": [[357, "baybe.utils.dataframe.handle_missing_values", false]], "hilberts_factory() (in module baybe.utils.basic)": [[326, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[214, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[69, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[71, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[72, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[73, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[74, "baybe.exceptions.IncompatibleSurrogateError", false]], "incompletemeasurementserror": [[75, "baybe.exceptions.IncompleteMeasurementsError", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infeasibilityerror": [[76, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[362, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[145, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[363, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[77, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[78, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[334, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[327, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[61, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[136, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[138, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[136, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[138, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[309, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[138, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[158, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[121, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[124, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[129, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[131, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[136, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[137, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[138, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[140, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[141, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[99, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[180, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "joint_acquisition_value() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.joint_acquisition_value", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[105, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[108, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[109, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[112, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[113, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[114, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[108, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[109, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[112, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[113, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[114, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[300, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[305, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[107, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[172, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[173, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[172, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[244, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[363, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[100, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[272, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[383, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[299, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[328, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[108, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[299, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[127, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[218, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[180, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[299, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimumcardinalityviolatedwarning": [[79, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[302, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[80, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [23, "module-baybe.acquisition.base", false], [25, "module-baybe.acquisition.partial", false], [27, "module-baybe.acquisition.utils", false], [30, "module-baybe.campaign", false], [32, "module-baybe.constraints", false], [33, "module-baybe.constraints.base", false], [39, "module-baybe.constraints.conditions", false], [43, "module-baybe.constraints.continuous", false], [46, "module-baybe.constraints.deprecation", false], [50, "module-baybe.constraints.discrete", false], [60, "module-baybe.constraints.utils", false], [62, "module-baybe.constraints.validation", false], [66, "module-baybe.exceptions", false], [92, "module-baybe.insights", false], [93, "module-baybe.insights.shap", false], [101, "module-baybe.kernels", false], [102, "module-baybe.kernels.base", false], [106, "module-baybe.kernels.basic", false], [115, "module-baybe.kernels.composite", false], [119, "module-baybe.objectives", false], [120, "module-baybe.objectives.base", false], [123, "module-baybe.objectives.desirability", false], [126, "module-baybe.objectives.enum", false], [128, "module-baybe.objectives.pareto", false], [130, "module-baybe.objectives.single", false], [132, "module-baybe.objectives.validation", false], [134, "module-baybe.parameters", false], [135, "module-baybe.parameters.base", false], [139, "module-baybe.parameters.categorical", false], [142, "module-baybe.parameters.custom", false], [144, "module-baybe.parameters.enum", false], [149, "module-baybe.parameters.numerical", false], [152, "module-baybe.parameters.substance", false], [155, "module-baybe.parameters.utils", false], [160, "module-baybe.parameters.validation", false], [164, "module-baybe.priors", false], [165, "module-baybe.priors.base", false], [167, "module-baybe.priors.basic", false], [175, "module-baybe.recommenders", false], [176, "module-baybe.recommenders.base", false], [178, "module-baybe.recommenders.meta", false], [179, "module-baybe.recommenders.meta.base", false], [181, "module-baybe.recommenders.meta.sequential", false], [186, "module-baybe.recommenders.naive", false], [188, "module-baybe.recommenders.pure", false], [189, "module-baybe.recommenders.pure.base", false], [191, "module-baybe.recommenders.pure.bayesian", false], [192, "module-baybe.recommenders.pure.bayesian.base", false], [194, "module-baybe.recommenders.pure.bayesian.botorch", false], [196, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [198, "module-baybe.recommenders.pure.nonpredictive", false], [199, "module-baybe.recommenders.pure.nonpredictive.base", false], [201, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [206, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [209, "module-baybe.searchspace", false], [210, "module-baybe.searchspace.continuous", false], [212, "module-baybe.searchspace.core", false], [217, "module-baybe.searchspace.discrete", false], [223, "module-baybe.searchspace.validation", false], [227, "module-baybe.serialization", false], [228, "module-baybe.serialization.core", false], [235, "module-baybe.serialization.mixin", false], [237, "module-baybe.serialization.utils", false], [240, "module-baybe.simulation", false], [241, "module-baybe.simulation.core", false], [243, "module-baybe.simulation.lookup", false], [245, "module-baybe.simulation.scenarios", false], [247, "module-baybe.simulation.transfer_learning", false], [249, "module-baybe.surrogates", false], [250, "module-baybe.surrogates.bandit", false], [252, "module-baybe.surrogates.base", false], [257, "module-baybe.surrogates.composite", false], [259, "module-baybe.surrogates.custom", false], [262, "module-baybe.surrogates.gaussian_process", false], [263, "module-baybe.surrogates.gaussian_process.core", false], [265, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [269, "module-baybe.surrogates.gaussian_process.presets", false], [270, "module-baybe.surrogates.gaussian_process.presets.core", false], [273, "module-baybe.surrogates.gaussian_process.presets.default", false], [275, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [277, "module-baybe.surrogates.linear", false], [279, "module-baybe.surrogates.naive", false], [281, "module-baybe.surrogates.ngboost", false], [283, "module-baybe.surrogates.random_forest", false], [285, "module-baybe.surrogates.utils", false], [289, "module-baybe.surrogates.validation", false], [292, "module-baybe.targets", false], [293, "module-baybe.targets.base", false], [295, "module-baybe.targets.binary", false], [298, "module-baybe.targets.enum", false], [301, "module-baybe.targets.numerical", false], [303, "module-baybe.targets.transforms", false], [307, "module-baybe.telemetry", false], [312, "module-baybe.utils", false], [313, "module-baybe.utils.augmentation", false], [316, "module-baybe.utils.basic", false], [332, "module-baybe.utils.boolean", false], [336, "module-baybe.utils.chemistry", false], [341, "module-baybe.utils.conversion", false], [345, "module-baybe.utils.dataframe", false], [361, "module-baybe.utils.interval", false], [366, "module-baybe.utils.memory", false], [368, "module-baybe.utils.numerical", false], [375, "module-baybe.utils.random", false], [378, "module-baybe.utils.sampling_algorithms", false], [382, "module-baybe.utils.scaling", false], [384, "module-baybe.utils.torch", false], [387, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[121, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[124, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[129, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[131, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[136, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[137, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[138, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[140, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[141, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[154, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[294, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[296, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[302, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[339, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[81, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "nomeasurementserror": [[82, "baybe.exceptions.NoMeasurementsError", false]], "non_inf_float() (in module baybe.utils.validation)": [[389, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[390, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[95, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[200, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[343, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[83, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[84, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[85, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[108, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[113, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[302, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[86, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[121, "baybe.objectives.base.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[111, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[111, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[145, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[87, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[118, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[118, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[138, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[220, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[221, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[147, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[129, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[109, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[109, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[109, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[96, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[254, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[111, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[358, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[166, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[117, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[190, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[379, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[169, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[177, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[187, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[190, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[200, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[177, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[329, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[261, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[330, "baybe.utils.basic.register_hooks", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "rffkernel (class in baybe.kernels.basic)": [[113, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[114, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[381, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[125, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[124, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[127, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[170, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[171, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[172, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[173, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[118, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[213, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[88, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[214, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[233, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[41, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[197, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[239, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[236, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[376, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[97, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[98, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[96, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[174, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[242, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[246, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[248, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[131, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[153, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[340, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[159, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[29, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[335, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[49, "baybe.constraints.deprecation.structure_constraints", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[41, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[211, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[148, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[154, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[296, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[138, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[294, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[296, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[302, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[255, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[255, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[255, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[193, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[195, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[256, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[258, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[294, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[299, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[121, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[124, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[129, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[131, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[300, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[141, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[310, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[311, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[377, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[42, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[256, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[103, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[104, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[105, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[107, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[108, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[109, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[111, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[112, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[113, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[114, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[116, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[117, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[118, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[124, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[129, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[131, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[138, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[166, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[168, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[169, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[170, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[171, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[172, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[173, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[174, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[213, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[236, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[294, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[296, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[302, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[103, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[104, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[105, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[107, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[108, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[109, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[111, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[112, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[113, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[114, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[116, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[117, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[118, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[103, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[104, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[105, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[107, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[108, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[109, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[111, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[112, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[113, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[114, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[116, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[117, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[118, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[166, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[168, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[169, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[170, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[171, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[172, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[173, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[174, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[103, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[104, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[105, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[107, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[108, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[109, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[110, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[111, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[112, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[113, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[114, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[116, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[117, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[118, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[124, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[129, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[131, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[138, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[166, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[168, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[169, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[170, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[171, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[172, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[173, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[174, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[180, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[213, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[236, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[294, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[296, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[302, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[294, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[296, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[302, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[122, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[138, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[215, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.conversion)": [[344, "baybe.utils.conversion.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[136, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[150, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[359, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[331, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[124, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[129, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[131, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[137, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[140, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[141, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[154, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[213, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[294, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[296, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[302, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[383, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[360, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[302, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[300, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[306, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[185, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[89, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[90, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[318, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[319, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[234, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[91, "baybe.exceptions.UnusedObjectWarning", false]], "update_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.update_measurements", false]], "upper (baybe.utils.interval.interval attribute)": [[363, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[365, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[96, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[63, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[64, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[65, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[291, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[161, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[162, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[391, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[392, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[225, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[226, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[216, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[222, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[393, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[133, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[163, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[137, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[140, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[141, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[143, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[151, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[154, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[107, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[107, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[371, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[386, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[124, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[148, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [30, 0, 0, "-", "campaign"], [32, 0, 0, "-", "constraints"], [66, 0, 0, "-", "exceptions"], [92, 0, 0, "-", "insights"], [101, 0, 0, "-", "kernels"], [119, 0, 0, "-", "objectives"], [134, 0, 0, "-", "parameters"], [164, 0, 0, "-", "priors"], [175, 0, 0, "-", "recommenders"], [209, 0, 0, "-", "searchspace"], [227, 0, 0, "-", "serialization"], [240, 0, 0, "-", "simulation"], [249, 0, 0, "-", "surrogates"], [292, 0, 0, "-", "targets"], [307, 0, 0, "-", "telemetry"], [312, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [23, 0, 0, "-", "base"], [25, 0, 0, "-", "partial"], [27, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNParEGO"], [13, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [14, 1, 1, "", "qLogNoisyExpectedImprovement"], [15, 1, 1, "", "qNegIntegratedPosteriorVariance"], [16, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [17, 1, 1, "", "qNoisyExpectedImprovement"], [18, 1, 1, "", "qPosteriorStandardDeviation"], [19, 1, 1, "", "qProbabilityOfImprovement"], [20, 1, 1, "", "qSimpleRegret"], [21, 1, 1, "", "qThompsonSampling"], [22, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.evaluate.params": [[3, 4, 1, "", "candidates"], [3, 4, 1, "", "jointly"], [3, 4, 1, "", "measurements"], [3, 4, 1, "", "objective"], [3, 4, 1, "", "pending_experiments"], [3, 4, 1, "", "searchspace"], [3, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate.params": [[4, 4, 1, "", "candidates"], [4, 4, 1, "", "jointly"], [4, 4, 1, "", "measurements"], [4, 4, 1, "", "objective"], [4, 4, 1, "", "pending_experiments"], [4, 4, 1, "", "searchspace"], [4, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "evaluate"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.evaluate.params": [[5, 4, 1, "", "candidates"], [5, 4, 1, "", "jointly"], [5, 4, 1, "", "measurements"], [5, 4, 1, "", "objective"], [5, 4, 1, "", "pending_experiments"], [5, 4, 1, "", "searchspace"], [5, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "evaluate"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate.params": [[6, 4, 1, "", "candidates"], [6, 4, 1, "", "jointly"], [6, 4, 1, "", "measurements"], [6, 4, 1, "", "objective"], [6, 4, 1, "", "pending_experiments"], [6, 4, 1, "", "searchspace"], [6, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "evaluate"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate.params": [[7, 4, 1, "", "candidates"], [7, 4, 1, "", "jointly"], [7, 4, 1, "", "measurements"], [7, 4, 1, "", "objective"], [7, 4, 1, "", "pending_experiments"], [7, 4, 1, "", "searchspace"], [7, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate.params": [[8, 4, 1, "", "candidates"], [8, 4, 1, "", "jointly"], [8, 4, 1, "", "measurements"], [8, 4, 1, "", "objective"], [8, 4, 1, "", "pending_experiments"], [8, 4, 1, "", "searchspace"], [8, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "evaluate"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.evaluate.params": [[9, 4, 1, "", "candidates"], [9, 4, 1, "", "jointly"], [9, 4, 1, "", "measurements"], [9, 4, 1, "", "objective"], [9, 4, 1, "", "pending_experiments"], [9, 4, 1, "", "searchspace"], [9, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "evaluate"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate.params": [[10, 4, 1, "", "candidates"], [10, 4, 1, "", "jointly"], [10, 4, 1, "", "measurements"], [10, 4, 1, "", "objective"], [10, 4, 1, "", "pending_experiments"], [10, 4, 1, "", "searchspace"], [10, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "evaluate"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate.params": [[11, 4, 1, "", "candidates"], [11, 4, 1, "", "jointly"], [11, 4, 1, "", "measurements"], [11, 4, 1, "", "objective"], [11, 4, 1, "", "pending_experiments"], [11, 4, 1, "", "searchspace"], [11, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNParEGO": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "evaluate"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.evaluate.params": [[12, 4, 1, "", "candidates"], [12, 4, 1, "", "jointly"], [12, 4, 1, "", "measurements"], [12, 4, 1, "", "objective"], [12, 4, 1, "", "pending_experiments"], [12, 4, 1, "", "searchspace"], [12, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "compute_ref_point"], [13, 2, 1, "", "evaluate"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "prune_baseline"], [13, 3, 1, "", "reference_point"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[13, 4, 1, "", "array"], [13, 4, 1, "", "factor"], [13, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate.params": [[13, 4, 1, "", "candidates"], [13, 4, 1, "", "jointly"], [13, 4, 1, "", "measurements"], [13, 4, 1, "", "objective"], [13, 4, 1, "", "pending_experiments"], [13, 4, 1, "", "searchspace"], [13, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "evaluate"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate.params": [[14, 4, 1, "", "candidates"], [14, 4, 1, "", "jointly"], [14, 4, 1, "", "measurements"], [14, 4, 1, "", "objective"], [14, 4, 1, "", "pending_experiments"], [14, 4, 1, "", "searchspace"], [14, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "evaluate"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "get_integration_points"], [15, 3, 1, "", "sampling_fraction"], [15, 3, 1, "", "sampling_method"], [15, 3, 1, "", "sampling_n_points"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate.params": [[15, 4, 1, "", "candidates"], [15, 4, 1, "", "jointly"], [15, 4, 1, "", "measurements"], [15, 4, 1, "", "objective"], [15, 4, 1, "", "pending_experiments"], [15, 4, 1, "", "searchspace"], [15, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[15, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "compute_ref_point"], [16, 2, 1, "", "evaluate"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "reference_point"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[16, 4, 1, "", "array"], [16, 4, 1, "", "factor"], [16, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate.params": [[16, 4, 1, "", "candidates"], [16, 4, 1, "", "jointly"], [16, 4, 1, "", "measurements"], [16, 4, 1, "", "objective"], [16, 4, 1, "", "pending_experiments"], [16, 4, 1, "", "searchspace"], [16, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "evaluate"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "prune_baseline"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate.params": [[17, 4, 1, "", "candidates"], [17, 4, 1, "", "jointly"], [17, 4, 1, "", "measurements"], [17, 4, 1, "", "objective"], [17, 4, 1, "", "pending_experiments"], [17, 4, 1, "", "searchspace"], [17, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "evaluate"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate.params": [[18, 4, 1, "", "candidates"], [18, 4, 1, "", "jointly"], [18, 4, 1, "", "measurements"], [18, 4, 1, "", "objective"], [18, 4, 1, "", "pending_experiments"], [18, 4, 1, "", "searchspace"], [18, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "evaluate"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate.params": [[19, 4, 1, "", "candidates"], [19, 4, 1, "", "jointly"], [19, 4, 1, "", "measurements"], [19, 4, 1, "", "objective"], [19, 4, 1, "", "pending_experiments"], [19, 4, 1, "", "searchspace"], [19, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "evaluate"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.evaluate.params": [[20, 4, 1, "", "candidates"], [20, 4, 1, "", "jointly"], [20, 4, 1, "", "measurements"], [20, 4, 1, "", "objective"], [20, 4, 1, "", "pending_experiments"], [20, 4, 1, "", "searchspace"], [20, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "evaluate"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "n_mc_samples"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.evaluate.params": [[21, 4, 1, "", "candidates"], [21, 4, 1, "", "jointly"], [21, 4, 1, "", "measurements"], [21, 4, 1, "", "objective"], [21, 4, 1, "", "pending_experiments"], [21, 4, 1, "", "searchspace"], [21, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 3, 1, "", "beta"], [22, 2, 1, "", "evaluate"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate.params": [[22, 4, 1, "", "candidates"], [22, 4, 1, "", "jointly"], [22, 4, 1, "", "measurements"], [22, 4, 1, "", "objective"], [22, 4, 1, "", "pending_experiments"], [22, 4, 1, "", "searchspace"], [22, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[22, 4, 1, "", "string"]], "baybe.acquisition.base": [[24, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 2, 1, "", "evaluate"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.evaluate.params": [[24, 4, 1, "", "candidates"], [24, 4, 1, "", "jointly"], [24, 4, 1, "", "measurements"], [24, 4, 1, "", "objective"], [24, 4, 1, "", "pending_experiments"], [24, 4, 1, "", "searchspace"], [24, 4, 1, "", "surrogate"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[24, 4, 1, "", "string"]], "baybe.acquisition.partial": [[26, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "botorch_acqf"], [26, 3, 1, "", "pin_discrete"], [26, 3, 1, "", "pinned_part"], [26, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[26, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[28, 5, 1, "", "convert_acqf"], [29, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[31, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "acquisition_values"], [31, 2, 1, "", "add_measurements"], [31, 3, 1, "", "allow_recommending_already_measured"], [31, 3, 1, "", "allow_recommending_already_recommended"], [31, 3, 1, "", "allow_recommending_pending_experiments"], [31, 2, 1, "", "from_config"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 2, 1, "", "get_acquisition_function"], [31, 2, 1, "", "get_surrogate"], [31, 2, 1, "", "joint_acquisition_value"], [31, 6, 1, "", "measurements"], [31, 3, 1, "", "n_batches_done"], [31, 3, 1, "", "n_fits_done"], [31, 3, 1, "", "objective"], [31, 6, 1, "", "parameters"], [31, 2, 1, "", "posterior"], [31, 2, 1, "", "posterior_stats"], [31, 2, 1, "", "recommend"], [31, 3, 1, "", "recommender"], [31, 3, 1, "", "searchspace"], [31, 6, 1, "", "targets"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"], [31, 2, 1, "", "toggle_discrete_candidates"], [31, 2, 1, "", "update_measurements"], [31, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.acquisition_values.params": [[31, 4, 1, "", "acquisition_function"], [31, 4, 1, "", "batch_size"], [31, 4, 1, "", "candidates"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.add_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[31, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[31, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_acquisition_function.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.get_surrogate.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[31, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[31, 4, 1, "", "candidates"], [31, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[31, 4, 1, "", "complement"], [31, 4, 1, "", "constraints"], [31, 4, 1, "", "dry_run"], [31, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.update_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.validate_config.params": [[31, 4, 1, "", "config_json"]], "baybe.constraints": [[33, 0, 0, "-", "base"], [39, 0, 0, "-", "conditions"], [43, 0, 0, "-", "continuous"], [46, 0, 0, "-", "deprecation"], [50, 0, 0, "-", "discrete"], [60, 0, 0, "-", "utils"], [62, 0, 0, "-", "validation"]], "baybe.constraints.base": [[34, 1, 1, "", "CardinalityConstraint"], [35, 1, 1, "", "Constraint"], [36, 1, 1, "", "ContinuousConstraint"], [37, 1, 1, "", "ContinuousNonlinearConstraint"], [38, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "max_cardinality"], [34, 3, 1, "", "min_cardinality"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "eval_during_augmentation"], [36, 3, 1, "", "eval_during_creation"], [36, 3, 1, "", "eval_during_modeling"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 6, 1, "", "is_continuous"], [36, 6, 1, "", "is_discrete"], [36, 3, 1, "", "numerical_only"], [36, 3, 1, "", "parameters"], [36, 2, 1, "", "summary"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 2, 1, "", "get_invalid"], [38, 2, 1, "", "get_invalid_polars"], [38, 2, 1, "", "get_valid"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[38, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[38, 4, 1, "", "df"]], "baybe.constraints.conditions": [[40, 1, 1, "", "Condition"], [41, 1, 1, "", "SubSelectionCondition"], [42, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[40, 2, 1, "", "evaluate"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"], [40, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[40, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[40, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "selection"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"], [41, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[41, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[41, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "evaluate"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 3, 1, "", "operator"], [42, 3, 1, "", "threshold"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"], [42, 2, 1, "", "to_polars"], [42, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[42, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[42, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[44, 1, 1, "", "ContinuousCardinalityConstraint"], [45, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "eval_during_augmentation"], [44, 3, 1, "", "eval_during_creation"], [44, 3, 1, "", "eval_during_modeling"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 2, 1, "", "get_absolute_thresholds"], [44, 2, 1, "", "inactive_parameter_combinations"], [44, 6, 1, "", "is_continuous"], [44, 6, 1, "", "is_discrete"], [44, 3, 1, "", "max_cardinality"], [44, 3, 1, "", "min_cardinality"], [44, 6, 1, "", "n_inactive_parameter_combinations"], [44, 3, 1, "", "numerical_only"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "relative_threshold"], [44, 2, 1, "", "sample_inactive_parameters"], [44, 2, 1, "", "summary"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[44, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[44, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[44, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[45, 2, 1, "", "__init__"], [45, 3, 1, "", "coefficients"], [45, 3, 1, "", "eval_during_augmentation"], [45, 3, 1, "", "eval_during_creation"], [45, 3, 1, "", "eval_during_modeling"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 6, 1, "", "is_continuous"], [45, 6, 1, "", "is_discrete"], [45, 6, 1, "", "is_eq"], [45, 3, 1, "", "numerical_only"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "rhs"], [45, 2, 1, "", "summary"], [45, 2, 1, "", "to_botorch"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[45, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[45, 4, 1, "", "idx_offset"], [45, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[47, 5, 1, "", "ContinuousLinearEqualityConstraint"], [48, 5, 1, "", "ContinuousLinearInequalityConstraint"], [49, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[51, 1, 1, "", "DiscreteCardinalityConstraint"], [52, 1, 1, "", "DiscreteCustomConstraint"], [53, 1, 1, "", "DiscreteDependenciesConstraint"], [54, 1, 1, "", "DiscreteExcludeConstraint"], [55, 1, 1, "", "DiscreteLinkedParametersConstraint"], [56, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [57, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [58, 1, 1, "", "DiscreteProductConstraint"], [59, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "max_cardinality"], [51, 3, 1, "", "min_cardinality"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"], [52, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "affected_parameters"], [53, 3, 1, "", "conditions"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 3, 1, "", "permutation_invariant"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "combiner"], [54, 3, 1, "", "conditions"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "dependencies"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "condition"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[58, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[59, 2, 1, "", "__init__"], [59, 3, 1, "", "condition"], [59, 3, 1, "", "eval_during_augmentation"], [59, 3, 1, "", "eval_during_creation"], [59, 3, 1, "", "eval_during_modeling"], [59, 2, 1, "", "from_dict"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_invalid"], [59, 2, 1, "", "get_invalid_polars"], [59, 2, 1, "", "get_valid"], [59, 6, 1, "", "is_continuous"], [59, 6, 1, "", "is_discrete"], [59, 3, 1, "", "numerical_only"], [59, 3, 1, "", "parameters"], [59, 2, 1, "", "summary"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[59, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[59, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[59, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[59, 4, 1, "", "df"]], "baybe.constraints.utils": [[61, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[61, 4, 1, "", "check_maximum"], [61, 4, 1, "", "check_minimum"], [61, 4, 1, "", "df"], [61, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[63, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [64, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [65, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[63, 4, 1, "", "constraint"], [63, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[64, 4, 1, "", "constraints"]], "baybe.exceptions": [[67, 7, 1, "", "DeprecationError"], [68, 7, 1, "", "EmptySearchSpaceError"], [69, 7, 1, "", "IncompatibilityError"], [70, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [71, 7, 1, "", "IncompatibleArgumentError"], [72, 7, 1, "", "IncompatibleExplainerError"], [73, 7, 1, "", "IncompatibleSearchSpaceError"], [74, 7, 1, "", "IncompatibleSurrogateError"], [75, 7, 1, "", "IncompleteMeasurementsError"], [76, 7, 1, "", "InfeasibilityError"], [77, 7, 1, "", "InvalidSurrogateModelError"], [78, 7, 1, "", "InvalidTargetValueError"], [79, 7, 1, "", "MinimumCardinalityViolatedWarning"], [80, 7, 1, "", "ModelNotTrainedError"], [81, 7, 1, "", "NoMCAcquisitionFunctionError"], [82, 7, 1, "", "NoMeasurementsError"], [83, 7, 1, "", "NoRecommendersLeftError"], [84, 7, 1, "", "NotEnoughPointsLeftError"], [85, 7, 1, "", "NothingToSimulateError"], [86, 7, 1, "", "NumericalUnderflowError"], [87, 7, 1, "", "OptionalImportError"], [88, 7, 1, "", "SearchSpaceMatchWarning"], [89, 7, 1, "", "UnidentifiedSubclassError"], [90, 7, 1, "", "UnmatchedAttributeError"], [91, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.IncompleteMeasurementsError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.NoMeasurementsError": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__new__"]], "baybe.insights": [[93, 0, 0, "-", "shap"]], "baybe.insights.shap": [[94, 8, 1, "", "EXPLAINERS"], [95, 8, 1, "", "NON_SHAP_EXPLAINERS"], [96, 1, 1, "", "SHAPInsight"], [97, 8, 1, "", "SHAP_EXPLAINERS"], [98, 8, 1, "", "SHAP_PLOTS"], [99, 5, 1, "", "is_shap_explainer"], [100, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[96, 2, 1, "", "__init__"], [96, 3, 1, "", "background_data"], [96, 2, 1, "", "explain"], [96, 3, 1, "", "explainer"], [96, 2, 1, "", "from_campaign"], [96, 2, 1, "", "from_recommender"], [96, 2, 1, "", "from_surrogate"], [96, 2, 1, "", "plot"], [96, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[96, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[96, 4, 1, "", "campaign"], [96, 4, 1, "", "explainer_cls"], [96, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[96, 4, 1, "", "explainer_cls"], [96, 4, 1, "", "measurements"], [96, 4, 1, "", "objective"], [96, 4, 1, "", "recommender"], [96, 4, 1, "", "searchspace"], [96, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[96, 4, 1, "", "**kwargs"], [96, 4, 1, "", "data"], [96, 4, 1, "", "explanation_index"], [96, 4, 1, "", "plot_type"], [96, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[100, 4, 1, "", "data"], [100, 4, 1, "", "explainer_cls"], [100, 4, 1, "", "surrogate"], [100, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[102, 0, 0, "-", "base"], [106, 0, 0, "-", "basic"], [115, 0, 0, "-", "composite"]], "baybe.kernels.base": [[103, 1, 1, "", "BasicKernel"], [104, 1, 1, "", "CompositeKernel"], [105, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "from_dict"], [103, 2, 1, "", "from_json"], [103, 2, 1, "", "to_dict"], [103, 2, 1, "", "to_factory"], [103, 2, 1, "", "to_gpytorch"], [103, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[103, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[103, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.kernels.basic": [[107, 1, 1, "", "LinearKernel"], [108, 1, 1, "", "MaternKernel"], [109, 1, 1, "", "PeriodicKernel"], [110, 1, 1, "", "PiecewisePolynomialKernel"], [111, 1, 1, "", "PolynomialKernel"], [112, 1, 1, "", "RBFKernel"], [113, 1, 1, "", "RFFKernel"], [114, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"], [107, 3, 1, "", "variance_initial_value"], [107, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[107, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 3, 1, "", "lengthscale_initial_value"], [108, 3, 1, "", "lengthscale_prior"], [108, 3, 1, "", "nu"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 3, 1, "", "lengthscale_initial_value"], [109, 3, 1, "", "lengthscale_prior"], [109, 3, 1, "", "period_length_initial_value"], [109, 3, 1, "", "period_length_prior"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 3, 1, "", "lengthscale_initial_value"], [110, 3, 1, "", "lengthscale_prior"], [110, 3, 1, "", "q"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_factory"], [110, 2, 1, "", "to_gpytorch"], [110, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[110, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 3, 1, "", "offset_initial_value"], [111, 3, 1, "", "offset_prior"], [111, 3, 1, "", "power"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[111, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "lengthscale_initial_value"], [112, 3, 1, "", "lengthscale_prior"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[112, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 3, 1, "", "lengthscale_initial_value"], [113, 3, 1, "", "lengthscale_prior"], [113, 3, 1, "", "num_samples"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_factory"], [113, 2, 1, "", "to_gpytorch"], [113, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[113, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 3, 1, "", "lengthscale_initial_value"], [114, 3, 1, "", "lengthscale_prior"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_factory"], [114, 2, 1, "", "to_gpytorch"], [114, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[114, 4, 1, "", "string"]], "baybe.kernels.composite": [[116, 1, 1, "", "AdditiveKernel"], [117, 1, 1, "", "ProductKernel"], [118, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[116, 2, 1, "", "__init__"], [116, 3, 1, "", "base_kernels"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_factory"], [116, 2, 1, "", "to_gpytorch"], [116, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[116, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "base_kernels"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_factory"], [117, 2, 1, "", "to_gpytorch"], [117, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[117, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[118, 2, 1, "", "__init__"], [118, 3, 1, "", "base_kernel"], [118, 2, 1, "", "from_dict"], [118, 2, 1, "", "from_json"], [118, 3, 1, "", "outputscale_initial_value"], [118, 3, 1, "", "outputscale_prior"], [118, 2, 1, "", "to_dict"], [118, 2, 1, "", "to_factory"], [118, 2, 1, "", "to_gpytorch"], [118, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[118, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[118, 4, 1, "", "string"]], "baybe.objectives": [[120, 0, 0, "-", "base"], [123, 0, 0, "-", "desirability"], [126, 0, 0, "-", "enum"], [128, 0, 0, "-", "pareto"], [130, 0, 0, "-", "single"], [132, 0, 0, "-", "validation"]], "baybe.objectives.base": [[121, 1, 1, "", "Objective"], [122, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "from_dict"], [121, 2, 1, "", "from_json"], [121, 3, 1, "", "is_multi_output"], [121, 6, 1, "", "n_outputs"], [121, 6, 1, "", "targets"], [121, 2, 1, "", "to_dict"], [121, 2, 1, "", "to_json"], [121, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[121, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[121, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[121, 4, 1, "", "allow_extra"], [121, 4, 1, "", "allow_missing"], [121, 4, 1, "", "df"]], "baybe.objectives.desirability": [[124, 1, 1, "", "DesirabilityObjective"], [125, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "from_dict"], [124, 2, 1, "", "from_json"], [124, 3, 1, "", "is_multi_output"], [124, 6, 1, "", "n_outputs"], [124, 3, 1, "", "scalarizer"], [124, 6, 1, "", "targets"], [124, 2, 1, "", "to_dict"], [124, 2, 1, "", "to_json"], [124, 2, 1, "", "transform"], [124, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[124, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[124, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[124, 4, 1, "", "allow_extra"], [124, 4, 1, "", "allow_missing"], [124, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[125, 4, 1, "", "scalarizer"], [125, 4, 1, "", "values"], [125, 4, 1, "", "weights"]], "baybe.objectives.enum": [[127, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[127, 3, 1, "", "GEOM_MEAN"], [127, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[129, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "from_dict"], [129, 2, 1, "", "from_json"], [129, 3, 1, "", "is_multi_output"], [129, 6, 1, "", "n_outputs"], [129, 6, 1, "", "targets"], [129, 2, 1, "", "to_dict"], [129, 2, 1, "", "to_json"], [129, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[129, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[129, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[129, 4, 1, "", "allow_extra"], [129, 4, 1, "", "allow_missing"], [129, 4, 1, "", "df"]], "baybe.objectives.single": [[131, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "from_dict"], [131, 2, 1, "", "from_json"], [131, 3, 1, "", "is_multi_output"], [131, 6, 1, "", "n_outputs"], [131, 6, 1, "", "targets"], [131, 2, 1, "", "to_dict"], [131, 2, 1, "", "to_json"], [131, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[131, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[131, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[131, 4, 1, "", "allow_extra"], [131, 4, 1, "", "allow_missing"], [131, 4, 1, "", "df"]], "baybe.objectives.validation": [[133, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[135, 0, 0, "-", "base"], [139, 0, 0, "-", "categorical"], [142, 0, 0, "-", "custom"], [144, 0, 0, "-", "enum"], [149, 0, 0, "-", "numerical"], [152, 0, 0, "-", "substance"], [155, 0, 0, "-", "utils"], [160, 0, 0, "-", "validation"]], "baybe.parameters.base": [[136, 1, 1, "", "ContinuousParameter"], [137, 1, 1, "", "DiscreteParameter"], [138, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[136, 2, 1, "", "__init__"], [136, 6, 1, "", "comp_rep_columns"], [136, 2, 1, "", "from_dict"], [136, 2, 1, "", "from_json"], [136, 6, 1, "", "is_continuous"], [136, 6, 1, "", "is_discrete"], [136, 2, 1, "", "is_in_range"], [136, 3, 1, "", "is_numerical"], [136, 3, 1, "", "name"], [136, 2, 1, "", "summary"], [136, 2, 1, "", "to_dict"], [136, 2, 1, "", "to_json"], [136, 2, 1, "", "to_searchspace"], [136, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[136, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[136, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[136, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[137, 2, 1, "", "__init__"], [137, 6, 1, "", "active_values"], [137, 6, 1, "", "comp_df"], [137, 6, 1, "", "comp_rep_columns"], [137, 3, 1, "", "encoding"], [137, 2, 1, "", "from_dict"], [137, 2, 1, "", "from_json"], [137, 6, 1, "", "is_continuous"], [137, 6, 1, "", "is_discrete"], [137, 2, 1, "", "is_in_range"], [137, 3, 1, "", "is_numerical"], [137, 3, 1, "", "name"], [137, 2, 1, "", "summary"], [137, 2, 1, "", "to_dict"], [137, 2, 1, "", "to_json"], [137, 2, 1, "", "to_searchspace"], [137, 2, 1, "", "to_subspace"], [137, 2, 1, "", "transform"], [137, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[137, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[137, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[137, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[137, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[138, 2, 1, "", "__init__"], [138, 6, 1, "", "comp_rep_columns"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 6, 1, "", "is_continuous"], [138, 6, 1, "", "is_discrete"], [138, 2, 1, "", "is_in_range"], [138, 3, 1, "", "is_numerical"], [138, 3, 1, "", "name"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_json"], [138, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[138, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[138, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[138, 4, 1, "", "item"]], "baybe.parameters.categorical": [[140, 1, 1, "", "CategoricalParameter"], [141, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[140, 2, 1, "", "__init__"], [140, 6, 1, "", "active_values"], [140, 6, 1, "", "comp_df"], [140, 6, 1, "", "comp_rep_columns"], [140, 3, 1, "", "encoding"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 6, 1, "", "is_continuous"], [140, 6, 1, "", "is_discrete"], [140, 2, 1, "", "is_in_range"], [140, 3, 1, "", "is_numerical"], [140, 3, 1, "", "name"], [140, 2, 1, "", "summary"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_json"], [140, 2, 1, "", "to_searchspace"], [140, 2, 1, "", "to_subspace"], [140, 2, 1, "", "transform"], [140, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[140, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[140, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[140, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[140, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "active_values"], [141, 6, 1, "", "comp_df"], [141, 6, 1, "", "comp_rep_columns"], [141, 3, 1, "", "encoding"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 6, 1, "", "is_continuous"], [141, 6, 1, "", "is_discrete"], [141, 2, 1, "", "is_in_range"], [141, 3, 1, "", "is_numerical"], [141, 3, 1, "", "name"], [141, 2, 1, "", "summary"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_json"], [141, 2, 1, "", "to_searchspace"], [141, 2, 1, "", "to_subspace"], [141, 2, 1, "", "transform"], [141, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[141, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[141, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[141, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[141, 4, 1, "", "series"]], "baybe.parameters.custom": [[143, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[143, 2, 1, "", "__init__"], [143, 6, 1, "", "active_values"], [143, 6, 1, "", "comp_df"], [143, 6, 1, "", "comp_rep_columns"], [143, 3, 1, "", "data"], [143, 3, 1, "", "decorrelate"], [143, 3, 1, "", "encoding"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_json"], [143, 6, 1, "", "is_continuous"], [143, 6, 1, "", "is_discrete"], [143, 2, 1, "", "is_in_range"], [143, 3, 1, "", "is_numerical"], [143, 3, 1, "", "name"], [143, 2, 1, "", "summary"], [143, 2, 1, "", "to_dict"], [143, 2, 1, "", "to_json"], [143, 2, 1, "", "to_searchspace"], [143, 2, 1, "", "to_subspace"], [143, 2, 1, "", "transform"], [143, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[143, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[143, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[143, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[143, 4, 1, "", "series"]], "baybe.parameters.enum": [[145, 1, 1, "", "CategoricalEncoding"], [146, 1, 1, "", "CustomEncoding"], [147, 1, 1, "", "ParameterEncoding"], [148, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[145, 3, 1, "", "INT"], [145, 3, 1, "", "OHE"], [145, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[146, 3, 1, "", "CUSTOM"], [146, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[148, 3, 1, "", "ATOMPAIR"], [148, 3, 1, "", "AUTOCORR"], [148, 3, 1, "", "AVALON"], [148, 3, 1, "", "BCUT2D"], [148, 3, 1, "", "E3FP"], [148, 3, 1, "", "ECFP"], [148, 3, 1, "", "ELECTROSHAPE"], [148, 3, 1, "", "ERG"], [148, 3, 1, "", "ESTATE"], [148, 3, 1, "", "FUNCTIONALGROUPS"], [148, 3, 1, "", "GETAWAY"], [148, 3, 1, "", "GHOSECRIPPEN"], [148, 3, 1, "", "KLEKOTAROTH"], [148, 3, 1, "", "LAGGNER"], [148, 3, 1, "", "LAYERED"], [148, 3, 1, "", "LINGO"], [148, 3, 1, "", "MACCS"], [148, 3, 1, "", "MAP"], [148, 3, 1, "", "MHFP"], [148, 3, 1, "", "MORDRED"], [148, 3, 1, "", "MORGAN_FP"], [148, 3, 1, "", "MORSE"], [148, 3, 1, "", "MQNS"], [148, 3, 1, "", "PATTERN"], [148, 3, 1, "", "PHARMACOPHORE"], [148, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [148, 3, 1, "", "PUBCHEM"], [148, 3, 1, "", "RDF"], [148, 3, 1, "", "RDKIT"], [148, 3, 1, "", "RDKIT2DDESCRIPTORS"], [148, 3, 1, "", "RDKITFINGERPRINT"], [148, 3, 1, "", "SECFP"], [148, 3, 1, "", "TOPOLOGICALTORSION"], [148, 3, 1, "", "USR"], [148, 3, 1, "", "USRCAT"], [148, 3, 1, "", "VSA"], [148, 3, 1, "", "WHIM"], [148, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[150, 1, 1, "", "NumericalContinuousParameter"], [151, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[150, 2, 1, "", "__init__"], [150, 3, 1, "", "bounds"], [150, 6, 1, "", "comp_rep_columns"], [150, 2, 1, "", "from_dict"], [150, 2, 1, "", "from_json"], [150, 6, 1, "", "is_continuous"], [150, 6, 1, "", "is_discrete"], [150, 2, 1, "", "is_in_range"], [150, 3, 1, "", "is_numerical"], [150, 3, 1, "", "name"], [150, 2, 1, "", "summary"], [150, 2, 1, "", "to_dict"], [150, 2, 1, "", "to_json"], [150, 2, 1, "", "to_searchspace"], [150, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[150, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[150, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[150, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[151, 2, 1, "", "__init__"], [151, 6, 1, "", "active_values"], [151, 6, 1, "", "comp_df"], [151, 6, 1, "", "comp_rep_columns"], [151, 3, 1, "", "encoding"], [151, 2, 1, "", "from_dict"], [151, 2, 1, "", "from_json"], [151, 6, 1, "", "is_continuous"], [151, 6, 1, "", "is_discrete"], [151, 2, 1, "", "is_in_range"], [151, 3, 1, "", "is_numerical"], [151, 3, 1, "", "name"], [151, 2, 1, "", "summary"], [151, 2, 1, "", "to_dict"], [151, 2, 1, "", "to_json"], [151, 2, 1, "", "to_searchspace"], [151, 2, 1, "", "to_subspace"], [151, 3, 1, "", "tolerance"], [151, 2, 1, "", "transform"], [151, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[151, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[151, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[151, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[151, 4, 1, "", "series"]], "baybe.parameters.substance": [[153, 3, 1, "", "Smiles"], [154, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[154, 2, 1, "", "__init__"], [154, 6, 1, "", "active_values"], [154, 6, 1, "", "comp_df"], [154, 6, 1, "", "comp_rep_columns"], [154, 3, 1, "", "data"], [154, 3, 1, "", "decorrelate"], [154, 3, 1, "", "encoding"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 6, 1, "", "is_continuous"], [154, 6, 1, "", "is_discrete"], [154, 2, 1, "", "is_in_range"], [154, 3, 1, "", "is_numerical"], [154, 3, 1, "", "kwargs_conformer"], [154, 3, 1, "", "kwargs_fingerprint"], [154, 3, 1, "", "name"], [154, 2, 1, "", "summary"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_json"], [154, 2, 1, "", "to_searchspace"], [154, 2, 1, "", "to_subspace"], [154, 2, 1, "", "transform"], [154, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[154, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[154, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[154, 4, 1, "", "series"]], "baybe.parameters.utils": [[156, 5, 1, "", "activate_parameter"], [157, 5, 1, "", "get_parameters_from_dataframe"], [158, 5, 1, "", "is_inactive"], [159, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[156, 4, 1, "", "parameter"], [156, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[157, 4, 1, "", "df"], [157, 4, 1, "", "factory"], [157, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[158, 4, 1, "", "lower_threshold"], [158, 4, 1, "", "upper_threshold"], [158, 4, 1, "", "x"]], "baybe.parameters.validation": [[161, 5, 1, "", "validate_decorrelation"], [162, 5, 1, "", "validate_is_finite"], [163, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[165, 0, 0, "-", "base"], [167, 0, 0, "-", "basic"]], "baybe.priors.base": [[166, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "from_dict"], [166, 2, 1, "", "from_json"], [166, 2, 1, "", "to_dict"], [166, 2, 1, "", "to_gpytorch"], [166, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[166, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[166, 4, 1, "", "string"]], "baybe.priors.basic": [[168, 1, 1, "", "BetaPrior"], [169, 1, 1, "", "GammaPrior"], [170, 1, 1, "", "HalfCauchyPrior"], [171, 1, 1, "", "HalfNormalPrior"], [172, 1, 1, "", "LogNormalPrior"], [173, 1, 1, "", "NormalPrior"], [174, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[168, 2, 1, "", "__init__"], [168, 3, 1, "", "alpha"], [168, 3, 1, "", "beta"], [168, 2, 1, "", "from_dict"], [168, 2, 1, "", "from_json"], [168, 2, 1, "", "to_dict"], [168, 2, 1, "", "to_gpytorch"], [168, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[168, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[168, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[169, 2, 1, "", "__init__"], [169, 3, 1, "", "concentration"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 3, 1, "", "rate"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_gpytorch"], [169, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[169, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 3, 1, "", "scale"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_gpytorch"], [170, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[170, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 3, 1, "", "scale"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_gpytorch"], [171, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[171, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 3, 1, "", "loc"], [172, 3, 1, "", "scale"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_gpytorch"], [172, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[172, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 3, 1, "", "loc"], [173, 3, 1, "", "scale"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[173, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[174, 2, 1, "", "__init__"], [174, 3, 1, "", "a"], [174, 3, 1, "", "b"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "sigma"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[174, 4, 1, "", "string"]], "baybe.recommenders": [[176, 0, 0, "-", "base"], [178, 0, 0, "-", "meta"], [186, 0, 0, "-", "naive"], [188, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[177, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[177, 4, 1, "", "batch_size"], [177, 4, 1, "", "measurements"], [177, 4, 1, "", "objective"], [177, 4, 1, "", "pending_experiments"], [177, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[179, 0, 0, "-", "base"], [181, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[180, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "from_dict"], [180, 2, 1, "", "from_json"], [180, 2, 1, "", "get_current_recommender"], [180, 2, 1, "", "get_next_recommender"], [180, 2, 1, "", "get_non_meta_recommender"], [180, 6, 1, "", "is_stateful"], [180, 2, 1, "", "recommend"], [180, 2, 1, "", "select_recommender"], [180, 2, 1, "", "to_dict"], [180, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[180, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[180, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[182, 1, 1, "", "BaseSequentialMetaRecommender"], [183, 1, 1, "", "SequentialMetaRecommender"], [184, 1, 1, "", "StreamingSequentialMetaRecommender"], [185, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "from_dict"], [182, 2, 1, "", "from_json"], [182, 2, 1, "", "get_current_recommender"], [182, 2, 1, "", "get_next_recommender"], [182, 2, 1, "", "get_non_meta_recommender"], [182, 6, 1, "", "is_stateful"], [182, 2, 1, "", "recommend"], [182, 2, 1, "", "select_recommender"], [182, 2, 1, "", "to_dict"], [182, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[182, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[182, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "from_dict"], [183, 2, 1, "", "from_json"], [183, 2, 1, "", "get_current_recommender"], [183, 2, 1, "", "get_next_recommender"], [183, 2, 1, "", "get_non_meta_recommender"], [183, 6, 1, "", "is_stateful"], [183, 3, 1, "", "mode"], [183, 2, 1, "", "recommend"], [183, 3, 1, "", "recommenders"], [183, 2, 1, "", "select_recommender"], [183, 2, 1, "", "to_dict"], [183, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[183, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[183, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "get_current_recommender"], [184, 2, 1, "", "get_next_recommender"], [184, 2, 1, "", "get_non_meta_recommender"], [184, 6, 1, "", "is_stateful"], [184, 2, 1, "", "recommend"], [184, 3, 1, "", "recommenders"], [184, 2, 1, "", "select_recommender"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[184, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[184, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "get_current_recommender"], [185, 2, 1, "", "get_next_recommender"], [185, 2, 1, "", "get_non_meta_recommender"], [185, 3, 1, "", "initial_recommender"], [185, 6, 1, "", "is_stateful"], [185, 2, 1, "", "recommend"], [185, 3, 1, "", "recommender"], [185, 3, 1, "", "remain_switched"], [185, 2, 1, "", "select_recommender"], [185, 3, 1, "", "switch_after"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[185, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[185, 4, 1, "", "string"]], "baybe.recommenders.naive": [[187, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[187, 2, 1, "", "__init__"], [187, 6, 1, "", "allow_recommending_already_measured"], [187, 6, 1, "", "allow_recommending_pending_experiments"], [187, 6, 1, "", "allow_repeated_recommendations"], [187, 3, 1, "", "compatibility"], [187, 3, 1, "", "cont_recommender"], [187, 3, 1, "", "disc_recommender"], [187, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[187, 4, 1, "", "batch_size"], [187, 4, 1, "", "measurements"], [187, 4, 1, "", "objective"], [187, 4, 1, "", "pending_experiments"], [187, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[189, 0, 0, "-", "base"], [191, 0, 0, "-", "bayesian"], [198, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[190, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[190, 2, 1, "", "__init__"], [190, 6, 1, "", "allow_recommending_already_measured"], [190, 6, 1, "", "allow_recommending_pending_experiments"], [190, 6, 1, "", "allow_repeated_recommendations"], [190, 3, 1, "", "compatibility"], [190, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[190, 4, 1, "", "batch_size"], [190, 4, 1, "", "measurements"], [190, 4, 1, "", "objective"], [190, 4, 1, "", "pending_experiments"], [190, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[192, 0, 0, "-", "base"], [194, 0, 0, "-", "botorch"], [196, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[193, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[193, 2, 1, "", "__init__"], [193, 3, 1, "", "acquisition_function"], [193, 2, 1, "", "acquisition_values"], [193, 6, 1, "", "allow_recommending_already_measured"], [193, 6, 1, "", "allow_recommending_pending_experiments"], [193, 6, 1, "", "allow_repeated_recommendations"], [193, 3, 1, "", "compatibility"], [193, 2, 1, "", "get_acquisition_function"], [193, 2, 1, "", "get_surrogate"], [193, 2, 1, "", "joint_acquisition_value"], [193, 2, 1, "", "recommend"], [193, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values.params": [[193, 4, 1, "", "acquisition_function"], [193, 4, 1, "", "candidates"], [193, 4, 1, "", "measurements"], [193, 4, 1, "", "objective"], [193, 4, 1, "", "pending_experiments"], [193, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[193, 4, 1, "", "batch_size"], [193, 4, 1, "", "measurements"], [193, 4, 1, "", "objective"], [193, 4, 1, "", "pending_experiments"], [193, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[195, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[195, 2, 1, "", "__init__"], [195, 3, 1, "", "acquisition_function"], [195, 2, 1, "", "acquisition_values"], [195, 6, 1, "", "allow_recommending_already_measured"], [195, 6, 1, "", "allow_recommending_pending_experiments"], [195, 6, 1, "", "allow_repeated_recommendations"], [195, 3, 1, "", "compatibility"], [195, 2, 1, "", "get_acquisition_function"], [195, 2, 1, "", "get_surrogate"], [195, 3, 1, "", "hybrid_sampler"], [195, 2, 1, "", "joint_acquisition_value"], [195, 3, 1, "", "max_n_subspaces"], [195, 3, 1, "", "n_raw_samples"], [195, 3, 1, "", "n_restarts"], [195, 2, 1, "", "recommend"], [195, 3, 1, "", "sampling_percentage"], [195, 3, 1, "", "sequential_continuous"], [195, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values.params": [[195, 4, 1, "", "acquisition_function"], [195, 4, 1, "", "candidates"], [195, 4, 1, "", "measurements"], [195, 4, 1, "", "objective"], [195, 4, 1, "", "pending_experiments"], [195, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[195, 4, 1, "", "batch_size"], [195, 4, 1, "", "measurements"], [195, 4, 1, "", "objective"], [195, 4, 1, "", "pending_experiments"], [195, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[197, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[199, 0, 0, "-", "base"], [201, 0, 0, "-", "clustering"], [206, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[200, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[200, 2, 1, "", "__init__"], [200, 6, 1, "", "allow_recommending_already_measured"], [200, 6, 1, "", "allow_recommending_pending_experiments"], [200, 6, 1, "", "allow_repeated_recommendations"], [200, 3, 1, "", "compatibility"], [200, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[200, 4, 1, "", "batch_size"], [200, 4, 1, "", "measurements"], [200, 4, 1, "", "objective"], [200, 4, 1, "", "pending_experiments"], [200, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[202, 1, 1, "", "GaussianMixtureClusteringRecommender"], [203, 1, 1, "", "KMeansClusteringRecommender"], [204, 1, 1, "", "PAMClusteringRecommender"], [205, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[202, 2, 1, "", "__init__"], [202, 6, 1, "", "allow_recommending_already_measured"], [202, 6, 1, "", "allow_recommending_pending_experiments"], [202, 6, 1, "", "allow_repeated_recommendations"], [202, 3, 1, "", "compatibility"], [202, 3, 1, "", "model_cluster_num_parameter_name"], [202, 3, 1, "", "model_params"], [202, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[202, 4, 1, "", "batch_size"], [202, 4, 1, "", "measurements"], [202, 4, 1, "", "objective"], [202, 4, 1, "", "pending_experiments"], [202, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[203, 2, 1, "", "__init__"], [203, 6, 1, "", "allow_recommending_already_measured"], [203, 6, 1, "", "allow_recommending_pending_experiments"], [203, 6, 1, "", "allow_repeated_recommendations"], [203, 3, 1, "", "compatibility"], [203, 3, 1, "", "model_cluster_num_parameter_name"], [203, 3, 1, "", "model_params"], [203, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[203, 4, 1, "", "batch_size"], [203, 4, 1, "", "measurements"], [203, 4, 1, "", "objective"], [203, 4, 1, "", "pending_experiments"], [203, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[204, 2, 1, "", "__init__"], [204, 6, 1, "", "allow_recommending_already_measured"], [204, 6, 1, "", "allow_recommending_pending_experiments"], [204, 6, 1, "", "allow_repeated_recommendations"], [204, 3, 1, "", "compatibility"], [204, 3, 1, "", "model_cluster_num_parameter_name"], [204, 3, 1, "", "model_params"], [204, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[204, 4, 1, "", "batch_size"], [204, 4, 1, "", "measurements"], [204, 4, 1, "", "objective"], [204, 4, 1, "", "pending_experiments"], [204, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[205, 2, 1, "", "__init__"], [205, 6, 1, "", "allow_recommending_already_measured"], [205, 6, 1, "", "allow_recommending_pending_experiments"], [205, 6, 1, "", "allow_repeated_recommendations"], [205, 3, 1, "", "compatibility"], [205, 3, 1, "", "model_cluster_num_parameter_name"], [205, 3, 1, "", "model_params"], [205, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[205, 4, 1, "", "batch_size"], [205, 4, 1, "", "measurements"], [205, 4, 1, "", "objective"], [205, 4, 1, "", "pending_experiments"], [205, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[207, 1, 1, "", "FPSRecommender"], [208, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[207, 2, 1, "", "__init__"], [207, 6, 1, "", "allow_recommending_already_measured"], [207, 6, 1, "", "allow_recommending_pending_experiments"], [207, 6, 1, "", "allow_repeated_recommendations"], [207, 3, 1, "", "compatibility"], [207, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[207, 4, 1, "", "batch_size"], [207, 4, 1, "", "measurements"], [207, 4, 1, "", "objective"], [207, 4, 1, "", "pending_experiments"], [207, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[208, 2, 1, "", "__init__"], [208, 6, 1, "", "allow_recommending_already_measured"], [208, 6, 1, "", "allow_recommending_pending_experiments"], [208, 6, 1, "", "allow_repeated_recommendations"], [208, 3, 1, "", "compatibility"], [208, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[208, 4, 1, "", "batch_size"], [208, 4, 1, "", "measurements"], [208, 4, 1, "", "objective"], [208, 4, 1, "", "pending_experiments"], [208, 4, 1, "", "searchspace"]], "baybe.searchspace": [[210, 0, 0, "-", "continuous"], [212, 0, 0, "-", "core"], [217, 0, 0, "-", "discrete"], [223, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[211, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[211, 2, 1, "", "__init__"], [211, 6, 1, "", "comp_rep_bounds"], [211, 6, 1, "", "comp_rep_columns"], [211, 6, 1, "", "constraints_cardinality"], [211, 3, 1, "", "constraints_lin_eq"], [211, 3, 1, "", "constraints_lin_ineq"], [211, 3, 1, "", "constraints_nonlin"], [211, 2, 1, "", "empty"], [211, 2, 1, "", "from_bounds"], [211, 2, 1, "", "from_dataframe"], [211, 2, 1, "", "from_dict"], [211, 2, 1, "", "from_json"], [211, 2, 1, "", "from_parameter"], [211, 2, 1, "", "from_product"], [211, 6, 1, "", "full_factorial"], [211, 2, 1, "", "get_parameters_by_name"], [211, 2, 1, "", "inactive_parameter_combinations"], [211, 6, 1, "", "is_empty"], [211, 6, 1, "", "n_inactive_parameter_combinations"], [211, 6, 1, "", "parameter_names"], [211, 6, 1, "", "parameter_names_in_cardinality_constraints"], [211, 3, 1, "", "parameters"], [211, 2, 1, "", "sample_from_full_factorial"], [211, 2, 1, "", "sample_uniform"], [211, 2, 1, "", "samples_full_factorial"], [211, 2, 1, "", "samples_random"], [211, 6, 1, "", "scaling_bounds"], [211, 2, 1, "", "to_dict"], [211, 2, 1, "", "to_json"], [211, 2, 1, "", "to_searchspace"], [211, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[211, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[211, 4, 1, "", "df"], [211, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[211, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[211, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[211, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[211, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[211, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[211, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[213, 1, 1, "", "SearchSpace"], [214, 1, 1, "", "SearchSpaceType"], [215, 5, 1, "", "to_searchspace"], [216, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[213, 2, 1, "", "__init__"], [213, 6, 1, "", "comp_rep_bounds"], [213, 6, 1, "", "comp_rep_columns"], [213, 6, 1, "", "constraints"], [213, 6, 1, "", "constraints_augmentable"], [213, 3, 1, "", "continuous"], [213, 3, 1, "", "discrete"], [213, 2, 1, "", "estimate_product_space_size"], [213, 2, 1, "", "from_dataframe"], [213, 2, 1, "", "from_dict"], [213, 2, 1, "", "from_json"], [213, 2, 1, "", "from_parameter"], [213, 2, 1, "", "from_product"], [213, 2, 1, "", "get_comp_rep_parameter_indices"], [213, 2, 1, "", "get_parameters_by_name"], [213, 6, 1, "", "n_tasks"], [213, 6, 1, "", "parameter_names"], [213, 6, 1, "", "parameters"], [213, 6, 1, "", "scaling_bounds"], [213, 6, 1, "", "task_idx"], [213, 2, 1, "", "to_dict"], [213, 2, 1, "", "to_json"], [213, 2, 1, "", "transform"], [213, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[213, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[213, 4, 1, "", "df"], [213, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[213, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[213, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[213, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[213, 4, 1, "", "constraints"], [213, 4, 1, "", "empty_encoding"], [213, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[213, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[213, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[213, 4, 1, "", "allow_extra"], [213, 4, 1, "", "allow_missing"], [213, 4, 1, "", "data"], [213, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[214, 3, 1, "", "CONTINUOUS"], [214, 3, 1, "", "DISCRETE"], [214, 3, 1, "", "EITHER"], [214, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[218, 1, 1, "", "MemorySize"], [219, 1, 1, "", "SubspaceDiscrete"], [220, 5, 1, "", "parameter_cartesian_prod_pandas"], [221, 5, 1, "", "parameter_cartesian_prod_polars"], [222, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[218, 2, 1, "", "__init__"], [218, 3, 1, "", "comp_rep_bytes"], [218, 6, 1, "", "comp_rep_human_readable"], [218, 3, 1, "", "comp_rep_shape"], [218, 3, 1, "", "exp_rep_bytes"], [218, 6, 1, "", "exp_rep_human_readable"], [218, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[219, 2, 1, "", "__init__"], [219, 3, 1, "", "comp_rep"], [219, 6, 1, "", "comp_rep_bounds"], [219, 6, 1, "", "comp_rep_columns"], [219, 3, 1, "", "constraints"], [219, 2, 1, "", "empty"], [219, 3, 1, "", "empty_encoding"], [219, 2, 1, "", "estimate_product_space_size"], [219, 3, 1, "", "exp_rep"], [219, 2, 1, "", "from_dataframe"], [219, 2, 1, "", "from_dict"], [219, 2, 1, "", "from_json"], [219, 2, 1, "", "from_parameter"], [219, 2, 1, "", "from_product"], [219, 2, 1, "", "from_simplex"], [219, 2, 1, "", "get_candidates"], [219, 2, 1, "", "get_parameters_by_name"], [219, 6, 1, "", "is_empty"], [219, 6, 1, "", "metadata"], [219, 6, 1, "", "parameter_names"], [219, 3, 1, "", "parameters"], [219, 6, 1, "", "scaling_bounds"], [219, 2, 1, "", "to_dict"], [219, 2, 1, "", "to_json"], [219, 2, 1, "", "to_searchspace"], [219, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[219, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[219, 4, 1, "", "df"], [219, 4, 1, "", "empty_encoding"], [219, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[219, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[219, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[219, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[219, 4, 1, "", "boundary_only"], [219, 4, 1, "", "constraints"], [219, 4, 1, "", "max_nonzero"], [219, 4, 1, "", "max_sum"], [219, 4, 1, "", "min_nonzero"], [219, 4, 1, "", "product_parameters"], [219, 4, 1, "", "simplex_parameters"], [219, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[219, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[220, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[221, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[224, 5, 1, "", "get_transform_parameters"], [225, 5, 1, "", "validate_parameter_names"], [226, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[228, 0, 0, "-", "core"], [235, 0, 0, "-", "mixin"], [237, 0, 0, "-", "utils"]], "baybe.serialization.core": [[229, 5, 1, "", "block_deserialization_hook"], [230, 5, 1, "", "block_serialization_hook"], [231, 8, 1, "", "converter"], [232, 5, 1, "", "get_base_structure_hook"], [233, 5, 1, "", "select_constructor_hook"], [234, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[232, 4, 1, "", "base"], [232, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[234, 4, 1, "", "base"], [234, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[236, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[236, 2, 1, "", "from_dict"], [236, 2, 1, "", "from_json"], [236, 2, 1, "", "to_dict"], [236, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[236, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[236, 4, 1, "", "string"]], "baybe.serialization.utils": [[238, 5, 1, "", "deserialize_dataframe"], [239, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[241, 0, 0, "-", "core"], [243, 0, 0, "-", "lookup"], [245, 0, 0, "-", "scenarios"], [247, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[242, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[242, 4, 1, "", "batch_size"], [242, 4, 1, "", "campaign"], [242, 4, 1, "", "impute_mode"], [242, 4, 1, "", "initial_data"], [242, 4, 1, "", "lookup"], [242, 4, 1, "", "n_doe_iterations"], [242, 4, 1, "", "noise_percent"], [242, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[244, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[244, 4, 1, "", "impute_mode"], [244, 4, 1, "", "lookup"], [244, 4, 1, "", "queries"], [244, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[246, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[246, 4, 1, "", "batch_size"], [246, 4, 1, "", "groupby"], [246, 4, 1, "", "impute_mode"], [246, 4, 1, "", "initial_data"], [246, 4, 1, "", "lookup"], [246, 4, 1, "", "n_doe_iterations"], [246, 4, 1, "", "n_mc_iterations"], [246, 4, 1, "", "noise_percent"], [246, 4, 1, "", "random_seed"], [246, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[248, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[248, 4, 1, "", "batch_size"], [248, 4, 1, "", "campaign"], [248, 4, 1, "", "groupby"], [248, 4, 1, "", "lookup"], [248, 4, 1, "", "n_doe_iterations"], [248, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[250, 0, 0, "-", "bandit"], [252, 0, 0, "-", "base"], [257, 0, 0, "-", "composite"], [259, 0, 0, "-", "custom"], [262, 0, 0, "-", "gaussian_process"], [277, 0, 0, "-", "linear"], [279, 0, 0, "-", "naive"], [281, 0, 0, "-", "ngboost"], [283, 0, 0, "-", "random_forest"], [285, 0, 0, "-", "utils"], [289, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[251, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[251, 2, 1, "", "__init__"], [251, 2, 1, "", "fit"], [251, 2, 1, "", "from_dict"], [251, 2, 1, "", "from_json"], [251, 2, 1, "", "posterior"], [251, 2, 1, "", "posterior_means"], [251, 2, 1, "", "posterior_modes"], [251, 2, 1, "", "posterior_stats"], [251, 3, 1, "", "prior"], [251, 2, 1, "", "replicate"], [251, 3, 1, "", "supports_multi_output"], [251, 3, 1, "", "supports_transfer_learning"], [251, 2, 1, "", "to_botorch"], [251, 2, 1, "", "to_dict"], [251, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[251, 4, 1, "", "measurements"], [251, 4, 1, "", "objective"], [251, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[251, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[251, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[251, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[251, 4, 1, "", "candidates"], [251, 4, 1, "", "stats"]], "baybe.surrogates.base": [[253, 1, 1, "", "IndependentGaussianSurrogate"], [254, 8, 1, "", "PosteriorStatistic"], [255, 1, 1, "", "Surrogate"], [256, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[253, 2, 1, "", "__init__"], [253, 2, 1, "", "fit"], [253, 2, 1, "", "from_dict"], [253, 2, 1, "", "from_json"], [253, 2, 1, "", "posterior"], [253, 2, 1, "", "posterior_stats"], [253, 2, 1, "", "replicate"], [253, 3, 1, "", "supports_multi_output"], [253, 3, 1, "", "supports_transfer_learning"], [253, 2, 1, "", "to_botorch"], [253, 2, 1, "", "to_dict"], [253, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[253, 4, 1, "", "measurements"], [253, 4, 1, "", "objective"], [253, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[253, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[253, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[253, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[253, 4, 1, "", "candidates"], [253, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate": [[255, 2, 1, "", "__init__"], [255, 2, 1, "", "fit"], [255, 2, 1, "", "from_dict"], [255, 2, 1, "", "from_json"], [255, 2, 1, "", "posterior"], [255, 2, 1, "", "posterior_stats"], [255, 2, 1, "", "replicate"], [255, 3, 1, "", "supports_multi_output"], [255, 3, 1, "", "supports_transfer_learning"], [255, 2, 1, "", "to_botorch"], [255, 2, 1, "", "to_dict"], [255, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[255, 4, 1, "", "measurements"], [255, 4, 1, "", "objective"], [255, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[255, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[255, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[255, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[255, 4, 1, "", "candidates"], [255, 4, 1, "", "stats"]], "baybe.surrogates.base.SurrogateProtocol": [[256, 2, 1, "", "__init__"], [256, 2, 1, "", "fit"], [256, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[258, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "fit"], [258, 2, 1, "", "from_dict"], [258, 2, 1, "", "from_json"], [258, 2, 1, "", "from_replication"], [258, 2, 1, "", "posterior"], [258, 2, 1, "", "posterior_stats"], [258, 3, 1, "", "surrogates"], [258, 2, 1, "", "to_botorch"], [258, 2, 1, "", "to_dict"], [258, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[258, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[258, 4, 1, "", "string"]], "baybe.surrogates.custom": [[260, 1, 1, "", "CustomONNXSurrogate"], [261, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "default_model"], [260, 2, 1, "", "fit"], [260, 2, 1, "", "from_dict"], [260, 2, 1, "", "from_json"], [260, 3, 1, "", "onnx_input_name"], [260, 3, 1, "", "onnx_str"], [260, 2, 1, "", "posterior"], [260, 2, 1, "", "posterior_stats"], [260, 2, 1, "", "replicate"], [260, 3, 1, "", "supports_multi_output"], [260, 3, 1, "", "supports_transfer_learning"], [260, 2, 1, "", "to_botorch"], [260, 2, 1, "", "to_dict"], [260, 2, 1, "", "to_json"], [260, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[260, 4, 1, "", "measurements"], [260, 4, 1, "", "objective"], [260, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[260, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[260, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[260, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[260, 4, 1, "", "candidates"], [260, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[260, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[263, 0, 0, "-", "core"], [265, 0, 0, "-", "kernel_factory"], [269, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[264, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "fit"], [264, 2, 1, "", "from_dict"], [264, 2, 1, "", "from_json"], [264, 2, 1, "", "from_preset"], [264, 3, 1, "", "kernel_factory"], [264, 2, 1, "", "posterior"], [264, 2, 1, "", "posterior_stats"], [264, 2, 1, "", "replicate"], [264, 3, 1, "", "supports_multi_output"], [264, 3, 1, "", "supports_transfer_learning"], [264, 2, 1, "", "to_botorch"], [264, 2, 1, "", "to_dict"], [264, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[264, 4, 1, "", "measurements"], [264, 4, 1, "", "objective"], [264, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[264, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[264, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[264, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[264, 4, 1, "", "candidates"], [264, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.kernel_factory": [[266, 1, 1, "", "KernelFactory"], [267, 1, 1, "", "PlainKernelFactory"], [268, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[266, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[267, 2, 1, "", "__init__"], [267, 2, 1, "", "from_dict"], [267, 2, 1, "", "from_json"], [267, 3, 1, "", "kernel"], [267, 2, 1, "", "to_dict"], [267, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[267, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[267, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[270, 0, 0, "-", "core"], [273, 0, 0, "-", "default"], [275, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[271, 1, 1, "", "GaussianProcessPreset"], [272, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[271, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[274, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[274, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[276, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[276, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[278, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[278, 2, 1, "", "__init__"], [278, 2, 1, "", "fit"], [278, 2, 1, "", "from_dict"], [278, 2, 1, "", "from_json"], [278, 3, 1, "", "model_params"], [278, 2, 1, "", "posterior"], [278, 2, 1, "", "posterior_stats"], [278, 2, 1, "", "replicate"], [278, 3, 1, "", "supports_multi_output"], [278, 3, 1, "", "supports_transfer_learning"], [278, 2, 1, "", "to_botorch"], [278, 2, 1, "", "to_dict"], [278, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[278, 4, 1, "", "measurements"], [278, 4, 1, "", "objective"], [278, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[278, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[278, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[278, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[278, 4, 1, "", "candidates"], [278, 4, 1, "", "stats"]], "baybe.surrogates.naive": [[280, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[280, 2, 1, "", "__init__"], [280, 2, 1, "", "fit"], [280, 2, 1, "", "from_dict"], [280, 2, 1, "", "from_json"], [280, 2, 1, "", "posterior"], [280, 2, 1, "", "posterior_stats"], [280, 2, 1, "", "replicate"], [280, 3, 1, "", "supports_multi_output"], [280, 3, 1, "", "supports_transfer_learning"], [280, 2, 1, "", "to_botorch"], [280, 2, 1, "", "to_dict"], [280, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[280, 4, 1, "", "measurements"], [280, 4, 1, "", "objective"], [280, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[280, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[280, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[280, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[280, 4, 1, "", "candidates"], [280, 4, 1, "", "stats"]], "baybe.surrogates.ngboost": [[282, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[282, 2, 1, "", "__init__"], [282, 2, 1, "", "fit"], [282, 2, 1, "", "from_dict"], [282, 2, 1, "", "from_json"], [282, 3, 1, "", "model_params"], [282, 2, 1, "", "posterior"], [282, 2, 1, "", "posterior_stats"], [282, 2, 1, "", "replicate"], [282, 3, 1, "", "supports_multi_output"], [282, 3, 1, "", "supports_transfer_learning"], [282, 2, 1, "", "to_botorch"], [282, 2, 1, "", "to_dict"], [282, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[282, 4, 1, "", "measurements"], [282, 4, 1, "", "objective"], [282, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[282, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[282, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[282, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[282, 4, 1, "", "candidates"], [282, 4, 1, "", "stats"]], "baybe.surrogates.random_forest": [[284, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[284, 2, 1, "", "__init__"], [284, 2, 1, "", "fit"], [284, 2, 1, "", "from_dict"], [284, 2, 1, "", "from_json"], [284, 3, 1, "", "model_params"], [284, 2, 1, "", "posterior"], [284, 2, 1, "", "posterior_stats"], [284, 2, 1, "", "replicate"], [284, 3, 1, "", "supports_multi_output"], [284, 3, 1, "", "supports_transfer_learning"], [284, 2, 1, "", "to_botorch"], [284, 2, 1, "", "to_dict"], [284, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[284, 4, 1, "", "measurements"], [284, 4, 1, "", "objective"], [284, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[284, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[284, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[284, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[284, 4, 1, "", "candidates"], [284, 4, 1, "", "stats"]], "baybe.surrogates.utils": [[286, 5, 1, "", "batchify_ensemble_predictor"], [287, 5, 1, "", "batchify_mean_var_prediction"], [288, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[286, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[288, 4, 1, "", "cls"], [288, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[290, 5, 1, "", "get_model_params_validator"], [291, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[290, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[291, 4, 1, "", "model_cls"]], "baybe.targets": [[293, 0, 0, "-", "base"], [295, 0, 0, "-", "binary"], [298, 0, 0, "-", "enum"], [301, 0, 0, "-", "numerical"], [303, 0, 0, "-", "transforms"]], "baybe.targets.base": [[294, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[294, 2, 1, "", "__init__"], [294, 2, 1, "", "from_dict"], [294, 2, 1, "", "from_json"], [294, 3, 1, "", "name"], [294, 2, 1, "", "summary"], [294, 2, 1, "", "to_dict"], [294, 2, 1, "", "to_json"], [294, 2, 1, "", "to_objective"], [294, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[294, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[294, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[294, 4, 1, "", "series"]], "baybe.targets.binary": [[296, 1, 1, "", "BinaryTarget"], [297, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[296, 2, 1, "", "__init__"], [296, 3, 1, "", "failure_value"], [296, 2, 1, "", "from_dict"], [296, 2, 1, "", "from_json"], [296, 3, 1, "", "name"], [296, 3, 1, "", "success_value"], [296, 2, 1, "", "summary"], [296, 2, 1, "", "to_dict"], [296, 2, 1, "", "to_json"], [296, 2, 1, "", "to_objective"], [296, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[296, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[296, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[296, 4, 1, "", "series"]], "baybe.targets.enum": [[299, 1, 1, "", "TargetMode"], [300, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[299, 3, 1, "", "MATCH"], [299, 3, 1, "", "MAX"], [299, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[300, 3, 1, "", "BELL"], [300, 3, 1, "", "LINEAR"], [300, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[302, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[302, 2, 1, "", "__init__"], [302, 3, 1, "", "bounds"], [302, 2, 1, "", "from_dict"], [302, 2, 1, "", "from_json"], [302, 3, 1, "", "mode"], [302, 3, 1, "", "name"], [302, 2, 1, "", "summary"], [302, 2, 1, "", "to_dict"], [302, 2, 1, "", "to_json"], [302, 2, 1, "", "to_objective"], [302, 2, 1, "", "transform"], [302, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[302, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[302, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[302, 4, 1, "", "series"]], "baybe.targets.transforms": [[304, 5, 1, "", "bell_transform"], [305, 5, 1, "", "linear_transform"], [306, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[304, 4, 1, "", "arr"], [304, 4, 1, "", "lower"], [304, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[305, 4, 1, "", "arr"], [305, 4, 1, "", "descending"], [305, 4, 1, "", "lower"], [305, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[306, 4, 1, "", "arr"], [306, 4, 1, "", "lower"], [306, 4, 1, "", "upper"]], "baybe.telemetry": [[308, 5, 1, "", "get_user_details"], [309, 5, 1, "", "is_enabled"], [310, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [311, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[310, 4, 1, "", "cached_recommendation"], [310, 4, 1, "", "measurements"], [310, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[311, 4, 1, "", "instrument_name"], [311, 4, 1, "", "value"]], "baybe.utils": [[313, 0, 0, "-", "augmentation"], [316, 0, 0, "-", "basic"], [332, 0, 0, "-", "boolean"], [336, 0, 0, "-", "chemistry"], [341, 0, 0, "-", "conversion"], [345, 0, 0, "-", "dataframe"], [361, 0, 0, "-", "interval"], [366, 0, 0, "-", "memory"], [368, 0, 0, "-", "numerical"], [375, 0, 0, "-", "random"], [378, 0, 0, "-", "sampling_algorithms"], [382, 0, 0, "-", "scaling"], [384, 0, 0, "-", "torch"], [387, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[314, 5, 1, "", "df_apply_dependency_augmentation"], [315, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[314, 4, 1, "", "affected"], [314, 4, 1, "", "causing"], [314, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[315, 4, 1, "", "column_groups"], [315, 4, 1, "", "df"]], "baybe.utils.basic": [[317, 1, 1, "", "Dummy"], [318, 8, 1, "", "UNSPECIFIED"], [319, 1, 1, "", "UnspecifiedType"], [320, 1, 1, "", "classproperty"], [321, 5, 1, "", "convert_to_float"], [322, 5, 1, "", "find_subclass"], [323, 5, 1, "", "get_baseclasses"], [324, 5, 1, "", "get_subclasses"], [325, 5, 1, "", "group_duplicate_values"], [326, 5, 1, "", "hilberts_factory"], [327, 5, 1, "", "is_all_instance"], [328, 5, 1, "", "match_attributes"], [329, 5, 1, "", "refers_to"], [330, 5, 1, "", "register_hooks"], [331, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[317, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[320, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[323, 4, 1, "", "abstract"], [323, 4, 1, "", "cls"], [323, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[324, 4, 1, "", "abstract"], [324, 4, 1, "", "cls"], [324, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[325, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[328, 4, 1, "", "callable_"], [328, 4, 1, "", "ignore"], [328, 4, 1, "", "object"], [328, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[330, 4, 1, "", "post_hooks"], [330, 4, 1, "", "pre_hooks"], [330, 4, 1, "", "target"]], "baybe.utils.boolean": [[333, 5, 1, "", "check_if_in"], [334, 5, 1, "", "is_abstract"], [335, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[333, 4, 1, "", "allowed"], [333, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[334, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[335, 4, 1, "", "val"]], "baybe.utils.chemistry": [[337, 5, 1, "", "get_canonical_smiles"], [338, 5, 1, "", "get_fingerprint_class"], [339, 5, 1, "", "name_to_smiles"], [340, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[338, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[339, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[340, 4, 1, "", "encoding"], [340, 4, 1, "", "kwargs_conformer"], [340, 4, 1, "", "kwargs_fingerprint"], [340, 4, 1, "", "prefix"], [340, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[342, 5, 1, "", "fraction_to_float"], [343, 5, 1, "", "nonstring_to_tuple"], [344, 5, 1, "", "to_string"]], "baybe.utils.conversion.fraction_to_float.params": [[342, 4, 1, "", "value"]], "baybe.utils.conversion.to_string.params": [[344, 4, 1, "", "*fields"], [344, 4, 1, "", "header"], [344, 4, 1, "", "single_line"]], "baybe.utils.dataframe": [[346, 5, 1, "", "add_fake_measurements"], [347, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [348, 5, 1, "", "add_parameter_noise"], [349, 5, 1, "", "arrays_to_dataframes"], [350, 5, 1, "", "create_fake_input"], [351, 5, 1, "", "df_drop_single_value_columns"], [352, 5, 1, "", "df_drop_string_columns"], [353, 5, 1, "", "df_uncorrelated_features"], [354, 5, 1, "", "filter_df"], [355, 5, 1, "", "fuzzy_row_match"], [356, 5, 1, "", "get_transform_objects"], [357, 5, 1, "", "handle_missing_values"], [358, 5, 1, "", "pretty_print_df"], [359, 5, 1, "", "to_tensor"], [360, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[346, 4, 1, "", "bad_intervals"], [346, 4, 1, "", "data"], [346, 4, 1, "", "good_intervals"], [346, 4, 1, "", "good_reference_values"], [346, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[347, 4, 1, "", "df"], [347, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[348, 4, 1, "", "data"], [348, 4, 1, "", "noise_level"], [348, 4, 1, "", "noise_type"], [348, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[349, 4, 1, "", "input_labels"], [349, 4, 1, "", "output_labels"], [349, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[350, 4, 1, "", "**kwargs"], [350, 4, 1, "", "n_rows"], [350, 4, 1, "", "parameters"], [350, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[351, 4, 1, "", "df"], [351, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[352, 4, 1, "", "df"], [352, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[353, 4, 1, "", "df"], [353, 4, 1, "", "exclude_list"], [353, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[354, 4, 1, "", "complement"], [354, 4, 1, "", "df"], [354, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[355, 4, 1, "", "left_df"], [355, 4, 1, "", "parameters"], [355, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[356, 4, 1, "", "allow_extra"], [356, 4, 1, "", "allow_missing"], [356, 4, 1, "", "df"], [356, 4, 1, "", "objects"]], "baybe.utils.dataframe.handle_missing_values.params": [[357, 4, 1, "", "columns"], [357, 4, 1, "", "data"], [357, 4, 1, "", "drop"]], "baybe.utils.dataframe.pretty_print_df.params": [[358, 4, 1, "", "df"], [358, 4, 1, "", "max_columns"], [358, 4, 1, "", "max_colwidth"], [358, 4, 1, "", "max_rows"], [358, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[359, 4, 1, "", "*x"]], "baybe.utils.interval": [[362, 7, 1, "", "InfiniteIntervalError"], [363, 1, 1, "", "Interval"], [364, 5, 1, "", "convert_bounds"], [365, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[362, 2, 1, "", "__init__"], [362, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[363, 2, 1, "", "__init__"], [363, 6, 1, "", "center"], [363, 2, 1, "", "contains"], [363, 2, 1, "", "create"], [363, 2, 1, "", "from_dict"], [363, 2, 1, "", "from_json"], [363, 6, 1, "", "is_bounded"], [363, 6, 1, "", "is_degenerate"], [363, 6, 1, "", "is_fully_unbounded"], [363, 6, 1, "", "is_half_bounded"], [363, 6, 1, "", "is_left_bounded"], [363, 6, 1, "", "is_right_bounded"], [363, 3, 1, "", "lower"], [363, 2, 1, "", "to_dict"], [363, 2, 1, "", "to_json"], [363, 2, 1, "", "to_ndarray"], [363, 2, 1, "", "to_tensor"], [363, 2, 1, "", "to_tuple"], [363, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[363, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[363, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[363, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[364, 4, 1, "", "bounds"]], "baybe.utils.memory": [[367, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[367, 4, 1, "", "num"]], "baybe.utils.numerical": [[369, 3, 1, "", "DTypeFloatNumpy"], [370, 3, 1, "", "DTypeFloatONNX"], [371, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [372, 5, 1, "", "closer_element"], [373, 5, 1, "", "closest_element"], [374, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[372, 4, 1, "", "target"], [372, 4, 1, "", "x"], [372, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[373, 4, 1, "", "array"], [373, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[374, 4, 1, "", "arr"], [374, 4, 1, "", "weights"]], "baybe.utils.random": [[376, 5, 1, "", "set_random_seed"], [377, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[376, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[377, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[379, 1, 1, "", "DiscreteSamplingMethod"], [380, 5, 1, "", "farthest_point_sampling"], [381, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[379, 3, 1, "", "FPS"], [379, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[380, 4, 1, "", "initialization"], [380, 4, 1, "", "n_samples"], [380, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[381, 4, 1, "", "df"], [381, 4, 1, "", "method"], [381, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[383, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[383, 2, 1, "", "__init__"], [383, 2, 1, "", "fit"], [383, 3, 1, "", "mapping"], [383, 2, 1, "", "transform"]], "baybe.utils.torch": [[385, 8, 1, "", "DTypeFloatTorch"], [386, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[388, 5, 1, "", "finite_float"], [389, 5, 1, "", "non_inf_float"], [390, 5, 1, "", "non_nan_float"], [391, 5, 1, "", "validate_not_nan"], [392, 5, 1, "", "validate_parameter_input"], [393, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[392, 4, 1, "", "data"], [392, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [392, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[393, 4, 1, "", "data"], [393, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 195, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 326, 359, 363, 394, 397, 404, 408, 411, 412, 415, 416, 418, 419, 420, 421, 422, 424, 429, 433, 434, 435, 438, 439, 440, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 459], "0": [8, 13, 16, 22, 31, 34, 44, 45, 51, 108, 143, 151, 154, 174, 182, 183, 184, 195, 219, 242, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 304, 305, 306, 314, 315, 335, 347, 348, 353, 354, 370, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 421, 423, 424, 426, 427, 428, 430, 431, 432, 434, 435, 438, 443, 444, 445, 446, 447, 451, 452, 454, 455, 456, 458, 461], "00": [428, 454], "000": [408, 430], "000062": 426, "0006718629999795667": 411, "001": [44, 347, 447], "004370": 419, "005": [396, 397, 398, 400, 401], "01": [174, 403, 404, 409, 412, 427, 428, 435], "010614": 423, "014436": 419, "017738": 419, "018726": 419, "02": 435, "021": [276, 353], "028696": 426, "03213": [276, 353], "034277": 426, "039868": 419, "05": 435, "051663": 423, "053246": 427, "056997": 419, "057": [396, 397, 398, 400, 401, 411], "06": [219, 288], "061529": 419, "071709": 423, "076356": 426, "078641": 423, "08": 435, "086117": 419, "089954": 419, "09653736976391157": 421, "0f": 412, "1": [13, 16, 26, 31, 44, 108, 125, 143, 154, 185, 195, 211, 242, 244, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 304, 305, 306, 311, 314, 315, 325, 335, 348, 350, 354, 370, 374, 380, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 421, 423, 424, 426, 427, 428, 430, 431, 432, 434, 435, 438, 439, 443, 445, 446, 447, 451, 452, 454, 455, 456, 458, 461], "10": [13, 16, 195, 244, 276, 353, 395, 397, 406, 407, 408, 412, 415, 416, 418, 419, 421, 423, 424, 426, 430, 431, 432, 434, 435, 438, 445, 446, 452, 456, 461], "100": [400, 401, 406, 407, 408, 409, 412, 415, 416, 418, 419, 423, 424, 430, 435, 450, 451, 452, 456, 458, 461], "1000": [424, 456], "100898": 426, "100958": 419, "102": 427, "1024": [148, 440, 452], "1038": [276, 353], "103855": 419, "104144": 419, "105": [396, 397, 398, 400, 401, 411, 423, 454], "105445": 426, "11": [320, 418, 439, 445], "110": 428, "111": 430, "1147": 408, "1148": 408, "1149": 408, "1150": 408, "117411": 423, "12": [418, 423, 428, 441, 445, 446, 454], "120": [396, 397, 398, 400, 401, 406, 408, 411, 452], "120000": 427, "122": 430, "126": [406, 408, 409, 439], "1268824": [396, 397, 398], "128": 10, "13": [418, 419, 434, 454], "1337": [412, 413, 461], "138469": 419, "138807": 419, "14": [418, 419, 454], "14448993259018328": 421, "1454": 440, "146724": 426, "15": [244, 408, 418, 419, 423, 434, 435, 438, 446, 454], "150": [406, 409, 447], "1500": 452, "151": 408, "153": [396, 397, 398, 400, 401, 411], "159926": 419, "16": [358, 370, 418, 419], "168729": 419, "17": [400, 418, 419], "176839": 419, "177": [428, 430], "18": [418, 419, 446], "180": 406, "184075": 428, "186967": 419, "188": 430, "189390": 419, "19": [418, 423, 428], "190585": 426, "192": 408, "199": 423, "1e": [219, 288], "2": [8, 13, 16, 22, 108, 110, 125, 244, 314, 315, 325, 346, 354, 374, 380, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 412, 413, 415, 416, 418, 419, 421, 423, 424, 426, 427, 428, 430, 431, 432, 434, 435, 438, 443, 445, 446, 447, 451, 452, 454, 455, 456, 458], "20": [13, 16, 154, 244, 395, 396, 397, 398, 412, 413, 418, 419, 423, 440, 452, 459, 461], "200": [397, 406, 408, 415, 416, 421, 430], "2004": 443, "2007": 459, "201553": 419, "201771": 419, "2021": 397, "2022": 438, "2025": 438, "204412": 426, "206634": 428, "207159": 419, "207699": 428, "21": [418, 419, 431], "211": 423, "22": [13, 16, 401, 418, 419, 423, 427, 446], "221": 440, "222": 430, "23": [418, 419, 446, 456], "231": 423, "233988": 428, "24": [407, 418, 454], "241": 452, "243418": 426, "245542": 419, "25": [400, 412, 418, 428, 434, 454], "250": 444, "252094": 423, "254683": 419, "255": 423, "26": [418, 419, 423, 454], "262626": 423, "267": 423, "267457": 428, "268745": 426, "269": 401, "27": [418, 454], "274106": 423, "277": 423, "278": 423, "279": 423, "28": [418, 419], "280": 423, "285033": 419, "289571": 419, "29": [401, 418, 419, 438], "3": [244, 314, 315, 320, 325, 354, 358, 396, 397, 398, 401, 404, 406, 407, 408, 409, 411, 413, 416, 418, 419, 421, 423, 424, 426, 427, 428, 430, 431, 434, 435, 438, 439, 441, 443, 445, 446, 447, 450, 452, 454, 455, 456, 458, 459], "30": [395, 409, 413, 418, 452], "302361": 426, "3078f3": 440, "309009": 419, "31": [418, 419, 431], "311194": 426, "315": 400, "32": [401, 407, 418, 446, 452], "320379": 426, "320487": 419, "325436": 419, "33": [407, 418, 423], "332287": 426, "335251": 419, "337653": 419, "339798": 423, "34": [407, 419, 446], "340120": 419, "35": [407, 418], "36": 423, "363137": 419, "364": 401, "366108": 419, "367086": 419, "367473": 419, "37": 419, "373395": 426, "376050": 427, "38": [423, 446], "385451": 423, "39": [419, 452], "391814": 419, "391930": 423, "398809": 419, "3d": 413, "4": [13, 16, 148, 314, 315, 358, 403, 404, 406, 407, 408, 409, 413, 418, 419, 421, 423, 426, 427, 428, 438, 443, 445, 446, 447, 452, 454], "40": [418, 451, 452], "40x": 440, "41": 419, "417389": 426, "419420": 423, "42": [421, 424, 446], "421520": 423, "423": 401, "424667": 419, "429963": 426, "447": 406, "448": 406, "449": 406, "449727": 419, "45": [418, 423, 458], "450": 406, "450819": 419, "46": 419, "461253": 428, "463382": 428, "468": 440, "471709": 400, "48": 419, "483826": 423, "484509": 423, "486947": 419, "49": [419, 423], "4x": 440, "5": [108, 154, 314, 315, 396, 398, 403, 406, 407, 408, 409, 412, 415, 416, 418, 419, 423, 424, 426, 427, 428, 430, 431, 432, 434, 435, 438, 443, 444, 445, 446, 447, 452, 454, 456, 459, 461], "50": [409, 416, 418, 421, 434, 435, 443, 444, 452, 454, 458], "500": [413, 452], "502968": 419, "5066666666666667": 421, "508513": 419, "51": 423, "511311": 419, "515817": 419, "52": [419, 423], "521865": 428, "529663": 419, "53": 423, "5313": 331, "531709": 423, "534512": 423, "535457": 423, "54": [423, 438, 446], "540551": 426, "543607": 423, "55": [419, 423, 458], "554030": 419, "56": [423, 446, 456], "562212": 419, "569687": 419, "57": 423, "582762": 401, "583936": 419, "59": [427, 430, 438, 446], "590": 397, "595319": 423, "598262": 428, "6": [314, 315, 358, 396, 397, 398, 406, 407, 408, 409, 418, 419, 421, 423, 426, 428, 430, 443, 447, 454], "60": [423, 451], "602916": 426, "606660": 423, "610330": 426, "615904": 419, "62": [421, 446], "626813": 400, "631620": 426, "636802": 419, "64": 195, "65": [421, 423], "66": [419, 423], "662130": 426, "66368270ffd51418ec58bd793f2d9b1b": 459, "669129": 419, "671889": 419, "672207": 419, "682645": 423, "683958": 419, "687954": 428, "69": [396, 397, 398, 419, 423], "693949": 419, "7": [154, 314, 315, 353, 407, 409, 413, 418, 419, 423, 424, 426, 434, 443, 445, 446, 452, 454], "70": 418, "702725": 419, "704804": 419, "706667": 427, "707135": 426, "71": 452, "710865": 419, "716536": 426, "72": [423, 427, 446], "725381": 423, "726040": 426, "73": 423, "730442": 427, "731616": 423, "734777": 426, "735576": 423, "741385": 419, "745": 461, "746665": 419, "75": [418, 427, 454], "751647": 423, "775181": 426, "778": 430, "781886": 426, "782574": 423, "785706": 419, "786170": 426, "786533": 419, "79": 438, "797081": 401, "7gz": 452, "7hf": 452, "8": [315, 396, 398, 406, 408, 409, 418, 419, 421, 423, 426, 438, 443, 445, 447], "80": [419, 447], "800383": 419, "803897": 419, "81": 423, "817733": 426, "83": 446, "832610": 426, "835038": 426, "835374": 419, "8389": 331, "839300": 419, "839443": 423, "8417": 331, "844713": 419, "849005": 423, "85": 423, "853173": 419, "853728": 419, "857": 408, "858577": 423, "861": 409, "862": 409, "863": 409, "864": 409, "87": [430, 446], "874608": 426, "877100": 426, "877318": 423, "88": 430, "880719": 419, "884123": 419, "885089": 419, "8859": 415, "888148": 426, "889": 430, "89": [397, 427, 430], "893346": 428, "895309": 419, "895389": 423, "8jq": 452, "9": [13, 16, 409, 413, 415, 418, 419, 423, 426, 443, 445, 446, 454, 455], "90": [396, 397, 398, 400, 401, 411, 423, 430, 454], "900546": 419, "903590": 423, "906127": 426, "91": 446, "910425": 426, "914045": 419, "929236": 423, "930395": 419, "94": 428, "940039": 401, "940258": 419, "947263": 423, "948894": 428, "95": 423, "96": 397, "967913": 423, "981621": 426, "982537": 426, "99": 423, "999": 447, "A": [0, 13, 16, 26, 31, 38, 40, 41, 42, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 73, 75, 78, 80, 81, 82, 83, 86, 89, 91, 96, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 125, 129, 131, 137, 140, 141, 143, 151, 154, 156, 157, 158, 167, 168, 169, 170, 171, 172, 173, 174, 177, 183, 184, 185, 187, 190, 193, 195, 197, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 220, 221, 236, 237, 242, 244, 246, 248, 251, 253, 255, 258, 260, 264, 266, 267, 274, 276, 278, 280, 282, 284, 290, 294, 296, 302, 304, 305, 306, 314, 320, 323, 324, 325, 328, 338, 346, 353, 354, 356, 357, 367, 374, 378, 380, 383, 395, 407, 416, 418, 419, 421, 423, 431, 432, 437, 439, 440, 441, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459], "AND": [54, 408, 443, 447], "AS": [438, 443], "And": 415, "As": [396, 397, 398, 413, 421, 423, 434, 435, 438, 439, 440, 445, 446, 447, 450, 453, 454, 456], "But": 458, "By": [96, 124, 157, 219, 334, 354, 419, 441, 445, 446, 448, 449, 451, 453, 454], "FOR": 443, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 96, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 164, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 242, 248, 251, 253, 255, 256, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 294, 296, 302, 307, 330, 355, 360, 363, 383, 396, 397, 398, 400, 401, 407, 411, 412, 413, 418, 419, 421, 423, 428, 434, 435, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461], "If": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 96, 100, 121, 124, 125, 129, 131, 133, 156, 157, 162, 163, 183, 184, 187, 193, 195, 211, 213, 219, 225, 226, 242, 244, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 305, 310, 315, 323, 324, 328, 330, 333, 335, 338, 342, 344, 346, 347, 348, 350, 353, 354, 355, 356, 357, 380, 381, 392, 393, 401, 403, 412, 418, 427, 428, 431, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 459, 461], "In": [31, 45, 57, 156, 195, 213, 240, 242, 328, 358, 396, 397, 398, 400, 412, 413, 415, 418, 419, 421, 423, 424, 427, 428, 431, 437, 438, 439, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461], "It": [26, 177, 184, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 240, 259, 280, 346, 396, 400, 401, 407, 416, 418, 421, 423, 428, 430, 431, 432, 434, 445, 446, 447, 448, 452, 453, 454, 456, 461], "Its": [244, 415], "No": [355, 426, 437, 440], "Not": [443, 447], "OF": [438, 443], "OR": [438, 443], "Of": [401, 410, 436, 455], "On": [415, 421], "One": [145, 396, 398, 424, 438], "Or": 448, "Such": [401, 447, 450, 456], "That": [44, 213, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 305, 401, 406, 418, 441, 454, 456, 459], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 96, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 125, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 158, 164, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 231, 232, 234, 236, 240, 242, 244, 246, 251, 253, 255, 256, 258, 260, 264, 267, 278, 280, 282, 284, 286, 288, 290, 291, 294, 296, 299, 302, 304, 305, 306, 308, 310, 311, 314, 315, 320, 323, 324, 325, 328, 330, 333, 334, 335, 338, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 367, 372, 373, 374, 376, 377, 380, 381, 392, 393, 396, 397, 398, 401, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 423, 427, 428, 432, 434, 435, 437, 439, 440, 441, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 457, 458, 460, 461], "Then": 413, "There": [85, 288, 370, 418, 426, 438, 439, 441, 445, 449, 454, 457], "These": [308, 394, 397, 398, 399, 402, 405, 410, 414, 417, 420, 422, 425, 429, 433, 438, 441, 445, 447, 448, 452, 454], "To": [396, 401, 412, 413, 419, 421, 424, 430, 434, 435, 438, 439, 441, 445, 446, 447, 448, 449, 451, 452, 456, 457], "Will": 444, "With": [346, 412, 413, 418, 421, 424, 434, 435, 438, 445, 447, 452, 455], "_": [133, 162, 163, 216, 222, 229, 403, 412, 413, 435], "__": 133, "__class__": [411, 421], "__excepthook__": 439, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 251, 253, 255, 256, 258, 260, 264, 266, 267, 274, 276, 278, 280, 282, 284, 294, 296, 302, 317, 320, 362, 363, 383, 454, 455], "__name__": [411, 421], "__new__": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 145, 146, 148, 362], "__str__": 440, "__version__": 440, "_amount": 418, "_arraylik": 349, "_c": 324, "_cumbest": 242, "_default_my_attribut": 441, "_discretelabellikeparamet": [140, 143, 154], "_expectedhypervolumeimprov": [13, 16], "_fit": 291, "_has_switch": 185, "_iterbest": 242, "_label": 418, "_measur": 242, "_n_last_measur": [182, 183, 184], "_nbase": 340, "_nestedsequ": [13, 16, 125, 158, 304, 305, 306, 373], "_no_tl": 434, "_option": 440, "_posterior": 291, "_step": [182, 183, 184], "_supportsarrai": [13, 16, 125, 158, 304, 305, 306, 373], "_surrogategett": 258, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 211, 213, 219, 224, 232, 233, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 325, 326, 327, 343, 356, 363], "_target": 440, "_tparamet": 157, "_tsurrog": 287, "_u": 325, "_validate_my_attribut": 441, "_was_us": [182, 183, 184], "a1": 315, "a2": 315, "ab": [409, 418], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 322, 329, 440, 460], "abc": [24, 34, 35, 36, 37, 38, 40, 103, 104, 105, 121, 137, 138, 166, 180, 190, 193, 200, 205, 253, 255, 294, 334], "abil": [444, 445, 449, 459], "abl": [413, 439, 445, 447, 452, 455, 461], "about": [8, 26, 31, 138, 154, 294, 311, 396, 397, 398, 418, 427, 428, 438, 440, 441, 446, 450, 452, 454, 457], "abov": [288, 306, 334, 353, 395, 401, 408, 409, 411, 412, 419, 426, 438, 441, 443, 444, 445, 446, 447, 448, 449, 452, 455, 456, 457, 459], "absenc": 451, "absolut": [44, 151, 348, 438], "abstract": [24, 34, 35, 36, 37, 38, 40, 103, 104, 105, 121, 136, 137, 138, 166, 180, 190, 193, 200, 255, 294, 323, 324, 334, 440, 447, 459], "abstractli": 421, "acceler": [438, 440, 442, 459], "accept": [31, 183, 251, 253, 255, 260, 264, 278, 280, 282, 284, 349, 412, 413, 440, 443, 448, 451, 452, 456, 458], "access": [211, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 396, 397, 398, 406, 411, 435, 440, 445, 447, 452, 455], "accord": [44, 178, 419, 444, 447, 448, 453, 461], "accordingli": [195, 446, 449, 451, 455], "account": 445, "accumul": [168, 421, 459], "accur": 446, "acet": [396, 397, 398, 400, 401], "aceton": 418, "achiev": [21, 219, 413, 418, 421, 424, 438, 441, 444, 446, 447, 449, 457], "ack": 438, "acq_funct": 401, "acq_valu": 446, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 412, 413, 421], "acqf1": 455, "acqf2": 455, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 70, 81, 193, 195, 406, 407, 408, 409, 412, 413, 421, 423, 430, 438, 440, 444, 451, 453, 455, 457, 460], "acquisition_funct": [31, 193, 195, 401, 412, 413, 421, 431, 432, 440], "acquisition_function_cl": 440, "acquisition_valu": [31, 193, 195, 412, 413, 440, 446], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 31, 193, 195, 421, 440, 455], "across": [418, 421, 434, 445, 453, 459], "act": [418, 440, 443, 447, 456], "action": [21, 411, 421, 437, 440, 460], "activ": [15, 34, 156, 185, 195, 412, 413, 421, 438, 439, 440, 441, 447, 448, 449, 450, 453, 459, 460, 461], "activate_paramet": 440, "active_dim": [103, 104, 105, 108, 110, 112, 113, 114], "active_valu": [137, 140, 141, 143, 151, 154, 434, 435, 440, 449, 452, 459], "actual": [183, 213, 240, 427, 440, 450, 454, 456, 459, 461], "ad": [31, 219, 310, 314, 346, 380, 418, 419, 437, 441, 444, 448, 449, 457, 458, 460], "adapt": [184, 276, 335, 353], "add": [31, 234, 244, 346, 347, 401, 415, 416, 418, 423, 434, 438, 443, 445, 446, 447, 450, 454, 459, 461], "add_collection3d": 413, "add_fake_measur": [350, 400, 401, 406, 407, 408, 409, 415, 416, 423, 440, 445, 456, 461], "add_fake_result": 440, "add_measur": [31, 350, 400, 401, 403, 404, 406, 407, 408, 409, 413, 415, 416, 421, 423, 424, 427, 428, 438, 440, 445, 446, 448, 449], "add_noise_to_perturb_degenerate_row": 440, "add_parameter_nois": [350, 440, 461], "add_subplot": 413, "addendum": 443, "addit": [31, 96, 121, 124, 129, 131, 183, 195, 213, 234, 242, 244, 246, 348, 350, 396, 397, 398, 419, 427, 435, 438, 440, 442, 443, 446, 447, 448, 450, 451, 452, 454, 455, 456, 459, 461], "addition": [411, 419, 438, 450], "additiveexplain": [94, 97], "additivekernel": 440, "address": 456, "adher": [440, 441], "adjust": [156, 184, 397, 401, 427, 440, 449, 451], "adopt": 401, "adrian": [438, 442], "advanc": [184, 421, 439, 440, 448, 451, 455, 459, 460], "advantag": [418, 441], "advic": 441, "advis": [443, 456], "affect": [31, 53, 63, 65, 195, 211, 314, 411, 430, 437, 439, 447], "affected_paramet": [53, 406, 407, 408, 409, 418, 447], "affili": [438, 448], "afford": 446, "aforement": [213, 448], "after": [185, 330, 400, 401, 406, 407, 408, 409, 413, 423, 430, 438, 446, 450, 451, 452, 455], "afterward": 455, "again": [412, 445, 446, 447, 459], "against": [90, 310, 328, 418, 443, 449, 459], "agent": 419, "aggreg": 451, "agraw": 442, "agre": [438, 443, 450], "agreement": 443, "ai": [101, 164, 370], "aim": [445, 446, 450], "akin": 445, "al": [397, 438, 452], "aldrich": 442, "alex": 442, "alexand": [438, 442], "algorithm": [188, 195, 346, 378, 380, 395, 418, 423, 438, 440, 445, 450, 453], "alia": [153, 197, 254, 452], "alias": 440, "align": [156, 211, 330, 412, 454, 459], "all": [23, 24, 33, 35, 40, 44, 53, 55, 61, 63, 96, 102, 103, 104, 105, 120, 121, 124, 135, 138, 143, 147, 154, 165, 166, 176, 179, 180, 183, 189, 190, 192, 195, 199, 200, 211, 213, 220, 221, 244, 251, 252, 255, 293, 294, 314, 327, 328, 346, 396, 397, 398, 401, 403, 404, 406, 407, 411, 412, 413, 418, 419, 421, 423, 426, 427, 434, 435, 438, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461], "allclos": [403, 404, 419], "alleg": 443, "allow": [21, 31, 34, 44, 51, 55, 121, 124, 129, 131, 151, 157, 184, 213, 219, 246, 311, 333, 355, 356, 392, 393, 396, 397, 398, 401, 418, 419, 434, 435, 438, 440, 444, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458, 461], "allow_": [440, 449], "allow_extra": [121, 124, 129, 131, 211, 213, 219, 224, 356, 360, 423, 440], "allow_miss": [121, 124, 129, 131, 211, 213, 219, 224, 356, 360, 440], "allow_recommending_already_measur": [31, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 421, 431, 432, 437, 440, 446], "allow_recommending_already_recommend": [31, 413, 421, 431, 432, 437, 440, 446], "allow_recommending_pending_experi": [31, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 440, 446], "allow_repeated_recommend": [187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 440], "almost": 397, "alon": [440, 443], "along": [374, 443, 452, 459], "alongsid": 443, "alpha": [168, 413, 424], "alphabet": [159, 440], "alreadi": [31, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 418, 428, 438, 440, 444, 445, 446, 449, 454, 456, 457, 459, 461], "also": [31, 44, 57, 96, 157, 251, 253, 255, 260, 264, 278, 280, 282, 284, 311, 328, 330, 346, 347, 348, 396, 403, 404, 412, 413, 415, 416, 418, 423, 424, 427, 428, 430, 434, 435, 438, 440, 441, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461], "alter": [418, 440, 446, 449], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 288, 374, 411, 418, 419, 426, 438, 440, 449, 457, 460, 461], "although": [418, 428, 431, 454, 456], "alwai": [15, 31, 40, 229, 230, 415, 418, 419, 438, 444, 446, 447, 456, 457, 459, 461], "ambigu": [151, 318, 319, 454], "amend": 447, "among": [34, 418, 438, 451, 459], "amount": [315, 381, 419, 434, 435, 445, 450, 452, 461], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 70, 71, 72, 74, 76, 77, 81, 87, 90, 91, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 129, 131, 133, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 158, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 232, 234, 236, 240, 242, 244, 246, 251, 253, 255, 258, 260, 261, 264, 267, 278, 280, 282, 284, 286, 287, 294, 296, 302, 314, 318, 319, 326, 328, 330, 333, 339, 343, 344, 353, 354, 355, 357, 358, 362, 363, 364, 373, 380, 381, 396, 398, 399, 401, 408, 409, 411, 412, 415, 416, 419, 423, 426, 430, 431, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "analog": [213, 346, 447, 454, 455], "analogi": [178, 453], "analysi": [438, 450, 457], "analyt": [3, 4, 7, 8, 81, 445, 456, 459], "analyz": [438, 441, 450], "angl": 413, "ani": [13, 16, 64, 65, 87, 96, 125, 136, 137, 138, 140, 141, 143, 154, 157, 158, 161, 162, 163, 229, 230, 234, 238, 239, 246, 278, 282, 284, 304, 305, 306, 311, 314, 327, 328, 330, 331, 333, 334, 344, 350, 355, 357, 363, 365, 373, 388, 389, 390, 391, 393, 411, 418, 434, 435, 437, 438, 439, 440, 441, 443, 445, 446, 448, 449, 452, 455, 456, 459], "annot": [330, 411, 443], "anonym": [438, 448], "anoth": [53, 364, 397, 407, 408, 415, 416, 418, 428, 441, 447, 459], "ansatz": 440, "answer": 446, "anti": 354, "anymor": [440, 459], "anyth": 335, "anywai": 457, "anywher": 403, "apach": [438, 443], "apart": [441, 446], "api": [438, 439, 455], "aplei": 450, "appar": 455, "appdata": 439, "appear": [328, 439, 440, 443, 455], "append": [413, 435], "appendix": 443, "appli": [31, 40, 41, 42, 57, 195, 213, 240, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 328, 339, 348, 350, 383, 401, 402, 405, 406, 408, 409, 411, 412, 418, 434, 439, 440, 443, 447, 450, 451, 453, 454, 455, 456, 457, 458, 459], "applic": [344, 438, 441, 443, 452, 453, 456], "approach": [219, 412, 421, 438, 441, 444, 446, 449, 451, 453, 455, 457, 459], "appropri": [47, 48, 219, 421, 441, 443, 449, 454], "approxim": [10, 21, 447, 450], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 69, 79, 83, 84, 85, 96, 121, 124, 125, 129, 131, 137, 140, 141, 143, 151, 154, 156, 157, 158, 163, 177, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 242, 244, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 306, 308, 310, 311, 314, 315, 323, 324, 325, 327, 328, 330, 334, 335, 346, 347, 349, 350, 351, 355, 356, 380, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 411, 412, 413, 416, 418, 419, 421, 423, 426, 427, 430, 431, 434, 435, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461], "arang": [403, 413, 452], "arbitrari": [184, 213, 365, 440, 447, 452, 453, 456, 459, 461], "arbitrarili": [451, 455], "architectur": [251, 253, 255, 260, 264, 278, 280, 282, 284, 291, 440, 457, 459], "ard_num_dim": [103, 104, 105, 108, 110, 112, 113, 114], "area": 413, "arg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 107, 109, 111, 116, 117, 118, 166, 168, 169, 170, 171, 172, 173, 174, 177, 197, 256, 261, 266, 362, 441], "argu": 418, "argument": [31, 71, 91, 96, 101, 154, 157, 164, 180, 182, 183, 184, 185, 193, 195, 211, 219, 256, 258, 330, 350, 354, 401, 416, 423, 440, 447, 450, 452, 453, 454, 455, 456, 459], "aris": [56, 418, 440, 443, 447, 455, 461], "arithmet": [127, 451], "arizona": 442, "arm": [250, 251, 436, 442], "arm_index": 421, "around": [13, 16, 44, 204, 246, 248, 423, 440, 453, 455, 461], "arr": [304, 305, 306, 374, 424], "arrai": [13, 16, 125, 158, 304, 305, 306, 317, 349, 359, 369, 373, 374, 380, 413, 440, 453, 457], "arrays_to_datafram": [403, 404, 413, 424, 427, 428, 434, 435, 440, 456], "arriv": [438, 449], "artifici": 461, "aryl": [396, 397, 398, 400, 438, 452], "ascend": 423, "ask": [418, 438, 440, 441, 446, 449], "aspect": [399, 403, 404, 428, 445, 448], "assembl": [418, 455, 457], "assembli": [457, 460], "assert": [65, 133, 355, 406, 407, 408, 409, 415, 416, 418, 419, 426, 430, 440, 443, 446, 447, 455, 457], "assess": 456, "assign": [346, 412, 419, 426, 452], "associ": [213, 421, 443, 446, 448, 451, 459], "assum": [26, 45, 259, 330, 355, 356, 396, 397, 398, 401, 403, 404, 406, 407, 408, 409, 415, 416, 418, 421, 423, 427, 428, 430, 438, 443, 445, 447, 449, 452, 455, 457, 458, 461], "assumpt": 456, "assur": 447, "asymmetr": 44, "asynchron": [438, 446, 460], "atol": [403, 404], "atompair": 148, "atompairfingerprint": 148, "attach": [26, 330, 411, 412, 413, 443], "attempt": [80, 87, 259, 421, 439, 440, 445, 447, 450, 451, 453], "attent": 185, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 133, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 251, 253, 255, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 294, 296, 302, 328, 331, 363, 383, 391, 440], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 90, 93, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 127, 129, 131, 136, 137, 138, 140, 141, 143, 145, 146, 148, 150, 151, 152, 154, 157, 161, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 214, 218, 219, 228, 232, 234, 251, 252, 253, 255, 258, 260, 264, 267, 271, 274, 276, 278, 280, 282, 284, 291, 294, 295, 296, 299, 300, 302, 316, 319, 328, 343, 356, 363, 368, 379, 383, 384, 387, 388, 389, 390, 391, 426, 440, 441, 443, 447, 453, 455, 457, 458], "audit": [440, 441], "augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 213, 286, 287, 288, 440, 446], "author": 443, "authorship": 443, "auto": [12, 13, 14, 16, 17, 440, 442], "auto_tutori": 370, "autocorr": 148, "autocorrfingerprint": 148, "autodoc": 440, "automat": [31, 195, 264, 395, 413, 427, 439, 440, 441, 450, 451, 453, 454, 457, 459, 460], "avail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 75, 82, 127, 143, 145, 146, 148, 154, 183, 184, 242, 244, 271, 299, 300, 311, 379, 380, 381, 398, 400, 403, 404, 418, 423, 427, 428, 438, 439, 440, 441, 443, 445, 446, 448, 450, 452, 453, 454, 455, 456, 459, 460], "available_acq_funct": 401, "avalon": 148, "avalonfingerprint": 148, "averag": [280, 412, 413, 435, 452, 456], "avoid": [213, 331, 374, 440, 441, 445, 446, 452, 454], "awai": [13, 16, 156, 458], "awar": [418, 434, 435, 440, 444, 449, 455], "ax": [96, 395, 397, 412, 413, 424, 434, 435], "axes3d": 413, "axi": [211, 242, 374, 395, 403, 404, 409, 412, 413, 418, 419, 421, 423, 424, 427, 428, 434, 435, 454], "azim": 413, "azur": 440, "b": [44, 56, 174, 276, 314, 325, 353, 354, 397, 407, 416, 421, 431, 432, 437, 438, 441, 443, 446, 449, 452, 455], "b1": 315, "b2": 315, "back": [0, 430, 437, 440, 441, 449], "backend": 311, "background": [96, 100, 440, 445, 450], "background_data": 96, "backport": 439, "backtest": [240, 241, 247, 396, 397, 398, 412, 433, 436, 438, 440, 453, 456], "backtick": 441, "backward": [196, 197, 213, 440], "bad": [423, 446, 448, 458], "bad_interv": 346, "badg": 440, "bai": 438, "baird": 442, "balanc": [124, 421, 438], "banana": 441, "bandit": [251, 401, 436, 438, 440, 442], "banner": 440, "bar": [96, 98, 415, 416, 418, 430, 431, 432, 438, 440, 450, 457], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 127, 129, 131, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 181, 182, 183, 184, 185, 187, 190, 193, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 218, 219, 232, 234, 236, 251, 253, 255, 256, 258, 259, 260, 264, 266, 267, 271, 274, 276, 278, 280, 282, 284, 288, 290, 294, 296, 299, 300, 302, 317, 319, 320, 322, 323, 324, 349, 354, 363, 379, 380, 383, 395, 400, 401, 412, 413, 415, 417, 421, 436, 438, 440, 443, 444, 446, 447, 448, 450, 452, 453, 454, 455, 457], "base1": 419, "base2": 419, "base_data": 412, "base_kernel": [116, 117, 118], "base_nam": [395, 397, 412, 413, 434, 435], "base_predictor": 286, "base_smil": 412, "basefingerprinttransform": 338, "baselin": [395, 397, 434, 438, 452], "basesequentialmetarecommend": [183, 184], "bashrc": 448, "basi": [112, 438, 443, 445, 450], "basic": [103, 107, 108, 109, 110, 111, 112, 113, 114, 168, 169, 170, 171, 172, 173, 174, 242, 317, 319, 320, 396, 397, 398, 401, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 423, 427, 428, 429, 430, 433, 436, 440, 441, 449, 451, 452, 456, 460], "basic_transfer_learn": 435, "basickernel": [107, 108, 109, 110, 111, 112, 113, 114, 440], "batch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 177, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 245, 286, 287, 401, 406, 407, 408, 409, 413, 423, 427, 428, 430, 434, 435, 440, 445, 449, 453, 456], "batch_quant": 440, "batch_shap": [103, 104, 105, 108, 110, 112, 113, 114], "batch_siz": [31, 44, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 242, 246, 248, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 411, 412, 413, 415, 416, 419, 421, 423, 424, 427, 428, 430, 431, 434, 435, 438, 440, 445, 446, 448, 449, 456], "batchnr": 423, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 127, 129, 131, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 214, 218, 219, 236, 251, 253, 255, 256, 258, 260, 264, 266, 267, 271, 274, 276, 278, 280, 282, 284, 294, 296, 299, 300, 302, 317, 319, 320, 363, 379, 383, 394, 395, 396, 397, 398, 399, 401, 403, 404, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 439, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461], "baybe_cach": 448, "baybe_cache_dir": [440, 448], "baybe_deactivate_polar": [440, 448], "baybe_debug_fake_hosthash": 440, "baybe_debug_fake_userhash": 440, "baybe_numpy_use_single_precis": [371, 440, 448], "baybe_telemetry_en": [438, 448], "baybe_telemetry_endpoint": [440, 448], "baybe_telemetry_host": 440, "baybe_telemetry_hostnam": [440, 448], "baybe_telemetry_usernam": [440, 448], "baybe_telemetry_vpn_check": [440, 448], "baybe_telemetry_vpn_check_timeout": [440, 448], "baybe_torch_use_single_precis": [386, 440, 448], "bayesian": [0, 187, 193, 195, 240, 242, 246, 248, 259, 278, 421, 440, 444, 446, 450, 457, 460], "bayesian_recommend": 413, "bayesianlinearmodel": 416, "bayesianlinearsurrog": [401, 457], "bayesianrecommend": [187, 195, 259, 440, 453], "bayesianridg": 415, "bcut2d": [148, 440], "bcut2dfingerprint": 148, "bcw07": 459, "becaus": [44, 85, 151, 156, 213, 219, 248, 334, 411, 412, 418, 435, 441, 444, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 459], "becom": [213, 418, 440, 444, 446, 447, 455, 458, 461], "been": [26, 31, 80, 81, 183, 251, 253, 255, 260, 264, 278, 280, 282, 284, 355, 396, 397, 438, 439, 440, 443, 445, 446, 451, 453, 459], "beeswarm": [96, 98, 450], "befor": [80, 185, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 330, 395, 398, 401, 407, 412, 438, 440, 441, 448, 449, 452, 454], "begin": [183, 406, 408, 426, 430, 453, 457], "behalf": 443, "behav": [413, 430, 455], "behavior": [156, 195, 438, 440, 448, 451, 453, 454, 459], "behind": [451, 455, 456, 457, 458], "being": [13, 16, 118, 346, 421, 439, 440, 447, 448, 452, 454], "bell": [300, 304, 423, 458], "belong": [411, 455], "below": [185, 288, 306, 408, 411, 412, 418, 441, 443, 444, 446, 447, 451, 455, 457, 458, 459], "benchmark": [438, 440, 442], "benefici": [443, 444, 448], "benefit": [447, 459], "benzo": 459, "bernoulli": [251, 420, 436, 442], "besid": [438, 451, 458], "best": [12, 13, 14, 16, 17, 242, 244, 246, 398, 421, 438, 448, 453], "bet": 446, "beta": [8, 22, 168, 251, 401, 440, 444], "betabernoullimultiarmedbanditsurrog": [401, 421, 440], "betaprior": [251, 440], "better": [10, 346, 397, 440, 446, 447, 449, 451, 452], "between": [13, 16, 34, 53, 151, 184, 211, 219, 274, 354, 411, 413, 418, 421, 423, 424, 428, 434, 435, 438, 440, 441, 445, 446, 447, 448, 451, 452, 453, 454, 455, 458, 459], "beyond": [156, 438, 450], "bias": 452, "bin": 418, "binar": 440, "binari": [296, 393, 430, 438, 439, 440, 455], "binarytarget": [297, 421, 440], "bind": [411, 413, 443], "bit": [440, 452], "black": [240, 456, 459], "blackbox": [394, 395, 436], "blank": 441, "blob": 276, "block": [412, 418, 438, 439, 440, 448, 455], "blue": 424, "boacquisitionfunct": [193, 195], "bodi": 411, "bonilla": 459, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 96, 99, 100, 121, 124, 125, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 158, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 224, 251, 253, 255, 260, 264, 278, 280, 282, 284, 296, 297, 304, 305, 306, 309, 323, 324, 328, 329, 334, 335, 344, 349, 354, 356, 357, 360, 363, 373, 392, 421], "boolean": [13, 16, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 96, 100, 136, 137, 138, 140, 141, 143, 150, 151, 154, 158, 180, 182, 183, 184, 185, 356, 446, 448], "boost": [282, 435], "both": [10, 13, 16, 156, 157, 213, 219, 248, 306, 330, 395, 407, 412, 415, 418, 419, 421, 423, 424, 434, 435, 438, 440, 441, 444, 446, 447, 450, 452, 454, 455, 457, 458, 461], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 187, 195, 197, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 403, 404, 413, 428, 434, 435, 440, 448, 453], "botorch_acqf": 26, "botorch_function_wrapp": 440, "botorchrecommend": [187, 197, 401, 406, 407, 408, 409, 412, 413, 415, 416, 421, 423, 428, 430, 431, 432, 438, 440, 445, 446, 447, 449, 453], "bottom": 446, "bound": [8, 22, 34, 44, 150, 156, 157, 174, 211, 213, 219, 224, 287, 302, 303, 324, 330, 356, 363, 364, 395, 401, 403, 404, 413, 419, 423, 424, 426, 427, 428, 434, 435, 440, 452, 455, 458, 460, 461], "boundari": [44, 219, 304, 305, 423], "boundary_onli": [219, 418], "bounded": 440, "bounds_transform_func": 440, "box": [174, 240, 456, 459], "brain": [456, 459], "branch": [438, 441], "break": [259, 455], "brettpho": [396, 397, 398, 400, 401], "briefli": [456, 459], "bring": [438, 440], "bro": 276, "broad": 455, "broadcast": 158, "brute": [195, 453], "bu": [396, 397, 398, 400, 401], "bucket": 418, "budget": 446, "bug": [440, 441], "build": [211, 219, 259, 412, 418, 439, 440, 441, 447, 450, 455, 457, 459, 460, 461], "built": [219, 415, 438, 441, 446, 453, 457], "builtin": 320, "bump": 440, "button": 440, "butyl": [396, 397, 398, 400, 401], "butylphenylphosphin": [396, 397, 398, 400, 401], "butyornitril": [396, 397, 398, 400, 401], "bypass": [157, 412, 457], "byte": [13, 16, 125, 158, 218, 260, 304, 305, 306, 367, 373, 440, 461], "c": [56, 314, 325, 396, 397, 398, 400, 401, 406, 407, 408, 409, 416, 418, 431, 432, 438, 439, 443, 446, 449, 452, 454, 455], "c1": [396, 397, 398, 400, 401, 406, 407, 408, 409, 452], "c1c2": [396, 397, 398, 400, 401], "c1ccccc1": [396, 397, 398, 406, 408], "c1ccoc1": 447, "c2": [396, 397, 398, 400, 401, 406, 408, 409], "c2ccccc2": [396, 397, 398], "c2oc": [396, 397, 398, 400, 401], "c2p": [396, 397, 398, 400, 401], "c3": [396, 397, 398, 400, 401, 406, 408], "c3c": [396, 397, 398], "c3ccccc3": [396, 397, 398, 400, 401], "c4": [396, 397, 398, 406, 408], "c4ccccc4": [396, 397, 398, 400, 401], "c5": [406, 408], "c6": [406, 408], "c_": 424, "c_g2_min": 419, "c_g3_max": 419, "c_i": 447, "c_total_sum": 419, "cach": [31, 310, 440, 455, 460], "cached_recommend": 310, "calcul": [31, 310, 374, 403, 413, 434, 446, 448, 452, 454], "calibr": 459, "call": [45, 91, 180, 182, 183, 184, 185, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 310, 311, 330, 349, 396, 397, 398, 411, 416, 418, 419, 431, 432, 438, 439, 440, 444, 446, 447, 448, 452, 455, 456, 457, 459, 460], "callabl": [52, 71, 90, 157, 232, 240, 242, 244, 246, 248, 286, 287, 290, 291, 320, 326, 328, 330, 349, 395, 411, 424, 440, 460], "callable_": 328, "campaign": [96, 242, 245, 246, 248, 346, 348, 350, 399, 400, 408, 410, 413, 421, 432, 434, 435, 436, 437, 438, 440, 444, 445, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461], "campaign1": 456, "campaign2": 456, "campaign_json": 446, "campaign_oh": 397, "campaign_par": 424, "campaign_rand": [396, 397, 398], "campaign_recr": 430, "campaign_stop": 412, "campaign_with_hook": 412, "campaign_y0": 424, "campaign_y1": 424, "campaignstoppedexcept": 412, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 56, 96, 137, 143, 151, 154, 158, 177, 184, 187, 188, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 240, 244, 251, 253, 255, 256, 258, 259, 260, 264, 278, 280, 282, 284, 288, 297, 309, 311, 328, 330, 334, 346, 348, 349, 370, 395, 396, 397, 398, 401, 402, 405, 406, 407, 408, 411, 412, 413, 415, 416, 418, 419, 421, 423, 424, 426, 427, 428, 431, 434, 435, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461], "canada": 442, "candid": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 193, 195, 205, 207, 211, 219, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 412, 413, 435, 440, 444, 453, 454, 460], "cannot": [15, 89, 90, 156, 259, 260, 288, 335, 421, 440, 443, 445, 447, 448, 452, 453, 455, 457, 459], "canon": [337, 455], "capabl": [394, 420, 422, 429, 433, 435, 440, 442, 446, 451, 457, 459], "captur": 452, "cardin": [34, 44, 51, 61, 63, 64, 65, 79, 195, 211, 438, 440, 442, 447], "cardinalityconstraint": [44, 51, 440], "care": [49, 418, 441, 447, 450, 451, 457], "carefulli": 448, "carlo": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 81, 246, 395, 397, 398, 412, 421, 434, 435, 440, 445, 456], "carri": [330, 411, 443, 451], "cartesian": [213, 219, 220, 221, 438, 440, 449, 454], "case": [156, 184, 248, 288, 330, 346, 358, 412, 417, 418, 427, 428, 431, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 452, 455, 456, 457, 458, 459, 461], "cast": [45, 440], "cat": 354, "cat_1": 423, "cat_1_22": 423, "cat_1_33": 423, "cat_2": 423, "catch_constant_target": 440, "categor": [31, 140, 141, 145, 219, 226, 355, 438, 440, 452, 454, 458], "categori": [397, 412, 438, 440, 455, 458], "categorical_1": [423, 446], "categorical_2": [423, 446], "categorical_paramet": 455, "categorical_parameter_json": 455, "categorical_parameter_reconstruct": 455, "categoricalencod": [140, 141, 406, 407, 408, 409, 423, 430], "categoricalparamet": [141, 219, 397, 406, 407, 408, 409, 416, 421, 423, 430, 431, 432, 438, 440, 449, 450, 454, 455, 460], "cattr": [231, 232, 234, 432, 439, 440, 441], "cauchi": 170, "caus": [151, 314, 320, 440, 443], "caution": 459, "cc": [396, 397, 398, 400, 401, 406, 408, 409, 418, 452, 459], "cc1": [396, 397, 398, 400, 401, 452], "ccc": [406, 408, 416, 438], "cccc": [396, 397, 398, 400, 401, 406, 408], "ccccc": [406, 408, 431, 432], "cccccc": [406, 408], "cccccccco": [447, 452], "ccccoc": [396, 397, 398, 400, 401], "cco": 418, "ccoccoccn": [431, 432], "cdot": [447, 451], "ceil": 412, "cell": [415, 452, 456, 459], "cell_lin": 459, "center": [304, 306, 363, 423, 424, 446], "center_y0": 424, "center_y1": 424, "central": [440, 446], "certain": [31, 53, 90, 185, 232, 234, 240, 311, 327, 346, 407, 412, 421, 438, 441, 447, 449, 450, 453, 455, 459, 461], "cesium": [396, 397, 398, 400, 401], "chai": 459, "chain": [38, 180, 182, 183, 184, 185, 320, 447], "challeng": [441, 455], "chanc": 439, "chang": [53, 183, 346, 347, 348, 401, 418, 427, 438, 439, 441, 443, 446, 448, 450, 452, 454, 459], "charact": 443, "characterist": 320, "charg": 443, "chebyshev": 12, "check": [31, 61, 136, 137, 138, 140, 141, 143, 150, 151, 154, 158, 310, 327, 329, 332, 333, 334, 335, 355, 357, 363, 372, 427, 428, 430, 438, 440, 441, 448, 450, 454, 455], "check_maximum": 61, "check_minimum": 61, "checker": 440, "checkout": 441, "chem": [438, 440, 452], "chemic": [339, 397, 400, 418, 440, 442, 447, 450, 452, 459], "cheminformat": [154, 438, 440], "chemistri": [143, 406, 408, 409], "child": [202, 203, 204, 205, 441], "chocol": 441, "choic": [242, 244, 380, 411, 418, 421, 428, 440, 447, 449, 451, 452, 453, 454, 455, 458], "choos": [178, 418, 419, 421, 423, 426, 427, 428, 437, 438, 443, 444, 446, 453, 457, 458], "chose": [427, 455], "chosen": [77, 187, 242, 244, 248, 376, 377, 401, 421, 440, 444, 447, 452, 454], "christoph": 459, "ci": [404, 434, 435, 440, 441], "circular": 452, "circumv": [439, 455], "cl": [49, 229, 233, 288, 323, 324, 329, 334, 365], "claim": 443, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 89, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 232, 234, 235, 236, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 288, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 302, 316, 317, 319, 320, 322, 323, 324, 329, 334, 338, 344, 361, 363, 378, 379, 382, 383, 401, 411, 412, 415, 421, 431, 440, 446, 447, 450, 451, 452, 453, 454, 455, 457], "classic": [421, 451], "classifi": 452, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 320, 363, 440], "classvalidationerror": [432, 439], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 251, 253, 255, 260, 264, 278, 280, 282, 284], "clean": [351, 352, 353, 439, 440, 441], "clear": [370, 459], "click": [421, 452], "clone": 441, "close": [242, 248, 299, 395, 412, 434, 435, 456], "closer": [13, 16, 372, 452], "closest": 373, "closest_el": 440, "closur": [240, 456], "cluster": [202, 203, 204, 205, 401, 440, 442, 460], "clustering_x": 440, "cmap": 413, "cn": [396, 397, 398, 400, 401], "co": 418, "co1": [396, 397, 398], "co2": [396, 397, 398], "co3": [396, 397, 398], "coars": [416, 430, 431, 432, 438], "coc": [416, 431, 432, 438], "cococ": [431, 432], "code": [259, 397, 416, 421, 427, 431, 432, 438, 439, 440, 443, 447, 448, 452, 456, 459, 461], "coeffici": [45, 47, 48, 403, 404, 419, 447], "coerc": 440, "collect": [31, 63, 64, 65, 106, 116, 117, 133, 157, 159, 167, 183, 185, 211, 219, 225, 226, 237, 244, 258, 312, 314, 316, 327, 328, 356, 357, 378, 380, 395, 401, 413, 418, 421, 424, 434, 435, 438, 440, 446, 448], "color": [413, 424], "column": [40, 41, 42, 96, 121, 124, 125, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 242, 244, 246, 248, 314, 315, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 383, 392, 393, 397, 400, 406, 407, 408, 409, 412, 418, 423, 424, 430, 434, 435, 440, 446, 454, 455, 456], "column_group": 315, "com": [276, 331, 353, 438, 440], "comb": 418, "combin": [44, 54, 157, 195, 211, 213, 219, 220, 221, 320, 339, 396, 397, 398, 406, 408, 411, 412, 418, 423, 438, 439, 443, 447, 449, 450, 451, 452, 453, 454, 456, 459, 461], "combinatori": [195, 461], "come": [13, 16, 421, 438, 446, 447, 450, 455, 459, 461], "command": 439, "comment": 440, "commerci": 443, "commit": [438, 440, 441], "common": [167, 415, 419, 440, 441, 443, 445, 446, 447, 452, 455], "commonli": 451, "commun": [443, 451, 459], "comp_df": [137, 140, 141, 143, 151, 154, 440], "comp_rep": [219, 415, 440, 454], "comp_rep_bound": [211, 213, 219, 440], "comp_rep_byt": [218, 461], "comp_rep_column": [136, 137, 138, 140, 141, 143, 150, 151, 154, 211, 213, 219, 440], "comp_rep_human_read": [218, 461], "comp_rep_shap": [218, 461], "compar": [157, 183, 395, 418, 419, 421, 424, 434, 438, 440, 441, 447, 449, 452, 458], "comparison": [412, 424, 434, 435, 453, 455], "compat": [133, 157, 187, 190, 193, 195, 196, 197, 200, 202, 203, 204, 205, 207, 208, 213, 214, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 330, 356, 391, 401, 406, 407, 408, 409, 411, 413, 423, 430, 440, 453, 457], "compens": 440, "compil": [439, 443], "complain": 441, "complaint": 441, "complement": [31, 354, 449], "complementari": 44, "complet": [75, 413, 418, 445, 447, 449, 451, 455], "complex": [13, 16, 125, 158, 304, 305, 306, 373, 418, 430, 434, 435, 441, 444, 445, 447, 449, 456, 459], "compli": 443, "complianc": 438, "complic": [418, 459], "compon": [69, 418, 419, 441, 444, 446, 447, 448, 449, 455, 457, 459], "compos": [115, 258, 440, 455], "composit": [104, 116, 117, 118, 258, 440, 460], "composite_a": 457, "composite_b": 457, "compositekernel": [116, 117, 118, 440], "compositesurrog": [251, 253, 255, 260, 264, 278, 280, 282, 284, 440, 445, 451, 457], "compound": 339, "comprehens": [438, 457], "compress": 455, "comput": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 86, 96, 100, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 193, 195, 211, 213, 218, 219, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 288, 294, 296, 302, 340, 374, 406, 407, 408, 409, 411, 418, 419, 423, 424, 430, 440, 443, 444, 446, 448, 452, 454, 455, 456, 460, 461], "computation": 195, "compute_ref_point": [13, 16], "concat": [403, 404, 412, 413, 423, 424, 427, 428, 434, 435], "concentr": [168, 169, 396, 397, 398, 400, 401, 406, 411, 412, 447], "concentrati": 406, "concentration_valu": 412, "concept": [314, 418, 451, 452, 455], "concis": 440, "concret": [440, 455], "conda": 440, "condit": [34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 346, 354, 397, 403, 407, 408, 409, 418, 424, 438, 440, 443, 459, 460], "conduct": [31, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 396, 397, 398, 438, 441, 446, 459], "confid": [8, 22, 401], "config": [415, 416, 429, 436, 440, 460], "config_json": 31, "configur": [13, 16, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 84, 85, 177, 184, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 240, 242, 248, 251, 253, 255, 256, 258, 260, 264, 270, 278, 280, 282, 284, 346, 380, 399, 400, 418, 425, 428, 432, 438, 439, 440, 443, 444, 445, 446, 447, 448, 452, 453, 454, 456, 458, 459, 460, 461], "confirm": 413, "conflict": [438, 441, 451], "conform": [154, 340, 452], "confront": [421, 438, 449], "conjunct": 457, "connect": [57, 346, 440, 448, 452, 458], "consequ": [398, 439, 447, 448, 453, 454, 456, 457], "consequenti": 443, "consid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 124, 137, 140, 141, 143, 151, 154, 156, 158, 183, 195, 213, 246, 346, 355, 356, 395, 418, 421, 423, 434, 435, 438, 440, 441, 445, 447, 449, 450, 451, 452, 455, 461], "consider": [213, 445], "consist": [178, 218, 413, 441, 443, 450], "consol": 439, "consolid": [440, 453], "consortium": 442, "conspicu": 443, "constant": [280, 288, 305, 423, 440, 441, 452, 454], "constitut": 443, "constrain": [440, 447, 458, 459], "constraint": [31, 34, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 79, 138, 195, 211, 213, 219, 317, 415, 416, 423, 430, 431, 432, 436, 438, 440, 442, 448, 452, 460], "constraint_1": 408, "constraint_2": 408, "constraint_3": 408, "constraints_augment": 213, "constraints_cardin": 211, "constraints_lin_eq": 211, "constraints_lin_ineq": 211, "constraints_nonlin": 211, "constru": 443, "construct": [31, 211, 213, 219, 260, 290, 395, 424, 426, 434, 435, 438, 440, 444, 447, 450, 455, 457, 460], "constructor": [202, 203, 204, 205, 213, 233, 278, 282, 284, 418, 426, 431, 432, 440, 444, 446, 449, 451, 452, 457, 460, 461], "consult": 438, "consum": [183, 411], "consumpt": 448, "cont_ind": 428, "cont_indic": [427, 428], "cont_paramet": 428, "cont_recommend": [187, 428], "contact": [438, 442], "contain": [13, 16, 31, 34, 40, 41, 42, 44, 65, 68, 73, 96, 121, 124, 125, 129, 131, 133, 137, 140, 141, 143, 151, 154, 156, 157, 158, 162, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 220, 221, 225, 240, 242, 244, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 294, 296, 302, 304, 305, 306, 314, 315, 330, 340, 344, 346, 348, 354, 355, 357, 363, 374, 380, 392, 393, 397, 398, 412, 413, 419, 421, 428, 434, 435, 439, 440, 441, 443, 446, 447, 449, 450, 453, 454, 455, 456, 461], "content": [157, 183, 213, 244, 347, 381, 440, 443, 455], "context": [75, 82, 156, 180, 182, 183, 184, 185, 193, 195, 240, 256, 258, 377, 411, 421, 426, 434, 435, 440, 446, 449, 450, 452, 455, 456, 457, 459, 461], "contextu": 459, "continu": [10, 15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 73, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 187, 195, 211, 213, 214, 219, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 401, 403, 406, 407, 408, 409, 419, 423, 424, 425, 428, 430, 436, 438, 440, 446, 448, 449, 453, 455, 456, 460], "continuous_subspac": 454, "continuouscardinalityconstraint": [63, 64, 211, 440, 460], "continuousconstraint": [37, 45, 211, 440, 447, 449], "continuouslinearconstraint": [211, 403, 404, 419, 440, 460], "continuouslinearequalityconstraint": 440, "continuouslinearinequalityconstraint": 440, "continuousnonlinearconstraint": [44, 211, 440], "continuousparamet": [150, 211, 440], "contour": 424, "contract": 443, "contrast": [219, 334, 419, 421, 445, 449, 451], "contribut": [438, 440, 443, 461], "contributor": [438, 443], "contributori": 443, "control": [13, 15, 16, 21, 157, 168, 195, 211, 219, 356, 423, 427, 438, 440, 443, 444, 447, 448, 451, 452, 453, 458, 460], "convei": 455, "conveni": [440, 454, 455, 457], "convent": 213, "converg": 450, "convers": [31, 184, 415, 426, 440, 443, 450, 457, 460], "convert": [28, 122, 215, 228, 321, 331, 335, 339, 342, 343, 358, 359, 364, 367, 370, 416, 431, 432, 440, 446, 448, 455, 456], "convert_sklearn": 415, "convert_sklearn_bayesian_ridg": 415, "convertibletofloat": [13, 16, 321], "cooki": 441, "coordin": [13, 16, 380], "copi": [156, 251, 253, 255, 260, 264, 278, 280, 282, 284, 412, 438, 440, 443, 461], "copyright": [438, 443], "core": [31, 211, 213, 214, 219, 246, 248, 251, 253, 255, 256, 258, 260, 264, 271, 278, 280, 282, 284, 401, 438, 440, 449, 458], "coregion": 459, "coretest": [440, 441], "corpu": 452, "correct": [31, 291, 413, 438, 440, 441, 455], "correctli": [418, 428, 440], "correl": [143, 154, 353, 452, 459], "correspond": [26, 31, 44, 121, 124, 129, 131, 156, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 232, 240, 242, 244, 251, 253, 254, 255, 260, 264, 278, 280, 282, 284, 304, 310, 330, 333, 335, 338, 339, 346, 349, 350, 356, 357, 358, 360, 392, 393, 395, 400, 401, 418, 421, 424, 428, 434, 435, 438, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "correspondingli": 31, "corrupt": 348, "cost": [397, 421], "costli": [213, 216, 222, 446], "could": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 151, 342, 401, 411, 412, 418, 419, 435, 440, 445, 447, 452, 456, 458, 459], "count": [311, 412, 418, 447], "counterclaim": 443, "counterpart": [330, 454], "coupl": 413, "cours": [434, 435, 441, 455, 459], "cousin": 447, "cov": [440, 441], "cover": [334, 346, 447, 449], "coverag": [440, 441], "cp": [396, 397, 398], "craft": 456, "crash": [439, 440], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 96, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 211, 213, 219, 220, 221, 236, 244, 251, 253, 255, 256, 258, 260, 264, 267, 272, 278, 280, 282, 284, 294, 296, 302, 344, 346, 349, 350, 363, 380, 400, 411, 412, 413, 418, 419, 424, 428, 429, 436, 437, 438, 439, 440, 441, 445, 447, 448, 449, 450, 452, 455, 456, 457, 458, 460, 461], "create_example_plot": [395, 397, 412, 413, 434, 435, 440], "create_from_config": [415, 416], "create_pi_plot": 413, "creation": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 157, 216, 219, 222, 407, 409, 415, 416, 454, 455, 460], "criteria": 413, "criterion": [412, 444], "critic": 440, "cross": [434, 443], "crucial": [438, 458], "cube": 447, "cuda": 439, "cultur": [452, 459], "curran": 459, "current": [10, 31, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 246, 248, 259, 309, 370, 412, 413, 418, 444, 445, 446, 447, 448, 449, 452, 456, 458, 459, 461], "curv": [304, 413, 423, 447, 458], "custom": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 136, 137, 138, 140, 141, 143, 146, 150, 151, 154, 157, 260, 291, 294, 296, 302, 330, 358, 394, 401, 405, 412, 421, 428, 436, 438, 440, 446, 447, 452, 453, 456, 459, 460, 461], "custom_blackbox": 395, "custom_conversion_funct": 415, "custom_filt": 447, "custom_funct": 406, "customari": 443, "customconstraint": 406, "customdiscreteparamet": [440, 450, 460], "customdisreteparamet": 440, "customencod": 143, "customonnxsurrog": [401, 415, 440], "cycl": [183, 438, 440, 449], "cyclic": 183, "d": [13, 16, 26, 56, 125, 314, 325, 374, 380, 413, 416, 431, 432, 434, 435, 438, 443, 454, 459], "d401": 406, "damag": 443, "daniel": 442, "darmstadt": [438, 442, 448], "dashboard": 440, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 72, 88, 96, 100, 124, 129, 131, 143, 151, 154, 177, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 242, 246, 248, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 296, 302, 311, 313, 317, 346, 348, 355, 357, 369, 370, 381, 385, 392, 393, 394, 395, 400, 401, 403, 404, 406, 407, 408, 409, 412, 416, 418, 423, 424, 427, 430, 431, 432, 434, 435, 436, 437, 438, 440, 444, 445, 446, 447, 448, 450, 452, 453, 455, 456, 457, 460, 461], "data_typ": 415, "databas": [31, 423, 438, 455], "dataclass": [411, 421], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 88, 96, 100, 121, 124, 129, 131, 137, 140, 141, 143, 151, 154, 157, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 220, 221, 224, 238, 239, 242, 244, 246, 248, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 296, 302, 310, 314, 315, 339, 340, 381, 392, 393, 395, 396, 400, 401, 406, 407, 408, 409, 412, 413, 415, 416, 418, 419, 423, 424, 427, 430, 434, 435, 440, 445, 446, 447, 449, 452, 460, 461], "datapoint": 440, "dataset": [183, 240, 456], "datatyp": 440, "date": 443, "dditiv": 450, "de": [231, 429, 438, 439, 440, 441, 446, 447, 453, 460], "deactiv": [438, 440, 448], "deal": [398, 445, 452, 456], "debug": 440, "decid": [151, 418, 421, 428, 444], "declar": [53, 57, 65, 205, 407, 441, 447], "decod": 415, "decor": [118, 288, 320, 349, 411, 440, 441, 456], "decorrel": [143, 154, 161, 431, 432, 452], "decreas": [183, 305, 423, 455, 459], "deduc": [403, 404, 427], "dedupl": 440, "deep": 412, "deepcopi": 440, "deeper": 450, "deepli": 457, "def": [395, 406, 411, 412, 413, 418, 421, 424, 434, 441, 447, 456], "default": [13, 16, 42, 96, 124, 143, 154, 157, 187, 193, 195, 202, 203, 204, 205, 211, 213, 219, 231, 251, 271, 274, 354, 395, 396, 398, 401, 416, 423, 428, 438, 440, 441, 446, 447, 448, 450, 451, 452, 460], "default_campaign": 395, "default_model": 260, "defaultkernelfactori": [401, 406, 407, 408, 409, 423, 430], "defaultscal": 440, "defend": 443, "defer": 440, "defin": [26, 31, 41, 44, 45, 52, 146, 156, 177, 183, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 219, 240, 264, 266, 267, 291, 348, 353, 354, 383, 396, 397, 398, 400, 406, 407, 408, 409, 415, 416, 421, 426, 440, 441, 443, 446, 447, 449, 452, 455, 456, 458], "definit": [211, 219, 334, 419, 424, 438, 440, 443, 451, 454], "degener": [347, 363, 440], "degr": 430, "degre": 455, "degree_c": [415, 416, 430], "deliber": 443, "delici": 441, "deliveri": 452, "demand": [31, 435], "demo": 440, "demonstr": [394, 395, 396, 399, 402, 405, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 425, 429, 430, 433, 434, 435, 440, 451, 454, 455, 459], "denot": 26, "densiti": 413, "depend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 53, 57, 87, 213, 219, 240, 305, 314, 397, 401, 405, 418, 419, 426, 436, 437, 439, 440, 441, 447, 448, 449, 450, 454, 456, 457, 458, 459, 461], "dependenciesconstraint": 440, "deprec": [67, 148, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 219, 224, 261, 320, 406, 408, 409], "deprecationwarn": [406, 408, 409, 412], "depth": 454, "deriv": [202, 203, 204, 205, 219, 334, 443, 447, 454], "descend": 305, "describ": [202, 203, 204, 205, 251, 253, 255, 260, 264, 278, 280, 282, 284, 401, 406, 411, 412, 419, 421, 423, 424, 441, 443, 445, 446, 447, 451, 452, 455, 456], "descript": 441, "descriptor": [154, 340, 440, 450, 452, 459], "deseri": [229, 233, 238, 430, 439, 440, 446, 460], "deserialize_datafram": 455, "design": [0, 21, 26, 242, 349, 411, 415, 418, 421, 443, 444, 447, 449, 450, 451, 453, 455], "desir": [124, 127, 350, 422, 423, 436, 438, 440, 444, 448, 450, 451, 453, 455, 458, 461], "desirabilityobject": [31, 423, 438, 440, 445, 446, 455, 457, 460], "desktop": 440, "despit": 440, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 96, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 164, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 242, 246, 251, 253, 255, 256, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 294, 296, 302, 307, 308, 354, 360, 363, 383, 396, 398, 403, 404, 423, 428, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459], "detect": [317, 355, 439, 441], "determin": [13, 16, 31, 44, 96, 185, 219, 334, 354, 367, 372, 380, 396, 418, 421, 440, 443, 448, 453], "determinist": 380, "detriment": 452, "dev": [438, 440, 441], "develop": [438, 440, 452, 456], "deviat": [6, 18, 288, 355, 415, 440, 446], "df": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 121, 124, 129, 131, 157, 211, 213, 219, 224, 239, 244, 314, 315, 339, 347, 351, 352, 353, 354, 356, 358, 360, 381, 395, 406, 421, 438, 447, 454, 455, 456], "df_y": 424, "dfa": [314, 315], "di": [396, 397, 398, 400, 401, 442], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 202, 203, 204, 205, 211, 213, 216, 219, 222, 232, 233, 234, 236, 246, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 308, 325, 328, 340, 346, 363, 383, 412, 415, 434, 435, 440], "dict_bas": [396, 397, 398, 400, 401], "dict_ligand": [396, 397, 398, 400, 401], "dict_solv": [396, 397, 398, 400, 401, 406, 407, 408, 409, 418, 447], "dictat": [121, 124, 129, 131, 195, 213, 434, 435], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 211, 213, 219, 232, 234, 236, 246, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 288, 294, 296, 302, 325, 328, 346, 363, 396, 397, 398, 400, 452, 456], "diff": 441, "differ": [13, 16, 55, 124, 195, 211, 213, 214, 219, 240, 248, 310, 315, 346, 348, 383, 397, 406, 411, 418, 421, 423, 424, 427, 428, 434, 435, 438, 440, 441, 443, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459], "differenti": [456, 459], "difficult": 459, "digit": 358, "dilemma": 421, "dim": [26, 403, 404, 413, 415, 427, 428, 434, 435], "dimens": [26, 380, 395, 403, 404, 413, 415, 426, 427, 434, 435, 440, 452, 454, 457, 459], "dimension": [13, 16, 125, 136, 137, 138, 140, 141, 143, 150, 151, 154, 274, 349, 380, 395, 434, 435, 440], "dimethylisoxazol": 459, "direct": [13, 16, 396, 397, 398, 400, 438, 440, 443, 449, 452, 461], "directli": [13, 16, 334, 435, 438, 440, 447, 451, 455, 457], "directori": [428, 440], "disabl": [251, 253, 255, 260, 264, 278, 280, 282, 284, 309, 406, 408, 409, 440, 446, 449], "disadvantag": 455, "disappear": 440, "disc_ind": 428, "disc_indic": [427, 428], "disc_paramet": 428, "disc_recommend": [187, 428], "discard": [8, 418], "disclaim": 443, "discourag": 446, "discret": [15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 73, 136, 137, 138, 140, 141, 143, 150, 151, 154, 187, 195, 202, 203, 204, 205, 207, 211, 213, 214, 218, 219, 248, 379, 400, 403, 409, 412, 413, 415, 423, 425, 428, 430, 435, 436, 438, 440, 444, 449, 450, 453, 455, 456, 460, 461], "discrete_param": [413, 434, 435], "discrete_spac": [403, 404, 428], "discrete_subspac": 454, "discretecardinalityconstraint": [440, 460], "discreteconstraint": [31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 219, 440, 447, 449], "discretecust": 406, "discretecustomconstraint": [406, 440, 460], "discretedep": 407, "discretedependenciesconstraint": [57, 65, 407, 418, 460], "discreteexcl": 408, "discreteexcludeconstraint": [408, 440, 449, 460], "discretelinkedparametersconstraint": [440, 460], "discretenolabelduplicatesconstraint": [57, 418, 440, 460], "discreteparamet": [151, 219, 220, 221, 440], "discretepermutationinvarianceconstraint": [418, 460], "discreteprod": 409, "discreteproductconstraint": [409, 440, 460], "discretesamplingmethod": [15, 195, 381, 440, 444], "discretesumc": 409, "discretesumconstraint": [403, 409, 418, 440, 460], "discuss": [423, 443, 447, 454, 456], "disjoint": 219, "disk": [440, 460], "displai": [358, 412, 443], "distanc": [151, 380], "distinct": [411, 446, 453], "distinguish": [347, 418, 440, 447, 452, 459], "distribut": [31, 164, 167, 251, 253, 255, 260, 264, 278, 280, 282, 284, 418, 423, 428, 438, 440, 443, 444, 445, 457], "distutil": 335, "div": 415, "divers": 457, "divid": 419, "divis": 374, "dll": 439, "dmac": [396, 397, 398, 400, 401], "dmf": 447, "do": [63, 213, 219, 259, 411, 415, 416, 418, 421, 428, 430, 431, 432, 434, 437, 438, 439, 443, 445, 447, 448, 449, 450, 452, 453, 455, 459, 460, 461], "do_baybe_work": 448, "doc": [101, 164, 320, 438, 440], "doc101": 441, "doc103": 441, "docstr": 440, "doctest": 440, "document": [31, 370, 415, 438, 440, 441, 442, 443, 446, 450, 456], "doe": [30, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 96, 156, 195, 240, 242, 244, 246, 251, 253, 255, 259, 260, 264, 278, 280, 282, 284, 291, 330, 339, 355, 370, 398, 401, 412, 415, 416, 418, 431, 432, 434, 435, 440, 441, 443, 445, 447, 451, 453, 456, 457, 459, 461], "doi": [276, 353], "domain": [251, 253, 255, 260, 264, 278, 280, 282, 284, 395, 438, 440, 454, 456], "don": [437, 449], "done": [31, 354, 355, 398, 400, 406, 407, 408, 409, 415, 416, 423, 430, 440, 444, 446, 447, 448, 449], "doubl": [370, 441, 448], "down": [455, 461], "downsid": 184, "draft": 440, "dramat": 459, "drastic": 452, "draw": [10, 113, 211, 419, 421, 426], "draw_arm": 421, "drawback": 451, "drawn": [21, 195], "drive": [413, 459], "driven": [346, 444], "driver": 439, "drop": [351, 352, 353, 357, 412, 440, 445, 447], "drug": 445, "dry_run": 31, "dtype": [13, 16, 125, 158, 304, 305, 306, 373], "due": [156, 311, 435, 438, 440, 444, 447, 448, 452, 453, 454, 455, 458], "duplic": [31, 57, 163, 317, 325, 440, 447], "durat": 445, "dure": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 213, 219, 240, 328, 380, 418, 421, 434, 435, 438, 439, 440, 441, 442, 446, 447, 448, 449, 450, 454, 455, 456, 457], "dynam": [421, 440, 455, 460], "d\u00fcbendorf": 442, "e": [8, 21, 26, 31, 34, 44, 53, 55, 56, 73, 96, 99, 143, 157, 158, 185, 213, 219, 240, 311, 317, 323, 324, 340, 346, 354, 355, 363, 388, 396, 397, 398, 416, 418, 419, 421, 438, 439, 440, 441, 444, 445, 447, 448, 450, 452, 453, 454, 455, 456, 459, 461], "e3fp": 148, "e3fpfingerprint": 148, "each": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 121, 124, 129, 131, 157, 177, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 213, 242, 244, 246, 248, 251, 253, 255, 259, 260, 264, 278, 280, 282, 284, 315, 340, 346, 347, 355, 395, 397, 398, 401, 413, 418, 419, 421, 423, 424, 428, 434, 435, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461], "eagerli": 440, "earli": [412, 440], "earlier": [31, 437, 439], "earn": 421, "earned_reward": 421, "easi": [339, 441, 455], "easier": [441, 445, 461], "easiest": [438, 441], "easili": [412, 438, 441, 446, 449, 452, 454, 455, 459], "ecfp": [148, 397, 440, 452], "ecfpfingerprint": 148, "ecosystem": 455, "edbo": [274, 276, 353, 440], "edbokernelfactori": [274, 440], "edg": 156, "edit": [438, 441], "editor": 459, "editori": 443, "edwin": 459, "effect": [55, 180, 182, 183, 184, 185, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 411, 412, 421, 435, 440, 444, 447, 452, 453, 456, 459, 461], "effici": [219, 418, 438, 440, 454], "effortlessli": 456, "ei": [3, 401], "either": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 214, 242, 248, 264, 288, 355, 397, 408, 423, 428, 438, 443, 451, 452, 453, 454, 456, 457], "elabor": 443, "elaps": 411, "elapsedtimeprint": 411, "electron": [442, 443], "electroshap": 148, "electroshapefingerprint": 148, "eleg": [434, 455], "element": [40, 41, 42, 52, 158, 248, 317, 327, 333, 344, 372, 373, 418, 434, 435, 440, 447, 456], "elev": 413, "elif": [427, 428], "elimin": [441, 444], "els": [334, 335, 395, 396, 397, 398, 403, 404, 406, 407, 409, 412, 413, 421, 424, 427, 428, 434, 435], "elsewher": 415, "emd": 442, "emdgroup": [307, 438], "emelin": 442, "emerg": 446, "empir": 421, "emploi": [31, 421, 453], "employe": [438, 448], "empow": 457, "empti": [100, 211, 213, 219, 226, 315, 330, 339, 354, 358, 392, 393, 418, 423, 428, 430, 440, 454], "empty_encod": [213, 219], "emptysearchspaceerror": 226, "emul": [21, 439, 440], "en": [101, 164], "enabl": [184, 309, 310, 396, 397, 398, 418, 434, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 458, 459], "encod": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 150, 151, 154, 213, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 338, 340, 396, 397, 398, 400, 401, 406, 407, 408, 409, 412, 416, 418, 421, 423, 430, 431, 432, 434, 435, 438, 440, 447, 454, 455, 459], "encompass": 446, "encount": [156, 180, 182, 183, 184, 185, 380, 439, 440, 441, 451], "end": [0, 306, 363, 412, 416, 421, 423, 430, 443, 447, 455], "endeavor": 444, "endpoint": [440, 448], "enforc": [371, 386, 440, 441, 452], "engin": [439, 453, 455, 456, 461], "enhanc": [26, 438], "enlarg": 452, "enough": [211, 455], "ensembl": 286, "ensur": [156, 157, 396, 397, 398, 418, 419, 438, 447, 455, 456], "enter": [78, 219, 454], "entir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 310, 363, 381, 440, 441, 444, 446, 448, 461], "entiti": 443, "entri": [31, 38, 41, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 234, 251, 253, 255, 260, 264, 278, 280, 282, 284, 315, 346, 355, 381, 398, 406, 407, 408, 409, 418, 437, 440, 447, 448, 449, 450, 458, 461], "enum": [127, 145, 146, 147, 148, 214, 271, 299, 300, 319, 379, 440, 455], "enumer": [126, 144, 298, 413, 434, 435, 451], "env": [440, 441], "envar_nam": 448, "environ": [309, 371, 386, 395, 396, 397, 398, 404, 406, 407, 409, 412, 413, 415, 421, 424, 434, 435, 438, 439, 440, 441, 460], "envvar": 307, "envvar_nam": 448, "eq": [406, 418], "equal": [45, 124, 185, 211, 421, 423, 430, 440, 447, 451, 454, 455, 458], "equat": [45, 447, 456], "equidist": 452, "equip": 447, "equival": [21, 34, 57, 404, 426, 444, 447, 456], "erg": 148, "ergfingerprint": 148, "erron": 440, "error": [183, 242, 244, 246, 261, 328, 357, 374, 398, 416, 421, 439, 440, 445, 447, 451, 453], "esian": 438, "especi": [441, 445], "essenti": [446, 453], "establish": [412, 434, 435, 459], "estat": 148, "estatefingerprint": 148, "ester": [396, 397, 398, 400, 401], "estim": [213, 218, 219, 251, 421, 440, 457, 460], "estimate_product_space_s": [213, 219, 461], "estimated_win_r": 421, "estimation_bia": 421, "estimation_vari": 421, "et": [397, 438, 452], "etc": [40, 41, 42, 138, 213, 294, 459], "ethanol": [418, 447], "euclidean": 380, "eval_during_augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_cr": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_model": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "evalu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 193, 195, 286, 287, 335, 427, 428, 440, 446, 448, 453, 456, 459], "even": [185, 288, 352, 434, 435, 443, 445, 446, 448, 452, 456, 457, 459, 461], "event": [31, 310, 412, 443], "everi": [445, 461], "everyth": [441, 447], "evolv": [413, 441], "ex": 450, "exabyt": 461, "exact": [31, 355, 411, 439, 440, 447, 451, 452, 457], "exactexplain": [94, 97, 450], "exactli": [13, 16, 44, 121, 124, 129, 131, 213, 418, 440, 445, 446, 454, 455], "examin": 446, "exampl": [13, 16, 156, 157, 244, 314, 315, 325, 334, 354, 394, 395, 399, 402, 405, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 424, 425, 426, 429, 433, 434, 435, 439, 440, 441, 442, 443, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461], "example_input_nam": 415, "exceed": 412, "exceedingli": 456, "except": [31, 330, 339, 343, 361, 362, 396, 397, 398, 412, 416, 431, 432, 438, 439, 440, 443, 449, 457], "excepthook": 439, "exceptiongroup": [63, 440], "excess": 461, "exclud": [31, 56, 351, 406, 407, 408, 409, 423, 430, 440, 443, 447, 460], "exclude_list": 353, "exclus": [54, 405, 436, 440, 443, 447, 456, 460], "execut": [31, 67, 242, 330, 395, 397, 439, 440, 441, 443, 448, 455, 456, 459], "exemplari": 446, "exercis": 443, "exhaust": [183, 195, 450, 453], "exist": [31, 118, 213, 310, 320, 330, 418, 439, 440, 441, 444, 446, 447, 449, 455, 457, 459], "exp_rep": [219, 406, 407, 408, 409, 418, 454], "exp_rep_byt": [218, 461], "exp_rep_human_read": [218, 461], "exp_rep_shap": [218, 461], "expect": [3, 4, 9, 11, 13, 14, 16, 17, 52, 75, 82, 256, 258, 266, 330, 349, 401, 407, 413, 415, 418, 419, 421, 432, 440, 441, 446, 447, 450, 451, 452, 455, 456, 458, 461], "expens": [10, 195, 403, 456], "experi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 177, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 240, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 396, 397, 398, 400, 401, 427, 428, 440, 444, 446, 447, 449, 451, 452, 453, 458, 459, 460], "experiment": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 100, 121, 124, 129, 131, 137, 140, 141, 143, 151, 154, 177, 180, 181, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 213, 218, 219, 240, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 294, 296, 302, 346, 348, 406, 407, 408, 409, 413, 423, 430, 438, 440, 444, 445, 447, 449, 451, 452, 454, 455, 456, 458, 459, 460, 461], "experimentalist": 437, "explain": [72, 95, 96, 97, 99, 100, 413, 440, 442, 457, 460], "explainer_cl": [96, 100, 450], "explan": [96, 100, 440, 446, 457], "explanation_index": [96, 450], "explicit": [157, 184, 411, 412, 416, 418, 426, 431, 432, 440, 441, 451, 455, 457, 459, 460], "explicitli": [211, 219, 411, 428, 435, 443, 449, 454, 459], "exploit": [8, 21, 421, 440], "explor": [8, 31, 421, 444, 453, 454, 459], "exploratori": 444, "exponenti": 219, "expos": [31, 411, 440], "exposur": 440, "expr": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "express": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 438, 440, 443, 447], "extend": [156, 449, 452, 459], "extens": [440, 453], "extra": [397, 438, 439, 440], "extract": [31, 180, 182, 183, 184, 185, 356, 413, 434, 450, 460], "extract_pi": 413, "f": [335, 395, 396, 397, 398, 403, 404, 406, 407, 408, 409, 411, 412, 413, 418, 419, 423, 426, 427, 428, 434, 435, 461], "f1": 456, "f2": 456, "fabian": 442, "face": [251, 253, 255, 260, 264, 278, 280, 282, 284, 419, 421], "facilit": 453, "fact": [21, 413, 418, 437, 447, 451], "factor": [13, 16, 157, 438, 446, 447, 461], "factori": [157, 211, 264, 265, 266, 267, 268, 274, 276, 326, 401, 406, 407, 408, 409, 423, 430, 440], "fail": [428, 432, 439, 440, 457], "failur": [296, 440, 443], "failure_valu": 296, "fairli": 451, "fake": [244, 346, 350, 400, 401, 415, 416, 423, 440, 445, 456, 460], "fall": [156, 185, 412, 446, 458], "fallback": [219, 365, 415, 440, 454], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 96, 100, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 182, 183, 184, 185, 211, 213, 219, 224, 251, 253, 255, 260, 264, 278, 280, 282, 284, 296, 305, 323, 324, 328, 334, 335, 344, 349, 354, 356, 357, 360, 392, 401, 406, 407, 408, 409, 423, 430, 431, 432, 438, 440, 448], "famili": 447, "familiar": [396, 397, 398, 401, 403, 404, 406, 407, 408, 409, 415, 416, 423, 427, 428, 430], "fang": 442, "fantasi": 10, "far": 446, "farthest": [207, 379, 380, 401, 438, 440, 442, 444, 453], "farthest_point_sampl": 440, "fashion": [304, 306], "fast": [406, 408, 409, 445, 454, 458], "faster": [219, 445], "fault": 91, "faulti": 439, "favicon": 440, "favor": 440, "fc": [396, 397, 398], "feasibl": [76, 446, 450], "featur": [96, 113, 154, 353, 438, 439, 440, 441, 447, 450, 457, 459], "fed": [438, 450], "feder": 442, "fee": 443, "feed": [424, 437, 438, 449, 459], "feedback": 442, "feel": 412, "few": [395, 421, 440, 441, 444, 452, 455, 457, 459, 461], "field": [233, 343, 344, 440, 459, 460], "fifti": 443, "fig": [413, 424], "figsiz": 424, "figur": 413, "file": [396, 397, 398, 415, 416, 428, 438, 440, 443, 448, 455, 459], "filenotfounderror": [396, 397, 398, 412], "fill": [31, 244, 413], "filler": 447, "filter": [31, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 213, 219, 351, 354, 406, 418, 440, 447, 449, 454, 459, 461], "filter_attribut": 440, "filter_df": [31, 440], "filterwarn": 412, "final": [395, 397, 400, 412, 418, 435], "find": [213, 328, 373, 438, 444, 446, 447, 451, 459], "fine": [416, 430, 431, 432, 438], "finer": [157, 438], "fingerprint": [148, 154, 338, 340, 438, 440, 442, 452], "finish": 445, "finit": [183, 240, 248, 362, 388, 421, 452, 456], "first": [213, 246, 372, 380, 395, 397, 400, 401, 406, 411, 412, 415, 416, 418, 423, 424, 428, 432, 434, 435, 438, 439, 440, 446, 447, 451, 452, 453, 454, 459, 461], "fit": [31, 205, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 381, 383, 396, 397, 398, 406, 407, 408, 409, 415, 423, 430, 440, 443, 445, 447, 452, 457], "fit_gpytorch_ml": 440, "fit_gpytorch_mll_torch": 440, "fitnr": [31, 423], "fitzner": [438, 442], "fix": [240, 267, 412, 413, 418, 421, 424, 427, 428, 441, 446, 452, 456, 459, 461], "flag": [26, 31, 53, 96, 100, 121, 124, 129, 131, 195, 213, 214, 219, 349, 356, 437, 440, 446, 448, 449, 450, 453], "flake8": 440, "flexibl": [411, 426, 440, 455, 456], "flexibli": [451, 453], "float": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 42, 44, 45, 47, 48, 107, 108, 109, 110, 111, 112, 113, 114, 118, 124, 125, 143, 150, 151, 154, 158, 161, 162, 168, 169, 170, 171, 172, 173, 174, 193, 195, 218, 219, 242, 246, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 288, 296, 297, 304, 305, 306, 311, 321, 342, 346, 347, 348, 353, 363, 367, 369, 370, 372, 373, 374, 385, 388, 389, 390, 411, 413, 415, 421, 423, 440, 441, 445, 446, 460], "float64": 385, "floattensortyp": 415, "fly": [184, 455, 457], "fn": 320, "focu": 446, "focus": [131, 424, 428, 438], "folder": [397, 438, 441, 448, 457], "follow": [158, 180, 182, 183, 184, 185, 213, 242, 244, 246, 396, 397, 398, 401, 403, 404, 406, 407, 408, 409, 411, 412, 416, 421, 423, 428, 431, 432, 434, 435, 438, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "footprint": [10, 213], "forbid": 391, "forc": [96, 98, 156, 195, 440, 441, 450, 453], "forest": [283, 284], "forgiv": 458, "fork": 441, "form": [219, 240, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 346, 437, 438, 443, 444, 446, 451, 452, 453, 454, 455, 456, 461], "formal": [419, 437], "format": [45, 308, 358, 364, 367, 415, 416, 430, 431, 438, 439, 440, 441, 446, 448, 455, 456], "format_except": 439, "former": [418, 440], "formul": [445, 459], "formula": 418, "forrest": 440, "found": [89, 157, 211, 219, 328, 338, 370, 373, 412, 418, 423, 438, 439, 441, 446, 447, 453, 459], "foundat": 453, "four": 418, "fourier": 113, "fourth": 447, "fp": [379, 440, 444], "fp_size": [148, 452], "fpsrecommend": [401, 415, 416, 430, 431, 432, 438, 445, 453], "frac": [435, 451], "frac1": 407, "fraction": [15, 108, 342, 412, 444, 447, 448], "fraction1": 407, "fraction_1": 447, "fraction_2": 447, "fraction_3": 447, "fractur": 447, "frame": [348, 450, 461], "frame1": 407, "frame2": 407, "frame_1": 447, "frame_2": 447, "framea": 407, "framea_a": 407, "frameb": 407, "framework": [446, 452], "free": [441, 443, 448], "freedom": 455, "freeli": 418, "frequenc": 113, "frequent": 421, "fresh": 412, "frictionless": 455, "friendli": 440, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 96, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 148, 150, 151, 154, 156, 157, 164, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 236, 244, 246, 248, 251, 253, 255, 258, 260, 264, 267, 272, 276, 278, 280, 282, 284, 288, 294, 296, 302, 305, 306, 330, 334, 335, 339, 348, 349, 351, 353, 363, 374, 381, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 421, 423, 424, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 439, 441, 443, 444, 445, 447, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461], "from_bound": [211, 440, 454], "from_campaign": [96, 450], "from_config": [31, 431, 432, 446], "from_datafram": [211, 213, 219, 440, 449, 454, 455, 461], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 363, 415], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 363, 415, 416, 430, 446, 455], "from_paramet": [211, 213, 219, 440], "from_preset": 264, "from_product": [211, 213, 219, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 423, 424, 426, 427, 428, 430, 431, 432, 434, 435, 438, 440, 447, 449, 454, 455, 456], "from_recommend": [96, 450], "from_record": [455, 456], "from_repl": [258, 457], "from_simplex": [219, 418, 440, 449, 454, 461], "from_surrog": [96, 450], "front": 451, "frontier": 424, "frozenset": [44, 211, 418], "fsspec": 440, "fulfil": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 412, 418, 419], "full": [26, 211, 370, 394, 436, 440, 446, 449, 450, 452, 459, 460], "full_factori": 211, "full_lik": 413, "full_lookup": [396, 397, 398], "fulli": [418, 438, 440, 448, 449, 456], "fulltest": 441, "func": 441, "func_nam": 434, "funci": 440, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 39, 45, 46, 52, 60, 62, 70, 81, 91, 93, 96, 112, 120, 123, 128, 130, 132, 155, 156, 160, 193, 195, 196, 212, 217, 223, 227, 228, 236, 237, 240, 241, 243, 245, 246, 247, 252, 259, 265, 270, 285, 289, 290, 293, 300, 303, 304, 305, 306, 307, 310, 311, 313, 316, 332, 336, 341, 345, 348, 350, 355, 356, 358, 361, 366, 368, 375, 378, 387, 400, 406, 407, 408, 409, 411, 413, 418, 421, 424, 430, 434, 435, 438, 439, 440, 444, 447, 449, 451, 453, 454, 456, 457, 458, 459, 460, 461], "function_nam": [434, 435], "functionalgroup": 148, "functionalgroupsfingerprint": 148, "fundament": [452, 455], "furo": 440, "further": [13, 16, 355, 418, 419, 430, 438, 445, 449, 453, 454, 457, 459, 460], "furthermor": [423, 445], "furyl": [396, 397, 398], "futur": [57, 213, 259, 406, 408, 409, 412, 434, 450, 458], "fuzzi": 310, "fuzzy_row_match": [310, 440], "g": [53, 55, 56, 73, 96, 99, 143, 157, 213, 219, 317, 340, 355, 421, 438, 439, 440, 441, 444, 445, 447, 448, 450, 452, 453, 454, 456, 461], "g1": 419, "g2": 419, "g3": 419, "gain": [219, 446, 450], "gamma": 169, "gammaprior": 440, "garbag": 440, "gather": [185, 434, 435, 444, 459], "gaussian": [101, 202, 253, 262, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 304, 401, 423, 440, 447, 453, 459], "gaussian_kd": 413, "gaussian_process": [103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 264, 266, 267, 271, 274, 276, 401, 440], "gaussianmixtureclusteringrecommend": 453, "gaussianprocesspreset": [264, 272], "gaussianprocesssurrog": [272, 401, 406, 407, 408, 409, 413, 423, 430, 431, 432, 440, 457], "gcf": [396, 398], "ge": 404, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 96, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 147, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 251, 253, 255, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 294, 296, 302, 308, 334, 340, 347, 363, 375, 383, 395, 401, 411, 418, 424, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 455, 456, 457, 458, 459, 460, 461], "geom_mean": [124, 127, 423, 451], "geometr": [127, 374, 423, 451], "germani": [438, 442, 448], "get": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 193, 195, 211, 264, 346, 401, 412, 418, 427, 428, 437, 438, 440, 445, 460, 461], "get_absolute_threshold": [44, 440], "get_acquisition_funct": [31, 193, 195, 440], "get_candid": [219, 412, 413], "get_cmap": 413, "get_comp_rep_parameter_indic": [213, 440], "get_current_recommend": [180, 182, 183, 184, 185, 440], "get_integration_point": 15, "get_invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_invalid_polar": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_lin": 412, "get_next_recommend": [180, 182, 183, 184, 185, 440], "get_non_meta_recommend": [180, 182, 183, 184, 185, 440], "get_parameters_by_nam": [211, 213, 219], "get_parameters_from_datafram": [211, 219], "get_subclass": 401, "get_surrog": [31, 96, 193, 195, 440, 450, 457], "get_transform_object": [360, 440], "get_transform_paramet": 440, "get_valid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 440], "getawai": 148, "getawayfingerprint": 148, "ghosecrippen": 148, "ghosecrippenfingerprint": 148, "git": [438, 441], "github": [276, 307, 331, 353, 415, 440, 441, 442], "give": [415, 416, 418, 435, 443, 446, 447, 451, 455], "given": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 40, 41, 42, 44, 65, 89, 96, 99, 100, 121, 124, 129, 131, 133, 154, 156, 157, 158, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 225, 240, 244, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 288, 299, 311, 315, 323, 324, 328, 329, 330, 333, 334, 337, 338, 342, 344, 346, 349, 356, 363, 364, 372, 374, 380, 383, 406, 407, 408, 409, 412, 418, 421, 423, 428, 434, 435, 440, 445, 446, 454, 456, 457], "glass_transition_tempc": 452, "global": [15, 376, 440, 460, 461], "gmean": 374, "gmm": 202, "go": [314, 418, 438], "goal": [395, 421, 451, 459], "goe": 457, "good": [346, 412, 423, 446, 448, 458], "good_interv": 346, "good_reference_valu": 346, "goodwil": 443, "googl": [440, 441], "govern": 438, "gp": [251, 253, 255, 260, 264, 278, 280, 282, 284, 440], "gpytorch": [101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 164, 166, 168, 169, 170, 171, 172, 173, 174, 440], "grab": 437, "gradient": [10, 195, 282, 440, 448, 453], "grant": [440, 443], "granular": [416, 430, 431, 432, 438], "granularity_coar": 430, "granularity_fin": 430, "great": [421, 455], "greater": [185, 195], "greatli": 441, "greedi": [195, 440, 453], "grid": [424, 434, 435], "grid_d": [434, 435], "grossli": 443, "ground": 440, "group": [87, 195, 315, 325, 383, 419, 438, 440, 446, 450], "groupbi": [246, 248], "grow": 461, "gt": [409, 418], "gu16": 452, "guarante": [440, 447, 448, 453], "guid": [400, 438, 439, 440, 441, 444, 446, 449, 451, 454, 456, 459], "guidelin": [440, 441, 444], "ha": [31, 53, 76, 80, 81, 96, 183, 211, 213, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 314, 328, 330, 334, 347, 380, 381, 397, 401, 406, 407, 408, 409, 418, 423, 428, 430, 438, 440, 441, 443, 445, 446, 447, 450, 452, 454, 455, 456, 458, 459], "had": [240, 447, 452, 456], "half": [151, 170, 171, 363, 428, 445], "halfcauchyprior": 440, "halfnormalprior": 440, "hamster": 459, "hand": [45, 154, 419, 421, 424, 434, 435, 438, 446, 455, 457], "handi": 447, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 96, 129, 138, 242, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 357, 361, 406, 407, 421, 423, 440, 446, 451, 461], "happen": [88, 183, 423, 428, 435, 439, 440, 441, 454, 455, 459], "happili": 451, "hard": [440, 459, 461], "harmless": 443, "hartmann": [413, 434, 435], "hasattr": [403, 404, 427, 428], "hash": [308, 438, 448, 452], "hashabledict": 440, "have": [26, 31, 38, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 121, 124, 129, 131, 154, 156, 205, 213, 240, 259, 291, 315, 325, 328, 346, 355, 356, 370, 396, 397, 400, 401, 406, 407, 411, 413, 418, 419, 421, 423, 427, 428, 434, 435, 438, 439, 440, 441, 443, 444, 445, 446, 447, 449, 451, 452, 453, 455, 456, 457, 459, 461], "head": 440, "header": 344, "heart": 459, "heatmap": [96, 98], "help": [421, 455, 456, 459], "helper": [411, 413, 415, 418, 455], "henc": [339, 418, 421, 430, 445, 447, 452, 461], "here": [56, 370, 396, 398, 400, 403, 404, 411, 412, 416, 418, 419, 427, 428, 430, 434, 435, 437, 438, 439, 445, 447, 449, 451, 452, 453, 454, 455, 456, 458, 459], "herebi": 443, "herein": [443, 446], "heurist": 195, "hierarch": 455, "hierarchi": [89, 440, 441, 446, 455], "high": [274, 395, 421, 440, 441, 444, 446, 447, 452, 455], "higher": [154, 421, 439, 447, 450, 453], "highest": [444, 455], "highlight": 459, "hint": 441, "histogram": 311, "histor": 452, "histori": 441, "hoc": 451, "hold": [44, 325, 443, 455], "home": [406, 408, 409], "homepag": [438, 440], "hood": 452, "hook": [49, 219, 228, 232, 330, 436, 439, 440, 441], "hopp": [438, 442], "host": [438, 440, 448], "hostnam": [308, 448], "hot": [145, 397, 421, 438, 440, 452], "how": [54, 242, 244, 355, 380, 395, 396, 398, 399, 400, 401, 402, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 428, 430, 431, 432, 435, 438, 446, 447, 448, 451, 456, 457, 458, 459], "howev": [157, 219, 259, 330, 411, 418, 421, 427, 428, 437, 439, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 454, 455, 456, 457, 459, 461], "hrovatin": 442, "html": [101, 164, 307, 320, 370, 415, 440], "http": [101, 164, 276, 307, 320, 331, 353, 370, 438, 440, 443, 459], "hue": [395, 396, 397, 398, 412, 434, 435], "human": [218, 367, 430, 440, 442, 455], "hybrid": [25, 26, 73, 186, 187, 195, 208, 213, 214, 401, 402, 406, 407, 408, 409, 423, 425, 430, 436, 438, 440, 453, 454], "hybrid_recommend": 428, "hybrid_sampl": [195, 453], "hyperrectangl": [211, 454], "hypervolum": [13, 16], "hypothesi": [438, 440, 441], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 72, 73, 78, 80, 81, 83, 85, 96, 99, 100, 115, 118, 125, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 158, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 226, 240, 242, 244, 246, 248, 251, 253, 255, 256, 258, 259, 260, 264, 274, 278, 280, 282, 284, 288, 291, 299, 304, 305, 306, 309, 310, 311, 315, 318, 319, 320, 323, 324, 328, 330, 331, 333, 334, 335, 338, 339, 344, 346, 347, 348, 349, 350, 354, 355, 356, 358, 362, 363, 370, 372, 373, 380, 381, 388, 392, 393, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 421, 423, 427, 428, 430, 431, 432, 434, 435, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461], "ideal": [445, 447, 456], "ident": [157, 314, 315, 449, 452, 455, 459], "identif": 421, "identifi": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 246, 325, 339, 355, 356, 412, 440, 447, 450, 451, 452, 454, 455, 456, 459], "idx_offset": 45, "ignor": [121, 124, 129, 131, 183, 195, 213, 242, 244, 246, 328, 353, 398, 412, 428, 440, 447, 455, 461], "ignore_exampl": 440, "ignore_list": 352, "ii": 443, "iii": 443, "illustr": [424, 426, 449], "iloc": 445, "imag": [421, 440], "imagin": [418, 421], "immedi": [411, 446], "immut": 440, "impact": [397, 435, 448], "imperfect": 348, "implement": [21, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 125, 177, 188, 248, 256, 332, 406, 412, 418, 434, 440, 441, 442, 444, 450, 453, 454, 456, 459], "impli": [418, 438, 443, 447, 452], "implicitli": 455, "import": [13, 16, 87, 96, 124, 244, 412, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "impos": [418, 419, 447], "imposs": [438, 448, 449, 455], "improv": [3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 401, 404, 410, 412, 436, 438, 440, 443, 448], "imput": [242, 244, 394, 398, 436, 438], "impute_mod": [242, 244, 246, 398, 456], "inabl": [438, 443], "inaccuraci": 438, "inact": [44, 156, 158, 195, 211, 440], "inactive_parameter_combin": [44, 211, 440], "inc": 459, "incident": 443, "includ": [63, 65, 121, 124, 129, 131, 156, 185, 242, 323, 324, 352, 396, 407, 416, 418, 431, 432, 435, 440, 441, 443, 444, 445, 447, 449, 461], "inclus": 443, "incom": 455, "incompat": [69, 70, 71, 72, 73, 74, 100, 260, 408, 447], "incompatibilityerror": 31, "incompatibleacquisitionfunctionerror": 445, "incompatibleexplainererror": 450, "incomplet": [440, 445], "inconsist": 440, "incorpor": [443, 445, 457, 461], "incorrect": 440, "incorrectli": 440, "increas": [10, 183, 246, 305, 306, 423, 434, 435, 440, 444, 452, 459], "increment": 219, "incur": 443, "inde": 446, "indefinit": [183, 242], "indemn": 443, "indemnifi": 443, "indent": [344, 440], "independ": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 187, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 415, 440, 451, 453, 456, 457], "independentgaussiansurrog": [260, 278, 280, 282, 440], "index": [31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 96, 213, 246, 258, 314, 315, 354, 355, 415, 416, 423, 428, 430, 440, 445, 450, 452, 454, 456], "indexkernel": 440, "indic": [13, 16, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 91, 96, 99, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 158, 180, 182, 183, 184, 185, 213, 251, 253, 255, 260, 264, 278, 280, 282, 284, 314, 315, 318, 319, 349, 380, 418, 428, 440, 443, 445, 449, 453, 456, 457], "indirect": [323, 324, 443], "indistinguish": 418, "individu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 53, 54, 116, 117, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 242, 258, 358, 412, 419, 424, 443, 446, 449, 451, 453, 459], "induc": [44, 421], "industri": 459, "ineffici": 219, "inequ": [45, 211, 454], "inf": [8, 406, 407, 408, 409, 430], "infeas": [447, 449], "infer": [157, 260, 434, 435, 440, 454], "inferencesess": 260, "infin": 162, "infinit": [183, 184, 326, 362, 388, 389, 440, 452], "influenti": 459, "info": [311, 440], "inform": [26, 138, 294, 356, 396, 397, 398, 413, 418, 427, 428, 435, 438, 440, 441, 443, 445, 448, 449, 452, 454, 459, 460], "infring": 443, "ingest": [219, 242, 440, 452, 453], "ingredi": [418, 419, 447], "inher": [21, 156, 251, 253, 255, 260, 264, 278, 280, 282, 284, 418, 457], "inherit": 441, "init": 290, "initi": [107, 108, 109, 110, 111, 112, 113, 114, 118, 185, 187, 195, 202, 203, 204, 205, 207, 219, 242, 246, 310, 380, 394, 406, 407, 408, 409, 412, 413, 423, 430, 435, 436, 440, 442, 445, 446, 448, 452, 453, 455, 456, 459], "initial_data": [242, 246, 396, 435, 456], "initial_recommend": [185, 401, 412, 413, 415, 416, 421, 430, 431, 432, 438, 453], "initial_recommender_cl": 440, "initial_strategi": 440, "initial_typ": 415, "inject": 455, "inner": [178, 354, 450, 453, 455], "inplac": [397, 434, 435, 461], "input": [40, 41, 42, 125, 137, 140, 141, 143, 151, 154, 211, 213, 219, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 294, 296, 302, 304, 325, 342, 343, 348, 349, 350, 354, 357, 363, 365, 372, 380, 392, 393, 395, 415, 423, 424, 434, 435, 440, 451, 455, 456, 459], "input_dim": 415, "input_label": 349, "inputtransform": 383, "insid": [412, 415, 416, 439, 455], "insight": [96, 412, 438, 440, 442, 460], "inspect": [334, 411, 418], "instabl": [440, 447], "instal": [440, 441, 448, 450, 452, 461], "instanc": [40, 41, 42, 53, 56, 96, 185, 213, 346, 407, 412, 418, 419, 438, 439, 441, 445, 446, 447, 448, 450, 452, 454, 455, 456, 461], "instanti": [260, 412, 446], "instead": [180, 182, 183, 184, 185, 310, 339, 349, 357, 406, 408, 409, 438, 439, 440, 446, 447, 451, 452, 455, 456, 458, 459, 461], "institut": [442, 443], "instruct": [438, 440, 458, 460], "instrument_nam": 311, "int": [10, 13, 15, 16, 21, 31, 34, 44, 45, 51, 96, 103, 104, 105, 108, 110, 111, 112, 113, 114, 121, 124, 125, 129, 131, 145, 158, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 242, 246, 248, 296, 297, 304, 305, 306, 311, 350, 358, 373, 376, 377, 380, 381, 383, 406, 408, 409, 418, 421, 423, 435, 441, 452], "integ": [34, 145, 213, 246, 428, 440, 441, 452], "integr": [15, 440, 441, 444, 446], "intend": [400, 411, 434, 441, 453], "intens": 452, "intention": 443, "interact": [30, 31, 400, 438, 439, 446, 449, 455], "interchang": 418, "interconnect": 446, "interest": [446, 450, 451, 452, 461], "interfac": [177, 256, 266, 411, 413, 440, 443, 446, 449, 450], "intermedi": [205, 380], "intern": [31, 45, 57, 183, 395, 412, 423, 440, 445, 447, 448, 452, 453, 454, 455], "internet": 438, "internship": 442, "interplai": 440, "interpol": [108, 274, 440], "interpret": [13, 16, 213, 240, 342, 416, 418, 431, 432, 435, 448, 454, 456], "interrupt": 67, "intersect": 428, "interv": [31, 44, 150, 156, 158, 251, 253, 255, 260, 264, 278, 280, 282, 284, 302, 304, 305, 306, 423, 440, 446, 452, 455, 458], "intrins": 459, "introduc": [439, 440, 447, 452, 453, 456], "intuit": [446, 450], "invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 77, 219, 339, 381, 416, 431, 439, 446, 447, 454], "invalid_config": 432, "invalid_surrogate_model": 416, "invalid_typ": 432, "invari": [53, 56, 57, 314, 315, 447], "invers": [232, 455], "invert": [31, 354], "investig": [240, 456, 457], "invok": [456, 460, 461], "involv": [31, 219, 258, 411, 418, 438, 448, 450, 451, 452, 455, 459], "io": 307, "irrelev": [418, 440, 447], "irrevoc": 443, "is_bound": [363, 440], "is_cardinality_fulfil": 440, "is_continu": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 136, 137, 138, 140, 141, 143, 150, 151, 154], "is_degener": 363, "is_discret": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 136, 137, 138, 140, 141, 143, 150, 151, 154], "is_empti": [211, 219, 440], "is_eq": 45, "is_finit": 440, "is_fully_unbound": 363, "is_half_bound": 363, "is_in_rang": [136, 137, 138, 140, 141, 143, 150, 151, 154], "is_inact": 440, "is_left_bound": 363, "is_mc": 440, "is_multi_output": [121, 124, 129, 131, 440], "is_numer": [136, 137, 138, 140, 141, 143, 150, 151, 154, 440], "is_right_bound": 363, "is_stat": [180, 182, 183, 184, 185, 440, 449], "iso": 415, "isol": 446, "isoxazol": 459, "issu": [259, 320, 331, 440, 443, 456, 461], "item": [41, 136, 137, 138, 140, 141, 143, 150, 151, 154, 418, 421, 434, 435, 452], "iter": [13, 16, 31, 44, 150, 183, 184, 211, 213, 242, 259, 302, 321, 326, 346, 348, 350, 364, 392, 393, 396, 406, 407, 408, 409, 412, 413, 421, 434, 435, 438, 440, 444, 446, 452, 453, 456, 457, 461], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 211, 213, 219, 236, 248, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 311, 314, 322, 330, 334, 346, 363, 367, 395, 401, 411, 413, 418, 419, 421, 435, 438, 439, 441, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 461], "itself": [251, 253, 255, 260, 264, 278, 280, 282, 284, 411, 434, 439, 459], "j": [397, 438, 452, 459], "jackiepho": [396, 397, 398], "januari": 443, "javadi": 442, "jin": 442, "join": [354, 439], "joint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 193, 195, 258, 446, 457], "joint_acq_valu": 446, "joint_acquisition_valu": [31, 193, 195, 440, 446], "jointli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 424, 446], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 363, 415, 416, 430, 431, 440, 460], "json_str": 455, "juli": 442, "julian": 442, "jump": [440, 459], "jupyt": 415, "just": [421, 437, 441, 455], "k": [151, 203, 380, 395, 396, 397, 398, 400, 401, 403, 404, 412, 418, 424, 426, 427, 428, 440, 449, 453, 461], "karin": 442, "kde": 413, "keep": [52, 154, 211, 219, 412, 440, 441], "kei": [325, 346, 397, 441, 450], "kept": [354, 452, 457], "kernel": [103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 264, 265, 266, 267, 268, 274, 276, 401, 406, 407, 408, 409, 423, 430, 440, 447, 459], "kernel_factori": [103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 264, 266, 267], "kernel_or_factori": 264, "kernelexplain": [94, 96, 97, 100, 450], "kernelfactori": [264, 267, 268, 274, 276, 440], "keyword": [96, 154, 398, 401, 428, 435, 440, 445, 447, 454, 456], "kgaa": [438, 442, 448], "kian": 459, "kickstart": 455, "kind": [195, 438, 440, 443, 447, 452, 453], "kiter": [406, 407, 408, 409, 423], "klekotaroth": 148, "klekotarothfingerprint": 148, "kmean": 401, "kmeansclusteringrecommend": [401, 453], "knob": 438, "know": [421, 431, 438, 439, 451, 455, 459], "knowledg": [8, 10, 438, 440, 459], "known": [447, 449, 457, 459], "koller": 459, "kwarg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 107, 109, 111, 116, 117, 118, 166, 168, 169, 170, 171, 172, 173, 174, 177, 197, 256, 261, 266, 340, 350, 362], "kwargs_conform": [154, 340, 452], "kwargs_fingerprint": [154, 340, 452], "l0": 34, "l1": 452, "l664": 276, "label": [56, 57, 143, 154, 311, 349, 418, 419, 424, 438, 440, 447, 449, 454, 456], "labelpad": 413, "laboratori": 424, "laggner": 148, "laggnerfingerprint": 148, "lambda": [406, 408, 409, 412, 418, 434, 457], "lanat": 450, "land": 440, "languag": [320, 419, 438], "larg": [154, 219, 403, 404, 419, 440, 448, 452, 456, 461], "larger": [108, 151, 381, 401, 408, 446, 447, 455, 459], "largest": [380, 421, 444], "last": [183, 421, 441, 446, 453], "last_call_tim": 411, "lastli": 413, "latent": 452, "later": [151, 439, 445, 446, 455], "latest": [184, 438, 441, 446], "latter": [21, 31, 314, 334, 412, 418, 446, 451, 459], "law": [438, 443], "lawsuit": 443, "layer": 148, "layeredfingerprint": 148, "layout": 440, "lazi": [221, 384, 440], "lazili": [440, 448], "lazyfram": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 221], "le": 404, "le_method": 441, "lead": [86, 423, 440, 455], "lean": 441, "learn": [15, 247, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 401, 406, 407, 408, 409, 421, 423, 430, 434, 436, 438, 440, 447, 450, 452, 457, 458, 460], "least": [158, 183, 419, 438, 443, 445, 446], "leav": 455, "lee": 442, "left": [83, 84, 174, 242, 347, 355, 363, 407, 424, 440, 451], "left_df": 355, "leftov": 440, "legal": 443, "legend": [396, 398, 424], "len": [407, 412, 413, 418, 419, 421], "length": [109, 183, 184, 251], "lengthi": 446, "lengthscal": [108, 109, 110, 112, 113, 114], "lengthscale_initial_valu": [108, 109, 110, 112, 113, 114], "lengthscale_prior": [108, 109, 110, 112, 113, 114], "leq": 34, "less": [8, 315, 350, 412, 413, 421, 446, 461], "let": [395, 397, 411, 412, 413, 415, 416, 418, 419, 424, 426, 435, 438, 445, 447, 451, 455], "level": [348, 440, 441, 445, 446, 447, 453, 455], "leverag": [412, 445, 446, 453], "li": [158, 452], "liabil": 443, "liabl": 443, "lib": 439, "librari": 439, "licensor": 443, "lie": [31, 251, 253, 255, 260, 264, 278, 280, 282, 284, 346], "liebig": 442, "life": [438, 441, 442, 461], "lifecycl": 446, "ligand": [396, 397, 398, 400, 401, 412, 438, 450, 452], "ligand_data": 412, "ligand_smil": 412, "like": [13, 16, 158, 205, 246, 317, 413, 418, 421, 438, 439, 440, 441, 445, 446, 447, 449, 455, 456, 459, 461], "likelihood": 251, "lime": [96, 99, 450], "limetabular": [94, 95, 450], "limit": [8, 274, 311, 413, 438, 442, 443, 447, 454, 460], "line": [344, 363, 396, 398, 412, 421, 440, 441, 444, 446, 452, 456, 459], "linear": [45, 107, 211, 278, 300, 305, 401, 402, 423, 436, 440, 441, 450, 454, 458], "linear_model": 415, "linear_regressor": 415, "linearkernel": 440, "linearli": [274, 305, 306, 423, 440], "lineplot": [395, 396, 397, 398, 412, 434, 435], "lingo": 148, "lingofingerprint": 148, "link": [55, 439, 440, 443, 452], "linspac": [406, 407, 408, 409, 413, 415, 416, 418, 424, 427, 428, 430, 434, 435, 461], "lint": [438, 440, 441], "linter": [440, 441], "list": [34, 35, 36, 37, 38, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 157, 163, 183, 184, 211, 213, 219, 220, 221, 224, 225, 226, 242, 246, 248, 310, 323, 324, 325, 333, 340, 346, 351, 352, 353, 356, 380, 396, 401, 406, 407, 408, 409, 413, 418, 419, 421, 423, 427, 428, 435, 438, 440, 441, 443, 447, 451, 452, 453, 454, 456], "liter": [31, 96, 183, 242, 244, 246, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 348, 380, 441], "literatur": 440, "litig": 443, "littl": 439, "live": 457, "liver": [456, 459], "ll": 449, "load": [384, 412, 415, 431, 432, 439, 440], "loc": [172, 173, 396, 398, 424, 445], "local": [439, 441, 448, 450, 460], "locat": [13, 16, 172, 173, 445, 448, 459], "lockfil": 440, "log": [172, 311, 401, 438, 448], "logarithm": [4, 11, 13, 14, 374], "logei": [4, 440], "logic": [178, 258, 346, 349, 395, 440, 447, 453, 456, 461], "lognormalprior": 440, "logo": 440, "long": [446, 455, 456], "longer": [156, 440], "look": [244, 401, 418, 421, 439, 444, 446, 447, 449, 450, 455, 456, 458], "look_up_target": 242, "lookup": [240, 242, 246, 248, 349, 355, 394, 395, 413, 424, 427, 436, 440, 450, 460], "lookup_df": 244, "lookup_test_task": 435, "lookup_training_task": 435, "lookup_valu": [403, 404, 413, 427, 428], "lookup_withmiss": 398, "loop": [240, 242, 248, 406, 407, 408, 409, 412, 423, 440, 445, 450, 456, 461], "loss": 443, "lost": 455, "lot": 426, "low": [274, 421, 439, 440, 450, 452, 455], "lower": [158, 174, 304, 305, 306, 363, 396, 398, 413, 423, 434, 435, 447, 452, 458], "lower_bound": 454, "lower_threshold": 158, "lst_exclud": 351, "lt": 439, "luxuri": 446, "m": 418, "m1": 439, "mac": 439, "macc": 148, "maccsfingerprint": 148, "machin": [421, 438, 439, 441, 444, 448, 452, 458, 459], "machineri": [21, 195, 439, 441, 449, 459, 461], "made": [31, 87, 242, 380, 398, 438, 439, 443, 447, 448, 456], "magic": 459, "magnitud": [347, 348, 461], "mai": [31, 44, 121, 124, 129, 131, 213, 330, 437, 438, 443, 446, 449, 455, 456, 457], "mail": 443, "main": [30, 31, 438, 440], "maintain": [288, 441, 449, 451], "major": [440, 456], "make": [57, 195, 251, 253, 255, 260, 264, 278, 280, 282, 284, 286, 287, 288, 320, 347, 349, 396, 398, 401, 403, 418, 419, 438, 439, 440, 441, 443, 445, 446, 447, 449, 450, 452, 455, 457, 459, 461], "make_explainer_for_surrog": 96, "malfunct": 443, "manag": [30, 211, 212, 213, 219, 377, 440, 443, 456], "mandatori": [437, 440, 458], "mani": [195, 381, 418, 427, 428, 438, 446, 452, 455, 458, 459], "manipul": [440, 448], "manner": 448, "manual": [428, 439, 440, 455, 457], "map": [143, 148, 154, 244, 246, 258, 304, 305, 306, 328, 349, 383, 396, 397, 398, 423, 456, 458], "mapfingerprint": 148, "mapl": [94, 95, 96, 99, 450], "margin": 440, "mark": [443, 446, 459, 460], "markdown": [416, 431, 432, 440], "marker": [395, 396, 397, 398, 412, 434, 435, 440], "markers": [395, 397, 412, 424, 434, 435], "market": 421, "marketplac": 440, "martin": [438, 442], "mask_bad1": 406, "mask_bad2": 406, "mask_bad3": 406, "mask_good": [406, 447], "mass": 168, "master": 276, "match": [31, 88, 90, 137, 140, 141, 143, 151, 154, 157, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 294, 296, 299, 302, 310, 328, 330, 355, 356, 392, 411, 413, 423, 428, 438, 440, 445, 446, 449, 451, 455, 456, 460], "match_attribut": 440, "match_targeta": 458, "match_targetb": 458, "materi": [421, 442, 459], "matern": 108, "maternkernel": 440, "math": [412, 418], "mathemat": 440, "matmin": 439, "matplotlib": [396, 398, 413, 424, 440], "matter": [418, 426, 441, 451], "max": [244, 299, 347, 396, 397, 398, 400, 401, 406, 407, 408, 409, 412, 413, 415, 416, 421, 423, 424, 430, 431, 432, 438, 440, 451, 455, 456, 460], "max_cardin": [34, 44, 51, 447], "max_column": [358, 418], "max_colwidth": 358, "max_n_subspac": [195, 440, 447], "max_nonzero": 219, "max_row": [358, 418], "max_sum": [219, 418, 454], "max_target": 458, "max_yield": [396, 398], "maxim": [6, 13, 16, 299, 400, 413, 421, 423, 438, 440, 450, 458], "maximum": [6, 34, 44, 51, 61, 154, 195, 211, 213, 219, 304, 358, 418, 419, 423, 440, 447, 452, 454], "mc": [421, 445], "md": 440, "me2pph": [396, 397, 398], "mean": [5, 8, 21, 31, 57, 127, 203, 240, 242, 244, 246, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 288, 374, 398, 401, 415, 421, 423, 424, 440, 441, 443, 444, 445, 446, 447, 449, 451, 452, 453, 455, 457, 460], "meaning": 451, "meaningless": [418, 444], "meanpredictionsurrog": [288, 401, 457], "meantim": [441, 447], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 75, 82, 96, 156, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 240, 242, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 294, 296, 302, 310, 346, 350, 355, 396, 397, 398, 401, 403, 404, 406, 407, 408, 409, 411, 412, 413, 423, 427, 428, 430, 437, 438, 440, 441, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460], "mechan": [31, 67, 124, 125, 127, 240, 243, 244, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 330, 354, 365, 380, 395, 411, 412, 413, 434, 435, 440, 443, 449, 450, 452, 454, 455, 457, 459, 460], "mechanist": 438, "media": [443, 452, 459], "medic": 445, "mediocr": 458, "medium": [416, 430, 438, 443, 452], "medoid": [204, 440, 453], "meet": [346, 443], "mem_estim": 461, "member": [334, 447, 452], "memori": [10, 213, 218, 219, 440, 448, 460], "memorys": [213, 219, 461], "mention": 444, "merchant": 443, "merck": [438, 442, 448], "mere": [443, 451], "merg": 441, "meshgrid": [424, 434, 435], "messag": [88, 412], "meta": [31, 83, 180, 182, 183, 184, 185, 188, 406, 407, 408, 409, 423, 430, 438, 440, 460], "metadata": [31, 211, 219, 308, 440], "metarecommend": [182, 183, 184, 185, 440, 449], "methanol": 418, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 91, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 236, 251, 253, 255, 256, 258, 260, 264, 266, 267, 274, 276, 278, 280, 282, 284, 287, 290, 291, 294, 296, 302, 317, 320, 330, 334, 363, 379, 380, 381, 383, 413, 416, 431, 432, 437, 440, 442, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459], "methodtyp": [411, 412, 413], "methyldiphenylphosphin": [396, 397, 398], "methylisoxazol": 459, "metric": [421, 438, 448, 452], "mhfp": 148, "mhfpfingerprint": 148, "micromamba": 440, "middl": 449, "midpoint": 458, "might": [53, 57, 154, 213, 397, 401, 403, 407, 428, 435, 439, 445, 446, 447, 448, 450, 454, 456, 459, 461], "mimic": [101, 164, 447], "min": [299, 347, 395, 403, 404, 413, 423, 424, 427, 428, 434, 435, 438, 440, 451, 455, 460], "min_cardin": [34, 44, 51, 447], "min_nonzero": 219, "min_target": 458, "mind": [421, 457], "miniconda": 440, "minim": [6, 299, 423, 434, 435, 440, 447, 454, 458], "minimum": [34, 44, 51, 61, 79, 151, 211, 213, 219, 440, 447], "minimumcardinalityviolatedwarn": [440, 447], "minor": 440, "mirror": [13, 16, 446, 455], "miss": [242, 244, 357, 392, 393, 398, 440, 441], "mistak": [31, 441], "mix": [248, 418, 419, 438, 447, 452, 455, 459], "mixin": 236, "mixtur": [202, 436, 440, 447, 452, 453, 459, 461], "mobil": 440, "mode": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 143, 154, 183, 242, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 299, 302, 305, 328, 346, 394, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 412, 413, 415, 416, 427, 428, 430, 431, 432, 434, 435, 436, 438, 439, 440, 446, 451, 453, 455, 460], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 77, 80, 96, 100, 101, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 251, 253, 255, 256, 257, 258, 259, 260, 264, 278, 280, 282, 284, 288, 290, 291, 370, 403, 404, 414, 424, 434, 435, 438, 440, 442, 444, 445, 446, 447, 451, 452, 453, 455, 456, 458, 459, 460], "model_cl": 291, "model_cluster_num_parameter_nam": [202, 203, 204, 205], "model_from_config": 415, "model_from_python": 415, "model_init": 290, "model_json": 415, "model_param": [202, 203, 204, 205, 278, 282, 284, 416, 440], "modellist": 258, "modelnottrainederror": [251, 253, 255, 260, 264, 278, 280, 282, 284], "modif": [439, 443], "modifi": [184, 244, 288, 346, 347, 348, 440, 443, 461], "modul": [0, 1, 32, 92, 93, 101, 119, 134, 152, 164, 175, 178, 188, 191, 198, 209, 227, 228, 240, 249, 252, 262, 269, 292, 295, 312, 316, 368, 384, 387, 438, 439, 440, 441], "modular": 441, "molecul": [55, 154, 339, 418, 452], "molecular": [340, 452], "moment": [248, 274, 441], "monitor": [440, 448], "monkeypatch": 439, "mont": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 81, 246, 395, 397, 398, 412, 421, 434, 435, 440, 445, 456], "monte_carlo_run": [246, 412], "mordr": [148, 154, 396, 397, 398, 400, 401, 407, 412, 416, 418, 431, 432, 438, 440, 447, 452], "mordredcommun": 440, "mordredfingerprint": [148, 452], "more": [8, 10, 57, 65, 84, 154, 183, 184, 211, 213, 219, 226, 242, 288, 307, 310, 334, 344, 360, 398, 401, 413, 418, 419, 434, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 452, 454, 455, 456, 457, 458, 461], "morgan": 452, "morgan_fp": [148, 440], "mors": 148, "morsefingerprint": 148, "most": [219, 242, 399, 421, 438, 441, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 461], "motiv": 440, "mous": 445, "move": [13, 16, 156, 440, 455], "mpl_toolkit": 413, "mplot3d": 413, "mqn": 148, "mqnsfingerprint": 148, "mse": 421, "mu": [172, 173], "much": [397, 451, 452], "multi": [128, 250, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 424, 436, 438, 440, 442, 445, 459, 460], "multiarmedbandit": 421, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 40, 121, 124, 129, 131, 245, 246, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 348, 396, 397, 398, 407, 418, 421, 438, 440, 445, 447, 451, 457, 458, 459, 460], "multipli": 117, "multitask": 440, "must": [53, 121, 124, 129, 131, 213, 219, 244, 248, 330, 348, 392, 401, 411, 412, 418, 421, 423, 440, 441, 443, 444, 447, 448, 449, 451, 452, 456], "mutual": 456, "my_attribut": 441, "my_valu": 448, "mypi": [320, 331, 438, 440, 441], "mystr": 441, "n": [26, 251, 315, 335, 380, 396, 397, 398, 400, 401, 406, 407, 408, 409, 416, 418, 421, 423, 427, 428, 430], "n_arm": 421, "n_batches_don": 31, "n_cluster": [203, 204], "n_combin": 418, "n_combinations_actu": 418, "n_combinations_expect": 418, "n_compon": 202, "n_doe_iter": [242, 246, 248, 395, 396, 397, 398, 412, 413, 434, 435, 456], "n_duplic": 418, "n_estim": 416, "n_fits_don": 31, "n_grid_point": 424, "n_inactive_parameter_combin": [44, 211, 440], "n_interrupted_campaign": 412, "n_iter": [403, 404, 406, 407, 408, 409, 421, 423], "n_mc_iter": [246, 248, 395, 397, 398, 412, 434, 435, 456], "n_mc_run": 421, "n_mc_sampl": 21, "n_output": [121, 124, 129, 131, 440], "n_permut": 418, "n_pis_ov": 412, "n_pis_over_requir": 412, "n_point": [211, 381], "n_raw_sampl": [195, 440, 453], "n_restart": [195, 440, 453], "n_row": 350, "n_sampl": 380, "n_task": 213, "n_task_param": 440, "n_training_data": 424, "n_wrong_sum": 418, "na": 445, "nactivevalu": [406, 407, 408, 409, 423, 430], "naiv": [187, 280, 288, 401, 440, 454], "naivehybridrecommend": 440, "naivehybridspacerecommend": [428, 440, 453], "nake": [310, 448], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 44, 65, 87, 133, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 159, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 225, 234, 246, 258, 260, 294, 296, 302, 314, 322, 328, 329, 330, 339, 340, 344, 346, 351, 355, 356, 357, 371, 386, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 421, 423, 424, 426, 427, 428, 430, 431, 432, 434, 435, 438, 440, 441, 443, 445, 446, 447, 448, 451, 454, 455, 456, 457, 458, 459, 461], "name_or_abbr": [322, 329], "namedtupl": 421, "namespac": [196, 440, 441], "nan": [162, 251, 357, 388, 390, 391, 392, 393, 406, 407, 408, 409, 423, 430, 440, 445], "nativ": [415, 440, 457], "natur": [282, 397, 441, 447, 453, 455, 458], "navig": [438, 446], "nbase": 340, "nbviewer": 415, "nd": 438, "ndarrai": [13, 16, 125, 158, 304, 305, 306, 349, 359, 363, 374, 380, 413, 421, 424, 440, 456], "ne": 418, "nearli": 458, "necessari": [356, 411, 440, 441, 446, 447, 451, 452, 454, 456, 457], "necessarili": [443, 446, 447, 454, 459], "need": [26, 31, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 248, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 330, 355, 356, 396, 397, 398, 401, 406, 409, 411, 413, 415, 418, 421, 423, 434, 435, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 461], "neg": [15, 424, 440, 447], "negat": [6, 45, 435, 440, 459], "neglig": 443, "neither": [8, 248, 348], "neq": 34, "nest": [344, 446, 460], "neural": 459, "neurip": 459, "neutral": 8, "never": [408, 445], "nevertheless": [334, 439], "new": [31, 47, 48, 183, 185, 211, 244, 259, 304, 305, 306, 314, 353, 354, 357, 400, 412, 413, 430, 438, 440, 441, 446, 447, 457, 459], "new_measur": 450, "new_rec": 446, "newli": [438, 441, 448, 449, 459], "next": [31, 395, 411, 413, 418, 419, 424, 430, 434, 435, 438, 444, 445, 446, 453, 455], "ngboost": [282, 401, 440], "ngboostmodel": 416, "ngboostsurrog": [401, 416, 457], "nice": [413, 439], "nicknam": 339, "nintern": 423, "no_duplicates_constraint": 418, "no_tl": 434, "nois": [242, 347, 348, 435, 440, 460], "noise_level": 348, "noise_perc": [242, 246, 456], "noise_ratio": 347, "noise_std": [434, 435], "noise_typ": 348, "noisi": [13, 14, 16, 17, 350, 434, 438, 440, 459], "non": [64, 65, 95, 121, 124, 129, 131, 180, 182, 183, 184, 185, 187, 213, 242, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 328, 330, 334, 347, 381, 388, 389, 390, 392, 393, 418, 434, 438, 440, 443, 445, 447, 449, 450, 454, 455], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 42, 47, 48, 57, 63, 64, 65, 75, 82, 87, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 124, 129, 131, 133, 137, 140, 141, 143, 150, 151, 154, 157, 161, 162, 163, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 216, 219, 222, 225, 226, 229, 230, 232, 234, 242, 244, 246, 248, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 290, 291, 296, 302, 310, 311, 318, 319, 330, 340, 346, 351, 352, 353, 358, 363, 364, 383, 388, 389, 390, 391, 392, 393, 401, 406, 407, 408, 409, 411, 412, 413, 415, 416, 423, 430, 445, 454, 458, 460], "nonetheless": 459, "nonlinear": [37, 211], "nonpredict": [200, 202, 203, 204, 205, 207, 208], "nonpredictiverecommend": [205, 207, 208, 440], "nonzero": [34, 44, 219, 440], "noqa": [406, 441], "nor": [8, 348, 437], "norecommenderslefterror": [183, 184], "noreturn": [187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 261], "normal": [171, 172, 173, 406, 408, 409, 423, 439, 443, 451, 454], "normaliz": 451, "normalprior": 440, "not_a_param": 416, "notabl": [440, 449, 457], "note": [34, 44, 57, 213, 242, 246, 248, 259, 260, 346, 347, 348, 396, 397, 398, 401, 407, 411, 415, 416, 418, 423, 427, 428, 430, 431, 432, 437, 438, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 459], "notebook": 415, "noteworthi": 446, "noth": [15, 31, 34, 42, 44, 45, 51, 85, 124, 154, 185, 187, 193, 195, 202, 203, 204, 205, 211, 213, 219, 251, 264, 278, 282, 284, 302, 443, 452], "notic": [411, 441, 443, 455, 457], "notimplementederror": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 125, 156, 226, 229, 230, 248, 251, 253, 255, 259, 260, 264, 278, 280, 282, 284], "notwithstand": 443, "now": [395, 396, 397, 398, 400, 401, 406, 408, 411, 412, 413, 418, 419, 421, 423, 424, 426, 430, 431, 434, 435, 437, 438, 440, 459, 461], "np": [125, 403, 404, 406, 407, 408, 409, 413, 415, 416, 418, 419, 421, 424, 426, 427, 428, 430, 434, 435, 445, 447, 452, 456, 461], "nrecommend": [400, 401, 423, 427, 428], "nu": 108, "num": [354, 367], "num_disc_1": [423, 446], "num_disc_2": 423, "num_experi": [242, 395, 396, 397, 398, 412, 434, 435], "num_fantasi": 10, "num_parameter_1": 409, "num_parameter_2": 409, "num_parameter_3": 409, "num_parameter_4": 409, "num_parameter_5": 409, "num_parameter_6": 409, "num_sampl": 113, "num_valu": 454, "number": [10, 15, 21, 31, 44, 113, 121, 124, 129, 131, 154, 177, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 242, 246, 248, 251, 350, 358, 363, 367, 375, 380, 381, 396, 397, 398, 403, 404, 406, 407, 408, 409, 413, 418, 421, 427, 434, 435, 438, 439, 440, 444, 446, 447, 448, 451, 452, 454, 455, 456, 461], "numer": [13, 16, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 86, 136, 137, 138, 140, 141, 143, 150, 151, 154, 158, 211, 219, 244, 302, 347, 348, 355, 381, 392, 393, 395, 400, 403, 418, 419, 438, 440, 447, 448, 450, 451, 452, 454, 456, 458], "numerical_measurements_must_be_within_toler": [31, 392, 440, 446], "numerical_onli": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "numericalcontinuousparamet": [45, 63, 156, 211, 395, 403, 404, 419, 424, 426, 428, 435, 454, 456, 460], "numericaldiscreteparamet": [219, 396, 397, 398, 400, 401, 403, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 423, 427, 428, 430, 431, 432, 434, 435, 438, 454, 455, 456, 460, 461], "numericaltarget": [244, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 412, 413, 415, 416, 423, 424, 427, 428, 430, 431, 432, 434, 435, 438, 440, 451, 455, 456, 460], "numericcontinu": 428, "numparam1": 409, "numparam2": 409, "numparam3": 409, "numparam4": 409, "numparam5": 409, "numparam6": 409, "numpi": [158, 349, 359, 363, 369, 371, 403, 404, 406, 407, 408, 409, 413, 415, 416, 418, 419, 421, 424, 426, 427, 428, 430, 434, 435, 440, 445, 447, 456, 461], "nuniqu": 418, "nyou": [427, 428], "o": [395, 396, 397, 398, 400, 401, 404, 406, 407, 408, 409, 412, 413, 416, 418, 421, 424, 434, 435, 438, 447, 448, 452], "o2": [396, 397, 398], "obj": [161, 162, 163, 230], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 96, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 124, 127, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 158, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 220, 221, 230, 231, 234, 236, 251, 253, 255, 256, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 317, 320, 328, 330, 348, 355, 356, 360, 363, 383, 395, 400, 411, 412, 413, 415, 416, 421, 424, 426, 428, 431, 432, 439, 440, 441, 443, 447, 449, 450, 453, 454, 456, 457, 458, 460, 461], "objective_json": 455, "oblig": 443, "observ": [240, 251, 253, 255, 260, 264, 278, 280, 282, 284, 421, 456, 458], "obsolet": 440, "obtain": [242, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 397, 413, 421, 424, 435, 438, 440, 446, 450, 451, 455, 459], "oc": [396, 397, 398, 400, 401], "oc1": [396, 397, 398], "occur": [56, 441], "occurr": [445, 447], "octanol": [447, 452], "off": [8, 248, 335, 407, 438, 440, 445, 447, 448, 451, 458], "offer": [330, 413, 418, 421, 427, 437, 438, 439, 443, 444, 449, 452, 453, 455, 456, 457, 459, 461], "offset": [45, 111], "offset_initial_valu": 111, "offset_prior": 111, "often": [419, 421, 439, 444, 447, 448, 449, 450, 452, 455, 461], "oftentim": [455, 456], "oh": [140, 145, 397, 407, 416, 421, 423, 430, 431, 432, 438, 454, 455], "ok": 423, "old": 459, "omit": [13, 16, 193, 195, 246, 330, 411, 438, 454, 455], "onc": [246, 412, 452, 456], "one": [13, 16, 21, 31, 63, 65, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 158, 168, 177, 178, 183, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 213, 226, 244, 264, 288, 314, 315, 344, 350, 396, 397, 398, 401, 403, 418, 421, 423, 432, 434, 435, 437, 438, 439, 440, 441, 443, 445, 446, 447, 449, 451, 452, 454, 455, 456, 457, 458, 459], "onehot": 397, "ones": [213, 310, 355, 397, 428, 440, 445, 459], "ongo": [412, 459], "onli": [10, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 96, 108, 121, 124, 129, 131, 154, 213, 219, 244, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 310, 311, 330, 331, 334, 344, 346, 355, 357, 363, 380, 381, 396, 401, 406, 407, 412, 413, 415, 416, 418, 427, 428, 435, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 461], "onlin": 421, "onnx": [259, 260, 370, 414, 438, 440, 457], "onnx_input_nam": [260, 415], "onnx_str": [260, 415], "onto": [13, 16, 441], "open": [31, 44, 156, 158, 251, 253, 255, 260, 264, 278, 280, 282, 284, 438, 441], "opentelemetri": [438, 440, 448], "oper": [42, 45, 54, 232, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 349, 368, 403, 404, 408, 409, 418, 419, 439, 440, 445, 447, 448, 449, 450, 453, 455], "operator_convert": 415, "opposit": 447, "opt": [438, 448], "optim": [12, 21, 31, 44, 45, 76, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 240, 242, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 346, 397, 399, 400, 403, 404, 412, 413, 418, 421, 423, 428, 440, 442, 444, 447, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459], "optimize_acqf": [45, 195], "optimize_acqf_": 45, "optimize_acqf_discret": 195, "optimize_acqf_mix": 195, "option": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 87, 92, 96, 107, 108, 109, 110, 111, 112, 113, 114, 118, 124, 129, 131, 137, 140, 141, 143, 151, 154, 157, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 232, 234, 242, 246, 248, 278, 282, 284, 290, 296, 302, 330, 340, 346, 351, 352, 353, 398, 401, 415, 416, 421, 439, 440, 441, 444, 446, 447, 449, 450, 451, 454, 455, 456, 457, 458, 461], "oracl": 456, "orchestr": [441, 446], "order": [213, 219, 412, 421, 437, 438, 440, 441, 446, 447, 452, 455, 459], "ordin": 458, "org": [276, 320, 353, 415, 438, 443], "organ": 441, "origin": [26, 31, 156, 314, 315, 325, 349, 430, 437, 440, 441, 443, 453, 455, 457], "orthogon": 441, "oserror": 439, "other": [53, 115, 156, 211, 315, 396, 398, 400, 401, 403, 404, 412, 419, 421, 428, 434, 435, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 461], "otherwis": [45, 61, 136, 137, 138, 140, 141, 143, 150, 151, 154, 443, 444, 449, 451, 459], "our": [395, 406, 408, 411, 412, 413, 416, 418, 419, 421, 424, 426, 427, 428, 431, 432, 434, 435, 438, 441, 444, 446, 447, 449, 455, 456], "out": [219, 423, 435, 438, 443, 448, 451, 456, 459], "out_par": 424, "out_y0": 424, "out_y1": 424, "outcom": [177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 397, 438, 445, 452, 458], "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 118, 121, 124, 129, 131, 251, 253, 255, 260, 264, 278, 280, 282, 284, 348, 349, 350, 395, 424, 434, 435, 439, 440, 442, 445, 456, 460], "output_label": 349, "outputscal": 118, "outputscale_initial_valu": 118, "outputscale_prior": 118, "outsid": [31, 156, 184, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 305, 306, 346, 423, 440, 455], "outstand": 443, "over": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 211, 418, 437, 440, 444, 446, 449, 459], "overal": [213, 415, 416, 418, 419, 421, 440, 441, 446, 451, 459], "overlap": [64, 65, 156, 403, 404, 447], "overrid": [232, 234, 411, 440], "overridden": [411, 441], "overview": [438, 455], "overwritten": 428, "own": [187, 395, 419, 438, 439, 440, 441, 443, 447, 452], "owner": 443, "ownership": 443, "p": [395, 396, 397, 398, 400, 401, 403, 404, 411, 413, 427, 434, 435, 441, 449, 450, 457, 461], "p1": [454, 455, 456], "p1_json": 455, "p1_via_json": 455, "p2": [454, 455, 456], "p2_json": 455, "p2_via_json": 455, "p3c4": [396, 397, 398], "p_cont": 454, "p_disc": 454, "p_g1_amount": 419, "p_g2_amount": 419, "p_g3_amount": 419, "p_i": 34, "pack": 455, "packag": [96, 148, 308, 439, 440, 441, 452, 456, 457, 461], "page": [415, 438, 440, 441, 449], "pair": [314, 424, 438, 452], "pam": 204, "pamclusteringrecommend": 453, "panda": [52, 220, 238, 239, 244, 339, 359, 395, 396, 397, 398, 403, 404, 406, 412, 413, 418, 419, 423, 424, 427, 428, 434, 435, 440, 445, 447, 448, 452, 454, 455, 456], "panic": 437, "paper": 459, "paper_fil": 459, "parallel": 441, "param": [414, 416, 436], "param1": [454, 456], "param2": [454, 456], "param_1": 445, "param_2": 445, "param_bounds_comp": 440, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 68, 84, 88, 96, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 125, 129, 131, 136, 137, 140, 141, 143, 145, 146, 147, 148, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 215, 218, 219, 220, 221, 224, 225, 226, 232, 234, 236, 240, 242, 244, 246, 248, 251, 253, 255, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 286, 288, 290, 291, 294, 296, 302, 304, 305, 306, 310, 311, 314, 315, 323, 324, 325, 328, 330, 333, 334, 335, 338, 339, 340, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 367, 372, 373, 374, 376, 377, 380, 381, 383, 392, 393, 395, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 415, 421, 423, 424, 426, 427, 428, 430, 431, 432, 434, 435, 438, 440, 441, 447, 448, 449, 451, 455, 456, 457, 459, 460], "parameter": [168, 169, 170, 171, 172, 173, 174], "parameter_json": 455, "parameter_nam": [211, 213, 219, 428], "parameter_names_in_cardinality_constraint": 211, "parameterencod": [137, 145, 146, 148, 151], "parametr": 447, "parent": 441, "pareto": [12, 129, 422, 436, 438, 440, 451], "paretoobject": [424, 438, 440, 445, 460], "pars": [365, 440], "parser": 440, "part": [15, 26, 31, 40, 73, 188, 211, 213, 219, 346, 393, 416, 428, 431, 432, 434, 435, 440, 441, 443, 444, 445, 446, 447, 452, 453, 454, 455, 461], "parti": [443, 456], "partial": [26, 412, 438, 440, 460], "particl": 459, "particular": [31, 219, 240, 411, 424, 428, 437, 438, 439, 441, 443, 446, 451, 452, 454, 455, 456], "particularli": [330, 446], "partit": [204, 246, 248, 440, 453, 456], "partitionexplain": [94, 97], "pass": [31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 96, 154, 202, 203, 204, 205, 213, 219, 230, 264, 278, 282, 284, 350, 356, 418, 430, 435, 440, 441, 445, 449, 450, 451, 452, 455], "passthrough": [28, 122, 215, 268], "patch": 412, "patent": 443, "path": [87, 397, 418, 440, 441, 448, 461], "pattern": [148, 441, 459], "patternfingerprint": 148, "pd": [31, 193, 195, 244, 258, 314, 315, 354, 395, 396, 397, 398, 403, 404, 406, 412, 413, 418, 419, 423, 424, 427, 428, 434, 435, 440, 445, 447, 449, 452, 454, 455, 456], "pdf": 459, "peek": 455, "pend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 438, 440, 460], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 440, 445, 446], "per": [242, 258, 396, 397, 398, 401, 418, 423, 427, 434, 435, 440, 452, 454, 456], "percent": [242, 443], "percentag": [195, 310, 348, 401, 406, 407, 408, 409, 418, 423, 430, 435, 453], "perf_count": 411, "perfectli": 455, "perform": [195, 242, 310, 355, 397, 406, 407, 408, 409, 413, 418, 431, 434, 435, 437, 438, 440, 441, 443, 444, 445, 446, 448, 450, 452, 453, 456, 457, 459], "period": 109, "period_length_initial_valu": 109, "period_length_prior": 109, "periodickernel": 440, "perm_inv_constraint": 418, "perman": 460, "permiss": [438, 443], "permut": [53, 56, 57, 315, 440, 447], "permutation_invari": 53, "permutationexplain": [94, 97], "perpetu": 443, "persist": [440, 442, 446, 448, 455, 457], "perspect": 455, "pertain": 443, "pharmacophor": 148, "pharmacophorefingerprint": 148, "phase": [185, 419], "phaseagent1": 419, "phaseagent2": 419, "phcpho": [396, 397, 398, 400, 401], "phenomenon": 446, "philosophi": 455, "physic": [450, 456], "physiochemicalproperti": 148, "physiochemicalpropertiesfingerprint": 148, "pi": [7, 401, 412, 413], "pi_max": 413, "pi_per_iter": 413, "pi_required_fract": 412, "pi_threshold": 412, "pickl": 440, "pictur": 438, "piec": [421, 438, 446, 447], "piecewis": 110, "piecewisepolynomialkernel": 440, "pin": [26, 440], "pin_discret": 26, "pinned_part": 26, "pip": [438, 440, 441, 450, 461], "pipelin": [434, 435, 440, 441], "pival": [396, 397, 398, 400, 401], "pl": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "place": [13, 16, 34, 244, 346, 347, 348, 415, 416, 418, 421, 439, 440, 441, 443, 446, 449, 452, 455, 459], "placehold": 317, "plai": [446, 450, 458], "plain": 268, "plainkernelfactori": [103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 264], "plan": [259, 449, 452], "platt": 459, "pleas": [415, 416, 438, 444, 450, 453], "plenti": 450, "plot": [96, 98, 242, 396, 398, 424, 435, 440, 457, 459, 460], "plot_abegin_convert_pipelin": 370, "plot_ebegin_float_doubl": 370, "plot_typ": 96, "plt": [396, 398, 413, 424], "plu": [244, 438], "plugin": 440, "pm": [5, 401], "png": [396, 398], "po16": 452, "poetri": 440, "point": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 30, 31, 96, 151, 156, 177, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 355, 369, 370, 378, 379, 380, 381, 385, 396, 400, 401, 412, 419, 424, 427, 428, 434, 435, 437, 438, 440, 442, 444, 445, 446, 449, 450, 451, 453, 454, 460, 461], "points_per_dim": [413, 427, 428, 434, 435], "polar": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 221, 438, 440, 442, 460, 461], "poli": 413, "polici": 421, "polycollect": 413, "polym": 452, "polynomi": [110, 111], "polynomialkernel": 440, "polytop": 440, "popul": 418, "popular": [450, 452, 457], "posit": [13, 16, 96, 330, 380, 440, 447, 450, 451], "possibl": [31, 44, 157, 211, 219, 220, 221, 240, 330, 346, 398, 412, 413, 418, 423, 438, 440, 443, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 458, 459, 461], "possibli": [445, 446], "post": [451, 452], "post_hook": [330, 411, 412, 413], "posterior": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 193, 195, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 287, 401, 440, 444, 457], "posterior_mean": [251, 421], "posterior_mod": 251, "posterior_stat": [31, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 440, 446], "posteriorlist": 258, "posteriorstandarddevi": [421, 444], "postprocess": 339, "potassium": [396, 397, 398, 400, 401], "potenti": [213, 438, 439, 440, 441, 446, 447, 450, 451, 454, 461], "power": [111, 443, 447, 453], "pph3": [396, 397, 398], "pr": [440, 441], "practic": [444, 450, 453], "pre": [157, 183, 267, 414, 439, 440, 441], "pre_hook": [330, 411], "precis": [57, 183, 211, 310, 358, 370, 371, 386, 440, 460], "precomput": 143, "predefin": [446, 453], "predict": [31, 80, 205, 251, 253, 255, 260, 264, 278, 280, 282, 284, 438, 440, 444, 445, 451, 456, 457, 459, 460], "predictor": 286, "prefer": [31, 443, 449, 451, 455], "prefix": 340, "preliminari": 459, "prepar": [413, 441, 443, 461], "preprocess": 440, "presenc": [195, 439, 440], "present": [31, 72, 96, 121, 124, 129, 131, 213, 314, 315, 330, 400, 421, 440, 447, 456, 461], "preset": [264, 271, 274, 276, 440], "pressur": [408, 415, 416, 430, 431, 432, 438, 447], "pretrain": [260, 414, 436], "pretti": 358, "pretty_print_df": [418, 440], "prevent": [156, 229, 230, 330, 439, 440, 441], "previou": [183, 412, 413, 440, 446, 448, 459], "previous": [31, 310, 396, 397, 398, 400, 408, 445, 446], "price": 452, "primari": 446, "primarili": 444, "principl": [418, 421, 457], "print": [244, 344, 358, 396, 397, 398, 400, 401, 403, 404, 408, 411, 415, 416, 418, 419, 421, 426, 427, 428, 430, 431, 432, 438, 440, 454, 461], "print_parameter_names_hook": 411, "printer_inst": 411, "prior": [107, 108, 109, 110, 111, 112, 113, 114, 118, 168, 169, 170, 171, 172, 173, 174, 251, 274, 409, 438, 439, 440], "priori": [447, 455, 459], "privat": [440, 442], "probabilist": 444, "probability_of_improv": 413, "probabilityofimprov": [412, 413], "probabl": [7, 19, 21, 401, 410, 412, 436, 440], "problem": [76, 418, 419, 421, 434, 435, 440, 441, 446, 451, 455], "problemat": [334, 439, 452], "proce": [242, 400, 445, 448], "procedur": [444, 459], "proceed": 459, "process": [31, 101, 262, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 354, 380, 401, 411, 418, 421, 434, 435, 440, 441, 444, 445, 446, 447, 448, 449, 451, 452, 455, 459], "prod": 409, "prod_constraint": 409, "prod_i": 451, "produc": [121, 124, 125, 129, 131, 244, 438, 440, 441, 448, 456], "product": [58, 117, 213, 219, 220, 221, 326, 405, 436, 438, 440, 443, 447, 449, 460, 461], "product_paramet": [219, 418, 454], "productkernel": 440, "programmat": 418, "progress": [31, 181, 413, 440, 449], "prohibit": 444, "project": [413, 438, 440, 448], "promin": 443, "promis": [412, 445], "proper": 440, "properli": [26, 423, 439, 454], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 127, 129, 131, 136, 137, 138, 140, 141, 143, 145, 146, 148, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 214, 218, 219, 251, 253, 255, 258, 260, 264, 267, 271, 274, 276, 278, 280, 282, 284, 294, 296, 299, 300, 302, 319, 320, 363, 379, 383, 440, 441, 447, 449, 452], "proport": 435, "propos": 446, "protobuf": 440, "protocol": [176, 177, 256, 266, 334, 440], "prototyp": 442, "provid": [13, 15, 16, 31, 45, 96, 100, 125, 143, 154, 157, 177, 183, 184, 187, 188, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 232, 236, 240, 242, 244, 246, 248, 251, 253, 255, 260, 264, 274, 276, 278, 280, 282, 284, 314, 326, 330, 342, 347, 348, 353, 356, 359, 380, 381, 395, 396, 397, 398, 411, 418, 424, 426, 427, 428, 431, 434, 435, 438, 440, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "prune": [12, 13, 14, 16, 17], "prune_baselin": [12, 13, 14, 16, 17], "pstd": [6, 440, 444], "pubchem": 148, "pubchemfingerprint": 148, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 96, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 127, 129, 131, 136, 137, 138, 140, 141, 143, 145, 146, 148, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 214, 218, 219, 236, 251, 253, 255, 256, 258, 260, 264, 266, 267, 271, 274, 276, 278, 280, 282, 284, 294, 296, 299, 300, 302, 317, 319, 320, 363, 379, 383, 440, 441], "publicli": 443, "publish": 440, "pull": [421, 440], "punish": 8, "pure": [8, 10, 15, 178, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 213, 248, 259, 381, 427, 440, 460], "purerecommend": [180, 182, 183, 184, 185, 187, 193, 200, 440], "purpl": 424, "purpos": [15, 411, 412, 415, 421, 438, 439, 441, 443, 446, 449, 455, 461], "push": [44, 441], "put": [418, 421, 448, 452], "puzzl": 438, "py": [276, 406, 408, 409, 440, 448], "py312": 441, "pyarrow": 440, "pydant": 440, "pydoclint": [440, 441], "pydocstyl": 441, "pylint": 440, "pymatgen": 439, "pypi": [438, 440], "pyplot": [396, 398, 413, 424], "pyproject": 440, "pytest": [440, 441], "python": [30, 320, 331, 397, 416, 431, 432, 438, 439, 440, 441, 446, 448, 455], "python310": 439, "pytorch": 440, "pyupgrad": 440, "q": [110, 286, 287, 401, 445], "qei": [9, 401, 431, 432, 440], "qkg": [10, 440], "qlogei": [11, 401, 440], "qlogexpectedimprov": 401, "qlognehvi": [13, 16], "qlognei": [14, 440], "qlognoisyexpectedhypervolumeimprov": [440, 451], "qlognparego": 440, "qnegintegratedposteriorvari": 444, "qnehvi": 16, "qnei": [17, 440], "qnipv": [15, 440, 444], "qnoisyexpectedhypervolumeimprov": 440, "qpi": [19, 401], "qposteriorstandarddevi": 444, "qpstd": [18, 440, 444, 446], "qsimpleregret": 21, "qsr": [20, 440], "qt": 21, "qthompsonsampl": [421, 440], "quadrat": [114, 395, 424], "qualiti": 441, "quantif": 459, "quantifi": [421, 444, 459], "quantil": [31, 251, 253, 254, 255, 260, 264, 278, 280, 282, 284, 446], "quantiti": [31, 55, 446, 448, 450, 451, 457, 461], "quantum": 143, "qucb": [22, 401, 440, 444], "queri": [178, 188, 240, 242, 244, 424, 438, 446, 448, 449, 456], "question": [441, 446, 459], "quick": 445, "quickli": 447, "qupperconfidencebound": 444, "qvarucb": 440, "r": [44, 396, 397, 398, 400, 401], "radial": 112, "radiu": [148, 440, 452], "rais": [13, 15, 16, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 96, 100, 125, 133, 156, 157, 162, 163, 183, 184, 211, 213, 219, 225, 226, 229, 230, 242, 244, 248, 251, 253, 255, 259, 260, 261, 264, 278, 280, 282, 284, 291, 315, 328, 330, 333, 335, 338, 342, 343, 344, 346, 347, 348, 350, 355, 356, 357, 380, 381, 392, 393, 411, 412, 413, 428, 439, 440, 441, 445, 453], "rand": 415, "random": [15, 113, 211, 213, 242, 244, 246, 283, 284, 346, 379, 380, 381, 395, 396, 397, 398, 401, 412, 413, 415, 419, 421, 424, 435, 438, 440, 444, 452, 453, 456, 461], "random_campaign": 395, "random_forest": [284, 401], "random_se": [242, 246, 412, 456], "randomforestmodel": 416, "randomforestsurrog": [401, 440, 457], "randomli": [195, 208, 395, 397, 424, 444, 450, 453], "randomrecommend": [395, 396, 397, 398, 401, 406, 407, 408, 409, 411, 412, 413, 419, 421, 423, 440, 445, 453], "rang": [44, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 294, 346, 347, 395, 403, 404, 406, 407, 408, 409, 413, 418, 421, 423, 426, 427, 428, 435, 438, 440, 447, 454, 455, 456, 458, 461], "rank": 458, "rare": 440, "rastrigin": [403, 404, 427, 428], "rate": [169, 251, 421], "rather": [430, 439, 444, 455], "ration": 114, "ravel": [424, 434, 435], "raw": [195, 455], "rbf": 112, "rbfkernel": 440, "rdf": 148, "rdffingerprint": 148, "rdkit": [148, 406, 408, 409, 440, 447, 452], "rdkit2ddescriptor": [148, 397, 406, 408, 409, 440], "rdkit2ddescriptorsfingerprint": 148, "rdkitfingerprint": 148, "re": [412, 427, 428, 441, 453], "reach": [304, 306, 423], "reachabl": 448, "reactant": [450, 452], "reaction": [397, 400, 438, 447, 450, 452, 459], "reactor": [445, 459], "reactora": 459, "reactorb": 459, "reactorc": 459, "read": [143, 213, 397, 400, 438, 440, 441], "read_excel": [396, 397, 398, 412], "readabl": [218, 358, 367, 430, 440, 442, 443, 455], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 242, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 441, 445], "readm": [440, 441], "reagent": [447, 452], "real": [363, 438, 446, 458], "realist": 456, "realiz": [240, 456], "reason": [42, 202, 203, 204, 205, 397, 427, 440, 443, 444, 445, 447, 448, 452, 456], "reassembl": 455, "rebas": 441, "rec": [406, 407, 408, 409, 423, 445, 446], "rec_finish": 445, "rec_next": 445, "rec_par": 424, "rec_pend": 445, "rec_y0": 424, "rec_y1": 424, "receiv": [443, 448, 455], "recip": 441, "recipi": 443, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 73, 83, 84, 96, 137, 140, 141, 143, 151, 154, 156, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 240, 242, 256, 258, 259, 310, 346, 348, 350, 395, 396, 397, 398, 399, 403, 404, 406, 407, 408, 409, 411, 412, 413, 419, 421, 423, 424, 431, 432, 434, 435, 436, 437, 438, 440, 441, 444, 448, 450, 452, 456, 457, 459, 460, 461], "recommendation_orig": 430, "recommendation_recr": 430, "recommended_arm_idx": 421, "recommender_with_hook": 412, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 96, 180, 182, 183, 184, 185, 190, 193, 195, 256, 258, 411, 413, 437, 440, 445], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 363, 438, 446, 448, 455], "record": [31, 310, 311, 438, 448, 459], "recreat": [271, 430, 455], "recreate_model": 416, "recurs": [180, 182, 183, 184, 185, 323, 324], "red": 424, "redesign": 440, "redistribut": 443, "reduc": [154, 413, 421, 434, 435, 449, 452], "reduct": 460, "ref": 438, "refactor": 440, "refer": [13, 16, 240, 276, 329, 346, 355, 370, 396, 397, 398, 401, 403, 404, 406, 407, 408, 409, 411, 413, 415, 416, 418, 423, 427, 428, 430, 439, 440, 446, 450, 451, 452, 453, 454, 455, 456, 457, 459], "referenc": 441, "reference_point": [13, 16], "refin": [412, 438, 440, 446, 449], "reflect": [187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 413, 440, 441, 444, 447, 452], "regard": [34, 40, 403, 404, 441, 443], "regardless": 457, "regim": [440, 450], "region": 158, "regist": [330, 410, 412], "register_custom_architectur": 440, "register_hook": [410, 411, 412, 413, 440], "registr": 440, "regress": 278, "regressor": 415, "regret": [20, 21], "regroup": 440, "regular": [21, 156, 288, 426, 439, 440, 445, 459], "reinstal": 438, "rel": [13, 16, 44, 242, 347, 447, 451], "relat": [55, 121, 124, 126, 129, 131, 144, 213, 231, 298, 313, 428, 434, 435, 437, 438, 440, 446, 447, 448, 459], "relationship": [434, 435, 438, 441, 451, 459], "relative_perc": 348, "relative_threshold": [44, 440, 447], "releas": [438, 440], "relev": [53, 96, 244, 355, 356, 357, 407, 418, 440, 441, 446, 447, 449, 459, 461], "reli": [439, 440, 451], "reliabl": 452, "reloc": 440, "remain": [56, 156, 185, 248, 305, 395, 401, 406, 407, 408, 409, 418, 421, 423, 428, 430, 434, 435, 443, 452, 455, 456], "remain_switch": [185, 440], "remaind": 381, "remind": 440, "remot": 441, "remov": [52, 55, 56, 213, 219, 418, 441, 447, 454], "renam": [397, 434, 435, 440, 441], "render": [96, 415], "reoccur": 459, "reorder": 440, "reorgan": 440, "repeat": [421, 440, 441, 445, 446], "repetit": [246, 401, 412], "rephras": 447, "replac": [427, 428, 440, 441], "replic": [251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 440, 451, 455, 460], "repo": 440, "report": [177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 421, 439], "repositori": [397, 438, 441], "repr": 415, "repres": [13, 16, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 116, 117, 143, 213, 248, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 342, 359, 363, 367, 380, 395, 418, 419, 421, 424, 431, 432, 438, 440, 443, 446, 451, 452, 454, 456, 461], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 236, 251, 253, 255, 256, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 335, 337, 342, 344, 346, 358, 363, 406, 407, 408, 409, 415, 417, 423, 430, 440, 445, 446, 452, 455, 456, 460, 461], "reproduc": [412, 421, 424, 440, 443, 460], "reproduct": 443, "request": [31, 83, 84, 125, 183, 184, 185, 226, 251, 253, 254, 255, 260, 264, 267, 278, 280, 282, 284, 308, 350, 380, 381, 424, 437, 440, 445, 446, 449], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 45, 51, 81, 185, 219, 291, 330, 400, 411, 412, 415, 419, 421, 423, 427, 431, 437, 438, 439, 440, 441, 443, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 461], "rerun": 415, "reserv": [438, 441], "reset": [31, 445], "reset_index": [434, 445], "reshap": 424, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 407, 409, 418, 455], "resolv": 339, "resort": [288, 441, 455, 461], "resource_track": 439, "resp": [214, 398, 428], "respect": [31, 195, 214, 242, 246, 309, 314, 346, 418, 419, 441, 446, 447, 449, 450, 451, 455, 456, 457, 458, 461], "respond": 437, "respons": [180, 182, 183, 184, 185, 443, 446, 453], "restart": [183, 195], "restor": 455, "restr": 21, "restrain": 452, "restrict": [213, 219, 240, 246, 248, 406, 419, 440, 449, 456, 459, 460], "result": [10, 13, 16, 31, 154, 156, 219, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 346, 354, 396, 397, 398, 400, 415, 416, 418, 419, 421, 423, 424, 426, 434, 435, 438, 440, 442, 443, 444, 446, 447, 448, 450, 452, 453, 455, 456, 459, 460, 461], "result_baselin": [434, 435], "result_fract": 435, "results_interrupt": 412, "results_uninterrupt": 412, "retain": [443, 447], "retrain": [259, 260, 457], "retriev": [213, 240, 322, 323, 324, 338, 440, 441, 456], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 96, 99, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 125, 129, 131, 133, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 197, 200, 202, 203, 204, 205, 207, 208, 211, 213, 215, 216, 219, 220, 221, 222, 224, 225, 226, 229, 230, 232, 233, 234, 236, 238, 239, 242, 244, 246, 248, 251, 253, 255, 256, 258, 260, 261, 264, 267, 268, 272, 278, 280, 282, 284, 286, 287, 288, 290, 291, 294, 296, 302, 304, 305, 306, 308, 309, 310, 311, 314, 315, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 367, 372, 373, 374, 380, 381, 383, 388, 389, 390, 391, 392, 393, 395, 406, 412, 413, 415, 418, 421, 424, 434, 440, 446, 447, 456, 457, 461], "return_std": 415, "reus": [185, 440], "reuse_last": 183, "reveal": [413, 419, 435], "review": 441, "revis": [440, 443], "reward": [8, 421], "rework": 440, "rewrit": 440, "rff": 113, "rffkernel": 440, "rh": [45, 47, 48, 403, 404, 419, 447], "right": [45, 174, 355, 363, 396, 398, 407, 421, 438, 439, 441, 443, 447, 449, 451, 452, 458], "right_df": 355, "rihana": 442, "rim": 442, "risk": [8, 439, 443, 446], "roam": 439, "robust": [438, 440, 459], "robustli": 288, "role": [440, 441, 446, 450, 451, 456, 458, 460], "room": [413, 446], "root": [397, 438, 441, 447], "round": [358, 403, 415, 416, 447], "roundtrip": [440, 455], "rout": 455, "routin": 44, "row": [13, 16, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 125, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 244, 310, 314, 315, 347, 350, 354, 355, 357, 358, 374, 396, 398, 406, 407, 408, 409, 418, 419, 423, 430, 440, 445, 446, 449, 454, 456], "rowei": 459, "roya": 442, "royalti": 443, "rq": 114, "rqkernel": 440, "ruff": [440, 441], "rule": [411, 440], "run": [242, 246, 396, 397, 398, 412, 413, 434, 435, 438, 439, 440, 441, 446, 449, 452, 455, 456, 461], "run_full_initial_data": 396, "run_impute_mod": 398, "runner": [406, 408, 409], "runtim": [370, 439, 445], "runtimeerror": [183, 411], "rv": 421, "s3": 440, "s41586": [276, 353], "safe": [440, 441, 446], "safeti": 330, "sai": 447, "said": 441, "sake": 418, "same": [55, 133, 185, 219, 225, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 325, 401, 412, 415, 416, 418, 421, 424, 430, 439, 440, 447, 448, 449, 455, 456, 457, 459], "sampl": [10, 15, 21, 44, 195, 207, 208, 211, 311, 378, 379, 380, 381, 396, 401, 406, 407, 408, 409, 421, 423, 424, 426, 430, 435, 438, 440, 442, 450, 460], "sample_from_full_factori": [211, 440], "sample_inactive_paramet": 44, "sample_uniform": [211, 424, 426, 440, 456], "sampler": [401, 406, 407, 408, 409, 423, 430], "samples_full_factori": [211, 440], "samples_random": [211, 440], "sampling_algorithm": [379, 444], "sampling_fract": [15, 444], "sampling_method": [15, 444], "sampling_n_point": [15, 444], "sampling_percentag": [195, 453], "satisfi": [40, 41, 42, 219, 403, 404, 418], "save": [396, 398, 415, 440, 456], "savefig": [396, 398, 424], "sca": 424, "scalar": [12, 124, 423, 438, 440, 446, 451, 455], "scale": [118, 170, 171, 172, 173, 174, 211, 213, 219, 383, 423, 424, 434, 440, 444, 451], "scalekernel": 440, "scaler": 440, "scaling_bound": [211, 213, 219], "scatter": [96, 98], "scenario": [248, 395, 396, 397, 398, 412, 418, 434, 435, 445, 447, 451, 459, 460, 461], "scene": [451, 456, 457], "schema": 446, "schembl15068049": [396, 397, 398], "scheme": [440, 447], "scienc": [438, 442], "scientif": [440, 459], "scikit": [148, 438, 440, 442, 452], "scipi": [374, 413, 421, 440], "scm": 440, "scope": 395, "screen": [325, 459], "script": [339, 439, 440, 448, 461], "seaborn": [395, 396, 397, 398, 412, 434, 435], "seamlessli": 455, "search": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 38, 52, 55, 68, 73, 84, 88, 136, 137, 138, 140, 141, 143, 150, 151, 154, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 219, 223, 242, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 310, 355, 356, 395, 398, 400, 402, 405, 406, 407, 408, 409, 411, 412, 413, 421, 423, 425, 430, 435, 440, 442, 445, 446, 447, 448, 449, 450, 453, 455, 456, 460], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 96, 136, 137, 138, 140, 141, 143, 150, 151, 154, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 214, 218, 219, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 395, 397, 400, 411, 412, 413, 415, 416, 418, 419, 421, 424, 426, 430, 431, 432, 434, 436, 438, 440, 446, 447, 448, 449, 450, 452, 454, 455, 456, 461], "searchspace1": 426, "searchspace2": 426, "searchspace3": 426, "searchspace_ful": 449, "searchspace_json": 455, "searchspace_reduc": 449, "searchspacetyp": [187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 213, 401, 406, 407, 408, 409, 412, 413, 423, 430, 454], "secfp": 148, "secfpfingerprint": 148, "second": [354, 372, 374, 415, 416, 423, 424, 432, 434, 447, 448, 450], "secondari": [438, 448], "section": [438, 440, 441, 443, 455], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 96, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 164, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 218, 219, 242, 246, 248, 251, 253, 255, 256, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 294, 296, 302, 307, 328, 334, 348, 354, 360, 363, 383, 396, 397, 398, 403, 404, 411, 412, 416, 419, 428, 437, 438, 441, 445, 446, 448, 449, 450, 451, 452, 455, 456, 460], "seed": [242, 246, 376, 377, 412, 413, 421, 424, 438, 440, 461], "seek": [423, 451], "seem": [370, 432, 439], "seen": 444, "select": [6, 40, 41, 42, 70, 74, 81, 180, 182, 183, 184, 185, 188, 195, 205, 207, 251, 253, 255, 260, 264, 278, 280, 282, 284, 305, 354, 380, 401, 407, 408, 418, 419, 421, 428, 438, 440, 444, 446, 447, 450, 452, 453, 455, 457], "select_recommend": [180, 182, 183, 184, 185, 440], "selectivity_mean": 446, "selectivity_mod": 446, "selectivity_q_0": 446, "selectivity_std": 446, "self": [330, 343, 388, 389, 390, 391, 411, 412, 413, 421, 441], "sell": 443, "semant": [440, 455], "sens": [57, 129, 330, 334, 354, 447, 452, 457], "sent": 443, "sentinel": [318, 319], "separ": [246, 248, 288, 328, 383, 384, 413, 437, 440, 441, 443, 445, 455], "sequenc": [31, 41, 45, 116, 117, 124, 129, 140, 141, 143, 154, 162, 183, 184, 211, 213, 219, 220, 221, 224, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 310, 314, 315, 330, 331, 340, 343, 349, 355, 356, 360, 374, 446, 451, 453], "sequenti": [182, 183, 184, 185, 195, 401, 406, 407, 408, 409, 423, 430, 440, 453], "sequential_continu": [195, 440, 453], "sequential_greedy_x": 440, "sequentialgreedyrecommend": 440, "sequentialmetarecommend": [184, 453], "sequentialstrategi": 440, "seri": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 40, 41, 42, 52, 137, 140, 141, 143, 151, 154, 193, 195, 294, 296, 302, 406, 418, 440, 447, 449], "serial": [184, 219, 236, 311, 415, 436, 439, 440, 441, 447, 453, 460], "serializ": [438, 447, 453], "serialize_datafram": 455, "serialized_df": 238, "serializetostr": 415, "serialmixin": [24, 31, 35, 40, 105, 121, 138, 166, 180, 211, 213, 219, 255, 258, 267, 294, 296, 302, 363, 440], "serv": [248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 355, 434, 435, 446, 447, 452], "servic": 443, "session": [260, 448, 455], "set": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 42, 44, 55, 57, 64, 65, 96, 100, 154, 177, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 242, 246, 271, 309, 346, 353, 354, 376, 377, 396, 397, 398, 399, 401, 406, 408, 411, 416, 417, 418, 419, 421, 423, 428, 437, 438, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 461], "set_box_aspect": 413, "set_dash": 412, "set_random_se": [413, 421, 424, 461], "set_size_inch": [396, 398], "set_x_pend": 26, "set_xlabel": 413, "set_xtick": 413, "set_xticklabel": 413, "set_ylabel": 413, "set_ylim": 413, "set_zlabel": 413, "setpoint": 151, "setup": [242, 412, 447, 456, 461], "setuptool": 440, "sever": [63, 157, 178, 395, 397, 401, 412, 415, 421, 423, 426, 435, 438, 440, 441, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 461], "sh": 450, "shall": [183, 348, 443, 451], "shap": [96, 438, 440, 442, 457, 460], "shap_valu": 457, "shape": [21, 211, 218, 300, 304, 306, 380, 424, 454, 461], "shapinsight": [94, 95, 97, 98, 440, 450], "shaplei": 96, "share": [251, 253, 255, 260, 264, 278, 280, 282, 284, 440, 443, 459], "shield": [276, 353, 397, 438, 452], "shift": 434, "shifted_hartmann": 434, "ship": [384, 448, 455], "shm": 439, "short": 441, "shortcut": [219, 454, 455], "shorten": [440, 441], "shot": 459, "should": [31, 44, 53, 96, 154, 185, 234, 246, 299, 314, 315, 346, 348, 352, 353, 358, 362, 363, 364, 372, 406, 408, 412, 415, 418, 419, 428, 432, 438, 440, 441, 445, 446, 447, 454, 456, 457, 459, 461], "show": [96, 396, 397, 398, 400, 401, 406, 407, 408, 415, 416, 418, 421, 428, 430, 431, 432, 434, 435, 447, 450], "showcas": 453, "shown": [412, 421, 435, 440, 446], "shrink": 413, "shutdown": 439, "side": [45, 156, 305, 440], "sigma": [171, 172, 173, 174, 304, 423, 442], "signal": [67, 451], "signatur": [90, 291, 328, 330, 413, 440, 441, 447, 455], "significantli": [219, 421, 434, 435, 447], "silenc": 441, "silent": [440, 447], "similar": [184, 439, 447, 448, 450, 452, 453, 454, 455, 459, 461], "similarli": [424, 452], "simpl": [20, 21, 320, 397, 411, 412, 419, 438, 440, 445, 446, 453, 456, 458, 459], "simpler": [441, 455], "simplest": [454, 457], "simplex": [219, 460], "simplex_paramet": [219, 418, 454], "simpli": [334, 411, 412, 441, 447, 449, 451, 452, 453, 454, 455, 458, 459], "simplic": 330, "simplifi": 441, "simul": [85, 348, 408, 413, 438, 440, 459, 460], "simulate_experi": [246, 248, 456], "simulate_scenario": [248, 395, 396, 397, 398, 412, 434, 435, 456], "simulate_transfer_learn": [434, 456], "simulationresult": 421, "simultan": [451, 457], "sinc": [57, 156, 213, 259, 330, 396, 403, 404, 416, 427, 430, 431, 432, 434, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 459], "singer": 459, "singl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 40, 53, 96, 131, 156, 211, 213, 219, 242, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 294, 296, 302, 344, 363, 371, 380, 386, 396, 397, 398, 407, 412, 418, 423, 434, 435, 438, 440, 446, 447, 448, 449, 450, 451, 452, 454, 457, 459, 460], "single_lin": 344, "single_y0": 424, "single_y1": 424, "singledispatch": 365, "singletargetobject": [31, 294, 296, 302, 396, 397, 398, 400, 401, 406, 407, 408, 409, 412, 415, 416, 430, 431, 432, 438, 440, 457, 460], "site": 439, "situat": [156, 406, 408, 418, 439, 441, 445, 447, 451, 452, 455, 456, 459], "six": [418, 419], "size": [21, 103, 104, 105, 108, 110, 112, 113, 114, 183, 185, 213, 218, 219, 311, 367, 413, 415, 421, 427, 428, 434, 435, 446, 455, 456, 459, 461], "sk": 415, "skeleton": 440, "skfp": 148, "skicit": 440, "skin": 456, "skip": [216, 222, 440, 446], "skl2onnx": 415, "sklearn": [205, 370, 415, 439], "sklearnclusteringrecommend": [202, 203, 204, 440, 445], "slightli": [240, 397, 418, 456], "slot": [417, 421, 436, 440, 447], "slot1_amount": 418, "slot1_label": 418, "slot2_amount": 418, "slot2_label": 418, "slot3_amount": 418, "slot3_label": 418, "slow": [406, 408, 409, 445, 454], "slower": 445, "slowest": 440, "small": [312, 316, 403, 418, 434, 435, 440, 444, 452], "smaller": [31, 421, 446, 459], "smallest": [211, 355, 454], "smart": 438, "smartli": 418, "smile": [154, 337, 339, 340, 438, 452], "smoke": 440, "smoke_test": [395, 396, 397, 398, 404, 406, 407, 409, 412, 413, 421, 424, 434, 435], "smooth": [108, 110, 174], "smoothedboxprior": 440, "smoother": 108, "sn": [395, 396, 397, 398, 412, 434, 435], "snippet": 448, "so": [31, 242, 259, 354, 398, 412, 418, 421, 427, 428, 438, 439, 446, 447, 448, 449, 451, 452, 453, 455, 458], "softwar": [438, 443], "sola": 442, "sole": 443, "solut": [76, 446, 447, 451, 454, 455, 459], "solv": [259, 407, 408, 418, 421], "solv_rdkit2ddesc": 408, "solvent": [396, 397, 398, 400, 401, 406, 407, 408, 409, 412, 416, 418, 419, 431, 432, 438, 447, 452], "solvent1": [418, 419], "solvent2": [418, 419], "solvent3": 418, "solvent4": 418, "solvent5": 418, "solvent8": 418, "solvent9": 418, "solvent_1": 447, "solvent_2": 447, "solvent_3": 447, "solvent_data": 412, "solvent_encoding1": 447, "solvent_encoding2": 447, "solvent_mordred_enc": 447, "solvent_rdkit2dd": [406, 409], "solvent_rdkit_enc": 447, "solvent_smil": 412, "solver": 456, "some": [53, 370, 396, 397, 398, 401, 406, 407, 408, 409, 412, 413, 415, 416, 418, 419, 424, 426, 427, 428, 430, 435, 445, 446, 447, 448, 452, 453, 455, 456, 457, 461], "someth": [88, 432], "sometim": [447, 456], "somewhat": 448, "somewher": 446, "soon": [438, 446, 453], "sophist": [440, 449, 455], "sort": 159, "sourabh": 442, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 99, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 125, 127, 129, 131, 133, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 197, 200, 202, 203, 204, 205, 207, 208, 211, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 229, 230, 232, 233, 234, 236, 238, 239, 242, 244, 246, 248, 251, 253, 255, 256, 258, 260, 261, 264, 266, 267, 268, 271, 272, 274, 276, 278, 280, 282, 284, 286, 287, 288, 290, 291, 294, 296, 299, 300, 302, 304, 305, 306, 308, 309, 310, 311, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 372, 373, 374, 376, 377, 379, 380, 381, 383, 391, 392, 393, 438, 439, 440, 441, 443], "space": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 31, 38, 45, 52, 55, 68, 73, 78, 84, 88, 136, 137, 138, 140, 141, 143, 150, 151, 154, 177, 186, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 219, 222, 223, 242, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 310, 355, 380, 395, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 421, 423, 424, 425, 427, 430, 435, 436, 440, 442, 445, 447, 448, 449, 450, 452, 453, 455, 456, 460], "span": [61, 136, 137, 138, 140, 141, 143, 150, 151, 154, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 310, 411, 421, 426, 450], "speak": 459, "spec": [216, 222, 233], "special": [185, 438, 439, 443, 444, 449, 459, 461], "specif": [101, 157, 164, 205, 213, 216, 229, 246, 288, 322, 392, 411, 412, 427, 438, 441, 446, 447, 449, 452, 453, 454, 455, 456, 457, 458, 459], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 53, 89, 100, 143, 154, 156, 157, 158, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 232, 233, 242, 244, 246, 256, 304, 305, 306, 314, 329, 338, 346, 349, 355, 356, 380, 381, 397, 401, 403, 415, 416, 421, 423, 434, 438, 439, 440, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459], "speed": [219, 406, 408, 409, 434, 435, 448, 454], "speed_fast": 454, "speed_norm": 454, "speed_slow": 454, "speedup": [440, 459], "spell": 441, "spellcheck": 440, "sphinx": [440, 441], "split": [187, 445], "sporad": 440, "spread": 458, "sqrt": 447, "squar": [421, 424, 447], "squash": 441, "stabil": [440, 448], "stabl": [101, 164, 307], "stage": [446, 447, 455], "stand": 440, "standard": [6, 18, 288, 415, 440, 446, 452], "star": 418, "start": [242, 395, 411, 412, 413, 419, 421, 424, 439, 440, 445, 452, 453, 455, 456, 459], "startup": 440, "stat": [31, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 308, 413, 419, 421, 446], "state": [180, 182, 183, 184, 185, 412, 418, 437, 440, 443, 446, 449], "stateless": [421, 437, 440, 449], "statement": [358, 427, 438, 443], "static": [13, 16, 213, 219, 264, 438, 441, 459], "statist": [31, 251, 253, 254, 255, 260, 264, 278, 280, 282, 284, 311, 435, 438, 440, 448, 460], "statu": 446, "std": [31, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284], "std_threshold": 288, "stem": [439, 459], "step": [216, 222, 242, 418, 421, 437, 438, 441, 446, 451, 455, 457], "sterl": 442, "steven": 397, "still": [157, 346, 412, 421, 445, 447, 448, 450, 452, 457, 459, 461], "stop": [410, 436, 440, 441], "stop_on_pi": 412, "stoppag": 443, "storag": [446, 448, 455], "store": [26, 138, 288, 294, 413, 418, 421, 438, 440, 446, 461], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 88, 96, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 125, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 158, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 193, 195, 202, 203, 204, 205, 211, 213, 218, 219, 232, 236, 246, 248, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 297, 302, 304, 305, 306, 308, 311, 314, 315, 322, 328, 329, 335, 337, 339, 340, 342, 344, 346, 349, 352, 353, 357, 358, 363, 367, 373, 416, 421, 431, 432, 434, 435], "straightforward": [446, 458, 459], "strategi": [15, 195, 213, 240, 395, 421, 440], "stream": [326, 440, 448], "streamingsequentialmetarecommend": [183, 453], "streamingsequentialstrategi": 440, "streamlin": 441, "streamlit": [438, 440], "streibel": 442, "strict": 328, "strictli": [416, 431, 432], "stride": 403, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 153, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 335, 339, 340, 342, 343, 344, 352, 363, 415, 430, 440, 446, 447, 452, 458, 460], "strip": [242, 398], "strong": 440, "strongli": 446, "strtobool": [440, 448], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 49, 232, 438, 439, 440, 441, 442, 446, 452, 455], "studi": [178, 438, 450, 453, 460], "style": [434, 440, 441], "sub": [205, 440, 450, 455], "subclass": [89, 232, 322, 324, 334, 401, 440, 441, 453, 455], "subfold": 448, "subgraph": 452, "subgroup": 419, "subject": 443, "sublicens": 443, "submiss": [440, 443], "submit": [26, 308, 310, 438, 441, 443], "subpackag": [440, 441, 456], "subplot": 424, "subselectioncondit": [407, 408, 440, 449, 460], "subsequ": [185, 213, 219, 246, 339, 437, 443, 446, 455, 457], "subset": [31, 121, 124, 129, 131, 154, 213, 325, 356, 380, 446, 447, 449, 452], "subspac": [26, 61, 187, 195, 210, 211, 213, 215, 217, 219, 403, 406, 407, 408, 409, 423, 426, 428, 430, 440, 447, 453, 455, 460, 461], "subspace_continu": 61, "subspace_json": 455, "subspacecontinu": [31, 61, 136, 150, 213, 215, 426, 440, 454], "subspacediscret": [31, 137, 140, 141, 143, 151, 154, 213, 215, 218, 406, 407, 408, 409, 418, 423, 430, 440, 454, 455, 461], "substanc": [148, 154, 338, 397, 400, 406, 408, 409, 419, 440, 447, 450, 452, 459], "substance_12": 447, "substance_3": 447, "substance_43": 447, "substance_data": 440, "substance_encod": 397, "substanceencod": [154, 338, 340, 406, 407, 408, 409, 440, 452], "substanceparamet": [396, 397, 398, 400, 401, 406, 407, 408, 409, 412, 416, 418, 431, 432, 438, 440, 447, 448, 450, 454, 460], "substanti": [154, 461], "substrat": 459, "subtyp": 455, "success": [296, 380, 421, 455], "success_valu": 296, "suffic": 441, "suffici": [412, 454, 455], "suggest": [450, 456], "suit": 441, "suitabl": [205, 219, 242, 335, 441, 444, 446, 452, 456, 457, 459], "sum": [59, 116, 219, 395, 405, 406, 407, 408, 412, 418, 419, 421, 424, 436, 447, 451, 454], "sum_": [447, 451], "sum_constraint": 418, "sum_constraint_1": 409, "sum_constraint_2": 409, "sum_toler": 418, "summar": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 136, 137, 138, 140, 141, 143, 150, 151, 154, 294, 296, 302], "summari": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 136, 137, 138, 140, 141, 143, 150, 151, 154, 294, 296, 302, 440, 441], "superior": 444, "supersed": 443, "support": [10, 31, 94, 95, 96, 97, 98, 184, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 370, 401, 406, 407, 408, 409, 412, 413, 415, 418, 423, 430, 438, 440, 441, 442, 443, 447, 450, 452, 453, 454, 456, 457], "supports_batch": 440, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 251, 253, 255, 260, 264, 278, 280, 282, 284, 440, 457], "supports_pending_experi": 440, "supports_transfer_learn": [251, 253, 255, 260, 264, 278, 280, 282, 284, 457], "suppos": [310, 447], "sure": [418, 426, 438, 441], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 74, 77, 96, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 193, 195, 202, 203, 204, 205, 211, 213, 219, 251, 253, 256, 258, 260, 264, 266, 267, 271, 274, 276, 278, 280, 282, 284, 406, 407, 408, 409, 413, 421, 423, 430, 436, 438, 440, 442, 445, 446, 447, 450, 451, 452, 453, 459, 460], "surrogate_model": [193, 195, 401, 413, 415, 416, 421, 431, 432, 440], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 96, 193, 195, 255, 258, 440], "svg": 424, "sw": 407, "swiss": 442, "switch": [53, 181, 184, 185, 288, 401, 406, 407, 408, 409, 421, 423, 430, 438, 440, 447, 453], "switch1": 407, "switch2": 407, "switch2_left": 407, "switch2_right": 407, "switch_1": 447, "switch_2": 447, "switch_aft": [185, 431, 432, 453], "switzerland": 442, "sy": 439, "symmetri": 447, "syntax": [438, 440], "synthet": [403, 404, 413, 424, 434, 435], "system": [397, 421, 438, 439, 443, 448, 456, 459], "t": [286, 287, 327, 335, 396, 397, 398, 400, 401, 408, 413, 424, 434, 435, 437, 449, 452, 455, 456], "t1": [455, 456], "t2": 455, "t3": 455, "t_1": 451, "t_2": 451, "t_3": 451, "t_i": 451, "tab": 424, "tabl": [358, 440, 446, 447, 450], "tabular": 456, "tag": [438, 440, 455], "tailor": 446, "take": [8, 49, 108, 137, 151, 156, 157, 251, 253, 255, 260, 264, 274, 278, 280, 282, 284, 297, 411, 418, 440, 445, 446, 447, 451, 452, 453, 459], "taken": [183, 412, 440, 446, 449, 451], "tantamount": 444, "target": [12, 13, 16, 31, 78, 121, 122, 124, 128, 129, 130, 131, 133, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 240, 242, 243, 244, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 288, 296, 299, 300, 302, 330, 346, 349, 350, 356, 357, 360, 372, 373, 375, 393, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 412, 413, 415, 416, 421, 427, 428, 430, 431, 432, 434, 435, 436, 438, 440, 445, 446, 448, 450, 455, 456, 457, 460], "target_1": [407, 408, 409, 423, 445, 451, 458], "target_2": [423, 445, 451, 458], "target_3": [423, 445, 451], "target_3a": 458, "target_3b": 458, "target_a": 457, "target_b": 457, "target_cumbest": [395, 434, 435], "target_max": 446, "target_transform": 423, "targetmod": [302, 455, 458], "targetnam": 242, "targettransform": [302, 440, 458], "task": [141, 213, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 294, 296, 302, 421, 440, 446, 453, 455, 456, 459], "task_idx": [213, 440], "task_param": [434, 435, 456], "task_paramet": 455, "task_parameter_json": 455, "task_parameter_reconstruct": 455, "taskparamet": [226, 434, 435, 440, 449, 455, 456, 460], "tb": 461, "technic": [219, 445, 456, 459], "techniqu": [205, 453], "technologi": 442, "telemetri": [440, 442, 460], "tell": 309, "temp": [406, 408, 442], "temp_c": [396, 397, 398, 412], "temperatur": [396, 398, 400, 401, 406, 408, 411, 415, 416, 430, 447, 452, 454, 459], "temperature_resolut": 406, "temperature_valu": 412, "temporari": [196, 213, 377, 412, 440, 448, 455], "temporarili": [440, 461], "temporary_se": 461, "tempt": 459, "tenac": 440, "tend": 413, "tensor": [26, 45, 251, 286, 287, 349, 359, 363, 383, 385, 434, 440], "term": [111, 240, 412, 421, 441, 443, 446, 450, 454, 455, 456, 459], "termin": [412, 413, 439, 443], "terminologi": 460, "tert": [396, 397, 398, 400, 401], "test": [219, 242, 260, 346, 421, 434, 435, 438, 439, 440, 441, 446, 450, 456, 461], "test_funct": [403, 404, 413, 427, 428, 434, 435], "test_scenario": [396, 398], "testabl": [85, 242], "testfunct": [403, 404, 427, 428], "testfunctionclass": [403, 404, 427, 428], "text": [34, 415, 424, 443, 447, 448, 451], "th": [315, 447], "than": [31, 65, 84, 151, 183, 184, 185, 195, 211, 213, 226, 315, 334, 344, 350, 381, 397, 408, 412, 419, 444, 447, 448, 450, 452, 455, 457], "thei": [157, 178, 188, 305, 352, 356, 401, 409, 412, 418, 421, 426, 440, 441, 445, 446, 447, 450, 452, 453, 454, 455, 458, 459, 461], "them": [38, 274, 347, 401, 438, 439, 440, 441, 445, 447, 448, 449, 450, 452, 453, 455, 459], "theme": 440, "theori": 443, "therebi": 219, "therefor": [44, 185, 251, 253, 255, 260, 264, 278, 280, 282, 284, 401, 439, 446, 455, 457, 459], "therein": 440, "thereof": 443, "thf": 447, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 157, 180, 182, 183, 184, 185, 187, 195, 202, 203, 204, 205, 211, 213, 219, 240, 244, 246, 248, 251, 253, 255, 256, 258, 259, 260, 264, 274, 278, 280, 282, 284, 288, 311, 314, 330, 331, 334, 339, 346, 348, 350, 351, 353, 355, 358, 395, 411, 412, 413, 415, 416, 418, 419, 421, 424, 426, 430, 431, 432, 434, 435, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461], "think": [421, 452], "third": [423, 443, 456], "thompson": [21, 442], "thomson": 21, "those": [63, 157, 185, 187, 240, 380, 401, 439, 443, 445, 447, 456], "though": 459, "three": [397, 418, 419, 423, 424, 438, 446, 447, 450, 451, 453, 454, 459], "threshold": [42, 44, 143, 154, 156, 158, 185, 195, 288, 353, 403, 408, 409, 412, 418, 440, 447, 452], "thresholdcondit": [58, 59, 403, 408, 409, 418, 460], "through": [31, 213, 304, 314, 346, 356, 416, 418, 421, 423, 438, 440, 441, 443, 447, 451, 455, 456, 460], "throughout": 185, "throw": [339, 447], "thrown": [244, 398, 412, 431, 439, 445, 451], "thu": [195, 330, 356, 396, 397, 403, 404, 406, 407, 408, 409, 415, 416, 418, 421, 423, 427, 428, 430, 439, 441, 446, 448, 449, 452, 453, 455, 456, 459, 461], "tick": 413, "tight_layout": 424, "time": [10, 195, 311, 381, 404, 411, 418, 421, 438, 440, 445, 446, 447, 449, 452, 455, 456, 457, 461], "timeout": [440, 448], "timer": 411, "titl": [424, 443], "tl": 434, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 440], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 363], "to_factori": [103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118], "to_fram": 395, "to_gpytorch": [103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 166, 168, 169, 170, 171, 172, 173, 174, 440], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 294, 296, 302, 363, 415, 416, 430, 446, 455], "to_keep": 354, "to_ndarrai": 363, "to_numpi": [413, 424], "to_object": [294, 296, 302, 395, 403, 404, 413, 421, 424, 427, 428, 434, 435, 451, 456], "to_polar": [40, 41, 42], "to_searchspac": [136, 137, 138, 140, 141, 143, 150, 151, 154, 211, 219, 421, 426, 440, 449], "to_str": 440, "to_subspac": [136, 137, 140, 141, 143, 150, 151, 154, 440], "to_tensor": [363, 415, 440], "to_tupl": [363, 424], "togeth": [38, 69, 315, 401, 421, 428, 438, 440, 447], "toggl": 31, "toggle_discrete_candid": [31, 440, 449], "toler": [31, 42, 151, 219, 392, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 412, 415, 416, 418, 423, 427, 428, 430, 431, 432, 438, 440, 447], "tolist": 403, "toluen": 452, "toml": 440, "too": [403, 456, 459], "tool": [336, 438, 440, 447, 455], "toolbox": 438, "top": [440, 441], "topic": 446, "topolog": 452, "topologicaltors": 148, "topologicaltorsionfingerprint": 148, "torch": [349, 363, 415, 434, 440], "toronto": 442, "tort": 443, "total": [184, 185, 380, 418, 419, 421, 454], "total_bas": 419, "total_phase_ag": 419, "toward": [168, 346, 447], "towel": 437, "tox": [440, 441], "tracebackexcept": 439, "track": [177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 219, 412, 443, 449], "trade": [8, 443, 451], "trademark": 443, "tradit": [397, 417, 418, 436, 438, 440], "train": [80, 96, 177, 183, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 248, 251, 253, 255, 256, 258, 259, 260, 264, 278, 280, 282, 284, 288, 414, 424, 434, 435, 440, 456], "train_i": 415, "train_x": 415, "training_funct": 435, "trajectori": [240, 395, 412, 421, 446, 456], "transfer": [247, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 401, 406, 407, 408, 409, 423, 430, 434, 436, 438, 440, 443, 452, 457, 460], "transform": [31, 80, 121, 124, 129, 131, 137, 138, 140, 141, 143, 151, 154, 211, 213, 219, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 294, 296, 300, 302, 340, 349, 356, 360, 363, 364, 383, 406, 407, 408, 409, 430, 440, 443, 448, 452, 457, 458], "transform_rep_exp2comp": 440, "transit": 440, "translat": [38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 440, 443, 449, 452], "transmiss": 455, "transmit": 311, "travers": 440, "treasur": 460, "treat": [154, 158, 251, 253, 255, 260, 264, 278, 280, 282, 284, 397, 438, 447, 452, 458, 461], "tree": 440, "tremend": 397, "trend": 459, "tri": 454, "triangl": 306, "triangular": [300, 306, 423, 458], "tricki": 450, "tricyclohexylphosphin": [396, 397, 398], "trigger": [183, 314, 412, 416, 421, 440, 441, 445, 451, 455], "trivial": [267, 280, 451, 452, 457], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 96, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 158, 195, 213, 264, 296, 305, 323, 324, 328, 334, 335, 344, 354, 392, 397, 401, 403, 404, 406, 407, 408, 409, 413, 415, 416, 418, 421, 423, 427, 428, 430, 431, 432, 434, 435, 440, 445, 446, 447, 448, 449, 450, 452, 455], "truncat": [438, 448], "trust": [415, 448], "truth": 335, "truthi": 448, "try": [88, 346, 396, 397, 398, 412, 415, 416, 432, 439, 440, 461], "tune": 438, "tupl": [13, 16, 31, 41, 45, 103, 104, 105, 108, 110, 112, 113, 114, 116, 117, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 159, 211, 213, 218, 219, 287, 314, 321, 328, 331, 343, 346, 359, 363, 367, 383], "turn": [44, 211, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 367, 426, 438, 439, 440, 447, 448, 451], "turnaround": 456, "twice": [449, 451], "two": [13, 16, 34, 55, 64, 65, 125, 185, 195, 240, 315, 320, 349, 372, 380, 395, 396, 398, 411, 418, 421, 423, 424, 428, 434, 435, 437, 438, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "twofold": 421, "twophasemetarecommend": [396, 398, 401, 406, 407, 408, 409, 412, 413, 415, 416, 421, 423, 428, 430, 431, 432, 438, 440, 453], "twophasestrategi": 440, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 125, 129, 131, 133, 136, 137, 138, 140, 141, 143, 150, 151, 153, 154, 156, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 197, 200, 202, 203, 204, 205, 207, 208, 211, 213, 214, 215, 216, 219, 220, 221, 222, 224, 225, 226, 229, 230, 232, 233, 234, 236, 238, 239, 242, 244, 246, 248, 251, 253, 254, 255, 256, 258, 260, 261, 264, 267, 268, 272, 278, 280, 282, 284, 286, 287, 288, 290, 291, 294, 296, 297, 302, 304, 305, 306, 308, 309, 310, 311, 314, 315, 317, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 367, 369, 370, 372, 373, 374, 380, 381, 383, 385, 388, 389, 390, 391, 392, 393, 397, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 421, 423, 430, 431, 432, 438, 440, 441, 443, 444, 447, 450, 451, 452, 453, 454, 457, 459, 460], "typealia": 297, "typeerror": [31, 96, 100, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 330, 346, 347, 381, 392, 393, 412, 413], "typeguard": 327, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 157, 166, 168, 169, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 211, 213, 219, 224, 232, 233, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 287, 294, 296, 302, 324, 325, 326, 327, 343, 349, 356, 363], "typic": [15, 330, 344, 397, 438, 445, 446, 450, 452, 455, 461], "typing_extens": 441, "typo": [440, 441], "u": [21, 395, 396, 397, 398, 411, 413, 418, 419, 421, 426, 435, 438, 444, 445, 447, 451], "ucb": [8, 401, 440, 444, 446, 455], "ultim": 441, "ultra": [431, 432], "un": 440, "unabl": 415, "unavail": 440, "unawar": 445, "unbound": [363, 411], "uncaught": 440, "uncertainti": [8, 15, 401, 460], "unchang": 156, "uncharacter": 459, "uncorrel": [353, 459], "undefin": [251, 449], "under": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 311, 356, 409, 413, 421, 424, 438, 439, 443, 452], "underflow": 86, "underli": [31, 55, 412, 421, 438, 440, 446, 450, 453, 455], "underscor": 440, "understand": [438, 459], "undesir": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 91, 447, 449, 452, 461], "undo": 439, "unequ": 409, "unevenli": 452, "unexpect": 88, "unfinish": 445, "unfortun": 459, "unhandl": 440, "uniform": [211, 251, 347, 348, 440], "uniformli": 380, "uniniti": 334, "uninstal": [87, 438], "unintend": [91, 330, 440, 441], "unintention": 461, "union": [13, 16, 31, 125, 158, 242, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 304, 305, 306, 373, 428, 443, 454], "uniqu": [56, 133, 157, 418, 440, 452], "unit": [218, 367], "unknown": [184, 380, 395, 421, 440, 457, 459], "unlabel": 349, "unless": [438, 441, 443, 448, 452, 455], "unlik": [12, 13, 14, 16, 17, 418, 451, 461], "unlock": 460, "unmaintain": 440, "unmatch": 328, "unmatchedattributeerror": 328, "unmeasur": [242, 398], "unnecessari": [440, 446], "unpromis": [412, 445], "unreach": 440, "unrealist": 456, "unrecogn": 346, "unrestrict": 330, "unsaf": 440, "unspecifi": [319, 440, 455], "unspecifiedtyp": 31, "unstructur": [234, 455], "unstructure_bas": 232, "unsupport": [211, 244, 445], "until": [180, 182, 183, 184, 185, 242, 421, 438, 445, 456], "untouch": 347, "untransform": [31, 457], "unusedobjectwarn": [412, 440, 445], "unveil": 435, "unwant": 38, "up": [31, 219, 242, 244, 395, 396, 397, 398, 399, 406, 408, 411, 413, 417, 418, 419, 424, 428, 434, 435, 438, 439, 440, 444, 447, 451, 461], "updat": [31, 397, 400, 440, 441, 445], "update_measur": 31, "upgrad": 440, "upon": [187, 267, 439, 440, 441, 447, 454, 457, 459], "upper": [8, 22, 158, 174, 213, 219, 304, 305, 306, 363, 401, 413, 423, 424, 434, 435, 440, 447, 458, 461], "upper_bound": [406, 407, 408, 409, 430, 454], "upper_threshold": 158, "upperconfidencebound": [22, 444, 455], "upstream": 441, "urg": 450, "url": [448, 459], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 69, 73, 96, 108, 124, 125, 143, 148, 151, 154, 157, 177, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 219, 220, 221, 233, 242, 244, 246, 251, 253, 255, 260, 261, 264, 278, 280, 282, 284, 300, 310, 311, 317, 330, 331, 339, 340, 346, 348, 349, 355, 365, 369, 370, 380, 385, 395, 403, 404, 410, 411, 412, 413, 414, 417, 418, 419, 426, 430, 431, 432, 434, 435, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 458, 459, 460, 461], "usa": 442, "usabl": [334, 439, 440, 452, 455], "usag": [366, 438, 440, 447, 448, 453, 460], "use_comp_rep": [96, 100, 450], "use_torch": [349, 403, 404, 413, 427, 428, 434, 435], "user": [52, 53, 67, 81, 91, 143, 146, 251, 253, 255, 260, 264, 278, 280, 282, 284, 291, 308, 348, 400, 401, 406, 423, 432, 438, 439, 440, 441, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459], "userguid": 307, "usernam": [308, 440, 448], "userwarn": 439, "uses_shap_explain": 96, "usort": 440, "usr": 148, "usrcat": 148, "usrcatfingerprint": 148, "usrfingerprint": 148, "usual": [242, 396, 397, 398, 431, 439, 450, 452], "util": [31, 195, 211, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 310, 317, 319, 320, 363, 379, 383, 395, 397, 400, 401, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 421, 423, 424, 427, 428, 434, 435, 438, 440, 444, 445, 446, 450, 451, 452, 453, 455, 456, 457, 459, 460], "uv": 440, "v": 459, "val": [49, 335, 434], "val_from_param1": 57, "val_from_param2": 57, "valid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 156, 157, 213, 216, 219, 222, 260, 350, 355, 406, 429, 431, 436, 439, 440, 441, 446, 447, 456], "validate_compat": 260, "validate_config": [31, 432, 440, 446], "validate_parameter_input": 31, "validate_target_input": 31, "valu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 44, 45, 53, 55, 78, 96, 107, 108, 109, 110, 111, 112, 113, 114, 118, 121, 124, 125, 129, 131, 137, 140, 141, 143, 145, 146, 148, 151, 154, 156, 157, 158, 161, 162, 163, 185, 193, 195, 202, 203, 204, 205, 211, 213, 219, 220, 221, 240, 242, 244, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 296, 297, 299, 304, 305, 306, 311, 314, 318, 319, 325, 328, 335, 342, 346, 347, 348, 350, 352, 355, 356, 358, 363, 365, 372, 373, 374, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 403, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 421, 423, 424, 427, 428, 430, 431, 432, 434, 435, 438, 440, 441, 444, 445, 447, 448, 449, 450, 451, 458, 459, 460, 461], "valuabl": [453, 456], "valueerror": [13, 15, 16, 31, 44, 63, 64, 65, 96, 100, 125, 133, 156, 157, 162, 163, 211, 213, 219, 225, 242, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 291, 315, 328, 333, 335, 338, 342, 344, 346, 348, 350, 355, 356, 357, 380, 381, 392, 393, 416, 428, 439], "var": [31, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 421, 460], "vari": [31, 219, 397, 451], "variabl": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 121, 124, 129, 131, 136, 137, 138, 140, 141, 143, 150, 151, 154, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 251, 253, 255, 260, 264, 278, 280, 282, 284, 294, 309, 311, 371, 386, 427, 438, 440, 441, 447, 452, 453, 455, 457], "varianc": [8, 15, 107, 280, 351, 440, 444], "variance_initial_valu": 107, "variance_prior": 107, "variant": [401, 434, 450, 459], "variat": 424, "varieti": [427, 441, 455, 456], "variou": [363, 418, 425, 440, 445, 450, 453, 456], "varucb": 440, "vector": [34, 415, 440, 442, 451], "vendor": 452, "verbal": 443, "verbos": [416, 440], "veri": [406, 408, 423, 445, 448, 450, 452, 457, 461], "verifi": [334, 403, 406, 407, 408, 409, 418, 419, 426, 428, 430, 438, 441], "versa": [434, 459], "versatil": 453, "version": [213, 308, 370, 406, 408, 409, 418, 421, 426, 434, 435, 438, 439, 440, 441, 443, 455], "vert": 413, "via": [12, 15, 21, 30, 31, 44, 96, 185, 195, 207, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 310, 322, 330, 346, 354, 398, 404, 411, 412, 415, 426, 438, 440, 441, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 458, 459, 460], "via_init": 455, "via_json": 455, "viabl": [84, 423], "vice": [434, 459], "view": [211, 219, 413, 454], "view_init": 413, "violat": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 79, 440], "viridi": 413, "virtual": 441, "visibl": 440, "visual": [397, 434, 435, 450, 458], "vitro": 445, "vivo": 445, "volum": 459, "vpn": [438, 448], "vsa": 148, "vsafingerprint": 148, "vulner": [440, 441], "w_i": 451, "wa": [15, 70, 71, 74, 77, 78, 87, 91, 157, 185, 251, 253, 255, 260, 264, 278, 280, 282, 284, 342, 346, 350, 381, 397, 439, 440, 441, 443, 448, 450, 452, 455, 459], "wai": [213, 411, 418, 419, 425, 426, 434, 437, 438, 445, 448, 449, 450, 452, 454, 455, 456, 457, 458, 459, 461], "wait": 445, "wall": 10, "want": [52, 401, 406, 418, 421, 428, 435, 438, 441, 446, 447, 448, 449, 450, 452, 453, 455, 457, 458], "warn": [66, 331, 406, 408, 409, 412, 427, 428, 440, 441], "warranti": [438, 443], "watch": 411, "water": [406, 407, 408, 409, 418, 447, 452], "waterfal": [96, 98, 440], "we": [26, 240, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 421, 423, 424, 426, 427, 428, 430, 431, 432, 434, 435, 438, 439, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 457, 458, 459, 460, 461], "web": 441, "weber": 442, "weight": [124, 125, 374, 423, 451, 455], "weight_kdalton": 452, "welcom": 441, "well": [308, 401, 412, 417, 437, 441, 446, 447, 450, 452, 456], "were": [31, 75, 82, 346, 398, 435, 439, 440, 445, 447, 448, 452, 454], "what": [157, 183, 213, 240, 346, 383, 395, 415, 423, 432, 437, 441, 444, 446, 450, 452, 459, 460], "whatsnew": 320, "when": [13, 16, 31, 44, 53, 88, 151, 156, 158, 183, 184, 185, 193, 195, 213, 251, 253, 255, 260, 261, 264, 278, 280, 282, 284, 291, 318, 319, 328, 330, 334, 344, 346, 349, 381, 406, 407, 409, 411, 416, 418, 419, 421, 423, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461], "whenev": [26, 183, 346, 455], "where": [13, 16, 21, 26, 34, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 177, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 240, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 314, 346, 380, 396, 397, 398, 401, 406, 408, 418, 421, 438, 439, 440, 441, 443, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459], "wherea": 455, "wherev": [443, 445], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 100, 136, 137, 138, 140, 141, 143, 150, 151, 154, 195, 211, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 309, 348, 357, 363, 418, 440, 443, 446, 448, 449, 458], "which": [13, 15, 16, 31, 40, 41, 42, 44, 91, 96, 121, 124, 129, 131, 157, 158, 177, 178, 180, 182, 183, 184, 185, 187, 190, 193, 195, 200, 202, 203, 204, 205, 207, 208, 213, 219, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 310, 311, 330, 334, 346, 348, 353, 355, 358, 372, 373, 383, 395, 397, 401, 404, 411, 412, 418, 419, 421, 426, 427, 428, 432, 434, 435, 438, 439, 440, 441, 443, 444, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 461], "while": [213, 216, 222, 412, 421, 423, 435, 439, 440, 443, 444, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459], "whilst": 346, "whim": 148, "whimfingerprint": 148, "whole": 443, "whom": 443, "whose": [125, 156, 157, 213, 244, 325, 328, 349, 395, 411, 418, 445, 456], "wide": 456, "wider": 458, "width": 358, "wieczorek": 442, "william": 459, "willing": 446, "win": [251, 421], "win_rat": 421, "window": [440, 448], "winerror": 439, "wise": 374, "wish": 455, "within": [31, 136, 137, 138, 140, 141, 143, 150, 151, 154, 156, 392, 426, 440, 443, 447, 448, 452, 457, 459, 460, 461], "without": [184, 434, 435, 438, 440, 443, 445, 446, 447, 448, 452, 456, 459, 461], "won": 452, "work": [26, 285, 314, 349, 406, 408, 409, 412, 423, 430, 432, 438, 440, 441, 442, 443, 445, 447, 448, 453, 455, 456], "workaround": [439, 440], "workflow": [415, 438, 446, 455, 460], "world": [438, 446], "worldwid": 443, "worst": [13, 16, 242, 244, 246, 398], "would": [56, 86, 156, 157, 240, 242, 248, 259, 411, 418, 421, 438, 441, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459, 461], "wrap": [103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 264, 268, 286, 287, 330, 438, 440, 451], "wrapper": [1, 25, 246, 248, 260, 331, 434, 435, 438, 453], "write": [438, 439, 443, 455], "written": [427, 428, 441, 443], "wrong": [432, 440], "wrongli": 439, "www": [438, 443], "x": [26, 122, 158, 215, 242, 244, 268, 321, 327, 331, 343, 359, 372, 383, 395, 396, 397, 398, 406, 407, 408, 409, 412, 413, 418, 423, 430, 434, 435, 438, 440, 454, 457], "x0": [424, 454], "x0_mesh": 424, "x1": [424, 454], "x1_mesh": 424, "x2": 454, "x_": [395, 403, 404, 426, 427, 428], "x_1": [403, 404, 426, 427, 428, 447], "x_2": [403, 404, 426, 427, 428, 447], "x_3": [403, 404, 426, 427, 428, 447], "x_4": [403, 404, 426, 427, 428], "x_5": 428, "x_6": 428, "x_i": 447, "x_pend": 26, "xlabel": 424, "xlsx": [396, 397, 398, 412], "xpho": [396, 397, 398], "xxxx": 439, "xylen": [396, 397, 398, 400, 401], "y": [276, 335, 353, 372, 395, 396, 397, 398, 412, 413, 415, 418, 434, 435, 438, 459], "y0": 424, "y0_mesh": 424, "y1": 424, "y1_mesh": 424, "ye": 335, "year": 459, "yet": [26, 440, 445, 453], "yield": [6, 108, 254, 396, 397, 398, 400, 401, 406, 412, 415, 416, 418, 428, 430, 431, 432, 438, 440, 444, 450, 451, 455], "yield_cumbest": [396, 397, 398, 412], "yield_mean": 446, "yield_mod": 446, "yield_q_0": 446, "yield_std": 446, "ylabel": 424, "yml": 440, "you": [31, 52, 397, 401, 403, 411, 416, 418, 421, 427, 428, 431, 437, 438, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461], "your": [397, 411, 418, 421, 428, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 450, 452, 455, 456, 457, 458, 459, 461], "your_branch_nam": 441, "yourself": 421, "z": [413, 438], "zdir": 413, "zero": [44, 63, 65, 156, 158, 168, 351, 418, 421, 447, 459], "zip": [412, 413], "\u00b5fmt": 440, "\u0161o\u0161i\u0107": [438, 442]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.IncompleteMeasurementsError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoMeasurementsError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.conversion.to_string", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.handle_missing_values", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 441, "0": 440, "01": 440, "02": 440, "03": 440, "04": 440, "05": 440, "06": 440, "07": 440, "08": 440, "09": 440, "1": 440, "10": 440, "11": 440, "12": 440, "13": 440, "14": 440, "15": 440, "16": 440, "17": 440, "19": 440, "2": 440, "2022": 440, "2023": 440, "2024": 440, "2025": 440, "21": 440, "23": 440, "24": 440, "27": 440, "28": 440, "29": 440, "3": 440, "31": 440, "4": 440, "5": 440, "6": 440, "7": 440, "8": 440, "9": 440, "A": 438, "For": 452, "On": 450, "The": [421, 431, 438, 449, 455, 456, 459], "abbrevi": 455, "acqf": 2, "acquisit": [1, 2, 23, 25, 27, 28, 29, 401, 445, 446], "acquisitionfunct": 24, "action": 459, "activ": [444, 452], "activate_paramet": 156, "ad": [400, 440, 445, 446, 459, 461], "add_fake_measur": 346, "add_noise_to_perturb_degenerate_row": 347, "add_parameter_nois": 348, "addendum": 423, "addit": 418, "additivekernel": 116, "advanc": [438, 457], "altern": 455, "amount": 418, "an": 421, "appli": 449, "arm": [420, 421], "arm64": 439, "arrai": 456, "arrays_to_datafram": 349, "assembli": 455, "asynchron": 445, "attr": 441, "augment": [313, 314, 315], "auto": 457, "automat": 455, "avail": [401, 457], "avx": 439, "back": 438, "backtest": [394, 434], "bandit": [250, 420, 421], "base": [23, 33, 102, 120, 122, 135, 165, 176, 179, 189, 192, 199, 252, 254, 293, 396, 397, 398, 403, 404, 418, 419, 428, 449, 456], "basesequentialmetarecommend": 182, "basic": [106, 167, 316, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 399, 400, 446, 448, 450, 455], "basickernel": 103, "batch": 446, "batchify_ensemble_predictor": 286, "batchify_mean_var_predict": 287, "batteri": 438, "bayb": [0, 1, 2, 23, 25, 27, 28, 29, 30, 32, 33, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 106, 115, 119, 120, 122, 123, 125, 126, 128, 130, 132, 133, 134, 135, 139, 142, 144, 149, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 175, 176, 178, 179, 181, 186, 188, 189, 191, 192, 194, 196, 197, 198, 199, 201, 206, 209, 210, 212, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 257, 259, 261, 262, 263, 265, 268, 269, 270, 272, 273, 275, 277, 279, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 400, 438, 441], "bayesian": [191, 192, 194, 196, 197, 438, 453], "bayesianlinearsurrog": 278, "bayesianrecommend": 193, "bell_transform": 304, "bernoulli": 421, "betabernoullimultiarmedbanditsurrog": 251, "betaprior": 168, "binari": [295, 297], "binarytarget": 296, "black": [395, 421], "block_deserialization_hook": 229, "block_serialization_hook": 230, "bo": 450, "boolean": [332, 333, 334, 335], "both": 430, "botorch": [194, 427], "botorchrecommend": 195, "bound": [411, 451, 454], "box": [395, 421], "break": 440, "build": [421, 454], "bytes_to_human_read": 367, "cach": [446, 448], "call": 449, "callabl": [403, 404, 428, 456], "campaign": [30, 31, 395, 396, 397, 398, 401, 403, 404, 406, 407, 409, 412, 415, 416, 423, 424, 427, 428, 430, 431, 446], "candid": [446, 449], "cardinalityconstraint": 34, "case": 421, "cast": 451, "catch_constant_target": 288, "categor": 139, "categoricalencod": 145, "categoricalparamet": [140, 452], "caution": 449, "challeng": 447, "chang": 440, "changelog": 440, "check_if_in": 333, "chemic": 438, "chemistri": [336, 337, 338, 339, 340], "choicevalu": 297, "class": 441, "classproperti": 320, "clone": 438, "closer_el": 372, "closest_el": 373, "cluster": [201, 453], "code": 441, "columntransform": 383, "compar": 430, "compon": 411, "composit": [115, 257, 457], "compositekernel": 104, "compositesurrog": 258, "comput": [447, 450], "condit": [39, 40, 447], "config": [431, 432, 446], "configur": [415, 416, 431, 449, 451, 455], "constraint": [32, 33, 35, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 402, 403, 404, 405, 406, 407, 408, 409, 418, 419, 447, 449, 454, 461], "construct": [396, 397, 398, 403, 404, 418, 427, 428, 451, 454], "constructor": [454, 455], "continu": [43, 210, 402, 404, 418, 426, 444, 447, 452, 454, 459, 461], "continuouscardinalityconstraint": [44, 447], "continuousconstraint": 36, "continuouslinearconstraint": [45, 447], "continuouslinearequalityconstraint": 47, "continuouslinearinequalityconstraint": 48, "continuousnonlinearconstraint": 37, "continuousparamet": 136, "contribut": 441, "contributor": 442, "control": [446, 449], "conveni": 451, "convent": 441, "convers": [341, 342, 343, 344, 451, 455], "convert": [231, 415], "convert_acqf": 28, "convert_bound": 364, "convert_to_float": 321, "copi": 455, "core": [212, 215, 216, 228, 229, 230, 231, 232, 233, 234, 241, 242, 263, 270, 272], "cpu": 439, "creat": [395, 396, 397, 398, 401, 403, 404, 406, 407, 408, 409, 415, 416, 423, 426, 427, 430, 431, 434, 435, 446, 454], "create_fake_input": 350, "creation": [396, 397, 398, 418, 419, 446, 461], "current": 457, "custom": [142, 259, 261, 395, 406, 410, 411, 414, 415, 416, 457], "customdiscreteparamet": [143, 452], "customencod": 146, "customonnxsurrog": 260, "data": [396, 397, 398, 454, 459], "datafram": [345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 403, 404, 428, 454, 455, 456], "de": [430, 455], "default": [273, 454, 455], "defaultkernelfactori": 274, "defin": [395, 403, 404, 411, 412, 413, 423, 424, 427, 428, 432, 434, 435, 438], "definit": 412, "depend": [407, 438, 452], "deprec": [46, 47, 48, 49, 440], "deprecationerror": 67, "descript": 423, "deseri": 455, "deserialize_datafram": 238, "design": [438, 441], "desir": [123, 125, 446], "desirabilityobject": [124, 451], "develop": 441, "df_apply_dependency_augment": 314, "df_apply_permutation_augment": 315, "df_drop_single_value_column": 351, "df_drop_string_column": 352, "df_uncorrelated_featur": 353, "dictionari": [431, 432], "differ": 401, "dimens": 428, "discret": [50, 217, 220, 221, 222, 405, 406, 407, 408, 418, 427, 446, 447, 452, 454], "discretecardinalityconstraint": [51, 447], "discreteconstraint": 38, "discretecustomconstraint": [52, 447], "discretedependenciesconstraint": [53, 447], "discreteexcludeconstraint": [54, 447], "discretelinkedparametersconstraint": [55, 447], "discretenolabelduplicatesconstraint": [56, 447], "discreteparamet": 137, "discretepermutationinvarianceconstraint": [57, 447], "discreteproductconstraint": [58, 447], "discretesamplingmethod": 379, "discretesumconstraint": [59, 447], "discuss": 421, "disk": 448, "do": 456, "docstr": 441, "document": 416, "domin": 451, "dtypefloatnumpi": 369, "dtypefloatonnx": 370, "dtypefloattorch": 385, "dummi": 317, "duplic": 418, "dure": 461, "dynam": 449, "edbo": 275, "edbokernelfactori": 276, "effici": 461, "emptysearchspaceerror": 68, "encod": 452, "end": 438, "enum": [126, 144, 298], "environ": 448, "equival": 455, "estim": 461, "exampl": [396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 415, 416, 423, 427, 428, 430, 431, 432, 436, 438, 450], "except": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "exceptiongroup": 439, "exclud": 449, "exclus": [408, 409, 449], "expect": 459, "expectedimprov": 3, "experi": [406, 407, 408, 409, 415, 416, 423, 430, 438, 445, 456], "experiment": [446, 448, 450], "expir": 440, "explain": [94, 450], "explicit": 454, "extend": 441, "extract": 457, "fake": 461, "faq": 437, "farthest_point_sampl": 380, "featur": 448, "field": 455, "file": [431, 432], "filter_df": 354, "find_subclass": 322, "finite_float": 388, "fix": [439, 440], "float": 448, "fpsrecommend": 207, "fraction_to_float": 342, "from": [431, 438, 440, 446, 454, 455], "full": [396, 397, 398, 454], "function": [395, 396, 397, 398, 401, 403, 404, 412, 423, 427, 428, 441, 445, 446], "further": 446, "fuzzy_row_match": 355, "gammaprior": 169, "gaussian_process": [262, 263, 265, 268, 269, 270, 272, 273, 275], "gaussianmixtureclusteringrecommend": 202, "gaussianprocesspreset": 271, "gaussianprocesssurrog": 264, "gener": [434, 435, 441, 453], "geom_mean": 374, "get": [400, 446, 449], "get_base_structure_hook": 232, "get_baseclass": 323, "get_canonical_smil": 337, "get_fingerprint_class": 338, "get_model_params_valid": 290, "get_parameters_from_datafram": 157, "get_subclass": 324, "get_transform_object": 356, "get_transform_paramet": 224, "get_user_detail": 308, "github": 438, "global": 444, "group_duplicate_valu": 325, "guid": 460, "halfcauchyprior": 170, "halfnormalprior": 171, "handle_missing_valu": 357, "hilberts_factori": 326, "hook": [410, 411, 412, 413], "hybrid": [403, 428, 447], "imaginari": 421, "implicit": 451, "import": [395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 411, 413, 415, 416, 418, 419, 421, 423, 424, 426, 427, 428, 430, 431, 432, 434, 435, 450], "improv": 413, "includ": 438, "inclus": 396, "incompatibilityerror": 69, "incompatibleacquisitionfunctionerror": 70, "incompatibleargumenterror": 71, "incompatibleexplainererror": 72, "incompatiblesearchspaceerror": 73, "incompatiblesurrogateerror": 74, "incomplet": 398, "incompletemeasurementserror": 75, "incorpor": 409, "independentgaussiansurrog": 253, "index": 438, "indic": 438, "infeasibilityerror": 76, "infiniteintervalerror": 362, "influenc": 461, "inform": [446, 453], "initi": [396, 401], "insight": [92, 93, 94, 95, 97, 98, 99, 100, 450], "instal": [438, 439], "instanc": 411, "instead": [415, 416], "instruct": 448, "internet": 448, "interpret": 450, "interrupt": 412, "interv": [361, 362, 363, 364, 365], "invalidsurrogatemodelerror": 77, "invalidtargetvalueerror": 78, "invari": 418, "invok": 455, "irrelev": 459, "is_abstract": 334, "is_all_inst": 327, "is_cardinality_fulfil": 61, "is_en": 309, "is_inact": 158, "is_shap_explain": 99, "issu": [438, 439], "iter": [403, 404, 415, 416, 423], "json": [446, 455], "kernel": [101, 102, 105, 106, 115], "kernel_factori": [265, 268], "kernelfactori": 266, "kmeansclusteringrecommend": 203, "known": [438, 439], "label": 452, "leak": 439, "learn": [433, 435, 444, 456, 459], "licens": [438, 443], "like": 452, "limit": [445, 450, 457, 458], "linear": [277, 404], "linear_transform": 305, "linearkernel": 107, "link": 416, "local": [438, 444], "logexpectedimprov": 4, "lognormalprior": 172, "look_up_target": 244, "lookup": [243, 244, 396, 397, 398, 403, 404, 412, 428, 434, 435, 456], "loop": [395, 396, 397, 398, 434, 435, 438], "maco": 439, "maintain": [438, 442], "make_explainer_for_surrog": 100, "make_gp_from_preset": 272, "mandatori": 451, "manual": [406, 407, 408, 409], "mark": 445, "match": 458, "match_attribut": 328, "maternkernel": 108, "max": 458, "mean": 456, "meanpredictionsurrog": 280, "measur": [400, 415, 416, 446, 461], "mechan": [396, 397, 398, 456], "memori": [366, 367, 461], "memorys": 218, "meta": [178, 179, 181, 449, 453], "metarecommend": 180, "method": [411, 441, 444], "min": 458, "minimumcardinalityviolatedwarn": 79, "miss": 456, "mixin": 235, "mixtur": [417, 418, 419], "mode": [423, 458], "model": [401, 415, 416, 418, 419, 421, 450, 457], "modelnottrainederror": 80, "monitor": 413, "monkeypatch": [411, 412, 413], "multi": [420, 421, 422, 423, 451, 457], "multipl": 456, "naiv": [186, 279], "naivehybridspacerecommend": 187, "name": 452, "name_to_smil": 339, "necessari": [396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 415, 416, 423, 427, 428, 430, 431, 432], "nest": 455, "ngboost": 281, "ngboostsurrog": 282, "nois": 461, "nomcacquisitionfunctionerror": 81, "nomeasurementserror": 82, "non": 451, "non_inf_float": 389, "non_nan_float": 390, "non_shap_explain": 95, "none": 456, "nonpredict": [198, 199, 201, 206], "nonpredictiverecommend": 200, "nonstring_to_tupl": 343, "norecommenderslefterror": 83, "normalprior": 173, "notenoughpointslefterror": 84, "nothingtosimulateerror": 85, "numer": [149, 301, 368, 369, 370, 371, 372, 373, 374], "numericalcontinuousparamet": [150, 452], "numericaldiscreteparamet": [151, 452], "numericaltarget": [302, 458], "numericalunderflowerror": 86, "object": [119, 120, 121, 122, 123, 125, 126, 128, 130, 132, 133, 396, 397, 398, 401, 403, 404, 406, 407, 408, 409, 423, 427, 430, 434, 435, 438, 446, 451, 455], "onnx": 415, "optim": [395, 424, 434, 435, 438, 446, 461], "option": [438, 452], "optionalimporterror": 87, "order": [418, 448], "output": [415, 416, 451, 457], "overrid": 441, "packag": [438, 448], "page": 450, "pamclusteringrecommend": 204, "parallel": 446, "paramet": [134, 135, 138, 139, 142, 144, 149, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 396, 397, 398, 401, 416, 418, 419, 446, 450, 452, 454, 461], "parameter_cartesian_prod_panda": 220, "parameter_cartesian_prod_polar": 221, "parameterencod": 147, "pareto": [128, 424], "paretoobject": [129, 451], "partial": [25, 445], "partialacquisitionfunct": 26, "pass": 416, "pend": 445, "perform": [396, 423, 427, 428], "periodickernel": 109, "perman": 449, "permut": 418, "piecewisepolynomialkernel": 110, "plainkernelfactori": 267, "plot": [395, 412, 413, 450], "point": 448, "polar": [439, 448], "polynomialkernel": 111, "posterior": 446, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 254, "pre": 415, "precis": 448, "predict": 446, "preset": [269, 270, 272, 273, 275], "pretrain": 415, "pretty_print_df": 358, "print": [406, 407, 409, 423], "prior": [164, 165, 166, 167], "probabilityofimprov": 7, "probabl": 413, "problem": [395, 412, 424, 439], "product": [409, 454], "productkernel": 117, "pull": 441, "pure": [188, 189, 191, 192, 194, 196, 197, 198, 199, 201, 206, 444, 453], "purerecommend": 190, "pycharm": 439, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedhypervolumeimprov": 13, "qlognoisyexpectedimprov": 14, "qlognparego": 12, "qnegintegratedposteriorvari": 15, "qnoisyexpectedhypervolumeimprov": 16, "qnoisyexpectedimprov": 17, "qposteriorstandarddevi": 18, "qprobabilityofimprov": 19, "qsimpleregret": 20, "qthompsonsampl": 21, "quick": 438, "qupperconfidencebound": 22, "random": [375, 376, 377], "random_forest": 283, "randomforestsurrog": 284, "randomrecommend": 208, "rbfkernel": 112, "recommend": [175, 176, 178, 179, 181, 186, 188, 189, 191, 192, 194, 196, 197, 198, 199, 201, 206, 400, 401, 415, 416, 427, 428, 430, 445, 446, 449, 453], "recommenderprotocol": 177, "reduct": 444, "refers_to": 329, "regist": 411, "register_custom_architectur": 261, "register_hook": 330, "relat": 439, "remov": 440, "replic": 457, "represent": [418, 419, 450, 454], "reproduc": 461, "request": 441, "restrict": 454, "result": [395, 412, 413, 445], "rffkernel": 113, "role": 459, "row": 448, "rqkernel": 114, "run": [395, 403, 404, 421], "sampl": [206, 444, 453], "sample_numerical_df": 381, "sampling_algorithm": [378, 380, 381], "scalar": [125, 127, 457], "scale": 382, "scalekernel": 118, "scenario": [245, 246, 456], "scope": 448, "search": [418, 419, 426, 434, 438, 444, 454, 461], "searchspac": [209, 210, 212, 213, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 396, 398, 401, 403, 404, 406, 407, 408, 409, 423, 425, 427, 428, 435], "searchspacematchwarn": 88, "searchspacetyp": 214, "see": 459, "select_constructor_hook": 233, "semaphor": 439, "sequenti": [181, 446], "sequential_greedi": [196, 197], "sequentialgreedyrecommend": 197, "sequentialmetarecommend": 183, "serial": [227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 429, 430, 446, 455], "serialize_datafram": 239, "serialmixin": 236, "set": [395, 412, 413, 424, 426, 434, 435], "set_random_se": 376, "setup": [400, 406, 407, 408, 409, 415, 416, 418, 419, 421, 423, 424, 430], "shap": [93, 94, 95, 97, 98, 99, 100, 450], "shap_explain": 97, "shap_plot": 98, "shapinsight": 96, "signatur": 411, "simplex": [418, 454], "simul": [240, 241, 242, 243, 244, 245, 246, 247, 248, 395, 396, 397, 398, 412, 421, 434, 435, 456], "simulate_experi": 242, "simulate_scenario": 246, "simulate_transfer_learn": 248, "singl": [130, 424, 456], "singletargetobject": [131, 451], "sklearnclusteringrecommend": 205, "slot": [418, 419], "smile": 153, "smiles_to_fingerprint_featur": 340, "smoothedboxprior": 174, "some": [403, 404, 423], "sort_paramet": 159, "space": [418, 419, 426, 428, 434, 438, 444, 446, 454, 461], "span": 418, "stage": 415, "start": 438, "statist": 446, "stop": 412, "str_to_acqf": 29, "strategi": [401, 438], "streamingsequentialmetarecommend": 184, "string": [431, 455], "strtobool": 335, "structure_constraint": 49, "studi": 457, "sub": 444, "subselectioncondit": [41, 447], "subspac": 454, "subspacecontinu": 211, "subspacediscret": 219, "substanc": [152, 153, 418, 438], "substanceencod": 148, "substanceparamet": [154, 452], "suggest": 439, "suitabl": 401, "sum": 409, "support": [439, 445], "surrog": [249, 250, 252, 254, 255, 257, 259, 261, 262, 263, 265, 268, 269, 270, 272, 273, 275, 277, 279, 281, 283, 285, 286, 287, 288, 289, 290, 291, 401, 414, 415, 416, 457], "surrogateprotocol": 256, "synchron": 441, "synthet": [427, 428], "tabl": [396, 397, 398, 434, 435, 438], "target": [292, 293, 294, 295, 297, 298, 301, 303, 304, 305, 306, 411, 422, 423, 424, 451, 458, 461], "targetmod": 299, "targettransform": 300, "task": [434, 435], "taskparamet": [141, 452, 459], "technologi": 459, "telemetri": [307, 308, 309, 310, 311, 438, 448], "telemetry_record_recommended_measurement_percentag": 310, "telemetry_record_valu": 311, "temporary_se": 377, "terminologi": [418, 455, 456, 459], "test": [403, 404, 427, 428], "theoret": 418, "thi": [396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 423, 427, 428, 450], "thresholdcondit": [42, 447], "through": 459, "to_kernel_factori": 268, "to_object": 122, "to_searchspac": 215, "to_str": 344, "to_tensor": 359, "to_tupl": 331, "toggl": 449, "toler": 446, "tool": 441, "torch": [384, 385, 386, 439], "tradit": 419, "train": 415, "trajectori": 449, "transfer": [433, 435, 456, 459], "transfer_learn": [247, 248], "transform": [303, 304, 305, 306, 423], "transform_target_column": 360, "treasur": 459, "triangular_transform": 306, "trigger": [411, 413], "two": 432, "twophasemetarecommend": 185, "type": 455, "uncertainti": 444, "unidentifiedsubclasserror": 89, "uninstal": 448, "uninterrupt": 412, "unlock": 459, "unmatchedattributeerror": 90, "unreleas": 440, "unspecifi": 318, "unspecifiedtyp": 319, "unstructure_bas": 234, "unusedobjectwarn": 91, "upperconfidencebound": 8, "us": [396, 397, 398, 400, 401, 406, 407, 408, 409, 415, 416, 421, 423, 427, 428, 454, 455, 456, 457], "usag": 450, "use_fallback_constructor_hook": 365, "user": 460, "util": [27, 28, 29, 60, 61, 155, 156, 157, 158, 159, 237, 238, 239, 285, 286, 287, 288, 312, 313, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 461], "v": [411, 418, 424, 439, 446, 449], "valid": [62, 63, 64, 65, 132, 133, 160, 161, 162, 163, 223, 224, 225, 226, 289, 290, 291, 387, 388, 389, 390, 391, 392, 393, 416, 432], "validate_cardinality_constraint_parameter_bound": 63, "validate_cardinality_constraints_are_nonoverlap": 64, "validate_constraint": 65, "validate_custom_architecture_cl": 291, "validate_decorrel": 161, "validate_is_finit": 162, "validate_not_nan": 391, "validate_paramet": 226, "validate_parameter_input": 392, "validate_parameter_nam": 225, "validate_searchspace_from_config": 216, "validate_simplex_subspace_from_config": 222, "validate_target_input": 393, "validate_target_nam": 133, "validate_unique_valu": 163, "valu": [446, 452, 454, 455, 456], "variabl": 448, "varname_numpy_use_single_precis": 371, "varname_torch_use_single_precis": 386, "verif": [406, 407, 408, 409, 418, 419, 432], "verifi": 404, "via": 450, "visual": 424, "we": 456, "what": 456, "window": 439, "within": 454, "without": 439, "workflow": [441, 445], "wrap": [403, 404, 428], "write": 441}})