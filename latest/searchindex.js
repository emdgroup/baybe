Search.setIndex({"alltitles": {"(De-)Serializability Unsupported": [[452, null]], "Acquisition Function Values": [[451, "acquisition-function-values"]], "Acquisition function": [[406, "acquisition-function"]], "AcquisitionFunction": [[24, null]], "Active Learning": [[449, null]], "Added": [[445, "added"], [445, "id4"], [445, "id9"], [445, "id18"], [445, "id28"], [445, "id32"], [445, "id38"], [445, "id45"], [445, "id54"], [445, "id60"], [445, "id64"], [445, "id71"], [445, "id76"], [445, "id82"], [445, "id88"], [445, "id92"], [445, "id96"], [445, "id100"], [445, "id105"], [445, "id109"], [445, "id112"], [445, "id116"], [445, "id120"], [445, "id124"], [445, "id127"], [445, "id131"], [445, "id135"], [445, "id139"], [445, "id143"], [445, "id149"], [445, "id152"]], "Addendum: Description of transformation functions": [[428, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[466, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[464, null]], "Adding Measurements": [[451, "adding-measurements"]], "Adding Partial Results": [[450, "adding-partial-results"]], "AdditiveKernel": [[117, null]], "Advanced Example: Chemical Substances": [[443, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[426, "an-imaginary-use-case"]], "Array-Based Callables": [[461, null]], "Asynchronous Workflows": [[450, null]], "Auto-Replication": [[462, "auto-replication"]], "Automatic field conversion": [[460, "automatic-field-conversion"]], "Available Models": [[462, "available-models"]], "Available recommenders suitable for initial recommendation": [[406, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[406, "available-surrogate-models"]], "Backtesting": [[399, null], [439, null]], "Backwards Compatibility and Deprecations": [[465, null]], "BaseSequentialMetaRecommender": [[183, null]], "Basic Creation": [[451, "basic-creation"]], "Basic Instructions": [[453, "basic-instructions"]], "Basic Usage": [[455, "basic-usage"]], "Basic example for using BayBE": [[405, null]], "Basic string assembly": [[460, "basic-string-assembly"]], "BasicKernel": [[104, null]], "Basics": [[404, null], [451, "basics"]], "Batch Optimization": [[451, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[443, null]], "Bayesian Recommenders": [[458, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[278, null]], "BayesianRecommender": [[194, null]], "Bernoulli Multi Armed Bandit": [[426, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[251, null]], "BetaPrior": [[169, null]], "BinaryTarget": [[297, null]], "BotorchRecommender": [[196, null]], "Bound methods": [[416, "bound-methods"]], "Breaking Changes": [[445, "breaking-changes"], [445, "id37"], [445, "id44"]], "Building from the Product of Parameter Values": [[459, "building-from-the-product-of-parameter-values"], [459, "id2"]], "Building the Model": [[426, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[444, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[451, "caching-of-recommendations"]], "Campaign": [[31, null]], "Campaign Setup": [[429, "campaign-setup"]], "Campaign Stopping": [[417, null]], "Campaigns": [[451, null]], "Candidate Control in Discrete Spaces": [[451, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[454, null]], "CardinalityConstraint": [[34, null]], "CategoricalEncoding": [[146, null]], "CategoricalParameter": [[141, null], [457, "categoricalparameter"]], "Caution": [[454, null]], "Changed": [[445, "changed"], [445, "id5"], [445, "id10"], [445, "id14"], [445, "id16"], [445, "id19"], [445, "id23"], [445, "id29"], [445, "id33"], [445, "id39"], [445, "id46"], [445, "id51"], [445, "id55"], [445, "id61"], [445, "id65"], [445, "id68"], [445, "id72"], [445, "id77"], [445, "id83"], [445, "id89"], [445, "id93"], [445, "id97"], [445, "id101"], [445, "id106"], [445, "id110"], [445, "id113"], [445, "id117"], [445, "id121"], [445, "id125"], [445, "id128"], [445, "id132"], [445, "id136"], [445, "id140"], [445, "id144"]], "Changelog": [[445, null]], "Clustering Recommenders": [[458, "clustering-recommenders"]], "Code Design": [[446, "code-design"]], "ColumnTransformer": [[388, null]], "Comparing recommendations in both objects": [[435, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[462, "composite-surrogates"]], "CompositeKernel": [[105, null]], "CompositeSurrogate": [[258, null]], "Computational Challenges": [[452, null]], "Condition": [[40, null]], "Conditions": [[452, "conditions"]], "Constraint": [[35, null]], "Constraint Setup": [[423, "constraint-setup"]], "Constraints": [[452, null]], "Constraints Continuous": [[407, null]], "Constraints Discrete": [[410, null]], "Constraints Setup": [[424, "constraints-setup"]], "Construct the campaign and run some iterations": [[408, "construct-the-campaign-and-run-some-iterations"], [409, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[459, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[401, "constructing-campaigns-for-the-simulation-loop"], [402, "constructing-campaigns-for-the-simulation-loop"], [403, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[459, "constructing-from-a-dataframe"], [459, "id1"], [459, "id3"]], "Constructing hybrid recommenders": [[433, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[432, "constructing-the-campaign-and-performing-a-recommendation"], [433, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[433, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[452, "continuous-constraints"]], "Continuous Parameters": [[457, "continuous-parameters"]], "Continuous Subspaces": [[459, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[44, null], [452, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[36, null]], "ContinuousLinearConstraint": [[45, null], [452, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[37, null]], "ContinuousParameter": [[137, null]], "Contributing to BayBE": [[446, null]], "Contributors": [[447, null], [447, "id1"]], "Convenience Construction and Implicit Conversion": [[456, null]], "Convenience Multi-Output Casting": [[456, null]], "Conventions for attrs classes": [[446, "conventions-for-attrs-classes"]], "Convert model to onnx": [[420, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[420, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[421, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[420, "create-campaign"]], "Creating Continuous Search Spaces": [[431, null]], "Creating a Campaign": [[451, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[459, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[436, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[411, "creating-and-printing-the-campaign"], [412, "creating-and-printing-the-campaign"], [414, "creating-and-printing-the-campaign"], [428, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[400, "creating-the-campaigns"]], "Creating the Objective": [[402, "creating-the-objective"]], "Creating the Optimization Objective": [[439, "creating-the-optimization-objective"], [440, "creating-the-optimization-objective"]], "Creating the Search Space": [[439, "creating-the-search-space"]], "Creating the Searchspace": [[440, "creating-the-searchspace"]], "Creating the campaign": [[406, "creating-the-campaign"], [421, "creating-the-campaign"], [435, "creating-the-campaign"]], "Creating the constraint": [[411, "creating-the-constraint"], [413, "creating-the-constraint"]], "Creating the constraints": [[412, "creating-the-constraints"], [414, "creating-the-constraints"]], "Creating the objective": [[428, "creating-the-objective"]], "Creating the recommender object": [[406, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[401, "creating-the-searchspace-and-the-objective"], [403, "creating-the-searchspace-and-the-objective"], [408, "creating-the-searchspace-and-the-objective"], [409, "creating-the-searchspace-and-the-objective"], [411, "creating-the-searchspace-and-the-objective"], [412, "creating-the-searchspace-and-the-objective"], [413, "creating-the-searchspace-and-the-objective"], [414, "creating-the-searchspace-and-the-objective"], [432, "creating-the-searchspace-and-the-objective"]], "Creation From a JSON Config": [[451, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[462, null]], "Custom Hooks": [[415, null]], "Custom Surrogates": [[419, null]], "CustomDiscreteParameter": [[144, null], [457, "customdiscreteparameter"]], "CustomEncoding": [[147, null]], "CustomONNXSurrogate": [[260, null]], "Dataframe deserialization": [[460, "dataframe-deserialization"]], "DefaultKernelFactory": [[274, null]], "Defining config dictionaries": [[437, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[417, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[418, "defining-the-hook"]], "Defining the Hooks": [[416, "defining-the-hooks"]], "Defining the Optimization Objective": [[443, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[400, "defining-the-optimization-problem"], [429, "defining-the-optimization-problem"]], "Defining the Search Space": [[443, "defining-the-search-space"]], "Defining the Tasks": [[439, "defining-the-tasks"], [440, "defining-the-tasks"]], "Defining the targets": [[428, "defining-the-targets"]], "Defining the test function": [[408, "defining-the-test-function"], [409, "defining-the-test-function"], [432, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[433, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[445, "deprecations"], [445, "id35"], [445, "id42"], [445, "id49"], [445, "id58"], [445, "id74"], [445, "id80"], [445, "id86"], [445, "id103"]], "Deserialization from configuration strings": [[460, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[125, null], [456, "desirabilityobjective"]], "Developer Tools": [[446, "developer-tools"]], "Discrete Constraints": [[452, "discrete-constraints"]], "Discrete Parameters": [[457, "discrete-parameters"]], "Discrete Subspaces": [[459, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[423, null]], "DiscreteCardinalityConstraint": [[51, null], [452, "discretecardinalityconstraint"]], "DiscreteConstraint": [[38, null]], "DiscreteCustomConstraint": [[52, null], [452, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[53, null], [452, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[54, null], [452, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[55, null], [452, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[56, null], [452, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[138, null]], "DiscretePermutationInvarianceConstraint": [[57, null], [452, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[58, null]], "DiscreteSamplingMethod": [[384, null]], "DiscreteSumConstraint": [[59, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[452, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[426, "discussion"]], "Disk Caching": [[453, "disk-caching"]], "Dummy": [[313, null]], "Duplicate Substances": [[423, "duplicate-substances"]], "Dynamic Exclusion": [[454, "dynamic-exclusion"]], "EDBOKernelFactory": [[276, null]], "EXPERIMENTAL: Floating Point Precision": [[453, "experimental-floating-point-precision"]], "Efficient Constraint Implementation via Polars": [[452, null]], "Efficient Search Space Creation": [[466, null]], "Environment Variables": [[453, null]], "Equivalent copies": [[460, null]], "Estimation with Constraints": [[466, null]], "Example Searchspace and objective parameters": [[406, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[408, null]], "Example for creating campaigns from configs": [[436, null]], "Example for custom parameter passing in surrogate models": [[421, null]], "Example for full simulation loop using a table-based lookup mechanism": [[402, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[403, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[401, null]], "Example for linear constraints in a continuous searchspace": [[409, null]], "Example for surrogate model with a custom pretrained model": [[420, null]], "Example for the serialization of a campaign": [[435, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[432, null]], "Example for using custom constraints in discrete searchspaces": [[411, null]], "Example for using dependency constraints in discrete searchspaces": [[412, null]], "Example for using different strategies": [[406, null]], "Example for using exclusion constraints in discrete searchspaces": [[413, null]], "Example for using exclusion constraints incorporating sums and products": [[414, null]], "Example for using synthetic test functions in hybrid spaces": [[433, null]], "Example for using the multi target mode for the objective": [[428, null]], "Example for validation of a config file": [[437, null]], "Examples": [[441, null]], "Examples On This Page": [[455, null]], "Excluding Configurations": [[454, "excluding-configurations"]], "Expectations": [[464, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[420, "experiment-setup"], [421, "experiment-setup"]], "Experiment setup": [[411, "experiment-setup"], [412, "experiment-setup"], [413, "experiment-setup"], [414, "experiment-setup"], [435, "experiment-setup"]], "Experiment setup and creating the searchspace": [[428, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[453, null], [453, null]], "Experimental Representation Limits": [[455, null]], "Experimental and Computational Representations": [[455, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.10.*)": [[445, "expired-deprecations-from-0-10"]], "Expired Deprecations (from 0.6.*)": [[445, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[445, "expired-deprecations-from-0-7"]], "Expired Deprecations (from 0.9.*)": [[445, "expired-deprecations-from-0-9"]], "Explainers": [[455, "explainers"]], "Extending BayBE\u2019s Functionality": [[446, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[462, "extracting-the-model-for-advanced-study"]], "FAQ": [[442, null]], "FPS Sampling Implementation": [[453, "fps-sampling-implementation"]], "FPSInitialization": [[206, null]], "FPSRecommender": [[207, null]], "Fixed": [[445, "fixed"], [445, "id2"], [445, "id6"], [445, "id11"], [445, "id20"], [445, "id24"], [445, "id26"], [445, "id30"], [445, "id34"], [445, "id40"], [445, "id48"], [445, "id52"], [445, "id57"], [445, "id62"], [445, "id66"], [445, "id73"], [445, "id78"], [445, "id84"], [445, "id90"], [445, "id98"], [445, "id102"], [445, "id107"], [445, "id114"], [445, "id118"], [445, "id122"], [445, "id129"], [445, "id133"], [445, "id137"], [445, "id141"], [445, "id145"], [445, "id147"], [445, "id150"]], "For Label-Like Parameters: Values and Active Values": [[457, "label-like"]], "From GitHub": [[443, "from-github"]], "From Local Clone": [[443, "from-local-clone"]], "From Package Index": [[443, "from-package-index"]], "From the Default Constructor": [[459, "from-the-default-constructor"]], "Further Information": [[451, "further-information"]], "GammaPrior": [[170, null]], "GaussianMixtureClusteringRecommender": [[201, null]], "GaussianProcessPreset": [[271, null]], "GaussianProcessSurrogate": [[264, null]], "General Information": [[458, "general-information"]], "General Workflow": [[446, "general-workflow"]], "Generating Lookup Tables": [[439, "generating-lookup-tables"], [440, "generating-lookup-tables"]], "Getting Recommendations": [[451, "getting-recommendations"], [454, null]], "Getting a recommendation and adding measurements": [[405, "getting-a-recommendation-and-adding-measurements"]], "Global Uncertainty Reduction": [[449, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[171, null]], "HalfNormalPrior": [[172, null]], "Hook instance vs. target instance": [[416, null]], "Hybrid constraints": [[452, null]], "Imports": [[400, "imports"], [416, "imports"], [418, "imports"], [423, "imports"], [424, "imports"], [426, "imports"], [429, "imports"], [431, "imports"], [439, "imports"], [440, "imports"]], "Inclusion of initial data": [[401, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[253, null]], "Indices and Tables": [[443, "indices-and-tables"]], "Influence of Continuous Parameters": [[466, null]], "Influence on Surrogate Models": [[452, null]], "Insights": [[455, null]], "Installation Related Issues": [[444, "installation-related-issues"]], "Interval": [[364, null]], "Invoking alternative constructors": [[460, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[420, "iterate-with-recommendations-and-measurements"], [421, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[460, "json-de-serialization"]], "KMeansClusteringRecommender": [[202, null]], "KMedoids": [[340, null]], "Kernel": [[106, null]], "KernelFactory": [[266, null]], "Known Issues": [[444, null]], "License": [[448, null]], "Limitations": [[450, null], [463, "limitations"]], "LinearKernel": [[108, null]], "Links for documentation": [[421, "links-for-documentation"]], "Local Uncertainty Reduction": [[449, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[173, null]], "Lookup functionality and data creation": [[401, "lookup-functionality-and-data-creation"], [402, "lookup-functionality-and-data-creation"], [403, "lookup-functionality-and-data-creation"]], "MATCH mode": [[463, "match-mode"]], "MIN and MAX mode": [[463, "min-and-max-mode"]], "Maintainers": [[447, "maintainers"]], "Mandatory Target Bounds": [[456, null]], "Manual verification of the constraint": [[411, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[412, "manual-verification-of-the-constraints"], [413, "manual-verification-of-the-constraints"], [414, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[450, "marking-experiments-as-pending"]], "MaternKernel": [[109, null]], "MeanPredictionSurrogate": [[280, null]], "MeasurableMetadata": [[370, null]], "Memory During Optimization": [[466, null]], "MemorySize": [[218, null]], "Meta Recommenders": [[454, null], [458, "meta-recommenders"]], "MetaRecommender": [[181, null]], "Metadata": [[371, null]], "Method overrides": [[446, "method-overrides"]], "Missing Lookup Values": [[461, null]], "Mixtures": [[422, null]], "Model Interpretation in BO": [[455, null]], "Model Outputs": [[420, "model-outputs"], [421, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[423, null]], "Modeling a Mixture in Traditional Representation": [[424, null]], "Monitoring the Probability of Improvement": [[418, null]], "Monkeypatching": [[416, "monkeypatching"], [417, null], [418, "monkeypatching"]], "Multi Target": [[427, null]], "Multi-Armed Bandit": [[425, null]], "Multi-Output Modeling": [[462, "multi-output-modeling"]], "Multi-Output Surrogate Models": [[455, "multi-output-surrogate-models"]], "NGBoostSurrogate": [[282, null]], "NaiveHybridSpaceRecommender": [[188, null]], "Necessary imports": [[420, "necessary-imports"], [421, "necessary-imports"], [435, "necessary-imports"], [436, "necessary-imports"], [437, "necessary-imports"]], "Necessary imports for this example": [[401, "necessary-imports-for-this-example"], [402, "necessary-imports-for-this-example"], [403, "necessary-imports-for-this-example"], [405, "necessary-imports-for-this-example"], [406, "necessary-imports-for-this-example"], [408, "necessary-imports-for-this-example"], [409, "necessary-imports-for-this-example"], [411, "necessary-imports-for-this-example"], [412, "necessary-imports-for-this-example"], [413, "necessary-imports-for-this-example"], [414, "necessary-imports-for-this-example"], [428, "necessary-imports-for-this-example"], [432, "necessary-imports-for-this-example"], [433, "necessary-imports-for-this-example"]], "Nesting objects": [[460, "nesting-objects"]], "Non-Dominated Configurations": [[456, null]], "NonPredictiveRecommender": [[199, null]], "NormalPrior": [[174, null]], "NumericalContinuousParameter": [[151, null], [457, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[152, null], [457, "numericaldiscreteparameter"]], "NumericalTarget": [[303, null], [463, "numericaltarget"]], "Objective": [[122, null], [456, null]], "Optimizing a Custom Black-Box Function": [[400, null]], "Optional Dependencies": [[443, "optional-dependencies"]], "Optional Dependency": [[457, null]], "Optional: Defining the Optimization Strategy": [[443, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[423, null]], "PAMClusteringRecommender": [[203, null]], "Parallel Runs in Scenario Simulations": [[453, "parallel-runs-in-scenario-simulations"]], "Parameter": [[139, null]], "Parameter Encoding": [[457, null]], "Parameter Importance via SHAP": [[455, "parameter-importance-via-shap"]], "Parameter Names": [[457, null]], "Parameter Setup": [[423, "parameter-setup"], [424, "parameter-setup"]], "Parameter tolerances": [[451, null]], "ParameterEncoding": [[148, null]], "Parameters": [[457, null]], "Parameters for a full simulation loop": [[401, "parameters-for-a-full-simulation-loop"], [402, "parameters-for-a-full-simulation-loop"], [403, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[130, null], [456, "paretoobjective"]], "PartialAcquisitionFunction": [[26, null]], "Performing some iterations": [[428, "performing-some-iterations"]], "Performing the simulation loop": [[401, "performing-the-simulation-loop"]], "PeriodicKernel": [[110, null]], "Permanent Exclusion": [[454, "permanent-exclusion"]], "Permutation Invariance": [[423, "permutation-invariance"]], "PiecewisePolynomialKernel": [[111, null]], "PlainKernelFactory": [[267, null]], "Plots": [[455, "plots"]], "Plotting the Results": [[400, "plotting-the-results"], [417, "plotting-the-results"], [418, "plotting-the-results"]], "Polars": [[453, "polars"]], "PolynomialKernel": [[112, null]], "Posterior Statistics with Desirability Objectives": [[451, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Predictive Statistics": [[451, "predictive-statistics"]], "Prior": [[167, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[417, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[118, null]], "Pure Recommenders": [[458, "pure-recommenders"]], "PureRecommender": [[191, null]], "Purely Continuous Search Spaces": [[449, null]], "PyCharm vs. exceptiongroup": [[444, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[113, null]], "RFFKernel": [[114, null]], "RQKernel": [[115, null]], "RandomForestSurrogate": [[284, null]], "RandomRecommender": [[208, null]], "RecommenderProtocol": [[178, null]], "Recommenders": [[458, null]], "Registering Custom Hooks": [[416, null]], "Removed": [[445, "removed"], [445, "id7"], [445, "id12"], [445, "id21"], [445, "id41"], [445, "id47"], [445, "id56"], [445, "id69"], [445, "id79"], [445, "id85"], [445, "id94"]], "Representation of Data within Discrete Subspaces": [[459, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[466, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[459, "restricting-search-spaces-using-constraints"]], "Row Order": [[453, null]], "Running the Simulation": [[426, "running-the-simulation"]], "Running the Simulation Loop": [[400, "running-the-simulation-loop"]], "SHAPInsight": [[97, null]], "SKLearnClusteringRecommender": [[204, null]], "Sampling Recommenders": [[458, "sampling-recommenders"]], "Scalarizer": [[128, null]], "ScaleKernel": [[119, null]], "Search Space Creation": [[423, "search-space-creation"], [424, "search-space-creation"]], "Search Space Memory Estimation": [[466, "search-space-memory-estimation"]], "Search Spaces": [[459, null]], "SearchSpace": [[213, null]], "SearchSpaceType": [[214, null]], "Searchspaces": [[430, null]], "Seeing Transfer Learning in Action": [[464, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[451, null]], "SequentialMetaRecommender": [[184, null]], "SerialMixin": [[236, null]], "Serialization": [[434, null], [451, "serialization"], [460, null]], "Serialization and de-serialization": [[435, "serialization-and-de-serialization"]], "Settings": [[400, "settings"], [417, "settings"], [418, "settings"], [429, "settings"], [431, "settings"], [439, "settings"], [440, "settings"]], "Setup": [[405, "setup"], [426, "setup"]], "Signature components": [[416, null]], "Simplex Construction": [[423, null]], "Simulating Multiple Scenarios": [[461, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[461, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[461, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[417, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[417, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[461, null]], "Simulation Loop": [[439, "simulation-loop"], [440, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[429, null]], "SingleTargetObjective": [[132, null], [456, "singletargetobjective"]], "Slot-based Representation": [[424, null]], "SmoothedBoxPrior": [[175, null]], "StreamingSequentialMetaRecommender": [[185, null]], "Sub-Sampling Method": [[449, null]], "SubSelectionCondition": [[41, null], [452, "subselectioncondition"]], "SubspaceContinuous": [[211, null]], "SubspaceDiscrete": [[219, null]], "Substance Amounts": [[423, "substance-amounts"]], "SubstanceEncoding": [[149, null]], "SubstanceParameter": [[155, null], [457, "substanceparameter"]], "Suggested Fix": [[444, null], [444, null], [444, null], [444, null]], "Supported Acquisition Functions": [[450, null]], "Supported Recommenders": [[450, null]], "Surrogate": [[255, null]], "Surrogate Model Limitations": [[452, null]], "Surrogate Replication": [[462, "surrogate-replication"]], "SurrogateProtocol": [[256, null]], "Surrogates": [[462, null]], "Synchronizing Pull Requests": [[446, "synchronizing-pull-requests"]], "Target": [[295, null]], "TargetMode": [[300, null]], "TargetTransformation": [[301, null]], "Targets": [[463, null]], "TaskParameter": [[142, null], [457, "taskparameter"]], "Technology": [[464, null]], "Terminology": [[423, "terminology"], [460, null], [464, null]], "Terminology Continued": [[464, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[461, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[426, "the-black-box-model"]], "The Lookup Mechanism": [[461, "the-lookup-mechanism"]], "The Optimization Loop": [[443, "the-optimization-loop"]], "The Role of the TaskParameter": [[464, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[436, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[454, "the-recommend-call"]], "The type field": [[460, "the-type-field"]], "Theoretical Span": [[423, null]], "ThresholdCondition": [[42, null], [452, "thresholdcondition"]], "Trajectory-Based Control": [[454, null]], "Transfer Learning": [[438, null], [440, null], [464, null]], "Triggering the Hook": [[418, "triggering-the-hook"]], "Triggering the Hooks": [[416, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[186, null]], "Unlocking Data Treasures Through Transfer Learning": [[464, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[315, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[465, null]], "Using Custom Models": [[462, "using-custom-models"]], "Using Explicit Bounds": [[459, "using-explicit-bounds"]], "Using None": [[461, "using-none"]], "Using a Callable": [[461, "using-a-callable"]], "Using a Dataframe": [[461, "using-a-dataframe"]], "Using abbreviations": [[460, "using-abbreviations"]], "Using configuration instead": [[420, "using-configuration-instead"], [421, "using-configuration-instead"]], "Using default values": [[460, "using-default-values"]], "Utilities": [[466, null]], "Validation of model parameters": [[421, "validation-of-model-parameters"]], "Verification of Constraints": [[423, "verification-of-constraints"], [424, "verification-of-constraints"]], "Verification of Span": [[423, "verification-of-span"]], "Verification of the two dictionaries": [[437, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[409, "verify-the-constraints"]], "Visualization": [[429, "visualization"]], "Windows \u2013 Torch Problems": [[444, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[408, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [409, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [433, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[446, "writing-docstrings"]], "Writing classes": [[446, "writing-classes"]], "[0.1.0] - 2022-10-01": [[445, "id151"]], "[0.10.0] - 2024-08-02": [[445, "id43"]], "[0.11.0] - 2024-09-09": [[445, "id36"]], "[0.11.1] - 2024-10-01": [[445, "id31"]], "[0.11.2] - 2024-10-11": [[445, "id27"]], "[0.11.3] - 2024-11-06": [[445, "id25"]], "[0.11.4] - 2025-01-27": [[445, "id22"]], "[0.12.0] - 2025-01-28": [[445, "id17"]], "[0.12.1] - 2025-01-29": [[445, "id15"]], "[0.12.2] - 2025-01-31": [[445, "id13"]], "[0.13.0] - 2025-04-16": [[445, "id8"]], "[0.13.1] - 2025-06-06": [[445, "id3"]], "[0.13.2] - 2025-07-09": [[445, "id1"]], "[0.2.0] - 2022-11-10": [[445, "id148"]], "[0.2.1] - 2022-12-01": [[445, "id146"]], "[0.2.2] - 2023-01-13": [[445, "id142"]], "[0.2.3] - 2023-03-14": [[445, "id138"]], "[0.2.4] - 2023-03-24": [[445, "id134"]], "[0.3.0] - 2023-06-27": [[445, "id130"]], "[0.3.1] - 2023-07-17": [[445, "id126"]], "[0.3.2] - 2023-07-24": [[445, "id123"]], "[0.4.0] - 2023-08-16": [[445, "id119"]], "[0.4.1] - 2023-08-23": [[445, "id115"]], "[0.4.2] - 2023-08-29": [[445, "id111"]], "[0.5.0] - 2023-09-15": [[445, "id108"]], "[0.5.1] - 2023-10-19": [[445, "id104"]], "[0.6.0] - 2023-11-17": [[445, "id99"]], "[0.6.1] - 2023-11-27": [[445, "id95"]], "[0.7.0] - 2023-12-04": [[445, "id91"]], "[0.7.1] - 2023-12-07": [[445, "id87"]], "[0.7.2] - 2024-01-24": [[445, "id81"]], "[0.7.3] - 2024-02-09": [[445, "id75"]], "[0.7.4] - 2024-02-28": [[445, "id70"]], "[0.8.0] - 2024-02-29": [[445, "id67"]], "[0.8.1] - 2024-03-11": [[445, "id63"]], "[0.8.2] - 2024-03-27": [[445, "id59"]], "[0.9.0] - 2024-05-21": [[445, "id53"]], "[0.9.1] - 2024-06-04": [[445, "id50"]], "[Unreleased]": [[445, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[23, null]], "baybe.acquisition.partial": [[25, null]], "baybe.acquisition.utils": [[27, null]], "baybe.acquisition.utils.convert_acqf": [[28, null]], "baybe.acquisition.utils.str_to_acqf": [[29, null]], "baybe.campaign": [[30, null]], "baybe.constraints": [[32, null]], "baybe.constraints.base": [[33, null]], "baybe.constraints.conditions": [[39, null]], "baybe.constraints.continuous": [[43, null]], "baybe.constraints.deprecation": [[46, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[47, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[48, null]], "baybe.constraints.deprecation.structure_constraints": [[49, null]], "baybe.constraints.discrete": [[50, null]], "baybe.constraints.utils": [[60, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[61, null]], "baybe.constraints.validation": [[62, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[63, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[64, null]], "baybe.constraints.validation.validate_constraints": [[65, null]], "baybe.exceptions": [[66, null]], "baybe.exceptions.DeprecationError": [[67, null]], "baybe.exceptions.EmptySearchSpaceError": [[68, null]], "baybe.exceptions.IncompatibilityError": [[69, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, null]], "baybe.exceptions.IncompatibleArgumentError": [[71, null]], "baybe.exceptions.IncompatibleExplainerError": [[72, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, null]], "baybe.exceptions.IncompatibleSurrogateError": [[74, null]], "baybe.exceptions.IncompleteMeasurementsError": [[75, null]], "baybe.exceptions.InfeasibilityError": [[76, null]], "baybe.exceptions.InputDataTypeWarning": [[77, null]], "baybe.exceptions.InvalidSurrogateModelError": [[78, null]], "baybe.exceptions.InvalidTargetValueError": [[79, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[80, null]], "baybe.exceptions.ModelNotTrainedError": [[81, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[82, null]], "baybe.exceptions.NoMeasurementsError": [[83, null]], "baybe.exceptions.NoRecommendersLeftError": [[84, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[85, null]], "baybe.exceptions.NothingToSimulateError": [[86, null]], "baybe.exceptions.NumericalUnderflowError": [[87, null]], "baybe.exceptions.OptionalImportError": [[88, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[89, null]], "baybe.exceptions.UnidentifiedSubclassError": [[90, null]], "baybe.exceptions.UnmatchedAttributeError": [[91, null]], "baybe.exceptions.UnusedObjectWarning": [[92, null]], "baybe.insights": [[93, null]], "baybe.insights.shap": [[94, null]], "baybe.insights.shap.EXPLAINERS": [[95, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[96, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[98, null]], "baybe.insights.shap.SHAP_PLOTS": [[99, null]], "baybe.insights.shap.is_shap_explainer": [[100, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[101, null]], "baybe.kernels": [[102, null]], "baybe.kernels.base": [[103, null]], "baybe.kernels.basic": [[107, null]], "baybe.kernels.composite": [[116, null]], "baybe.objectives": [[120, null]], "baybe.objectives.base": [[121, null]], "baybe.objectives.base.to_objective": [[123, null]], "baybe.objectives.desirability": [[124, null]], "baybe.objectives.desirability.scalarize": [[126, null]], "baybe.objectives.enum": [[127, null]], "baybe.objectives.pareto": [[129, null]], "baybe.objectives.single": [[131, null]], "baybe.objectives.validation": [[133, null]], "baybe.objectives.validation.validate_target_names": [[134, null]], "baybe.parameters": [[135, null]], "baybe.parameters.base": [[136, null]], "baybe.parameters.categorical": [[140, null]], "baybe.parameters.custom": [[143, null]], "baybe.parameters.enum": [[145, null]], "baybe.parameters.numerical": [[150, null]], "baybe.parameters.substance": [[153, null]], "baybe.parameters.substance.Smiles": [[154, null]], "baybe.parameters.utils": [[156, null]], "baybe.parameters.utils.activate_parameter": [[157, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[158, null]], "baybe.parameters.utils.is_inactive": [[159, null]], "baybe.parameters.utils.sort_parameters": [[160, null]], "baybe.parameters.validation": [[161, null]], "baybe.parameters.validation.validate_decorrelation": [[162, null]], "baybe.parameters.validation.validate_is_finite": [[163, null]], "baybe.parameters.validation.validate_unique_values": [[164, null]], "baybe.priors": [[165, null]], "baybe.priors.base": [[166, null]], "baybe.priors.basic": [[168, null]], "baybe.recommenders": [[176, null]], "baybe.recommenders.base": [[177, null]], "baybe.recommenders.meta": [[179, null]], "baybe.recommenders.meta.base": [[180, null]], "baybe.recommenders.meta.sequential": [[182, null]], "baybe.recommenders.naive": [[187, null]], "baybe.recommenders.pure": [[189, null]], "baybe.recommenders.pure.base": [[190, null]], "baybe.recommenders.pure.bayesian": [[192, null]], "baybe.recommenders.pure.bayesian.base": [[193, null]], "baybe.recommenders.pure.bayesian.botorch": [[195, null]], "baybe.recommenders.pure.nonpredictive": [[197, null]], "baybe.recommenders.pure.nonpredictive.base": [[198, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[200, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[205, null]], "baybe.searchspace": [[209, null]], "baybe.searchspace.continuous": [[210, null]], "baybe.searchspace.core": [[212, null]], "baybe.searchspace.core.to_searchspace": [[215, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[216, null]], "baybe.searchspace.discrete": [[217, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[220, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[221, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[222, null]], "baybe.searchspace.validation": [[223, null]], "baybe.searchspace.validation.get_transform_parameters": [[224, null]], "baybe.searchspace.validation.validate_parameter_names": [[225, null]], "baybe.searchspace.validation.validate_parameters": [[226, null]], "baybe.serialization": [[227, null]], "baybe.serialization.core": [[228, null]], "baybe.serialization.core.block_deserialization_hook": [[229, null]], "baybe.serialization.core.block_serialization_hook": [[230, null]], "baybe.serialization.core.converter": [[231, null]], "baybe.serialization.core.get_base_structure_hook": [[232, null]], "baybe.serialization.core.select_constructor_hook": [[233, null]], "baybe.serialization.core.unstructure_base": [[234, null]], "baybe.serialization.mixin": [[235, null]], "baybe.serialization.utils": [[237, null]], "baybe.serialization.utils.deserialize_dataframe": [[238, null]], "baybe.serialization.utils.serialize_dataframe": [[239, null]], "baybe.simulation": [[240, null]], "baybe.simulation.core": [[241, null]], "baybe.simulation.core.simulate_experiment": [[242, null]], "baybe.simulation.lookup": [[243, null]], "baybe.simulation.lookup.look_up_targets": [[244, null]], "baybe.simulation.scenarios": [[245, null]], "baybe.simulation.scenarios.simulate_scenarios": [[246, null]], "baybe.simulation.transfer_learning": [[247, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[248, null]], "baybe.surrogates": [[249, null]], "baybe.surrogates.bandit": [[250, null]], "baybe.surrogates.base": [[252, null]], "baybe.surrogates.base.PosteriorStatistic": [[254, null]], "baybe.surrogates.composite": [[257, null]], "baybe.surrogates.custom": [[259, null]], "baybe.surrogates.custom.register_custom_architecture": [[261, null]], "baybe.surrogates.gaussian_process": [[262, null]], "baybe.surrogates.gaussian_process.core": [[263, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[265, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[268, null]], "baybe.surrogates.gaussian_process.presets": [[269, null]], "baybe.surrogates.gaussian_process.presets.core": [[270, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[272, null]], "baybe.surrogates.gaussian_process.presets.default": [[273, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[275, null]], "baybe.surrogates.linear": [[277, null]], "baybe.surrogates.naive": [[279, null]], "baybe.surrogates.ngboost": [[281, null]], "baybe.surrogates.random_forest": [[283, null]], "baybe.surrogates.utils": [[285, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[286, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[287, null]], "baybe.surrogates.utils.catch_constant_targets": [[288, null]], "baybe.surrogates.validation": [[289, null]], "baybe.surrogates.validation.make_dict_validator": [[290, null]], "baybe.surrogates.validation.type_validation_converter": [[291, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[292, null]], "baybe.targets": [[293, null]], "baybe.targets.base": [[294, null]], "baybe.targets.binary": [[296, null]], "baybe.targets.binary.ChoiceValue": [[298, null]], "baybe.targets.enum": [[299, null]], "baybe.targets.numerical": [[302, null]], "baybe.targets.transforms": [[304, null]], "baybe.targets.transforms.bell_transform": [[305, null]], "baybe.targets.transforms.linear_transform": [[306, null]], "baybe.targets.transforms.triangular_transform": [[307, null]], "baybe.utils": [[308, null]], "baybe.utils.augmentation": [[309, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[310, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[311, null]], "baybe.utils.basic": [[312, null]], "baybe.utils.basic.UNSPECIFIED": [[314, null]], "baybe.utils.basic.convert_to_float": [[317, null]], "baybe.utils.basic.find_subclass": [[318, null]], "baybe.utils.basic.get_baseclasses": [[319, null]], "baybe.utils.basic.get_subclasses": [[320, null]], "baybe.utils.basic.group_duplicate_values": [[321, null]], "baybe.utils.basic.hilberts_factory": [[322, null]], "baybe.utils.basic.is_all_instance": [[323, null]], "baybe.utils.basic.match_attributes": [[324, null]], "baybe.utils.basic.refers_to": [[325, null]], "baybe.utils.basic.register_hooks": [[326, null]], "baybe.utils.basic.to_tuple": [[327, null]], "baybe.utils.boolean": [[328, null]], "baybe.utils.boolean.check_if_in": [[329, null]], "baybe.utils.boolean.is_abstract": [[330, null]], "baybe.utils.boolean.strtobool": [[331, null]], "baybe.utils.chemistry": [[332, null]], "baybe.utils.chemistry.get_canonical_smiles": [[333, null]], "baybe.utils.chemistry.get_fingerprint_class": [[334, null]], "baybe.utils.chemistry.name_to_smiles": [[335, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[336, null]], "baybe.utils.clustering_algorithms": [[337, null]], "baybe.utils.clustering_algorithms.third_party": [[338, null]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[339, null]], "baybe.utils.conversion": [[341, null]], "baybe.utils.conversion.fraction_to_float": [[342, null]], "baybe.utils.conversion.nonstring_to_tuple": [[343, null]], "baybe.utils.conversion.to_string": [[344, null]], "baybe.utils.dataframe": [[345, null]], "baybe.utils.dataframe.add_fake_measurements": [[346, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[347, null]], "baybe.utils.dataframe.add_parameter_noise": [[348, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[349, null]], "baybe.utils.dataframe.create_fake_input": [[350, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[351, null]], "baybe.utils.dataframe.df_drop_string_columns": [[352, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[353, null]], "baybe.utils.dataframe.filter_df": [[354, null]], "baybe.utils.dataframe.fuzzy_row_match": [[355, null]], "baybe.utils.dataframe.get_transform_objects": [[356, null]], "baybe.utils.dataframe.handle_missing_values": [[357, null]], "baybe.utils.dataframe.normalize_input_dtypes": [[358, null]], "baybe.utils.dataframe.pretty_print_df": [[359, null]], "baybe.utils.dataframe.to_tensor": [[360, null]], "baybe.utils.dataframe.transform_target_columns": [[361, null]], "baybe.utils.interval": [[362, null]], "baybe.utils.interval.InfiniteIntervalError": [[363, null]], "baybe.utils.interval.convert_bounds": [[365, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[366, null]], "baybe.utils.memory": [[367, null]], "baybe.utils.memory.bytes_to_human_readable": [[368, null]], "baybe.utils.metadata": [[369, null]], "baybe.utils.metadata.to_metadata": [[372, null]], "baybe.utils.numerical": [[373, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[374, null]], "baybe.utils.numerical.DTypeFloatONNX": [[375, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[376, null]], "baybe.utils.numerical.closer_element": [[377, null]], "baybe.utils.numerical.closest_element": [[378, null]], "baybe.utils.numerical.geom_mean": [[379, null]], "baybe.utils.random": [[380, null]], "baybe.utils.random.set_random_seed": [[381, null]], "baybe.utils.random.temporary_seed": [[382, null]], "baybe.utils.sampling_algorithms": [[383, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[385, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[386, null]], "baybe.utils.scaling": [[387, null]], "baybe.utils.torch": [[389, null]], "baybe.utils.torch.DTypeFloatTorch": [[390, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[391, null]], "baybe.utils.validation": [[392, null]], "baybe.utils.validation.finite_float": [[393, null]], "baybe.utils.validation.non_inf_float": [[394, null]], "baybe.utils.validation.non_nan_float": [[395, null]], "baybe.utils.validation.validate_not_nan": [[396, null]], "baybe.utils.validation.validate_parameter_input": [[397, null]], "baybe.utils.validation.validate_target_input": [[398, null]], "classproperty": [[316, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[444, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNParEGO": [[12, null]], "qLogNoisyExpectedHypervolumeImprovement": [[13, null]], "qLogNoisyExpectedImprovement": [[14, null]], "qNegIntegratedPosteriorVariance": [[15, null]], "qNoisyExpectedHypervolumeImprovement": [[16, null]], "qNoisyExpectedImprovement": [[17, null]], "qPosteriorStandardDeviation": [[18, null]], "qProbabilityOfImprovement": [[19, null]], "qSimpleRegret": [[20, null]], "qThompsonSampling": [[21, null]], "qUpperConfidenceBound": [[22, null]], "\u201cPre-training\u201d stage": [[420, "pre-training-stage"]], "\u26a1 Quick Start": [[443, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[443, "maintainers"]], "\ud83d\udcbb Installation": [[443, "installation"]], "\ud83d\udcc4 License": [[443, "license"]], "\ud83d\udcd6 Citation": [[443, "citation"]], "\ud83d\udce1 Telemetry": [[443, "telemetry"]], "\ud83d\udd0b Batteries Included": [[443, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[443, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.IncompleteMeasurementsError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InputDataTypeWarning", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoMeasurementsError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.make_dict_validator", "_autosummary/baybe.surrogates.validation.type_validation_converter", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.clustering_algorithms", "_autosummary/baybe.utils.clustering_algorithms.third_party", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.conversion.to_string", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.handle_missing_values", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.metadata", "_autosummary/baybe.utils.metadata.MeasurableMetadata", "_autosummary/baybe.utils.metadata.Metadata", "_autosummary/baybe.utils.metadata.to_metadata", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.IncompleteMeasurementsError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InputDataTypeWarning.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoMeasurementsError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.make_dict_validator.rst", "_autosummary/baybe.surrogates.validation.type_validation_converter.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.clustering_algorithms.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.conversion.to_string.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.handle_missing_values.rst", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.metadata.rst", "_autosummary/baybe.utils.metadata.MeasurableMetadata.rst", "_autosummary/baybe.utils.metadata.Metadata.rst", "_autosummary/baybe.utils.metadata.to_metadata.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.incompletemeasurementserror method)": [[75, "baybe.exceptions.IncompleteMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[76, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.inputdatatypewarning method)": [[77, "baybe.exceptions.InputDataTypeWarning.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[78, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[79, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[80, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[81, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[82, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.nomeasurementserror method)": [[83, "baybe.exceptions.NoMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[84, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[85, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[86, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[87, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[88, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[89, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[90, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[91, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[92, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[97, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[178, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[191, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[213, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[218, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[256, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[274, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[276, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[316, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[313, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[363, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.metadata.measurablemetadata method)": [[370, "baybe.utils.metadata.MeasurableMetadata.__init__", false]], "__init__() (baybe.utils.metadata.metadata method)": [[371, "baybe.utils.metadata.Metadata.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[388, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.incompletemeasurementserror method)": [[75, "baybe.exceptions.IncompleteMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[76, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.inputdatatypewarning method)": [[77, "baybe.exceptions.InputDataTypeWarning.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[78, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[79, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[80, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[81, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[82, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.nomeasurementserror method)": [[83, "baybe.exceptions.NoMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[84, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[85, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[86, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[87, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[88, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[89, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[90, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[91, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[92, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[146, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[147, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[149, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[363, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[175, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_values() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[24, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[157, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[346, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[347, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[348, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[117, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[191, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[191, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[191, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[169, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[349, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[175, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[97, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[119, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[117, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[118, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[104, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[286, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[287, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[271, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[23, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[25, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[27, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[30, "module-baybe.campaign", false]], "baybe.constraints": [[32, "module-baybe.constraints", false]], "baybe.constraints.base": [[33, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[39, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[43, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[46, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[50, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[60, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[62, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[66, "module-baybe.exceptions", false]], "baybe.insights": [[93, "module-baybe.insights", false]], "baybe.insights.shap": [[94, "module-baybe.insights.shap", false]], "baybe.kernels": [[102, "module-baybe.kernels", false]], "baybe.kernels.base": [[103, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[107, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[116, "module-baybe.kernels.composite", false]], "baybe.objectives": [[120, "module-baybe.objectives", false]], "baybe.objectives.base": [[121, "module-baybe.objectives.base", false]], "baybe.objectives.desirability": [[124, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[127, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[129, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[131, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[133, "module-baybe.objectives.validation", false]], "baybe.parameters": [[135, "module-baybe.parameters", false]], "baybe.parameters.base": [[136, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[140, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[143, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[145, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[150, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[153, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[156, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[161, "module-baybe.parameters.validation", false]], "baybe.priors": [[165, "module-baybe.priors", false]], "baybe.priors.base": [[166, "module-baybe.priors.base", false]], "baybe.priors.basic": [[168, "module-baybe.priors.basic", false]], "baybe.recommenders": [[176, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[177, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[179, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[180, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[182, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[187, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[189, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[190, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[192, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[193, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[195, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.nonpredictive": [[197, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[198, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[200, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[205, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[209, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[210, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[212, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[217, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[223, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[227, "module-baybe.serialization", false]], "baybe.serialization.core": [[228, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[235, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[237, "module-baybe.serialization.utils", false]], "baybe.simulation": [[240, "module-baybe.simulation", false]], "baybe.simulation.core": [[241, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[243, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[245, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[247, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[249, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[250, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[252, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[257, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[259, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[262, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[263, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[265, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[269, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[270, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[273, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[275, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[277, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[279, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[281, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[283, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[285, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[289, "module-baybe.surrogates.validation", false]], "baybe.targets": [[293, "module-baybe.targets", false]], "baybe.targets.base": [[294, "module-baybe.targets.base", false]], "baybe.targets.binary": [[296, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[299, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[302, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[304, "module-baybe.targets.transforms", false]], "baybe.utils": [[308, "module-baybe.utils", false]], "baybe.utils.augmentation": [[309, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[312, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[328, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[332, "module-baybe.utils.chemistry", false]], "baybe.utils.clustering_algorithms": [[337, "module-baybe.utils.clustering_algorithms", false]], "baybe.utils.clustering_algorithms.third_party": [[338, "module-baybe.utils.clustering_algorithms.third_party", false]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[339, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false]], "baybe.utils.conversion": [[341, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[345, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[362, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[367, "module-baybe.utils.memory", false]], "baybe.utils.metadata": [[369, "module-baybe.utils.metadata", false]], "baybe.utils.numerical": [[373, "module-baybe.utils.numerical", false]], "baybe.utils.random": [[380, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[383, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[387, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[389, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[392, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[301, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[305, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[169, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[169, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[297, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[229, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[230, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[368, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[31, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[288, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[146, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[141, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[329, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[298, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[316, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[377, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[378, "baybe.utils.numerical.closest_element", false]], "cluster_centers_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.cluster_centers_", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[388, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[218, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[218, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[218, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[191, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[105, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[258, "baybe.surrogates.composite.CompositeSurrogate", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[170, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[40, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[213, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[214, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[36, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[47, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[48, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[137, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[28, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[365, "baybe.utils.interval.convert_bounds", false]], "convert_to_float() (in module baybe.utils.basic)": [[317, "baybe.utils.basic.convert_to_float", false]], "converter (in module baybe.serialization.core)": [[231, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[364, "baybe.utils.interval.Interval.create", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[350, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[147, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[144, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[147, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[274, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[67, "baybe.exceptions.DeprecationError", false]], "description (baybe.objectives.base.objective property)": [[122, "baybe.objectives.base.Objective.description", false]], "description (baybe.objectives.desirability.desirabilityobjective property)": [[125, "baybe.objectives.desirability.DesirabilityObjective.description", false]], "description (baybe.objectives.pareto.paretoobjective property)": [[130, "baybe.objectives.pareto.ParetoObjective.description", false]], "description (baybe.objectives.single.singletargetobjective property)": [[132, "baybe.objectives.single.SingleTargetObjective.description", false]], "description (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.description", false]], "description (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.description", false]], "description (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.description", false]], "description (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.description", false]], "description (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.description", false]], "description (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.description", false]], "description (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.description", false]], "description (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.description", false]], "description (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.description", false]], "description (baybe.targets.base.target property)": [[295, "baybe.targets.base.Target.description", false]], "description (baybe.targets.binary.binarytarget property)": [[297, "baybe.targets.binary.BinaryTarget.description", false]], "description (baybe.targets.numerical.numericaltarget property)": [[303, "baybe.targets.numerical.NumericalTarget.description", false]], "description (baybe.utils.metadata.measurablemetadata attribute)": [[370, "baybe.utils.metadata.MeasurableMetadata.description", false]], "description (baybe.utils.metadata.metadata attribute)": [[371, "baybe.utils.metadata.Metadata.description", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[238, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[125, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[310, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[311, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[351, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[352, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[353, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[213, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[214, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[138, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[384, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[374, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[375, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[390, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[313, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[276, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[214, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[68, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[213, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.evaluate", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[218, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[218, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[218, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[97, "baybe.insights.shap.SHAPInsight.explain", false]], "explain_target() (baybe.insights.shap.shapinsight method)": [[97, "baybe.insights.shap.SHAPInsight.explain_target", false]], "explainers (baybe.insights.shap.shapinsight attribute)": [[97, "baybe.insights.shap.SHAPInsight.explainers", false]], "explainers (in module baybe.insights.shap)": [[95, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[297, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.FARTHEST", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[385, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[354, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[318, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[393, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[256, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[388, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fit_predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict", false]], "fit_transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[384, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsinitialization (class in baybe.recommenders.pure.nonpredictive.sampling)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[342, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[97, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[213, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[104, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[105, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[106, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[108, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[109, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[110, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[112, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[113, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[114, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[115, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[117, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[118, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[119, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[122, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[130, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[132, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[137, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[138, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[139, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[141, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[142, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[155, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[167, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[169, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[170, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[171, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[172, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[173, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[174, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[213, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[236, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[255, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[295, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[297, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[303, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[364, "baybe.utils.interval.Interval.from_dict", false]], "from_dict() (baybe.utils.metadata.measurablemetadata class method)": [[370, "baybe.utils.metadata.MeasurableMetadata.from_dict", false]], "from_dict() (baybe.utils.metadata.metadata class method)": [[371, "baybe.utils.metadata.Metadata.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[104, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[105, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[106, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[108, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[109, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[110, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[112, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[113, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[114, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[115, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[117, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[118, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[119, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[122, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[130, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[132, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[137, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[138, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[139, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[141, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[142, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[155, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[167, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[169, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[170, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[171, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[172, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[173, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[174, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[213, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[236, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[255, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[295, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[297, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[303, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[364, "baybe.utils.interval.Interval.from_json", false]], "from_json() (baybe.utils.metadata.measurablemetadata class method)": [[370, "baybe.utils.metadata.MeasurableMetadata.from_json", false]], "from_json() (baybe.utils.metadata.metadata class method)": [[371, "baybe.utils.metadata.Metadata.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[213, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[213, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[97, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[97, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[355, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[170, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[271, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[128, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[379, "baybe.utils.numerical.geom_mean", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_acquisition_function() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_acquisition_function", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[232, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[319, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[333, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[213, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[334, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_metadata_routing() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_metadata_routing", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[213, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[158, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params", false]], "get_subclasses() (in module baybe.utils.basic)": [[320, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[356, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[224, "baybe.searchspace.validation.get_transform_parameters", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[321, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[171, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[172, "baybe.priors.basic.HalfNormalPrior", false]], "handle_missing_values() (in module baybe.utils.dataframe)": [[357, "baybe.utils.dataframe.handle_missing_values", false]], "hilberts_factory() (in module baybe.utils.basic)": [[322, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[214, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[69, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[71, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[72, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[73, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[74, "baybe.exceptions.IncompatibleSurrogateError", false]], "incompletemeasurementserror": [[75, "baybe.exceptions.IncompleteMeasurementsError", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "inertia_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.inertia_", false]], "infeasibilityerror": [[76, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[363, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "initialization (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.initialization", false]], "inputdatatypewarning": [[77, "baybe.exceptions.InputDataTypeWarning", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[146, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[364, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[78, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[79, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[330, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[323, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[61, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_empty (baybe.utils.metadata.measurablemetadata property)": [[370, "baybe.utils.metadata.MeasurableMetadata.is_empty", false]], "is_empty (baybe.utils.metadata.metadata property)": [[371, "baybe.utils.metadata.Metadata.is_empty", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[159, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[122, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[130, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[132, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[137, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[139, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[364, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[100, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[181, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "joint_acquisition_value() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.joint_acquisition_value", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[106, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kmedoids (class in baybe.utils.clustering_algorithms.third_party.kmedoids)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "labels_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.labels_", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[109, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[110, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[113, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[114, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[115, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[109, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[110, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[113, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[114, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[115, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[301, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[306, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[108, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[173, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[174, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[244, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[364, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_dict_validator() (in module baybe.surrogates.validation)": [[290, "baybe.surrogates.validation.make_dict_validator", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[101, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[272, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[388, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[300, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[324, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[109, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[300, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[128, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurablemetadata (class in baybe.utils.metadata)": [[370, "baybe.utils.metadata.MeasurableMetadata", false]], "measurements (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.measurements", false]], "medoid_indices_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.medoid_indices_", false]], "memorysize (class in baybe.searchspace.discrete)": [[218, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.objectives.base.objective attribute)": [[122, "baybe.objectives.base.Objective.metadata", false]], "metadata (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.metadata", false]], "metadata (baybe.objectives.pareto.paretoobjective attribute)": [[130, "baybe.objectives.pareto.ParetoObjective.metadata", false]], "metadata (baybe.objectives.single.singletargetobjective attribute)": [[132, "baybe.objectives.single.SingleTargetObjective.metadata", false]], "metadata (baybe.parameters.base.continuousparameter attribute)": [[137, "baybe.parameters.base.ContinuousParameter.metadata", false]], "metadata (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.metadata", false]], "metadata (baybe.parameters.base.parameter attribute)": [[139, "baybe.parameters.base.Parameter.metadata", false]], "metadata (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.metadata", false]], "metadata (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.metadata", false]], "metadata (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.metadata", false]], "metadata (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.metadata", false]], "metadata (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.metadata", false]], "metadata (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.metadata", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metadata (baybe.targets.base.target attribute)": [[295, "baybe.targets.base.Target.metadata", false]], "metadata (baybe.targets.binary.binarytarget attribute)": [[297, "baybe.targets.binary.BinaryTarget.metadata", false]], "metadata (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.metadata", false]], "metadata (class in baybe.utils.metadata)": [[371, "baybe.utils.metadata.Metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[181, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[300, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimumcardinalityviolatedwarning": [[80, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "misc (baybe.utils.metadata.measurablemetadata attribute)": [[370, "baybe.utils.metadata.MeasurableMetadata.misc", false]], "misc (baybe.utils.metadata.metadata attribute)": [[371, "baybe.utils.metadata.Metadata.misc", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[81, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [23, "module-baybe.acquisition.base", false], [25, "module-baybe.acquisition.partial", false], [27, "module-baybe.acquisition.utils", false], [30, "module-baybe.campaign", false], [32, "module-baybe.constraints", false], [33, "module-baybe.constraints.base", false], [39, "module-baybe.constraints.conditions", false], [43, "module-baybe.constraints.continuous", false], [46, "module-baybe.constraints.deprecation", false], [50, "module-baybe.constraints.discrete", false], [60, "module-baybe.constraints.utils", false], [62, "module-baybe.constraints.validation", false], [66, "module-baybe.exceptions", false], [93, "module-baybe.insights", false], [94, "module-baybe.insights.shap", false], [102, "module-baybe.kernels", false], [103, "module-baybe.kernels.base", false], [107, "module-baybe.kernels.basic", false], [116, "module-baybe.kernels.composite", false], [120, "module-baybe.objectives", false], [121, "module-baybe.objectives.base", false], [124, "module-baybe.objectives.desirability", false], [127, "module-baybe.objectives.enum", false], [129, "module-baybe.objectives.pareto", false], [131, "module-baybe.objectives.single", false], [133, "module-baybe.objectives.validation", false], [135, "module-baybe.parameters", false], [136, "module-baybe.parameters.base", false], [140, "module-baybe.parameters.categorical", false], [143, "module-baybe.parameters.custom", false], [145, "module-baybe.parameters.enum", false], [150, "module-baybe.parameters.numerical", false], [153, "module-baybe.parameters.substance", false], [156, "module-baybe.parameters.utils", false], [161, "module-baybe.parameters.validation", false], [165, "module-baybe.priors", false], [166, "module-baybe.priors.base", false], [168, "module-baybe.priors.basic", false], [176, "module-baybe.recommenders", false], [177, "module-baybe.recommenders.base", false], [179, "module-baybe.recommenders.meta", false], [180, "module-baybe.recommenders.meta.base", false], [182, "module-baybe.recommenders.meta.sequential", false], [187, "module-baybe.recommenders.naive", false], [189, "module-baybe.recommenders.pure", false], [190, "module-baybe.recommenders.pure.base", false], [192, "module-baybe.recommenders.pure.bayesian", false], [193, "module-baybe.recommenders.pure.bayesian.base", false], [195, "module-baybe.recommenders.pure.bayesian.botorch", false], [197, "module-baybe.recommenders.pure.nonpredictive", false], [198, "module-baybe.recommenders.pure.nonpredictive.base", false], [200, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [205, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [209, "module-baybe.searchspace", false], [210, "module-baybe.searchspace.continuous", false], [212, "module-baybe.searchspace.core", false], [217, "module-baybe.searchspace.discrete", false], [223, "module-baybe.searchspace.validation", false], [227, "module-baybe.serialization", false], [228, "module-baybe.serialization.core", false], [235, "module-baybe.serialization.mixin", false], [237, "module-baybe.serialization.utils", false], [240, "module-baybe.simulation", false], [241, "module-baybe.simulation.core", false], [243, "module-baybe.simulation.lookup", false], [245, "module-baybe.simulation.scenarios", false], [247, "module-baybe.simulation.transfer_learning", false], [249, "module-baybe.surrogates", false], [250, "module-baybe.surrogates.bandit", false], [252, "module-baybe.surrogates.base", false], [257, "module-baybe.surrogates.composite", false], [259, "module-baybe.surrogates.custom", false], [262, "module-baybe.surrogates.gaussian_process", false], [263, "module-baybe.surrogates.gaussian_process.core", false], [265, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [269, "module-baybe.surrogates.gaussian_process.presets", false], [270, "module-baybe.surrogates.gaussian_process.presets.core", false], [273, "module-baybe.surrogates.gaussian_process.presets.default", false], [275, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [277, "module-baybe.surrogates.linear", false], [279, "module-baybe.surrogates.naive", false], [281, "module-baybe.surrogates.ngboost", false], [283, "module-baybe.surrogates.random_forest", false], [285, "module-baybe.surrogates.utils", false], [289, "module-baybe.surrogates.validation", false], [293, "module-baybe.targets", false], [294, "module-baybe.targets.base", false], [296, "module-baybe.targets.binary", false], [299, "module-baybe.targets.enum", false], [302, "module-baybe.targets.numerical", false], [304, "module-baybe.targets.transforms", false], [308, "module-baybe.utils", false], [309, "module-baybe.utils.augmentation", false], [312, "module-baybe.utils.basic", false], [328, "module-baybe.utils.boolean", false], [332, "module-baybe.utils.chemistry", false], [337, "module-baybe.utils.clustering_algorithms", false], [338, "module-baybe.utils.clustering_algorithms.third_party", false], [339, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false], [341, "module-baybe.utils.conversion", false], [345, "module-baybe.utils.dataframe", false], [362, "module-baybe.utils.interval", false], [367, "module-baybe.utils.memory", false], [369, "module-baybe.utils.metadata", false], [373, "module-baybe.utils.numerical", false], [380, "module-baybe.utils.random", false], [383, "module-baybe.utils.sampling_algorithms", false], [387, "module-baybe.utils.scaling", false], [389, "module-baybe.utils.torch", false], [392, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[122, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[125, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[130, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[132, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[137, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[139, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[295, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[297, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[335, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[82, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "nomeasurementserror": [[83, "baybe.exceptions.NoMeasurementsError", false]], "non_inf_float() (in module baybe.utils.validation)": [[394, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[395, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[96, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[343, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[84, "baybe.exceptions.NoRecommendersLeftError", false]], "normalize_input_dtypes() (in module baybe.utils.dataframe)": [[358, "baybe.utils.dataframe.normalize_input_dtypes", false]], "normalprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[85, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[86, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[109, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[114, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[303, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[87, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[122, "baybe.objectives.base.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[112, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[112, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[146, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[88, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[119, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[119, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[139, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[220, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[221, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[148, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[130, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[110, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[110, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[110, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[97, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[254, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[112, "baybe.kernels.basic.PolynomialKernel.power", false]], "predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[359, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[167, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[118, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[191, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.RANDOM", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[384, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "random_tie_break (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.random_tie_break", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[170, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[113, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[178, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[191, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[178, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[325, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[261, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[326, "baybe.utils.basic.register_hooks", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "rffkernel (class in baybe.kernels.basic)": [[114, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[115, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[386, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[126, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[128, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[171, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[172, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[173, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[174, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[119, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[213, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[89, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[214, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[233, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[41, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[239, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[236, "baybe.serialization.mixin.SerialMixin", false]], "set_output() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output", false]], "set_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params", false]], "set_random_seed() (in module baybe.utils.random)": [[381, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[98, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[99, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[97, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[175, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[242, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[246, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[248, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[132, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[154, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[336, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[175, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[160, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[29, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[331, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[49, "baybe.constraints.deprecation.structure_constraints", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[41, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[211, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[149, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[155, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[297, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[255, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[255, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[255, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[256, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[258, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[295, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[300, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[122, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[125, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[130, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[132, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[301, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[142, "baybe.parameters.categorical.TaskParameter", false]], "temporary_seed() (in module baybe.utils.random)": [[382, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[42, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[256, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[213, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[236, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_dict", false]], "to_dict() (baybe.utils.metadata.measurablemetadata method)": [[370, "baybe.utils.metadata.MeasurableMetadata.to_dict", false]], "to_dict() (baybe.utils.metadata.metadata method)": [[371, "baybe.utils.metadata.Metadata.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[213, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[236, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[251, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[253, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[255, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[258, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[264, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[278, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[280, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[282, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[284, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_json", false]], "to_json() (baybe.utils.metadata.measurablemetadata method)": [[370, "baybe.utils.metadata.MeasurableMetadata.to_json", false]], "to_json() (baybe.utils.metadata.metadata method)": [[371, "baybe.utils.metadata.Metadata.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_metadata() (in module baybe.utils.metadata)": [[372, "baybe.utils.metadata.to_metadata", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[123, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[215, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.conversion)": [[344, "baybe.utils.conversion.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[360, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[364, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[327, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[211, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[213, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[219, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[295, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[297, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[303, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[340, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[388, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[361, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[303, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[301, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[307, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[213, "baybe.searchspace.core.SearchSpace.type", false]], "type_validation_converter (in module baybe.surrogates.validation)": [[291, "baybe.surrogates.validation.type_validation_converter", false]], "unidentifiedsubclasserror": [[90, "baybe.exceptions.UnidentifiedSubclassError", false]], "unit (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.unit", false]], "unit (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.unit", false]], "unit (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.unit", false]], "unit (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.unit", false]], "unit (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.unit", false]], "unit (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.unit", false]], "unit (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.unit", false]], "unit (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.unit", false]], "unit (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.unit", false]], "unit (baybe.targets.base.target property)": [[295, "baybe.targets.base.Target.unit", false]], "unit (baybe.targets.binary.binarytarget property)": [[297, "baybe.targets.binary.BinaryTarget.unit", false]], "unit (baybe.targets.numerical.numericaltarget property)": [[303, "baybe.targets.numerical.NumericalTarget.unit", false]], "unit (baybe.utils.metadata.measurablemetadata attribute)": [[370, "baybe.utils.metadata.MeasurableMetadata.unit", false]], "unmatchedattributeerror": [[91, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[314, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[315, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[234, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[92, "baybe.exceptions.UnusedObjectWarning", false]], "update_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.update_measurements", false]], "upper (baybe.utils.interval.interval attribute)": [[364, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[366, "baybe.utils.interval.use_fallback_constructor_hook", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[63, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[64, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[260, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[65, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[292, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[162, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[163, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[396, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[397, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[225, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[226, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[216, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[222, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[398, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[134, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[164, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[108, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[108, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[376, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[391, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [30, 0, 0, "-", "campaign"], [32, 0, 0, "-", "constraints"], [66, 0, 0, "-", "exceptions"], [93, 0, 0, "-", "insights"], [102, 0, 0, "-", "kernels"], [120, 0, 0, "-", "objectives"], [135, 0, 0, "-", "parameters"], [165, 0, 0, "-", "priors"], [176, 0, 0, "-", "recommenders"], [209, 0, 0, "-", "searchspace"], [227, 0, 0, "-", "serialization"], [240, 0, 0, "-", "simulation"], [249, 0, 0, "-", "surrogates"], [293, 0, 0, "-", "targets"], [308, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [23, 0, 0, "-", "base"], [25, 0, 0, "-", "partial"], [27, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNParEGO"], [13, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [14, 1, 1, "", "qLogNoisyExpectedImprovement"], [15, 1, 1, "", "qNegIntegratedPosteriorVariance"], [16, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [17, 1, 1, "", "qNoisyExpectedImprovement"], [18, 1, 1, "", "qPosteriorStandardDeviation"], [19, 1, 1, "", "qProbabilityOfImprovement"], [20, 1, 1, "", "qSimpleRegret"], [21, 1, 1, "", "qThompsonSampling"], [22, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.evaluate.params": [[3, 4, 1, "", "candidates"], [3, 4, 1, "", "jointly"], [3, 4, 1, "", "measurements"], [3, 4, 1, "", "objective"], [3, 4, 1, "", "pending_experiments"], [3, 4, 1, "", "searchspace"], [3, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate.params": [[4, 4, 1, "", "candidates"], [4, 4, 1, "", "jointly"], [4, 4, 1, "", "measurements"], [4, 4, 1, "", "objective"], [4, 4, 1, "", "pending_experiments"], [4, 4, 1, "", "searchspace"], [4, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "evaluate"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.evaluate.params": [[5, 4, 1, "", "candidates"], [5, 4, 1, "", "jointly"], [5, 4, 1, "", "measurements"], [5, 4, 1, "", "objective"], [5, 4, 1, "", "pending_experiments"], [5, 4, 1, "", "searchspace"], [5, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "evaluate"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate.params": [[6, 4, 1, "", "candidates"], [6, 4, 1, "", "jointly"], [6, 4, 1, "", "measurements"], [6, 4, 1, "", "objective"], [6, 4, 1, "", "pending_experiments"], [6, 4, 1, "", "searchspace"], [6, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "evaluate"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate.params": [[7, 4, 1, "", "candidates"], [7, 4, 1, "", "jointly"], [7, 4, 1, "", "measurements"], [7, 4, 1, "", "objective"], [7, 4, 1, "", "pending_experiments"], [7, 4, 1, "", "searchspace"], [7, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate.params": [[8, 4, 1, "", "candidates"], [8, 4, 1, "", "jointly"], [8, 4, 1, "", "measurements"], [8, 4, 1, "", "objective"], [8, 4, 1, "", "pending_experiments"], [8, 4, 1, "", "searchspace"], [8, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "evaluate"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.evaluate.params": [[9, 4, 1, "", "candidates"], [9, 4, 1, "", "jointly"], [9, 4, 1, "", "measurements"], [9, 4, 1, "", "objective"], [9, 4, 1, "", "pending_experiments"], [9, 4, 1, "", "searchspace"], [9, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "evaluate"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate.params": [[10, 4, 1, "", "candidates"], [10, 4, 1, "", "jointly"], [10, 4, 1, "", "measurements"], [10, 4, 1, "", "objective"], [10, 4, 1, "", "pending_experiments"], [10, 4, 1, "", "searchspace"], [10, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "evaluate"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate.params": [[11, 4, 1, "", "candidates"], [11, 4, 1, "", "jointly"], [11, 4, 1, "", "measurements"], [11, 4, 1, "", "objective"], [11, 4, 1, "", "pending_experiments"], [11, 4, 1, "", "searchspace"], [11, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNParEGO": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "evaluate"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.evaluate.params": [[12, 4, 1, "", "candidates"], [12, 4, 1, "", "jointly"], [12, 4, 1, "", "measurements"], [12, 4, 1, "", "objective"], [12, 4, 1, "", "pending_experiments"], [12, 4, 1, "", "searchspace"], [12, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "compute_ref_point"], [13, 2, 1, "", "evaluate"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "prune_baseline"], [13, 3, 1, "", "reference_point"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[13, 4, 1, "", "array"], [13, 4, 1, "", "factor"], [13, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate.params": [[13, 4, 1, "", "candidates"], [13, 4, 1, "", "jointly"], [13, 4, 1, "", "measurements"], [13, 4, 1, "", "objective"], [13, 4, 1, "", "pending_experiments"], [13, 4, 1, "", "searchspace"], [13, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "evaluate"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate.params": [[14, 4, 1, "", "candidates"], [14, 4, 1, "", "jointly"], [14, 4, 1, "", "measurements"], [14, 4, 1, "", "objective"], [14, 4, 1, "", "pending_experiments"], [14, 4, 1, "", "searchspace"], [14, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "evaluate"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "get_integration_points"], [15, 3, 1, "", "sampling_fraction"], [15, 3, 1, "", "sampling_method"], [15, 3, 1, "", "sampling_n_points"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate.params": [[15, 4, 1, "", "candidates"], [15, 4, 1, "", "jointly"], [15, 4, 1, "", "measurements"], [15, 4, 1, "", "objective"], [15, 4, 1, "", "pending_experiments"], [15, 4, 1, "", "searchspace"], [15, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[15, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "compute_ref_point"], [16, 2, 1, "", "evaluate"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "reference_point"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[16, 4, 1, "", "array"], [16, 4, 1, "", "factor"], [16, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate.params": [[16, 4, 1, "", "candidates"], [16, 4, 1, "", "jointly"], [16, 4, 1, "", "measurements"], [16, 4, 1, "", "objective"], [16, 4, 1, "", "pending_experiments"], [16, 4, 1, "", "searchspace"], [16, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "evaluate"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "prune_baseline"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate.params": [[17, 4, 1, "", "candidates"], [17, 4, 1, "", "jointly"], [17, 4, 1, "", "measurements"], [17, 4, 1, "", "objective"], [17, 4, 1, "", "pending_experiments"], [17, 4, 1, "", "searchspace"], [17, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "evaluate"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate.params": [[18, 4, 1, "", "candidates"], [18, 4, 1, "", "jointly"], [18, 4, 1, "", "measurements"], [18, 4, 1, "", "objective"], [18, 4, 1, "", "pending_experiments"], [18, 4, 1, "", "searchspace"], [18, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "evaluate"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate.params": [[19, 4, 1, "", "candidates"], [19, 4, 1, "", "jointly"], [19, 4, 1, "", "measurements"], [19, 4, 1, "", "objective"], [19, 4, 1, "", "pending_experiments"], [19, 4, 1, "", "searchspace"], [19, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "evaluate"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.evaluate.params": [[20, 4, 1, "", "candidates"], [20, 4, 1, "", "jointly"], [20, 4, 1, "", "measurements"], [20, 4, 1, "", "objective"], [20, 4, 1, "", "pending_experiments"], [20, 4, 1, "", "searchspace"], [20, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "evaluate"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "n_mc_samples"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.evaluate.params": [[21, 4, 1, "", "candidates"], [21, 4, 1, "", "jointly"], [21, 4, 1, "", "measurements"], [21, 4, 1, "", "objective"], [21, 4, 1, "", "pending_experiments"], [21, 4, 1, "", "searchspace"], [21, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 3, 1, "", "beta"], [22, 2, 1, "", "evaluate"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate.params": [[22, 4, 1, "", "candidates"], [22, 4, 1, "", "jointly"], [22, 4, 1, "", "measurements"], [22, 4, 1, "", "objective"], [22, 4, 1, "", "pending_experiments"], [22, 4, 1, "", "searchspace"], [22, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[22, 4, 1, "", "string"]], "baybe.acquisition.base": [[24, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 2, 1, "", "evaluate"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.evaluate.params": [[24, 4, 1, "", "candidates"], [24, 4, 1, "", "jointly"], [24, 4, 1, "", "measurements"], [24, 4, 1, "", "objective"], [24, 4, 1, "", "pending_experiments"], [24, 4, 1, "", "searchspace"], [24, 4, 1, "", "surrogate"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[24, 4, 1, "", "string"]], "baybe.acquisition.partial": [[26, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "botorch_acqf"], [26, 3, 1, "", "pin_discrete"], [26, 3, 1, "", "pinned_part"], [26, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[26, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[28, 5, 1, "", "convert_acqf"], [29, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[31, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "acquisition_values"], [31, 2, 1, "", "add_measurements"], [31, 3, 1, "", "allow_recommending_already_measured"], [31, 3, 1, "", "allow_recommending_already_recommended"], [31, 3, 1, "", "allow_recommending_pending_experiments"], [31, 2, 1, "", "from_config"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 2, 1, "", "get_acquisition_function"], [31, 2, 1, "", "get_surrogate"], [31, 2, 1, "", "joint_acquisition_value"], [31, 6, 1, "", "measurements"], [31, 3, 1, "", "n_batches_done"], [31, 3, 1, "", "n_fits_done"], [31, 3, 1, "", "objective"], [31, 6, 1, "", "parameters"], [31, 2, 1, "", "posterior"], [31, 2, 1, "", "posterior_stats"], [31, 2, 1, "", "recommend"], [31, 3, 1, "", "recommender"], [31, 3, 1, "", "searchspace"], [31, 6, 1, "", "targets"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"], [31, 2, 1, "", "toggle_discrete_candidates"], [31, 2, 1, "", "update_measurements"], [31, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.acquisition_values.params": [[31, 4, 1, "", "acquisition_function"], [31, 4, 1, "", "batch_size"], [31, 4, 1, "", "candidates"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.add_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[31, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[31, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_acquisition_function.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.get_surrogate.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[31, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[31, 4, 1, "", "candidates"], [31, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[31, 4, 1, "", "complement"], [31, 4, 1, "", "constraints"], [31, 4, 1, "", "dry_run"], [31, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.update_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.validate_config.params": [[31, 4, 1, "", "config_json"]], "baybe.constraints": [[33, 0, 0, "-", "base"], [39, 0, 0, "-", "conditions"], [43, 0, 0, "-", "continuous"], [46, 0, 0, "-", "deprecation"], [50, 0, 0, "-", "discrete"], [60, 0, 0, "-", "utils"], [62, 0, 0, "-", "validation"]], "baybe.constraints.base": [[34, 1, 1, "", "CardinalityConstraint"], [35, 1, 1, "", "Constraint"], [36, 1, 1, "", "ContinuousConstraint"], [37, 1, 1, "", "ContinuousNonlinearConstraint"], [38, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "max_cardinality"], [34, 3, 1, "", "min_cardinality"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "eval_during_augmentation"], [36, 3, 1, "", "eval_during_creation"], [36, 3, 1, "", "eval_during_modeling"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 6, 1, "", "is_continuous"], [36, 6, 1, "", "is_discrete"], [36, 3, 1, "", "numerical_only"], [36, 3, 1, "", "parameters"], [36, 2, 1, "", "summary"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 2, 1, "", "get_invalid"], [38, 2, 1, "", "get_invalid_polars"], [38, 2, 1, "", "get_valid"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[38, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[38, 4, 1, "", "df"]], "baybe.constraints.conditions": [[40, 1, 1, "", "Condition"], [41, 1, 1, "", "SubSelectionCondition"], [42, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[40, 2, 1, "", "evaluate"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"], [40, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[40, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[40, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "selection"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"], [41, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[41, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[41, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "evaluate"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 3, 1, "", "operator"], [42, 3, 1, "", "threshold"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"], [42, 2, 1, "", "to_polars"], [42, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[42, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[42, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[44, 1, 1, "", "ContinuousCardinalityConstraint"], [45, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "eval_during_augmentation"], [44, 3, 1, "", "eval_during_creation"], [44, 3, 1, "", "eval_during_modeling"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 2, 1, "", "get_absolute_thresholds"], [44, 2, 1, "", "inactive_parameter_combinations"], [44, 6, 1, "", "is_continuous"], [44, 6, 1, "", "is_discrete"], [44, 3, 1, "", "max_cardinality"], [44, 3, 1, "", "min_cardinality"], [44, 6, 1, "", "n_inactive_parameter_combinations"], [44, 3, 1, "", "numerical_only"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "relative_threshold"], [44, 2, 1, "", "sample_inactive_parameters"], [44, 2, 1, "", "summary"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[44, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[44, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[44, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[45, 2, 1, "", "__init__"], [45, 3, 1, "", "coefficients"], [45, 3, 1, "", "eval_during_augmentation"], [45, 3, 1, "", "eval_during_creation"], [45, 3, 1, "", "eval_during_modeling"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 6, 1, "", "is_continuous"], [45, 6, 1, "", "is_discrete"], [45, 6, 1, "", "is_eq"], [45, 3, 1, "", "numerical_only"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "rhs"], [45, 2, 1, "", "summary"], [45, 2, 1, "", "to_botorch"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[45, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[45, 4, 1, "", "idx_offset"], [45, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[47, 5, 1, "", "ContinuousLinearEqualityConstraint"], [48, 5, 1, "", "ContinuousLinearInequalityConstraint"], [49, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[51, 1, 1, "", "DiscreteCardinalityConstraint"], [52, 1, 1, "", "DiscreteCustomConstraint"], [53, 1, 1, "", "DiscreteDependenciesConstraint"], [54, 1, 1, "", "DiscreteExcludeConstraint"], [55, 1, 1, "", "DiscreteLinkedParametersConstraint"], [56, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [57, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [58, 1, 1, "", "DiscreteProductConstraint"], [59, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "max_cardinality"], [51, 3, 1, "", "min_cardinality"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"], [52, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "affected_parameters"], [53, 3, 1, "", "conditions"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 3, 1, "", "permutation_invariant"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "combiner"], [54, 3, 1, "", "conditions"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "dependencies"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "condition"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[58, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[59, 2, 1, "", "__init__"], [59, 3, 1, "", "condition"], [59, 3, 1, "", "eval_during_augmentation"], [59, 3, 1, "", "eval_during_creation"], [59, 3, 1, "", "eval_during_modeling"], [59, 2, 1, "", "from_dict"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_invalid"], [59, 2, 1, "", "get_invalid_polars"], [59, 2, 1, "", "get_valid"], [59, 6, 1, "", "is_continuous"], [59, 6, 1, "", "is_discrete"], [59, 3, 1, "", "numerical_only"], [59, 3, 1, "", "parameters"], [59, 2, 1, "", "summary"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[59, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[59, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[59, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[59, 4, 1, "", "df"]], "baybe.constraints.utils": [[61, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[61, 4, 1, "", "check_maximum"], [61, 4, 1, "", "check_minimum"], [61, 4, 1, "", "df"], [61, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[63, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [64, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [65, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[63, 4, 1, "", "constraint"], [63, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[64, 4, 1, "", "constraints"]], "baybe.exceptions": [[67, 7, 1, "", "DeprecationError"], [68, 7, 1, "", "EmptySearchSpaceError"], [69, 7, 1, "", "IncompatibilityError"], [70, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [71, 7, 1, "", "IncompatibleArgumentError"], [72, 7, 1, "", "IncompatibleExplainerError"], [73, 7, 1, "", "IncompatibleSearchSpaceError"], [74, 7, 1, "", "IncompatibleSurrogateError"], [75, 7, 1, "", "IncompleteMeasurementsError"], [76, 7, 1, "", "InfeasibilityError"], [77, 7, 1, "", "InputDataTypeWarning"], [78, 7, 1, "", "InvalidSurrogateModelError"], [79, 7, 1, "", "InvalidTargetValueError"], [80, 7, 1, "", "MinimumCardinalityViolatedWarning"], [81, 7, 1, "", "ModelNotTrainedError"], [82, 7, 1, "", "NoMCAcquisitionFunctionError"], [83, 7, 1, "", "NoMeasurementsError"], [84, 7, 1, "", "NoRecommendersLeftError"], [85, 7, 1, "", "NotEnoughPointsLeftError"], [86, 7, 1, "", "NothingToSimulateError"], [87, 7, 1, "", "NumericalUnderflowError"], [88, 7, 1, "", "OptionalImportError"], [89, 7, 1, "", "SearchSpaceMatchWarning"], [90, 7, 1, "", "UnidentifiedSubclassError"], [91, 7, 1, "", "UnmatchedAttributeError"], [92, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.IncompleteMeasurementsError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.InputDataTypeWarning": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.NoMeasurementsError": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__new__"]], "baybe.insights": [[94, 0, 0, "-", "shap"]], "baybe.insights.shap": [[95, 8, 1, "", "EXPLAINERS"], [96, 8, 1, "", "NON_SHAP_EXPLAINERS"], [97, 1, 1, "", "SHAPInsight"], [98, 8, 1, "", "SHAP_EXPLAINERS"], [99, 8, 1, "", "SHAP_PLOTS"], [100, 5, 1, "", "is_shap_explainer"], [101, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[97, 2, 1, "", "__init__"], [97, 3, 1, "", "background_data"], [97, 2, 1, "", "explain"], [97, 2, 1, "", "explain_target"], [97, 3, 1, "", "explainers"], [97, 2, 1, "", "from_campaign"], [97, 2, 1, "", "from_recommender"], [97, 2, 1, "", "from_surrogate"], [97, 2, 1, "", "plot"]], "baybe.insights.shap.SHAPInsight.explain.params": [[97, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.explain_target.params": [[97, 4, 1, "", "data"], [97, 4, 1, "", "target_index"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[97, 4, 1, "", "campaign"], [97, 4, 1, "", "explainer_cls"], [97, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[97, 4, 1, "", "explainer_cls"], [97, 4, 1, "", "measurements"], [97, 4, 1, "", "objective"], [97, 4, 1, "", "recommender"], [97, 4, 1, "", "searchspace"], [97, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[97, 4, 1, "", "**kwargs"], [97, 4, 1, "", "data"], [97, 4, 1, "", "explanation_index"], [97, 4, 1, "", "plot_type"], [97, 4, 1, "", "show"], [97, 4, 1, "", "target_index"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[101, 4, 1, "", "data"], [101, 4, 1, "", "explainer_cls"], [101, 4, 1, "", "surrogate"], [101, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[103, 0, 0, "-", "base"], [107, 0, 0, "-", "basic"], [116, 0, 0, "-", "composite"]], "baybe.kernels.base": [[104, 1, 1, "", "BasicKernel"], [105, 1, 1, "", "CompositeKernel"], [106, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[106, 4, 1, "", "string"]], "baybe.kernels.basic": [[108, 1, 1, "", "LinearKernel"], [109, 1, 1, "", "MaternKernel"], [110, 1, 1, "", "PeriodicKernel"], [111, 1, 1, "", "PiecewisePolynomialKernel"], [112, 1, 1, "", "PolynomialKernel"], [113, 1, 1, "", "RBFKernel"], [114, 1, 1, "", "RFFKernel"], [115, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"], [108, 3, 1, "", "variance_initial_value"], [108, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 3, 1, "", "lengthscale_initial_value"], [109, 3, 1, "", "lengthscale_prior"], [109, 3, 1, "", "nu"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 3, 1, "", "lengthscale_initial_value"], [110, 3, 1, "", "lengthscale_prior"], [110, 3, 1, "", "period_length_initial_value"], [110, 3, 1, "", "period_length_prior"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_factory"], [110, 2, 1, "", "to_gpytorch"], [110, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[110, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 3, 1, "", "lengthscale_initial_value"], [111, 3, 1, "", "lengthscale_prior"], [111, 3, 1, "", "q"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[111, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "offset_initial_value"], [112, 3, 1, "", "offset_prior"], [112, 3, 1, "", "power"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[112, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 3, 1, "", "lengthscale_initial_value"], [113, 3, 1, "", "lengthscale_prior"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_factory"], [113, 2, 1, "", "to_gpytorch"], [113, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[113, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 3, 1, "", "lengthscale_initial_value"], [114, 3, 1, "", "lengthscale_prior"], [114, 3, 1, "", "num_samples"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_factory"], [114, 2, 1, "", "to_gpytorch"], [114, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[114, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 3, 1, "", "lengthscale_initial_value"], [115, 3, 1, "", "lengthscale_prior"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_factory"], [115, 2, 1, "", "to_gpytorch"], [115, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[115, 4, 1, "", "string"]], "baybe.kernels.composite": [[117, 1, 1, "", "AdditiveKernel"], [118, 1, 1, "", "ProductKernel"], [119, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "base_kernels"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_factory"], [117, 2, 1, "", "to_gpytorch"], [117, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[117, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[118, 2, 1, "", "__init__"], [118, 3, 1, "", "base_kernels"], [118, 2, 1, "", "from_dict"], [118, 2, 1, "", "from_json"], [118, 2, 1, "", "to_dict"], [118, 2, 1, "", "to_factory"], [118, 2, 1, "", "to_gpytorch"], [118, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[118, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[118, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[119, 2, 1, "", "__init__"], [119, 3, 1, "", "base_kernel"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 3, 1, "", "outputscale_initial_value"], [119, 3, 1, "", "outputscale_prior"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_factory"], [119, 2, 1, "", "to_gpytorch"], [119, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[119, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[119, 4, 1, "", "string"]], "baybe.objectives": [[121, 0, 0, "-", "base"], [124, 0, 0, "-", "desirability"], [127, 0, 0, "-", "enum"], [129, 0, 0, "-", "pareto"], [131, 0, 0, "-", "single"], [133, 0, 0, "-", "validation"]], "baybe.objectives.base": [[122, 1, 1, "", "Objective"], [123, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[122, 2, 1, "", "__init__"], [122, 6, 1, "", "description"], [122, 2, 1, "", "from_dict"], [122, 2, 1, "", "from_json"], [122, 3, 1, "", "is_multi_output"], [122, 3, 1, "", "metadata"], [122, 6, 1, "", "n_outputs"], [122, 6, 1, "", "targets"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "to_json"], [122, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[122, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[122, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[122, 4, 1, "", "allow_extra"], [122, 4, 1, "", "allow_missing"], [122, 4, 1, "", "df"]], "baybe.objectives.desirability": [[125, 1, 1, "", "DesirabilityObjective"], [126, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[125, 2, 1, "", "__init__"], [125, 6, 1, "", "description"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 3, 1, "", "is_multi_output"], [125, 3, 1, "", "metadata"], [125, 6, 1, "", "n_outputs"], [125, 3, 1, "", "scalarizer"], [125, 6, 1, "", "targets"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "transform"], [125, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[125, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[125, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[125, 4, 1, "", "allow_extra"], [125, 4, 1, "", "allow_missing"], [125, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[126, 4, 1, "", "scalarizer"], [126, 4, 1, "", "values"], [126, 4, 1, "", "weights"]], "baybe.objectives.enum": [[128, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[128, 3, 1, "", "GEOM_MEAN"], [128, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[130, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[130, 2, 1, "", "__init__"], [130, 6, 1, "", "description"], [130, 2, 1, "", "from_dict"], [130, 2, 1, "", "from_json"], [130, 3, 1, "", "is_multi_output"], [130, 3, 1, "", "metadata"], [130, 6, 1, "", "n_outputs"], [130, 6, 1, "", "targets"], [130, 2, 1, "", "to_dict"], [130, 2, 1, "", "to_json"], [130, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[130, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[130, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[130, 4, 1, "", "allow_extra"], [130, 4, 1, "", "allow_missing"], [130, 4, 1, "", "df"]], "baybe.objectives.single": [[132, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[132, 2, 1, "", "__init__"], [132, 6, 1, "", "description"], [132, 2, 1, "", "from_dict"], [132, 2, 1, "", "from_json"], [132, 3, 1, "", "is_multi_output"], [132, 3, 1, "", "metadata"], [132, 6, 1, "", "n_outputs"], [132, 6, 1, "", "targets"], [132, 2, 1, "", "to_dict"], [132, 2, 1, "", "to_json"], [132, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[132, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[132, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[132, 4, 1, "", "allow_extra"], [132, 4, 1, "", "allow_missing"], [132, 4, 1, "", "df"]], "baybe.objectives.validation": [[134, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[136, 0, 0, "-", "base"], [140, 0, 0, "-", "categorical"], [143, 0, 0, "-", "custom"], [145, 0, 0, "-", "enum"], [150, 0, 0, "-", "numerical"], [153, 0, 0, "-", "substance"], [156, 0, 0, "-", "utils"], [161, 0, 0, "-", "validation"]], "baybe.parameters.base": [[137, 1, 1, "", "ContinuousParameter"], [138, 1, 1, "", "DiscreteParameter"], [139, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[137, 2, 1, "", "__init__"], [137, 6, 1, "", "comp_rep_columns"], [137, 6, 1, "", "description"], [137, 2, 1, "", "from_dict"], [137, 2, 1, "", "from_json"], [137, 6, 1, "", "is_continuous"], [137, 6, 1, "", "is_discrete"], [137, 2, 1, "", "is_in_range"], [137, 3, 1, "", "is_numerical"], [137, 3, 1, "", "metadata"], [137, 3, 1, "", "name"], [137, 2, 1, "", "summary"], [137, 2, 1, "", "to_dict"], [137, 2, 1, "", "to_json"], [137, 2, 1, "", "to_searchspace"], [137, 2, 1, "", "to_subspace"], [137, 6, 1, "", "unit"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[137, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[137, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[137, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[138, 2, 1, "", "__init__"], [138, 6, 1, "", "active_values"], [138, 6, 1, "", "comp_df"], [138, 6, 1, "", "comp_rep_columns"], [138, 6, 1, "", "description"], [138, 3, 1, "", "encoding"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 6, 1, "", "is_continuous"], [138, 6, 1, "", "is_discrete"], [138, 2, 1, "", "is_in_range"], [138, 3, 1, "", "is_numerical"], [138, 3, 1, "", "metadata"], [138, 3, 1, "", "name"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_json"], [138, 2, 1, "", "to_searchspace"], [138, 2, 1, "", "to_subspace"], [138, 2, 1, "", "transform"], [138, 6, 1, "", "unit"], [138, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[138, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[138, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[138, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[138, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[139, 2, 1, "", "__init__"], [139, 6, 1, "", "comp_rep_columns"], [139, 6, 1, "", "description"], [139, 2, 1, "", "from_dict"], [139, 2, 1, "", "from_json"], [139, 6, 1, "", "is_continuous"], [139, 6, 1, "", "is_discrete"], [139, 2, 1, "", "is_in_range"], [139, 3, 1, "", "is_numerical"], [139, 3, 1, "", "metadata"], [139, 3, 1, "", "name"], [139, 2, 1, "", "summary"], [139, 2, 1, "", "to_dict"], [139, 2, 1, "", "to_json"], [139, 2, 1, "", "to_searchspace"], [139, 6, 1, "", "unit"]], "baybe.parameters.base.Parameter.from_dict.params": [[139, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[139, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[139, 4, 1, "", "item"]], "baybe.parameters.categorical": [[141, 1, 1, "", "CategoricalParameter"], [142, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "active_values"], [141, 6, 1, "", "comp_df"], [141, 6, 1, "", "comp_rep_columns"], [141, 6, 1, "", "description"], [141, 3, 1, "", "encoding"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 6, 1, "", "is_continuous"], [141, 6, 1, "", "is_discrete"], [141, 2, 1, "", "is_in_range"], [141, 3, 1, "", "is_numerical"], [141, 3, 1, "", "metadata"], [141, 3, 1, "", "name"], [141, 2, 1, "", "summary"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_json"], [141, 2, 1, "", "to_searchspace"], [141, 2, 1, "", "to_subspace"], [141, 2, 1, "", "transform"], [141, 6, 1, "", "unit"], [141, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[141, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[141, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[141, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[141, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "active_values"], [142, 6, 1, "", "comp_df"], [142, 6, 1, "", "comp_rep_columns"], [142, 6, 1, "", "description"], [142, 3, 1, "", "encoding"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "metadata"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 2, 1, "", "to_subspace"], [142, 2, 1, "", "transform"], [142, 6, 1, "", "unit"], [142, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[142, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[142, 4, 1, "", "series"]], "baybe.parameters.custom": [[144, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[144, 2, 1, "", "__init__"], [144, 6, 1, "", "active_values"], [144, 6, 1, "", "comp_df"], [144, 6, 1, "", "comp_rep_columns"], [144, 3, 1, "", "data"], [144, 3, 1, "", "decorrelate"], [144, 6, 1, "", "description"], [144, 3, 1, "", "encoding"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_json"], [144, 6, 1, "", "is_continuous"], [144, 6, 1, "", "is_discrete"], [144, 2, 1, "", "is_in_range"], [144, 3, 1, "", "is_numerical"], [144, 3, 1, "", "metadata"], [144, 3, 1, "", "name"], [144, 2, 1, "", "summary"], [144, 2, 1, "", "to_dict"], [144, 2, 1, "", "to_json"], [144, 2, 1, "", "to_searchspace"], [144, 2, 1, "", "to_subspace"], [144, 2, 1, "", "transform"], [144, 6, 1, "", "unit"], [144, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[144, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[144, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[144, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[144, 4, 1, "", "series"]], "baybe.parameters.enum": [[146, 1, 1, "", "CategoricalEncoding"], [147, 1, 1, "", "CustomEncoding"], [148, 1, 1, "", "ParameterEncoding"], [149, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[146, 3, 1, "", "INT"], [146, 3, 1, "", "OHE"], [146, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[147, 3, 1, "", "CUSTOM"], [147, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[149, 3, 1, "", "ATOMPAIR"], [149, 3, 1, "", "AUTOCORR"], [149, 3, 1, "", "AVALON"], [149, 3, 1, "", "BCUT2D"], [149, 3, 1, "", "E3FP"], [149, 3, 1, "", "ECFP"], [149, 3, 1, "", "ELECTROSHAPE"], [149, 3, 1, "", "ERG"], [149, 3, 1, "", "ESTATE"], [149, 3, 1, "", "FUNCTIONALGROUPS"], [149, 3, 1, "", "GETAWAY"], [149, 3, 1, "", "GHOSECRIPPEN"], [149, 3, 1, "", "KLEKOTAROTH"], [149, 3, 1, "", "LAGGNER"], [149, 3, 1, "", "LAYERED"], [149, 3, 1, "", "LINGO"], [149, 3, 1, "", "MACCS"], [149, 3, 1, "", "MAP"], [149, 3, 1, "", "MHFP"], [149, 3, 1, "", "MORDRED"], [149, 3, 1, "", "MORGAN_FP"], [149, 3, 1, "", "MORSE"], [149, 3, 1, "", "MQNS"], [149, 3, 1, "", "PATTERN"], [149, 3, 1, "", "PHARMACOPHORE"], [149, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [149, 3, 1, "", "PUBCHEM"], [149, 3, 1, "", "RDF"], [149, 3, 1, "", "RDKIT"], [149, 3, 1, "", "RDKIT2DDESCRIPTORS"], [149, 3, 1, "", "RDKITFINGERPRINT"], [149, 3, 1, "", "SECFP"], [149, 3, 1, "", "TOPOLOGICALTORSION"], [149, 3, 1, "", "USR"], [149, 3, 1, "", "USRCAT"], [149, 3, 1, "", "VSA"], [149, 3, 1, "", "WHIM"], [149, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[151, 1, 1, "", "NumericalContinuousParameter"], [152, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[151, 2, 1, "", "__init__"], [151, 3, 1, "", "bounds"], [151, 6, 1, "", "comp_rep_columns"], [151, 6, 1, "", "description"], [151, 2, 1, "", "from_dict"], [151, 2, 1, "", "from_json"], [151, 6, 1, "", "is_continuous"], [151, 6, 1, "", "is_discrete"], [151, 2, 1, "", "is_in_range"], [151, 3, 1, "", "is_numerical"], [151, 3, 1, "", "metadata"], [151, 3, 1, "", "name"], [151, 2, 1, "", "summary"], [151, 2, 1, "", "to_dict"], [151, 2, 1, "", "to_json"], [151, 2, 1, "", "to_searchspace"], [151, 2, 1, "", "to_subspace"], [151, 6, 1, "", "unit"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[151, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[151, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[151, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[152, 2, 1, "", "__init__"], [152, 6, 1, "", "active_values"], [152, 6, 1, "", "comp_df"], [152, 6, 1, "", "comp_rep_columns"], [152, 6, 1, "", "description"], [152, 3, 1, "", "encoding"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 6, 1, "", "is_continuous"], [152, 6, 1, "", "is_discrete"], [152, 2, 1, "", "is_in_range"], [152, 3, 1, "", "is_numerical"], [152, 3, 1, "", "metadata"], [152, 3, 1, "", "name"], [152, 2, 1, "", "summary"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_json"], [152, 2, 1, "", "to_searchspace"], [152, 2, 1, "", "to_subspace"], [152, 3, 1, "", "tolerance"], [152, 2, 1, "", "transform"], [152, 6, 1, "", "unit"], [152, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[152, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[152, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[152, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[152, 4, 1, "", "series"]], "baybe.parameters.substance": [[154, 3, 1, "", "Smiles"], [155, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[155, 2, 1, "", "__init__"], [155, 6, 1, "", "active_values"], [155, 6, 1, "", "comp_df"], [155, 6, 1, "", "comp_rep_columns"], [155, 3, 1, "", "data"], [155, 3, 1, "", "decorrelate"], [155, 6, 1, "", "description"], [155, 3, 1, "", "encoding"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 6, 1, "", "is_continuous"], [155, 6, 1, "", "is_discrete"], [155, 2, 1, "", "is_in_range"], [155, 3, 1, "", "is_numerical"], [155, 3, 1, "", "kwargs_conformer"], [155, 3, 1, "", "kwargs_fingerprint"], [155, 3, 1, "", "metadata"], [155, 3, 1, "", "name"], [155, 2, 1, "", "summary"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_json"], [155, 2, 1, "", "to_searchspace"], [155, 2, 1, "", "to_subspace"], [155, 2, 1, "", "transform"], [155, 6, 1, "", "unit"], [155, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[155, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[155, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[155, 4, 1, "", "series"]], "baybe.parameters.utils": [[157, 5, 1, "", "activate_parameter"], [158, 5, 1, "", "get_parameters_from_dataframe"], [159, 5, 1, "", "is_inactive"], [160, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[157, 4, 1, "", "parameter"], [157, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[158, 4, 1, "", "df"], [158, 4, 1, "", "factory"], [158, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[159, 4, 1, "", "lower_threshold"], [159, 4, 1, "", "upper_threshold"], [159, 4, 1, "", "x"]], "baybe.parameters.validation": [[162, 5, 1, "", "validate_decorrelation"], [163, 5, 1, "", "validate_is_finite"], [164, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[166, 0, 0, "-", "base"], [168, 0, 0, "-", "basic"]], "baybe.priors.base": [[167, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "from_dict"], [167, 2, 1, "", "from_json"], [167, 2, 1, "", "to_dict"], [167, 2, 1, "", "to_gpytorch"], [167, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[167, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[167, 4, 1, "", "string"]], "baybe.priors.basic": [[169, 1, 1, "", "BetaPrior"], [170, 1, 1, "", "GammaPrior"], [171, 1, 1, "", "HalfCauchyPrior"], [172, 1, 1, "", "HalfNormalPrior"], [173, 1, 1, "", "LogNormalPrior"], [174, 1, 1, "", "NormalPrior"], [175, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[169, 2, 1, "", "__init__"], [169, 3, 1, "", "alpha"], [169, 3, 1, "", "beta"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_gpytorch"], [169, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[169, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[170, 2, 1, "", "__init__"], [170, 3, 1, "", "concentration"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 3, 1, "", "rate"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_gpytorch"], [170, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[170, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 3, 1, "", "scale"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_gpytorch"], [171, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[171, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 3, 1, "", "scale"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_gpytorch"], [172, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[172, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 3, 1, "", "loc"], [173, 3, 1, "", "scale"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[173, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "loc"], [174, 3, 1, "", "scale"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[174, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[175, 2, 1, "", "__init__"], [175, 3, 1, "", "a"], [175, 3, 1, "", "b"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "from_json"], [175, 3, 1, "", "sigma"], [175, 2, 1, "", "to_dict"], [175, 2, 1, "", "to_gpytorch"], [175, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[175, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[175, 4, 1, "", "string"]], "baybe.recommenders": [[177, 0, 0, "-", "base"], [179, 0, 0, "-", "meta"], [187, 0, 0, "-", "naive"], [189, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[178, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[178, 4, 1, "", "batch_size"], [178, 4, 1, "", "measurements"], [178, 4, 1, "", "objective"], [178, 4, 1, "", "pending_experiments"], [178, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[180, 0, 0, "-", "base"], [182, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[181, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "from_dict"], [181, 2, 1, "", "from_json"], [181, 2, 1, "", "get_current_recommender"], [181, 2, 1, "", "get_next_recommender"], [181, 2, 1, "", "get_non_meta_recommender"], [181, 6, 1, "", "is_stateful"], [181, 2, 1, "", "recommend"], [181, 2, 1, "", "select_recommender"], [181, 2, 1, "", "to_dict"], [181, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[181, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[181, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[183, 1, 1, "", "BaseSequentialMetaRecommender"], [184, 1, 1, "", "SequentialMetaRecommender"], [185, 1, 1, "", "StreamingSequentialMetaRecommender"], [186, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "from_dict"], [183, 2, 1, "", "from_json"], [183, 2, 1, "", "get_current_recommender"], [183, 2, 1, "", "get_next_recommender"], [183, 2, 1, "", "get_non_meta_recommender"], [183, 6, 1, "", "is_stateful"], [183, 2, 1, "", "recommend"], [183, 2, 1, "", "select_recommender"], [183, 2, 1, "", "to_dict"], [183, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[183, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[183, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "get_current_recommender"], [184, 2, 1, "", "get_next_recommender"], [184, 2, 1, "", "get_non_meta_recommender"], [184, 6, 1, "", "is_stateful"], [184, 3, 1, "", "mode"], [184, 2, 1, "", "recommend"], [184, 3, 1, "", "recommenders"], [184, 2, 1, "", "select_recommender"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[184, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[184, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "get_current_recommender"], [185, 2, 1, "", "get_next_recommender"], [185, 2, 1, "", "get_non_meta_recommender"], [185, 6, 1, "", "is_stateful"], [185, 2, 1, "", "recommend"], [185, 3, 1, "", "recommenders"], [185, 2, 1, "", "select_recommender"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[185, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[185, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "from_dict"], [186, 2, 1, "", "from_json"], [186, 2, 1, "", "get_current_recommender"], [186, 2, 1, "", "get_next_recommender"], [186, 2, 1, "", "get_non_meta_recommender"], [186, 3, 1, "", "initial_recommender"], [186, 6, 1, "", "is_stateful"], [186, 2, 1, "", "recommend"], [186, 3, 1, "", "recommender"], [186, 3, 1, "", "remain_switched"], [186, 2, 1, "", "select_recommender"], [186, 3, 1, "", "switch_after"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[186, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[186, 4, 1, "", "string"]], "baybe.recommenders.naive": [[188, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[188, 2, 1, "", "__init__"], [188, 6, 1, "", "allow_recommending_already_measured"], [188, 6, 1, "", "allow_recommending_pending_experiments"], [188, 6, 1, "", "allow_repeated_recommendations"], [188, 3, 1, "", "compatibility"], [188, 3, 1, "", "cont_recommender"], [188, 3, 1, "", "disc_recommender"], [188, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[188, 4, 1, "", "batch_size"], [188, 4, 1, "", "measurements"], [188, 4, 1, "", "objective"], [188, 4, 1, "", "pending_experiments"], [188, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[190, 0, 0, "-", "base"], [192, 0, 0, "-", "bayesian"], [197, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[191, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[191, 2, 1, "", "__init__"], [191, 6, 1, "", "allow_recommending_already_measured"], [191, 6, 1, "", "allow_recommending_pending_experiments"], [191, 6, 1, "", "allow_repeated_recommendations"], [191, 3, 1, "", "compatibility"], [191, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[191, 4, 1, "", "batch_size"], [191, 4, 1, "", "measurements"], [191, 4, 1, "", "objective"], [191, 4, 1, "", "pending_experiments"], [191, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[193, 0, 0, "-", "base"], [195, 0, 0, "-", "botorch"]], "baybe.recommenders.pure.bayesian.base": [[194, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[194, 2, 1, "", "__init__"], [194, 3, 1, "", "acquisition_function"], [194, 2, 1, "", "acquisition_values"], [194, 6, 1, "", "allow_recommending_already_measured"], [194, 6, 1, "", "allow_recommending_pending_experiments"], [194, 6, 1, "", "allow_repeated_recommendations"], [194, 3, 1, "", "compatibility"], [194, 2, 1, "", "get_acquisition_function"], [194, 2, 1, "", "get_surrogate"], [194, 2, 1, "", "joint_acquisition_value"], [194, 2, 1, "", "recommend"], [194, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values.params": [[194, 4, 1, "", "acquisition_function"], [194, 4, 1, "", "candidates"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[194, 4, 1, "", "batch_size"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[196, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[196, 2, 1, "", "__init__"], [196, 3, 1, "", "acquisition_function"], [196, 2, 1, "", "acquisition_values"], [196, 6, 1, "", "allow_recommending_already_measured"], [196, 6, 1, "", "allow_recommending_pending_experiments"], [196, 6, 1, "", "allow_repeated_recommendations"], [196, 3, 1, "", "compatibility"], [196, 2, 1, "", "get_acquisition_function"], [196, 2, 1, "", "get_surrogate"], [196, 3, 1, "", "hybrid_sampler"], [196, 2, 1, "", "joint_acquisition_value"], [196, 3, 1, "", "max_n_subspaces"], [196, 3, 1, "", "n_raw_samples"], [196, 3, 1, "", "n_restarts"], [196, 2, 1, "", "recommend"], [196, 3, 1, "", "sampling_percentage"], [196, 3, 1, "", "sequential_continuous"], [196, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values.params": [[196, 4, 1, "", "acquisition_function"], [196, 4, 1, "", "candidates"], [196, 4, 1, "", "measurements"], [196, 4, 1, "", "objective"], [196, 4, 1, "", "pending_experiments"], [196, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[196, 4, 1, "", "batch_size"], [196, 4, 1, "", "measurements"], [196, 4, 1, "", "objective"], [196, 4, 1, "", "pending_experiments"], [196, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive": [[198, 0, 0, "-", "base"], [200, 0, 0, "-", "clustering"], [205, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[199, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[199, 2, 1, "", "__init__"], [199, 6, 1, "", "allow_recommending_already_measured"], [199, 6, 1, "", "allow_recommending_pending_experiments"], [199, 6, 1, "", "allow_repeated_recommendations"], [199, 3, 1, "", "compatibility"], [199, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[199, 4, 1, "", "batch_size"], [199, 4, 1, "", "measurements"], [199, 4, 1, "", "objective"], [199, 4, 1, "", "pending_experiments"], [199, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[201, 1, 1, "", "GaussianMixtureClusteringRecommender"], [202, 1, 1, "", "KMeansClusteringRecommender"], [203, 1, 1, "", "PAMClusteringRecommender"], [204, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[201, 2, 1, "", "__init__"], [201, 6, 1, "", "allow_recommending_already_measured"], [201, 6, 1, "", "allow_recommending_pending_experiments"], [201, 6, 1, "", "allow_repeated_recommendations"], [201, 3, 1, "", "compatibility"], [201, 3, 1, "", "model_cluster_num_parameter_name"], [201, 3, 1, "", "model_params"], [201, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[201, 4, 1, "", "batch_size"], [201, 4, 1, "", "measurements"], [201, 4, 1, "", "objective"], [201, 4, 1, "", "pending_experiments"], [201, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[202, 2, 1, "", "__init__"], [202, 6, 1, "", "allow_recommending_already_measured"], [202, 6, 1, "", "allow_recommending_pending_experiments"], [202, 6, 1, "", "allow_repeated_recommendations"], [202, 3, 1, "", "compatibility"], [202, 3, 1, "", "model_cluster_num_parameter_name"], [202, 3, 1, "", "model_params"], [202, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[202, 4, 1, "", "batch_size"], [202, 4, 1, "", "measurements"], [202, 4, 1, "", "objective"], [202, 4, 1, "", "pending_experiments"], [202, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[203, 2, 1, "", "__init__"], [203, 6, 1, "", "allow_recommending_already_measured"], [203, 6, 1, "", "allow_recommending_pending_experiments"], [203, 6, 1, "", "allow_repeated_recommendations"], [203, 3, 1, "", "compatibility"], [203, 3, 1, "", "model_cluster_num_parameter_name"], [203, 3, 1, "", "model_params"], [203, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[203, 4, 1, "", "batch_size"], [203, 4, 1, "", "measurements"], [203, 4, 1, "", "objective"], [203, 4, 1, "", "pending_experiments"], [203, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[204, 2, 1, "", "__init__"], [204, 6, 1, "", "allow_recommending_already_measured"], [204, 6, 1, "", "allow_recommending_pending_experiments"], [204, 6, 1, "", "allow_repeated_recommendations"], [204, 3, 1, "", "compatibility"], [204, 3, 1, "", "model_cluster_num_parameter_name"], [204, 3, 1, "", "model_params"], [204, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[204, 4, 1, "", "batch_size"], [204, 4, 1, "", "measurements"], [204, 4, 1, "", "objective"], [204, 4, 1, "", "pending_experiments"], [204, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[206, 1, 1, "", "FPSInitialization"], [207, 1, 1, "", "FPSRecommender"], [208, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization": [[206, 3, 1, "", "FARTHEST"], [206, 3, 1, "", "RANDOM"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[207, 2, 1, "", "__init__"], [207, 6, 1, "", "allow_recommending_already_measured"], [207, 6, 1, "", "allow_recommending_pending_experiments"], [207, 6, 1, "", "allow_repeated_recommendations"], [207, 3, 1, "", "compatibility"], [207, 3, 1, "", "initialization"], [207, 3, 1, "", "random_tie_break"], [207, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[207, 4, 1, "", "batch_size"], [207, 4, 1, "", "measurements"], [207, 4, 1, "", "objective"], [207, 4, 1, "", "pending_experiments"], [207, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[208, 2, 1, "", "__init__"], [208, 6, 1, "", "allow_recommending_already_measured"], [208, 6, 1, "", "allow_recommending_pending_experiments"], [208, 6, 1, "", "allow_repeated_recommendations"], [208, 3, 1, "", "compatibility"], [208, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[208, 4, 1, "", "batch_size"], [208, 4, 1, "", "measurements"], [208, 4, 1, "", "objective"], [208, 4, 1, "", "pending_experiments"], [208, 4, 1, "", "searchspace"]], "baybe.searchspace": [[210, 0, 0, "-", "continuous"], [212, 0, 0, "-", "core"], [217, 0, 0, "-", "discrete"], [223, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[211, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[211, 2, 1, "", "__init__"], [211, 6, 1, "", "comp_rep_bounds"], [211, 6, 1, "", "comp_rep_columns"], [211, 6, 1, "", "constraints_cardinality"], [211, 3, 1, "", "constraints_lin_eq"], [211, 3, 1, "", "constraints_lin_ineq"], [211, 3, 1, "", "constraints_nonlin"], [211, 2, 1, "", "empty"], [211, 2, 1, "", "from_bounds"], [211, 2, 1, "", "from_dataframe"], [211, 2, 1, "", "from_dict"], [211, 2, 1, "", "from_json"], [211, 2, 1, "", "from_parameter"], [211, 2, 1, "", "from_product"], [211, 6, 1, "", "full_factorial"], [211, 2, 1, "", "get_parameters_by_name"], [211, 2, 1, "", "inactive_parameter_combinations"], [211, 6, 1, "", "is_empty"], [211, 6, 1, "", "n_inactive_parameter_combinations"], [211, 6, 1, "", "parameter_names"], [211, 6, 1, "", "parameter_names_in_cardinality_constraints"], [211, 3, 1, "", "parameters"], [211, 2, 1, "", "sample_from_full_factorial"], [211, 2, 1, "", "sample_uniform"], [211, 6, 1, "", "scaling_bounds"], [211, 2, 1, "", "to_dict"], [211, 2, 1, "", "to_json"], [211, 2, 1, "", "to_searchspace"], [211, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[211, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[211, 4, 1, "", "df"], [211, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[211, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[211, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[211, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[211, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[211, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[211, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[213, 1, 1, "", "SearchSpace"], [214, 1, 1, "", "SearchSpaceType"], [215, 5, 1, "", "to_searchspace"], [216, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[213, 2, 1, "", "__init__"], [213, 6, 1, "", "comp_rep_bounds"], [213, 6, 1, "", "comp_rep_columns"], [213, 6, 1, "", "constraints"], [213, 6, 1, "", "constraints_augmentable"], [213, 3, 1, "", "continuous"], [213, 3, 1, "", "discrete"], [213, 2, 1, "", "estimate_product_space_size"], [213, 2, 1, "", "from_dataframe"], [213, 2, 1, "", "from_dict"], [213, 2, 1, "", "from_json"], [213, 2, 1, "", "from_parameter"], [213, 2, 1, "", "from_product"], [213, 2, 1, "", "get_comp_rep_parameter_indices"], [213, 2, 1, "", "get_parameters_by_name"], [213, 6, 1, "", "n_tasks"], [213, 6, 1, "", "parameter_names"], [213, 6, 1, "", "parameters"], [213, 6, 1, "", "scaling_bounds"], [213, 6, 1, "", "task_idx"], [213, 2, 1, "", "to_dict"], [213, 2, 1, "", "to_json"], [213, 2, 1, "", "transform"], [213, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[213, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[213, 4, 1, "", "df"], [213, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[213, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[213, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[213, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[213, 4, 1, "", "constraints"], [213, 4, 1, "", "empty_encoding"], [213, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[213, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[213, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[213, 4, 1, "", "allow_extra"], [213, 4, 1, "", "allow_missing"], [213, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[214, 3, 1, "", "CONTINUOUS"], [214, 3, 1, "", "DISCRETE"], [214, 3, 1, "", "EITHER"], [214, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[218, 1, 1, "", "MemorySize"], [219, 1, 1, "", "SubspaceDiscrete"], [220, 5, 1, "", "parameter_cartesian_prod_pandas"], [221, 5, 1, "", "parameter_cartesian_prod_polars"], [222, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[218, 2, 1, "", "__init__"], [218, 3, 1, "", "comp_rep_bytes"], [218, 6, 1, "", "comp_rep_human_readable"], [218, 3, 1, "", "comp_rep_shape"], [218, 3, 1, "", "exp_rep_bytes"], [218, 6, 1, "", "exp_rep_human_readable"], [218, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[219, 2, 1, "", "__init__"], [219, 3, 1, "", "comp_rep"], [219, 6, 1, "", "comp_rep_bounds"], [219, 6, 1, "", "comp_rep_columns"], [219, 3, 1, "", "constraints"], [219, 2, 1, "", "empty"], [219, 3, 1, "", "empty_encoding"], [219, 2, 1, "", "estimate_product_space_size"], [219, 3, 1, "", "exp_rep"], [219, 2, 1, "", "from_dataframe"], [219, 2, 1, "", "from_dict"], [219, 2, 1, "", "from_json"], [219, 2, 1, "", "from_parameter"], [219, 2, 1, "", "from_product"], [219, 2, 1, "", "from_simplex"], [219, 2, 1, "", "get_candidates"], [219, 2, 1, "", "get_parameters_by_name"], [219, 6, 1, "", "is_empty"], [219, 6, 1, "", "metadata"], [219, 6, 1, "", "parameter_names"], [219, 3, 1, "", "parameters"], [219, 6, 1, "", "scaling_bounds"], [219, 2, 1, "", "to_dict"], [219, 2, 1, "", "to_json"], [219, 2, 1, "", "to_searchspace"], [219, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[219, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[219, 4, 1, "", "df"], [219, 4, 1, "", "empty_encoding"], [219, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[219, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[219, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[219, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[219, 4, 1, "", "boundary_only"], [219, 4, 1, "", "constraints"], [219, 4, 1, "", "max_nonzero"], [219, 4, 1, "", "max_sum"], [219, 4, 1, "", "min_nonzero"], [219, 4, 1, "", "product_parameters"], [219, 4, 1, "", "simplex_parameters"], [219, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[219, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[220, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[221, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[224, 5, 1, "", "get_transform_parameters"], [225, 5, 1, "", "validate_parameter_names"], [226, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[228, 0, 0, "-", "core"], [235, 0, 0, "-", "mixin"], [237, 0, 0, "-", "utils"]], "baybe.serialization.core": [[229, 5, 1, "", "block_deserialization_hook"], [230, 5, 1, "", "block_serialization_hook"], [231, 8, 1, "", "converter"], [232, 5, 1, "", "get_base_structure_hook"], [233, 5, 1, "", "select_constructor_hook"], [234, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[232, 4, 1, "", "base"], [232, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[234, 4, 1, "", "base"], [234, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[236, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[236, 2, 1, "", "from_dict"], [236, 2, 1, "", "from_json"], [236, 2, 1, "", "to_dict"], [236, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[236, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[236, 4, 1, "", "string"]], "baybe.serialization.utils": [[238, 5, 1, "", "deserialize_dataframe"], [239, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[241, 0, 0, "-", "core"], [243, 0, 0, "-", "lookup"], [245, 0, 0, "-", "scenarios"], [247, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[242, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[242, 4, 1, "", "batch_size"], [242, 4, 1, "", "campaign"], [242, 4, 1, "", "impute_mode"], [242, 4, 1, "", "initial_data"], [242, 4, 1, "", "lookup"], [242, 4, 1, "", "n_doe_iterations"], [242, 4, 1, "", "noise_percent"], [242, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[244, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[244, 4, 1, "", "impute_mode"], [244, 4, 1, "", "lookup"], [244, 4, 1, "", "queries"], [244, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[246, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[246, 4, 1, "", "batch_size"], [246, 4, 1, "", "groupby"], [246, 4, 1, "", "impute_mode"], [246, 4, 1, "", "initial_data"], [246, 4, 1, "", "lookup"], [246, 4, 1, "", "n_doe_iterations"], [246, 4, 1, "", "n_mc_iterations"], [246, 4, 1, "", "noise_percent"], [246, 4, 1, "", "parallel_runs"], [246, 4, 1, "", "random_seed"], [246, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[248, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[248, 4, 1, "", "batch_size"], [248, 4, 1, "", "campaign"], [248, 4, 1, "", "groupby"], [248, 4, 1, "", "lookup"], [248, 4, 1, "", "n_doe_iterations"], [248, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[250, 0, 0, "-", "bandit"], [252, 0, 0, "-", "base"], [257, 0, 0, "-", "composite"], [259, 0, 0, "-", "custom"], [262, 0, 0, "-", "gaussian_process"], [277, 0, 0, "-", "linear"], [279, 0, 0, "-", "naive"], [281, 0, 0, "-", "ngboost"], [283, 0, 0, "-", "random_forest"], [285, 0, 0, "-", "utils"], [289, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[251, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[251, 2, 1, "", "__init__"], [251, 2, 1, "", "fit"], [251, 2, 1, "", "from_dict"], [251, 2, 1, "", "from_json"], [251, 2, 1, "", "posterior"], [251, 2, 1, "", "posterior_means"], [251, 2, 1, "", "posterior_modes"], [251, 2, 1, "", "posterior_stats"], [251, 3, 1, "", "prior"], [251, 2, 1, "", "replicate"], [251, 3, 1, "", "supports_multi_output"], [251, 3, 1, "", "supports_transfer_learning"], [251, 2, 1, "", "to_botorch"], [251, 2, 1, "", "to_dict"], [251, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[251, 4, 1, "", "measurements"], [251, 4, 1, "", "objective"], [251, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[251, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[251, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[251, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[251, 4, 1, "", "candidates"], [251, 4, 1, "", "stats"]], "baybe.surrogates.base": [[253, 1, 1, "", "IndependentGaussianSurrogate"], [254, 8, 1, "", "PosteriorStatistic"], [255, 1, 1, "", "Surrogate"], [256, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[253, 2, 1, "", "__init__"], [253, 2, 1, "", "fit"], [253, 2, 1, "", "from_dict"], [253, 2, 1, "", "from_json"], [253, 2, 1, "", "posterior"], [253, 2, 1, "", "posterior_stats"], [253, 2, 1, "", "replicate"], [253, 3, 1, "", "supports_multi_output"], [253, 3, 1, "", "supports_transfer_learning"], [253, 2, 1, "", "to_botorch"], [253, 2, 1, "", "to_dict"], [253, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[253, 4, 1, "", "measurements"], [253, 4, 1, "", "objective"], [253, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[253, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[253, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[253, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[253, 4, 1, "", "candidates"], [253, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate": [[255, 2, 1, "", "__init__"], [255, 2, 1, "", "fit"], [255, 2, 1, "", "from_dict"], [255, 2, 1, "", "from_json"], [255, 2, 1, "", "posterior"], [255, 2, 1, "", "posterior_stats"], [255, 2, 1, "", "replicate"], [255, 3, 1, "", "supports_multi_output"], [255, 3, 1, "", "supports_transfer_learning"], [255, 2, 1, "", "to_botorch"], [255, 2, 1, "", "to_dict"], [255, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[255, 4, 1, "", "measurements"], [255, 4, 1, "", "objective"], [255, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[255, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[255, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[255, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[255, 4, 1, "", "candidates"], [255, 4, 1, "", "stats"]], "baybe.surrogates.base.SurrogateProtocol": [[256, 2, 1, "", "__init__"], [256, 2, 1, "", "fit"], [256, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[258, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "fit"], [258, 2, 1, "", "from_dict"], [258, 2, 1, "", "from_json"], [258, 2, 1, "", "from_replication"], [258, 2, 1, "", "posterior"], [258, 2, 1, "", "posterior_stats"], [258, 3, 1, "", "surrogates"], [258, 2, 1, "", "to_botorch"], [258, 2, 1, "", "to_dict"], [258, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[258, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[258, 4, 1, "", "string"]], "baybe.surrogates.custom": [[260, 1, 1, "", "CustomONNXSurrogate"], [261, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "fit"], [260, 2, 1, "", "from_dict"], [260, 2, 1, "", "from_json"], [260, 3, 1, "", "onnx_input_name"], [260, 3, 1, "", "onnx_str"], [260, 2, 1, "", "posterior"], [260, 2, 1, "", "posterior_stats"], [260, 2, 1, "", "replicate"], [260, 3, 1, "", "supports_multi_output"], [260, 3, 1, "", "supports_transfer_learning"], [260, 2, 1, "", "to_botorch"], [260, 2, 1, "", "to_dict"], [260, 2, 1, "", "to_json"], [260, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[260, 4, 1, "", "measurements"], [260, 4, 1, "", "objective"], [260, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[260, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[260, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[260, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[260, 4, 1, "", "candidates"], [260, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[260, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[263, 0, 0, "-", "core"], [265, 0, 0, "-", "kernel_factory"], [269, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[264, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "fit"], [264, 2, 1, "", "from_dict"], [264, 2, 1, "", "from_json"], [264, 2, 1, "", "from_preset"], [264, 3, 1, "", "kernel_factory"], [264, 2, 1, "", "posterior"], [264, 2, 1, "", "posterior_stats"], [264, 2, 1, "", "replicate"], [264, 3, 1, "", "supports_multi_output"], [264, 3, 1, "", "supports_transfer_learning"], [264, 2, 1, "", "to_botorch"], [264, 2, 1, "", "to_dict"], [264, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[264, 4, 1, "", "measurements"], [264, 4, 1, "", "objective"], [264, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[264, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[264, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[264, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[264, 4, 1, "", "candidates"], [264, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.kernel_factory": [[266, 1, 1, "", "KernelFactory"], [267, 1, 1, "", "PlainKernelFactory"], [268, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[266, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[267, 2, 1, "", "__init__"], [267, 2, 1, "", "from_dict"], [267, 2, 1, "", "from_json"], [267, 3, 1, "", "kernel"], [267, 2, 1, "", "to_dict"], [267, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[267, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[267, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[270, 0, 0, "-", "core"], [273, 0, 0, "-", "default"], [275, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[271, 1, 1, "", "GaussianProcessPreset"], [272, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[271, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[274, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[274, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[276, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[276, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[278, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[278, 2, 1, "", "__init__"], [278, 2, 1, "", "fit"], [278, 2, 1, "", "from_dict"], [278, 2, 1, "", "from_json"], [278, 3, 1, "", "model_params"], [278, 2, 1, "", "posterior"], [278, 2, 1, "", "posterior_stats"], [278, 2, 1, "", "replicate"], [278, 3, 1, "", "supports_multi_output"], [278, 3, 1, "", "supports_transfer_learning"], [278, 2, 1, "", "to_botorch"], [278, 2, 1, "", "to_dict"], [278, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[278, 4, 1, "", "measurements"], [278, 4, 1, "", "objective"], [278, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[278, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[278, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[278, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[278, 4, 1, "", "candidates"], [278, 4, 1, "", "stats"]], "baybe.surrogates.naive": [[280, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[280, 2, 1, "", "__init__"], [280, 2, 1, "", "fit"], [280, 2, 1, "", "from_dict"], [280, 2, 1, "", "from_json"], [280, 2, 1, "", "posterior"], [280, 2, 1, "", "posterior_stats"], [280, 2, 1, "", "replicate"], [280, 3, 1, "", "supports_multi_output"], [280, 3, 1, "", "supports_transfer_learning"], [280, 2, 1, "", "to_botorch"], [280, 2, 1, "", "to_dict"], [280, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[280, 4, 1, "", "measurements"], [280, 4, 1, "", "objective"], [280, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[280, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[280, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[280, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[280, 4, 1, "", "candidates"], [280, 4, 1, "", "stats"]], "baybe.surrogates.ngboost": [[282, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[282, 2, 1, "", "__init__"], [282, 2, 1, "", "fit"], [282, 2, 1, "", "from_dict"], [282, 2, 1, "", "from_json"], [282, 3, 1, "", "model_params"], [282, 2, 1, "", "posterior"], [282, 2, 1, "", "posterior_stats"], [282, 2, 1, "", "replicate"], [282, 3, 1, "", "supports_multi_output"], [282, 3, 1, "", "supports_transfer_learning"], [282, 2, 1, "", "to_botorch"], [282, 2, 1, "", "to_dict"], [282, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[282, 4, 1, "", "measurements"], [282, 4, 1, "", "objective"], [282, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[282, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[282, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[282, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[282, 4, 1, "", "candidates"], [282, 4, 1, "", "stats"]], "baybe.surrogates.random_forest": [[284, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[284, 2, 1, "", "__init__"], [284, 2, 1, "", "fit"], [284, 2, 1, "", "from_dict"], [284, 2, 1, "", "from_json"], [284, 3, 1, "", "model_params"], [284, 2, 1, "", "posterior"], [284, 2, 1, "", "posterior_stats"], [284, 2, 1, "", "replicate"], [284, 3, 1, "", "supports_multi_output"], [284, 3, 1, "", "supports_transfer_learning"], [284, 2, 1, "", "to_botorch"], [284, 2, 1, "", "to_dict"], [284, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[284, 4, 1, "", "measurements"], [284, 4, 1, "", "objective"], [284, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[284, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[284, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[284, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[284, 4, 1, "", "candidates"], [284, 4, 1, "", "stats"]], "baybe.surrogates.utils": [[286, 5, 1, "", "batchify_ensemble_predictor"], [287, 5, 1, "", "batchify_mean_var_prediction"], [288, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[286, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[288, 4, 1, "", "cls"], [288, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[290, 5, 1, "", "make_dict_validator"], [291, 8, 1, "", "type_validation_converter"], [292, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.make_dict_validator.params": [[290, 4, 1, "", "specification"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[292, 4, 1, "", "model_cls"]], "baybe.targets": [[294, 0, 0, "-", "base"], [296, 0, 0, "-", "binary"], [299, 0, 0, "-", "enum"], [302, 0, 0, "-", "numerical"], [304, 0, 0, "-", "transforms"]], "baybe.targets.base": [[295, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[295, 2, 1, "", "__init__"], [295, 6, 1, "", "description"], [295, 2, 1, "", "from_dict"], [295, 2, 1, "", "from_json"], [295, 3, 1, "", "metadata"], [295, 3, 1, "", "name"], [295, 2, 1, "", "summary"], [295, 2, 1, "", "to_dict"], [295, 2, 1, "", "to_json"], [295, 2, 1, "", "to_objective"], [295, 2, 1, "", "transform"], [295, 6, 1, "", "unit"]], "baybe.targets.base.Target.from_dict.params": [[295, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[295, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[295, 4, 1, "", "series"]], "baybe.targets.binary": [[297, 1, 1, "", "BinaryTarget"], [298, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[297, 2, 1, "", "__init__"], [297, 6, 1, "", "description"], [297, 3, 1, "", "failure_value"], [297, 2, 1, "", "from_dict"], [297, 2, 1, "", "from_json"], [297, 3, 1, "", "metadata"], [297, 3, 1, "", "name"], [297, 3, 1, "", "success_value"], [297, 2, 1, "", "summary"], [297, 2, 1, "", "to_dict"], [297, 2, 1, "", "to_json"], [297, 2, 1, "", "to_objective"], [297, 2, 1, "", "transform"], [297, 6, 1, "", "unit"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[297, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[297, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[297, 4, 1, "", "series"]], "baybe.targets.enum": [[300, 1, 1, "", "TargetMode"], [301, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[300, 3, 1, "", "MATCH"], [300, 3, 1, "", "MAX"], [300, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[301, 3, 1, "", "BELL"], [301, 3, 1, "", "LINEAR"], [301, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[303, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[303, 2, 1, "", "__init__"], [303, 3, 1, "", "bounds"], [303, 6, 1, "", "description"], [303, 2, 1, "", "from_dict"], [303, 2, 1, "", "from_json"], [303, 3, 1, "", "metadata"], [303, 3, 1, "", "mode"], [303, 3, 1, "", "name"], [303, 2, 1, "", "summary"], [303, 2, 1, "", "to_dict"], [303, 2, 1, "", "to_json"], [303, 2, 1, "", "to_objective"], [303, 2, 1, "", "transform"], [303, 3, 1, "", "transformation"], [303, 6, 1, "", "unit"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[303, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[303, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[303, 4, 1, "", "series"]], "baybe.targets.transforms": [[305, 5, 1, "", "bell_transform"], [306, 5, 1, "", "linear_transform"], [307, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[305, 4, 1, "", "arr"], [305, 4, 1, "", "lower"], [305, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[306, 4, 1, "", "arr"], [306, 4, 1, "", "descending"], [306, 4, 1, "", "lower"], [306, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[307, 4, 1, "", "arr"], [307, 4, 1, "", "lower"], [307, 4, 1, "", "upper"]], "baybe.utils": [[309, 0, 0, "-", "augmentation"], [312, 0, 0, "-", "basic"], [328, 0, 0, "-", "boolean"], [332, 0, 0, "-", "chemistry"], [337, 0, 0, "-", "clustering_algorithms"], [341, 0, 0, "-", "conversion"], [345, 0, 0, "-", "dataframe"], [362, 0, 0, "-", "interval"], [367, 0, 0, "-", "memory"], [369, 0, 0, "-", "metadata"], [373, 0, 0, "-", "numerical"], [380, 0, 0, "-", "random"], [383, 0, 0, "-", "sampling_algorithms"], [387, 0, 0, "-", "scaling"], [389, 0, 0, "-", "torch"], [392, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[310, 5, 1, "", "df_apply_dependency_augmentation"], [311, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[310, 4, 1, "", "affected"], [310, 4, 1, "", "causing"], [310, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[311, 4, 1, "", "column_groups"], [311, 4, 1, "", "df"]], "baybe.utils.basic": [[313, 1, 1, "", "Dummy"], [314, 8, 1, "", "UNSPECIFIED"], [315, 1, 1, "", "UnspecifiedType"], [316, 1, 1, "", "classproperty"], [317, 5, 1, "", "convert_to_float"], [318, 5, 1, "", "find_subclass"], [319, 5, 1, "", "get_baseclasses"], [320, 5, 1, "", "get_subclasses"], [321, 5, 1, "", "group_duplicate_values"], [322, 5, 1, "", "hilberts_factory"], [323, 5, 1, "", "is_all_instance"], [324, 5, 1, "", "match_attributes"], [325, 5, 1, "", "refers_to"], [326, 5, 1, "", "register_hooks"], [327, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[313, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[316, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[319, 4, 1, "", "abstract"], [319, 4, 1, "", "cls"], [319, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[320, 4, 1, "", "abstract"], [320, 4, 1, "", "cls"], [320, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[321, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[324, 4, 1, "", "callable_"], [324, 4, 1, "", "ignore"], [324, 4, 1, "", "object"], [324, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[326, 4, 1, "", "post_hooks"], [326, 4, 1, "", "pre_hooks"], [326, 4, 1, "", "target"]], "baybe.utils.boolean": [[329, 5, 1, "", "check_if_in"], [330, 5, 1, "", "is_abstract"], [331, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[329, 4, 1, "", "allowed"], [329, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[330, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[331, 4, 1, "", "val"]], "baybe.utils.chemistry": [[333, 5, 1, "", "get_canonical_smiles"], [334, 5, 1, "", "get_fingerprint_class"], [335, 5, 1, "", "name_to_smiles"], [336, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[334, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[335, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[336, 4, 1, "", "encoding"], [336, 4, 1, "", "kwargs_conformer"], [336, 4, 1, "", "kwargs_fingerprint"], [336, 4, 1, "", "prefix"], [336, 4, 1, "", "smiles"]], "baybe.utils.clustering_algorithms": [[338, 0, 0, "-", "third_party"]], "baybe.utils.clustering_algorithms.third_party": [[339, 0, 0, "-", "kmedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[340, 1, 1, "", "KMedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids": [[340, 2, 1, "", "__init__"], [340, 3, 1, "", "cluster_centers_"], [340, 2, 1, "", "fit"], [340, 2, 1, "", "fit_predict"], [340, 2, 1, "", "fit_transform"], [340, 2, 1, "", "get_metadata_routing"], [340, 2, 1, "", "get_params"], [340, 3, 1, "", "inertia_"], [340, 3, 1, "", "labels_"], [340, 3, 1, "", "medoid_indices_"], [340, 2, 1, "", "predict"], [340, 2, 1, "", "set_output"], [340, 2, 1, "", "set_params"], [340, 2, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit.params": [[340, 4, 1, "", "X"], [340, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict.params": [[340, 4, 1, "", "**kwargs"], [340, 4, 1, "", "X"], [340, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform.params": [[340, 4, 1, "", "**fit_params"], [340, 4, 1, "", "X"], [340, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params.params": [[340, 4, 1, "", "deep"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params": [[340, 4, 1, "", "init"], [340, 4, 1, "", "max_iter"], [340, 4, 1, "", "method"], [340, 4, 1, "", "metric"], [340, 4, 1, "", "n_clusters"], [340, 4, 1, "", "random_state"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict.params": [[340, 4, 1, "", "X"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output.params": [[340, 4, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params.params": [[340, 4, 1, "", "**params"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform.params": [[340, 4, 1, "", "-------"], [340, 4, 1, "", "Returns"], [340, 4, 1, "", "X"], [340, 4, 1, "", "X_new"]], "baybe.utils.conversion": [[342, 5, 1, "", "fraction_to_float"], [343, 5, 1, "", "nonstring_to_tuple"], [344, 5, 1, "", "to_string"]], "baybe.utils.conversion.fraction_to_float.params": [[342, 4, 1, "", "value"]], "baybe.utils.conversion.to_string.params": [[344, 4, 1, "", "*fields"], [344, 4, 1, "", "header"], [344, 4, 1, "", "single_line"]], "baybe.utils.dataframe": [[346, 5, 1, "", "add_fake_measurements"], [347, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [348, 5, 1, "", "add_parameter_noise"], [349, 5, 1, "", "arrays_to_dataframes"], [350, 5, 1, "", "create_fake_input"], [351, 5, 1, "", "df_drop_single_value_columns"], [352, 5, 1, "", "df_drop_string_columns"], [353, 5, 1, "", "df_uncorrelated_features"], [354, 5, 1, "", "filter_df"], [355, 5, 1, "", "fuzzy_row_match"], [356, 5, 1, "", "get_transform_objects"], [357, 5, 1, "", "handle_missing_values"], [358, 5, 1, "", "normalize_input_dtypes"], [359, 5, 1, "", "pretty_print_df"], [360, 5, 1, "", "to_tensor"], [361, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[346, 4, 1, "", "bad_intervals"], [346, 4, 1, "", "data"], [346, 4, 1, "", "good_intervals"], [346, 4, 1, "", "good_reference_values"], [346, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[347, 4, 1, "", "df"], [347, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[348, 4, 1, "", "data"], [348, 4, 1, "", "noise_level"], [348, 4, 1, "", "noise_type"], [348, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[349, 4, 1, "", "input_labels"], [349, 4, 1, "", "output_labels"], [349, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[350, 4, 1, "", "**kwargs"], [350, 4, 1, "", "n_rows"], [350, 4, 1, "", "parameters"], [350, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[351, 4, 1, "", "df"], [351, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[352, 4, 1, "", "df"], [352, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[353, 4, 1, "", "df"], [353, 4, 1, "", "exclude_list"], [353, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[354, 4, 1, "", "complement"], [354, 4, 1, "", "df"], [354, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[355, 4, 1, "", "left_df"], [355, 4, 1, "", "parameters"], [355, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[356, 4, 1, "", "allow_extra"], [356, 4, 1, "", "allow_missing"], [356, 4, 1, "", "df"], [356, 4, 1, "", "objects"]], "baybe.utils.dataframe.handle_missing_values.params": [[357, 4, 1, "", "columns"], [357, 4, 1, "", "data"], [357, 4, 1, "", "drop"]], "baybe.utils.dataframe.normalize_input_dtypes.params": [[358, 4, 1, "", "df"], [358, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[359, 4, 1, "", "df"], [359, 4, 1, "", "max_columns"], [359, 4, 1, "", "max_colwidth"], [359, 4, 1, "", "max_rows"], [359, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[360, 4, 1, "", "*x"]], "baybe.utils.interval": [[363, 7, 1, "", "InfiniteIntervalError"], [364, 1, 1, "", "Interval"], [365, 5, 1, "", "convert_bounds"], [366, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[363, 2, 1, "", "__init__"], [363, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[364, 2, 1, "", "__init__"], [364, 6, 1, "", "center"], [364, 2, 1, "", "contains"], [364, 2, 1, "", "create"], [364, 2, 1, "", "from_dict"], [364, 2, 1, "", "from_json"], [364, 6, 1, "", "is_bounded"], [364, 6, 1, "", "is_degenerate"], [364, 6, 1, "", "is_fully_unbounded"], [364, 6, 1, "", "is_half_bounded"], [364, 6, 1, "", "is_left_bounded"], [364, 6, 1, "", "is_right_bounded"], [364, 3, 1, "", "lower"], [364, 2, 1, "", "to_dict"], [364, 2, 1, "", "to_json"], [364, 2, 1, "", "to_ndarray"], [364, 2, 1, "", "to_tensor"], [364, 2, 1, "", "to_tuple"], [364, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[364, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[364, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[364, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[365, 4, 1, "", "bounds"]], "baybe.utils.memory": [[368, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[368, 4, 1, "", "num"]], "baybe.utils.metadata": [[370, 1, 1, "", "MeasurableMetadata"], [371, 1, 1, "", "Metadata"], [372, 5, 1, "", "to_metadata"]], "baybe.utils.metadata.MeasurableMetadata": [[370, 2, 1, "", "__init__"], [370, 3, 1, "", "description"], [370, 2, 1, "", "from_dict"], [370, 2, 1, "", "from_json"], [370, 6, 1, "", "is_empty"], [370, 3, 1, "", "misc"], [370, 2, 1, "", "to_dict"], [370, 2, 1, "", "to_json"], [370, 3, 1, "", "unit"]], "baybe.utils.metadata.MeasurableMetadata.from_dict.params": [[370, 4, 1, "", "dictionary"]], "baybe.utils.metadata.MeasurableMetadata.from_json.params": [[370, 4, 1, "", "string"]], "baybe.utils.metadata.Metadata": [[371, 2, 1, "", "__init__"], [371, 3, 1, "", "description"], [371, 2, 1, "", "from_dict"], [371, 2, 1, "", "from_json"], [371, 6, 1, "", "is_empty"], [371, 3, 1, "", "misc"], [371, 2, 1, "", "to_dict"], [371, 2, 1, "", "to_json"]], "baybe.utils.metadata.Metadata.from_dict.params": [[371, 4, 1, "", "dictionary"]], "baybe.utils.metadata.Metadata.from_json.params": [[371, 4, 1, "", "string"]], "baybe.utils.metadata.to_metadata.params": [[372, 4, 1, "", "cls"], [372, 4, 1, "", "value"]], "baybe.utils.numerical": [[374, 3, 1, "", "DTypeFloatNumpy"], [375, 3, 1, "", "DTypeFloatONNX"], [376, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [377, 5, 1, "", "closer_element"], [378, 5, 1, "", "closest_element"], [379, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[377, 4, 1, "", "target"], [377, 4, 1, "", "x"], [377, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[378, 4, 1, "", "array"], [378, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[379, 4, 1, "", "arr"], [379, 4, 1, "", "weights"]], "baybe.utils.random": [[381, 5, 1, "", "set_random_seed"], [382, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[381, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[382, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[384, 1, 1, "", "DiscreteSamplingMethod"], [385, 5, 1, "", "farthest_point_sampling"], [386, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[384, 3, 1, "", "FPS"], [384, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[385, 4, 1, "", "initialization"], [385, 4, 1, "", "n_samples"], [385, 4, 1, "", "points"], [385, 4, 1, "", "random_tie_break"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[386, 4, 1, "", "df"], [386, 4, 1, "", "method"], [386, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[388, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[388, 2, 1, "", "__init__"], [388, 2, 1, "", "fit"], [388, 3, 1, "", "mapping"], [388, 2, 1, "", "transform"]], "baybe.utils.torch": [[390, 8, 1, "", "DTypeFloatTorch"], [391, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[393, 5, 1, "", "finite_float"], [394, 5, 1, "", "non_inf_float"], [395, 5, 1, "", "non_nan_float"], [396, 5, 1, "", "validate_not_nan"], [397, 5, 1, "", "validate_parameter_input"], [398, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[397, 4, 1, "", "data"], [397, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [397, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[398, 4, 1, "", "data"], [398, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 196, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 322, 340, 360, 364, 370, 371, 399, 402, 409, 413, 416, 417, 420, 421, 423, 424, 425, 426, 427, 429, 434, 438, 439, 440, 443, 444, 445, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 464], "0": [8, 13, 16, 22, 31, 34, 44, 45, 51, 109, 144, 152, 155, 175, 183, 184, 185, 196, 219, 242, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 305, 306, 307, 310, 311, 331, 340, 347, 348, 353, 354, 375, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 426, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 443, 448, 449, 450, 451, 452, 456, 457, 459, 460, 461, 463, 466], "00": [433, 459], "000": [413, 435], "000000": 435, "0006306180000592576": 416, "001": [44, 347, 420, 452], "005": [401, 402, 403, 405, 406], "01": [175, 408, 409, 414, 417, 432, 433, 440], "02": 440, "020106": 433, "021": [276, 353], "023576": 431, "027900": 424, "03213": [276, 353], "032530": 424, "033686": 424, "034244": 424, "038710": 431, "05": 440, "057": [401, 402, 403, 405, 406, 416], "06": [219, 288, 420], "060723": 424, "062674": 433, "066585": 431, "067023": 424, "068963": 431, "08": 440, "082533": 428, "090321": 433, "095815": 424, "09653736976391157": 426, "0f": 417, "1": [13, 16, 26, 31, 44, 109, 126, 144, 155, 186, 196, 211, 242, 244, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 305, 306, 307, 310, 311, 321, 331, 340, 348, 350, 354, 375, 379, 385, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 426, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 443, 444, 448, 450, 451, 452, 456, 457, 459, 460, 461, 463, 466], "10": [13, 16, 196, 244, 276, 353, 400, 402, 411, 412, 413, 417, 420, 421, 423, 424, 426, 428, 429, 431, 435, 436, 437, 439, 440, 443, 450, 451, 453, 457, 461, 466], "100": [405, 411, 412, 413, 414, 417, 420, 421, 423, 424, 428, 429, 435, 440, 455, 456, 457, 461, 463, 466], "1000": [429, 461], "102": 432, "102010": 424, "1024": [149, 445, 457], "1038": [276, 353], "1039": 443, "105": [401, 402, 403, 405, 406, 416, 428, 459], "109": 432, "11": [316, 423, 424, 428, 444, 450], "111": [420, 435], "111111": 420, "1147": 413, "1148": 413, "1149": 413, "1150": 413, "118": 428, "119": 428, "119726": 424, "12": [423, 424, 428, 432, 433, 450, 451, 459], "120": [401, 402, 403, 405, 406, 411, 413, 416, 457], "120000": 432, "122": 435, "126": [411, 413, 414, 444], "1268824": [401, 402, 403], "127": 428, "128": 10, "129": 340, "13": [405, 406, 423, 424, 439, 446, 459], "131": 428, "133": 435, "1337": [417, 418, 466], "135": 340, "136626": 424, "137419": 431, "138345": 431, "139836": 431, "14": [423, 424, 433, 443, 459], "143777": 424, "14448993259018328": 426, "1454": 445, "149679": 428, "15": [244, 413, 423, 424, 439, 440, 443, 451, 459], "150": [411, 414, 452], "1500": 457, "151": 413, "153": [401, 402, 403, 405, 406, 416], "158332": 428, "16": [359, 375, 423, 424], "162": 421, "166": 435, "167": 428, "167282": 433, "169261": 428, "17": [423, 424], "173735": 424, "176": 432, "177": 435, "178619": 428, "18": [423, 424, 451], "180": 411, "187347": 424, "188": [421, 435], "19": 423, "190793": 424, "192": 413, "193992": 431, "1963": 340, "1991": 443, "1e": [219, 288, 420], "2": [8, 13, 16, 22, 109, 111, 126, 244, 310, 311, 321, 340, 346, 354, 379, 385, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 417, 418, 420, 421, 423, 424, 426, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 443, 448, 450, 451, 452, 455, 456, 457, 459, 460, 461, 463], "20": [13, 16, 155, 244, 400, 401, 402, 403, 417, 418, 420, 423, 424, 428, 436, 445, 457, 464, 466], "200": [402, 411, 413, 420, 421, 426, 435], "2000": [420, 443], "2004": 448, "2007": 464, "2009": 340, "2021": 402, "2022": 443, "2025": 443, "203700": 431, "21": [405, 423, 424, 428], "213601": 431, "217368": 424, "219942": 431, "22": [13, 16, 423, 428, 451], "220544": 431, "221": 445, "222": 435, "224792": 431, "225689": 424, "226731": 424, "227725": 431, "23": [423, 424, 451, 461], "230742": 424, "233627": 424, "24": [412, 423, 424, 459], "241": 457, "241315": 424, "244140": 433, "25": [417, 423, 424, 439, 459], "250": 449, "250128": 424, "26": [423, 424, 459], "266": 428, "267819": 424, "27": [423, 459], "276139": 406, "277": 428, "278": 428, "279": 428, "279417": 424, "28": 423, "280": 428, "286480": 424, "289171": 424, "29": [405, 423, 443], "293760": 431, "3": [244, 310, 311, 316, 321, 354, 359, 401, 402, 403, 406, 409, 411, 412, 413, 414, 416, 418, 421, 423, 424, 426, 428, 429, 431, 432, 433, 435, 436, 439, 440, 443, 444, 446, 448, 450, 451, 452, 455, 457, 459, 460, 461, 463, 464], "30": [400, 414, 418, 423, 457], "300": [340, 420], "3078f3": 445, "31": [423, 424], "311042": 431, "311716": 424, "314196": 428, "315166": 431, "32": [412, 423, 424, 432, 451, 457], "323": 405, "323973": 424, "33": [412, 423, 428, 436], "330856": 431, "333333": 435, "333582": 424, "3336": 340, "3341": 340, "34": [412, 451], "349054": 428, "35": [412, 423], "353": 421, "36": [340, 428], "362486": 424, "364231": 406, "366822": 428, "368176": 405, "369171": 424, "37": 424, "376050": 432, "38": 451, "39": 457, "391225": 431, "3d": 418, "4": [13, 16, 149, 310, 311, 340, 359, 408, 409, 411, 412, 413, 414, 418, 423, 424, 426, 428, 431, 432, 433, 443, 448, 450, 451, 452, 457, 459], "40": [423, 456, 457], "405677": 428, "407379": 428, "40x": 445, "415942": 431, "416413": 424, "419": 406, "419673": 424, "419703": 406, "42": [426, 429, 451], "431": 406, "437180": 424, "44": [424, 428], "440694": 431, "447": 411, "448": 411, "449": 411, "45": [423, 428, 463], "450": 411, "459623": 428, "460216": 424, "464495": 424, "468": 445, "473209": 424, "480417": 424, "486573": 431, "49": 428, "490951": 424, "493230": 431, "4x": 445, "5": [109, 155, 310, 311, 401, 403, 408, 411, 412, 413, 414, 417, 420, 421, 423, 424, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 443, 448, 449, 450, 451, 452, 457, 459, 461, 464, 466], "50": [414, 421, 423, 426, 439, 440, 448, 449, 457, 459, 463], "500": [418, 457], "505649": 424, "5066666666666667": 426, "51": 428, "511148": 424, "519512": 428, "52": 428, "529026": 433, "53": 428, "531229": 424, "5313": 327, "537854": 428, "54": [424, 443, 451], "544026": 424, "547993": 428, "55": [428, 463], "551905": 428, "56": [451, 461], "561497": 428, "569023": 424, "572771": 424, "588396": 431, "59": [435, 443, 451], "590": 402, "592230": 431, "595902": 424, "595998": 424, "6": [310, 311, 359, 401, 402, 403, 411, 412, 413, 414, 423, 424, 426, 428, 431, 433, 435, 448, 452, 459], "60": [428, 456], "600680": 431, "609863": 424, "612352": 428, "613039": 431, "613204": 428, "62": [426, 451], "621065": 428, "629843": 424, "63": 424, "637821": 428, "64": [196, 424, 428], "648338": 428, "648565": 424, "65": [406, 424, 426], "650155": 433, "653379": 431, "653939": 433, "66368270ffd51418ec58bd793f2d9b1b": 464, "664179": 424, "665567": 433, "666177": 428, "666452": 424, "666667": 435, "675006": 424, "68": 424, "69": [401, 402, 403, 433], "691976": 424, "7": [155, 310, 311, 353, 412, 414, 418, 423, 424, 428, 429, 431, 439, 448, 450, 451, 457, 459], "70": 423, "706667": 432, "709588": 424, "71": 457, "716524": 424, "716532": 424, "72": [428, 451], "73": 435, "730442": 432, "744888": 431, "745": 466, "746995": 424, "747012": 428, "75": [423, 428, 432, 459], "754392": 428, "760384": 428, "773685": 431, "777534": 428, "778": 435, "784793": 424, "785303": 424, "788826": 428, "789294": 428, "79": 443, "798851": 431, "7gz": 457, "7hf": 457, "8": [311, 340, 401, 403, 411, 413, 414, 423, 424, 426, 428, 431, 443, 448, 450, 452], "80": [424, 435, 452], "802608": 433, "803813": 433, "807997": 424, "81": 428, "811744": 431, "815816": 431, "817833": 424, "818735": 428, "82": 428, "826330": 428, "828932": 433, "83": 451, "835358": 424, "8389": 327, "839197": 424, "8417": 327, "848146": 424, "85": 428, "857": 413, "860969": 431, "861": 414, "862": 414, "862869": 424, "863": 414, "864": 414, "866250": 428, "867998": 424, "869930": 424, "87": [435, 451], "872161": 424, "874850": 424, "878412": 424, "88": 435, "883614": 405, "885454": 431, "8859": 420, "886995": 431, "888215": 428, "888889": 421, "889": 435, "889867": 424, "89": [402, 435], "890355": 428, "897634": 424, "898881": 424, "8jq": 457, "9": [13, 16, 406, 414, 418, 423, 424, 428, 431, 433, 448, 450, 451, 459, 460], "90": [401, 402, 403, 405, 406, 416, 435, 459], "901550": 431, "91": 451, "921889": 428, "924795": 424, "928198": 424, "929580": 424, "93": [428, 433], "930510": 431, "934299": 428, "945490": 424, "946025": 424, "95": [428, 433], "96": 402, "965627": 431, "971368": 424, "977216": 424, "982135": 428, "99": 428, "990159": 431, "999": 452, "A": [0, 13, 16, 26, 31, 38, 40, 41, 42, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 73, 75, 79, 81, 82, 83, 84, 87, 90, 92, 97, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 130, 132, 138, 141, 142, 144, 152, 155, 157, 158, 159, 168, 169, 170, 171, 172, 173, 174, 175, 178, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 220, 221, 236, 237, 242, 244, 246, 248, 251, 253, 255, 258, 260, 264, 266, 267, 274, 276, 278, 280, 282, 284, 295, 297, 303, 305, 306, 307, 310, 316, 319, 320, 321, 324, 334, 340, 346, 353, 354, 356, 357, 368, 370, 371, 379, 383, 385, 388, 400, 412, 421, 423, 424, 426, 428, 436, 437, 442, 444, 445, 446, 448, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464], "AND": [54, 413, 448, 452], "AS": [443, 448], "And": 420, "As": [401, 402, 403, 418, 426, 428, 439, 440, 443, 444, 445, 450, 451, 452, 455, 458, 459, 461, 465], "But": 463, "By": [97, 125, 158, 219, 330, 354, 424, 446, 450, 451, 453, 454, 456, 458, 459], "FOR": 448, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 165, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 218, 219, 242, 248, 251, 253, 255, 256, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 295, 297, 303, 326, 355, 361, 364, 370, 371, 385, 388, 401, 402, 403, 405, 406, 412, 416, 417, 418, 423, 424, 426, 428, 433, 439, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 466], "If": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 97, 101, 122, 125, 126, 130, 132, 134, 157, 158, 163, 164, 184, 185, 188, 194, 196, 207, 211, 213, 219, 225, 226, 242, 244, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 306, 311, 319, 320, 324, 326, 329, 331, 334, 340, 342, 344, 346, 347, 348, 350, 353, 354, 355, 356, 357, 372, 385, 386, 397, 398, 406, 408, 417, 423, 432, 433, 436, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 464, 466], "In": [31, 45, 57, 157, 196, 213, 240, 242, 324, 359, 401, 402, 403, 405, 417, 418, 420, 423, 424, 426, 428, 429, 432, 433, 436, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466], "It": [26, 178, 185, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 240, 259, 280, 340, 346, 401, 405, 406, 412, 421, 423, 426, 428, 433, 435, 436, 437, 439, 450, 451, 452, 453, 457, 458, 459, 461, 466], "Its": [244, 420], "No": [355, 401, 402, 417, 431, 442, 445], "Not": [340, 448, 452], "OF": [443, 448], "OR": [443, 448], "Of": [406, 415, 441, 460], "On": [340, 420, 426], "One": [146, 401, 403, 429, 443], "Or": 453, "Such": [406, 452, 455, 461], "That": [44, 213, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 306, 406, 411, 423, 446, 459, 461, 464], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 97, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 165, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 218, 219, 231, 232, 234, 236, 240, 242, 244, 246, 251, 253, 255, 256, 258, 260, 264, 267, 278, 280, 282, 284, 286, 288, 292, 295, 297, 300, 303, 305, 306, 307, 310, 311, 316, 319, 320, 321, 324, 326, 329, 330, 331, 334, 340, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 368, 370, 371, 372, 377, 378, 379, 381, 382, 385, 386, 397, 398, 401, 402, 403, 406, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 428, 432, 433, 437, 439, 440, 442, 444, 445, 446, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 462, 463, 465, 466], "Then": 418, "There": [86, 288, 375, 423, 431, 443, 444, 446, 450, 454, 459, 462], "These": [399, 402, 403, 404, 407, 410, 415, 419, 422, 425, 427, 430, 434, 438, 443, 446, 450, 452, 457, 459], "To": [401, 406, 417, 418, 424, 426, 429, 435, 439, 440, 443, 444, 446, 450, 451, 452, 453, 454, 456, 457, 461, 462], "Will": 449, "With": [346, 417, 418, 423, 426, 429, 439, 440, 443, 450, 452, 457, 460], "_": [134, 163, 164, 216, 222, 229, 408, 417, 418, 440], "__": [134, 340], "__class__": [416, 426], "__excepthook__": 444, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 218, 219, 251, 253, 255, 256, 258, 260, 264, 266, 267, 274, 276, 278, 280, 282, 284, 295, 297, 303, 313, 316, 340, 363, 364, 370, 371, 388, 459, 460], "__name__": [416, 426], "__new__": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 146, 147, 149, 363], "__str__": 445, "__version__": 445, "_amount": 423, "_ardregressionparam": 278, "_arraylik": 349, "_buffer": [13, 16, 126, 159, 305, 306, 307, 378, 379], "_c": 320, "_cumbest": 242, "_default_my_attribut": 446, "_discretelabellikeparamet": [141, 144, 155], "_expectedhypervolumeimprov": [13, 16], "_fit": 292, "_has_switch": 186, "_iterbest": 242, "_label": 423, "_measur": 242, "_n_last_measur": [183, 184, 185], "_nbase": 336, "_nestedsequ": [13, 16, 126, 159, 305, 306, 307, 378, 379], "_ngbregressorparam": 282, "_no_tl": 439, "_option": 445, "_posterior": 292, "_posterior_comp": 445, "_randomforestregressorparam": 284, "_step": [183, 184, 185], "_supportsarrai": [13, 16, 126, 159, 305, 306, 307, 378, 379], "_surrogategett": 258, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 211, 213, 219, 224, 232, 233, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 321, 322, 323, 343, 356, 358, 364, 370, 371], "_target": 445, "_tmetadata": 372, "_tparamet": 158, "_tsurrog": [287, 288], "_u": 321, "_validate_my_attribut": 446, "_was_us": [183, 184, 185], "a1": 311, "a2": 311, "ab": [414, 423], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 318, 325, 445, 465], "abc": [24, 34, 35, 36, 37, 38, 40, 104, 105, 106, 122, 138, 139, 167, 181, 191, 194, 199, 204, 253, 255, 295, 330], "abil": [449, 450, 454, 464], "abl": [418, 444, 450, 452, 457, 460, 466], "about": [8, 26, 31, 139, 155, 295, 401, 402, 403, 423, 432, 433, 443, 445, 446, 451, 455, 457, 459, 462], "abov": [288, 307, 330, 353, 400, 406, 413, 414, 416, 417, 424, 431, 443, 446, 448, 449, 450, 451, 452, 454, 457, 460, 461, 462, 464], "absenc": 456, "absolut": [44, 152, 348], "abstract": [24, 34, 35, 36, 37, 38, 40, 104, 105, 106, 122, 137, 138, 139, 167, 181, 191, 194, 199, 255, 295, 319, 320, 330, 445, 452, 464], "abstractli": 426, "acceler": [443, 445, 447, 464], "accept": [31, 184, 251, 253, 255, 260, 264, 278, 280, 282, 284, 349, 417, 418, 445, 448, 453, 456, 457, 461, 463], "access": [211, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 401, 402, 403, 411, 416, 440, 445, 450, 452, 457, 460], "accord": [44, 179, 424, 449, 452, 458, 466], "accordingli": [196, 451, 454, 456, 460], "account": 450, "accumul": [169, 426, 464], "accur": [340, 451], "acet": [401, 402, 403, 405, 406], "aceton": 423, "achiev": [21, 219, 418, 423, 426, 429, 443, 446, 449, 451, 452, 454, 462], "ack": 443, "acq_funct": 406, "acq_valu": 451, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 417, 418, 426], "acqf1": 460, "acqf2": 460, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 70, 82, 194, 196, 411, 412, 413, 414, 417, 418, 426, 428, 435, 443, 445, 449, 456, 458, 460, 462, 465], "acquisition_funct": [31, 194, 196, 406, 417, 418, 426, 436, 437, 445], "acquisition_function_cl": 445, "acquisition_valu": [31, 194, 196, 417, 418, 445, 451], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 31, 194, 196, 426, 445, 460], "across": [423, 426, 439, 450, 458, 464], "act": [423, 445, 448, 452, 461], "action": [21, 416, 426, 442, 445, 465], "activ": [15, 34, 157, 186, 196, 417, 418, 426, 443, 444, 445, 446, 452, 453, 454, 455, 458, 464, 465, 466], "activate_paramet": 445, "active_dim": [104, 105, 106, 109, 111, 113, 114, 115], "active_valu": [138, 141, 142, 144, 152, 155, 439, 440, 445, 454, 457, 464], "actual": [184, 213, 240, 432, 445, 455, 459, 461, 464, 466], "ad": [31, 219, 310, 340, 346, 385, 423, 424, 442, 446, 449, 454, 462, 463, 465], "adapt": [185, 276, 331, 353], "add": [31, 234, 244, 346, 347, 406, 420, 421, 423, 428, 439, 443, 448, 450, 451, 452, 455, 459, 464, 466], "add_collection3d": 418, "add_fake_measur": [350, 405, 406, 411, 412, 413, 414, 420, 421, 428, 445, 450, 461, 466], "add_fake_result": 445, "add_measur": [31, 350, 405, 406, 408, 409, 411, 412, 413, 414, 418, 420, 421, 426, 428, 429, 432, 433, 443, 445, 450, 451, 454], "add_noise_to_perturb_degenerate_row": 445, "add_parameter_nois": [350, 445, 466], "add_subplot": 418, "addendum": 448, "addit": [31, 97, 122, 125, 130, 132, 184, 196, 213, 234, 242, 244, 246, 340, 348, 350, 370, 371, 401, 402, 403, 424, 432, 440, 443, 445, 447, 448, 451, 452, 453, 455, 456, 457, 459, 460, 461, 464, 466], "addition": [416, 424, 443, 455], "additiveexplain": [95, 98], "additivekernel": 445, "address": 461, "adher": [445, 446], "adjust": [157, 185, 402, 406, 432, 445, 454, 456], "administ": 465, "adopt": 406, "adrian": [443, 447], "advanc": [185, 426, 444, 445, 453, 456, 460, 464, 465], "advantag": [423, 446], "advic": 446, "advis": [448, 461], "affect": [31, 53, 63, 65, 196, 211, 310, 416, 435, 442, 444, 452], "affected_paramet": [53, 411, 412, 413, 414, 423, 452], "affili": 443, "afford": 451, "aforement": [213, 453], "after": [186, 326, 405, 406, 411, 412, 413, 414, 418, 428, 435, 443, 451, 455, 456, 457, 460, 465], "afterward": 460, "again": [417, 450, 451, 452, 464], "against": [91, 324, 423, 448, 454, 464], "agent": 424, "aggreg": 456, "agraw": 447, "agre": [443, 448, 455], "agreement": 448, "ai": [102, 165, 375], "aim": [450, 451, 455], "akin": 450, "al": [402, 443, 457], "aldrich": 447, "alex": 447, "alexand": [443, 447], "algorithm": [189, 196, 340, 346, 383, 385, 400, 423, 428, 443, 445, 450, 455, 458], "alia": [154, 254, 457], "alias": 445, "align": [157, 211, 326, 417, 459, 464], "all": [23, 24, 33, 35, 40, 44, 53, 55, 61, 63, 97, 103, 104, 105, 106, 121, 122, 125, 136, 139, 144, 148, 155, 166, 167, 177, 180, 181, 184, 190, 191, 193, 196, 198, 199, 211, 213, 220, 221, 244, 251, 252, 255, 294, 295, 310, 323, 324, 340, 346, 358, 401, 402, 403, 406, 408, 409, 411, 412, 416, 417, 418, 423, 424, 426, 428, 431, 432, 439, 440, 443, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466], "allclos": [408, 409, 424], "alleg": 448, "allow": [21, 31, 34, 44, 51, 55, 122, 125, 130, 132, 152, 158, 185, 213, 219, 246, 278, 284, 290, 329, 355, 356, 397, 398, 401, 402, 403, 406, 423, 424, 439, 440, 443, 445, 449, 451, 452, 454, 456, 458, 459, 460, 461, 462, 463, 466], "allow_": [445, 454], "allow_extra": [122, 125, 130, 132, 211, 213, 219, 224, 356, 361, 428, 445], "allow_miss": [122, 125, 130, 132, 211, 213, 219, 224, 356, 361, 445], "allow_recommending_already_measur": [31, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 426, 436, 437, 442, 445, 451], "allow_recommending_already_recommend": [31, 418, 426, 436, 437, 442, 445, 451], "allow_recommending_pending_experi": [31, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 445, 451], "allow_repeated_recommend": [188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 445], "almost": 402, "alon": [445, 448], "along": [379, 448, 457, 464], "alongsid": 448, "alpha": [169, 418, 429], "alpha_1": 420, "alpha_2": 420, "alpha_init": 420, "alphabet": [160, 445], "alreadi": [31, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 423, 433, 443, 445, 449, 450, 451, 454, 459, 461, 462, 464, 466], "also": [31, 44, 57, 97, 158, 251, 253, 255, 260, 264, 278, 280, 282, 284, 324, 326, 346, 347, 348, 401, 408, 409, 417, 418, 420, 421, 423, 428, 429, 432, 433, 435, 439, 440, 443, 445, 446, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466], "alter": [423, 445, 451, 454], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 288, 340, 379, 416, 423, 424, 431, 443, 445, 453, 454, 462, 465, 466], "although": [423, 433, 436, 459, 461], "alwai": [15, 31, 40, 229, 230, 385, 420, 423, 424, 446, 449, 451, 452, 461, 462, 464, 466], "ambigu": [152, 314, 315, 459], "amend": 452, "among": [34, 423, 443, 456, 464], "amount": [311, 386, 424, 439, 440, 450, 452, 455, 457, 466], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 70, 71, 72, 74, 76, 77, 78, 82, 88, 91, 92, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 232, 234, 236, 240, 242, 244, 246, 251, 253, 255, 258, 260, 261, 264, 267, 278, 280, 282, 284, 286, 287, 290, 295, 297, 303, 310, 314, 315, 322, 324, 326, 329, 335, 340, 343, 344, 353, 354, 355, 357, 359, 363, 364, 365, 370, 371, 378, 386, 401, 403, 404, 406, 413, 414, 416, 417, 420, 421, 424, 428, 431, 435, 436, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464], "analog": [213, 346, 452, 459, 460], "analogi": [179, 458], "analys": 465, "analysi": [443, 455, 462], "analyt": [3, 4, 7, 8, 82, 450, 461, 464], "analyz": [443, 446, 455], "angl": 418, "ani": [13, 16, 64, 65, 88, 97, 126, 137, 138, 139, 141, 142, 144, 155, 158, 159, 162, 163, 164, 229, 230, 234, 238, 239, 246, 305, 306, 307, 310, 323, 324, 326, 327, 329, 330, 344, 350, 355, 357, 364, 366, 370, 371, 372, 378, 379, 393, 394, 395, 396, 398, 416, 423, 439, 440, 442, 443, 444, 445, 446, 448, 450, 451, 453, 454, 457, 460, 461, 464], "annot": [326, 416, 448], "anoth": [53, 365, 402, 412, 413, 420, 421, 423, 433, 446, 452, 464], "ansatz": 445, "answer": 451, "anti": 354, "anymor": [445, 464], "anyth": 331, "anywai": 462, "anywher": 408, "apach": [443, 448], "apart": [446, 451], "api": [340, 443, 444, 445, 447, 460, 465], "aplei": 455, "appar": 460, "appdata": 444, "appear": [324, 444, 445, 448, 460], "append": [418, 440], "appendix": 448, "appli": [31, 40, 41, 42, 57, 196, 213, 240, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 324, 335, 348, 350, 388, 406, 407, 410, 411, 413, 414, 416, 417, 423, 439, 444, 445, 448, 452, 455, 456, 458, 459, 460, 461, 462, 463, 464], "applic": [340, 344, 443, 446, 448, 457, 458, 461], "approach": [219, 417, 426, 443, 446, 449, 451, 454, 456, 458, 460, 462, 464], "appropri": [47, 48, 219, 426, 446, 448, 454, 459], "approxim": [10, 21, 452, 455], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 69, 80, 84, 85, 86, 97, 122, 125, 126, 130, 132, 138, 141, 142, 144, 152, 155, 157, 158, 159, 164, 178, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 242, 244, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 307, 310, 311, 319, 320, 321, 323, 324, 326, 330, 331, 340, 346, 347, 349, 350, 351, 355, 356, 358, 385, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 421, 423, 424, 426, 428, 431, 432, 435, 436, 439, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466], "arang": [408, 418, 457], "arbitrari": [185, 213, 366, 445, 452, 457, 458, 461, 464, 466], "arbitrarili": [456, 460], "architectur": [251, 253, 255, 260, 264, 278, 280, 282, 284, 292, 445, 462, 464], "ard_num_dim": [104, 105, 106, 109, 111, 113, 114, 115], "ardregress": 278, "area": 418, "arg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 108, 110, 112, 117, 118, 119, 167, 169, 170, 171, 172, 173, 174, 175, 178, 256, 261, 266, 363, 446], "argu": 423, "argument": [31, 71, 92, 97, 102, 155, 158, 165, 181, 183, 184, 185, 186, 194, 196, 211, 219, 246, 256, 258, 326, 340, 350, 354, 406, 421, 428, 445, 452, 455, 457, 458, 459, 460, 461, 464], "aris": [56, 423, 445, 446, 448, 452, 460, 466], "arithmet": [128, 456], "arizona": 447, "arm": [250, 251, 441, 447], "arm_index": 426, "around": [13, 16, 44, 203, 246, 248, 428, 445, 458, 460, 466], "arr": [305, 306, 307, 379, 429], "arrai": [13, 16, 126, 159, 305, 306, 307, 313, 340, 349, 360, 374, 378, 379, 385, 418, 445, 458, 462], "arrays_to_datafram": [408, 409, 418, 429, 432, 433, 439, 440, 445, 461], "arriv": [443, 454], "articl": 443, "artifici": 466, "aryl": [401, 402, 403, 405, 443, 457], "asarrai": 340, "ascend": 428, "ask": [423, 443, 445, 446, 451, 454], "aspect": [404, 408, 409, 433, 450, 453], "aspir": 465, "assembl": [423, 460, 462], "assembli": [462, 465], "assert": [65, 134, 355, 411, 412, 413, 414, 420, 421, 423, 424, 431, 435, 445, 448, 451, 452, 460, 462], "assess": [445, 455, 461], "assign": [346, 417, 424, 431, 457], "associ": [213, 426, 445, 448, 451, 456, 464], "assum": [26, 45, 259, 326, 355, 356, 401, 402, 403, 406, 408, 409, 411, 412, 413, 414, 420, 421, 423, 426, 428, 432, 433, 435, 443, 448, 450, 452, 454, 457, 460, 462, 463, 466], "assumpt": 461, "assur": 452, "asymmetr": 44, "asynchron": [443, 451, 465], "atol": [408, 409], "atompair": 149, "atompairfingerprint": 149, "attach": [26, 326, 416, 417, 418, 448], "attempt": [81, 88, 259, 426, 444, 445, 450, 452, 455, 456, 458], "attent": 186, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 218, 219, 251, 253, 255, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 290, 295, 297, 303, 324, 327, 364, 370, 371, 388, 396, 445], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 91, 94, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 149, 151, 152, 153, 155, 158, 162, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 206, 207, 208, 211, 213, 214, 218, 219, 228, 232, 234, 251, 252, 253, 255, 258, 260, 264, 267, 271, 274, 276, 278, 280, 282, 284, 289, 292, 295, 296, 297, 300, 301, 303, 312, 315, 324, 343, 356, 364, 370, 371, 373, 384, 388, 389, 392, 393, 394, 395, 396, 431, 445, 446, 448, 452, 458, 460, 462, 463], "audit": [445, 446], "augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 213, 286, 287, 288, 445, 451], "author": [443, 448], "authorship": 448, "auto": [12, 13, 14, 16, 17, 445, 447], "auto_tutori": 375, "autocorr": 149, "autocorrfingerprint": 149, "autodoc": 445, "automat": [31, 196, 264, 400, 418, 432, 444, 445, 446, 452, 455, 456, 458, 459, 462, 464, 465], "avail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 75, 83, 128, 144, 146, 147, 149, 155, 184, 185, 242, 244, 271, 300, 301, 384, 385, 386, 403, 405, 408, 409, 423, 428, 432, 433, 443, 444, 445, 446, 448, 450, 451, 453, 455, 457, 458, 459, 460, 461, 464, 465], "available_acq_funct": 406, "avalon": 149, "avalonfingerprint": 149, "averag": [280, 417, 418, 440, 457, 461], "avoid": [213, 327, 379, 445, 446, 450, 451, 457, 459], "awai": [13, 16, 157, 463], "awar": [423, 439, 440, 445, 446, 449, 454, 460], "ax": [97, 400, 402, 417, 418, 429, 439, 440], "axes3d": 418, "axi": [211, 242, 379, 400, 408, 409, 414, 417, 418, 423, 424, 426, 428, 429, 432, 433, 439, 440, 459], "ayesian": 443, "azim": 418, "azur": 445, "b": [44, 56, 175, 276, 310, 321, 353, 354, 402, 412, 421, 426, 436, 437, 442, 443, 446, 448, 451, 454, 457, 460], "b1": 311, "b2": 311, "back": [0, 435, 442, 445, 446, 454], "background": [97, 101, 445, 450, 455], "background_data": 97, "backport": 444, "backtest": [240, 241, 247, 403, 438, 441, 443, 445, 458, 461], "backtick": 446, "backward": 445, "bad": [428, 451, 453, 463], "bad_interv": 346, "badg": 445, "bai": 443, "baird": 447, "balanc": [125, 426, 443], "banana": 446, "bandit": [251, 406, 441, 443, 445, 447], "banner": 445, "bar": [97, 99, 420, 421, 423, 435, 436, 437, 443, 445, 455, 462], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 182, 183, 184, 185, 186, 188, 191, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 218, 219, 232, 234, 236, 251, 253, 255, 256, 258, 259, 260, 264, 266, 267, 271, 274, 276, 278, 280, 282, 284, 288, 290, 295, 297, 300, 301, 303, 313, 315, 316, 318, 319, 320, 340, 349, 354, 364, 370, 371, 384, 385, 388, 400, 405, 406, 417, 418, 420, 422, 426, 441, 443, 445, 448, 449, 451, 452, 453, 455, 457, 458, 459, 460, 462], "base1": 424, "base2": 424, "base_data": 417, "base_kernel": [117, 118, 119], "base_nam": [400, 402, 417, 418, 439, 440], "base_predictor": 286, "base_smil": 417, "baseestim": 340, "basefingerprinttransform": 334, "baselin": [400, 402, 439, 443, 457], "basesequentialmetarecommend": [184, 185], "bashrc": 453, "basi": [113, 443, 448, 450, 455], "basic": [104, 108, 109, 110, 111, 112, 113, 114, 115, 169, 170, 171, 172, 173, 174, 175, 242, 313, 315, 316, 371, 401, 402, 403, 406, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 428, 432, 433, 434, 435, 438, 441, 445, 446, 454, 456, 457, 461, 465], "basic_transfer_learn": 440, "basickernel": [108, 109, 110, 111, 112, 113, 114, 115, 445], "batch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 178, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 245, 286, 287, 406, 411, 412, 413, 414, 418, 428, 432, 433, 435, 439, 440, 445, 450, 454, 458, 461], "batch_quant": 445, "batch_shap": [104, 105, 106, 109, 111, 113, 114, 115], "batch_siz": [31, 44, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 242, 246, 248, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 420, 421, 424, 426, 428, 429, 432, 433, 435, 436, 439, 440, 443, 445, 450, 451, 454, 461], "batchnr": 428, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 206, 207, 208, 211, 213, 214, 218, 219, 236, 251, 253, 255, 256, 258, 260, 264, 266, 267, 271, 274, 276, 278, 280, 282, 284, 295, 297, 300, 301, 303, 313, 315, 316, 340, 364, 370, 371, 384, 388, 399, 400, 401, 402, 403, 404, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "baybe_2025": 443, "baybe_cach": 453, "baybe_cache_dir": [445, 453], "baybe_deactivate_polar": [445, 453], "baybe_debug_fake_hosthash": 445, "baybe_debug_fake_userhash": 445, "baybe_numpy_use_single_precis": [376, 445, 453], "baybe_parallel_simulation_run": [246, 453], "baybe_telemetry_endpoint": 445, "baybe_telemetry_host": 445, "baybe_telemetry_hostnam": 445, "baybe_telemetry_usernam": 445, "baybe_telemetry_vpn_check": 445, "baybe_telemetry_vpn_check_timeout": 445, "baybe_torch_use_single_precis": [391, 445, 453], "baybe_use_fpsampl": [207, 445, 453], "bayesian": [0, 188, 194, 196, 240, 242, 246, 248, 259, 278, 426, 445, 449, 451, 455, 462, 465], "bayesian_recommend": 418, "bayesianlinearmodel": 421, "bayesianlinearsurrog": [406, 445, 462], "bayesianrecommend": [188, 196, 259, 445, 458], "bayesianridg": 420, "bcut2d": [149, 445], "bcut2dfingerprint": 149, "bcw07": 464, "becaus": [44, 86, 152, 157, 213, 219, 248, 330, 416, 417, 423, 440, 446, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 464], "becom": [213, 423, 445, 449, 451, 452, 460, 463, 466], "been": [26, 31, 81, 82, 184, 251, 253, 255, 260, 264, 278, 280, 282, 284, 355, 401, 402, 443, 444, 445, 448, 450, 451, 456, 458, 464], "beeswarm": [97, 99, 455], "befor": [81, 186, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 326, 400, 403, 406, 412, 417, 443, 445, 446, 453, 454, 457, 459], "begin": [184, 411, 413, 431, 435, 458, 462], "behalf": 448, "behav": [418, 435, 460], "behavior": [157, 196, 443, 445, 456, 458, 459, 464], "behind": [456, 460, 461, 462, 463], "being": [13, 16, 119, 346, 426, 444, 445, 452, 457, 459], "bell": [301, 305, 428, 463], "belong": [340, 416, 460], "below": [186, 288, 307, 413, 416, 417, 423, 446, 448, 449, 451, 452, 456, 460, 462, 463, 464, 465], "benchmark": [401, 402, 417, 443, 445, 447], "benefici": [448, 449, 453], "benefit": [452, 464], "benzo": 464, "bernoulli": [251, 425, 441, 447], "besid": [443, 456, 463], "best": [12, 13, 14, 16, 17, 242, 244, 246, 403, 426, 443, 453, 458], "bet": 451, "beta": [8, 22, 169, 251, 406, 445, 449], "betabernoullimultiarmedbanditsurrog": [406, 426, 445], "betaprior": [251, 445], "better": [10, 346, 402, 445, 451, 452, 454, 456, 457], "between": [13, 16, 34, 53, 152, 185, 211, 219, 274, 354, 416, 418, 423, 426, 428, 429, 433, 439, 440, 443, 445, 446, 450, 451, 452, 453, 456, 457, 458, 459, 460, 463, 464], "beyond": [157, 443, 455], "bias": 457, "bin": 423, "binar": 445, "binari": [297, 398, 435, 443, 444, 445, 460], "binarytarget": [298, 426, 445], "bind": [416, 418, 448], "bit": [445, 457], "black": [240, 461, 464], "blackbox": [399, 400, 441], "blank": 446, "blob": 276, "block": [417, 423, 444, 445, 460], "blue": 429, "boacquisitionfunct": [194, 196], "bodi": 416, "bonilla": 464, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 97, 100, 101, 122, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 224, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 297, 298, 305, 306, 307, 319, 320, 324, 325, 330, 331, 340, 344, 349, 354, 356, 357, 361, 364, 370, 371, 378, 379, 385, 397, 426], "boolean": [13, 16, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 101, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 181, 183, 184, 185, 186, 356, 445, 451, 453], "boost": [282, 440], "both": [10, 13, 16, 157, 158, 219, 248, 307, 326, 400, 412, 417, 420, 423, 424, 426, 428, 429, 439, 440, 443, 445, 446, 449, 451, 452, 455, 457, 459, 460, 462, 463, 465, 466], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 188, 196, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 408, 409, 418, 433, 439, 440, 445, 453, 458], "botorch_acqf": 26, "botorch_function_wrapp": 445, "botorchrecommend": [188, 406, 411, 412, 413, 414, 417, 418, 420, 421, 426, 428, 433, 435, 436, 437, 443, 445, 450, 451, 452, 454, 458], "bottom": 451, "bound": [8, 22, 34, 44, 151, 157, 158, 175, 211, 213, 219, 224, 287, 288, 303, 304, 320, 326, 356, 358, 364, 365, 372, 385, 400, 406, 408, 409, 418, 424, 428, 429, 431, 432, 433, 439, 440, 445, 457, 460, 463, 465, 466], "boundari": [44, 219, 305, 306, 428], "boundary_onli": [219, 423], "bounded": 445, "bounds_transform_func": 445, "box": [175, 240, 461, 464], "brain": [461, 464], "branch": [443, 446], "brandenburg": 443, "break": [259, 460, 465], "brettpho": [401, 402, 403, 405, 406], "briefli": [461, 464], "bring": [443, 445], "bro": 276, "broad": 460, "broadcast": 159, "brute": [196, 458], "bu": [401, 402, 403, 405, 406], "bucket": 423, "budget": 451, "bug": [445, 446], "build": [211, 219, 259, 340, 417, 423, 444, 445, 446, 452, 455, 460, 462, 464, 465, 466], "built": [219, 420, 443, 446, 451, 458, 462], "builtin": 316, "bump": 445, "button": 445, "butyl": [401, 402, 403, 405, 406], "butylphenylphosphin": [401, 402, 403, 405, 406], "butyornitril": [401, 402, 403, 405, 406], "bypass": [158, 417, 453, 462], "byte": [13, 16, 126, 159, 218, 260, 305, 306, 307, 368, 378, 379, 445, 466], "c": [56, 310, 321, 340, 401, 402, 403, 405, 406, 411, 412, 413, 414, 421, 423, 436, 437, 443, 444, 448, 451, 454, 457, 459, 460], "c1": [401, 402, 403, 405, 406, 411, 412, 413, 414, 457], "c1c2": [401, 402, 403, 405, 406], "c1ccccc1": [401, 402, 403, 411, 413], "c1ccoc1": 452, "c2": [401, 402, 403, 405, 406, 411, 413, 414], "c2ccccc2": [401, 402, 403], "c2oc": [401, 402, 403, 405, 406], "c2p": [401, 402, 403, 405, 406], "c3": [401, 402, 403, 405, 406, 411, 413], "c3c": [401, 402, 403], "c3ccccc3": [401, 402, 403, 405, 406], "c4": [401, 402, 403, 411, 413], "c4ccccc4": [401, 402, 403, 405, 406], "c5": [411, 413], "c6": [411, 413], "c_": 429, "c_g2_min": 424, "c_g3_max": 424, "c_i": 452, "c_total_sum": 424, "cach": [31, 445, 460, 465], "calcul": [31, 340, 379, 408, 418, 439, 451, 453, 455, 457, 459], "calibr": 464, "call": [45, 92, 181, 183, 184, 185, 186, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 326, 349, 401, 402, 403, 416, 421, 423, 424, 436, 437, 443, 444, 445, 449, 451, 452, 453, 457, 460, 461, 462, 464, 465], "callabl": [52, 71, 91, 158, 232, 240, 242, 244, 246, 248, 286, 287, 290, 292, 316, 322, 324, 326, 340, 349, 400, 416, 429, 445, 465], "callable_": 324, "campaign": [97, 242, 245, 246, 248, 346, 348, 350, 404, 405, 413, 415, 418, 426, 437, 439, 440, 441, 442, 443, 445, 449, 450, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466], "campaign1": 461, "campaign2": 461, "campaign_json": 451, "campaign_oh": 402, "campaign_par": 429, "campaign_rand": [401, 402, 403], "campaign_recr": 435, "campaign_stop": 417, "campaign_with_hook": 417, "campaign_y0": 429, "campaign_y1": 429, "campaignstoppedexcept": 417, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 56, 97, 138, 144, 152, 155, 159, 178, 185, 188, 189, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 240, 244, 251, 253, 255, 256, 258, 259, 260, 264, 278, 280, 282, 284, 288, 298, 324, 326, 330, 340, 346, 348, 349, 375, 400, 401, 402, 403, 406, 407, 410, 411, 412, 413, 416, 417, 418, 420, 421, 423, 424, 426, 428, 429, 431, 432, 433, 436, 439, 440, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "canada": 447, "candid": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 194, 196, 204, 207, 211, 219, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 385, 417, 418, 440, 445, 449, 452, 458, 459, 465], "cannot": [15, 90, 91, 157, 259, 260, 288, 331, 426, 445, 448, 450, 452, 453, 457, 458, 460, 462, 464], "canon": [333, 460], "capabl": [399, 425, 427, 434, 438, 440, 445, 447, 451, 456, 462, 464], "captur": 457, "cardin": [34, 44, 51, 61, 63, 64, 65, 80, 196, 211, 443, 445, 447, 452], "cardinalityconstraint": [44, 51, 445], "care": [49, 423, 446, 452, 455, 456, 462], "carefulli": 453, "carlo": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 82, 246, 400, 402, 403, 417, 426, 439, 440, 445, 450, 461], "carri": [326, 416, 448, 456], "cartesian": [213, 219, 220, 221, 443, 445, 454, 459], "case": [157, 185, 248, 288, 326, 340, 346, 359, 417, 422, 423, 432, 433, 436, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 457, 460, 461, 462, 463, 464, 466], "cast": [45, 445], "cat": 354, "cat_1": 428, "cat_1_22": 428, "cat_1_33": 428, "cat_2": 428, "catch": 420, "catch_constant_target": 445, "categor": [31, 141, 142, 146, 219, 226, 355, 443, 445, 457, 459, 463], "categori": [402, 417, 443, 445, 460, 463], "categorical_1": [428, 451], "categorical_2": [428, 451], "categorical_paramet": 460, "categorical_parameter_json": 460, "categorical_parameter_reconstruct": 460, "categoricalencod": [141, 142, 411, 412, 413, 414, 428, 435], "categoricalparamet": [142, 219, 402, 411, 412, 413, 414, 421, 426, 428, 435, 436, 437, 443, 445, 454, 455, 459, 460, 465], "cattr": [231, 232, 234, 291, 437, 444, 445, 446], "cauchi": 171, "caus": [152, 310, 316, 445, 448], "caution": 464, "cc": [401, 402, 403, 405, 406, 411, 413, 414, 423, 457, 464], "cc1": [401, 402, 403, 405, 406, 457], "ccc": [411, 413, 421, 443], "cccc": [401, 402, 403, 405, 406, 411, 413], "ccccc": [411, 413, 436, 437], "cccccc": [411, 413], "cccccccco": [452, 457], "ccccoc": [401, 402, 403, 405, 406], "cco": 423, "ccoccoccn": [436, 437], "cdot": [452, 456], "ceil": 417, "cell": [420, 457, 461, 464], "cell_lin": 464, "center": [305, 307, 340, 364, 428, 429, 451], "center_y0": 429, "center_y1": 429, "central": [445, 451, 465], "certain": [31, 53, 91, 186, 232, 234, 240, 323, 346, 412, 417, 426, 443, 445, 446, 452, 454, 455, 458, 460, 464, 466], "cesium": [401, 402, 403, 405, 406], "chai": 464, "chain": [38, 181, 183, 184, 185, 186, 316, 452], "challeng": [446, 460], "chanc": 444, "chang": [53, 184, 346, 347, 348, 406, 423, 432, 443, 444, 446, 448, 451, 453, 455, 457, 459, 464, 465], "changelog": 465, "charact": 448, "characterist": 316, "charg": 448, "chebyshev": 12, "check": [31, 61, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 323, 325, 328, 329, 330, 331, 340, 355, 357, 358, 364, 370, 371, 377, 432, 433, 435, 443, 445, 446, 455, 459, 460], "check_maximum": 61, "check_minimum": 61, "checker": 445, "checkout": 446, "chem": [443, 445, 457], "chemic": [335, 402, 405, 423, 445, 447, 452, 455, 457, 464], "cheminformat": [155, 443, 445], "chemistri": [144, 411, 413, 414], "child": [201, 202, 203, 204, 446], "chocol": 446, "choic": [242, 244, 385, 416, 423, 426, 433, 445, 452, 454, 456, 457, 458, 459, 460, 463], "choos": [179, 423, 424, 426, 428, 431, 432, 433, 442, 443, 448, 449, 451, 458, 462, 463], "chose": [432, 460], "chosen": [78, 188, 242, 244, 248, 381, 382, 385, 406, 426, 445, 449, 452, 457, 459], "christoph": 464, "chung": 447, "ci": [409, 439, 440, 445, 446], "circular": 457, "circumv": [444, 460], "cite": 443, "cl": [49, 229, 233, 288, 319, 320, 325, 330, 366, 372], "claim": 448, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 90, 94, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 232, 234, 235, 236, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 288, 292, 294, 295, 296, 297, 299, 300, 301, 302, 303, 312, 313, 315, 316, 318, 319, 320, 325, 330, 334, 339, 340, 344, 362, 364, 369, 370, 371, 383, 384, 387, 388, 406, 416, 417, 420, 426, 436, 445, 451, 452, 455, 456, 457, 458, 459, 460, 462], "classic": [426, 456], "classifi": 457, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 316, 364, 370, 371, 445], "classvalidationerror": [437, 444], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 251, 253, 255, 260, 264, 278, 280, 282, 284], "clean": [351, 352, 353, 444, 445, 446], "clear": [375, 464], "click": [426, 457], "clipboard": 420, "clone": 446, "close": [242, 248, 300, 400, 417, 439, 440, 461], "closer": [13, 16, 377, 457], "closest": [340, 378, 420], "closest_el": 445, "closur": [240, 461], "cluster": [201, 202, 203, 204, 337, 338, 339, 340, 406, 445, 447, 465], "cluster_centers_": 340, "clustering_algorithm": 340, "clustering_x": 445, "clustermixin": 340, "cmap": 418, "cn": [401, 402, 403, 405, 406], "co": 423, "co1": [401, 402, 403], "co2": [401, 402, 403], "co3": [401, 402, 403], "coars": [421, 435, 436, 437, 443], "coc": [421, 436, 437, 443], "cococ": [436, 437], "code": [259, 402, 421, 426, 432, 436, 437, 443, 444, 445, 448, 452, 453, 457, 461, 464, 465, 466], "coeffici": [45, 47, 48, 408, 409, 424, 452], "coerc": 445, "collect": [31, 63, 64, 65, 107, 117, 118, 134, 158, 160, 168, 184, 186, 211, 219, 225, 226, 237, 244, 258, 308, 310, 312, 323, 324, 337, 338, 356, 357, 383, 385, 400, 406, 418, 423, 426, 429, 439, 440, 445, 451], "color": [418, 420, 429], "column": [40, 41, 42, 97, 122, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 242, 244, 246, 248, 310, 311, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 388, 397, 398, 402, 405, 411, 412, 413, 414, 417, 423, 428, 429, 435, 439, 440, 445, 451, 459, 460, 461], "column_group": 311, "com": [276, 327, 353, 443, 445], "comb": 423, "combin": [44, 54, 158, 196, 211, 213, 219, 220, 221, 316, 335, 401, 402, 403, 411, 413, 416, 417, 423, 428, 443, 444, 448, 452, 454, 455, 456, 457, 458, 459, 461, 464, 466], "combinatori": [196, 466], "combo_runn": 246, "come": [13, 16, 426, 443, 451, 452, 455, 460, 464, 466], "command": 444, "comment": 445, "commerci": 448, "commit": [443, 445, 446], "common": [168, 420, 424, 445, 446, 448, 450, 451, 452, 457, 460], "commonli": [456, 465], "commun": [448, 456, 464], "comp_df": [138, 141, 142, 144, 152, 155, 445], "comp_rep": [219, 420, 445, 459], "comp_rep_bound": [211, 213, 219, 445], "comp_rep_byt": [218, 466], "comp_rep_column": [137, 138, 139, 141, 142, 144, 151, 152, 155, 211, 213, 219, 445], "comp_rep_human_read": [218, 466], "comp_rep_shap": [218, 466], "compar": [158, 184, 400, 423, 424, 426, 429, 439, 443, 445, 446, 452, 454, 457, 463], "comparison": [417, 429, 439, 440, 458, 460], "compat": [134, 158, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 214, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 290, 326, 356, 396, 406, 411, 412, 413, 414, 416, 418, 428, 435, 445, 458, 462], "compens": 445, "compil": [444, 448], "complain": 446, "complaint": 446, "complement": [31, 354, 454], "complementari": 44, "complet": [75, 418, 423, 450, 452, 454, 456, 460], "complex": [13, 16, 126, 159, 305, 306, 307, 340, 378, 379, 423, 435, 439, 440, 446, 449, 450, 452, 454, 461, 464], "compli": [448, 452], "complianc": 443, "complic": [423, 464], "compon": [69, 340, 423, 424, 446, 449, 451, 452, 453, 454, 460, 462, 464, 465], "compos": [116, 258, 445, 460], "composit": [105, 117, 118, 119, 258, 445, 465], "composite_a": 462, "composite_b": 462, "compositekernel": [117, 118, 119, 445], "compositesurrog": [251, 253, 255, 260, 264, 278, 280, 282, 284, 445, 450, 455, 456, 462], "compound": 335, "comprehens": [443, 462], "compress": 460, "comput": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 87, 97, 101, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 194, 196, 211, 213, 218, 219, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 288, 295, 297, 303, 336, 340, 379, 411, 412, 413, 414, 416, 423, 424, 428, 429, 435, 445, 448, 449, 451, 453, 457, 459, 460, 461, 465, 466], "computation": 196, "compute_ref_point": [13, 16], "compute_scor": 420, "computedstyl": 420, "concat": [408, 409, 417, 418, 428, 429, 432, 433, 439, 440], "concentr": [169, 170, 401, 402, 403, 405, 406, 411, 416, 417, 452], "concentrati": 411, "concentration_valu": 417, "concept": [310, 423, 456, 457, 460], "concis": 445, "concret": [445, 460], "conda": 445, "condit": [34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 346, 354, 402, 408, 412, 413, 414, 423, 429, 443, 445, 448, 464, 465], "conduct": [31, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 401, 402, 403, 443, 446, 451, 464], "confid": [8, 22, 406], "config": [420, 421, 434, 441, 445, 465], "config_json": 31, "configur": [13, 16, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 85, 86, 178, 185, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 240, 242, 248, 251, 253, 255, 256, 258, 260, 264, 270, 278, 280, 282, 284, 340, 346, 385, 404, 405, 423, 430, 433, 437, 443, 444, 445, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 463, 464, 465, 466], "confirm": 418, "conflict": [443, 446, 456], "conform": [155, 336, 457], "confront": [426, 443, 454], "confus": 446, "conjunct": 462, "connect": [57, 346, 445, 457, 463], "consequ": [403, 444, 452, 453, 458, 459, 461, 462], "consequenti": 448, "consid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 125, 138, 141, 142, 144, 152, 155, 157, 159, 184, 196, 213, 246, 346, 355, 356, 400, 423, 426, 428, 439, 440, 443, 445, 446, 450, 452, 454, 455, 456, 457, 460, 466], "consider": [213, 450], "consist": [179, 218, 340, 418, 446, 448, 455], "consol": [420, 444], "consolid": [445, 458], "consortium": 447, "conspicu": 448, "const": 420, "constant": [280, 288, 306, 428, 445, 446, 457, 459, 465], "constitut": 448, "constrain": [445, 452, 463, 464], "constraint": [31, 34, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 80, 139, 196, 211, 213, 219, 313, 420, 421, 428, 435, 436, 437, 441, 443, 445, 447, 453, 457, 465], "constraint_1": 413, "constraint_2": 413, "constraint_3": 413, "constraints_augment": 213, "constraints_cardin": 211, "constraints_lin_eq": 211, "constraints_lin_ineq": 211, "constraints_nonlin": 211, "constru": 448, "construct": [31, 211, 213, 219, 260, 290, 400, 429, 431, 439, 440, 443, 445, 449, 452, 455, 460, 462, 465], "constructor": [201, 202, 203, 204, 213, 233, 278, 282, 284, 423, 431, 436, 437, 445, 449, 451, 454, 456, 457, 462, 465, 466], "consum": [184, 416, 445], "consumpt": 453, "cont_ind": 433, "cont_indic": [432, 433], "cont_paramet": 433, "cont_recommend": [188, 433], "contact": [443, 447], "contain": [13, 16, 31, 34, 40, 41, 42, 44, 65, 68, 73, 97, 122, 125, 126, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 163, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 218, 220, 221, 225, 240, 242, 244, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 295, 297, 303, 305, 306, 307, 310, 311, 326, 336, 340, 344, 346, 348, 354, 355, 357, 364, 370, 371, 379, 385, 397, 398, 402, 403, 417, 418, 424, 426, 433, 439, 440, 444, 445, 446, 448, 451, 452, 454, 455, 458, 459, 460, 461, 466], "content": [158, 184, 213, 244, 347, 386, 420, 445, 448, 460], "context": [75, 83, 157, 181, 183, 184, 185, 186, 194, 196, 240, 256, 258, 382, 416, 426, 431, 439, 440, 445, 451, 454, 455, 457, 460, 461, 462, 464, 466], "contextu": 464, "continu": [10, 15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 73, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 188, 196, 211, 213, 214, 219, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 406, 408, 411, 412, 413, 414, 424, 428, 429, 430, 433, 435, 441, 443, 445, 451, 453, 454, 458, 460, 461, 465], "continuous_subspac": 459, "continuouscardinalityconstraint": [63, 64, 211, 445, 465], "continuousconstraint": [37, 45, 211, 445, 452, 454], "continuouslinearconstraint": [211, 408, 409, 424, 445, 465], "continuouslinearequalityconstraint": 445, "continuouslinearinequalityconstraint": 445, "continuousnonlinearconstraint": [44, 211, 445], "continuousparamet": [151, 211, 445], "contour": 429, "contract": 448, "contractor": 447, "contraint": 452, "contrast": [219, 330, 424, 426, 450, 454, 456], "contribut": [443, 445, 448, 466], "contributor": [443, 448], "contributori": 448, "control": [13, 15, 16, 21, 158, 169, 196, 211, 219, 356, 428, 432, 443, 445, 448, 449, 452, 456, 457, 458, 463, 465], "convei": 460, "conveni": [445, 459, 460, 462], "convent": [213, 340], "converg": 455, "convers": [31, 185, 420, 431, 445, 448, 455, 462, 465], "convert": [28, 123, 215, 228, 291, 317, 327, 331, 335, 342, 343, 358, 359, 360, 365, 368, 372, 375, 421, 436, 437, 445, 451, 453, 460, 461], "convert_sklearn": 420, "convert_sklearn_bayesian_ridg": 420, "convertibletofloat": [13, 16, 317], "cooki": 446, "coordin": [13, 16, 385], "copi": [157, 251, 253, 255, 260, 264, 278, 280, 282, 284, 338, 358, 417, 420, 443, 445, 448, 466], "copy_x": 420, "copyright": [443, 448], "copytoclipboard": 420, "core": [31, 211, 213, 214, 219, 246, 248, 251, 253, 255, 256, 258, 260, 264, 271, 278, 280, 282, 284, 406, 443, 445, 454, 463], "coregion": 464, "coretest": [445, 446], "corpu": 457, "correct": [31, 292, 418, 443, 445, 446, 460], "correctli": [423, 433, 445], "correl": [144, 155, 353, 457, 464], "correspond": [26, 31, 44, 122, 125, 130, 132, 157, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 232, 240, 242, 244, 251, 253, 254, 255, 260, 264, 278, 280, 282, 284, 290, 305, 326, 329, 331, 334, 335, 346, 349, 350, 356, 357, 358, 359, 361, 385, 397, 398, 400, 405, 406, 423, 426, 429, 433, 439, 440, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464], "correspondingli": 31, "corrupt": 348, "cost": [340, 402, 426, 453], "costli": [213, 216, 222, 451], "could": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 152, 342, 406, 416, 417, 423, 424, 440, 445, 450, 452, 457, 461, 463, 464], "count": [417, 423, 452], "counterclaim": 448, "counterpart": [326, 459], "coupl": 418, "cours": [439, 440, 446, 460, 464], "cousin": 452, "cov": [445, 446], "cover": [330, 346, 452, 454], "coverag": [445, 446], "cp": [401, 402, 403], "craft": 461, "crash": [444, 445], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 211, 213, 219, 220, 221, 236, 244, 251, 253, 255, 256, 258, 260, 264, 267, 272, 278, 280, 282, 284, 295, 297, 303, 344, 346, 349, 350, 364, 370, 371, 372, 385, 405, 416, 417, 418, 423, 424, 429, 433, 434, 441, 442, 443, 444, 445, 446, 450, 452, 453, 454, 455, 457, 460, 461, 462, 463, 465, 466], "create_example_plot": [400, 402, 417, 418, 439, 440, 445], "create_from_config": [420, 421], "create_pi_plot": 418, "creation": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 158, 216, 219, 222, 412, 414, 420, 421, 459, 460, 465], "criteria": 418, "criterion": [340, 417, 449], "critic": 445, "cross": [439, 448], "crucial": [443, 463], "csv": [401, 402, 417], "cube": 452, "cuda": 444, "cultur": [457, 464], "curran": 464, "current": [10, 31, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 246, 248, 259, 375, 417, 418, 423, 449, 450, 451, 452, 453, 454, 457, 461, 463, 464, 465, 466], "curv": [305, 418, 428, 452, 463], "custom": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 137, 138, 139, 141, 142, 144, 147, 151, 152, 155, 158, 207, 260, 292, 295, 297, 303, 326, 359, 399, 406, 410, 417, 426, 433, 441, 443, 445, 451, 452, 457, 458, 461, 464, 465, 466], "custom_blackbox": 400, "custom_conversion_funct": 420, "custom_filt": 452, "custom_funct": 411, "customari": 448, "customconstraint": 411, "customdiscreteparamet": [445, 455, 465], "customencod": 144, "customonnxsurrog": [406, 420, 445], "cycl": [184, 443, 445, 454], "cyclic": 184, "d": [13, 16, 26, 56, 126, 310, 321, 379, 385, 418, 421, 436, 437, 439, 440, 443, 448, 459, 464], "d401": 411, "d5dd00050e": 443, "damag": 448, "daniel": 447, "darmstadt": [443, 447], "dashboard": 445, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 72, 77, 89, 97, 101, 125, 130, 132, 144, 152, 155, 178, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 242, 246, 248, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 297, 303, 309, 313, 340, 346, 348, 355, 357, 374, 375, 386, 390, 397, 398, 399, 400, 405, 406, 408, 409, 411, 412, 413, 414, 417, 421, 423, 428, 429, 432, 435, 436, 437, 439, 440, 441, 442, 443, 445, 449, 450, 451, 452, 453, 455, 457, 458, 460, 461, 462, 465, 466], "data_typ": 420, "databas": [31, 428, 443, 460], "dataclass": [416, 426], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 89, 97, 101, 122, 125, 130, 132, 138, 141, 142, 144, 152, 155, 158, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 218, 219, 220, 221, 224, 238, 239, 242, 244, 246, 248, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 297, 303, 310, 311, 335, 336, 340, 386, 397, 398, 400, 401, 405, 406, 411, 412, 413, 414, 417, 418, 420, 421, 423, 424, 428, 429, 432, 435, 439, 440, 445, 450, 451, 452, 454, 457, 465, 466], "datapoint": 445, "dataset": [184, 240, 340, 420, 461], "datatyp": 445, "date": 448, "dditiv": 455, "de": [231, 434, 443, 444, 445, 446, 451, 458, 465], "deactiv": [445, 453], "deal": [403, 450, 457, 461], "debug": 445, "decid": [152, 423, 426, 433, 449], "declar": [53, 57, 65, 204, 412, 446, 452], "decod": 420, "decor": [119, 288, 316, 349, 416, 445, 446, 461], "decorrel": [144, 155, 162, 436, 437, 457], "decreas": [184, 306, 428, 460, 464], "deduc": [408, 409, 432], "dedupl": 445, "deep": [340, 417], "deepcopi": 445, "deeper": 455, "deepli": 462, "def": [400, 411, 416, 417, 418, 423, 426, 429, 439, 446, 452, 461], "default": [13, 16, 42, 97, 125, 144, 155, 158, 188, 194, 196, 201, 202, 203, 204, 211, 219, 231, 251, 271, 274, 340, 354, 400, 401, 403, 406, 420, 421, 428, 433, 443, 445, 446, 451, 452, 453, 455, 456, 457, 465], "default_campaign": 400, "defaultkernelfactori": [406, 411, 412, 413, 414, 428, 435], "defaultscal": 445, "defend": 448, "defer": 445, "defin": [26, 31, 41, 44, 45, 52, 147, 157, 178, 184, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 219, 240, 264, 266, 267, 292, 348, 353, 354, 370, 371, 388, 401, 402, 403, 405, 411, 412, 413, 414, 420, 421, 426, 431, 445, 446, 448, 451, 452, 454, 457, 460, 461, 463], "definit": [211, 219, 330, 424, 429, 443, 445, 448, 456, 459], "degener": [347, 364, 445], "degr": 435, "degre": 460, "degree_c": [420, 421, 435], "deliber": 448, "delici": 446, "deliveri": 457, "demand": [31, 440], "demo": 445, "demonstr": [399, 400, 401, 404, 407, 410, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 430, 434, 435, 438, 439, 440, 445, 456, 459, 460, 464], "denot": 26, "densiti": 418, "depend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 53, 57, 88, 213, 219, 240, 306, 310, 402, 406, 410, 423, 424, 431, 441, 442, 444, 445, 446, 452, 453, 454, 455, 459, 461, 462, 463, 464, 466], "dependenciesconstraint": 445, "deprec": [67, 149, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 219, 224, 261, 316, 411, 413, 414], "deprecationwarn": [411, 413, 414, 417], "depth": 459, "deriv": [201, 202, 203, 204, 219, 330, 448, 452, 459], "descend": 306, "describ": [201, 202, 203, 204, 251, 253, 255, 260, 264, 278, 280, 282, 284, 290, 406, 411, 416, 417, 424, 426, 428, 429, 446, 448, 450, 451, 452, 456, 457, 460, 461], "descript": [122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 295, 297, 303, 370, 371, 445, 446], "descriptor": [155, 336, 445, 455, 457, 464], "deseri": [229, 233, 238, 435, 444, 445, 451, 465], "deserialize_datafram": 460, "design": [0, 21, 26, 242, 340, 349, 416, 420, 423, 426, 448, 449, 452, 454, 455, 456, 458, 460], "desir": [125, 128, 350, 427, 428, 441, 443, 445, 449, 453, 455, 456, 458, 460, 463, 466], "desirabilityobject": [31, 428, 443, 445, 450, 451, 460, 462, 465], "desktop": 445, "despit": 445, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 165, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 218, 219, 242, 246, 251, 253, 255, 256, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 295, 297, 303, 354, 361, 364, 370, 371, 388, 401, 403, 408, 409, 420, 428, 433, 442, 443, 444, 445, 450, 451, 452, 454, 455, 457, 458, 459, 460, 461, 462, 464, 465], "detect": [313, 355, 444, 446], "determin": [13, 16, 31, 44, 97, 186, 219, 246, 330, 354, 368, 377, 385, 401, 423, 426, 445, 448, 453, 458], "determinist": [385, 445], "detriment": 457, "dev": [443, 445, 446], "develop": [443, 445, 457, 461, 465], "deviat": [6, 18, 288, 355, 420, 445, 451], "df": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 122, 125, 130, 132, 158, 211, 213, 219, 224, 239, 244, 310, 311, 335, 347, 351, 352, 353, 354, 356, 358, 359, 361, 386, 400, 411, 426, 443, 452, 459, 460, 461], "df_y": 429, "dfa": [310, 311], "di": [401, 402, 403, 405, 406, 447], "diagram": [445, 447, 465], "dicret": 452, "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 201, 202, 203, 204, 211, 213, 216, 219, 222, 232, 233, 234, 236, 246, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 321, 324, 336, 340, 346, 364, 370, 371, 372, 388, 417, 420, 439, 440, 445], "dict_bas": [401, 402, 403, 405, 406], "dict_ligand": [401, 402, 403, 405, 406], "dict_solv": [401, 402, 403, 405, 406, 411, 412, 413, 414, 423, 452], "dictat": [122, 125, 130, 132, 196, 213, 439, 440], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 211, 213, 219, 232, 234, 236, 246, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 288, 290, 295, 297, 303, 321, 324, 346, 364, 370, 371, 372, 401, 402, 403, 405, 421, 457, 461], "diff": 446, "differ": [13, 16, 55, 125, 196, 211, 213, 214, 219, 240, 248, 311, 346, 348, 388, 402, 411, 416, 423, 426, 428, 429, 432, 433, 439, 440, 443, 445, 446, 448, 450, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464], "differenti": [461, 464], "difficult": 464, "digit": [359, 443], "dilemma": 426, "dim": [26, 408, 409, 418, 420, 432, 433, 439, 440], "dimens": [26, 385, 400, 408, 409, 418, 420, 431, 432, 439, 440, 445, 457, 459, 462, 464], "dimension": [13, 16, 126, 137, 138, 139, 141, 142, 144, 151, 152, 155, 274, 349, 385, 400, 439, 440, 445], "dimethylisoxazol": 464, "direct": [13, 16, 401, 402, 403, 405, 443, 445, 448, 454, 457, 466], "direct_aryl": [401, 402, 417], "directli": [13, 16, 330, 440, 443, 445, 452, 453, 456, 460, 462], "directori": [401, 402, 417, 433, 445], "disabl": [251, 253, 255, 260, 264, 278, 280, 282, 284, 411, 413, 414, 445, 451, 453, 454], "disadvantag": 460, "disappear": 445, "disc_ind": 433, "disc_indic": [432, 433], "disc_paramet": 433, "disc_recommend": [188, 433], "discard": [8, 423], "disclaim": 448, "discourag": 451, "discoveri": 443, "discret": [15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 73, 137, 138, 139, 141, 142, 144, 151, 152, 155, 188, 196, 201, 202, 203, 204, 207, 211, 213, 214, 218, 219, 248, 384, 405, 408, 414, 417, 418, 420, 428, 430, 433, 435, 440, 441, 443, 445, 449, 454, 455, 458, 460, 461, 465, 466], "discrete_param": [418, 439, 440], "discrete_spac": [408, 409, 433], "discrete_subspac": 459, "discretecardinalityconstraint": [445, 465], "discreteconstraint": [31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 219, 445, 452, 454], "discretecust": 411, "discretecustomconstraint": [411, 445, 465], "discretedep": 412, "discretedependenciesconstraint": [57, 65, 412, 423, 465], "discreteexcl": 413, "discreteexcludeconstraint": [413, 445, 454, 465], "discretelinkedparametersconstraint": [445, 465], "discretenolabelduplicatesconstraint": [57, 423, 445, 465], "discreteparamet": [152, 219, 220, 221, 445], "discretepermutationinvarianceconstraint": [423, 465], "discreteprod": 414, "discreteproductconstraint": [414, 445, 465], "discretesamplingmethod": [15, 196, 386, 445, 449], "discretesumc": 414, "discretesumconstraint": [408, 414, 423, 445, 465], "discuss": [428, 448, 452, 459, 461], "disjoint": 219, "disk": [445, 465], "displai": [359, 417, 448, 455], "distanc": [152, 206, 340, 385], "distinct": [416, 451, 458], "distinguish": [347, 423, 445, 452, 457, 464], "distribut": [31, 165, 168, 251, 253, 255, 260, 264, 278, 280, 282, 284, 423, 428, 433, 443, 445, 448, 449, 450, 462], "distutil": 331, "div": 420, "divers": 462, "divid": 424, "divis": 379, "dll": 444, "dmac": [401, 402, 403, 405, 406], "dmf": 452, "do": [63, 213, 219, 259, 416, 420, 421, 423, 426, 433, 435, 436, 437, 439, 442, 443, 444, 448, 450, 452, 453, 454, 455, 457, 458, 460, 464, 465, 466], "do_baybe_work": 453, "doc": [102, 165, 316, 443, 445], "doc101": 446, "doc103": 446, "docstr": 445, "doctest": 445, "document": [31, 375, 420, 443, 445, 446, 447, 448, 451, 455, 461], "doe": [30, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 97, 157, 196, 240, 242, 244, 246, 251, 253, 255, 259, 260, 264, 278, 280, 282, 284, 292, 326, 335, 355, 375, 403, 406, 417, 420, 421, 423, 436, 437, 439, 440, 445, 446, 448, 450, 452, 456, 458, 461, 462, 464, 466], "doi": [276, 353, 443], "domain": [251, 253, 255, 260, 264, 278, 280, 282, 284, 400, 443, 445, 459, 461], "don": [442, 454], "done": [31, 354, 355, 403, 405, 411, 412, 413, 414, 420, 421, 428, 435, 445, 449, 451, 452, 453, 454], "doubl": [375, 446, 453], "down": [460, 466], "downsid": 185, "draft": 445, "dramat": 464, "drastic": 457, "draw": [10, 114, 211, 424, 426, 431], "draw_arm": 426, "drawback": 456, "drawn": [21, 196], "drive": [418, 464], "driven": [346, 449], "driver": 444, "drop": [351, 352, 353, 357, 417, 445, 450, 452], "drug": 450, "dry_run": 31, "dtype": [13, 16, 126, 159, 305, 306, 307, 340, 358, 378, 379, 445], "due": [157, 440, 445, 446, 449, 452, 453, 457, 458, 459, 460, 463], "duplic": [31, 57, 164, 313, 321, 445, 452], "durat": [340, 450], "dure": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 213, 219, 240, 324, 385, 423, 426, 439, 440, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 459, 460, 461, 462], "dx": 443, "dynam": [426, 445, 460, 465], "d\u00fcbendorf": 447, "e": [8, 21, 26, 31, 34, 44, 53, 55, 56, 73, 100, 144, 158, 159, 186, 213, 219, 240, 313, 319, 320, 336, 340, 346, 354, 355, 364, 393, 401, 402, 403, 417, 421, 423, 424, 426, 443, 444, 445, 446, 449, 450, 452, 453, 455, 457, 458, 459, 460, 461, 464, 466], "e3fp": 149, "e3fpfingerprint": 149, "each": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 125, 130, 132, 158, 178, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 213, 242, 244, 246, 248, 251, 253, 255, 259, 260, 264, 278, 280, 282, 284, 311, 336, 340, 346, 347, 355, 400, 402, 403, 406, 418, 423, 424, 426, 428, 429, 433, 439, 440, 445, 446, 448, 450, 451, 452, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 466], "eagerli": 445, "earli": [417, 445], "earlier": [31, 442, 444], "earn": 426, "earned_reward": 426, "easi": [335, 446, 460], "easier": [446, 450, 466], "easiest": [443, 446], "easili": [417, 443, 446, 451, 454, 457, 459, 460, 464], "ecfp": [149, 402, 445, 457], "ecfpfingerprint": 149, "ecosystem": 460, "edbo": [274, 276, 353, 445], "edbokernelfactori": [274, 445], "edg": 157, "edit": [443, 446], "editor": 464, "editori": 448, "edwin": 464, "effect": [55, 181, 183, 184, 185, 186, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 416, 417, 426, 440, 445, 449, 452, 457, 458, 461, 464, 466], "effici": [219, 340, 423, 443, 445, 453, 459], "effortlessli": 461, "ei": [3, 406], "either": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 214, 242, 248, 264, 288, 355, 402, 413, 428, 433, 443, 448, 456, 457, 458, 459, 461, 462], "elabor": 448, "elaps": 416, "elapsedtimeprint": 416, "electron": [447, 448], "electroshap": 149, "electroshapefingerprint": 149, "eleg": [439, 460], "element": [40, 41, 42, 52, 159, 248, 313, 323, 329, 340, 344, 377, 378, 420, 423, 439, 440, 445, 452, 461], "elev": 418, "elif": [432, 433], "elimin": [446, 449], "els": [330, 331, 400, 401, 402, 403, 408, 409, 411, 412, 414, 417, 418, 426, 429, 432, 433, 439, 440], "elsewher": 420, "emd": 447, "emdgroup": 443, "emelin": 447, "emerg": 451, "empir": 426, "emploi": [31, 426, 458], "empow": 462, "empti": [101, 211, 213, 219, 226, 311, 326, 335, 354, 359, 397, 398, 423, 428, 433, 435, 445, 459], "empty_encod": [213, 219], "emptysearchspaceerror": 226, "emul": [21, 444, 445], "en": [102, 165], "enabl": [185, 246, 401, 402, 403, 423, 439, 443, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 463, 464], "encapsul": 340, "encod": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 213, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 334, 336, 401, 402, 403, 405, 406, 411, 412, 413, 414, 417, 421, 423, 426, 428, 435, 436, 437, 439, 440, 443, 445, 452, 459, 460, 464], "encompass": 451, "encount": [157, 181, 183, 184, 185, 186, 385, 444, 445, 446, 456], "end": [0, 307, 364, 417, 421, 426, 428, 435, 448, 452, 460], "endeavor": 449, "endpoint": 445, "enforc": [207, 376, 391, 445, 446, 457], "engin": [444, 458, 460, 461, 466], "enhanc": [26, 443], "enlarg": 457, "enough": [211, 460], "ensembl": 286, "ensur": [157, 158, 358, 401, 402, 403, 423, 424, 443, 445, 452, 460, 461], "enter": [79, 219, 459], "entir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 364, 386, 445, 446, 449, 451, 452, 453, 466], "entiti": 448, "entri": [31, 38, 41, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 234, 251, 253, 255, 260, 264, 278, 280, 282, 284, 311, 346, 355, 386, 403, 411, 412, 413, 414, 423, 442, 445, 452, 453, 454, 455, 463, 466], "enum": [128, 146, 147, 148, 149, 206, 214, 271, 300, 301, 315, 384, 445, 460], "enumer": [127, 145, 299, 418, 439, 440, 456], "env": [445, 446], "envar_nam": 453, "environ": [207, 246, 376, 391, 400, 401, 402, 403, 409, 411, 412, 414, 417, 418, 420, 426, 429, 439, 440, 443, 444, 445, 446, 452, 465], "envvar_nam": 453, "eq": [411, 423], "equal": [45, 125, 186, 211, 426, 428, 435, 445, 452, 456, 459, 460, 463], "equat": [45, 452, 461], "equidist": [385, 445, 457], "equip": 452, "equival": [21, 34, 57, 409, 431, 449, 452, 461], "erg": 149, "ergfingerprint": 149, "err": 420, "errno": [401, 402, 417], "erron": 445, "error": [184, 242, 244, 246, 261, 324, 357, 379, 403, 420, 421, 426, 444, 445, 450, 452, 456, 458], "esian": 443, "especi": [446, 450], "essenti": [451, 458], "establish": [417, 439, 440, 464], "estat": 149, "estatefingerprint": 149, "ester": [401, 402, 403, 405, 406], "estim": [213, 218, 219, 251, 340, 426, 445, 462, 465], "estimate_product_space_s": [213, 219, 466], "estimated_win_r": 426, "estimation_bia": 426, "estimation_vari": 426, "et": [402, 443, 457], "etc": [40, 41, 42, 139, 213, 295, 464], "ethanol": [423, 452], "euclidean": [340, 385], "eval_during_augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_cr": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_model": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "evalu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 194, 196, 286, 287, 331, 432, 433, 445, 451, 453, 458, 461, 464], "even": [186, 288, 352, 439, 440, 448, 450, 451, 453, 457, 461, 462, 464, 466], "event": [31, 417, 448], "everi": [450, 466], "everyth": [446, 452], "evolv": [418, 446], "ex": 455, "exabyt": 466, "exact": [31, 355, 416, 444, 445, 452, 456, 457, 462], "exactexplain": [95, 98, 455], "exactli": [13, 16, 44, 122, 125, 130, 132, 213, 423, 445, 450, 451, 459, 460], "examin": 451, "exampl": [13, 16, 157, 158, 244, 310, 311, 321, 330, 340, 354, 399, 400, 404, 407, 410, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 429, 430, 431, 434, 438, 439, 440, 444, 445, 446, 447, 448, 450, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "example_input_nam": 420, "exceed": 417, "exceedingli": 461, "except": [31, 326, 335, 343, 362, 363, 401, 402, 403, 417, 421, 436, 437, 443, 444, 445, 448, 454, 462], "excepthook": 444, "exceptiongroup": [63, 445], "excess": 466, "exclud": [31, 56, 351, 411, 412, 413, 414, 428, 435, 445, 448, 452, 465], "exclude_list": 353, "exclus": [54, 410, 441, 445, 448, 452, 461, 465], "execut": [31, 67, 242, 326, 400, 402, 444, 445, 446, 448, 453, 460, 461, 464], "exemplari": 451, "exercis": 448, "exhaust": [184, 196, 455, 458], "exist": [31, 119, 213, 316, 326, 423, 444, 445, 446, 449, 451, 452, 454, 460, 462, 464, 465], "exp_rep": [219, 411, 412, 413, 414, 423, 459], "exp_rep_byt": [218, 466], "exp_rep_human_read": [218, 466], "exp_rep_shap": [218, 466], "expect": [3, 4, 9, 11, 13, 14, 16, 17, 52, 75, 83, 256, 258, 266, 326, 349, 358, 406, 412, 418, 420, 423, 424, 426, 437, 445, 446, 451, 452, 455, 456, 457, 460, 461, 463, 466], "expens": [10, 196, 408, 461], "experi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 178, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 240, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 401, 402, 403, 405, 406, 432, 433, 445, 449, 451, 452, 454, 456, 457, 458, 463, 464, 465], "experiment": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 101, 122, 125, 130, 132, 138, 141, 142, 144, 152, 155, 178, 181, 182, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 213, 218, 219, 240, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 295, 297, 303, 346, 348, 411, 412, 413, 414, 418, 428, 435, 443, 445, 449, 450, 452, 454, 456, 457, 459, 460, 461, 463, 464, 465, 466], "experimentalist": 442, "expert": 340, "expir": 465, "explain": [72, 96, 97, 98, 100, 101, 418, 445, 447, 462, 465], "explain_target": [97, 445], "explainer_cl": [97, 101, 455], "explan": [97, 101, 445, 451, 455, 462], "explanation_index": [97, 455], "explicit": [158, 185, 416, 417, 421, 423, 431, 436, 437, 445, 446, 456, 460, 462, 464, 465], "explicitli": [211, 219, 416, 433, 440, 448, 454, 459, 464], "exploit": [8, 21, 426, 445], "explor": [8, 31, 426, 449, 458, 459, 464], "exploratori": 449, "exponenti": 219, "expos": [31, 416, 445], "exposur": 445, "expr": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "express": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 443, 445, 448, 452], "extend": [157, 454, 457, 464], "extens": [445, 458], "extern": [446, 447], "extra": [340, 402, 443, 445, 453], "extract": [31, 181, 183, 184, 185, 186, 356, 418, 439, 455, 465], "extract_pi": 418, "f": [331, 340, 400, 401, 402, 403, 408, 409, 411, 412, 413, 414, 416, 417, 418, 423, 424, 428, 431, 432, 433, 439, 440, 466], "f1": 461, "f2": 461, "fa": 420, "fabian": [443, 447], "face": [251, 253, 255, 260, 264, 278, 280, 282, 284, 424, 426], "facilit": 458, "fact": [21, 418, 423, 442, 452, 456], "factor": [13, 16, 443, 451, 452, 466], "factori": [158, 211, 264, 265, 266, 267, 268, 274, 276, 322, 406, 411, 412, 413, 414, 428, 435, 445], "fail": [420, 433, 437, 444, 445, 462], "failur": [297, 445, 448], "failure_valu": 297, "fairli": 456, "fake": [244, 346, 350, 405, 406, 420, 421, 428, 445, 450, 461, 465], "fall": [157, 186, 417, 451, 463], "fallback": [207, 219, 246, 366, 420, 445, 459], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 97, 101, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 183, 184, 185, 186, 207, 211, 213, 219, 224, 251, 253, 255, 260, 264, 278, 280, 282, 284, 297, 306, 319, 320, 324, 330, 331, 344, 349, 354, 356, 357, 361, 397, 406, 411, 412, 413, 414, 420, 428, 435, 436, 437, 445, 453], "falsi": 453, "famili": 452, "familiar": [401, 402, 403, 406, 408, 409, 411, 412, 413, 414, 420, 421, 428, 432, 433, 435], "fang": 447, "fantasi": 10, "far": [451, 453], "farthest": [206, 207, 384, 385, 406, 443, 445, 447, 449, 453, 458], "farthest_point_sampl": [207, 445], "fashion": [305, 307], "fast": [340, 411, 413, 414, 450, 459, 463], "faster": [219, 340, 450], "fault": 92, "faulti": 444, "favicon": 445, "favor": 445, "fc": [401, 402, 403], "feasibl": [76, 451, 455], "featur": [97, 114, 155, 353, 443, 444, 445, 446, 452, 455, 462, 464], "fed": [443, 455], "feder": 447, "fee": 448, "feed": [340, 429, 442, 443, 454, 464], "feedback": 447, "feel": 417, "fetch": 446, "few": [400, 426, 445, 446, 449, 457, 460, 462, 464, 466], "field": [233, 343, 344, 445, 464, 465], "fifti": 448, "fig": [418, 429], "figsiz": 429, "figur": 418, "file": [401, 402, 403, 417, 420, 421, 433, 443, 445, 448, 453, 460, 464], "filenotfounderror": [401, 402, 403, 417], "fill": [31, 244, 418], "filler": 452, "filter": [31, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 213, 219, 351, 354, 411, 423, 445, 452, 454, 459, 464, 466], "filter_attribut": 445, "filter_df": [31, 445], "filterwarn": 417, "final": [400, 402, 405, 417, 423, 440], "find": [213, 324, 378, 443, 449, 451, 452, 456, 464], "fine": [421, 435, 436, 437, 443], "finer": [158, 443], "fingerprint": [149, 155, 334, 336, 443, 445, 447, 457], "finish": 450, "finit": [184, 240, 248, 363, 393, 426, 457, 461], "first": [206, 213, 246, 377, 385, 400, 402, 405, 406, 411, 416, 417, 420, 421, 423, 428, 429, 433, 437, 439, 440, 443, 444, 445, 451, 452, 456, 457, 458, 459, 464, 466], "fit": [31, 204, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 340, 386, 388, 401, 402, 403, 411, 412, 413, 414, 420, 428, 435, 445, 448, 450, 452, 457, 462], "fit_gpytorch_ml": 445, "fit_gpytorch_mll_torch": 445, "fit_intercept": 420, "fit_param": 340, "fit_predict": 340, "fit_transform": 340, "fitnr": [31, 428], "fitzner": [443, 447], "fix": [240, 267, 417, 418, 423, 426, 429, 432, 433, 446, 451, 457, 461, 464, 466], "flag": [26, 31, 53, 97, 101, 122, 125, 130, 132, 196, 213, 214, 219, 349, 356, 442, 445, 451, 454, 455, 458], "flake8": 445, "flexibl": [416, 431, 445, 460, 461], "flexibli": [456, 458], "float": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 42, 44, 45, 47, 48, 108, 109, 110, 111, 112, 113, 114, 115, 119, 125, 126, 144, 151, 152, 155, 159, 162, 163, 169, 170, 171, 172, 173, 174, 175, 194, 196, 218, 219, 242, 246, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 288, 297, 298, 305, 306, 307, 317, 340, 342, 346, 347, 348, 353, 364, 368, 374, 375, 377, 378, 379, 390, 393, 394, 395, 416, 418, 420, 426, 428, 445, 446, 450, 451, 465], "float64": [390, 429], "floattensortyp": 420, "fly": [185, 460, 462], "fn": 316, "focu": 451, "focus": [132, 429, 433, 443], "folder": [402, 443, 446, 453, 462], "follow": [159, 181, 183, 184, 185, 186, 213, 242, 244, 246, 401, 402, 403, 406, 408, 409, 411, 412, 413, 414, 416, 417, 421, 426, 428, 433, 436, 437, 439, 440, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464], "footprint": [10, 213], "forbid": 396, "forc": [97, 99, 157, 196, 445, 446, 455, 458], "foreach": 420, "forest": [283, 284], "forgiv": 463, "fork": 446, "form": [219, 240, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 340, 346, 442, 443, 446, 448, 449, 451, 456, 457, 458, 459, 460, 461, 466], "formal": [424, 442], "format": [45, 340, 359, 365, 368, 420, 421, 435, 436, 443, 444, 445, 446, 451, 453, 460, 461], "format_except": 444, "former": [423, 445], "formul": [450, 464], "formula": 423, "forrest": 445, "found": [90, 158, 211, 219, 324, 334, 375, 378, 417, 423, 428, 443, 444, 446, 451, 452, 458, 464, 465], "foundat": 458, "four": 423, "fourier": 114, "fourth": 452, "fp": [384, 445, 449, 465], "fp_size": [149, 457], "fpsampl": [207, 445, 447, 453], "fpsiniti": 207, "fpsrecommend": [406, 420, 421, 435, 436, 437, 443, 445, 447, 450, 453, 458], "frac": [440, 456], "frac1": 412, "fraction": [15, 109, 342, 417, 449, 452], "fraction1": 412, "fraction_1": 452, "fraction_2": 452, "fraction_3": 452, "fractur": 452, "frame": [348, 455, 466], "frame1": 412, "frame2": 412, "frame_1": 452, "frame_2": 452, "framea": 412, "framea_a": 412, "frameb": 412, "framework": [451, 457], "free": [446, 448], "freedom": 460, "freeli": 423, "frequenc": 114, "frequent": 426, "fresh": 417, "frictionless": 460, "friendli": 445, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 149, 151, 152, 155, 157, 158, 165, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 236, 244, 246, 248, 251, 253, 255, 258, 260, 264, 267, 272, 276, 278, 280, 282, 284, 288, 295, 297, 303, 306, 307, 326, 330, 331, 335, 338, 340, 348, 349, 351, 353, 364, 370, 371, 379, 385, 386, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 426, 428, 429, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 444, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466], "from_bound": [211, 445, 459], "from_campaign": [97, 455], "from_config": [31, 436, 437, 451], "from_datafram": [211, 213, 219, 445, 454, 459, 460, 466], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371, 420], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371, 420, 421, 435, 451, 460], "from_paramet": [211, 213, 219, 445], "from_preset": 264, "from_product": [211, 213, 219, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 443, 445, 452, 454, 459, 460, 461], "from_recommend": [97, 455], "from_record": [460, 461], "from_repl": [258, 462], "from_simplex": [219, 423, 445, 454, 459, 466], "from_surrog": [97, 455], "front": 456, "frontier": 429, "frozenset": [44, 211, 423], "fsspec": 445, "fulfil": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 417, 423, 424], "full": [26, 211, 375, 399, 441, 445, 451, 452, 454, 455, 457, 464, 465], "full_factori": 211, "full_lik": 418, "full_lookup": [401, 402, 403], "fulli": [423, 443, 445, 453, 454, 461], "fullparamnam": 420, "fulltest": 446, "func": [340, 446], "func_nam": 439, "funci": 445, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 39, 45, 46, 52, 60, 62, 70, 82, 92, 94, 97, 113, 121, 124, 129, 131, 133, 156, 157, 161, 194, 196, 212, 217, 223, 227, 228, 236, 237, 240, 241, 243, 245, 246, 247, 252, 259, 265, 270, 285, 289, 294, 301, 304, 305, 306, 307, 309, 312, 328, 332, 341, 345, 348, 350, 355, 356, 359, 362, 367, 369, 373, 380, 383, 392, 405, 411, 412, 413, 414, 416, 418, 420, 423, 426, 429, 435, 439, 440, 443, 444, 445, 449, 452, 453, 454, 456, 458, 459, 461, 462, 463, 464, 465, 466], "function_nam": [439, 440], "functionalgroup": 149, "functionalgroupsfingerprint": 149, "fundament": [457, 460], "furo": 445, "further": [13, 16, 355, 423, 424, 435, 443, 450, 454, 458, 459, 462, 464, 465], "furthermor": [428, 450], "furyl": [401, 402, 403], "futur": [57, 259, 411, 413, 414, 417, 439, 455, 463], "fuzzy_row_match": 445, "g": [53, 55, 56, 73, 100, 144, 158, 213, 219, 313, 336, 355, 426, 443, 444, 445, 446, 449, 450, 452, 453, 455, 457, 458, 459, 461, 466], "g1": 424, "g2": 424, "g3": 424, "gain": [219, 451, 455], "gamma": 170, "gammaprior": 445, "garbag": 445, "gather": [186, 439, 440, 449, 464], "gaussian": [102, 201, 253, 262, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 305, 406, 428, 445, 452, 458, 464], "gaussian_kd": 418, "gaussian_process": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 264, 266, 267, 271, 274, 276, 406, 445], "gaussianmixtureclusteringrecommend": 458, "gaussianprocesspreset": [264, 272], "gaussianprocesssurrog": [272, 406, 411, 412, 413, 414, 418, 428, 435, 436, 437, 445, 462], "gcf": [401, 403], "ge": 409, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 148, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 218, 219, 251, 253, 255, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 295, 297, 303, 330, 336, 340, 347, 364, 369, 370, 371, 380, 388, 400, 406, 416, 423, 429, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 460, 461, 462, 463, 464, 465, 466], "geom_mean": [125, 128, 428, 456], "geometr": [128, 379, 428, 456], "gerit": 443, "germani": [443, 447], "get": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 194, 196, 211, 264, 340, 346, 406, 417, 420, 423, 432, 433, 442, 443, 445, 450, 465, 466], "get_absolute_threshold": [44, 445], "get_acquisition_funct": [31, 194, 196, 445], "get_candid": [219, 417, 418], "get_cmap": 418, "get_comp_rep_parameter_indic": [213, 445], "get_current_recommend": [181, 183, 184, 185, 186, 445], "get_integration_point": 15, "get_invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_invalid_polar": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_lin": 417, "get_metadata_rout": 340, "get_next_recommend": [181, 183, 184, 185, 186, 445], "get_non_meta_recommend": [181, 183, 184, 185, 186, 445], "get_param": 340, "get_parameters_by_nam": [211, 213, 219], "get_parameters_from_datafram": [211, 219], "get_subclass": 406, "get_surrog": [31, 97, 194, 196, 445, 455, 462], "get_transform_object": [361, 445], "get_transform_paramet": 445, "get_valid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 445], "getawai": 149, "getawayfingerprint": 149, "getcomputedstyl": 420, "ghosecrippen": 149, "ghosecrippenfingerprint": 149, "git": [443, 446], "github": [276, 327, 353, 420, 445, 446, 447], "give": [420, 421, 423, 440, 448, 451, 452, 456, 460], "given": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 40, 41, 42, 44, 65, 90, 97, 100, 101, 122, 125, 130, 132, 134, 155, 157, 158, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 225, 240, 244, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 288, 300, 311, 319, 320, 324, 325, 326, 329, 330, 333, 334, 342, 344, 346, 349, 356, 364, 365, 377, 379, 385, 388, 411, 412, 413, 414, 417, 423, 426, 428, 433, 439, 440, 445, 450, 451, 452, 459, 461, 462], "glass_transition_tempc": 457, "global": [15, 381, 445, 465, 466], "gmean": 379, "gmm": 201, "go": [310, 423, 443], "goal": [400, 426, 456, 464], "goe": 462, "good": [346, 417, 428, 451, 463], "good_interv": 346, "good_reference_valu": 346, "goodwil": 448, "googl": [445, 446], "govern": 443, "gp": [251, 253, 255, 260, 264, 278, 280, 282, 284, 445], "gpytorch": [102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 165, 167, 169, 170, 171, 172, 173, 174, 175, 445], "grab": 442, "gradient": [10, 196, 282, 445, 453, 458], "grant": [445, 448], "granular": [421, 435, 436, 437, 443], "granularity_coar": 435, "granularity_fin": 435, "great": [426, 460], "greater": [186, 196], "greatli": 446, "greedi": [196, 445, 458], "green": 420, "grid": [429, 439, 440], "grid_d": [439, 440], "grossli": 448, "ground": 445, "group": [88, 196, 311, 321, 388, 424, 443, 445, 451, 452, 453, 455], "groupbi": [246, 248], "grow": 466, "gt": [414, 423], "gu16": 457, "guarante": [445, 452, 453, 458], "guid": [340, 405, 443, 444, 445, 446, 449, 451, 454, 456, 459, 461, 464], "guidelin": [445, 446, 449], "h": 340, "ha": [31, 53, 76, 77, 81, 82, 97, 184, 211, 213, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 310, 324, 326, 330, 347, 358, 385, 386, 402, 406, 411, 412, 413, 414, 423, 428, 433, 435, 443, 445, 446, 448, 450, 451, 452, 455, 457, 459, 460, 461, 463, 464], "had": [240, 452, 457, 461], "half": [152, 171, 172, 364, 433, 450], "halfcauchyprior": 445, "halfnormalprior": 445, "halter": 443, "hamster": 464, "hand": [45, 155, 246, 424, 426, 429, 439, 440, 443, 451, 460, 462], "handi": 452, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 97, 130, 139, 242, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 357, 362, 411, 412, 426, 428, 445, 451, 456, 466], "happen": [89, 184, 428, 433, 440, 444, 445, 446, 459, 460, 464], "happili": 456, "hard": [445, 464, 466], "hardcod": 445, "harmless": 448, "hartmann": [418, 439, 440], "hasattr": [408, 409, 432, 433], "hash": 457, "hashabledict": 445, "have": [26, 31, 38, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 122, 125, 130, 132, 155, 157, 204, 213, 240, 259, 292, 311, 321, 324, 340, 346, 355, 356, 375, 401, 402, 405, 406, 411, 412, 416, 418, 423, 424, 426, 428, 432, 433, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 464, 466], "head": 445, "header": 344, "heart": 464, "heatmap": [97, 99], "help": [426, 460, 461, 464], "helper": [416, 418, 420, 423, 460], "henc": [335, 423, 426, 435, 450, 452, 457, 466], "here": [56, 375, 401, 403, 405, 408, 409, 416, 417, 421, 423, 424, 432, 433, 435, 439, 440, 442, 443, 444, 450, 452, 454, 456, 457, 458, 459, 460, 461, 463, 464], "herebi": 448, "herein": [448, 451], "heurist": [196, 340], "hierarch": 460, "hierarchi": [90, 445, 446, 451, 460], "high": [274, 400, 426, 445, 446, 449, 451, 452, 457, 460], "higher": [155, 426, 444, 452, 455, 458], "highest": [449, 460], "highlight": 464, "hint": 446, "histor": 457, "histori": 446, "hoc": 456, "hold": [44, 321, 448, 460], "home": [411, 413, 414], "homepag": [443, 445], "hood": 457, "hook": [49, 219, 228, 232, 326, 441, 444, 445, 446], "hopp": [443, 447], "host": 445, "hot": [146, 402, 426, 443, 445, 457], "how": [54, 242, 244, 340, 355, 385, 400, 401, 403, 404, 405, 406, 407, 410, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 433, 435, 436, 437, 440, 443, 451, 452, 456, 461, 462, 463, 464, 465], "howev": [158, 219, 259, 326, 416, 423, 426, 432, 433, 442, 444, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 464, 466], "hrovatin": [443, 447], "hsuan": 447, "html": [102, 165, 316, 375, 420, 445], "http": [102, 165, 276, 316, 327, 353, 375, 443, 445, 448, 464], "hue": [400, 401, 402, 403, 417, 439, 440], "human": [218, 368, 435, 445, 447, 460], "hybrid": [25, 26, 73, 187, 188, 196, 208, 213, 214, 406, 407, 411, 412, 413, 414, 428, 430, 435, 441, 443, 445, 458, 459], "hybrid_recommend": 433, "hybrid_sampl": [196, 458], "hyperrectangl": [211, 459], "hypervolum": [13, 16], "hypothesi": [443, 445, 446], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 72, 73, 79, 81, 82, 84, 86, 97, 100, 101, 116, 119, 126, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 226, 240, 242, 244, 246, 248, 251, 253, 255, 256, 258, 259, 260, 264, 274, 278, 280, 282, 284, 288, 292, 300, 305, 306, 307, 311, 314, 315, 316, 319, 320, 324, 326, 327, 329, 330, 331, 334, 335, 340, 344, 346, 347, 348, 349, 350, 354, 355, 356, 359, 363, 364, 372, 375, 377, 378, 385, 386, 393, 397, 398, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 426, 428, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "ibm": 340, "icon": 420, "ideal": [450, 452, 461], "ident": [158, 310, 311, 454, 457, 460, 464], "identif": 426, "identifi": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 246, 321, 335, 355, 356, 417, 445, 452, 455, 456, 457, 459, 460, 461, 464], "idx_offset": 45, "ignor": [122, 125, 130, 132, 184, 196, 213, 242, 244, 246, 324, 340, 353, 403, 417, 433, 445, 452, 460, 466], "ignore_exampl": 445, "ignore_list": 352, "ii": 448, "iii": 448, "illustr": [429, 431, 454], "iloc": 450, "imag": [426, 445], "imagin": [423, 426], "immedi": [416, 451], "immut": 445, "impact": [402, 440, 453], "imperfect": 348, "implement": [21, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 126, 178, 189, 207, 248, 256, 328, 411, 417, 423, 439, 445, 446, 447, 449, 455, 458, 459, 461, 464, 465], "impli": [423, 443, 448, 452, 457], "implicitli": 460, "import": [13, 16, 88, 97, 125, 244, 340, 417, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "impos": [423, 424, 452], "imposs": [454, 460], "improv": [3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 406, 409, 415, 417, 441, 443, 445, 448, 453], "imput": [242, 244, 399, 403, 441, 443], "impute_mod": [242, 244, 246, 403, 461], "inabl": 448, "inaccuraci": [443, 445], "inact": [44, 157, 159, 196, 211, 445], "inactive_parameter_combin": [44, 211, 445], "inc": 464, "incident": 448, "includ": [63, 65, 122, 125, 130, 132, 157, 186, 242, 319, 320, 352, 401, 412, 421, 423, 436, 437, 440, 445, 446, 448, 449, 450, 452, 454, 466], "inclus": 448, "incom": 460, "incompat": [69, 70, 71, 72, 73, 74, 101, 260, 413, 452], "incompatibilityerror": 31, "incompatibleacquisitionfunctionerror": 450, "incompatibleexplainererror": 455, "incomplet": [445, 450], "inconsist": 445, "incorpor": [448, 450, 462, 466], "incorrect": 445, "incorrectli": 445, "increas": [10, 184, 246, 306, 307, 428, 439, 440, 445, 449, 457, 464], "increment": 219, "incur": 448, "inde": 451, "indefinit": [184, 242], "indemn": 448, "indemnifi": 448, "indent": [344, 445], "independ": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 188, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 420, 445, 456, 458, 461, 462], "independentgaussiansurrog": [260, 278, 280, 282, 445], "index": [31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 213, 246, 258, 310, 311, 340, 354, 355, 420, 421, 428, 433, 435, 445, 450, 455, 457, 459, 461], "indexkernel": 445, "indic": [13, 16, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 92, 100, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 181, 183, 184, 185, 186, 213, 251, 253, 255, 260, 264, 278, 280, 282, 284, 310, 311, 314, 315, 340, 349, 385, 423, 433, 445, 448, 450, 454, 458, 461, 462], "indirect": [319, 320, 448], "indistinguish": 423, "individu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 53, 54, 117, 118, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 242, 258, 359, 417, 424, 429, 448, 451, 454, 456, 458, 464, 465], "induc": [44, 426], "industri": 464, "ineffici": [219, 452], "inequ": [45, 211, 459], "inertia_": 340, "inf": [8, 411, 412, 413, 414, 435], "infeas": [452, 454], "infer": [158, 439, 440, 445, 459], "infin": 163, "infinit": [184, 185, 322, 363, 393, 394, 445, 457], "influenti": 464, "info": 445, "inform": [26, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 295, 297, 303, 340, 356, 370, 371, 401, 402, 403, 418, 423, 432, 433, 440, 443, 445, 446, 448, 450, 454, 457, 459, 464, 465], "infring": 448, "ingest": [219, 242, 445, 457, 458], "ingredi": [423, 424, 452], "inher": [21, 157, 251, 253, 255, 260, 264, 278, 280, 282, 284, 423, 462], "inherit": 446, "init": 340, "initi": [108, 109, 110, 111, 112, 113, 114, 115, 119, 186, 188, 196, 201, 202, 203, 204, 206, 207, 219, 242, 246, 340, 385, 399, 411, 412, 413, 414, 417, 418, 428, 435, 440, 441, 445, 447, 450, 451, 453, 457, 458, 460, 461, 464], "initial_data": [242, 246, 401, 440, 461], "initial_recommend": [186, 406, 417, 418, 420, 421, 426, 435, 436, 437, 443, 458], "initial_recommender_cl": 445, "initial_strategi": 445, "initial_typ": 420, "initialis": 340, "inject": 460, "inner": [179, 354, 455, 458, 460], "innerhtml": 420, "inplac": [402, 439, 440, 466], "input": [40, 41, 42, 77, 126, 138, 141, 142, 144, 152, 155, 211, 213, 219, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 295, 297, 303, 305, 321, 340, 342, 343, 348, 349, 350, 354, 357, 358, 364, 366, 372, 377, 385, 397, 398, 400, 420, 428, 429, 439, 440, 445, 456, 460, 461, 464], "input_dim": 420, "input_label": 349, "inputtransform": 388, "insid": [417, 420, 421, 444, 460], "insight": [97, 417, 443, 445, 447, 465], "inspect": [330, 416, 423], "instabl": [445, 452], "instal": [207, 445, 446, 452, 453, 455, 457, 466], "instanc": [40, 41, 42, 53, 56, 97, 186, 213, 340, 346, 372, 412, 417, 423, 424, 443, 444, 446, 450, 451, 452, 453, 455, 457, 459, 460, 461, 466], "instanti": [417, 451], "instead": [181, 183, 184, 185, 186, 335, 349, 357, 411, 413, 414, 443, 444, 445, 451, 452, 456, 457, 460, 461, 463, 464, 466], "institut": [447, 448], "instruct": [443, 445, 463, 465], "int": [10, 13, 15, 16, 21, 31, 34, 44, 45, 51, 97, 104, 105, 106, 109, 111, 112, 113, 114, 115, 122, 125, 126, 130, 132, 146, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 218, 219, 242, 246, 248, 297, 298, 305, 306, 307, 340, 350, 359, 378, 379, 381, 382, 385, 386, 388, 411, 413, 414, 423, 426, 428, 440, 445, 446, 457], "int64": 340, "integ": [34, 146, 213, 246, 433, 445, 446, 457], "integr": [15, 445, 446, 449, 451], "intend": [405, 416, 439, 446, 458], "intens": 457, "intention": 448, "interact": [30, 31, 405, 443, 444, 451, 454, 460], "interchang": 423, "interconnect": 451, "interest": [451, 455, 456, 457, 466], "interfac": [178, 256, 266, 416, 418, 445, 448, 451, 454, 455, 465], "intermedi": [204, 385], "intern": [31, 45, 57, 184, 400, 417, 428, 445, 450, 452, 453, 457, 458, 459, 460], "internship": 447, "interplai": 445, "interpol": [109, 274, 445], "interpret": [13, 16, 213, 240, 342, 421, 423, 436, 437, 440, 453, 459, 461], "interrupt": 67, "intersect": 433, "interv": [31, 44, 151, 157, 159, 251, 253, 255, 260, 264, 278, 280, 282, 284, 303, 305, 306, 307, 428, 445, 451, 457, 460, 463], "intrins": 464, "introduc": [340, 444, 445, 452, 457, 458, 461], "intuit": [451, 455], "invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 78, 219, 335, 386, 421, 436, 444, 451, 452, 459], "invalid_config": 437, "invalid_surrogate_model": 421, "invalid_typ": 437, "invari": [53, 56, 57, 310, 311, 452], "invers": [232, 460], "invert": [31, 354], "investig": [240, 461, 462], "invok": [461, 465, 466], "involv": [31, 219, 258, 416, 423, 443, 455, 456, 457, 460, 464], "irrelev": [423, 445, 452], "irrevoc": 448, "is_bound": [364, 445], "is_cardinality_fulfil": 445, "is_continu": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155], "is_degener": 364, "is_discret": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155], "is_empti": [211, 219, 370, 371, 445], "is_eq": 45, "is_finit": 445, "is_fully_unbound": 364, "is_half_bound": 364, "is_in_rang": [137, 138, 139, 141, 142, 144, 151, 152, 155], "is_inact": 445, "is_left_bound": 364, "is_mc": 445, "is_multi_output": [122, 125, 130, 132, 445], "is_numer": [137, 138, 139, 141, 142, 144, 151, 152, 155, 445], "is_right_bound": 364, "is_stat": [181, 183, 184, 185, 186, 445, 454], "iso": 420, "isol": 451, "isoxazol": 464, "issu": [259, 316, 327, 358, 445, 448, 461, 466], "item": [41, 137, 138, 139, 141, 142, 144, 151, 152, 155, 423, 426, 439, 440, 457], "iter": [13, 16, 31, 44, 151, 184, 185, 211, 213, 242, 259, 303, 317, 322, 340, 346, 348, 350, 358, 365, 397, 398, 401, 411, 412, 413, 414, 417, 418, 426, 439, 440, 443, 445, 449, 451, 457, 458, 461, 462, 466], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 207, 211, 213, 219, 236, 246, 248, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 310, 318, 326, 330, 346, 364, 368, 370, 371, 400, 406, 416, 418, 423, 424, 426, 440, 443, 444, 446, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 464, 466], "itself": [251, 253, 255, 260, 264, 278, 280, 282, 284, 416, 439, 444, 464], "j": [402, 443, 457, 464], "jackiepho": [401, 402, 403], "jan": 443, "januari": 448, "javadi": 447, "jin": 447, "join": [354, 444], "joint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 194, 196, 258, 451, 462], "joint_acq_valu": 451, "joint_acquisition_valu": [31, 194, 196, 445, 451], "jointli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 429, 451], "jonathan": 447, "journal": [340, 443], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371, 420, 421, 435, 436, 445, 465], "json_str": 460, "juli": 447, "julian": 447, "jump": [445, 464], "jun": 340, "jupyt": 420, "just": [426, 442, 446, 460], "k": [152, 202, 340, 385, 400, 401, 402, 403, 405, 406, 408, 409, 417, 423, 429, 431, 432, 433, 445, 454, 458, 466], "karin": [443, 447], "kde": 418, "keep": [52, 155, 211, 219, 417, 445, 446], "kei": [278, 284, 290, 321, 346, 402, 446, 455], "kept": [354, 457, 462], "kernel": [104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 264, 265, 266, 267, 268, 274, 276, 340, 406, 411, 412, 413, 414, 428, 435, 445, 452, 464], "kernel_factori": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 264, 266, 267], "kernel_or_factori": 264, "kernelexplain": [95, 97, 98, 101, 455], "kernelfactori": [264, 267, 268, 274, 276, 445], "keyword": [97, 155, 403, 406, 433, 440, 445, 450, 452, 459, 461], "kgaa": [443, 447], "kian": 464, "kickstart": 460, "kind": [196, 443, 445, 448, 452, 457, 458], "kiter": [411, 412, 413, 414, 428], "klekotaroth": 149, "klekotarothfingerprint": 149, "kmean": [340, 406], "kmeansclusteringrecommend": [406, 458], "knob": 443, "know": [426, 436, 443, 444, 456, 460, 464], "knowledg": [8, 10, 443, 445, 464], "known": [452, 454, 462, 464], "koller": 464, "kwarg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 108, 110, 112, 117, 118, 119, 167, 169, 170, 171, 172, 173, 174, 175, 178, 256, 261, 266, 336, 340, 350, 363], "kwargs_conform": [155, 336, 457], "kwargs_fingerprint": [155, 336, 457], "l0": 34, "l1": 457, "l664": 276, "label": [56, 57, 144, 155, 340, 349, 423, 424, 429, 443, 445, 452, 454, 459, 461], "labelpad": 418, "labels_": 340, "laboratori": 429, "laggner": 149, "laggnerfingerprint": 149, "lambda": [411, 413, 414, 417, 423, 439, 462], "lambda_1": 420, "lambda_2": 420, "lambda_init": 420, "lanat": 455, "land": 445, "languag": [316, 424, 443], "larg": [155, 219, 340, 408, 409, 424, 445, 452, 453, 457, 461, 466], "larger": [109, 152, 386, 406, 413, 451, 452, 460, 464], "largest": [206, 385, 426, 449], "last": [184, 426, 446, 451, 458, 465], "last_call_tim": 416, "lastli": 418, "latent": 457, "later": [152, 444, 450, 451, 460], "latest": [185, 443, 446, 451], "latter": [21, 31, 310, 330, 340, 417, 423, 451, 456, 464], "law": [443, 448], "lawsuit": 448, "layer": 149, "layeredfingerprint": 149, "layout": 445, "lazi": [221, 389, 445], "lazili": [445, 453], "lazyfram": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 221], "le": 409, "le_method": 446, "lead": [87, 428, 445, 453, 460], "lean": 446, "learn": [15, 247, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 340, 406, 411, 412, 413, 414, 426, 428, 435, 439, 441, 443, 445, 452, 455, 457, 462, 463, 465], "least": [159, 184, 424, 443, 448, 450, 451], "leav": 460, "lee": 447, "left": [84, 85, 175, 242, 347, 355, 364, 412, 429, 445, 456], "left_df": 355, "leftov": 445, "legal": 448, "legend": [401, 403, 429], "len": [412, 417, 418, 423, 424, 426], "length": [110, 184, 185, 251], "lengthi": 451, "lengthscal": [109, 110, 111, 113, 114, 115], "lengthscale_initial_valu": [109, 110, 111, 113, 114, 115], "lengthscale_prior": [109, 110, 111, 113, 114, 115], "leq": 34, "less": [8, 311, 350, 385, 417, 418, 426, 451, 452, 466], "let": [400, 402, 416, 417, 418, 420, 421, 423, 424, 429, 431, 440, 443, 450, 452, 456, 460], "level": [348, 445, 446, 450, 451, 452, 458, 460], "leverag": [417, 450, 451, 458], "li": [159, 457], "liabil": 448, "liabl": 448, "lib": 444, "librari": [444, 445], "licensor": 448, "lie": [31, 251, 253, 255, 260, 264, 278, 280, 282, 284, 346], "liebig": [443, 447], "life": [443, 446, 447, 466], "lifecycl": 451, "ligand": [401, 402, 403, 405, 406, 417, 443, 455, 457], "ligand_data": 417, "ligand_smil": 417, "like": [13, 16, 159, 204, 246, 313, 340, 418, 423, 426, 443, 444, 445, 446, 450, 451, 452, 454, 460, 461, 464, 466], "likelihood": 251, "lime": [97, 100, 455], "limetabular": [95, 96, 455], "limit": [8, 274, 418, 443, 447, 448, 459, 465], "line": [344, 364, 401, 403, 417, 426, 445, 446, 449, 451, 457, 461, 464], "linear": [45, 108, 211, 278, 301, 306, 406, 407, 428, 441, 445, 446, 455, 459, 463], "linear_model": 420, "linear_regressor": 420, "linearkernel": 445, "linearli": [274, 306, 307, 428, 445], "lineplot": [400, 401, 402, 403, 417, 439, 440], "lingo": 149, "lingofingerprint": 149, "link": [55, 444, 445, 448, 457], "linspac": [411, 412, 413, 414, 418, 420, 421, 423, 429, 432, 433, 435, 439, 440, 466], "lint": [443, 445, 446], "linter": [445, 446], "list": [34, 35, 36, 37, 38, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 158, 164, 184, 185, 211, 213, 219, 220, 221, 224, 225, 226, 242, 246, 248, 319, 320, 321, 329, 336, 346, 351, 352, 353, 356, 385, 401, 406, 411, 412, 413, 414, 418, 423, 424, 426, 428, 432, 433, 440, 443, 445, 446, 448, 452, 456, 457, 458, 459, 461], "liter": [31, 97, 184, 242, 244, 246, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 348, 385, 446], "literatur": 445, "litig": 448, "littl": 444, "live": 462, "liver": [461, 464], "ll": 454, "ller": 443, "load": [389, 417, 420, 436, 437, 444, 445], "loc": [173, 174, 401, 403, 429, 450], "local": [444, 446, 453, 455, 465], "locat": [13, 16, 173, 174, 340, 450, 453, 464], "lock": 445, "lockfil": 445, "log": [173, 406], "logarithm": [4, 11, 13, 14, 379], "logei": [4, 445], "logic": [179, 258, 346, 349, 400, 445, 452, 458, 461, 466], "lognormalprior": 445, "logo": 445, "long": [451, 460, 461], "longer": [157, 445, 453], "look": [244, 406, 423, 426, 444, 449, 451, 452, 454, 455, 460, 461, 463], "look_up_target": 242, "lookup": [240, 242, 246, 248, 349, 355, 399, 400, 418, 429, 432, 441, 445, 453, 455, 465], "lookup_df": 244, "lookup_test_task": 440, "lookup_training_task": 440, "lookup_valu": [408, 409, 418, 432, 433], "lookup_withmiss": 403, "loop": [240, 242, 248, 411, 412, 413, 414, 417, 428, 445, 450, 455, 461, 465, 466], "loss": 448, "lost": 460, "lot": 431, "low": [274, 426, 443, 444, 445, 455, 457, 460], "lower": [159, 175, 305, 306, 307, 364, 401, 403, 418, 428, 439, 440, 452, 457, 463], "lower_bound": 459, "lower_threshold": 159, "lst_exclud": 351, "lt": 444, "luxuri": 451, "m": [423, 443], "m1": 444, "mac": 444, "macc": 149, "maccsfingerprint": 149, "machin": [426, 444, 446, 449, 453, 457, 463, 464], "machineri": [21, 196, 444, 446, 454, 464, 466], "made": [31, 88, 242, 385, 403, 443, 444, 448, 452, 453, 461], "magic": 464, "magnitud": [347, 348, 452, 466], "mai": [31, 44, 122, 125, 130, 132, 213, 326, 340, 442, 443, 448, 451, 454, 460, 461, 462], "mail": 448, "main": [30, 31, 443, 445, 452], "maintain": [288, 446, 454, 456], "major": [445, 461], "make": [57, 196, 251, 253, 255, 260, 264, 278, 280, 282, 284, 286, 287, 288, 316, 347, 349, 401, 403, 406, 408, 423, 424, 443, 444, 445, 446, 448, 450, 451, 452, 454, 455, 457, 460, 462, 464, 466], "make_explainer_for_surrog": 97, "malfunct": 448, "manag": [30, 211, 212, 213, 219, 382, 445, 448, 461], "mandatori": [442, 445, 463], "mani": [196, 386, 423, 432, 433, 443, 451, 452, 457, 460, 463, 464], "manipul": [445, 453], "manner": 453, "manual": [433, 444, 445, 460, 462], "map": [144, 149, 155, 244, 246, 258, 305, 306, 307, 324, 340, 349, 388, 401, 402, 403, 428, 461, 463], "mapfingerprint": 149, "mapl": [95, 96, 97, 100, 455], "maranzana": 340, "marcel": 443, "margin": 445, "mark": [448, 451, 464, 465], "markdown": [421, 436, 437, 445], "marker": [400, 401, 402, 403, 417, 439, 440, 445], "markers": [400, 402, 417, 429, 439, 440], "market": 426, "marketplac": 445, "martin": [443, 447], "mask_bad1": 411, "mask_bad2": 411, "mask_bad3": 411, "mask_good": [411, 452], "mass": 169, "master": 276, "match": [31, 89, 91, 138, 141, 142, 144, 152, 155, 158, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 295, 297, 300, 303, 324, 326, 355, 356, 397, 416, 418, 428, 433, 443, 445, 450, 451, 454, 456, 460, 461, 465], "match_attribut": 445, "match_targeta": 463, "match_targetb": 463, "materi": [426, 447, 464], "matern": 109, "maternkernel": 445, "math": [417, 423], "mathemat": 445, "mathia": 443, "matmin": 444, "matplotlib": [401, 403, 418, 429, 445], "matrix": 340, "matter": [423, 431, 446, 456], "max": [244, 300, 347, 401, 402, 403, 405, 406, 411, 412, 413, 414, 417, 418, 420, 421, 426, 428, 429, 435, 436, 437, 443, 445, 456, 460, 461, 465], "max_cardin": [34, 44, 51, 452], "max_column": [359, 423], "max_colwidth": 359, "max_it": [340, 420], "max_n_subspac": [196, 445, 452], "max_nonzero": 219, "max_row": [359, 423], "max_sum": [219, 423, 459], "max_target": 463, "max_yield": [401, 403], "maxim": [6, 13, 16, 300, 405, 418, 426, 428, 443, 445, 455, 463], "maximum": [6, 34, 44, 51, 61, 155, 196, 211, 213, 219, 305, 340, 359, 423, 424, 428, 445, 452, 457, 459], "mc": [426, 450], "md": 445, "me2pph": [401, 402, 403], "mean": [5, 8, 21, 31, 57, 128, 202, 240, 242, 244, 246, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 288, 379, 403, 406, 420, 426, 428, 429, 445, 446, 448, 449, 450, 451, 452, 454, 456, 457, 458, 460, 462, 465], "meaning": [370, 371, 456], "meaningless": [423, 449], "meanpredictionsurrog": [288, 406, 462], "meantim": [446, 452], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 75, 83, 97, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 240, 242, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 295, 297, 303, 346, 350, 355, 370, 401, 402, 403, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 428, 432, 433, 435, 442, 443, 445, 446, 449, 450, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465], "measurablemetadata": [137, 138, 139, 141, 142, 144, 151, 152, 155, 295, 297, 303, 445], "mechan": [31, 67, 125, 126, 128, 240, 243, 244, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 326, 340, 354, 366, 385, 400, 416, 417, 418, 439, 440, 445, 448, 454, 455, 457, 459, 460, 462, 464, 465], "mechanist": 443, "media": [448, 457, 464], "medic": 450, "mediocr": 463, "medium": [421, 435, 443, 448, 457], "medoid": [203, 340, 445, 458], "medoid_indices_": 340, "meet": [346, 448], "mem_estim": 466, "member": [330, 452, 457], "memori": [10, 213, 218, 219, 340, 445, 452, 453, 465], "memorys": [213, 219, 466], "mention": 449, "merchant": 448, "merck": [443, 447], "mere": [448, 456], "merg": 446, "meshgrid": [429, 439, 440], "messag": [89, 417], "meta": [31, 84, 181, 183, 184, 185, 186, 189, 411, 412, 413, 414, 428, 435, 443, 445, 465], "metadata": [31, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 211, 219, 295, 297, 303, 340, 370, 445, 447], "metadatarequest": 340, "metarecommend": [183, 184, 185, 186, 445, 454], "methanol": 423, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 92, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 206, 207, 208, 211, 213, 218, 219, 236, 251, 253, 255, 256, 258, 260, 264, 266, 267, 274, 276, 278, 280, 282, 284, 287, 292, 295, 297, 303, 313, 316, 326, 330, 340, 364, 370, 371, 384, 385, 386, 388, 418, 421, 436, 437, 442, 445, 447, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 464], "methodtyp": [416, 417, 418], "methyldiphenylphosphin": [401, 402, 403], "methylisoxazol": 464, "metric": [340, 426, 457], "mhfp": 149, "mhfpfingerprint": 149, "micromamba": 445, "middl": 454, "midpoint": 463, "might": [53, 57, 155, 213, 402, 406, 408, 412, 433, 440, 444, 446, 450, 451, 452, 453, 455, 459, 461, 464, 465, 466], "mimic": [102, 165, 452], "min": [300, 347, 400, 408, 409, 418, 428, 429, 432, 433, 439, 440, 443, 445, 456, 460, 465], "min_cardin": [34, 44, 51, 452], "min_nonzero": 219, "min_target": 463, "mind": [426, 462], "miniconda": 445, "minim": [6, 300, 340, 428, 439, 440, 445, 452, 459, 463], "minimum": [34, 44, 51, 61, 80, 152, 211, 213, 219, 385, 445, 452], "minimumcardinalityviolatedwarn": [445, 452], "minor": [445, 465], "mirror": [13, 16, 451, 460], "misc": [370, 371], "miss": [242, 244, 357, 397, 398, 403, 445, 446], "mistak": [31, 446], "mix": [248, 423, 424, 443, 452, 457, 460, 464], "mixin": 236, "mixtur": [201, 441, 445, 452, 457, 458, 464, 466], "mobil": 445, "mode": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 144, 155, 184, 242, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 300, 303, 306, 324, 346, 399, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 417, 418, 420, 421, 432, 433, 435, 436, 437, 439, 440, 441, 443, 444, 445, 451, 456, 458, 460, 465], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 81, 97, 101, 102, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 251, 253, 255, 256, 257, 258, 259, 260, 264, 278, 280, 282, 284, 288, 292, 375, 408, 409, 419, 429, 439, 440, 443, 445, 447, 449, 450, 451, 456, 457, 458, 460, 461, 463, 464, 465], "model_cl": 292, "model_cluster_num_parameter_nam": [201, 202, 203, 204], "model_from_config": 420, "model_from_python": 420, "model_json": 420, "model_param": [201, 202, 203, 204, 278, 282, 284, 421, 445], "modellist": 258, "modelnottrainederror": [251, 253, 255, 260, 264, 278, 280, 282, 284], "modif": [444, 448], "modifi": [185, 244, 288, 346, 347, 348, 445, 448, 466], "modul": [0, 1, 32, 93, 94, 102, 120, 135, 153, 165, 176, 179, 189, 192, 197, 209, 227, 228, 240, 249, 252, 262, 269, 289, 293, 296, 308, 312, 337, 338, 373, 389, 392, 443, 444, 445, 446], "modular": 446, "molecul": [55, 155, 335, 423, 457], "molecular": [336, 457], "moment": [248, 274, 446, 465], "monitor": 445, "monkeypatch": 444, "mont": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 82, 246, 400, 402, 403, 417, 426, 439, 440, 445, 450, 461], "monte_carlo_run": [246, 417], "mordr": [149, 155, 401, 402, 403, 405, 406, 412, 417, 421, 423, 436, 437, 443, 445, 452, 457], "mordredcommun": 445, "mordredfingerprint": [149, 457], "more": [8, 10, 57, 65, 85, 155, 184, 185, 211, 213, 219, 226, 242, 288, 330, 340, 344, 361, 385, 403, 406, 418, 423, 424, 439, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 457, 459, 460, 461, 462, 463, 466], "morgan": 457, "morgan_fp": [149, 445], "mors": 149, "morsefingerprint": 149, "most": [219, 242, 404, 426, 443, 446, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466], "motiv": 445, "mous": 450, "move": [13, 16, 157, 445, 460], "mpl_toolkit": 418, "mplot3d": 418, "mqn": 149, "mqnsfingerprint": 149, "mse": 426, "mu": [173, 174], "much": [402, 452, 456, 457], "multi": [97, 129, 250, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 429, 441, 443, 445, 447, 450, 464, 465], "multiarmedbandit": 426, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 40, 122, 125, 130, 132, 245, 246, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 348, 401, 402, 403, 412, 423, 426, 443, 445, 450, 452, 455, 456, 462, 463, 464, 465], "multipli": 118, "multitask": 445, "must": [53, 122, 125, 130, 132, 213, 219, 244, 248, 326, 340, 348, 397, 406, 416, 417, 423, 426, 428, 445, 446, 448, 449, 452, 453, 454, 455, 456, 457, 461], "mutual": 461, "my_attribut": 446, "my_valu": 453, "mypi": [316, 327, 443, 445, 446], "mystr": 446, "n": [26, 251, 311, 331, 385, 401, 402, 403, 405, 406, 411, 412, 413, 414, 421, 423, 426, 428, 432, 433, 435], "n_arm": 426, "n_batches_don": 31, "n_cluster": [202, 203, 340], "n_combin": 423, "n_combinations_actu": 423, "n_combinations_expect": 423, "n_compon": 201, "n_doe_iter": [242, 246, 248, 400, 401, 402, 403, 417, 418, 439, 440, 461], "n_duplic": 423, "n_estim": 421, "n_featur": 340, "n_features_new": 340, "n_fits_don": 31, "n_grid_point": 429, "n_inactive_parameter_combin": [44, 211, 445], "n_index": 340, "n_interrupted_campaign": 417, "n_iter": [408, 409, 411, 412, 413, 414, 426, 428], "n_mc_iter": [246, 248, 400, 402, 403, 417, 439, 440, 453, 461], "n_mc_run": 426, "n_mc_sampl": 21, "n_output": [122, 125, 130, 132, 340, 445], "n_permut": 423, "n_pis_ov": 417, "n_pis_over_requir": 417, "n_point": 386, "n_queri": 340, "n_raw_sampl": [196, 445, 458], "n_restart": [196, 445, 458], "n_row": 350, "n_sampl": [340, 385], "n_task": 213, "n_task_param": 445, "n_training_data": 429, "n_wrong_sum": 423, "na": 450, "nactivevalu": [411, 412, 413, 414, 428, 435], "naiv": [188, 280, 288, 406, 445, 459], "naivehybridrecommend": 445, "naivehybridspacerecommend": [433, 445, 458], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 44, 65, 88, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 160, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 225, 234, 246, 258, 260, 295, 297, 303, 310, 318, 324, 325, 326, 335, 336, 340, 344, 346, 351, 355, 356, 357, 376, 391, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 426, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 443, 445, 446, 448, 450, 451, 452, 453, 456, 459, 460, 461, 462, 463, 464, 466], "name_or_abbr": [318, 325], "namedtupl": 426, "namespac": [445, 446], "nan": [163, 251, 357, 393, 395, 396, 397, 398, 411, 412, 413, 414, 428, 435, 445, 450], "nativ": [420, 445, 462], "natur": [282, 402, 446, 452, 458, 460, 463], "navig": [420, 443, 451], "nbase": 336, "nbsp": 420, "nbviewer": 420, "nd": 443, "ndarrai": [13, 16, 126, 159, 305, 306, 307, 340, 349, 360, 364, 379, 385, 418, 426, 429, 445, 461], "ne": 423, "nearli": 463, "necessari": [356, 416, 445, 446, 451, 452, 456, 457, 459, 461, 462], "necessarili": [448, 451, 452, 459, 464], "need": [26, 31, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 248, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 326, 355, 356, 401, 402, 403, 406, 411, 414, 416, 418, 420, 423, 426, 428, 439, 440, 442, 443, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 466], "neg": [15, 429, 445, 452], "negat": [6, 45, 440, 445, 464], "neglig": 448, "neither": [8, 248, 348], "neq": 34, "nest": [340, 344, 451, 465], "neural": 464, "neurip": 464, "neutral": 8, "never": [413, 450], "nevertheless": [330, 444], "new": [31, 47, 48, 184, 186, 211, 244, 259, 305, 306, 307, 310, 340, 353, 354, 357, 405, 417, 418, 435, 443, 445, 446, 451, 452, 462, 464, 465], "new_measur": 455, "new_rec": 451, "newli": [443, 446, 454, 464], "next": [31, 400, 416, 418, 423, 424, 429, 435, 439, 440, 443, 449, 450, 451, 458, 460], "nextelements": 420, "ngboost": [282, 406, 445], "ngboostmodel": 421, "ngboostsurrog": [406, 421, 445, 462], "nice": [418, 444], "nicknam": 335, "nintern": 428, "no_duplicates_constraint": 423, "no_tl": 439, "nois": [242, 347, 348, 440, 445, 465], "noise_level": 348, "noise_perc": [242, 246, 461], "noise_ratio": 347, "noise_std": [439, 440], "noise_typ": 348, "noisi": [13, 14, 16, 17, 350, 439, 443, 445, 464], "non": [64, 65, 96, 122, 125, 130, 132, 181, 183, 184, 185, 186, 188, 213, 242, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 324, 326, 330, 347, 385, 386, 393, 394, 395, 397, 398, 423, 439, 443, 445, 448, 450, 452, 454, 455, 459, 460], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 42, 47, 48, 57, 63, 64, 65, 75, 83, 88, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 125, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 162, 163, 164, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 216, 219, 222, 225, 226, 229, 230, 232, 234, 242, 244, 246, 248, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 292, 295, 297, 303, 314, 315, 326, 336, 340, 346, 351, 352, 353, 359, 364, 365, 370, 371, 388, 393, 394, 395, 396, 397, 398, 406, 411, 412, 413, 414, 416, 417, 418, 420, 421, 428, 435, 450, 459, 463, 465], "nonetheless": 464, "nonlinear": [37, 211], "nonpredict": [199, 201, 202, 203, 204, 206, 207, 208], "nonpredictiverecommend": [204, 207, 208, 445], "nonzero": [34, 44, 219, 445], "noqa": [411, 446], "nor": [8, 348, 442], "norecommenderslefterror": [184, 185], "noreturn": [188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 261], "normal": [172, 173, 174, 411, 413, 414, 428, 444, 445, 448, 456, 459], "normaliz": 456, "normalize_input_dtyp": 445, "normalprior": 445, "not_a_param": 421, "notabl": [445, 454, 462], "note": [34, 44, 57, 213, 242, 246, 248, 259, 260, 340, 346, 347, 348, 401, 402, 403, 406, 412, 416, 420, 421, 423, 428, 432, 433, 435, 436, 437, 442, 443, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 464, 465], "notebook": 420, "noteworthi": 451, "noth": [15, 31, 34, 42, 44, 45, 51, 86, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 186, 188, 194, 196, 201, 202, 203, 204, 207, 211, 213, 219, 251, 264, 278, 282, 284, 295, 297, 303, 370, 371, 448, 457], "notic": [416, 446, 448, 460, 462], "notimplementederror": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 126, 157, 226, 229, 230, 248, 251, 253, 255, 259, 260, 264, 278, 280, 282, 284], "notwithstand": 448, "now": [400, 401, 402, 403, 405, 406, 411, 413, 416, 417, 418, 423, 424, 426, 428, 429, 431, 435, 436, 439, 440, 442, 443, 445, 464, 466], "np": [126, 340, 408, 409, 411, 412, 413, 414, 418, 420, 421, 423, 424, 426, 429, 431, 432, 433, 435, 439, 440, 450, 452, 457, 461, 466], "nrecommend": [405, 406, 428, 432, 433], "nu": 109, "num": [354, 368], "num_disc_1": [428, 451], "num_disc_2": 428, "num_experi": [242, 400, 401, 402, 403, 417, 439, 440], "num_fantasi": 10, "num_parameter_1": 414, "num_parameter_2": 414, "num_parameter_3": 414, "num_parameter_4": 414, "num_parameter_5": 414, "num_parameter_6": 414, "num_sampl": 114, "num_valu": 459, "number": [10, 15, 21, 31, 44, 114, 122, 125, 130, 132, 155, 178, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 242, 246, 248, 251, 340, 350, 359, 364, 368, 380, 385, 386, 401, 402, 403, 408, 409, 411, 412, 413, 414, 418, 423, 426, 432, 439, 440, 443, 444, 445, 449, 451, 452, 456, 457, 459, 460, 461, 466], "numer": [13, 16, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 87, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 211, 219, 244, 303, 347, 348, 355, 386, 397, 398, 400, 405, 408, 423, 424, 443, 445, 452, 453, 455, 456, 457, 459, 461, 463], "numerical_measurements_must_be_within_toler": [31, 397, 445, 451], "numerical_onli": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "numericalcontinuousparamet": [45, 63, 157, 211, 400, 408, 409, 424, 429, 431, 433, 440, 459, 461, 465], "numericaldiscreteparamet": [219, 401, 402, 403, 405, 406, 408, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 428, 432, 433, 435, 436, 437, 439, 440, 443, 459, 460, 461, 465, 466], "numericaltarget": [244, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 417, 418, 420, 421, 428, 429, 432, 433, 435, 436, 437, 439, 440, 443, 445, 456, 460, 461, 465], "numericcontinu": 433, "numparam1": 414, "numparam2": 414, "numparam3": 414, "numparam4": 414, "numparam5": 414, "numparam6": 414, "numpi": [159, 340, 349, 360, 364, 374, 376, 408, 409, 411, 412, 413, 414, 418, 420, 421, 423, 424, 426, 429, 431, 432, 433, 435, 439, 440, 445, 450, 452, 461, 466], "nuniqu": 423, "nyou": [432, 433], "o": [340, 400, 401, 402, 403, 405, 406, 409, 411, 412, 413, 414, 417, 418, 421, 423, 426, 429, 439, 440, 443, 452, 453, 457], "o2": [401, 402, 403], "obj": [162, 163, 164, 230], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 218, 219, 220, 221, 230, 231, 234, 236, 251, 253, 255, 256, 258, 260, 264, 267, 278, 280, 282, 284, 291, 295, 297, 303, 313, 316, 324, 326, 340, 348, 355, 356, 358, 361, 364, 369, 370, 371, 388, 400, 405, 416, 417, 418, 420, 421, 426, 429, 431, 433, 436, 437, 444, 445, 446, 448, 452, 454, 455, 458, 459, 461, 462, 463, 465, 466], "objective_json": 460, "oblig": 448, "observ": [240, 251, 253, 255, 260, 264, 278, 280, 282, 284, 426, 461, 463], "obsolet": 445, "obtain": [242, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 402, 418, 426, 429, 440, 443, 445, 451, 455, 456, 460, 464], "oc": [401, 402, 403, 405, 406], "oc1": [401, 402, 403], "occur": [56, 446], "occurr": [450, 452], "octanol": [452, 457], "off": [8, 248, 331, 412, 445, 450, 452, 453, 456, 463], "offer": [326, 418, 423, 426, 432, 442, 443, 444, 448, 449, 452, 454, 457, 458, 460, 461, 462, 464, 466], "offset": [45, 112], "offset_initial_valu": 112, "offset_prior": 112, "often": [424, 426, 444, 449, 452, 454, 455, 457, 460, 466], "oftentim": [460, 461], "oh": [141, 146, 402, 412, 421, 426, 428, 435, 436, 437, 443, 459, 460], "ok": 428, "old": [464, 465], "omit": [13, 16, 194, 196, 246, 326, 416, 443, 459, 460], "onc": [246, 417, 457, 461], "onclick": 420, "one": [13, 16, 21, 31, 63, 65, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 169, 178, 179, 184, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 213, 226, 244, 264, 288, 310, 311, 344, 350, 401, 402, 403, 406, 408, 423, 426, 428, 437, 439, 440, 442, 443, 444, 445, 446, 448, 450, 451, 452, 454, 456, 457, 459, 460, 461, 462, 463, 464], "onehot": 402, "ones": [213, 355, 402, 433, 445, 450, 464], "ongo": [417, 446, 464], "onli": [10, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 97, 109, 122, 125, 130, 132, 155, 207, 213, 219, 244, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 326, 327, 330, 340, 344, 346, 355, 357, 364, 385, 386, 401, 406, 411, 412, 417, 418, 420, 421, 423, 432, 433, 440, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 466], "onlin": 426, "onnx": [259, 260, 375, 419, 443, 445, 462], "onnx_input_nam": [260, 420], "onnx_str": [260, 420, 445], "onto": [13, 16, 446], "open": [31, 44, 157, 159, 251, 253, 255, 260, 264, 278, 280, 282, 284, 446], "opentelemetri": 445, "oper": [42, 45, 54, 232, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 349, 373, 408, 409, 413, 414, 423, 424, 444, 445, 450, 452, 453, 454, 455, 458, 460, 465], "operator_convert": 420, "opposit": 452, "optim": [12, 21, 31, 44, 45, 76, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 240, 242, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 346, 402, 404, 405, 408, 409, 417, 418, 423, 426, 428, 433, 445, 447, 449, 452, 453, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465], "optimize_acqf": [45, 196], "optimize_acqf_": 45, "optimize_acqf_discret": 196, "optimize_acqf_mix": 196, "option": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 88, 93, 97, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 232, 234, 242, 246, 248, 278, 282, 284, 295, 297, 303, 326, 336, 340, 346, 351, 352, 353, 403, 406, 420, 421, 426, 444, 445, 446, 449, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 466], "oracl": 461, "orchestr": [446, 451], "order": [213, 219, 417, 426, 442, 443, 445, 446, 451, 452, 457, 460, 464], "ordin": 463, "org": [276, 316, 353, 420, 443, 448], "organ": 446, "origin": [26, 31, 157, 310, 311, 321, 340, 349, 358, 435, 442, 445, 446, 448, 458, 460, 462], "originalhtml": 420, "originalstyl": 420, "originalwidth": 420, "orthogon": 446, "oserror": 444, "other": [53, 116, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 211, 295, 297, 303, 311, 401, 403, 405, 406, 408, 409, 417, 424, 426, 433, 439, 440, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 466], "otherwis": [45, 61, 137, 138, 139, 141, 142, 144, 151, 152, 155, 207, 358, 385, 448, 449, 454, 456, 464], "our": [400, 411, 413, 416, 417, 418, 421, 423, 424, 426, 429, 431, 432, 433, 436, 437, 439, 440, 443, 446, 449, 451, 452, 454, 460, 461], "out": [219, 385, 428, 440, 443, 448, 456, 461, 464], "out_par": 429, "out_y0": 429, "out_y1": 429, "outcom": [178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 402, 443, 450, 457, 463], "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 97, 119, 122, 125, 130, 132, 251, 253, 255, 260, 264, 278, 280, 282, 284, 340, 348, 349, 350, 400, 429, 439, 440, 444, 445, 447, 450, 461, 465], "output_label": 349, "outputscal": 119, "outputscale_initial_valu": 119, "outputscale_prior": 119, "outsid": [31, 157, 185, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 306, 307, 346, 428, 445, 460], "outstand": 448, "over": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 211, 246, 423, 442, 445, 449, 451, 453, 454, 464], "overal": [213, 420, 421, 423, 424, 426, 445, 446, 451, 456, 464], "overhead": 453, "overlap": [64, 65, 157, 408, 409, 445, 452], "overrid": [232, 234, 416, 445], "overridden": [416, 446], "overview": [443, 447, 460], "overwritten": 433, "own": [188, 400, 424, 443, 444, 445, 446, 448, 452, 457], "owner": 448, "ownership": 448, "p": [400, 401, 402, 403, 405, 406, 408, 409, 416, 418, 432, 439, 440, 446, 454, 455, 462, 466], "p1": [459, 460, 461], "p1_json": 460, "p1_via_json": 460, "p2": [459, 460, 461], "p2_json": 460, "p2_via_json": 460, "p3c4": [401, 402, 403], "p_cont": 459, "p_disc": 459, "p_g1_amount": 424, "p_g2_amount": 424, "p_g3_amount": 424, "p_i": 34, "pack": 460, "packag": [97, 149, 207, 444, 445, 446, 453, 457, 461, 462, 466], "page": [420, 443, 445, 446, 454], "pair": [310, 429, 443, 457], "pairwis": 340, "pairwise_dist": 340, "pam": [203, 340], "pamclusteringrecommend": 458, "panda": [52, 220, 238, 239, 244, 335, 340, 360, 400, 401, 402, 403, 408, 409, 411, 417, 418, 423, 424, 428, 429, 432, 433, 439, 440, 445, 450, 452, 453, 457, 459, 460, 461], "panic": 442, "paper": [443, 464], "paper_fil": 464, "parallel": [246, 445, 446, 465], "parallel_run": [246, 453], "param": [340, 419, 420, 441], "param1": [459, 461], "param2": [459, 461], "param_1": 450, "param_2": 450, "param_bounds_comp": 445, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 68, 85, 89, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 130, 132, 137, 138, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 215, 218, 219, 220, 221, 224, 225, 226, 232, 234, 236, 240, 242, 244, 246, 248, 251, 253, 255, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 286, 288, 290, 292, 295, 297, 303, 305, 306, 307, 310, 311, 319, 320, 321, 324, 326, 329, 330, 331, 334, 335, 336, 340, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 368, 370, 371, 372, 377, 378, 379, 381, 382, 385, 386, 388, 397, 398, 400, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 426, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 443, 445, 446, 452, 453, 454, 456, 460, 461, 462, 464, 465], "parameter": [169, 170, 171, 172, 173, 174, 175], "parameter_json": 460, "parameter_nam": [211, 213, 219, 433], "parameter_names_in_cardinality_constraint": 211, "parameterencod": [138, 146, 147, 149, 152], "parametr": 452, "paramnam": 420, "paramprefix": 420, "parent": 446, "parentel": 420, "pareto": [12, 130, 427, 441, 443, 445, 456], "paretoobject": [429, 443, 445, 450, 455, 465], "park": 340, "pars": [366, 445], "parser": 445, "part": [15, 26, 31, 40, 73, 189, 211, 213, 219, 346, 398, 421, 433, 436, 437, 439, 440, 445, 446, 448, 449, 450, 451, 452, 457, 458, 459, 460, 465, 466], "parti": [338, 448, 461], "partial": [26, 417, 443, 445, 465], "particl": 464, "particular": [31, 219, 240, 416, 429, 433, 442, 443, 444, 446, 448, 451, 456, 457, 459, 460, 461], "particularli": [326, 451], "partit": [203, 246, 248, 445, 458, 461], "partitionexplain": [95, 98], "pass": [31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 97, 155, 201, 202, 203, 204, 213, 219, 230, 264, 278, 282, 284, 340, 350, 356, 423, 435, 440, 445, 446, 450, 454, 455, 456, 457, 460], "passthrough": [28, 123, 215, 268, 372], "past": 420, "patch": [417, 445], "patent": 448, "path": [88, 402, 423, 445, 446, 453, 466], "pattern": [149, 446, 464], "patternfingerprint": 149, "pd": [31, 194, 196, 244, 258, 310, 311, 354, 400, 401, 402, 403, 408, 409, 411, 417, 418, 423, 424, 428, 429, 432, 433, 439, 440, 445, 450, 452, 454, 457, 459, 460, 461], "pdf": 464, "peek": 460, "pend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 443, 445, 465], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 445, 450, 451], "per": [242, 258, 401, 402, 403, 406, 423, 428, 432, 439, 440, 445, 457, 459, 461], "percent": [242, 448], "percentag": [196, 348, 406, 411, 412, 413, 414, 423, 428, 435, 440, 458], "perf_count": 416, "perfectli": 460, "perform": [196, 242, 340, 355, 402, 411, 412, 413, 414, 418, 423, 436, 439, 440, 442, 443, 445, 446, 448, 449, 450, 451, 453, 455, 457, 458, 461, 462, 464, 465], "period": 110, "period_length_initial_valu": 110, "period_length_prior": 110, "periodickernel": 445, "perm_inv_constraint": 423, "perman": [443, 465], "permiss": [443, 448], "permut": [53, 56, 57, 311, 445, 452], "permutation_invari": 53, "permutationexplain": [95, 98], "perpetu": 448, "persist": [445, 447, 451, 453, 460, 462], "perspect": 460, "pertain": 448, "pharmacophor": 149, "pharmacophorefingerprint": 149, "phase": [186, 424], "phaseagent1": 424, "phaseagent2": 424, "phcpho": [401, 402, 403, 405, 406], "phenomenon": 451, "philosophi": 460, "physic": [455, 461], "physiochemicalproperti": 149, "physiochemicalpropertiesfingerprint": 149, "pi": [7, 406, 417, 418], "pi_max": 418, "pi_per_iter": 418, "pi_required_fract": 417, "pi_threshold": 417, "pickl": 445, "pictur": 443, "piec": [426, 443, 451, 452], "piecewis": 111, "piecewisepolynomialkernel": 445, "pin": [26, 445], "pin_discret": 26, "pinned_part": 26, "pip": [443, 445, 446, 452, 453, 455, 466], "pipelin": [340, 439, 440, 445, 446], "pival": [401, 402, 403, 405, 406], "pl": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "place": [13, 16, 34, 244, 346, 347, 348, 420, 421, 423, 426, 444, 445, 446, 448, 451, 454, 457, 460, 464], "placehold": 313, "plai": [451, 455, 463], "plain": 268, "plainkernelfactori": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 264], "plan": [259, 443, 454, 457], "platt": 464, "pleas": [340, 420, 421, 443, 446, 449, 455, 458], "plenti": 455, "plot": [97, 99, 242, 401, 403, 429, 440, 445, 462, 464, 465], "plot_abegin_convert_pipelin": 375, "plot_ebegin_float_doubl": 375, "plot_kmedoids_digit": 340, "plot_typ": 97, "plt": [401, 403, 418, 429], "plu": [244, 443, 446], "plugin": 445, "pl\u00f6tz": 447, "pm": [5, 406], "png": [401, 403], "po16": 457, "poetri": 445, "point": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 30, 31, 97, 152, 157, 178, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 206, 207, 208, 211, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 340, 355, 374, 375, 383, 384, 385, 386, 390, 401, 405, 406, 417, 424, 429, 432, 433, 439, 440, 442, 443, 445, 447, 449, 450, 451, 454, 455, 456, 458, 459, 465, 466], "points_per_dim": [418, 432, 433, 439, 440], "polar": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 221, 340, 443, 445, 447, 465, 466], "poli": 418, "polici": 426, "polycollect": 418, "polym": 457, "polynomi": [111, 112], "polynomialkernel": 445, "polytop": 445, "popul": 423, "popular": [455, 457, 462], "posit": [13, 16, 97, 326, 385, 445, 452, 455, 456], "possibl": [31, 44, 158, 211, 219, 220, 221, 240, 326, 340, 346, 403, 417, 418, 423, 428, 443, 445, 448, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 463, 464, 466], "possibli": [445, 450, 451], "post": [456, 457, 465], "post_hook": [326, 416, 417, 418], "posterior": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 194, 196, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 287, 406, 445, 449, 462], "posterior_mean": [251, 426], "posterior_mod": 251, "posterior_stat": [31, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 445, 451], "posteriorlist": 258, "posteriorstandarddevi": [426, 445, 449], "postprocess": 335, "potassium": [401, 402, 403, 405, 406], "potenti": [213, 443, 444, 445, 446, 451, 452, 455, 456, 459, 466], "power": [112, 448, 452, 458], "pp": 340, "pph3": [401, 402, 403], "pr": [445, 446], "practic": [449, 455, 458], "pre": [158, 184, 267, 385, 419, 444, 445, 446], "pre_hook": [326, 416], "preced": 453, "precis": [57, 184, 211, 359, 375, 376, 391, 445, 465], "precomput": [144, 340], "predefin": [451, 458], "predict": [31, 81, 204, 251, 253, 255, 260, 264, 278, 280, 282, 284, 340, 443, 445, 449, 450, 456, 461, 462, 464, 465], "predictor": 286, "prefer": [31, 448, 454, 456, 460], "prefix": [336, 420], "preliminari": 464, "prepar": [418, 446, 448, 466], "preprocess": 445, "presenc": [196, 444, 445], "present": [31, 72, 97, 122, 125, 130, 132, 213, 310, 311, 326, 340, 405, 426, 445, 452, 461, 466], "preset": [264, 271, 274, 276, 445], "pressur": [413, 420, 421, 435, 436, 437, 443, 452], "pretrain": [260, 419, 441], "pretti": 359, "pretty_print_df": [423, 445], "prevent": [157, 229, 230, 326, 444, 445, 446], "previou": [184, 417, 418, 445, 451, 464], "previous": [31, 401, 402, 403, 405, 413, 450, 451], "price": 457, "primari": 451, "primarili": 449, "principl": [423, 426, 462], "print": [244, 344, 359, 401, 402, 403, 405, 406, 408, 409, 413, 416, 417, 420, 421, 423, 424, 426, 431, 432, 433, 435, 436, 437, 443, 445, 459, 466], "print_parameter_names_hook": 416, "printer_inst": 416, "prior": [108, 109, 110, 111, 112, 113, 114, 115, 119, 169, 170, 171, 172, 173, 174, 175, 251, 274, 414, 443, 444, 445], "priori": [452, 460, 464], "privat": [445, 447], "probabilist": 449, "probability_of_improv": 418, "probabilityofimprov": [417, 418], "probabl": [7, 19, 21, 406, 415, 417, 441, 445], "problem": [76, 423, 424, 426, 439, 440, 445, 446, 451, 456, 460], "problemat": [330, 444, 457], "proce": [242, 405, 450, 453], "procedur": [449, 464], "proceed": 464, "process": [31, 102, 262, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 354, 385, 406, 416, 423, 426, 439, 440, 445, 446, 449, 450, 451, 452, 453, 454, 456, 457, 460, 464], "prod": 414, "prod_constraint": 414, "prod_i": 456, "produc": [122, 125, 126, 130, 132, 244, 443, 445, 446, 453, 461], "product": [58, 118, 213, 219, 220, 221, 322, 410, 441, 443, 445, 448, 452, 454, 465, 466], "product_paramet": [219, 423, 459], "productkernel": 445, "programmat": 423, "progress": [31, 182, 418, 445, 454], "prohibit": 449, "project": [418, 445], "promin": [446, 448], "promis": [417, 450], "prompt": 453, "proper": 445, "properli": [26, 428, 444, 445, 459], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 206, 207, 208, 211, 213, 214, 218, 219, 251, 253, 255, 258, 260, 264, 267, 271, 274, 276, 278, 280, 282, 284, 295, 297, 300, 301, 303, 315, 316, 364, 370, 371, 384, 388, 445, 446, 452, 454, 457], "proport": 440, "propos": 451, "protobuf": 445, "protocol": [177, 178, 256, 266, 330, 445], "prototyp": 447, "provid": [13, 15, 16, 31, 45, 97, 101, 126, 144, 155, 158, 178, 184, 185, 188, 189, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 232, 236, 240, 242, 244, 246, 248, 251, 253, 255, 260, 264, 274, 276, 278, 280, 282, 284, 310, 322, 326, 340, 342, 347, 348, 353, 356, 360, 370, 371, 385, 386, 400, 401, 402, 403, 416, 421, 423, 429, 431, 432, 433, 436, 439, 440, 443, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "prune": [12, 13, 14, 16, 17], "prune_baselin": [12, 13, 14, 16, 17], "pstd": [6, 445, 449], "pubchem": 149, "pubchemfingerprint": 149, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 206, 207, 208, 211, 213, 214, 218, 219, 236, 251, 253, 255, 256, 258, 260, 264, 266, 267, 271, 274, 276, 278, 280, 282, 284, 295, 297, 300, 301, 303, 313, 315, 316, 340, 364, 370, 371, 384, 388, 445, 446], "publicli": 448, "publish": [443, 445], "pull": [426, 445], "punish": 8, "pure": [8, 10, 15, 179, 188, 191, 194, 196, 199, 201, 202, 203, 204, 206, 207, 208, 213, 248, 259, 386, 432, 445, 465], "purerecommend": [181, 183, 184, 185, 186, 188, 194, 199, 445], "purpl": 429, "purpos": [15, 416, 417, 420, 426, 443, 444, 446, 448, 451, 454, 460, 466], "push": [44, 446], "put": [423, 426, 453, 457], "puzzl": 443, "py": [276, 340, 411, 413, 414, 445, 453], "py313": 446, "pyarrow": 445, "pydant": 445, "pydoclint": [445, 446], "pydocstyl": 446, "pylint": 445, "pymatgen": 444, "pypi": [443, 445], "pyplot": [401, 403, 418, 429], "pyproject": 445, "pytest": [445, 446], "python": [30, 316, 327, 402, 421, 436, 437, 443, 444, 445, 446, 451, 452, 453, 460], "python310": 444, "pytorch": 445, "pyupgrad": 445, "q": [111, 286, 287, 406, 450], "qei": [9, 406, 436, 437, 445], "qkg": [10, 445], "qlogei": [11, 406, 445], "qlogexpectedimprov": 406, "qlognehvi": [13, 16], "qlognei": [14, 445], "qlognoisyexpectedhypervolumeimprov": [445, 456], "qlognparego": 445, "qnegintegratedposteriorvari": 449, "qnehvi": 16, "qnei": [17, 445], "qnipv": [15, 445, 449], "qnoisyexpectedhypervolumeimprov": 445, "qpi": [19, 406], "qposteriorstandarddevi": 449, "qpstd": [18, 445, 449, 451], "qsimpleregret": 21, "qsr": [20, 445], "qt": 21, "qthompsonsampl": [426, 445], "quadrat": [115, 400, 429], "qualiti": 446, "quantif": 464, "quantifi": [426, 449, 464], "quantil": [31, 251, 253, 254, 255, 260, 264, 278, 280, 282, 284, 451], "quantiti": [31, 55, 451, 455, 456, 462, 466], "quantum": 144, "qucb": [22, 406, 445, 449], "queri": [179, 189, 240, 242, 244, 429, 443, 451, 454, 461], "queryselectoral": 420, "question": [446, 451, 464], "quick": 450, "quickli": 452, "qupperconfidencebound": 449, "qvarucb": 445, "r": [44, 401, 402, 403, 405, 406], "radial": 113, "radiu": [149, 445, 457], "rais": [13, 15, 16, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 97, 101, 126, 134, 157, 158, 163, 164, 184, 185, 211, 213, 219, 225, 226, 229, 230, 242, 244, 248, 251, 253, 255, 259, 260, 261, 264, 278, 280, 282, 284, 292, 311, 324, 326, 329, 331, 334, 342, 343, 344, 346, 347, 348, 350, 355, 356, 357, 372, 385, 386, 397, 398, 416, 417, 418, 433, 444, 445, 446, 450, 458], "rand": 420, "random": [15, 114, 206, 211, 213, 242, 244, 246, 283, 284, 340, 346, 384, 385, 386, 400, 401, 402, 403, 406, 417, 418, 420, 424, 426, 429, 440, 443, 445, 449, 457, 458, 461, 466], "random_campaign": 400, "random_forest": [284, 406], "random_se": [242, 246, 417, 461], "random_st": 340, "random_tie_break": [207, 385, 445, 453], "randomforestmodel": 421, "randomforestregressor": 284, "randomforestsurrog": [406, 445, 462], "randomli": [196, 208, 385, 400, 402, 429, 449, 455, 458], "randomrecommend": [400, 401, 402, 403, 406, 411, 412, 413, 414, 416, 417, 418, 424, 426, 428, 445, 450, 458], "randomst": 340, "rang": [44, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 295, 346, 347, 400, 408, 409, 411, 412, 413, 414, 418, 423, 426, 428, 431, 432, 433, 440, 443, 445, 452, 459, 460, 461, 463, 466], "rank": 463, "rare": 445, "rastrigin": [408, 409, 432, 433], "rate": [170, 251, 426], "rather": [435, 444, 449, 460], "ration": 115, "ravel": [429, 439, 440], "raw": [196, 460], "rbf": 113, "rbfkernel": 445, "rdf": 149, "rdffingerprint": 149, "rdkit": [149, 411, 413, 414, 445, 452, 457], "rdkit2ddescriptor": [149, 402, 411, 413, 414, 445], "rdkit2ddescriptorsfingerprint": 149, "rdkitfingerprint": 149, "re": [417, 432, 433, 446, 458], "reach": [305, 307, 428], "reactant": [455, 457], "reaction": [402, 405, 443, 452, 455, 457, 464], "reactor": [450, 464], "reactora": 464, "reactorb": 464, "reactorc": 464, "read": [144, 213, 402, 405, 443, 445, 446], "read_csv": [401, 402, 417], "read_excel": 403, "readabl": [218, 359, 368, 435, 445, 447, 448, 460], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 242, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 446, 450], "readm": [445, 446], "reagent": [452, 457], "real": [364, 443, 451, 463], "realist": 461, "realiz": [240, 461], "reason": [42, 201, 202, 203, 204, 402, 432, 445, 446, 448, 449, 450, 452, 453, 457, 461], "reassembl": 460, "rebas": 446, "rec": [411, 412, 413, 414, 428, 450, 451], "rec_finish": 450, "rec_next": 450, "rec_par": 429, "rec_pend": 450, "rec_y0": 429, "rec_y1": 429, "receiv": [448, 460], "recip": 446, "recipi": 448, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 73, 84, 85, 97, 138, 141, 142, 144, 152, 155, 157, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 206, 207, 208, 240, 242, 256, 258, 259, 346, 348, 350, 400, 401, 402, 403, 404, 408, 409, 411, 412, 413, 414, 416, 417, 418, 424, 426, 428, 429, 436, 437, 439, 440, 441, 442, 443, 445, 446, 449, 453, 455, 457, 461, 462, 464, 465, 466], "recommendation_orig": 435, "recommendation_recr": 435, "recommended_arm_idx": 426, "recommender_with_hook": 417, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 97, 181, 183, 184, 185, 186, 191, 194, 196, 256, 258, 416, 418, 442, 445, 450], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371, 451, 460], "record": [31, 464], "recreat": [271, 435, 460], "recreate_model": 421, "recurs": [181, 183, 184, 185, 186, 319, 320], "red": [420, 429], "redesign": 445, "redistribut": 448, "reduc": [155, 418, 426, 439, 440, 446, 452, 454, 457], "reduct": 465, "ref": 443, "refactor": 445, "refer": [13, 16, 240, 276, 325, 340, 346, 355, 375, 401, 402, 403, 406, 408, 409, 411, 412, 413, 414, 416, 418, 420, 421, 423, 428, 432, 433, 435, 444, 445, 451, 455, 456, 457, 458, 459, 460, 461, 462, 464], "referenc": 446, "reference_point": [13, 16], "refin": [417, 443, 445, 451, 454], "reflect": [188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 418, 445, 446, 449, 452, 457], "regard": [34, 40, 408, 409, 446, 448], "regardless": 462, "regim": [443, 445, 455], "region": 159, "regist": [326, 415, 417], "register_custom_architectur": 445, "register_hook": [415, 416, 417, 418, 445], "registr": 445, "regress": 278, "regressor": 420, "regret": [20, 21], "regroup": 445, "regular": [21, 157, 288, 420, 431, 444, 445, 450, 464], "reinstal": 443, "rel": [13, 16, 44, 242, 347, 452, 456], "relat": [55, 122, 125, 127, 130, 132, 145, 213, 231, 299, 309, 433, 439, 440, 442, 445, 446, 451, 452, 464], "relationship": [439, 440, 443, 446, 456, 464], "relative_perc": 348, "relative_threshold": [44, 445, 452], "releas": [443, 445], "relev": [53, 97, 244, 355, 356, 357, 412, 423, 445, 446, 451, 452, 454, 464, 466], "reli": [444, 445, 456], "reliabl": 457, "reloc": 445, "remain": [56, 157, 186, 248, 306, 400, 406, 411, 412, 413, 414, 423, 426, 428, 433, 435, 439, 440, 448, 457, 460, 461], "remain_switch": [186, 445], "remaind": 386, "remind": 445, "remot": 446, "remov": [52, 55, 56, 219, 423, 443, 446, 452, 459, 465], "renam": [402, 439, 440, 445, 446], "render": [97, 420], "reoccur": 464, "reorder": 445, "reorgan": 445, "repeat": [426, 445, 446, 450, 451], "repetit": [246, 406, 417], "rephras": 452, "replac": [420, 432, 433, 445, 446], "replic": [251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 445, 456, 460, 465], "repo": 445, "report": [178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 426, 444], "repositori": [402, 443, 446], "repr": 420, "repres": [13, 16, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 117, 118, 144, 213, 248, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 342, 360, 364, 368, 385, 400, 423, 424, 426, 429, 436, 437, 443, 445, 448, 451, 456, 457, 459, 461, 466], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 218, 219, 236, 251, 253, 255, 256, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 331, 333, 342, 344, 346, 359, 364, 370, 371, 411, 412, 413, 414, 420, 422, 428, 435, 445, 450, 451, 457, 460, 461, 465, 466], "reproduc": [417, 426, 429, 445, 448, 465], "reproduct": 448, "request": [31, 84, 85, 126, 184, 185, 186, 226, 251, 253, 254, 255, 260, 264, 267, 278, 280, 282, 284, 350, 372, 385, 386, 429, 442, 445, 450, 451, 454, 455], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 45, 51, 82, 97, 186, 219, 292, 326, 405, 416, 417, 420, 424, 426, 428, 432, 436, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466], "rerun": 420, "reserv": [443, 446], "reset": [31, 450], "reset_index": [439, 450], "reshap": 429, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 412, 414, 423, 460], "resolv": 335, "resort": [288, 446, 460, 466], "resource_track": 444, "resp": [214, 403, 433], "respect": [31, 196, 214, 242, 246, 310, 346, 423, 424, 445, 446, 451, 452, 454, 455, 456, 460, 461, 462, 463, 466], "respond": 442, "respons": [181, 183, 184, 185, 186, 448, 451, 458], "restart": [184, 196], "restor": 460, "restr": 21, "restrain": 457, "restrict": [213, 219, 240, 246, 248, 411, 424, 445, 454, 461, 464, 465], "result": [10, 13, 16, 31, 155, 157, 219, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 346, 354, 401, 402, 403, 405, 420, 421, 423, 424, 426, 428, 429, 431, 439, 440, 443, 445, 447, 448, 449, 451, 452, 453, 455, 457, 458, 460, 461, 464, 465, 466], "result_baselin": [439, 440], "result_fract": 440, "results_interrupt": 417, "results_uninterrupt": 417, "retain": [448, 452], "retrain": [259, 260, 462], "retriev": [213, 240, 318, 319, 320, 334, 445, 446, 461], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 97, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 215, 216, 219, 220, 221, 222, 224, 225, 226, 229, 230, 232, 233, 234, 236, 238, 239, 242, 244, 246, 248, 251, 253, 255, 256, 258, 260, 261, 264, 267, 268, 272, 278, 280, 282, 284, 286, 287, 288, 290, 292, 295, 297, 303, 305, 306, 307, 310, 311, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 333, 334, 335, 336, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 370, 371, 372, 377, 378, 379, 385, 386, 388, 393, 394, 395, 396, 397, 398, 400, 411, 417, 418, 420, 423, 426, 429, 439, 445, 451, 452, 461, 462, 466], "return_std": 420, "reus": [186, 445], "reuse_last": 184, "reveal": [418, 424, 440], "review": 446, "revis": [445, 448], "reward": [8, 426], "rework": 445, "rewrit": 445, "rff": 114, "rffkernel": 445, "rh": [45, 47, 48, 408, 409, 424, 452], "right": [45, 175, 355, 364, 401, 403, 412, 426, 443, 444, 446, 448, 452, 454, 456, 457, 463], "right_df": 355, "rihana": [443, 447], "rim": [443, 447], "risk": [8, 444, 448, 451], "roam": 444, "robust": [443, 445, 464], "robustli": 288, "role": [445, 446, 451, 455, 456, 461, 463, 465], "room": [418, 451], "root": [402, 443, 446, 452], "round": [359, 408, 420, 421, 452], "roundtrip": [445, 460], "rout": [340, 460], "routin": 44, "row": [13, 16, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 126, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 244, 310, 311, 340, 347, 350, 354, 355, 357, 359, 379, 401, 403, 411, 412, 413, 414, 423, 424, 428, 435, 445, 450, 451, 454, 459, 461], "rowei": 464, "roya": 447, "royalti": 448, "rq": 115, "rqkernel": 445, "rsc": 443, "ruff": [445, 446], "rule": [416, 445], "run": [242, 246, 401, 402, 403, 417, 418, 439, 440, 443, 444, 445, 446, 451, 454, 457, 460, 461, 465, 466], "run_full_initial_data": 401, "run_impute_mod": 403, "runner": [246, 411, 413, 414, 453], "runtim": [375, 444, 450], "runtimeerror": [184, 416], "rv": 426, "s3": 445, "s41586": [276, 353], "safe": [445, 446, 451], "safeti": 326, "sai": 452, "said": 446, "sake": 423, "same": [55, 134, 186, 219, 225, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 321, 406, 417, 420, 421, 423, 426, 429, 435, 444, 445, 452, 453, 454, 460, 461, 462, 464], "sampl": [10, 15, 21, 44, 196, 206, 207, 208, 211, 340, 383, 384, 385, 386, 401, 406, 411, 412, 413, 414, 426, 428, 429, 431, 435, 440, 443, 445, 447, 455, 465], "sample_from_full_factori": [211, 445], "sample_inactive_paramet": 44, "sample_uniform": [211, 429, 431, 445, 461], "sampler": [406, 411, 412, 413, 414, 428, 435], "samples_full_factori": 445, "samples_random": 445, "sampling_algorithm": [384, 449], "sampling_fract": [15, 449], "sampling_method": [15, 449], "sampling_n_point": [15, 449], "sampling_percentag": [196, 458], "satisfi": [40, 41, 42, 219, 408, 409, 423], "save": [401, 403, 420, 445, 461], "savefig": [401, 403, 429], "sca": 429, "scalabl": 453, "scalar": [12, 125, 428, 443, 445, 451, 456, 460], "scale": [119, 171, 172, 173, 174, 175, 211, 213, 219, 340, 388, 428, 429, 439, 445, 449, 456], "scalekernel": 445, "scaler": 445, "scaling_bound": [211, 213, 219], "scatter": [97, 99], "scenario": [248, 400, 401, 402, 403, 417, 423, 439, 440, 450, 452, 456, 464, 465, 466], "scene": [456, 461, 462], "schema": 451, "schembl15068049": [401, 402, 403], "scheme": [445, 452], "scienc": [443, 447], "scientif": [445, 464], "scikit": [149, 340, 443, 445, 447, 457], "scipi": [379, 418, 426, 445], "scm": 445, "scope": 400, "screen": [321, 464], "script": [335, 420, 444, 445, 453, 466], "seaborn": [400, 401, 402, 403, 417, 439, 440], "seamlessli": 460, "search": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 38, 52, 55, 68, 73, 85, 89, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 209, 211, 212, 213, 214, 215, 216, 219, 223, 242, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 355, 356, 400, 403, 405, 407, 410, 411, 412, 413, 414, 416, 417, 418, 426, 428, 430, 435, 440, 445, 447, 450, 451, 452, 453, 454, 455, 458, 460, 461, 465], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 97, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 214, 218, 219, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 400, 402, 405, 416, 417, 418, 420, 421, 423, 424, 426, 429, 431, 435, 436, 437, 439, 441, 443, 445, 451, 452, 453, 454, 455, 457, 459, 460, 461, 466], "searchspace1": 431, "searchspace2": 431, "searchspace3": 431, "searchspace_ful": 454, "searchspace_json": 460, "searchspace_reduc": 454, "searchspacetyp": [188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 213, 406, 411, 412, 413, 414, 417, 418, 428, 435, 459], "secfp": 149, "secfpfingerprint": 149, "second": [354, 377, 379, 420, 421, 428, 429, 437, 439, 452, 455], "section": [443, 445, 446, 448, 460], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 165, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 218, 219, 242, 246, 248, 251, 253, 255, 256, 258, 260, 264, 267, 274, 276, 278, 280, 282, 284, 295, 297, 303, 324, 330, 340, 348, 354, 361, 364, 370, 371, 388, 401, 402, 403, 408, 409, 416, 417, 421, 424, 433, 442, 443, 446, 450, 451, 453, 454, 455, 456, 457, 460, 461, 465], "seed": [242, 246, 381, 382, 417, 418, 426, 429, 443, 445, 466], "seek": [428, 456], "seem": [375, 437, 444], "seen": 449, "select": [6, 40, 41, 42, 70, 74, 82, 181, 183, 184, 185, 186, 189, 196, 204, 206, 207, 251, 253, 255, 260, 264, 278, 280, 282, 284, 306, 354, 385, 406, 412, 413, 423, 424, 426, 433, 443, 445, 449, 451, 452, 455, 457, 458, 460, 462], "select_recommend": [181, 183, 184, 185, 186, 445], "selectivity_mean": 451, "selectivity_mod": 451, "selectivity_q_0": 451, "selectivity_std": 451, "self": [326, 340, 343, 393, 394, 395, 396, 416, 417, 418, 426, 446], "sell": 448, "semant": [445, 460], "sens": [57, 130, 326, 330, 354, 452, 457, 462], "sent": 448, "sentinel": [314, 315], "separ": [246, 248, 288, 324, 388, 389, 418, 442, 445, 446, 448, 450, 455, 460], "sequenc": [31, 41, 45, 117, 118, 125, 130, 141, 142, 144, 155, 163, 184, 185, 211, 213, 219, 220, 221, 224, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 310, 311, 326, 327, 336, 343, 349, 355, 356, 361, 451, 456, 458], "sequenti": [183, 184, 185, 186, 196, 406, 411, 412, 413, 414, 428, 435, 445, 458], "sequential_continu": [196, 445, 458], "sequential_greedy_x": 445, "sequentialgreedyrecommend": 445, "sequentialmetarecommend": [185, 458], "sequentialstrategi": 445, "seri": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 40, 41, 42, 52, 138, 141, 142, 144, 152, 155, 194, 196, 295, 297, 303, 411, 423, 445, 452, 454], "serial": [185, 219, 236, 420, 441, 444, 445, 446, 452, 458, 465], "serializ": [443, 458], "serialize_datafram": 460, "serialized_df": 238, "serializetostr": 420, "serialmixin": [24, 31, 35, 40, 106, 122, 139, 167, 181, 211, 213, 219, 255, 258, 267, 295, 297, 303, 364, 371, 445], "serv": [248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 355, 439, 440, 451, 452, 457], "servic": 448, "session": [453, 460], "set": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 42, 44, 55, 57, 64, 65, 97, 101, 155, 178, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 242, 246, 271, 340, 346, 353, 354, 381, 382, 401, 402, 403, 404, 406, 411, 413, 416, 421, 422, 423, 424, 426, 428, 433, 442, 443, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 466], "set_box_aspect": 418, "set_dash": 417, "set_output": 340, "set_param": 340, "set_random_se": [418, 426, 429, 466], "set_size_inch": [401, 403], "set_x_pend": 26, "set_xlabel": 418, "set_xtick": 418, "set_xticklabel": 418, "set_ylabel": 418, "set_ylim": 418, "set_zlabel": 418, "setattribut": 420, "setpoint": 152, "settimeout": 420, "setup": [242, 417, 452, 461, 466], "setuptool": 445, "sever": [63, 158, 179, 400, 402, 406, 417, 420, 426, 428, 431, 440, 443, 445, 446, 450, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 464, 466], "sh": 455, "shall": [184, 348, 448, 456], "shan": 447, "shap": [97, 443, 445, 447, 462, 465], "shap_valu": 462, "shape": [21, 211, 218, 301, 305, 307, 340, 385, 429, 445, 459, 466], "shapinsight": [95, 96, 98, 99, 445, 455], "shaplei": 97, "share": [251, 253, 255, 260, 264, 278, 280, 282, 284, 445, 448, 464], "shield": [276, 353, 402, 443, 457], "shift": 439, "shifted_hartmann": 439, "ship": [389, 460], "shm": 444, "short": 446, "shortcut": [219, 459, 460], "shorten": [445, 446], "shot": 464, "should": [31, 44, 53, 97, 155, 186, 234, 246, 300, 310, 311, 346, 348, 352, 353, 359, 363, 364, 365, 377, 411, 413, 417, 420, 423, 424, 433, 437, 443, 445, 446, 450, 451, 452, 455, 459, 461, 462, 464, 466], "show": [97, 401, 402, 403, 405, 406, 411, 412, 413, 420, 421, 423, 426, 433, 435, 436, 437, 439, 440, 452, 455], "showcas": 458, "shown": [417, 426, 440, 445, 451], "shrink": 418, "shutdown": 444, "side": [45, 157, 306, 445], "sigma": [172, 173, 174, 175, 305, 428, 447], "signal": [67, 456], "signatur": [91, 292, 324, 326, 418, 445, 446, 452, 460], "significantli": [219, 426, 439, 440, 452, 453], "silenc": 446, "silent": [445, 452], "similar": [185, 444, 445, 452, 453, 455, 457, 458, 459, 460, 464, 466], "similarli": [429, 457], "simpl": [20, 21, 316, 340, 402, 416, 417, 424, 443, 445, 450, 451, 458, 461, 463, 464], "simpler": [446, 460], "simplest": [459, 462], "simplex": [219, 465], "simplex_paramet": [219, 423, 459], "simpli": [330, 416, 417, 446, 452, 454, 456, 457, 458, 459, 460, 463, 464], "simplic": 326, "simplifi": 446, "simul": [86, 348, 413, 418, 443, 445, 464, 465], "simulate_experi": [246, 248, 461], "simulate_scenario": [248, 400, 401, 402, 403, 417, 439, 440, 445, 453, 461], "simulate_transfer_learn": [439, 461], "simulationresult": 426, "simultan": [456, 462], "sinc": [57, 157, 213, 259, 326, 340, 401, 408, 409, 421, 432, 435, 436, 437, 439, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 464], "singer": 464, "singl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 40, 53, 97, 132, 157, 211, 213, 219, 242, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 295, 297, 303, 344, 364, 376, 385, 391, 401, 402, 403, 412, 417, 423, 428, 439, 440, 443, 445, 451, 452, 453, 454, 455, 456, 457, 459, 462, 464, 465], "single_lin": 344, "single_y0": 429, "single_y1": 429, "singledispatch": 366, "singletargetobject": [31, 295, 297, 303, 401, 402, 403, 405, 406, 411, 412, 413, 414, 417, 420, 421, 435, 436, 437, 443, 445, 462, 465], "site": 444, "situat": [97, 157, 385, 411, 413, 423, 444, 446, 450, 452, 456, 457, 460, 461, 464], "six": [423, 424], "size": [21, 104, 105, 106, 109, 111, 113, 114, 115, 184, 186, 213, 218, 219, 368, 418, 420, 426, 432, 433, 439, 440, 451, 460, 461, 464, 466], "sk": 420, "skeleton": 445, "skfp": 149, "skicit": 445, "skin": 461, "skip": [216, 222, 445, 451], "skl2onnx": 420, "sklearn": [204, 375, 420], "sklearnclusteringrecommend": [201, 202, 203, 445, 450], "slightli": [240, 402, 423, 461], "slot": [422, 426, 441, 445, 452], "slot1_amount": 423, "slot1_label": 423, "slot2_amount": 423, "slot2_label": 423, "slot3_amount": 423, "slot3_label": 423, "slow": [411, 413, 414, 450, 459], "slower": 450, "slowest": 445, "small": [308, 312, 408, 423, 439, 440, 445, 446, 449, 457], "smaller": [31, 426, 451, 464], "smallest": [211, 355, 459], "smart": 443, "smartli": 423, "smile": [155, 333, 335, 336, 443, 457], "smoke": 445, "smoke_test": [400, 401, 402, 403, 409, 411, 412, 414, 417, 418, 426, 429, 439, 440], "smooth": [109, 111, 175], "smoothedboxprior": 445, "smoother": 109, "sn": [400, 401, 402, 403, 417, 439, 440], "snippet": 453, "so": [31, 242, 259, 340, 354, 403, 417, 423, 426, 432, 433, 443, 444, 451, 452, 453, 454, 456, 457, 458, 460, 463], "softwar": [443, 448], "sola": 447, "sole": 448, "solut": [76, 451, 452, 456, 459, 460, 464], "solv": [259, 412, 413, 423, 426, 445], "solv_rdkit2ddesc": 413, "solvent": [401, 402, 403, 405, 406, 411, 412, 413, 414, 417, 421, 423, 424, 436, 437, 443, 452, 457], "solvent1": [423, 424], "solvent2": [423, 424], "solvent3": 423, "solvent4": 423, "solvent5": 423, "solvent8": 423, "solvent9": 423, "solvent_1": 452, "solvent_2": 452, "solvent_3": 452, "solvent_data": 417, "solvent_encoding1": 452, "solvent_encoding2": 452, "solvent_mordred_enc": 452, "solvent_rdkit2dd": [411, 414], "solvent_rdkit_enc": 452, "solvent_smil": 417, "solver": 461, "some": [53, 375, 401, 402, 403, 406, 411, 412, 413, 414, 417, 418, 420, 421, 423, 424, 429, 431, 432, 433, 435, 440, 445, 450, 451, 452, 453, 457, 458, 460, 461, 462, 466], "someth": [89, 437], "sometim": [452, 461], "somewhat": 453, "somewher": 451, "soon": [443, 451, 458], "sophist": [445, 454, 460], "sort": 160, "sourabh": 447, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 128, 130, 132, 134, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 206, 207, 208, 211, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 229, 230, 232, 233, 234, 236, 238, 239, 242, 244, 246, 248, 251, 253, 255, 256, 258, 260, 261, 264, 266, 267, 268, 271, 272, 274, 276, 278, 280, 282, 284, 286, 287, 288, 290, 292, 295, 297, 300, 301, 303, 305, 306, 307, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 368, 370, 371, 372, 377, 378, 379, 381, 382, 384, 385, 386, 388, 396, 397, 398, 444, 445, 446, 448], "space": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 31, 38, 45, 52, 55, 68, 73, 79, 85, 89, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 187, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 209, 211, 212, 213, 214, 215, 216, 219, 222, 223, 242, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 340, 355, 385, 400, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 426, 428, 429, 430, 432, 435, 440, 441, 445, 447, 450, 452, 453, 454, 455, 457, 458, 460, 461, 465], "span": [61, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 416, 426, 431, 455], "spars": 340, "speak": 464, "spec": [216, 222, 233], "special": [186, 443, 444, 448, 449, 454, 464, 466], "specif": [102, 158, 165, 204, 207, 213, 216, 229, 246, 288, 290, 318, 372, 397, 416, 417, 432, 443, 445, 446, 451, 452, 454, 457, 458, 459, 460, 461, 462, 463, 464], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 53, 90, 97, 101, 144, 155, 157, 158, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 232, 233, 242, 244, 246, 256, 305, 306, 307, 310, 325, 334, 340, 346, 349, 355, 356, 372, 386, 402, 406, 408, 420, 421, 426, 428, 439, 443, 444, 445, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464], "speed": [219, 411, 413, 414, 439, 440, 453, 459], "speed_fast": 459, "speed_norm": 459, "speed_slow": 459, "speedup": [445, 464], "spell": 446, "spellcheck": 445, "sphinx": [445, 446], "split": [188, 450], "sporad": 445, "spread": 463, "sqrt": 452, "squar": [340, 426, 429, 452], "squash": 446, "stabil": [445, 453], "stabl": [102, 165], "stage": [451, 452, 460], "stand": 445, "standard": [6, 18, 288, 420, 445, 451, 457], "star": 423, "start": [242, 400, 416, 417, 418, 424, 426, 429, 444, 445, 446, 450, 457, 458, 460, 461, 464], "startup": 445, "stat": [31, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 418, 424, 426, 451], "state": [181, 183, 184, 185, 186, 340, 417, 423, 442, 445, 448, 451, 454, 465], "stateless": [426, 442, 445, 454], "statement": [359, 432, 448], "static": [13, 16, 213, 219, 264, 443, 446, 464], "statist": [31, 251, 253, 254, 255, 260, 264, 278, 280, 282, 284, 440, 445, 465], "statu": 451, "std": [31, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284], "std_threshold": 288, "stem": [444, 464], "step": [216, 222, 242, 423, 426, 442, 443, 446, 451, 456, 460, 462], "sterl": 447, "steven": 402, "still": [158, 346, 417, 426, 450, 452, 453, 455, 457, 462, 464, 466], "stop": [415, 441, 445, 446], "stop_on_pi": 417, "stoppag": 448, "storag": [451, 453, 460], "store": [26, 139, 288, 295, 340, 418, 423, 426, 443, 445, 451, 466], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 89, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 194, 196, 201, 202, 203, 204, 211, 213, 218, 219, 232, 236, 246, 248, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 298, 303, 305, 306, 307, 310, 311, 318, 324, 325, 331, 333, 335, 336, 342, 344, 346, 349, 352, 353, 357, 359, 364, 368, 370, 371, 372, 378, 379, 421, 426, 436, 437, 439, 440], "straightforward": [451, 463, 464], "strategi": [15, 196, 213, 240, 400, 426, 445], "stream": [322, 445, 453], "streamingsequentialmetarecommend": [184, 458], "streamingsequentialstrategi": 445, "streamlin": 446, "streamlit": [443, 445], "streibel": 447, "strict": [291, 324], "strictli": [421, 436, 437], "stride": 408, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 154, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 331, 335, 336, 340, 342, 343, 344, 352, 364, 370, 371, 420, 435, 445, 451, 452, 457, 463, 465], "strip": [242, 403], "strong": 445, "strongli": 451, "strtobool": [445, 453], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 49, 232, 443, 444, 445, 446, 447, 451, 457, 460], "studi": [179, 455, 458, 465], "style": [420, 439, 445, 446], "sub": [204, 445, 455, 460], "subclass": [90, 232, 318, 320, 330, 372, 406, 445, 446, 458, 460], "subfold": 453, "subgraph": 457, "subgroup": 424, "subject": 448, "sublicens": 448, "submiss": [445, 448], "submit": [26, 443, 446, 448], "subobject": 340, "subpackag": [445, 446, 461], "subplot": 429, "subselectioncondit": [412, 413, 445, 454, 465], "subsequ": [186, 213, 219, 246, 335, 442, 448, 451, 460, 462], "subset": [31, 122, 125, 130, 132, 155, 213, 321, 356, 385, 451, 452, 454, 457], "subspac": [26, 61, 188, 196, 210, 211, 213, 215, 217, 219, 408, 411, 412, 413, 414, 428, 431, 433, 435, 445, 452, 458, 460, 465, 466], "subspace_continu": 61, "subspace_json": 460, "subspacecontinu": [31, 61, 137, 151, 213, 215, 431, 445, 459], "subspacediscret": [31, 138, 141, 142, 144, 152, 155, 213, 215, 218, 411, 412, 413, 414, 423, 428, 435, 445, 459, 460, 466], "substanc": [149, 155, 334, 402, 405, 411, 413, 414, 424, 445, 452, 455, 457, 464], "substance_12": 452, "substance_3": 452, "substance_43": 452, "substance_data": 445, "substance_encod": 402, "substanceencod": [155, 334, 336, 411, 412, 413, 414, 445, 457], "substanceparamet": [401, 402, 403, 405, 406, 411, 412, 413, 414, 417, 421, 423, 436, 437, 443, 445, 452, 453, 455, 459, 465], "substanti": [155, 466], "substrat": 464, "subtyp": 460, "success": [297, 385, 426, 460], "success_valu": 297, "suffic": 446, "suffici": [340, 417, 459, 460], "suggest": [455, 461, 465], "suit": 446, "suitabl": [204, 219, 242, 331, 340, 446, 449, 451, 457, 461, 462, 464], "sum": [59, 117, 219, 340, 400, 410, 411, 412, 413, 417, 423, 424, 426, 429, 441, 452, 456, 459], "sum_": [452, 456], "sum_constraint": 423, "sum_constraint_1": 414, "sum_constraint_2": 414, "sum_toler": 423, "summar": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155, 295, 297, 303], "summari": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155, 295, 297, 303, 445, 446], "superior": 449, "supersed": 448, "suppli": 340, "support": [10, 31, 95, 96, 97, 98, 99, 185, 207, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 375, 406, 411, 412, 413, 414, 417, 418, 420, 423, 428, 435, 443, 445, 446, 447, 448, 452, 455, 457, 458, 459, 461, 462, 465], "supports_batch": 445, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 251, 253, 255, 260, 264, 278, 280, 282, 284, 445, 462], "supports_pending_experi": 445, "supports_transfer_learn": [251, 253, 255, 260, 264, 278, 280, 282, 284, 462], "suppos": 452, "sure": [423, 431, 443, 446], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 74, 78, 97, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 194, 196, 201, 202, 203, 204, 211, 213, 219, 251, 253, 256, 258, 260, 264, 266, 267, 271, 274, 276, 278, 280, 282, 284, 411, 412, 413, 414, 418, 426, 428, 435, 441, 443, 445, 447, 450, 451, 456, 457, 458, 464, 465], "surrogate_model": [194, 196, 406, 418, 420, 421, 426, 436, 437, 445], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 97, 194, 196, 255, 258, 445], "svg": 429, "sw": 412, "swiss": 447, "switch": [53, 182, 185, 186, 288, 406, 411, 412, 413, 414, 426, 428, 435, 443, 445, 452, 458], "switch1": 412, "switch2": 412, "switch2_left": 412, "switch2_right": 412, "switch_1": 452, "switch_2": 452, "switch_aft": [186, 436, 437, 458], "switzerland": 447, "sy": 444, "symmetri": 452, "sync": [445, 446], "syntax": [443, 445], "synthet": [408, 409, 418, 429, 439, 440, 445], "system": [340, 369, 402, 426, 443, 444, 447, 448, 453, 461, 464], "t": [286, 287, 323, 331, 401, 402, 403, 405, 406, 413, 418, 429, 439, 440, 442, 454, 457, 460, 461], "t1": [460, 461], "t2": 460, "t3": 460, "t_1": 456, "t_2": 456, "t_3": 456, "t_i": 456, "tab": 429, "tabl": [359, 420, 445, 451, 452, 455], "tabular": 461, "tag": [443, 445, 460], "tailor": 451, "take": [8, 49, 109, 138, 152, 157, 158, 251, 253, 255, 260, 264, 274, 278, 280, 282, 284, 298, 416, 423, 445, 450, 451, 452, 453, 456, 457, 458, 464], "taken": [184, 417, 445, 451, 454, 456], "tantamount": 449, "target": [12, 13, 16, 31, 79, 97, 122, 123, 125, 129, 130, 131, 132, 134, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 240, 242, 243, 244, 251, 253, 255, 258, 260, 264, 278, 280, 282, 284, 288, 297, 300, 301, 303, 326, 340, 346, 349, 350, 356, 357, 358, 361, 377, 378, 380, 398, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 417, 418, 420, 421, 426, 432, 433, 435, 436, 437, 439, 440, 441, 443, 445, 450, 451, 455, 460, 461, 462, 465], "target_1": [412, 413, 414, 428, 450, 456, 463], "target_2": [428, 450, 456, 463], "target_3": [428, 450, 456], "target_3a": 463, "target_3b": 463, "target_a": 462, "target_b": 462, "target_cumbest": [400, 439, 440], "target_index": [97, 445, 455], "target_max": 451, "target_transform": 428, "targetmod": [303, 460, 463], "targetnam": 242, "targettransform": [303, 445, 463], "task": [142, 213, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 295, 297, 303, 426, 445, 451, 458, 460, 461, 464], "task_idx": [213, 445], "task_param": [439, 440, 461], "task_paramet": 460, "task_parameter_json": 460, "task_parameter_reconstruct": 460, "taskparamet": [226, 439, 440, 445, 454, 460, 461, 465], "tb": 466, "tbodi": 420, "td": 420, "technic": [219, 450, 461, 464], "techniqu": [204, 458], "technologi": 447, "telemetri": [445, 447], "temp": [411, 413, 447], "temp_c": [401, 402, 403, 417], "temperatur": [401, 403, 405, 406, 411, 413, 416, 420, 421, 435, 452, 457, 459, 464], "temperature_resolut": 411, "temperature_valu": 417, "temporari": [382, 417, 445, 453, 460], "temporarili": [445, 466], "temporary_se": 466, "tempt": 464, "tenac": 445, "tend": 418, "tensor": [26, 45, 251, 286, 287, 349, 360, 364, 388, 390, 439, 445], "term": [112, 240, 417, 426, 446, 448, 451, 455, 459, 460, 461, 464], "termin": [417, 418, 444, 448], "terminologi": 465, "tert": [401, 402, 403, 405, 406], "test": [219, 242, 260, 346, 426, 439, 440, 443, 444, 445, 446, 451, 455, 461, 466], "test_funct": [408, 409, 418, 432, 433, 439, 440], "test_scenario": [401, 403], "testabl": [86, 242], "testfunct": [408, 409, 432, 433], "testfunctionclass": [408, 409, 432, 433], "text": [34, 420, 429, 448, 452, 453, 456], "textcont": 420, "th": [311, 452], "than": [31, 65, 85, 152, 184, 185, 186, 196, 211, 213, 226, 311, 330, 344, 350, 385, 386, 402, 413, 417, 424, 449, 452, 453, 455, 457, 460, 462], "thei": [158, 179, 189, 306, 352, 356, 406, 414, 417, 423, 426, 431, 445, 446, 450, 451, 452, 455, 457, 458, 459, 460, 463, 464, 466], "them": [38, 274, 347, 406, 444, 445, 446, 450, 452, 453, 454, 455, 457, 458, 460, 464], "theme": 445, "theori": 448, "therebi": 219, "therefor": [44, 186, 251, 253, 255, 260, 264, 278, 280, 282, 284, 406, 444, 451, 460, 462, 464], "therein": 445, "thereof": 448, "thf": 452, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 181, 183, 184, 185, 186, 188, 196, 201, 202, 203, 204, 211, 213, 219, 240, 244, 246, 248, 251, 253, 255, 256, 258, 259, 260, 264, 274, 278, 280, 282, 284, 288, 310, 326, 327, 330, 335, 340, 346, 348, 350, 351, 353, 355, 359, 400, 416, 417, 418, 420, 421, 423, 424, 426, 429, 431, 435, 436, 437, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "think": [426, 457], "third": [338, 428, 448, 455, 461], "third_parti": 340, "thompson": [21, 447], "thomson": 21, "those": [63, 158, 186, 188, 240, 385, 406, 444, 448, 450, 452, 461], "though": 464, "three": [402, 423, 424, 428, 429, 443, 451, 452, 455, 456, 458, 459, 464, 465], "threshold": [42, 44, 144, 155, 157, 159, 186, 196, 288, 353, 408, 413, 414, 417, 423, 445, 452, 457], "thresholdcondit": [58, 59, 408, 413, 414, 423, 465], "through": [31, 213, 305, 310, 346, 356, 421, 423, 426, 428, 443, 445, 446, 448, 452, 456, 460, 461, 465], "throughout": 186, "throw": [335, 452], "thrown": [244, 403, 417, 436, 444, 450, 456], "thu": [196, 326, 356, 401, 402, 408, 409, 411, 412, 413, 414, 420, 421, 423, 426, 428, 432, 433, 435, 444, 446, 451, 453, 454, 457, 458, 460, 461, 464, 466], "tick": 418, "tight_layout": 429, "time": [10, 196, 386, 409, 416, 423, 426, 443, 445, 450, 451, 452, 453, 454, 457, 460, 461, 462, 465, 466], "timeout": 445, "timer": 416, "titl": [420, 429, 443, 448], "tl": 439, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 445], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371], "to_factori": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119], "to_fram": 400, "to_gpytorch": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 167, 169, 170, 171, 172, 173, 174, 175, 445], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 211, 213, 219, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 295, 297, 303, 364, 370, 371, 420, 421, 435, 451, 460], "to_keep": 354, "to_ndarrai": 364, "to_numpi": [418, 429], "to_object": [295, 297, 303, 400, 408, 409, 418, 426, 429, 432, 433, 439, 440, 456, 461], "to_polar": [40, 41, 42], "to_searchspac": [137, 138, 139, 141, 142, 144, 151, 152, 155, 211, 219, 426, 431, 445, 454], "to_str": 445, "to_subspac": [137, 138, 141, 142, 144, 151, 152, 155, 445], "to_tensor": [364, 420, 445], "to_tupl": [364, 429], "tobia": 447, "togeth": [38, 69, 311, 406, 426, 433, 443, 445, 452], "toggl": [31, 445], "toggle_discrete_candid": [31, 445, 454], "toggleabl": 420, "toggleable__cont": 420, "toggleablecont": 420, "tol": 420, "toler": [31, 42, 152, 219, 397, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 417, 420, 421, 423, 428, 432, 433, 435, 436, 437, 443, 445, 452], "tolist": 408, "toluen": 457, "toml": 445, "too": [408, 461, 464], "tool": [332, 443, 445, 452, 460], "toolbox": 443, "top": [445, 446], "topic": 451, "topolog": 457, "topologicaltors": 149, "topologicaltorsionfingerprint": 149, "torch": [349, 364, 420, 439, 445], "toronto": 447, "tort": 448, "total": [185, 186, 385, 423, 424, 426, 459], "total_bas": 424, "total_phase_ag": 424, "toward": [169, 346, 452], "towel": 442, "tox": [445, 446], "tr": 420, "tracebackexcept": 444, "track": [178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 219, 417, 448, 454], "trade": [8, 448, 456], "trademark": 448, "tradit": [402, 422, 423, 441, 443, 445], "train": [81, 97, 178, 184, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 248, 251, 253, 255, 256, 258, 259, 260, 264, 278, 280, 282, 284, 288, 419, 429, 439, 440, 445, 461], "train_i": 420, "train_x": 420, "training_funct": 440, "trajectori": [240, 400, 417, 426, 451, 461], "transfer": [247, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 406, 411, 412, 413, 414, 428, 435, 439, 441, 443, 445, 448, 457, 462, 465], "transform": [31, 81, 122, 125, 130, 132, 138, 139, 141, 142, 144, 152, 155, 211, 213, 219, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 295, 297, 301, 303, 336, 340, 349, 356, 361, 364, 365, 388, 411, 412, 413, 414, 435, 445, 448, 453, 457, 462, 463], "transform_rep_exp2comp": 445, "transformermixin": 340, "transit": 445, "translat": [38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 445, 448, 454, 457], "transmiss": 460, "transport": 340, "travers": 445, "treasur": 465, "treat": [155, 159, 251, 253, 255, 260, 264, 278, 280, 282, 284, 402, 443, 452, 457, 463, 466], "tree": 445, "tremend": 402, "trend": 464, "tri": 459, "triangl": 307, "triangular": [301, 307, 428, 463], "tricki": 455, "tricyclohexylphosphin": [401, 402, 403], "trigger": [184, 310, 417, 421, 426, 445, 446, 450, 456, 460], "trim": 420, "trivial": [267, 280, 456, 457, 462], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 97, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 196, 213, 246, 264, 297, 306, 319, 320, 324, 330, 331, 340, 344, 354, 385, 397, 402, 406, 408, 409, 411, 412, 413, 414, 418, 420, 421, 423, 426, 428, 432, 433, 435, 436, 437, 439, 440, 445, 450, 451, 452, 454, 455, 457, 460], "trust": 420, "truth": 331, "truthi": 453, "try": [89, 346, 401, 402, 403, 417, 420, 421, 437, 444, 445, 466], "tune": 443, "tupl": [13, 16, 31, 41, 45, 97, 104, 105, 106, 109, 111, 113, 114, 115, 117, 118, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 160, 211, 213, 218, 219, 287, 310, 317, 324, 327, 343, 346, 360, 364, 368, 388, 445], "turn": [44, 211, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 368, 431, 444, 445, 452, 453, 456], "turnaround": 461, "twice": [454, 456], "two": [13, 16, 34, 55, 64, 65, 126, 186, 196, 206, 240, 311, 316, 349, 377, 385, 400, 401, 403, 416, 423, 426, 428, 429, 433, 439, 440, 442, 443, 445, 446, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463], "twofold": 426, "twophasemetarecommend": [401, 403, 406, 411, 412, 413, 414, 417, 418, 420, 421, 426, 428, 433, 435, 436, 437, 443, 445, 458], "twophasestrategi": 445, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 77, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 154, 155, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 214, 215, 216, 219, 220, 221, 222, 224, 225, 226, 229, 230, 232, 233, 234, 236, 238, 239, 242, 244, 246, 248, 251, 253, 254, 255, 256, 258, 260, 261, 264, 267, 268, 272, 278, 280, 282, 284, 286, 287, 288, 290, 291, 292, 295, 297, 298, 303, 305, 306, 307, 310, 311, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 333, 334, 335, 336, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 370, 371, 372, 374, 375, 377, 378, 379, 385, 386, 388, 390, 393, 394, 395, 396, 397, 398, 402, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 426, 428, 435, 436, 437, 443, 445, 446, 448, 449, 452, 455, 456, 457, 458, 459, 462, 464, 465], "typealia": 298, "typeddict": [290, 445], "typeerror": [31, 97, 101, 242, 251, 253, 255, 260, 264, 278, 280, 282, 284, 326, 346, 347, 372, 386, 397, 398, 417, 418, 421], "typeguard": 323, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 211, 213, 219, 224, 232, 233, 236, 251, 253, 255, 258, 260, 264, 267, 278, 280, 282, 284, 287, 288, 295, 297, 303, 320, 321, 322, 323, 343, 349, 356, 358, 364, 370, 371, 372], "typic": [15, 326, 344, 402, 443, 445, 450, 451, 455, 457, 460, 466], "typing_extens": 446, "typo": [445, 446], "u": [21, 400, 401, 402, 403, 416, 418, 423, 424, 426, 431, 440, 443, 449, 450, 452, 456], "ucb": [8, 406, 445, 449, 451, 460], "ultim": 446, "ultra": [436, 437], "un": 445, "unabl": 420, "unavail": 445, "unawar": 450, "unbound": [364, 416], "uncaught": 445, "uncertainti": [8, 15, 406, 465], "unchang": [157, 340], "uncharacter": 464, "uncorrel": [353, 464], "undefin": [251, 454], "under": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 356, 414, 418, 426, 429, 443, 444, 448, 457], "underflow": 87, "underli": [31, 55, 417, 426, 443, 445, 451, 455, 458, 460], "underscor": 445, "understand": [443, 464], "undesir": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 92, 452, 454, 457, 466], "undo": 444, "unequ": 414, "unevenli": 457, "unexpect": [77, 89, 445], "unfilt": 452, "unfinish": 450, "unfortun": 464, "unhandl": 445, "uniform": [211, 251, 347, 348, 445], "uniformli": [206, 385], "uniniti": 330, "uninstal": 88, "unintend": [92, 326, 445, 446], "unintention": 466, "union": [13, 16, 31, 126, 159, 242, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 305, 306, 307, 372, 378, 379, 385, 433, 448, 459], "uniqu": [56, 134, 158, 385, 423, 445, 457], "unit": [137, 138, 139, 141, 142, 144, 151, 152, 155, 218, 295, 297, 303, 368, 370, 445], "unknown": [185, 385, 400, 426, 445, 462, 464], "unlabel": 349, "unless": [443, 446, 448, 453, 457, 460], "unlik": [12, 13, 14, 16, 17, 423, 456, 466], "unlock": 465, "unmaintain": 445, "unmatch": 324, "unmatchedattributeerror": 324, "unmeasur": [242, 403], "unnecessari": [445, 451], "unpromis": [417, 450], "unreach": 445, "unrealist": 461, "unrecogn": 346, "unrestrict": 326, "unsaf": 445, "unspecifi": [315, 445, 460], "unspecifiedtyp": 31, "unstructur": [234, 460], "unstructure_bas": 232, "unsupervis": 340, "unsupport": [211, 244, 450], "until": [181, 183, 184, 185, 186, 242, 426, 443, 450, 461], "untouch": 347, "untransform": [31, 462], "unusedobjectwarn": [417, 445, 450], "unveil": 440, "unwant": 38, "up": [31, 219, 242, 244, 400, 401, 402, 403, 404, 411, 413, 416, 418, 422, 423, 424, 429, 433, 439, 440, 443, 444, 445, 449, 452, 453, 456, 466], "updat": [31, 340, 402, 405, 445, 446, 450], "update_measur": [31, 445], "upgrad": 445, "upon": [188, 267, 444, 445, 446, 452, 459, 462, 464], "upper": [8, 22, 159, 175, 213, 219, 305, 306, 307, 364, 406, 418, 428, 429, 439, 440, 445, 452, 463, 466], "upper_bound": [411, 412, 413, 414, 435, 459], "upper_threshold": 159, "upperconfidencebound": [22, 449, 460], "upstream": 446, "urg": 455, "url": [443, 464], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 69, 73, 97, 109, 125, 126, 144, 149, 152, 155, 158, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 211, 213, 219, 220, 221, 233, 242, 244, 246, 251, 253, 255, 260, 261, 264, 278, 280, 282, 284, 291, 301, 313, 326, 327, 335, 336, 340, 346, 348, 349, 355, 366, 374, 375, 385, 390, 400, 408, 409, 415, 416, 417, 418, 419, 422, 423, 424, 431, 435, 436, 437, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 463, 464, 465, 466], "usa": 447, "usabl": [330, 444, 445, 457, 460], "usag": [367, 445, 452, 458, 465], "use_comp_rep": [97, 101, 455], "use_torch": [349, 408, 409, 418, 432, 433, 439, 440], "user": [52, 53, 67, 82, 92, 144, 147, 251, 253, 255, 260, 264, 278, 280, 282, 284, 292, 340, 348, 370, 371, 405, 406, 411, 428, 437, 443, 444, 445, 446, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464], "usernam": 445, "userwarn": 444, "uses_shap_explain": 445, "usort": 445, "usr": 149, "usrcat": 149, "usrcatfingerprint": 149, "usrfingerprint": 149, "usual": [242, 401, 402, 403, 436, 444, 453, 455, 457], "util": [31, 196, 211, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 313, 315, 316, 340, 364, 370, 371, 384, 388, 400, 402, 405, 406, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 426, 428, 429, 432, 433, 439, 440, 443, 445, 449, 450, 451, 455, 456, 457, 458, 460, 461, 462, 464, 465], "uv": 445, "v": [443, 464], "val": [49, 331, 439], "val_from_param1": 57, "val_from_param2": 57, "valid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 157, 158, 213, 216, 219, 222, 260, 350, 355, 411, 434, 436, 441, 444, 445, 446, 451, 452, 461], "validate_compat": 260, "validate_config": [31, 437, 445, 451], "validate_parameter_input": 31, "validate_target_input": 31, "valu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 44, 45, 53, 55, 79, 97, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 125, 126, 130, 132, 138, 141, 142, 144, 146, 147, 149, 152, 155, 157, 158, 159, 162, 163, 164, 186, 194, 196, 201, 202, 203, 204, 211, 213, 219, 220, 221, 240, 242, 244, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 290, 297, 298, 300, 305, 306, 307, 310, 314, 315, 321, 324, 331, 340, 342, 346, 347, 348, 350, 352, 355, 356, 359, 364, 366, 372, 377, 378, 379, 393, 394, 395, 396, 397, 398, 401, 402, 403, 405, 406, 408, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 426, 428, 429, 432, 433, 435, 436, 437, 439, 440, 443, 445, 446, 449, 450, 452, 453, 454, 455, 456, 463, 464, 465, 466], "valuabl": [458, 461], "valueerror": [13, 15, 16, 31, 44, 63, 64, 65, 97, 101, 126, 134, 157, 158, 163, 164, 211, 213, 219, 225, 242, 244, 251, 253, 255, 260, 264, 278, 280, 282, 284, 292, 311, 324, 329, 331, 334, 342, 344, 346, 348, 350, 355, 356, 357, 385, 386, 397, 398, 433, 444], "var": [31, 251, 253, 254, 255, 258, 260, 264, 278, 280, 282, 284, 426, 465], "vari": [31, 219, 402, 453, 456], "variabl": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 246, 251, 253, 255, 260, 264, 278, 280, 282, 284, 295, 376, 391, 432, 445, 446, 452, 457, 458, 460, 462], "varianc": [8, 15, 108, 280, 351, 445, 449], "variance_initial_valu": 108, "variance_prior": 108, "variant": [406, 439, 455, 464], "variat": 429, "varieti": [432, 446, 460, 461], "variou": [340, 364, 423, 430, 445, 446, 450, 455, 458, 461], "varucb": 445, "vector": [34, 420, 445, 447, 456], "vendor": 457, "verbal": 448, "verbos": [420, 421, 445], "veri": [411, 413, 428, 450, 453, 455, 457, 462, 466], "verifi": [330, 408, 411, 412, 413, 414, 423, 424, 431, 433, 435, 446], "versa": [439, 464], "versatil": 458, "version": [340, 375, 411, 413, 414, 423, 426, 431, 439, 440, 443, 444, 445, 446, 448, 460, 465], "vert": 418, "via": [12, 15, 21, 30, 31, 44, 97, 186, 196, 207, 251, 253, 255, 256, 258, 260, 264, 278, 280, 282, 284, 318, 326, 346, 354, 403, 409, 416, 417, 420, 431, 443, 445, 446, 449, 450, 451, 453, 454, 456, 457, 458, 459, 460, 463, 464, 465], "via_init": 460, "via_json": 460, "viabl": [85, 428], "vice": [439, 464], "view": [211, 219, 418, 459], "view_init": 418, "violat": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 80, 445], "viridi": 418, "virtual": 446, "visibl": 445, "visual": [402, 439, 440, 455, 463], "vitro": 450, "vivo": 450, "volum": [443, 464], "vsa": 149, "vsafingerprint": 149, "vulner": [445, 446], "w_i": 456, "wa": [15, 70, 71, 74, 78, 79, 88, 92, 158, 186, 251, 253, 255, 260, 264, 278, 280, 282, 284, 340, 342, 346, 350, 386, 402, 443, 444, 445, 446, 448, 452, 453, 455, 457, 460, 464], "wai": [213, 416, 423, 424, 430, 431, 439, 442, 443, 450, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466], "wait": 450, "wall": 10, "want": [52, 406, 411, 423, 426, 433, 440, 443, 445, 446, 451, 452, 453, 454, 455, 457, 458, 460, 462, 463], "warn": [66, 327, 411, 413, 414, 417, 432, 433, 445, 446], "warranti": [443, 448], "watch": 416, "water": [411, 412, 413, 414, 423, 452, 457], "waterfal": [97, 99, 445], "we": [26, 240, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 426, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 443, 444, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466], "web": 446, "weber": 447, "weight": [125, 126, 379, 428, 456, 460], "weight_kdalton": 457, "welcom": 446, "well": [340, 406, 417, 422, 442, 445, 446, 451, 452, 455, 457, 461], "were": [31, 75, 83, 346, 403, 440, 444, 445, 450, 452, 457, 459], "what": [158, 184, 213, 240, 340, 346, 388, 400, 420, 428, 437, 442, 446, 449, 451, 455, 457, 464, 465], "whatsnew": 316, "when": [13, 16, 31, 44, 53, 89, 152, 157, 159, 184, 185, 186, 194, 196, 213, 246, 251, 253, 255, 260, 261, 264, 278, 280, 282, 284, 292, 314, 315, 324, 326, 330, 340, 344, 346, 349, 386, 411, 412, 414, 416, 421, 423, 424, 426, 428, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466], "whenev": [26, 184, 346, 460], "where": [13, 16, 21, 26, 34, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 178, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 240, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 310, 346, 385, 401, 402, 403, 406, 411, 413, 423, 426, 443, 444, 445, 446, 448, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464], "wherea": 460, "wherev": [448, 450], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 137, 138, 139, 141, 142, 144, 151, 152, 155, 196, 211, 219, 251, 253, 255, 260, 264, 278, 280, 282, 284, 348, 357, 364, 423, 445, 448, 451, 454, 463], "which": [13, 15, 16, 31, 40, 41, 42, 44, 92, 97, 122, 125, 130, 132, 158, 159, 178, 179, 181, 183, 184, 185, 186, 188, 191, 194, 196, 199, 201, 202, 203, 204, 207, 208, 213, 219, 246, 248, 251, 253, 255, 260, 264, 278, 280, 282, 284, 288, 326, 330, 340, 346, 348, 353, 355, 358, 359, 377, 378, 388, 400, 402, 406, 409, 416, 417, 423, 424, 426, 431, 432, 433, 437, 439, 440, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466], "while": [213, 216, 222, 340, 417, 426, 428, 440, 444, 445, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464], "whilst": 346, "whim": 149, "whimfingerprint": 149, "whole": 448, "whom": 448, "whose": [126, 157, 158, 213, 244, 321, 324, 349, 400, 416, 423, 450, 461], "wide": 461, "wider": 463, "width": [359, 420], "wieczorek": 447, "william": 464, "willing": 451, "win": [251, 426], "win_rat": 426, "window": [420, 445, 453], "winerror": 444, "winkel": 443, "wise": 379, "wish": 460, "within": [31, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 340, 397, 431, 445, 448, 452, 453, 457, 462, 464, 465, 466], "without": [185, 439, 440, 443, 445, 448, 450, 451, 452, 453, 457, 461, 464, 466], "wolfgang": 443, "won": 457, "work": [26, 285, 310, 340, 349, 411, 413, 414, 417, 428, 435, 437, 445, 446, 447, 448, 450, 452, 453, 458, 460, 461], "workaround": [444, 445], "workflow": [420, 443, 451, 460, 465], "workload": 446, "world": [443, 451], "worldwid": 448, "worst": [13, 16, 242, 244, 246, 403], "would": [56, 87, 157, 158, 240, 242, 248, 259, 416, 423, 426, 443, 446, 450, 452, 454, 455, 457, 458, 459, 460, 461, 462, 464, 466], "wrap": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 264, 268, 286, 287, 326, 443, 445, 456], "wrapper": [1, 25, 246, 248, 260, 327, 439, 440, 443, 458], "write": [443, 444, 448, 460], "writetext": 420, "written": [432, 433, 446, 448], "wrong": [437, 445], "wrongli": 444, "www": [443, 448], "x": [26, 123, 159, 215, 242, 244, 268, 317, 323, 327, 340, 343, 360, 377, 388, 400, 401, 402, 403, 411, 412, 413, 414, 417, 418, 423, 428, 435, 439, 440, 443, 445, 459, 462], "x0": [429, 459], "x0_mesh": 429, "x1": [429, 459], "x1_mesh": 429, "x2": 459, "x_": [400, 408, 409, 431, 432, 433], "x_1": [408, 409, 431, 432, 433, 452], "x_2": [408, 409, 431, 432, 433, 452], "x_3": [408, 409, 431, 432, 433, 452], "x_4": [408, 409, 431, 432, 433], "x_5": 433, "x_6": 433, "x_i": 452, "x_new": 340, "x_pend": 26, "xlabel": 429, "xlsx": [401, 402, 403], "xpho": [401, 402, 403], "xxxx": 444, "xylen": [401, 402, 403, 405, 406], "y": [276, 331, 340, 353, 377, 400, 401, 402, 403, 417, 418, 420, 423, 439, 440, 443, 464], "y0": 429, "y0_mesh": 429, "y1": 429, "y1_mesh": 429, "ye": 331, "year": [443, 464], "yet": [26, 445, 450, 458], "yield": [6, 109, 254, 401, 402, 403, 405, 406, 411, 417, 420, 421, 423, 433, 435, 436, 437, 443, 445, 449, 455, 456, 460], "yield_cumbest": [401, 402, 403, 417], "yield_mean": 451, "yield_mod": 451, "yield_q_0": 451, "yield_std": 451, "ylabel": 429, "yml": 445, "you": [31, 52, 402, 406, 408, 416, 421, 423, 426, 432, 433, 436, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466], "your": [402, 416, 423, 426, 433, 442, 443, 444, 445, 446, 448, 451, 452, 453, 454, 455, 457, 460, 461, 462, 463, 464, 465, 466], "your_branch_nam": 446, "yourself": 426, "z": [418, 443], "zdir": 418, "zero": [44, 63, 65, 157, 159, 169, 340, 351, 423, 426, 452, 464], "zip": [417, 418], "\u00b5fmt": 445, "\u0161o\u0161i\u0107": [443, 447]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.IncompleteMeasurementsError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InputDataTypeWarning", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoMeasurementsError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSInitialization", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.make_dict_validator", "baybe.surrogates.validation.type_validation_converter", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.clustering_algorithms", "baybe.utils.clustering_algorithms.third_party", "baybe.utils.clustering_algorithms.third_party.kmedoids", "KMedoids", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.conversion.to_string", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.handle_missing_values", "baybe.utils.dataframe.normalize_input_dtypes", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.metadata", "MeasurableMetadata", "Metadata", "baybe.utils.metadata.to_metadata", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 446, "0": 445, "01": 445, "02": 445, "03": 445, "04": 445, "05": 445, "06": 445, "07": 445, "08": 445, "09": 445, "1": 445, "10": 445, "11": 445, "12": 445, "13": 445, "14": 445, "15": 445, "16": 445, "17": 445, "19": 445, "2": 445, "2022": 445, "2023": 445, "2024": 445, "2025": 445, "21": 445, "23": 445, "24": 445, "27": 445, "28": 445, "29": 445, "3": 445, "31": 445, "4": 445, "5": 445, "6": 445, "7": 445, "8": 445, "9": 445, "A": 443, "For": 457, "On": 455, "The": [426, 436, 443, 454, 460, 461, 464], "abbrevi": 460, "acqf": 2, "acquisit": [1, 2, 23, 25, 27, 28, 29, 406, 450, 451], "acquisitionfunct": 24, "action": 464, "activ": [449, 457], "activate_paramet": 157, "ad": [405, 445, 450, 451, 464, 466], "add_fake_measur": 346, "add_noise_to_perturb_degenerate_row": 347, "add_parameter_nois": 348, "addendum": 428, "addit": 423, "additivekernel": 117, "advanc": [443, 462], "altern": 460, "amount": 423, "an": 426, "appli": 454, "arm": [425, 426], "arm64": 444, "arrai": 461, "arrays_to_datafram": 349, "assembli": 460, "asynchron": 450, "attr": 446, "augment": [309, 310, 311], "auto": 462, "automat": 460, "avail": [406, 462], "avx": 444, "back": 443, "backtest": [399, 439], "backward": 465, "bandit": [250, 425, 426], "base": [23, 33, 103, 121, 123, 136, 166, 177, 180, 190, 193, 198, 252, 254, 294, 401, 402, 403, 408, 409, 423, 424, 433, 454, 461], "basesequentialmetarecommend": 183, "basic": [107, 168, 312, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 404, 405, 451, 453, 455, 460], "basickernel": 104, "batch": 451, "batchify_ensemble_predictor": 286, "batchify_mean_var_predict": 287, "batteri": 443, "bayb": [0, 1, 2, 23, 25, 27, 28, 29, 30, 32, 33, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 107, 116, 120, 121, 123, 124, 126, 127, 129, 131, 133, 134, 135, 136, 140, 143, 145, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 176, 177, 179, 180, 182, 187, 189, 190, 192, 193, 195, 197, 198, 200, 205, 209, 210, 212, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 257, 259, 261, 262, 263, 265, 268, 269, 270, 272, 273, 275, 277, 279, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 405, 443, 446], "bayesian": [192, 193, 195, 443, 458], "bayesianlinearsurrog": 278, "bayesianrecommend": 194, "bell_transform": 305, "bernoulli": 426, "betabernoullimultiarmedbanditsurrog": 251, "betaprior": 169, "binari": [296, 298], "binarytarget": 297, "black": [400, 426], "block_deserialization_hook": 229, "block_serialization_hook": 230, "bo": 455, "boolean": [328, 329, 330, 331], "both": 435, "botorch": [195, 432], "botorchrecommend": 196, "bound": [416, 456, 459], "box": [400, 426], "break": 445, "build": [426, 459], "bytes_to_human_read": 368, "cach": [451, 453], "call": 454, "callabl": [408, 409, 433, 461], "campaign": [30, 31, 400, 401, 402, 403, 406, 408, 409, 411, 412, 414, 417, 420, 421, 428, 429, 432, 433, 435, 436, 451], "candid": [451, 454], "cardinalityconstraint": 34, "case": 426, "cast": 456, "catch_constant_target": 288, "categor": 140, "categoricalencod": 146, "categoricalparamet": [141, 457], "caution": 454, "challeng": 452, "chang": 445, "changelog": 445, "check_if_in": 329, "chemic": 443, "chemistri": [332, 333, 334, 335, 336], "choicevalu": 298, "citat": 443, "class": 446, "classproperti": 316, "clone": 443, "closer_el": 377, "closest_el": 378, "cluster": [200, 458], "clustering_algorithm": [337, 338, 339], "code": 446, "columntransform": 388, "compar": 435, "compat": 465, "compon": 416, "composit": [116, 257, 462], "compositekernel": 105, "compositesurrog": 258, "comput": [452, 455], "condit": [39, 40, 452], "config": [436, 437, 451], "configur": [420, 421, 436, 454, 456, 460], "constraint": [32, 33, 35, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 407, 408, 409, 410, 411, 412, 413, 414, 423, 424, 452, 454, 459, 466], "construct": [401, 402, 403, 408, 409, 423, 432, 433, 456, 459], "constructor": [459, 460], "continu": [43, 210, 407, 409, 423, 431, 449, 452, 457, 459, 464, 466], "continuouscardinalityconstraint": [44, 452], "continuousconstraint": 36, "continuouslinearconstraint": [45, 452], "continuouslinearequalityconstraint": 47, "continuouslinearinequalityconstraint": 48, "continuousnonlinearconstraint": 37, "continuousparamet": 137, "contribut": 446, "contributor": 447, "control": [451, 454], "conveni": 456, "convent": 446, "convers": [341, 342, 343, 344, 456, 460], "convert": [231, 420], "convert_acqf": 28, "convert_bound": 365, "convert_to_float": 317, "copi": 460, "core": [212, 215, 216, 228, 229, 230, 231, 232, 233, 234, 241, 242, 263, 270, 272], "cpu": 444, "creat": [400, 401, 402, 403, 406, 408, 409, 411, 412, 413, 414, 420, 421, 428, 431, 432, 435, 436, 439, 440, 451, 459], "create_fake_input": 350, "creation": [401, 402, 403, 423, 424, 451, 466], "current": 462, "custom": [143, 259, 261, 400, 411, 415, 416, 419, 420, 421, 462], "customdiscreteparamet": [144, 457], "customencod": 147, "customonnxsurrog": 260, "data": [401, 402, 403, 459, 464], "datafram": [345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 408, 409, 433, 459, 460, 461], "de": [435, 452, 460], "default": [273, 459, 460], "defaultkernelfactori": 274, "defin": [400, 408, 409, 416, 417, 418, 428, 429, 432, 433, 437, 439, 440, 443], "definit": 417, "depend": [412, 443, 457], "deprec": [46, 47, 48, 49, 445, 465], "deprecationerror": 67, "descript": 428, "deseri": 460, "deserialize_datafram": 238, "design": [443, 446], "desir": [124, 126, 451], "desirabilityobject": [125, 456], "develop": 446, "df_apply_dependency_augment": 310, "df_apply_permutation_augment": 311, "df_drop_single_value_column": 351, "df_drop_string_column": 352, "df_uncorrelated_featur": 353, "dictionari": [436, 437], "differ": 406, "dimens": 433, "discret": [50, 217, 220, 221, 222, 410, 411, 412, 413, 423, 432, 451, 452, 457, 459], "discretecardinalityconstraint": [51, 452], "discreteconstraint": 38, "discretecustomconstraint": [52, 452], "discretedependenciesconstraint": [53, 452], "discreteexcludeconstraint": [54, 452], "discretelinkedparametersconstraint": [55, 452], "discretenolabelduplicatesconstraint": [56, 452], "discreteparamet": 138, "discretepermutationinvarianceconstraint": [57, 452], "discreteproductconstraint": [58, 452], "discretesamplingmethod": 384, "discretesumconstraint": [59, 452], "discuss": 426, "disk": 453, "do": 461, "docstr": 446, "document": 421, "domin": 456, "dtypefloatnumpi": 374, "dtypefloatonnx": 375, "dtypefloattorch": 390, "dummi": 313, "duplic": 423, "dure": 466, "dynam": 454, "edbo": 275, "edbokernelfactori": 276, "effici": [452, 466], "emptysearchspaceerror": 68, "encod": 457, "end": 443, "enum": [127, 145, 299], "environ": 453, "equival": 460, "estim": 466, "exampl": [401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 420, 421, 428, 432, 433, 435, 436, 437, 441, 443, 455], "except": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "exceptiongroup": 444, "exclud": 454, "exclus": [413, 414, 454], "expect": 464, "expectedimprov": 3, "experi": [411, 412, 413, 414, 420, 421, 428, 435, 443, 450, 461], "experiment": [451, 453, 455], "expir": 445, "explain": [95, 455], "explicit": 459, "extend": 446, "extract": 462, "fake": 466, "faq": 442, "farthest_point_sampl": 385, "featur": 453, "field": 460, "file": [436, 437], "filter_df": 354, "find_subclass": 318, "finite_float": 393, "fix": [444, 445], "float": 453, "fp": 453, "fpsiniti": 206, "fpsrecommend": 207, "fraction_to_float": 342, "from": [436, 443, 445, 451, 459, 460], "full": [401, 402, 403, 459], "function": [400, 401, 402, 403, 406, 408, 409, 417, 428, 432, 433, 446, 450, 451], "further": 451, "fuzzy_row_match": 355, "gammaprior": 170, "gaussian_process": [262, 263, 265, 268, 269, 270, 272, 273, 275], "gaussianmixtureclusteringrecommend": 201, "gaussianprocesspreset": 271, "gaussianprocesssurrog": 264, "gener": [439, 440, 446, 458], "geom_mean": 379, "get": [405, 451, 454], "get_base_structure_hook": 232, "get_baseclass": 319, "get_canonical_smil": 333, "get_fingerprint_class": 334, "get_parameters_from_datafram": 158, "get_subclass": 320, "get_transform_object": 356, "get_transform_paramet": 224, "github": 443, "global": 449, "group_duplicate_valu": 321, "guid": 465, "halfcauchyprior": 171, "halfnormalprior": 172, "handle_missing_valu": 357, "hilberts_factori": 322, "hook": [415, 416, 417, 418], "hybrid": [408, 433, 452], "imaginari": 426, "implement": [452, 453], "implicit": 456, "import": [400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 416, 418, 420, 421, 423, 424, 426, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 455], "improv": 418, "includ": 443, "inclus": 401, "incompatibilityerror": 69, "incompatibleacquisitionfunctionerror": 70, "incompatibleargumenterror": 71, "incompatibleexplainererror": 72, "incompatiblesearchspaceerror": 73, "incompatiblesurrogateerror": 74, "incomplet": 403, "incompletemeasurementserror": 75, "incorpor": 414, "independentgaussiansurrog": 253, "index": 443, "indic": 443, "infeasibilityerror": 76, "infiniteintervalerror": 363, "influenc": [452, 466], "inform": [451, 458], "initi": [401, 406], "inputdatatypewarn": 77, "insight": [93, 94, 95, 96, 98, 99, 100, 101, 455], "instal": [443, 444], "instanc": 416, "instead": [420, 421], "instruct": 453, "interpret": 455, "interrupt": 417, "interv": [362, 363, 364, 365, 366], "invalidsurrogatemodelerror": 78, "invalidtargetvalueerror": 79, "invari": 423, "invok": 460, "irrelev": 464, "is_abstract": 330, "is_all_inst": 323, "is_cardinality_fulfil": 61, "is_inact": 159, "is_shap_explain": 100, "issu": [443, 444], "iter": [408, 409, 420, 421, 428], "json": [451, 460], "kernel": [102, 103, 106, 107, 116], "kernel_factori": [265, 268], "kernelfactori": 266, "kmeansclusteringrecommend": 202, "kmedoid": [339, 340], "known": [443, 444], "label": 457, "leak": 444, "learn": [438, 440, 449, 461, 464], "licens": [443, 448], "like": 457, "limit": [450, 452, 455, 462, 463], "linear": [277, 409], "linear_transform": 306, "linearkernel": 108, "link": 421, "local": [443, 449], "logexpectedimprov": 4, "lognormalprior": 173, "look_up_target": 244, "lookup": [243, 244, 401, 402, 403, 408, 409, 417, 433, 439, 440, 461], "loop": [400, 401, 402, 403, 439, 440, 443], "maco": 444, "maintain": [443, 447], "make_dict_valid": 290, "make_explainer_for_surrog": 101, "make_gp_from_preset": 272, "mandatori": 456, "manual": [411, 412, 413, 414], "mark": 450, "match": 463, "match_attribut": 324, "maternkernel": 109, "max": 463, "mean": 461, "meanpredictionsurrog": 280, "measur": [405, 420, 421, 451, 466], "measurablemetadata": 370, "mechan": [401, 402, 403, 461], "memori": [367, 368, 466], "memorys": 218, "meta": [179, 180, 182, 454, 458], "metadata": [369, 371, 372], "metarecommend": 181, "method": [416, 446, 449], "min": 463, "minimumcardinalityviolatedwarn": 80, "miss": 461, "mixin": 235, "mixtur": [422, 423, 424], "mode": [428, 463], "model": [406, 420, 421, 423, 424, 426, 452, 455, 462], "modelnottrainederror": 81, "monitor": 418, "monkeypatch": [416, 417, 418], "multi": [425, 426, 427, 428, 455, 456, 462], "multipl": 461, "naiv": [187, 279], "naivehybridspacerecommend": 188, "name": 457, "name_to_smil": 335, "necessari": [401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 420, 421, 428, 432, 433, 435, 436, 437], "nest": 460, "ngboost": 281, "ngboostsurrog": 282, "nois": 466, "nomcacquisitionfunctionerror": 82, "nomeasurementserror": 83, "non": 456, "non_inf_float": 394, "non_nan_float": 395, "non_shap_explain": 96, "none": 461, "nonpredict": [197, 198, 200, 205], "nonpredictiverecommend": 199, "nonstring_to_tupl": 343, "norecommenderslefterror": 84, "normalize_input_dtyp": 358, "normalprior": 174, "notenoughpointslefterror": 85, "nothingtosimulateerror": 86, "numer": [150, 302, 373, 374, 375, 376, 377, 378, 379], "numericalcontinuousparamet": [151, 457], "numericaldiscreteparamet": [152, 457], "numericaltarget": [303, 463], "numericalunderflowerror": 87, "object": [120, 121, 122, 123, 124, 126, 127, 129, 131, 133, 134, 401, 402, 403, 406, 408, 409, 411, 412, 413, 414, 428, 432, 435, 439, 440, 443, 451, 456, 460], "onnx": 420, "optim": [400, 429, 439, 440, 443, 451, 466], "option": [443, 457], "optionalimporterror": 88, "order": [423, 453], "output": [420, 421, 455, 456, 462], "overrid": 446, "packag": 443, "page": 455, "pamclusteringrecommend": 203, "parallel": [451, 453], "paramet": [135, 136, 139, 140, 143, 145, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 401, 402, 403, 406, 421, 423, 424, 451, 455, 457, 459, 466], "parameter_cartesian_prod_panda": 220, "parameter_cartesian_prod_polar": 221, "parameterencod": 148, "pareto": [129, 429], "paretoobject": [130, 456], "partial": [25, 450], "partialacquisitionfunct": 26, "pass": 421, "pend": 450, "perform": [401, 428, 432, 433], "periodickernel": 110, "perman": 454, "permut": 423, "piecewisepolynomialkernel": 111, "plainkernelfactori": 267, "plot": [400, 417, 418, 455], "point": 453, "polar": [444, 452, 453], "polynomialkernel": 112, "posterior": 451, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 254, "pre": 420, "precis": 453, "predict": 451, "preset": [269, 270, 272, 273, 275], "pretrain": 420, "pretty_print_df": 359, "print": [411, 412, 414, 428], "prior": [165, 166, 167, 168], "probabilityofimprov": 7, "probabl": 418, "problem": [400, 417, 429, 444], "product": [414, 459], "productkernel": 118, "pull": 446, "pure": [189, 190, 192, 193, 195, 197, 198, 200, 205, 449, 458], "purerecommend": 191, "pycharm": 444, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedhypervolumeimprov": 13, "qlognoisyexpectedimprov": 14, "qlognparego": 12, "qnegintegratedposteriorvari": 15, "qnoisyexpectedhypervolumeimprov": 16, "qnoisyexpectedimprov": 17, "qposteriorstandarddevi": 18, "qprobabilityofimprov": 19, "qsimpleregret": 20, "qthompsonsampl": 21, "quick": 443, "qupperconfidencebound": 22, "random": [380, 381, 382], "random_forest": 283, "randomforestsurrog": 284, "randomrecommend": 208, "rbfkernel": 113, "recommend": [176, 177, 179, 180, 182, 187, 189, 190, 192, 193, 195, 197, 198, 200, 205, 405, 406, 420, 421, 432, 433, 435, 450, 451, 454, 458], "recommenderprotocol": 178, "reduct": 449, "refers_to": 325, "regist": 416, "register_custom_architectur": 261, "register_hook": 326, "relat": 444, "remov": 445, "replic": 462, "represent": [423, 424, 455, 459], "reproduc": 466, "request": 446, "restrict": 459, "result": [400, 417, 418, 450], "rffkernel": 114, "role": 464, "row": 453, "rqkernel": 115, "run": [400, 408, 409, 426, 453], "sampl": [205, 449, 453, 458], "sample_numerical_df": 386, "sampling_algorithm": [383, 385, 386], "scalar": [126, 128, 462], "scale": 387, "scalekernel": 119, "scenario": [245, 246, 453, 461], "search": [423, 424, 431, 439, 443, 449, 459, 466], "searchspac": [209, 210, 212, 213, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 401, 403, 406, 408, 409, 411, 412, 413, 414, 428, 430, 432, 433, 440], "searchspacematchwarn": 89, "searchspacetyp": 214, "see": 464, "select_constructor_hook": 233, "semaphor": 444, "sequenti": [182, 451], "sequentialmetarecommend": 184, "serial": [227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 434, 435, 451, 460], "serializ": 452, "serialize_datafram": 239, "serialmixin": 236, "set": [400, 417, 418, 429, 431, 439, 440], "set_random_se": 381, "setup": [405, 411, 412, 413, 414, 420, 421, 423, 424, 426, 428, 429, 435], "shap": [94, 95, 96, 98, 99, 100, 101, 455], "shap_explain": 98, "shap_plot": 99, "shapinsight": 97, "signatur": 416, "simplex": [423, 459], "simul": [240, 241, 242, 243, 244, 245, 246, 247, 248, 400, 401, 402, 403, 417, 426, 439, 440, 453, 461], "simulate_experi": 242, "simulate_scenario": 246, "simulate_transfer_learn": 248, "singl": [131, 429, 461], "singletargetobject": [132, 456], "sklearnclusteringrecommend": 204, "slot": [423, 424], "smile": 154, "smiles_to_fingerprint_featur": 336, "smoothedboxprior": 175, "some": [408, 409, 428], "sort_paramet": 160, "space": [423, 424, 431, 433, 439, 443, 449, 451, 459, 466], "span": 423, "stage": 420, "start": 443, "statist": 451, "stop": 417, "str_to_acqf": 29, "strategi": [406, 443], "streamingsequentialmetarecommend": 185, "string": [436, 460], "strtobool": 331, "structure_constraint": 49, "studi": 462, "sub": 449, "subselectioncondit": [41, 452], "subspac": 459, "subspacecontinu": 211, "subspacediscret": 219, "substanc": [153, 154, 423, 443], "substanceencod": 149, "substanceparamet": [155, 457], "suggest": 444, "suitabl": 406, "sum": 414, "support": [444, 450], "surrog": [249, 250, 252, 254, 255, 257, 259, 261, 262, 263, 265, 268, 269, 270, 272, 273, 275, 277, 279, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 406, 419, 420, 421, 452, 455, 462], "surrogateprotocol": 256, "synchron": 446, "synthet": [432, 433], "tabl": [401, 402, 403, 439, 440, 443], "target": [293, 294, 295, 296, 298, 299, 302, 304, 305, 306, 307, 416, 427, 428, 429, 456, 463, 466], "targetmod": 300, "targettransform": 301, "task": [439, 440], "taskparamet": [142, 457, 464], "technologi": 464, "telemetri": 443, "temporary_se": 382, "terminologi": [423, 460, 461, 464], "test": [408, 409, 432, 433], "theoret": 423, "thi": [401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 428, 432, 433, 455], "third_parti": [338, 339], "thresholdcondit": [42, 452], "through": 464, "to_kernel_factori": 268, "to_metadata": 372, "to_object": 123, "to_searchspac": 215, "to_str": 344, "to_tensor": 360, "to_tupl": 327, "toggl": 454, "toler": 451, "tool": 446, "torch": [389, 390, 391, 444], "tradit": 424, "train": 420, "trajectori": 454, "transfer": [438, 440, 461, 464], "transfer_learn": [247, 248], "transform": [304, 305, 306, 307, 428], "transform_target_column": 361, "treasur": 464, "triangular_transform": 307, "trigger": [416, 418], "two": 437, "twophasemetarecommend": 186, "type": 460, "type_validation_convert": 291, "uncertainti": 449, "unidentifiedsubclasserror": 90, "uninterrupt": 417, "unlock": 464, "unmatchedattributeerror": 91, "unreleas": 445, "unspecifi": 314, "unspecifiedtyp": 315, "unstructure_bas": 234, "unsupport": 452, "unusedobjectwarn": 92, "upperconfidencebound": 8, "us": [401, 402, 403, 405, 406, 411, 412, 413, 414, 420, 421, 426, 428, 432, 433, 459, 460, 461, 462], "usag": 455, "use_fallback_constructor_hook": 366, "user": 465, "util": [27, 28, 29, 60, 61, 156, 157, 158, 159, 160, 237, 238, 239, 285, 286, 287, 288, 308, 309, 310, 311, 312, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 466], "v": [416, 423, 429, 444, 451, 454], "valid": [62, 63, 64, 65, 133, 134, 161, 162, 163, 164, 223, 224, 225, 226, 289, 290, 291, 292, 392, 393, 394, 395, 396, 397, 398, 421, 437], "validate_cardinality_constraint_parameter_bound": 63, "validate_cardinality_constraints_are_nonoverlap": 64, "validate_constraint": 65, "validate_custom_architecture_cl": 292, "validate_decorrel": 162, "validate_is_finit": 163, "validate_not_nan": 396, "validate_paramet": 226, "validate_parameter_input": 397, "validate_parameter_nam": 225, "validate_searchspace_from_config": 216, "validate_simplex_subspace_from_config": 222, "validate_target_input": 398, "validate_target_nam": 134, "validate_unique_valu": 164, "valu": [451, 457, 459, 460, 461], "variabl": 453, "varname_numpy_use_single_precis": 376, "varname_torch_use_single_precis": 391, "verif": [411, 412, 413, 414, 423, 424, 437], "verifi": 409, "via": [452, 455], "visual": 429, "we": 461, "what": 461, "window": 444, "within": 459, "without": 444, "workflow": [446, 450], "wrap": [408, 409, 433], "write": 446}})