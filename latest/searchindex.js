Search.setIndex({"alltitles": {"Acquisition function": [[397, "acquisition-function"]], "AcquisitionFunction": [[22, null]], "Active Learning": [[440, null]], "Added": [[436, "added"], [436, "id6"], [436, "id15"], [436, "id19"], [436, "id25"], [436, "id32"], [436, "id41"], [436, "id47"], [436, "id51"], [436, "id58"], [436, "id63"], [436, "id69"], [436, "id75"], [436, "id79"], [436, "id83"], [436, "id87"], [436, "id92"], [436, "id96"], [436, "id99"], [436, "id103"], [436, "id107"], [436, "id111"], [436, "id114"], [436, "id118"], [436, "id122"], [436, "id126"], [436, "id130"], [436, "id136"], [436, "id139"]], "Addendum: Description of transformation functions": [[419, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[457, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[455, null]], "Adding Partial Results": [[441, "adding-partial-results"]], "Adding measurements": [[442, "adding-measurements"]], "AdditiveKernel": [[107, null]], "Advanced Example: Chemical Substances": [[434, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[417, "an-imaginary-use-case"]], "Array-Based Callables": [[452, null]], "Asynchronous Workflows": [[441, null]], "Auto-Replication": [[453, null]], "Automatic field conversion": [[451, "automatic-field-conversion"]], "Available Models": [[453, "available-models"]], "Available recommenders suitable for initial recommendation": [[397, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[397, "available-surrogate-models"]], "Backtesting": [[390, null], [430, null]], "BaseSequentialMetaRecommender": [[175, null]], "Basic Instructions": [[444, "basic-instructions"]], "Basic Usage": [[446, "basic-usage"]], "Basic creation": [[442, "basic-creation"]], "Basic example for using BayBE": [[396, null]], "Basic string assembly": [[451, "basic-string-assembly"]], "BasicKernel": [[94, null]], "Basics": [[395, null], [442, "basics"]], "Batch optimization": [[442, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[434, null]], "Bayesian Recommenders": [[449, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[272, null]], "BayesianRecommender": [[186, null]], "Bernoulli Multi Armed Bandit": [[417, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[244, null]], "BetaPrior": [[161, null]], "BinaryTarget": [[290, null]], "BotorchRecommender": [[188, null]], "Bound methods": [[407, "bound-methods"]], "Breaking Changes": [[436, "breaking-changes"], [436, "id24"], [436, "id31"]], "Building from the Product of Parameter Values": [[450, "building-from-the-product-of-parameter-values"], [450, "id2"]], "Building the Model": [[417, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[435, "cpus-without-avx-support-installation-of-polars"]], "Caching of recommendations": [[442, "caching-of-recommendations"]], "Campaign": [[29, null]], "Campaign Setup": [[420, "campaign-setup"]], "Campaign Stopping": [[408, null]], "Campaigns": [[442, null]], "Candidate Control in Discrete Spaces": [[442, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[445, null]], "CardinalityConstraint": [[32, null]], "CategoricalEncoding": [[140, null]], "CategoricalParameter": [[135, null], [448, "categoricalparameter"]], "Caution": [[445, null]], "Changed": [[436, "changed"], [436, "id2"], [436, "id4"], [436, "id7"], [436, "id10"], [436, "id16"], [436, "id20"], [436, "id26"], [436, "id33"], [436, "id38"], [436, "id42"], [436, "id48"], [436, "id52"], [436, "id55"], [436, "id59"], [436, "id64"], [436, "id70"], [436, "id76"], [436, "id80"], [436, "id84"], [436, "id88"], [436, "id93"], [436, "id97"], [436, "id100"], [436, "id104"], [436, "id108"], [436, "id112"], [436, "id115"], [436, "id119"], [436, "id123"], [436, "id127"], [436, "id131"]], "Changelog": [[436, null]], "Clustering Recommenders": [[449, "clustering-recommenders"]], "Code Design": [[437, "code-design"]], "ColumnTransformer": [[379, null]], "Comparing recommendations in both objects": [[426, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[453, "composite-surrogates"]], "CompositeKernel": [[95, null]], "CompositeSurrogate": [[250, null]], "Condition": [[38, null]], "Conditions": [[443, "conditions"]], "Constraint": [[33, null]], "Constraint Setup": [[414, "constraint-setup"]], "Constraints": [[443, null]], "Constraints Continuous": [[398, null]], "Constraints Discrete": [[401, null]], "Constraints Setup": [[415, "constraints-setup"]], "Construct the campaign and run some iterations": [[399, "construct-the-campaign-and-run-some-iterations"], [400, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[450, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[392, "constructing-campaigns-for-the-simulation-loop"], [393, "constructing-campaigns-for-the-simulation-loop"], [394, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[450, "constructing-from-a-dataframe"], [450, "id1"], [450, "id3"]], "Constructing hybrid recommenders": [[424, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[423, "constructing-the-campaign-and-performing-a-recommendation"], [424, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[424, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[443, "continuous-constraints"]], "Continuous Parameters": [[448, "continuous-parameters"]], "Continuous Subspaces": [[450, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[42, null]], "ContinuousConstraint": [[34, null]], "ContinuousLinearConstraint": [[43, null], [443, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[35, null]], "ContinuousParameter": [[131, null]], "Contributing to BayBE": [[437, null]], "Contributors": [[438, null], [438, "id1"]], "Convenience construction and implicit conversion": [[447, null]], "Conventions for attrs classes": [[437, "conventions-for-attrs-classes"]], "Convert model to onnx": [[411, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[411, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[412, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[411, "create-campaign"]], "Creating Continuous Search Spaces": [[422, null]], "Creating a Simplex-Bound Discrete Subspace": [[450, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[442, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[427, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[402, "creating-and-printing-the-campaign"], [403, "creating-and-printing-the-campaign"], [405, "creating-and-printing-the-campaign"], [419, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[391, "creating-the-campaigns"]], "Creating the Objective": [[393, "creating-the-objective"]], "Creating the Optimization Objective": [[430, "creating-the-optimization-objective"], [431, "creating-the-optimization-objective"]], "Creating the Search Space": [[430, "creating-the-search-space"]], "Creating the Searchspace": [[431, "creating-the-searchspace"]], "Creating the campaign": [[397, "creating-the-campaign"], [412, "creating-the-campaign"], [426, "creating-the-campaign"]], "Creating the constraint": [[402, "creating-the-constraint"], [404, "creating-the-constraint"]], "Creating the constraints": [[403, "creating-the-constraints"], [405, "creating-the-constraints"]], "Creating the objective": [[419, "creating-the-objective"]], "Creating the recommender object": [[397, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[392, "creating-the-searchspace-and-the-objective"], [394, "creating-the-searchspace-and-the-objective"], [399, "creating-the-searchspace-and-the-objective"], [400, "creating-the-searchspace-and-the-objective"], [402, "creating-the-searchspace-and-the-objective"], [403, "creating-the-searchspace-and-the-objective"], [404, "creating-the-searchspace-and-the-objective"], [405, "creating-the-searchspace-and-the-objective"], [423, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[442, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[453, null]], "Custom Hooks": [[406, null]], "Custom Surrogates": [[410, null]], "CustomDiscreteParameter": [[138, null], [448, "customdiscreteparameter"]], "CustomEncoding": [[141, null]], "CustomONNXSurrogate": [[254, null]], "Dataframe deserialization": [[451, "dataframe-deserialization"]], "DefaultKernelFactory": [[268, null]], "Defining config dictionaries": [[428, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[408, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[409, "defining-the-hook"]], "Defining the Hooks": [[407, "defining-the-hooks"]], "Defining the Optimization Objective": [[434, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[391, "defining-the-optimization-problem"], [420, "defining-the-optimization-problem"]], "Defining the Search Space": [[434, "defining-the-search-space"]], "Defining the Tasks": [[430, "defining-the-tasks"], [431, "defining-the-tasks"]], "Defining the targets": [[419, "defining-the-targets"]], "Defining the test function": [[399, "defining-the-test-function"], [400, "defining-the-test-function"], [423, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[424, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[436, "deprecations"], [436, "id22"], [436, "id29"], [436, "id36"], [436, "id45"], [436, "id61"], [436, "id67"], [436, "id73"], [436, "id90"]], "Deserialization from configuration strings": [[451, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[119, null], [447, "desirabilityobjective"]], "Developer Tools": [[437, "developer-tools"]], "Discrete Constraints": [[443, "discrete-constraints"]], "Discrete Parameters": [[448, "discrete-parameters"]], "Discrete Subspaces": [[450, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[414, null]], "DiscreteCardinalityConstraint": [[49, null]], "DiscreteConstraint": [[36, null]], "DiscreteCustomConstraint": [[50, null], [443, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[51, null], [443, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[52, null], [443, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[53, null], [443, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[54, null], [443, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[132, null]], "DiscretePermutationInvarianceConstraint": [[55, null], [443, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[56, null]], "DiscreteSamplingMethod": [[375, null]], "DiscreteSumConstraint": [[57, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[443, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[417, "discussion"]], "Disk Caching": [[444, "disk-caching"]], "Dummy": [[311, null]], "Duplicate Substances": [[414, "duplicate-substances"]], "Dynamic Exclusion": [[445, "dynamic-exclusion"]], "EDBOKernelFactory": [[270, null]], "EXPERIMENTAL: Floating Point Precision": [[444, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[457, null]], "Environment Variables": [[444, null]], "Equivalent copies": [[451, null]], "Estimation with Constraints": [[457, null]], "Example Searchspace and objective parameters": [[397, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[399, null]], "Example for creating campaigns from configs": [[427, null]], "Example for custom parameter passing in surrogate models": [[412, null]], "Example for full simulation loop using a table-based lookup mechanism": [[393, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[394, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[392, null]], "Example for linear constraints in a continuous searchspace": [[400, null]], "Example for surrogate model with a custom pretrained model": [[411, null]], "Example for the serialization of a campaign": [[426, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[423, null]], "Example for using custom constraints in discrete searchspaces": [[402, null]], "Example for using dependency constraints in discrete searchspaces": [[403, null]], "Example for using different strategies": [[397, null]], "Example for using exclusion constraints in discrete searchspaces": [[404, null]], "Example for using exclusion constraints incorporating sums and products": [[405, null]], "Example for using synthetic test functions in hybrid spaces": [[424, null]], "Example for using the multi target mode for the objective": [[419, null]], "Example for validation of a config file": [[428, null]], "Examples": [[432, null]], "Examples On This Page": [[446, null]], "Excluding Configurations": [[445, "excluding-configurations"]], "Expectations": [[455, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[411, "experiment-setup"], [412, "experiment-setup"]], "Experiment setup": [[402, "experiment-setup"], [403, "experiment-setup"], [404, "experiment-setup"], [405, "experiment-setup"], [426, "experiment-setup"]], "Experiment setup and creating the searchspace": [[419, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[445, null]], "Experimental Representation Limits": [[446, null]], "Experimental and Computational Representations": [[446, "experimental-and-computational-representations"]], "Experimental feature only!": [[444, null]], "Expired Deprecations (from 0.6.*)": [[436, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[436, "expired-deprecations-from-0-7"]], "Explainers": [[446, "explainers"]], "Extending BayBE\u2019s Functionality": [[437, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[453, "extracting-the-model-for-advanced-study"]], "FAQ": [[433, null]], "FPSRecommender": [[200, null]], "Fixed": [[436, "fixed"], [436, "id8"], [436, "id11"], [436, "id13"], [436, "id17"], [436, "id21"], [436, "id27"], [436, "id35"], [436, "id39"], [436, "id44"], [436, "id49"], [436, "id53"], [436, "id60"], [436, "id65"], [436, "id71"], [436, "id77"], [436, "id85"], [436, "id89"], [436, "id94"], [436, "id101"], [436, "id105"], [436, "id109"], [436, "id116"], [436, "id120"], [436, "id124"], [436, "id128"], [436, "id132"], [436, "id134"], [436, "id137"]], "From GitHub": [[434, "from-github"]], "From Local Clone": [[434, "from-local-clone"]], "From Package Index": [[434, "from-package-index"]], "From the Default Constructor": [[450, "from-the-default-constructor"]], "Further information": [[442, "further-information"]], "GammaPrior": [[162, null]], "GaussianMixtureClusteringRecommender": [[195, null]], "GaussianProcessPreset": [[265, null]], "GaussianProcessSurrogate": [[258, null]], "General Information": [[449, "general-information"]], "General Workflow": [[437, "general-workflow"]], "Generating Lookup Tables": [[430, "generating-lookup-tables"], [431, "generating-lookup-tables"]], "Getting Recommendations": [[445, null]], "Getting a recommendation and adding measurements": [[396, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[442, "getting-recommendations"]], "Global Uncertainty Reduction": [[440, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[163, null]], "HalfNormalPrior": [[164, null]], "Hook instance vs. target instance": [[407, null]], "Hybrid constraints": [[443, null]], "Imports": [[391, "imports"], [407, "imports"], [409, "imports"], [414, "imports"], [415, "imports"], [417, "imports"], [420, "imports"], [422, "imports"], [430, "imports"], [431, "imports"]], "Inclusion of initial data": [[392, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[246, null]], "Indices and Tables": [[434, "indices-and-tables"]], "Influence of Continuous Parameters": [[457, null]], "Insights": [[446, null]], "Installation Related Issues": [[435, "installation-related-issues"]], "Interval": [[355, null]], "Invoking alternative constructors": [[451, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[411, "iterate-with-recommendations-and-measurements"], [412, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[451, "json-de-serialization"]], "KMeansClusteringRecommender": [[196, null]], "Kernel": [[96, null]], "KernelFactory": [[260, null]], "Known Issues": [[435, null]], "License": [[439, null]], "Limitations": [[454, "limitations"]], "LinearKernel": [[98, null]], "Links for documentation": [[412, "links-for-documentation"]], "Local Uncertainty Reduction": [[440, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[165, null]], "Lookup functionality and data creation": [[392, "lookup-functionality-and-data-creation"], [393, "lookup-functionality-and-data-creation"], [394, "lookup-functionality-and-data-creation"]], "MATCH mode": [[454, "match-mode"]], "MIN and MAX mode": [[454, "min-and-max-mode"]], "Maintainers": [[438, "maintainers"]], "Mandatory target bounds": [[447, null]], "Manual verification of the constraint": [[402, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[403, "manual-verification-of-the-constraints"], [404, "manual-verification-of-the-constraints"], [405, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[441, "marking-experiments-as-pending"]], "MaternKernel": [[99, null]], "MeanPredictionSurrogate": [[274, null]], "Memory During Optimization": [[457, null]], "MemorySize": [[211, null]], "Meta Recommenders": [[445, null], [449, "meta-recommenders"]], "MetaRecommender": [[173, null]], "Method overrides": [[437, "method-overrides"]], "Missing Lookup Values": [[452, null]], "Mixtures": [[413, null]], "Model Interpretation in BO": [[446, null]], "Model Outputs": [[411, "model-outputs"], [412, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[414, null]], "Modeling a Mixture in Traditional Representation": [[415, null]], "Monitoring the Probability of Improvement": [[409, null]], "Monkeypatching": [[407, "monkeypatching"], [408, null], [409, "monkeypatching"]], "Multi Target": [[418, null]], "Multi-Armed Bandit": [[416, null]], "Multi-output Modeling": [[453, "multi-output-modeling"]], "NGBoostSurrogate": [[276, null]], "NaiveHybridSpaceRecommender": [[180, null]], "Necessary imports": [[411, "necessary-imports"], [412, "necessary-imports"], [426, "necessary-imports"], [427, "necessary-imports"], [428, "necessary-imports"]], "Necessary imports for this example": [[392, "necessary-imports-for-this-example"], [393, "necessary-imports-for-this-example"], [394, "necessary-imports-for-this-example"], [396, "necessary-imports-for-this-example"], [397, "necessary-imports-for-this-example"], [399, "necessary-imports-for-this-example"], [400, "necessary-imports-for-this-example"], [402, "necessary-imports-for-this-example"], [403, "necessary-imports-for-this-example"], [404, "necessary-imports-for-this-example"], [405, "necessary-imports-for-this-example"], [419, "necessary-imports-for-this-example"], [423, "necessary-imports-for-this-example"], [424, "necessary-imports-for-this-example"]], "Nesting objects": [[451, "nesting-objects"]], "Non-dominated Configurations": [[447, null]], "NonPredictiveRecommender": [[193, null]], "NormalPrior": [[166, null]], "NumericalContinuousParameter": [[145, null], [448, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[146, null], [448, "numericaldiscreteparameter"]], "NumericalTarget": [[296, null], [454, "numericaltarget"]], "Objective": [[114, null], [447, null]], "Optimizing a Custom Black-Box Function": [[391, null]], "Optional Dependencies": [[434, "optional-dependencies"]], "Optional dependency": [[448, null]], "Optional: Defining the Optimization Strategy": [[434, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[414, null]], "PAMClusteringRecommender": [[197, null]], "Parameter": [[133, null]], "Parameter Importance via SHAP": [[446, "parameter-importance-via-shap"]], "Parameter Setup": [[414, "parameter-setup"], [415, "parameter-setup"]], "Parameter encoding": [[448, null]], "Parameter names": [[448, null]], "Parameter tolerances": [[442, null]], "ParameterEncoding": [[142, null]], "Parameters": [[448, null]], "Parameters for a full simulation loop": [[392, "parameters-for-a-full-simulation-loop"], [393, "parameters-for-a-full-simulation-loop"], [394, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[124, null], [447, "paretoobjective"]], "PartialAcquisitionFunction": [[24, null]], "Performing some iterations": [[419, "performing-some-iterations"]], "Performing the simulation loop": [[392, "performing-the-simulation-loop"]], "PeriodicKernel": [[100, null]], "Permanent Exclusion": [[445, "permanent-exclusion"]], "Permutation Invariance": [[414, "permutation-invariance"]], "PiecewisePolynomialKernel": [[101, null]], "PlainKernelFactory": [[261, null]], "Plots": [[446, "plots"]], "Plotting the Results": [[391, "plotting-the-results"], [408, "plotting-the-results"], [409, "plotting-the-results"]], "Polars": [[444, "polars"]], "PolynomialKernel": [[102, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[159, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[408, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[108, null]], "Pure Recommenders": [[449, "pure-recommenders"]], "PureRecommender": [[183, null]], "Purely Continuous Search Spaces": [[440, null]], "PyCharm vs. exceptiongroup": [[435, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[103, null]], "RFFKernel": [[104, null]], "RQKernel": [[105, null]], "RandomForestSurrogate": [[278, null]], "RandomRecommender": [[201, null]], "RecommenderProtocol": [[170, null]], "Recommenders": [[449, null]], "Registering Custom Hooks": [[407, null]], "Removed": [[436, "removed"], [436, "id28"], [436, "id34"], [436, "id43"], [436, "id56"], [436, "id66"], [436, "id72"], [436, "id81"]], "Representation of Data within Discrete Subspaces": [[450, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[457, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[450, "restricting-search-spaces-using-constraints"]], "Row Order": [[444, null]], "Running the Simulation": [[417, "running-the-simulation"]], "Running the Simulation Loop": [[391, "running-the-simulation-loop"]], "SHAPInsight": [[87, null]], "SKLearnClusteringRecommender": [[198, null]], "Sampling Recommenders": [[449, "sampling-recommenders"]], "Scalarizer": [[122, null]], "ScaleKernel": [[109, null]], "Search Space Creation": [[414, "search-space-creation"], [415, "search-space-creation"]], "Search Space Memory Estimation": [[457, "search-space-memory-estimation"]], "Search Spaces": [[450, null]], "SearchSpace": [[206, null]], "SearchSpaceType": [[207, null]], "Searchspaces": [[421, null]], "Seeing Transfer Learning in Action": [[455, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[442, null]], "SequentialMetaRecommender": [[176, null]], "SerialMixin": [[229, null]], "Serialization": [[425, null], [442, "serialization"], [451, null]], "Serialization and de-serialization": [[426, "serialization-and-de-serialization"]], "Settings": [[391, "settings"], [408, "settings"], [409, "settings"], [420, "settings"], [422, "settings"], [430, "settings"], [431, "settings"]], "Setup": [[396, "setup"], [417, "setup"]], "Signature components": [[407, null]], "Simplex Construction": [[414, null]], "Simulating Multiple Scenarios": [[452, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[452, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[452, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[408, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[408, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[452, null]], "Simulation Loop": [[430, "simulation-loop"], [431, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[420, null]], "SingleTargetObjective": [[126, null], [447, "singletargetobjective"]], "Slot-based Representation": [[415, null]], "SmoothedBoxPrior": [[167, null]], "StreamingSequentialMetaRecommender": [[177, null]], "Sub-Sampling Method": [[440, null]], "SubSelectionCondition": [[39, null], [443, "subselectioncondition"]], "SubspaceContinuous": [[204, null]], "SubspaceDiscrete": [[212, null]], "Substance Amounts": [[414, "substance-amounts"]], "SubstanceEncoding": [[143, null]], "SubstanceParameter": [[149, null], [448, "substanceparameter"]], "Suggested Fix": [[435, null], [435, null], [435, null], [435, null]], "Supported Acquisition Functions": [[441, null]], "Supported Recommenders": [[441, null]], "Surrogate": [[247, null]], "Surrogate Replication": [[453, "surrogate-replication"]], "SurrogateProtocol": [[248, null]], "Surrogates": [[453, null]], "Synchronizing Pull Requests": [[437, "synchronizing-pull-requests"]], "Target": [[288, null]], "TargetMode": [[293, null]], "TargetTransformation": [[294, null]], "Targets": [[454, null]], "TaskParameter": [[136, null], [448, "taskparameter"]], "Technology": [[455, null]], "Telemetry": [[444, "telemetry"]], "Telemetry Scope": [[444, null]], "Terminology": [[414, "terminology"], [451, null], [455, null]], "Terminology Continued": [[455, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[452, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[417, "the-black-box-model"]], "The Lookup Mechanism": [[452, "the-lookup-mechanism"]], "The Optimization Loop": [[434, "the-optimization-loop"]], "The Role of the TaskParameter": [[455, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[427, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[445, "the-recommend-call"]], "The type field": [[451, "the-type-field"]], "Theoretical Span": [[414, null]], "ThresholdCondition": [[40, null], [443, "thresholdcondition"]], "Trajectory-Based Control": [[445, null]], "Transfer Learning": [[429, null], [431, null], [455, null]], "Triggering the Hook": [[409, "triggering-the-hook"]], "Triggering the Hooks": [[407, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[178, null]], "Uninstalling Internet Packages": [[444, null]], "Unlocking Data Treasures Through Transfer Learning": [[455, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[313, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[456, null]], "Using Custom Models": [[453, "using-custom-models"]], "Using Explicit Bounds": [[450, "using-explicit-bounds"]], "Using None": [[452, "using-none"]], "Using a Callable": [[452, "using-a-callable"]], "Using a Dataframe": [[452, "using-a-dataframe"]], "Using abbreviations": [[451, "using-abbreviations"]], "Using configuration instead": [[411, "using-configuration-instead"], [412, "using-configuration-instead"]], "Using default values": [[451, "using-default-values"]], "Utilities": [[457, null]], "Validation of model parameters": [[412, "validation-of-model-parameters"]], "Verification of Constraints": [[414, "verification-of-constraints"], [415, "verification-of-constraints"]], "Verification of Span": [[414, "verification-of-span"]], "Verification of the two dictionaries": [[428, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[400, "verify-the-constraints"]], "Visualization": [[420, "visualization"]], "Windows \u2013 Torch Problems": [[435, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[399, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [400, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [424, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[437, "writing-docstrings"]], "Writing classes": [[437, "writing-classes"]], "[0.1.0] - 2022-10-01": [[436, "id138"]], "[0.10.0] - 2024-08-02": [[436, "id30"]], "[0.11.0] - 2024-09-09": [[436, "id23"]], "[0.11.1] - 2024-10-01": [[436, "id18"]], "[0.11.2] - 2024-10-11": [[436, "id14"]], "[0.11.3] - 2024-11-06": [[436, "id12"]], "[0.11.4] - 2025-01-27": [[436, "id9"]], "[0.12.0] - 2025-01-28": [[436, "id5"]], "[0.12.1] - 2025-01-29": [[436, "id3"]], "[0.12.2] - 2025-01-31": [[436, "id1"]], "[0.2.0] - 2022-11-10": [[436, "id135"]], "[0.2.1] - 2022-12-01": [[436, "id133"]], "[0.2.2] - 2023-01-13": [[436, "id129"]], "[0.2.3] - 2023-03-14": [[436, "id125"]], "[0.2.4] - 2023-03-24": [[436, "id121"]], "[0.3.0] - 2023-06-27": [[436, "id117"]], "[0.3.1] - 2023-07-17": [[436, "id113"]], "[0.3.2] - 2023-07-24": [[436, "id110"]], "[0.4.0] - 2023-08-16": [[436, "id106"]], "[0.4.1] - 2023-08-23": [[436, "id102"]], "[0.4.2] - 2023-08-29": [[436, "id98"]], "[0.5.0] - 2023-09-15": [[436, "id95"]], "[0.5.1] - 2023-10-19": [[436, "id91"]], "[0.6.0] - 2023-11-17": [[436, "id86"]], "[0.6.1] - 2023-11-27": [[436, "id82"]], "[0.7.0] - 2023-12-04": [[436, "id78"]], "[0.7.1] - 2023-12-07": [[436, "id74"]], "[0.7.2] - 2024-01-24": [[436, "id68"]], "[0.7.3] - 2024-02-09": [[436, "id62"]], "[0.7.4] - 2024-02-28": [[436, "id57"]], "[0.8.0] - 2024-02-29": [[436, "id54"]], "[0.8.1] - 2024-03-11": [[436, "id50"]], "[0.8.2] - 2024-03-27": [[436, "id46"]], "[0.9.0] - 2024-05-21": [[436, "id40"]], "[0.9.1] - 2024-06-04": [[436, "id37"]], "[Unreleased]": [[436, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[21, null]], "baybe.acquisition.partial": [[23, null]], "baybe.acquisition.utils": [[25, null]], "baybe.acquisition.utils.convert_acqf": [[26, null]], "baybe.acquisition.utils.str_to_acqf": [[27, null]], "baybe.campaign": [[28, null]], "baybe.constraints": [[30, null]], "baybe.constraints.base": [[31, null]], "baybe.constraints.conditions": [[37, null]], "baybe.constraints.continuous": [[41, null]], "baybe.constraints.deprecation": [[44, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[45, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[46, null]], "baybe.constraints.deprecation.structure_constraints": [[47, null]], "baybe.constraints.discrete": [[48, null]], "baybe.constraints.validation": [[58, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[59, null]], "baybe.constraints.validation.validate_constraints": [[60, null]], "baybe.exceptions": [[61, null]], "baybe.exceptions.DeprecationError": [[62, null]], "baybe.exceptions.EmptySearchSpaceError": [[63, null]], "baybe.exceptions.IncompatibilityError": [[64, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[65, null]], "baybe.exceptions.IncompatibleArgumentError": [[66, null]], "baybe.exceptions.IncompatibleExplainerError": [[67, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[68, null]], "baybe.exceptions.IncompatibleSurrogateError": [[69, null]], "baybe.exceptions.InvalidSurrogateModelError": [[70, null]], "baybe.exceptions.InvalidTargetValueError": [[71, null]], "baybe.exceptions.ModelNotTrainedError": [[72, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[73, null]], "baybe.exceptions.NoRecommendersLeftError": [[74, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[75, null]], "baybe.exceptions.NothingToSimulateError": [[76, null]], "baybe.exceptions.NumericalUnderflowError": [[77, null]], "baybe.exceptions.OptionalImportError": [[78, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[79, null]], "baybe.exceptions.UnidentifiedSubclassError": [[80, null]], "baybe.exceptions.UnmatchedAttributeError": [[81, null]], "baybe.exceptions.UnusedObjectWarning": [[82, null]], "baybe.insights": [[83, null]], "baybe.insights.shap": [[84, null]], "baybe.insights.shap.EXPLAINERS": [[85, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[86, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[88, null]], "baybe.insights.shap.SHAP_PLOTS": [[89, null]], "baybe.insights.shap.is_shap_explainer": [[90, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[91, null]], "baybe.kernels": [[92, null]], "baybe.kernels.base": [[93, null]], "baybe.kernels.basic": [[97, null]], "baybe.kernels.composite": [[106, null]], "baybe.objective": [[110, null]], "baybe.objective.Objective": [[111, null]], "baybe.objectives": [[112, null]], "baybe.objectives.base": [[113, null]], "baybe.objectives.base.to_objective": [[115, null]], "baybe.objectives.deprecation": [[116, null]], "baybe.objectives.deprecation.structure_objective": [[117, null]], "baybe.objectives.desirability": [[118, null]], "baybe.objectives.desirability.scalarize": [[120, null]], "baybe.objectives.enum": [[121, null]], "baybe.objectives.pareto": [[123, null]], "baybe.objectives.single": [[125, null]], "baybe.objectives.validation": [[127, null]], "baybe.objectives.validation.validate_target_names": [[128, null]], "baybe.parameters": [[129, null]], "baybe.parameters.base": [[130, null]], "baybe.parameters.categorical": [[134, null]], "baybe.parameters.custom": [[137, null]], "baybe.parameters.enum": [[139, null]], "baybe.parameters.numerical": [[144, null]], "baybe.parameters.substance": [[147, null]], "baybe.parameters.substance.Smiles": [[148, null]], "baybe.parameters.utils": [[150, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[151, null]], "baybe.parameters.utils.sort_parameters": [[152, null]], "baybe.parameters.validation": [[153, null]], "baybe.parameters.validation.validate_decorrelation": [[154, null]], "baybe.parameters.validation.validate_is_finite": [[155, null]], "baybe.parameters.validation.validate_unique_values": [[156, null]], "baybe.priors": [[157, null]], "baybe.priors.base": [[158, null]], "baybe.priors.basic": [[160, null]], "baybe.recommenders": [[168, null]], "baybe.recommenders.base": [[169, null]], "baybe.recommenders.meta": [[171, null]], "baybe.recommenders.meta.base": [[172, null]], "baybe.recommenders.meta.sequential": [[174, null]], "baybe.recommenders.naive": [[179, null]], "baybe.recommenders.pure": [[181, null]], "baybe.recommenders.pure.base": [[182, null]], "baybe.recommenders.pure.bayesian": [[184, null]], "baybe.recommenders.pure.bayesian.base": [[185, null]], "baybe.recommenders.pure.bayesian.botorch": [[187, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[189, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[190, null]], "baybe.recommenders.pure.nonpredictive": [[191, null]], "baybe.recommenders.pure.nonpredictive.base": [[192, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[194, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[199, null]], "baybe.searchspace": [[202, null]], "baybe.searchspace.continuous": [[203, null]], "baybe.searchspace.core": [[205, null]], "baybe.searchspace.core.to_searchspace": [[208, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[209, null]], "baybe.searchspace.discrete": [[210, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[213, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[214, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[215, null]], "baybe.searchspace.validation": [[216, null]], "baybe.searchspace.validation.get_transform_parameters": [[217, null]], "baybe.searchspace.validation.validate_parameter_names": [[218, null]], "baybe.searchspace.validation.validate_parameters": [[219, null]], "baybe.serialization": [[220, null]], "baybe.serialization.core": [[221, null]], "baybe.serialization.core.block_deserialization_hook": [[222, null]], "baybe.serialization.core.block_serialization_hook": [[223, null]], "baybe.serialization.core.converter": [[224, null]], "baybe.serialization.core.get_base_structure_hook": [[225, null]], "baybe.serialization.core.select_constructor_hook": [[226, null]], "baybe.serialization.core.unstructure_base": [[227, null]], "baybe.serialization.mixin": [[228, null]], "baybe.serialization.utils": [[230, null]], "baybe.serialization.utils.deserialize_dataframe": [[231, null]], "baybe.serialization.utils.serialize_dataframe": [[232, null]], "baybe.simulation": [[233, null]], "baybe.simulation.core": [[234, null]], "baybe.simulation.core.simulate_experiment": [[235, null]], "baybe.simulation.lookup": [[236, null]], "baybe.simulation.lookup.look_up_targets": [[237, null]], "baybe.simulation.scenarios": [[238, null]], "baybe.simulation.scenarios.simulate_scenarios": [[239, null]], "baybe.simulation.transfer_learning": [[240, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[241, null]], "baybe.surrogates": [[242, null]], "baybe.surrogates.bandit": [[243, null]], "baybe.surrogates.base": [[245, null]], "baybe.surrogates.composite": [[249, null]], "baybe.surrogates.composite.structure_surrogate_getter": [[251, null]], "baybe.surrogates.composite.unstructure_surrogate_getter": [[252, null]], "baybe.surrogates.custom": [[253, null]], "baybe.surrogates.custom.register_custom_architecture": [[255, null]], "baybe.surrogates.gaussian_process": [[256, null]], "baybe.surrogates.gaussian_process.core": [[257, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[259, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[262, null]], "baybe.surrogates.gaussian_process.presets": [[263, null]], "baybe.surrogates.gaussian_process.presets.core": [[264, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[266, null]], "baybe.surrogates.gaussian_process.presets.default": [[267, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[269, null]], "baybe.surrogates.linear": [[271, null]], "baybe.surrogates.naive": [[273, null]], "baybe.surrogates.ngboost": [[275, null]], "baybe.surrogates.random_forest": [[277, null]], "baybe.surrogates.utils": [[279, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[280, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[281, null]], "baybe.surrogates.utils.catch_constant_targets": [[282, null]], "baybe.surrogates.validation": [[283, null]], "baybe.surrogates.validation.get_model_params_validator": [[284, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[285, null]], "baybe.targets": [[286, null]], "baybe.targets.base": [[287, null]], "baybe.targets.binary": [[289, null]], "baybe.targets.binary.ChoiceValue": [[291, null]], "baybe.targets.enum": [[292, null]], "baybe.targets.numerical": [[295, null]], "baybe.targets.transforms": [[297, null]], "baybe.targets.transforms.bell_transform": [[298, null]], "baybe.targets.transforms.linear_transform": [[299, null]], "baybe.targets.transforms.triangular_transform": [[300, null]], "baybe.telemetry": [[301, null]], "baybe.telemetry.get_user_details": [[302, null]], "baybe.telemetry.is_enabled": [[303, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[304, null]], "baybe.telemetry.telemetry_record_value": [[305, null]], "baybe.utils": [[306, null]], "baybe.utils.augmentation": [[307, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[308, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[309, null]], "baybe.utils.basic": [[310, null]], "baybe.utils.basic.UNSPECIFIED": [[312, null]], "baybe.utils.basic.convert_to_float": [[315, null]], "baybe.utils.basic.find_subclass": [[316, null]], "baybe.utils.basic.get_baseclasses": [[317, null]], "baybe.utils.basic.get_subclasses": [[318, null]], "baybe.utils.basic.group_duplicate_values": [[319, null]], "baybe.utils.basic.hilberts_factory": [[320, null]], "baybe.utils.basic.is_all_instance": [[321, null]], "baybe.utils.basic.match_attributes": [[322, null]], "baybe.utils.basic.refers_to": [[323, null]], "baybe.utils.basic.register_hooks": [[324, null]], "baybe.utils.basic.to_tuple": [[325, null]], "baybe.utils.boolean": [[326, null]], "baybe.utils.boolean.check_if_in": [[327, null]], "baybe.utils.boolean.is_abstract": [[328, null]], "baybe.utils.boolean.strtobool": [[329, null]], "baybe.utils.chemistry": [[330, null]], "baybe.utils.chemistry.get_canonical_smiles": [[331, null]], "baybe.utils.chemistry.get_fingerprint_class": [[332, null]], "baybe.utils.chemistry.name_to_smiles": [[333, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[334, null]], "baybe.utils.conversion": [[335, null]], "baybe.utils.conversion.fraction_to_float": [[336, null]], "baybe.utils.conversion.nonstring_to_tuple": [[337, null]], "baybe.utils.dataframe": [[338, null]], "baybe.utils.dataframe.add_fake_measurements": [[339, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[340, null]], "baybe.utils.dataframe.add_parameter_noise": [[341, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[342, null]], "baybe.utils.dataframe.create_fake_input": [[343, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[344, null]], "baybe.utils.dataframe.df_drop_string_columns": [[345, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[346, null]], "baybe.utils.dataframe.filter_df": [[347, null]], "baybe.utils.dataframe.fuzzy_row_match": [[348, null]], "baybe.utils.dataframe.get_transform_objects": [[349, null]], "baybe.utils.dataframe.pretty_print_df": [[350, null]], "baybe.utils.dataframe.to_tensor": [[351, null]], "baybe.utils.dataframe.transform_target_columns": [[352, null]], "baybe.utils.interval": [[353, null]], "baybe.utils.interval.InfiniteIntervalError": [[354, null]], "baybe.utils.interval.convert_bounds": [[356, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[357, null]], "baybe.utils.memory": [[358, null]], "baybe.utils.memory.bytes_to_human_readable": [[359, null]], "baybe.utils.numerical": [[360, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[361, null]], "baybe.utils.numerical.DTypeFloatONNX": [[362, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[363, null]], "baybe.utils.numerical.closer_element": [[364, null]], "baybe.utils.numerical.closest_element": [[365, null]], "baybe.utils.numerical.geom_mean": [[366, null]], "baybe.utils.plotting": [[367, null]], "baybe.utils.plotting.create_example_plots": [[368, null]], "baybe.utils.plotting.indent": [[369, null]], "baybe.utils.plotting.to_string": [[370, null]], "baybe.utils.random": [[371, null]], "baybe.utils.random.set_random_seed": [[372, null]], "baybe.utils.random.temporary_seed": [[373, null]], "baybe.utils.sampling_algorithms": [[374, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[376, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[377, null]], "baybe.utils.scaling": [[378, null]], "baybe.utils.torch": [[380, null]], "baybe.utils.torch.DTypeFloatTorch": [[381, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[382, null]], "baybe.utils.validation": [[383, null]], "baybe.utils.validation.finite_float": [[384, null]], "baybe.utils.validation.non_inf_float": [[385, null]], "baybe.utils.validation.non_nan_float": [[386, null]], "baybe.utils.validation.validate_not_nan": [[387, null]], "baybe.utils.validation.validate_parameter_input": [[388, null]], "baybe.utils.validation.validate_target_input": [[389, null]], "classproperty": [[314, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[435, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedHypervolumeImprovement": [[12, null]], "qLogNoisyExpectedImprovement": [[13, null]], "qNegIntegratedPosteriorVariance": [[14, null]], "qNoisyExpectedImprovement": [[15, null]], "qPosteriorStandardDeviation": [[16, null]], "qProbabilityOfImprovement": [[17, null]], "qSimpleRegret": [[18, null]], "qThompsonSampling": [[19, null]], "qUpperConfidenceBound": [[20, null]], "\u201cPre-training\u201d stage": [[411, "pre-training-stage"]], "\u26a1 Quick Start": [[434, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[434, "maintainers"]], "\ud83d\udcbb Installation": [[434, "installation"]], "\ud83d\udcc4 License": [[434, "license"]], "\ud83d\udce1 Telemetry": [[434, "telemetry"]], "\ud83d\udd0b Batteries Included": [[434, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[434, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.composite.structure_surrogate_getter", "_autosummary/baybe.surrogates.composite.unstructure_surrogate_getter", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.composite.structure_surrogate_getter.rst", "_autosummary/baybe.surrogates.composite.unstructure_surrogate_getter.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[14, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[15, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[16, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[17, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[18, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[19, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[20, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[22, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[24, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[29, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[32, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[33, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[34, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[36, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[39, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[40, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[62, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[63, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[64, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[65, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[66, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[67, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[68, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[69, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[70, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[71, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[72, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[73, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[74, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[75, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[76, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[77, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[78, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[79, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[80, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[81, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[82, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[87, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[94, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[95, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[96, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[98, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[99, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[100, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[101, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[102, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[103, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[104, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[105, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[107, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[108, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[109, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[114, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[119, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[124, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[126, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[131, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[132, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[133, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[135, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[136, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[149, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[159, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[161, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[162, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[163, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[164, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[165, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[166, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[167, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[170, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[173, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[175, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[180, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[183, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[186, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[193, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[195, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[196, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[197, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[198, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[200, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[206, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[211, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[246, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[247, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[248, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[250, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[260, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[261, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[268, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[270, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[274, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[288, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[290, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[296, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[314, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[311, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[354, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[355, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[379, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[62, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[63, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[64, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[65, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[66, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[67, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[68, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[69, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[70, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[71, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[72, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[73, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[74, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[75, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[76, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[77, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[78, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[79, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[80, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[81, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[82, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[140, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[141, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[143, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[354, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[167, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[14, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[15, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[16, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[17, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[18, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[19, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[20, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[22, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[186, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[186, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[22, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[136, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[339, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[29, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[340, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[341, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[107, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[29, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[180, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[183, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[186, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[193, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[195, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[196, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[197, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[198, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[200, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[29, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[29, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[180, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[183, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[186, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[193, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[195, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[196, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[197, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[198, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[200, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[180, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[183, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[186, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[193, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[195, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[196, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[197, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[198, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[200, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[161, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[342, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[167, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[87, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[109, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[107, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[108, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[175, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[94, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[280, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[281, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[265, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[21, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[23, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[25, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[28, "module-baybe.campaign", false]], "baybe.constraints": [[30, "module-baybe.constraints", false]], "baybe.constraints.base": [[31, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[37, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[41, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[44, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[48, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[58, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[61, "module-baybe.exceptions", false]], "baybe.insights": [[83, "module-baybe.insights", false]], "baybe.insights.shap": [[84, "module-baybe.insights.shap", false]], "baybe.kernels": [[92, "module-baybe.kernels", false]], "baybe.kernels.base": [[93, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[97, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[106, "module-baybe.kernels.composite", false]], "baybe.objective": [[110, "module-baybe.objective", false]], "baybe.objectives": [[112, "module-baybe.objectives", false]], "baybe.objectives.base": [[113, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[116, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[118, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[121, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[123, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[125, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[127, "module-baybe.objectives.validation", false]], "baybe.parameters": [[129, "module-baybe.parameters", false]], "baybe.parameters.base": [[130, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[134, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[137, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[139, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[144, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[147, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[150, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[153, "module-baybe.parameters.validation", false]], "baybe.priors": [[157, "module-baybe.priors", false]], "baybe.priors.base": [[158, "module-baybe.priors.base", false]], "baybe.priors.basic": [[160, "module-baybe.priors.basic", false]], "baybe.recommenders": [[168, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[169, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[171, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[172, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[174, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[179, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[181, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[182, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[184, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[185, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[187, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[189, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[191, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[192, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[194, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[199, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[202, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[203, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[205, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[210, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[216, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[220, "module-baybe.serialization", false]], "baybe.serialization.core": [[221, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[228, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[230, "module-baybe.serialization.utils", false]], "baybe.simulation": [[233, "module-baybe.simulation", false]], "baybe.simulation.core": [[234, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[236, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[238, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[240, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[242, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[243, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[245, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[249, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[253, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[256, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[257, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[259, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[263, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[264, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[267, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[269, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[271, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[273, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[275, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[277, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[279, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[283, "module-baybe.surrogates.validation", false]], "baybe.targets": [[286, "module-baybe.targets", false]], "baybe.targets.base": [[287, "module-baybe.targets.base", false]], "baybe.targets.binary": [[289, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[292, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[295, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[297, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[301, "module-baybe.telemetry", false]], "baybe.utils": [[306, "module-baybe.utils", false]], "baybe.utils.augmentation": [[307, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[310, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[326, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[330, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[335, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[338, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[353, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[358, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[360, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[367, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[371, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[374, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[378, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[380, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[383, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[186, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[294, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[298, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[20, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[161, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[161, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[290, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[222, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[223, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[24, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[296, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[359, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[29, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[282, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[140, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[135, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[355, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[327, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[291, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[314, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[364, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[365, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[379, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[132, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[135, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[136, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[149, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[206, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[211, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[131, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[132, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[133, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[135, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[136, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[149, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[206, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[211, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[211, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[180, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[183, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[186, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[193, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[195, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[196, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[197, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[198, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[200, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[95, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[250, "baybe.surrogates.composite.CompositeSurrogate", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[162, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[206, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[206, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[180, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[355, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[206, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[207, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[45, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[46, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[131, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[26, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[356, "baybe.utils.interval.convert_bounds", false]], "convert_to_float() (in module baybe.utils.basic)": [[315, "baybe.utils.basic.convert_to_float", false]], "converter (in module baybe.serialization.core)": [[224, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[355, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[368, "baybe.utils.plotting.create_example_plots", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[343, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[141, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[138, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[141, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[149, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[149, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[268, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[62, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[231, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[119, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[308, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[309, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[344, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[345, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[346, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[180, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[206, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[207, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[36, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[132, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[375, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[361, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[362, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[381, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[311, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[270, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[207, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[63, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[132, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[135, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[136, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[149, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[206, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[32, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[33, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[34, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[36, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[32, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[33, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[34, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[36, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[32, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[33, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[34, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[36, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[38, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[39, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[40, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[211, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[211, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[211, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[87, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[87, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[85, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[290, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[376, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[347, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[316, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[384, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[246, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[247, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[248, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[250, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[274, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[379, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[375, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[200, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[336, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[87, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[29, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[206, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[14, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[15, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[16, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[17, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[18, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[19, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[20, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[22, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[29, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[32, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[33, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[34, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[36, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[38, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[39, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[40, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[94, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[95, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[96, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[98, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[99, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[100, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[101, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[102, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[103, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[104, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[105, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[107, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[108, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[109, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[114, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[119, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[124, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[126, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[131, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[132, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[133, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[135, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[136, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[149, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[159, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[161, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[162, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[163, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[164, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[165, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[166, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[167, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[173, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[175, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[206, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[229, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[246, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[247, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[250, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[261, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[274, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[288, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[290, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[296, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[355, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[14, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[15, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[16, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[17, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[18, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[19, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[20, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[22, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[29, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[32, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[33, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[34, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[36, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[38, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[39, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[40, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[94, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[95, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[96, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[98, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[99, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[100, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[101, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[102, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[103, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[104, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[105, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[107, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[108, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[109, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[114, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[119, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[124, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[126, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[131, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[132, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[133, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[135, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[136, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[149, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[159, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[161, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[162, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[163, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[164, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[165, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[166, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[167, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[173, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[175, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[206, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[229, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[246, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[247, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[250, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[261, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[274, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[288, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[290, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[296, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[355, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[206, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[206, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[87, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[250, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[87, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[348, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[162, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[195, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[265, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[122, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[366, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[225, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[317, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[331, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[206, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[173, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[175, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[332, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[14, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[36, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[36, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[284, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[173, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[175, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[173, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[175, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[206, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[151, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[318, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[29, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[186, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[349, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[217, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[302, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[36, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[319, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[163, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[164, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[320, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[207, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatibilityerror": [[64, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[65, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[66, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[67, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[68, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[69, "baybe.exceptions.IncompatibleSurrogateError", false]], "indent() (in module baybe.utils.plotting)": [[369, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[246, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infiniteintervalerror": [[354, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[140, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[355, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[70, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[71, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[328, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[321, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[355, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[32, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[33, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[34, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[36, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[131, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[132, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[133, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[135, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[136, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[149, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[355, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[32, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[33, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[34, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[36, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[131, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[132, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[133, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[135, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[136, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[149, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[303, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[355, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[355, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[131, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[132, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[133, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[135, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[136, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[149, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[355, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[114, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[119, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[124, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[126, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[131, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[132, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[133, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[135, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[136, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[149, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[355, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[90, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[173, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[175, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[261, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[96, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[260, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[196, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[149, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[149, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[99, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[100, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[101, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[103, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[104, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[105, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[99, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[100, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[101, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[103, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[104, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[105, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[294, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[299, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[98, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[165, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[166, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[165, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[237, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[355, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[91, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[266, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[379, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[293, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[322, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[99, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[293, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[32, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[122, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[274, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[29, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[211, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[173, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[293, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[32, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[296, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[195, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[196, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[197, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[198, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[195, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[196, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[197, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[198, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[72, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [21, "module-baybe.acquisition.base", false], [23, "module-baybe.acquisition.partial", false], [25, "module-baybe.acquisition.utils", false], [28, "module-baybe.campaign", false], [30, "module-baybe.constraints", false], [31, "module-baybe.constraints.base", false], [37, "module-baybe.constraints.conditions", false], [41, "module-baybe.constraints.continuous", false], [44, "module-baybe.constraints.deprecation", false], [48, "module-baybe.constraints.discrete", false], [58, "module-baybe.constraints.validation", false], [61, "module-baybe.exceptions", false], [83, "module-baybe.insights", false], [84, "module-baybe.insights.shap", false], [92, "module-baybe.kernels", false], [93, "module-baybe.kernels.base", false], [97, "module-baybe.kernels.basic", false], [106, "module-baybe.kernels.composite", false], [110, "module-baybe.objective", false], [112, "module-baybe.objectives", false], [113, "module-baybe.objectives.base", false], [116, "module-baybe.objectives.deprecation", false], [118, "module-baybe.objectives.desirability", false], [121, "module-baybe.objectives.enum", false], [123, "module-baybe.objectives.pareto", false], [125, "module-baybe.objectives.single", false], [127, "module-baybe.objectives.validation", false], [129, "module-baybe.parameters", false], [130, "module-baybe.parameters.base", false], [134, "module-baybe.parameters.categorical", false], [137, "module-baybe.parameters.custom", false], [139, "module-baybe.parameters.enum", false], [144, "module-baybe.parameters.numerical", false], [147, "module-baybe.parameters.substance", false], [150, "module-baybe.parameters.utils", false], [153, "module-baybe.parameters.validation", false], [157, "module-baybe.priors", false], [158, "module-baybe.priors.base", false], [160, "module-baybe.priors.basic", false], [168, "module-baybe.recommenders", false], [169, "module-baybe.recommenders.base", false], [171, "module-baybe.recommenders.meta", false], [172, "module-baybe.recommenders.meta.base", false], [174, "module-baybe.recommenders.meta.sequential", false], [179, "module-baybe.recommenders.naive", false], [181, "module-baybe.recommenders.pure", false], [182, "module-baybe.recommenders.pure.base", false], [184, "module-baybe.recommenders.pure.bayesian", false], [185, "module-baybe.recommenders.pure.bayesian.base", false], [187, "module-baybe.recommenders.pure.bayesian.botorch", false], [189, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [191, "module-baybe.recommenders.pure.nonpredictive", false], [192, "module-baybe.recommenders.pure.nonpredictive.base", false], [194, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [199, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [202, "module-baybe.searchspace", false], [203, "module-baybe.searchspace.continuous", false], [205, "module-baybe.searchspace.core", false], [210, "module-baybe.searchspace.discrete", false], [216, "module-baybe.searchspace.validation", false], [220, "module-baybe.serialization", false], [221, "module-baybe.serialization.core", false], [228, "module-baybe.serialization.mixin", false], [230, "module-baybe.serialization.utils", false], [233, "module-baybe.simulation", false], [234, "module-baybe.simulation.core", false], [236, "module-baybe.simulation.lookup", false], [238, "module-baybe.simulation.scenarios", false], [240, "module-baybe.simulation.transfer_learning", false], [242, "module-baybe.surrogates", false], [243, "module-baybe.surrogates.bandit", false], [245, "module-baybe.surrogates.base", false], [249, "module-baybe.surrogates.composite", false], [253, "module-baybe.surrogates.custom", false], [256, "module-baybe.surrogates.gaussian_process", false], [257, "module-baybe.surrogates.gaussian_process.core", false], [259, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [263, "module-baybe.surrogates.gaussian_process.presets", false], [264, "module-baybe.surrogates.gaussian_process.presets.core", false], [267, "module-baybe.surrogates.gaussian_process.presets.default", false], [269, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [271, "module-baybe.surrogates.linear", false], [273, "module-baybe.surrogates.naive", false], [275, "module-baybe.surrogates.ngboost", false], [277, "module-baybe.surrogates.random_forest", false], [279, "module-baybe.surrogates.utils", false], [283, "module-baybe.surrogates.validation", false], [286, "module-baybe.targets", false], [287, "module-baybe.targets.base", false], [289, "module-baybe.targets.binary", false], [292, "module-baybe.targets.enum", false], [295, "module-baybe.targets.numerical", false], [297, "module-baybe.targets.transforms", false], [301, "module-baybe.telemetry", false], [306, "module-baybe.utils", false], [307, "module-baybe.utils.augmentation", false], [310, "module-baybe.utils.basic", false], [326, "module-baybe.utils.boolean", false], [330, "module-baybe.utils.chemistry", false], [335, "module-baybe.utils.conversion", false], [338, "module-baybe.utils.dataframe", false], [353, "module-baybe.utils.interval", false], [358, "module-baybe.utils.memory", false], [360, "module-baybe.utils.numerical", false], [367, "module-baybe.utils.plotting", false], [371, "module-baybe.utils.random", false], [374, "module-baybe.utils.sampling_algorithms", false], [378, "module-baybe.utils.scaling", false], [380, "module-baybe.utils.torch", false], [383, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[29, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[29, "baybe.campaign.Campaign.n_fits_done", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[19, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[114, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[119, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[124, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[126, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[206, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[180, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[131, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[132, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[133, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[135, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[136, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[149, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[288, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[290, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[296, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[333, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[73, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[385, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[386, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[86, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[193, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[337, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[74, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[166, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[75, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[76, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[99, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[104, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[32, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[33, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[34, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[36, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[296, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[77, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[29, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[114, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[111, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[102, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[102, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[140, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[40, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[78, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[109, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[109, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[197, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[133, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[213, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[214, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[206, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameterencoding (class in baybe.parameters.enum)": [[142, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[29, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[32, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[33, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[34, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[36, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[206, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[124, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[24, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[100, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[100, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[100, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[101, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[24, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[24, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[261, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[87, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[102, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[29, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[246, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[247, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[250, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[274, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[102, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[350, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[159, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[108, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[15, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[183, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[101, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[375, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[201, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[162, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[103, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[29, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[170, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[173, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[175, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[180, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[183, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[186, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[193, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[195, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[196, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[197, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[198, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[200, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[29, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[170, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "ref_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.ref_point", false]], "refers_to() (in module baybe.utils.basic)": [[323, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[255, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[324, "baybe.utils.basic.register_hooks", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[246, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[247, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[274, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "rffkernel (class in baybe.kernels.basic)": [[104, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[105, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[377, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[14, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[14, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[14, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[120, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[119, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[122, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[163, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[164, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[165, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[166, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[109, "baybe.kernels.composite.ScaleKernel", false]], "searchspace (baybe.campaign.campaign attribute)": [[29, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[206, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[79, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[207, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[226, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[173, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[175, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[39, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[190, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[232, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[229, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[372, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[24, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[88, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[89, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[87, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[167, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[235, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[239, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[241, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[126, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[198, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[148, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[334, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[167, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[152, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[27, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[329, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[47, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[117, "baybe.objectives.deprecation.structure_objective", false]], "structure_surrogate_getter() (in module baybe.surrogates.composite)": [[251, "baybe.surrogates.composite.structure_surrogate_getter", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[39, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[204, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[143, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[149, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[290, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[32, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[33, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[34, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[36, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[131, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[132, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[133, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[135, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[136, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[149, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[288, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[290, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[296, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[246, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[247, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[274, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[246, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[247, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[274, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[247, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[186, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[188, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[248, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[250, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[288, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[293, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[29, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[114, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[119, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[124, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[126, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[294, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[206, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[136, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[304, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[305, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[373, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[40, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[40, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[14, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[15, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[16, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[17, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[18, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[19, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[20, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[22, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[246, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[247, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[248, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[250, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[274, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[14, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[15, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[16, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[17, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[18, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[19, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[20, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[22, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[29, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[32, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[33, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[34, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[36, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[38, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[39, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[40, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[94, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[95, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[96, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[98, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[99, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[100, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[101, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[102, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[103, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[104, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[105, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[107, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[108, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[109, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[114, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[119, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[124, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[126, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[131, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[132, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[133, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[135, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[136, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[149, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[159, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[161, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[162, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[163, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[164, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[165, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[166, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[167, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[173, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[175, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[206, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[229, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[246, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[247, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[250, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[261, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[274, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[288, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[290, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[296, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[355, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[94, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[95, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[96, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[98, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[99, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[100, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[101, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[102, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[103, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[104, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[105, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[107, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[108, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[109, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[94, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[95, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[96, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[98, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[99, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[100, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[101, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[102, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[103, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[104, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[105, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[107, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[108, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[109, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[159, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[161, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[162, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[163, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[164, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[165, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[166, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[167, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[14, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[15, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[16, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[17, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[18, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[19, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[20, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[22, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[29, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[32, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[33, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[34, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[35, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[36, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[38, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[39, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[40, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[43, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[51, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[52, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[53, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[54, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[55, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[56, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[57, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[94, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[95, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[96, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[98, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[99, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[100, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[101, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[102, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[103, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[104, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[105, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[107, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[108, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[109, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[114, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[119, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[124, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[126, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[131, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[132, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[133, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[135, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[136, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[149, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[159, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[161, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[162, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[163, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[164, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[165, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[166, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[167, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[173, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[175, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[176, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[177, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[206, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[229, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[244, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[246, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[247, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[250, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[258, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[261, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[272, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[274, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[276, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[278, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[288, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[290, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[296, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[355, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[262, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[355, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[288, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[290, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[296, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[115, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[38, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[39, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[40, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[131, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[132, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[133, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[135, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[136, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[149, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[208, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[370, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[131, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[132, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[135, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[136, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[145, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[149, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[355, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[351, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[355, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[325, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[29, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[40, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[114, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[119, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[124, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[126, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[132, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[135, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[136, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[149, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[204, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[206, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[212, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[288, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[290, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[296, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[379, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[352, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[296, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[294, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[300, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[178, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[206, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[80, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[81, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[312, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[313, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[227, "baybe.serialization.core.unstructure_base", false]], "unstructure_surrogate_getter() (in module baybe.surrogates.composite)": [[252, "baybe.surrogates.composite.unstructure_surrogate_getter", false]], "unusedobjectwarning": [[82, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[355, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[357, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[87, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[59, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[254, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[29, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[60, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[285, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[154, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[155, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[387, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[388, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[218, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[219, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[209, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[215, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[389, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[128, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[156, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[132, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[135, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[136, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[138, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[146, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[149, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[98, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[98, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[363, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[382, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[119, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[143, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [28, 0, 0, "-", "campaign"], [30, 0, 0, "-", "constraints"], [61, 0, 0, "-", "exceptions"], [83, 0, 0, "-", "insights"], [92, 0, 0, "-", "kernels"], [110, 0, 0, "-", "objective"], [112, 0, 0, "-", "objectives"], [129, 0, 0, "-", "parameters"], [157, 0, 0, "-", "priors"], [168, 0, 0, "-", "recommenders"], [202, 0, 0, "-", "searchspace"], [220, 0, 0, "-", "serialization"], [233, 0, 0, "-", "simulation"], [242, 0, 0, "-", "surrogates"], [286, 0, 0, "-", "targets"], [301, 0, 0, "-", "telemetry"], [306, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [21, 0, 0, "-", "base"], [23, 0, 0, "-", "partial"], [25, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [13, 1, 1, "", "qLogNoisyExpectedImprovement"], [14, 1, 1, "", "qNegIntegratedPosteriorVariance"], [15, 1, 1, "", "qNoisyExpectedImprovement"], [16, 1, 1, "", "qPosteriorStandardDeviation"], [17, 1, 1, "", "qProbabilityOfImprovement"], [18, 1, 1, "", "qSimpleRegret"], [19, 1, 1, "", "qThompsonSampling"], [20, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "compute_ref_point"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 3, 1, "", "ref_point"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[12, 4, 1, "", "array"], [12, 4, 1, "", "factor"], [12, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "prune_baseline"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 2, 1, "", "get_integration_points"], [14, 3, 1, "", "sampling_fraction"], [14, 3, 1, "", "sampling_method"], [14, 3, 1, "", "sampling_n_points"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[14, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 3, 1, "", "prune_baseline"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "n_mc_samples"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 3, 1, "", "beta"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.base": [[22, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[22, 4, 1, "", "string"]], "baybe.acquisition.partial": [[24, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "botorch_acqf"], [24, 3, 1, "", "pin_discrete"], [24, 3, 1, "", "pinned_part"], [24, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[24, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[26, 5, 1, "", "convert_acqf"], [27, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[29, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "add_measurements"], [29, 3, 1, "", "allow_recommending_already_measured"], [29, 3, 1, "", "allow_recommending_already_recommended"], [29, 3, 1, "", "allow_recommending_pending_experiments"], [29, 2, 1, "", "from_config"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "from_json"], [29, 2, 1, "", "get_surrogate"], [29, 6, 1, "", "measurements"], [29, 3, 1, "", "n_batches_done"], [29, 3, 1, "", "n_fits_done"], [29, 3, 1, "", "objective"], [29, 6, 1, "", "parameters"], [29, 2, 1, "", "posterior"], [29, 2, 1, "", "recommend"], [29, 3, 1, "", "recommender"], [29, 3, 1, "", "searchspace"], [29, 6, 1, "", "targets"], [29, 2, 1, "", "to_dict"], [29, 2, 1, "", "to_json"], [29, 2, 1, "", "toggle_discrete_candidates"], [29, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[29, 4, 1, "", "data"], [29, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[29, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[29, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[29, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_surrogate.params": [[29, 4, 1, "", "batch_size"], [29, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[29, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.recommend.params": [[29, 4, 1, "", "batch_size"], [29, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[29, 4, 1, "", "complement"], [29, 4, 1, "", "constraints"], [29, 4, 1, "", "dry_run"], [29, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[29, 4, 1, "", "config_json"]], "baybe.constraints": [[31, 0, 0, "-", "base"], [37, 0, 0, "-", "conditions"], [41, 0, 0, "-", "continuous"], [44, 0, 0, "-", "deprecation"], [48, 0, 0, "-", "discrete"], [58, 0, 0, "-", "validation"]], "baybe.constraints.base": [[32, 1, 1, "", "CardinalityConstraint"], [33, 1, 1, "", "Constraint"], [34, 1, 1, "", "ContinuousConstraint"], [35, 1, 1, "", "ContinuousNonlinearConstraint"], [36, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 6, 1, "", "is_continuous"], [32, 6, 1, "", "is_discrete"], [32, 3, 1, "", "max_cardinality"], [32, 3, 1, "", "min_cardinality"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[32, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[32, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 6, 1, "", "is_continuous"], [33, 6, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[33, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[33, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "eval_during_augmentation"], [36, 3, 1, "", "eval_during_creation"], [36, 3, 1, "", "eval_during_modeling"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 2, 1, "", "get_invalid"], [36, 2, 1, "", "get_invalid_polars"], [36, 2, 1, "", "get_valid"], [36, 6, 1, "", "is_continuous"], [36, 6, 1, "", "is_discrete"], [36, 3, 1, "", "numerical_only"], [36, 3, 1, "", "parameters"], [36, 2, 1, "", "summary"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[36, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[36, 4, 1, "", "df"]], "baybe.constraints.conditions": [[38, 1, 1, "", "Condition"], [39, 1, 1, "", "SubSelectionCondition"], [40, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[38, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[38, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "evaluate"], [39, 2, 1, "", "from_dict"], [39, 2, 1, "", "from_json"], [39, 6, 1, "", "selection"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "to_json"], [39, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[39, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[39, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[39, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[39, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "evaluate"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 3, 1, "", "operator"], [40, 3, 1, "", "threshold"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"], [40, 2, 1, "", "to_polars"], [40, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[40, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[40, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[42, 1, 1, "", "ContinuousCardinalityConstraint"], [43, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[42, 2, 1, "", "__init__"], [42, 3, 1, "", "eval_during_augmentation"], [42, 3, 1, "", "eval_during_creation"], [42, 3, 1, "", "eval_during_modeling"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 6, 1, "", "is_continuous"], [42, 6, 1, "", "is_discrete"], [42, 3, 1, "", "max_cardinality"], [42, 3, 1, "", "min_cardinality"], [42, 3, 1, "", "numerical_only"], [42, 3, 1, "", "parameters"], [42, 2, 1, "", "sample_inactive_parameters"], [42, 2, 1, "", "summary"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[42, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[43, 2, 1, "", "__init__"], [43, 3, 1, "", "coefficients"], [43, 3, 1, "", "eval_during_augmentation"], [43, 3, 1, "", "eval_during_creation"], [43, 3, 1, "", "eval_during_modeling"], [43, 2, 1, "", "from_dict"], [43, 2, 1, "", "from_json"], [43, 6, 1, "", "is_continuous"], [43, 6, 1, "", "is_discrete"], [43, 6, 1, "", "is_eq"], [43, 3, 1, "", "numerical_only"], [43, 3, 1, "", "operator"], [43, 3, 1, "", "parameters"], [43, 3, 1, "", "rhs"], [43, 2, 1, "", "summary"], [43, 2, 1, "", "to_botorch"], [43, 2, 1, "", "to_dict"], [43, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[43, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[43, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[43, 4, 1, "", "idx_offset"], [43, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[45, 5, 1, "", "ContinuousLinearEqualityConstraint"], [46, 5, 1, "", "ContinuousLinearInequalityConstraint"], [47, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[49, 1, 1, "", "DiscreteCardinalityConstraint"], [50, 1, 1, "", "DiscreteCustomConstraint"], [51, 1, 1, "", "DiscreteDependenciesConstraint"], [52, 1, 1, "", "DiscreteExcludeConstraint"], [53, 1, 1, "", "DiscreteLinkedParametersConstraint"], [54, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [55, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [56, 1, 1, "", "DiscreteProductConstraint"], [57, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 2, 1, "", "get_valid"], [49, 6, 1, "", "is_continuous"], [49, 6, 1, "", "is_discrete"], [49, 3, 1, "", "max_cardinality"], [49, 3, 1, "", "min_cardinality"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[49, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[49, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[49, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[49, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 2, 1, "", "get_valid"], [50, 6, 1, "", "is_continuous"], [50, 6, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"], [50, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[50, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[50, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[50, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[50, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "affected_parameters"], [51, 3, 1, "", "conditions"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 3, 1, "", "permutation_invariant"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "combiner"], [52, 3, 1, "", "conditions"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "dependencies"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "condition"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "condition"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.validation": [[59, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [60, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[59, 4, 1, "", "constraints"]], "baybe.exceptions": [[62, 7, 1, "", "DeprecationError"], [63, 7, 1, "", "EmptySearchSpaceError"], [64, 7, 1, "", "IncompatibilityError"], [65, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [66, 7, 1, "", "IncompatibleArgumentError"], [67, 7, 1, "", "IncompatibleExplainerError"], [68, 7, 1, "", "IncompatibleSearchSpaceError"], [69, 7, 1, "", "IncompatibleSurrogateError"], [70, 7, 1, "", "InvalidSurrogateModelError"], [71, 7, 1, "", "InvalidTargetValueError"], [72, 7, 1, "", "ModelNotTrainedError"], [73, 7, 1, "", "NoMCAcquisitionFunctionError"], [74, 7, 1, "", "NoRecommendersLeftError"], [75, 7, 1, "", "NotEnoughPointsLeftError"], [76, 7, 1, "", "NothingToSimulateError"], [77, 7, 1, "", "NumericalUnderflowError"], [78, 7, 1, "", "OptionalImportError"], [79, 7, 1, "", "SearchSpaceMatchWarning"], [80, 7, 1, "", "UnidentifiedSubclassError"], [81, 7, 1, "", "UnmatchedAttributeError"], [82, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.insights": [[84, 0, 0, "-", "shap"]], "baybe.insights.shap": [[85, 8, 1, "", "EXPLAINERS"], [86, 8, 1, "", "NON_SHAP_EXPLAINERS"], [87, 1, 1, "", "SHAPInsight"], [88, 8, 1, "", "SHAP_EXPLAINERS"], [89, 8, 1, "", "SHAP_PLOTS"], [90, 5, 1, "", "is_shap_explainer"], [91, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[87, 2, 1, "", "__init__"], [87, 3, 1, "", "background_data"], [87, 2, 1, "", "explain"], [87, 3, 1, "", "explainer"], [87, 2, 1, "", "from_campaign"], [87, 2, 1, "", "from_recommender"], [87, 2, 1, "", "from_surrogate"], [87, 2, 1, "", "plot"], [87, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[87, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[87, 4, 1, "", "campaign"], [87, 4, 1, "", "explainer_cls"], [87, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[87, 4, 1, "", "explainer_cls"], [87, 4, 1, "", "measurements"], [87, 4, 1, "", "objective"], [87, 4, 1, "", "recommender"], [87, 4, 1, "", "searchspace"], [87, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[87, 4, 1, "", "**kwargs"], [87, 4, 1, "", "data"], [87, 4, 1, "", "explanation_index"], [87, 4, 1, "", "plot_type"], [87, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[91, 4, 1, "", "data"], [91, 4, 1, "", "explainer_cls"], [91, 4, 1, "", "surrogate"], [91, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[93, 0, 0, "-", "base"], [97, 0, 0, "-", "basic"], [106, 0, 0, "-", "composite"]], "baybe.kernels.base": [[94, 1, 1, "", "BasicKernel"], [95, 1, 1, "", "CompositeKernel"], [96, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "from_dict"], [94, 2, 1, "", "from_json"], [94, 2, 1, "", "to_dict"], [94, 2, 1, "", "to_factory"], [94, 2, 1, "", "to_gpytorch"], [94, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[94, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[94, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "from_dict"], [95, 2, 1, "", "from_json"], [95, 2, 1, "", "to_dict"], [95, 2, 1, "", "to_factory"], [95, 2, 1, "", "to_gpytorch"], [95, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[95, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[95, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "from_dict"], [96, 2, 1, "", "from_json"], [96, 2, 1, "", "to_dict"], [96, 2, 1, "", "to_factory"], [96, 2, 1, "", "to_gpytorch"], [96, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[96, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[96, 4, 1, "", "string"]], "baybe.kernels.basic": [[98, 1, 1, "", "LinearKernel"], [99, 1, 1, "", "MaternKernel"], [100, 1, 1, "", "PeriodicKernel"], [101, 1, 1, "", "PiecewisePolynomialKernel"], [102, 1, 1, "", "PolynomialKernel"], [103, 1, 1, "", "RBFKernel"], [104, 1, 1, "", "RFFKernel"], [105, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "from_dict"], [98, 2, 1, "", "from_json"], [98, 2, 1, "", "to_dict"], [98, 2, 1, "", "to_factory"], [98, 2, 1, "", "to_gpytorch"], [98, 2, 1, "", "to_json"], [98, 3, 1, "", "variance_initial_value"], [98, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[98, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[98, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "from_dict"], [99, 2, 1, "", "from_json"], [99, 3, 1, "", "lengthscale_initial_value"], [99, 3, 1, "", "lengthscale_prior"], [99, 3, 1, "", "nu"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "to_factory"], [99, 2, 1, "", "to_gpytorch"], [99, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[99, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[99, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "from_dict"], [100, 2, 1, "", "from_json"], [100, 3, 1, "", "lengthscale_initial_value"], [100, 3, 1, "", "lengthscale_prior"], [100, 3, 1, "", "period_length_initial_value"], [100, 3, 1, "", "period_length_prior"], [100, 2, 1, "", "to_dict"], [100, 2, 1, "", "to_factory"], [100, 2, 1, "", "to_gpytorch"], [100, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[100, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[100, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "from_dict"], [101, 2, 1, "", "from_json"], [101, 3, 1, "", "lengthscale_initial_value"], [101, 3, 1, "", "lengthscale_prior"], [101, 3, 1, "", "q"], [101, 2, 1, "", "to_dict"], [101, 2, 1, "", "to_factory"], [101, 2, 1, "", "to_gpytorch"], [101, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[101, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[101, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "from_dict"], [102, 2, 1, "", "from_json"], [102, 3, 1, "", "offset_initial_value"], [102, 3, 1, "", "offset_prior"], [102, 3, 1, "", "power"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "to_factory"], [102, 2, 1, "", "to_gpytorch"], [102, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[102, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[102, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "from_dict"], [103, 2, 1, "", "from_json"], [103, 3, 1, "", "lengthscale_initial_value"], [103, 3, 1, "", "lengthscale_prior"], [103, 2, 1, "", "to_dict"], [103, 2, 1, "", "to_factory"], [103, 2, 1, "", "to_gpytorch"], [103, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[103, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[103, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 3, 1, "", "lengthscale_initial_value"], [104, 3, 1, "", "lengthscale_prior"], [104, 3, 1, "", "num_samples"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 3, 1, "", "lengthscale_initial_value"], [105, 3, 1, "", "lengthscale_prior"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.kernels.composite": [[107, 1, 1, "", "AdditiveKernel"], [108, 1, 1, "", "ProductKernel"], [109, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[107, 2, 1, "", "__init__"], [107, 3, 1, "", "base_kernels"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[107, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[108, 2, 1, "", "__init__"], [108, 3, 1, "", "base_kernels"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[109, 2, 1, "", "__init__"], [109, 3, 1, "", "base_kernel"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 3, 1, "", "outputscale_initial_value"], [109, 3, 1, "", "outputscale_prior"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.objective": [[111, 5, 1, "", "Objective"]], "baybe.objectives": [[113, 0, 0, "-", "base"], [116, 0, 0, "-", "deprecation"], [118, 0, 0, "-", "desirability"], [121, 0, 0, "-", "enum"], [123, 0, 0, "-", "pareto"], [125, 0, 0, "-", "single"], [127, 0, 0, "-", "validation"]], "baybe.objectives.base": [[114, 1, 1, "", "Objective"], [115, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 3, 1, "", "is_multi_output"], [114, 6, 1, "", "n_outputs"], [114, 6, 1, "", "targets"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_json"], [114, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[114, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[114, 4, 1, "", "allow_extra"], [114, 4, 1, "", "allow_missing"], [114, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[117, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[119, 1, 1, "", "DesirabilityObjective"], [120, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 3, 1, "", "is_multi_output"], [119, 6, 1, "", "n_outputs"], [119, 3, 1, "", "scalarizer"], [119, 6, 1, "", "targets"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_json"], [119, 2, 1, "", "transform"], [119, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[119, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[119, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[119, 4, 1, "", "allow_extra"], [119, 4, 1, "", "allow_missing"], [119, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[120, 4, 1, "", "scalarizer"], [120, 4, 1, "", "values"], [120, 4, 1, "", "weights"]], "baybe.objectives.enum": [[122, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[122, 3, 1, "", "GEOM_MEAN"], [122, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[124, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "from_dict"], [124, 2, 1, "", "from_json"], [124, 3, 1, "", "is_multi_output"], [124, 6, 1, "", "n_outputs"], [124, 6, 1, "", "targets"], [124, 2, 1, "", "to_dict"], [124, 2, 1, "", "to_json"], [124, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[124, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[124, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[124, 4, 1, "", "allow_extra"], [124, 4, 1, "", "allow_missing"], [124, 4, 1, "", "df"]], "baybe.objectives.single": [[126, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "from_dict"], [126, 2, 1, "", "from_json"], [126, 3, 1, "", "is_multi_output"], [126, 6, 1, "", "n_outputs"], [126, 6, 1, "", "targets"], [126, 2, 1, "", "to_dict"], [126, 2, 1, "", "to_json"], [126, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[126, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[126, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[126, 4, 1, "", "allow_extra"], [126, 4, 1, "", "allow_missing"], [126, 4, 1, "", "df"]], "baybe.objectives.validation": [[128, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[130, 0, 0, "-", "base"], [134, 0, 0, "-", "categorical"], [137, 0, 0, "-", "custom"], [139, 0, 0, "-", "enum"], [144, 0, 0, "-", "numerical"], [147, 0, 0, "-", "substance"], [150, 0, 0, "-", "utils"], [153, 0, 0, "-", "validation"]], "baybe.parameters.base": [[131, 1, 1, "", "ContinuousParameter"], [132, 1, 1, "", "DiscreteParameter"], [133, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[131, 2, 1, "", "__init__"], [131, 6, 1, "", "comp_rep_columns"], [131, 2, 1, "", "from_dict"], [131, 2, 1, "", "from_json"], [131, 6, 1, "", "is_continuous"], [131, 6, 1, "", "is_discrete"], [131, 2, 1, "", "is_in_range"], [131, 3, 1, "", "is_numerical"], [131, 3, 1, "", "name"], [131, 2, 1, "", "summary"], [131, 2, 1, "", "to_dict"], [131, 2, 1, "", "to_json"], [131, 2, 1, "", "to_searchspace"], [131, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[131, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[131, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[131, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[132, 2, 1, "", "__init__"], [132, 6, 1, "", "comp_df"], [132, 6, 1, "", "comp_rep_columns"], [132, 3, 1, "", "encoding"], [132, 2, 1, "", "from_dict"], [132, 2, 1, "", "from_json"], [132, 6, 1, "", "is_continuous"], [132, 6, 1, "", "is_discrete"], [132, 2, 1, "", "is_in_range"], [132, 3, 1, "", "is_numerical"], [132, 3, 1, "", "name"], [132, 2, 1, "", "summary"], [132, 2, 1, "", "to_dict"], [132, 2, 1, "", "to_json"], [132, 2, 1, "", "to_searchspace"], [132, 2, 1, "", "to_subspace"], [132, 2, 1, "", "transform"], [132, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[132, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[132, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[132, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[132, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[133, 2, 1, "", "__init__"], [133, 6, 1, "", "comp_rep_columns"], [133, 2, 1, "", "from_dict"], [133, 2, 1, "", "from_json"], [133, 6, 1, "", "is_continuous"], [133, 6, 1, "", "is_discrete"], [133, 2, 1, "", "is_in_range"], [133, 3, 1, "", "is_numerical"], [133, 3, 1, "", "name"], [133, 2, 1, "", "summary"], [133, 2, 1, "", "to_dict"], [133, 2, 1, "", "to_json"], [133, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[133, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[133, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[133, 4, 1, "", "item"]], "baybe.parameters.categorical": [[135, 1, 1, "", "CategoricalParameter"], [136, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[135, 2, 1, "", "__init__"], [135, 6, 1, "", "comp_df"], [135, 6, 1, "", "comp_rep_columns"], [135, 3, 1, "", "encoding"], [135, 2, 1, "", "from_dict"], [135, 2, 1, "", "from_json"], [135, 6, 1, "", "is_continuous"], [135, 6, 1, "", "is_discrete"], [135, 2, 1, "", "is_in_range"], [135, 3, 1, "", "is_numerical"], [135, 3, 1, "", "name"], [135, 2, 1, "", "summary"], [135, 2, 1, "", "to_dict"], [135, 2, 1, "", "to_json"], [135, 2, 1, "", "to_searchspace"], [135, 2, 1, "", "to_subspace"], [135, 2, 1, "", "transform"], [135, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[135, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[135, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[135, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[135, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[136, 2, 1, "", "__init__"], [136, 3, 1, "", "active_values"], [136, 6, 1, "", "comp_df"], [136, 6, 1, "", "comp_rep_columns"], [136, 3, 1, "", "encoding"], [136, 2, 1, "", "from_dict"], [136, 2, 1, "", "from_json"], [136, 6, 1, "", "is_continuous"], [136, 6, 1, "", "is_discrete"], [136, 2, 1, "", "is_in_range"], [136, 3, 1, "", "is_numerical"], [136, 3, 1, "", "name"], [136, 2, 1, "", "summary"], [136, 2, 1, "", "to_dict"], [136, 2, 1, "", "to_json"], [136, 2, 1, "", "to_searchspace"], [136, 2, 1, "", "to_subspace"], [136, 2, 1, "", "transform"], [136, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[136, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[136, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[136, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[136, 4, 1, "", "series"]], "baybe.parameters.custom": [[138, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[138, 2, 1, "", "__init__"], [138, 6, 1, "", "comp_df"], [138, 6, 1, "", "comp_rep_columns"], [138, 3, 1, "", "data"], [138, 3, 1, "", "decorrelate"], [138, 3, 1, "", "encoding"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 6, 1, "", "is_continuous"], [138, 6, 1, "", "is_discrete"], [138, 2, 1, "", "is_in_range"], [138, 3, 1, "", "is_numerical"], [138, 3, 1, "", "name"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_json"], [138, 2, 1, "", "to_searchspace"], [138, 2, 1, "", "to_subspace"], [138, 2, 1, "", "transform"], [138, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[138, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[138, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[138, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[138, 4, 1, "", "series"]], "baybe.parameters.enum": [[140, 1, 1, "", "CategoricalEncoding"], [141, 1, 1, "", "CustomEncoding"], [142, 1, 1, "", "ParameterEncoding"], [143, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[140, 3, 1, "", "INT"], [140, 3, 1, "", "OHE"], [140, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[141, 3, 1, "", "CUSTOM"], [141, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[143, 3, 1, "", "ATOMPAIR"], [143, 3, 1, "", "AUTOCORR"], [143, 3, 1, "", "AVALON"], [143, 3, 1, "", "BCUT2D"], [143, 3, 1, "", "E3FP"], [143, 3, 1, "", "ECFP"], [143, 3, 1, "", "ELECTROSHAPE"], [143, 3, 1, "", "ERG"], [143, 3, 1, "", "ESTATE"], [143, 3, 1, "", "FUNCTIONALGROUPS"], [143, 3, 1, "", "GETAWAY"], [143, 3, 1, "", "GHOSECRIPPEN"], [143, 3, 1, "", "KLEKOTAROTH"], [143, 3, 1, "", "LAGGNER"], [143, 3, 1, "", "LAYERED"], [143, 3, 1, "", "LINGO"], [143, 3, 1, "", "MACCS"], [143, 3, 1, "", "MAP"], [143, 3, 1, "", "MHFP"], [143, 3, 1, "", "MORDRED"], [143, 3, 1, "", "MORGAN_FP"], [143, 3, 1, "", "MORSE"], [143, 3, 1, "", "MQNS"], [143, 3, 1, "", "PATTERN"], [143, 3, 1, "", "PHARMACOPHORE"], [143, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [143, 3, 1, "", "PUBCHEM"], [143, 3, 1, "", "RDF"], [143, 3, 1, "", "RDKIT"], [143, 3, 1, "", "RDKIT2DDESCRIPTORS"], [143, 3, 1, "", "RDKITFINGERPRINT"], [143, 3, 1, "", "SECFP"], [143, 3, 1, "", "TOPOLOGICALTORSION"], [143, 3, 1, "", "USR"], [143, 3, 1, "", "USRCAT"], [143, 3, 1, "", "VSA"], [143, 3, 1, "", "WHIM"], [143, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[145, 1, 1, "", "NumericalContinuousParameter"], [146, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[145, 2, 1, "", "__init__"], [145, 3, 1, "", "bounds"], [145, 6, 1, "", "comp_rep_columns"], [145, 2, 1, "", "from_dict"], [145, 2, 1, "", "from_json"], [145, 6, 1, "", "is_continuous"], [145, 6, 1, "", "is_discrete"], [145, 2, 1, "", "is_in_range"], [145, 3, 1, "", "is_numerical"], [145, 3, 1, "", "name"], [145, 2, 1, "", "summary"], [145, 2, 1, "", "to_dict"], [145, 2, 1, "", "to_json"], [145, 2, 1, "", "to_searchspace"], [145, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[145, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[145, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[145, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[146, 2, 1, "", "__init__"], [146, 6, 1, "", "comp_df"], [146, 6, 1, "", "comp_rep_columns"], [146, 3, 1, "", "encoding"], [146, 2, 1, "", "from_dict"], [146, 2, 1, "", "from_json"], [146, 6, 1, "", "is_continuous"], [146, 6, 1, "", "is_discrete"], [146, 2, 1, "", "is_in_range"], [146, 3, 1, "", "is_numerical"], [146, 3, 1, "", "name"], [146, 2, 1, "", "summary"], [146, 2, 1, "", "to_dict"], [146, 2, 1, "", "to_json"], [146, 2, 1, "", "to_searchspace"], [146, 2, 1, "", "to_subspace"], [146, 3, 1, "", "tolerance"], [146, 2, 1, "", "transform"], [146, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[146, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[146, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[146, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[146, 4, 1, "", "series"]], "baybe.parameters.substance": [[148, 3, 1, "", "Smiles"], [149, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[149, 2, 1, "", "__init__"], [149, 6, 1, "", "comp_df"], [149, 6, 1, "", "comp_rep_columns"], [149, 3, 1, "", "data"], [149, 3, 1, "", "decorrelate"], [149, 3, 1, "", "encoding"], [149, 2, 1, "", "from_dict"], [149, 2, 1, "", "from_json"], [149, 6, 1, "", "is_continuous"], [149, 6, 1, "", "is_discrete"], [149, 2, 1, "", "is_in_range"], [149, 3, 1, "", "is_numerical"], [149, 3, 1, "", "kwargs_conformer"], [149, 3, 1, "", "kwargs_fingerprint"], [149, 3, 1, "", "name"], [149, 2, 1, "", "summary"], [149, 2, 1, "", "to_dict"], [149, 2, 1, "", "to_json"], [149, 2, 1, "", "to_searchspace"], [149, 2, 1, "", "to_subspace"], [149, 2, 1, "", "transform"], [149, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[149, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[149, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[149, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[149, 4, 1, "", "series"]], "baybe.parameters.utils": [[151, 5, 1, "", "get_parameters_from_dataframe"], [152, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[151, 4, 1, "", "df"], [151, 4, 1, "", "factory"], [151, 4, 1, "", "parameters"]], "baybe.parameters.validation": [[154, 5, 1, "", "validate_decorrelation"], [155, 5, 1, "", "validate_is_finite"], [156, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[158, 0, 0, "-", "base"], [160, 0, 0, "-", "basic"]], "baybe.priors.base": [[159, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "from_dict"], [159, 2, 1, "", "from_json"], [159, 2, 1, "", "to_dict"], [159, 2, 1, "", "to_gpytorch"], [159, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[159, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[159, 4, 1, "", "string"]], "baybe.priors.basic": [[161, 1, 1, "", "BetaPrior"], [162, 1, 1, "", "GammaPrior"], [163, 1, 1, "", "HalfCauchyPrior"], [164, 1, 1, "", "HalfNormalPrior"], [165, 1, 1, "", "LogNormalPrior"], [166, 1, 1, "", "NormalPrior"], [167, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[161, 2, 1, "", "__init__"], [161, 3, 1, "", "alpha"], [161, 3, 1, "", "beta"], [161, 2, 1, "", "from_dict"], [161, 2, 1, "", "from_json"], [161, 2, 1, "", "to_dict"], [161, 2, 1, "", "to_gpytorch"], [161, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[161, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[161, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[162, 2, 1, "", "__init__"], [162, 3, 1, "", "concentration"], [162, 2, 1, "", "from_dict"], [162, 2, 1, "", "from_json"], [162, 3, 1, "", "rate"], [162, 2, 1, "", "to_dict"], [162, 2, 1, "", "to_gpytorch"], [162, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[162, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[162, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "from_dict"], [163, 2, 1, "", "from_json"], [163, 3, 1, "", "scale"], [163, 2, 1, "", "to_dict"], [163, 2, 1, "", "to_gpytorch"], [163, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[163, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[163, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "from_dict"], [164, 2, 1, "", "from_json"], [164, 3, 1, "", "scale"], [164, 2, 1, "", "to_dict"], [164, 2, 1, "", "to_gpytorch"], [164, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[164, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[164, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "from_dict"], [165, 2, 1, "", "from_json"], [165, 3, 1, "", "loc"], [165, 3, 1, "", "scale"], [165, 2, 1, "", "to_dict"], [165, 2, 1, "", "to_gpytorch"], [165, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[165, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[165, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "from_dict"], [166, 2, 1, "", "from_json"], [166, 3, 1, "", "loc"], [166, 3, 1, "", "scale"], [166, 2, 1, "", "to_dict"], [166, 2, 1, "", "to_gpytorch"], [166, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[166, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[166, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[167, 2, 1, "", "__init__"], [167, 3, 1, "", "a"], [167, 3, 1, "", "b"], [167, 2, 1, "", "from_dict"], [167, 2, 1, "", "from_json"], [167, 3, 1, "", "sigma"], [167, 2, 1, "", "to_dict"], [167, 2, 1, "", "to_gpytorch"], [167, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[167, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[167, 4, 1, "", "string"]], "baybe.recommenders": [[169, 0, 0, "-", "base"], [171, 0, 0, "-", "meta"], [179, 0, 0, "-", "naive"], [181, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[170, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[170, 4, 1, "", "batch_size"], [170, 4, 1, "", "measurements"], [170, 4, 1, "", "objective"], [170, 4, 1, "", "pending_experiments"], [170, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[172, 0, 0, "-", "base"], [174, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[173, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 2, 1, "", "get_current_recommender"], [173, 2, 1, "", "get_next_recommender"], [173, 2, 1, "", "get_non_meta_recommender"], [173, 6, 1, "", "is_stateful"], [173, 2, 1, "", "recommend"], [173, 2, 1, "", "select_recommender"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[173, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[175, 1, 1, "", "BaseSequentialMetaRecommender"], [176, 1, 1, "", "SequentialMetaRecommender"], [177, 1, 1, "", "StreamingSequentialMetaRecommender"], [178, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "from_json"], [175, 2, 1, "", "get_current_recommender"], [175, 2, 1, "", "get_next_recommender"], [175, 2, 1, "", "get_non_meta_recommender"], [175, 6, 1, "", "is_stateful"], [175, 2, 1, "", "recommend"], [175, 2, 1, "", "select_recommender"], [175, 2, 1, "", "to_dict"], [175, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[175, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[175, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "from_dict"], [176, 2, 1, "", "from_json"], [176, 2, 1, "", "get_current_recommender"], [176, 2, 1, "", "get_next_recommender"], [176, 2, 1, "", "get_non_meta_recommender"], [176, 6, 1, "", "is_stateful"], [176, 3, 1, "", "mode"], [176, 2, 1, "", "recommend"], [176, 3, 1, "", "recommenders"], [176, 2, 1, "", "select_recommender"], [176, 2, 1, "", "to_dict"], [176, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[176, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[176, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "from_dict"], [177, 2, 1, "", "from_json"], [177, 2, 1, "", "get_current_recommender"], [177, 2, 1, "", "get_next_recommender"], [177, 2, 1, "", "get_non_meta_recommender"], [177, 6, 1, "", "is_stateful"], [177, 2, 1, "", "recommend"], [177, 3, 1, "", "recommenders"], [177, 2, 1, "", "select_recommender"], [177, 2, 1, "", "to_dict"], [177, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[177, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[177, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "from_dict"], [178, 2, 1, "", "from_json"], [178, 2, 1, "", "get_current_recommender"], [178, 2, 1, "", "get_next_recommender"], [178, 2, 1, "", "get_non_meta_recommender"], [178, 3, 1, "", "initial_recommender"], [178, 6, 1, "", "is_stateful"], [178, 2, 1, "", "recommend"], [178, 3, 1, "", "recommender"], [178, 3, 1, "", "remain_switched"], [178, 2, 1, "", "select_recommender"], [178, 3, 1, "", "switch_after"], [178, 2, 1, "", "to_dict"], [178, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[178, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[178, 4, 1, "", "string"]], "baybe.recommenders.naive": [[180, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[180, 2, 1, "", "__init__"], [180, 6, 1, "", "allow_recommending_already_measured"], [180, 6, 1, "", "allow_recommending_pending_experiments"], [180, 6, 1, "", "allow_repeated_recommendations"], [180, 3, 1, "", "compatibility"], [180, 3, 1, "", "cont_recommender"], [180, 3, 1, "", "disc_recommender"], [180, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[180, 4, 1, "", "batch_size"], [180, 4, 1, "", "measurements"], [180, 4, 1, "", "objective"], [180, 4, 1, "", "pending_experiments"], [180, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[182, 0, 0, "-", "base"], [184, 0, 0, "-", "bayesian"], [191, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[183, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[183, 2, 1, "", "__init__"], [183, 6, 1, "", "allow_recommending_already_measured"], [183, 6, 1, "", "allow_recommending_pending_experiments"], [183, 6, 1, "", "allow_repeated_recommendations"], [183, 3, 1, "", "compatibility"], [183, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[183, 4, 1, "", "batch_size"], [183, 4, 1, "", "measurements"], [183, 4, 1, "", "objective"], [183, 4, 1, "", "pending_experiments"], [183, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[185, 0, 0, "-", "base"], [187, 0, 0, "-", "botorch"], [189, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[186, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[186, 2, 1, "", "__init__"], [186, 3, 1, "", "acquisition_function"], [186, 3, 1, "", "acquisition_function_cls"], [186, 6, 1, "", "allow_recommending_already_measured"], [186, 6, 1, "", "allow_recommending_pending_experiments"], [186, 6, 1, "", "allow_repeated_recommendations"], [186, 3, 1, "", "compatibility"], [186, 2, 1, "", "get_surrogate"], [186, 2, 1, "", "recommend"], [186, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[186, 4, 1, "", "batch_size"], [186, 4, 1, "", "measurements"], [186, 4, 1, "", "objective"], [186, 4, 1, "", "pending_experiments"], [186, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[188, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[188, 2, 1, "", "__init__"], [188, 3, 1, "", "acquisition_function"], [188, 3, 1, "", "acquisition_function_cls"], [188, 6, 1, "", "allow_recommending_already_measured"], [188, 6, 1, "", "allow_recommending_pending_experiments"], [188, 6, 1, "", "allow_repeated_recommendations"], [188, 3, 1, "", "compatibility"], [188, 2, 1, "", "get_surrogate"], [188, 3, 1, "", "hybrid_sampler"], [188, 3, 1, "", "n_raw_samples"], [188, 3, 1, "", "n_restarts"], [188, 2, 1, "", "recommend"], [188, 3, 1, "", "sampling_percentage"], [188, 3, 1, "", "sequential_continuous"], [188, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[188, 4, 1, "", "batch_size"], [188, 4, 1, "", "measurements"], [188, 4, 1, "", "objective"], [188, 4, 1, "", "pending_experiments"], [188, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[190, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[192, 0, 0, "-", "base"], [194, 0, 0, "-", "clustering"], [199, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[193, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[193, 2, 1, "", "__init__"], [193, 6, 1, "", "allow_recommending_already_measured"], [193, 6, 1, "", "allow_recommending_pending_experiments"], [193, 6, 1, "", "allow_repeated_recommendations"], [193, 3, 1, "", "compatibility"], [193, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[193, 4, 1, "", "batch_size"], [193, 4, 1, "", "measurements"], [193, 4, 1, "", "objective"], [193, 4, 1, "", "pending_experiments"], [193, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[195, 1, 1, "", "GaussianMixtureClusteringRecommender"], [196, 1, 1, "", "KMeansClusteringRecommender"], [197, 1, 1, "", "PAMClusteringRecommender"], [198, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[195, 2, 1, "", "__init__"], [195, 6, 1, "", "allow_recommending_already_measured"], [195, 6, 1, "", "allow_recommending_pending_experiments"], [195, 6, 1, "", "allow_repeated_recommendations"], [195, 3, 1, "", "compatibility"], [195, 3, 1, "", "model_cluster_num_parameter_name"], [195, 3, 1, "", "model_params"], [195, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[195, 4, 1, "", "batch_size"], [195, 4, 1, "", "measurements"], [195, 4, 1, "", "objective"], [195, 4, 1, "", "pending_experiments"], [195, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[196, 2, 1, "", "__init__"], [196, 6, 1, "", "allow_recommending_already_measured"], [196, 6, 1, "", "allow_recommending_pending_experiments"], [196, 6, 1, "", "allow_repeated_recommendations"], [196, 3, 1, "", "compatibility"], [196, 3, 1, "", "model_cluster_num_parameter_name"], [196, 3, 1, "", "model_params"], [196, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[196, 4, 1, "", "batch_size"], [196, 4, 1, "", "measurements"], [196, 4, 1, "", "objective"], [196, 4, 1, "", "pending_experiments"], [196, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[197, 2, 1, "", "__init__"], [197, 6, 1, "", "allow_recommending_already_measured"], [197, 6, 1, "", "allow_recommending_pending_experiments"], [197, 6, 1, "", "allow_repeated_recommendations"], [197, 3, 1, "", "compatibility"], [197, 3, 1, "", "model_cluster_num_parameter_name"], [197, 3, 1, "", "model_params"], [197, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[197, 4, 1, "", "batch_size"], [197, 4, 1, "", "measurements"], [197, 4, 1, "", "objective"], [197, 4, 1, "", "pending_experiments"], [197, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[198, 2, 1, "", "__init__"], [198, 6, 1, "", "allow_recommending_already_measured"], [198, 6, 1, "", "allow_recommending_pending_experiments"], [198, 6, 1, "", "allow_repeated_recommendations"], [198, 3, 1, "", "compatibility"], [198, 3, 1, "", "model_cluster_num_parameter_name"], [198, 3, 1, "", "model_params"], [198, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[198, 4, 1, "", "batch_size"], [198, 4, 1, "", "measurements"], [198, 4, 1, "", "objective"], [198, 4, 1, "", "pending_experiments"], [198, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[200, 1, 1, "", "FPSRecommender"], [201, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[200, 2, 1, "", "__init__"], [200, 6, 1, "", "allow_recommending_already_measured"], [200, 6, 1, "", "allow_recommending_pending_experiments"], [200, 6, 1, "", "allow_repeated_recommendations"], [200, 3, 1, "", "compatibility"], [200, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[200, 4, 1, "", "batch_size"], [200, 4, 1, "", "measurements"], [200, 4, 1, "", "objective"], [200, 4, 1, "", "pending_experiments"], [200, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[201, 2, 1, "", "__init__"], [201, 6, 1, "", "allow_recommending_already_measured"], [201, 6, 1, "", "allow_recommending_pending_experiments"], [201, 6, 1, "", "allow_repeated_recommendations"], [201, 3, 1, "", "compatibility"], [201, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[201, 4, 1, "", "batch_size"], [201, 4, 1, "", "measurements"], [201, 4, 1, "", "objective"], [201, 4, 1, "", "pending_experiments"], [201, 4, 1, "", "searchspace"]], "baybe.searchspace": [[203, 0, 0, "-", "continuous"], [205, 0, 0, "-", "core"], [210, 0, 0, "-", "discrete"], [216, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[204, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[204, 2, 1, "", "__init__"], [204, 6, 1, "", "comp_rep_bounds"], [204, 6, 1, "", "comp_rep_columns"], [204, 6, 1, "", "constraints_cardinality"], [204, 3, 1, "", "constraints_lin_eq"], [204, 3, 1, "", "constraints_lin_ineq"], [204, 3, 1, "", "constraints_nonlin"], [204, 2, 1, "", "empty"], [204, 2, 1, "", "from_bounds"], [204, 2, 1, "", "from_dataframe"], [204, 2, 1, "", "from_dict"], [204, 2, 1, "", "from_json"], [204, 2, 1, "", "from_parameter"], [204, 2, 1, "", "from_product"], [204, 6, 1, "", "full_factorial"], [204, 2, 1, "", "get_parameters_by_name"], [204, 6, 1, "", "is_empty"], [204, 6, 1, "", "parameter_names"], [204, 3, 1, "", "parameters"], [204, 2, 1, "", "sample_from_full_factorial"], [204, 2, 1, "", "sample_uniform"], [204, 2, 1, "", "samples_full_factorial"], [204, 2, 1, "", "samples_random"], [204, 2, 1, "", "to_dict"], [204, 2, 1, "", "to_json"], [204, 2, 1, "", "to_searchspace"], [204, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[204, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[204, 4, 1, "", "df"], [204, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[204, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[204, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[204, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[204, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[204, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[204, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[206, 1, 1, "", "SearchSpace"], [207, 1, 1, "", "SearchSpaceType"], [208, 5, 1, "", "to_searchspace"], [209, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[206, 2, 1, "", "__init__"], [206, 6, 1, "", "comp_rep_bounds"], [206, 6, 1, "", "comp_rep_columns"], [206, 6, 1, "", "constraints"], [206, 6, 1, "", "constraints_augmentable"], [206, 3, 1, "", "continuous"], [206, 3, 1, "", "discrete"], [206, 2, 1, "", "estimate_product_space_size"], [206, 2, 1, "", "from_dataframe"], [206, 2, 1, "", "from_dict"], [206, 2, 1, "", "from_json"], [206, 2, 1, "", "from_parameter"], [206, 2, 1, "", "from_product"], [206, 2, 1, "", "get_comp_rep_parameter_indices"], [206, 2, 1, "", "get_parameters_by_name"], [206, 6, 1, "", "n_tasks"], [206, 6, 1, "", "parameter_names"], [206, 6, 1, "", "parameters"], [206, 6, 1, "", "task_idx"], [206, 2, 1, "", "to_dict"], [206, 2, 1, "", "to_json"], [206, 2, 1, "", "transform"], [206, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[206, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[206, 4, 1, "", "df"], [206, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[206, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[206, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[206, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[206, 4, 1, "", "constraints"], [206, 4, 1, "", "empty_encoding"], [206, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[206, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[206, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[206, 4, 1, "", "allow_extra"], [206, 4, 1, "", "allow_missing"], [206, 4, 1, "", "data"], [206, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[207, 3, 1, "", "CONTINUOUS"], [207, 3, 1, "", "DISCRETE"], [207, 3, 1, "", "EITHER"], [207, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[211, 1, 1, "", "MemorySize"], [212, 1, 1, "", "SubspaceDiscrete"], [213, 5, 1, "", "parameter_cartesian_prod_pandas"], [214, 5, 1, "", "parameter_cartesian_prod_polars"], [215, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[211, 2, 1, "", "__init__"], [211, 3, 1, "", "comp_rep_bytes"], [211, 6, 1, "", "comp_rep_human_readable"], [211, 3, 1, "", "comp_rep_shape"], [211, 3, 1, "", "exp_rep_bytes"], [211, 6, 1, "", "exp_rep_human_readable"], [211, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[212, 2, 1, "", "__init__"], [212, 3, 1, "", "comp_rep"], [212, 6, 1, "", "comp_rep_bounds"], [212, 6, 1, "", "comp_rep_columns"], [212, 3, 1, "", "constraints"], [212, 2, 1, "", "empty"], [212, 3, 1, "", "empty_encoding"], [212, 2, 1, "", "estimate_product_space_size"], [212, 3, 1, "", "exp_rep"], [212, 2, 1, "", "from_dataframe"], [212, 2, 1, "", "from_dict"], [212, 2, 1, "", "from_json"], [212, 2, 1, "", "from_parameter"], [212, 2, 1, "", "from_product"], [212, 2, 1, "", "from_simplex"], [212, 2, 1, "", "get_candidates"], [212, 2, 1, "", "get_parameters_by_name"], [212, 6, 1, "", "is_empty"], [212, 6, 1, "", "metadata"], [212, 6, 1, "", "parameter_names"], [212, 3, 1, "", "parameters"], [212, 2, 1, "", "to_dict"], [212, 2, 1, "", "to_json"], [212, 2, 1, "", "to_searchspace"], [212, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[212, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[212, 4, 1, "", "df"], [212, 4, 1, "", "empty_encoding"], [212, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[212, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[212, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[212, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[212, 4, 1, "", "boundary_only"], [212, 4, 1, "", "constraints"], [212, 4, 1, "", "max_nonzero"], [212, 4, 1, "", "max_sum"], [212, 4, 1, "", "min_nonzero"], [212, 4, 1, "", "product_parameters"], [212, 4, 1, "", "simplex_parameters"], [212, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[212, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[213, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[214, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[217, 5, 1, "", "get_transform_parameters"], [218, 5, 1, "", "validate_parameter_names"], [219, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[221, 0, 0, "-", "core"], [228, 0, 0, "-", "mixin"], [230, 0, 0, "-", "utils"]], "baybe.serialization.core": [[222, 5, 1, "", "block_deserialization_hook"], [223, 5, 1, "", "block_serialization_hook"], [224, 8, 1, "", "converter"], [225, 5, 1, "", "get_base_structure_hook"], [226, 5, 1, "", "select_constructor_hook"], [227, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[225, 4, 1, "", "base"], [225, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[227, 4, 1, "", "base"], [227, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[229, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[229, 2, 1, "", "from_dict"], [229, 2, 1, "", "from_json"], [229, 2, 1, "", "to_dict"], [229, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[229, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[229, 4, 1, "", "string"]], "baybe.serialization.utils": [[231, 5, 1, "", "deserialize_dataframe"], [232, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[234, 0, 0, "-", "core"], [236, 0, 0, "-", "lookup"], [238, 0, 0, "-", "scenarios"], [240, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[235, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[235, 4, 1, "", "batch_size"], [235, 4, 1, "", "campaign"], [235, 4, 1, "", "impute_mode"], [235, 4, 1, "", "initial_data"], [235, 4, 1, "", "lookup"], [235, 4, 1, "", "n_doe_iterations"], [235, 4, 1, "", "noise_percent"], [235, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[237, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[237, 4, 1, "", "impute_mode"], [237, 4, 1, "", "lookup"], [237, 4, 1, "", "queries"], [237, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[239, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[239, 4, 1, "", "batch_size"], [239, 4, 1, "", "groupby"], [239, 4, 1, "", "impute_mode"], [239, 4, 1, "", "initial_data"], [239, 4, 1, "", "lookup"], [239, 4, 1, "", "n_doe_iterations"], [239, 4, 1, "", "n_mc_iterations"], [239, 4, 1, "", "noise_percent"], [239, 4, 1, "", "random_seed"], [239, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[241, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[241, 4, 1, "", "batch_size"], [241, 4, 1, "", "campaign"], [241, 4, 1, "", "groupby"], [241, 4, 1, "", "lookup"], [241, 4, 1, "", "n_doe_iterations"], [241, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[243, 0, 0, "-", "bandit"], [245, 0, 0, "-", "base"], [249, 0, 0, "-", "composite"], [253, 0, 0, "-", "custom"], [256, 0, 0, "-", "gaussian_process"], [271, 0, 0, "-", "linear"], [273, 0, 0, "-", "naive"], [275, 0, 0, "-", "ngboost"], [277, 0, 0, "-", "random_forest"], [279, 0, 0, "-", "utils"], [283, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[244, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[244, 2, 1, "", "__init__"], [244, 2, 1, "", "fit"], [244, 2, 1, "", "from_dict"], [244, 2, 1, "", "from_json"], [244, 2, 1, "", "posterior"], [244, 2, 1, "", "posterior_means"], [244, 2, 1, "", "posterior_modes"], [244, 3, 1, "", "prior"], [244, 2, 1, "", "replicate"], [244, 3, 1, "", "supports_multi_output"], [244, 3, 1, "", "supports_transfer_learning"], [244, 2, 1, "", "to_botorch"], [244, 2, 1, "", "to_dict"], [244, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[244, 4, 1, "", "measurements"], [244, 4, 1, "", "objective"], [244, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[244, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[244, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[244, 4, 1, "", "candidates"]], "baybe.surrogates.base": [[246, 1, 1, "", "IndependentGaussianSurrogate"], [247, 1, 1, "", "Surrogate"], [248, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[246, 2, 1, "", "__init__"], [246, 2, 1, "", "fit"], [246, 2, 1, "", "from_dict"], [246, 2, 1, "", "from_json"], [246, 2, 1, "", "posterior"], [246, 2, 1, "", "replicate"], [246, 3, 1, "", "supports_multi_output"], [246, 3, 1, "", "supports_transfer_learning"], [246, 2, 1, "", "to_botorch"], [246, 2, 1, "", "to_dict"], [246, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[246, 4, 1, "", "measurements"], [246, 4, 1, "", "objective"], [246, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[246, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[246, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[246, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate": [[247, 2, 1, "", "__init__"], [247, 2, 1, "", "fit"], [247, 2, 1, "", "from_dict"], [247, 2, 1, "", "from_json"], [247, 2, 1, "", "posterior"], [247, 2, 1, "", "replicate"], [247, 3, 1, "", "supports_multi_output"], [247, 3, 1, "", "supports_transfer_learning"], [247, 2, 1, "", "to_botorch"], [247, 2, 1, "", "to_dict"], [247, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[247, 4, 1, "", "measurements"], [247, 4, 1, "", "objective"], [247, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[247, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[247, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[247, 4, 1, "", "candidates"]], "baybe.surrogates.base.SurrogateProtocol": [[248, 2, 1, "", "__init__"], [248, 2, 1, "", "fit"], [248, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[250, 1, 1, "", "CompositeSurrogate"], [251, 5, 1, "", "structure_surrogate_getter"], [252, 5, 1, "", "unstructure_surrogate_getter"]], "baybe.surrogates.composite.CompositeSurrogate": [[250, 2, 1, "", "__init__"], [250, 2, 1, "", "fit"], [250, 2, 1, "", "from_dict"], [250, 2, 1, "", "from_json"], [250, 2, 1, "", "from_replication"], [250, 2, 1, "", "posterior"], [250, 3, 1, "", "surrogates"], [250, 2, 1, "", "to_botorch"], [250, 2, 1, "", "to_dict"], [250, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[250, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[250, 4, 1, "", "string"]], "baybe.surrogates.custom": [[254, 1, 1, "", "CustomONNXSurrogate"], [255, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[254, 2, 1, "", "__init__"], [254, 2, 1, "", "default_model"], [254, 2, 1, "", "fit"], [254, 2, 1, "", "from_dict"], [254, 2, 1, "", "from_json"], [254, 3, 1, "", "onnx_input_name"], [254, 3, 1, "", "onnx_str"], [254, 2, 1, "", "posterior"], [254, 2, 1, "", "replicate"], [254, 3, 1, "", "supports_multi_output"], [254, 3, 1, "", "supports_transfer_learning"], [254, 2, 1, "", "to_botorch"], [254, 2, 1, "", "to_dict"], [254, 2, 1, "", "to_json"], [254, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[254, 4, 1, "", "measurements"], [254, 4, 1, "", "objective"], [254, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[254, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[254, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[254, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[254, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[257, 0, 0, "-", "core"], [259, 0, 0, "-", "kernel_factory"], [263, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[258, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "fit"], [258, 2, 1, "", "from_dict"], [258, 2, 1, "", "from_json"], [258, 2, 1, "", "from_preset"], [258, 3, 1, "", "kernel_factory"], [258, 2, 1, "", "posterior"], [258, 2, 1, "", "replicate"], [258, 3, 1, "", "supports_multi_output"], [258, 3, 1, "", "supports_transfer_learning"], [258, 2, 1, "", "to_botorch"], [258, 2, 1, "", "to_dict"], [258, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[258, 4, 1, "", "measurements"], [258, 4, 1, "", "objective"], [258, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[258, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[258, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[258, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.kernel_factory": [[260, 1, 1, "", "KernelFactory"], [261, 1, 1, "", "PlainKernelFactory"], [262, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[260, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[261, 2, 1, "", "__init__"], [261, 2, 1, "", "from_dict"], [261, 2, 1, "", "from_json"], [261, 3, 1, "", "kernel"], [261, 2, 1, "", "to_dict"], [261, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[261, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[261, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[264, 0, 0, "-", "core"], [267, 0, 0, "-", "default"], [269, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[265, 1, 1, "", "GaussianProcessPreset"], [266, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[265, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[268, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[268, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[270, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[270, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[272, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[272, 2, 1, "", "__init__"], [272, 2, 1, "", "fit"], [272, 2, 1, "", "from_dict"], [272, 2, 1, "", "from_json"], [272, 3, 1, "", "model_params"], [272, 2, 1, "", "posterior"], [272, 2, 1, "", "replicate"], [272, 3, 1, "", "supports_multi_output"], [272, 3, 1, "", "supports_transfer_learning"], [272, 2, 1, "", "to_botorch"], [272, 2, 1, "", "to_dict"], [272, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[272, 4, 1, "", "measurements"], [272, 4, 1, "", "objective"], [272, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[272, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[272, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[272, 4, 1, "", "candidates"]], "baybe.surrogates.naive": [[274, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[274, 2, 1, "", "__init__"], [274, 2, 1, "", "fit"], [274, 2, 1, "", "from_dict"], [274, 2, 1, "", "from_json"], [274, 2, 1, "", "posterior"], [274, 2, 1, "", "replicate"], [274, 3, 1, "", "supports_multi_output"], [274, 3, 1, "", "supports_transfer_learning"], [274, 2, 1, "", "to_botorch"], [274, 2, 1, "", "to_dict"], [274, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[274, 4, 1, "", "measurements"], [274, 4, 1, "", "objective"], [274, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[274, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[274, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[274, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost": [[276, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[276, 2, 1, "", "__init__"], [276, 2, 1, "", "fit"], [276, 2, 1, "", "from_dict"], [276, 2, 1, "", "from_json"], [276, 3, 1, "", "model_params"], [276, 2, 1, "", "posterior"], [276, 2, 1, "", "replicate"], [276, 3, 1, "", "supports_multi_output"], [276, 3, 1, "", "supports_transfer_learning"], [276, 2, 1, "", "to_botorch"], [276, 2, 1, "", "to_dict"], [276, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[276, 4, 1, "", "measurements"], [276, 4, 1, "", "objective"], [276, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[276, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[276, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[276, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest": [[278, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[278, 2, 1, "", "__init__"], [278, 2, 1, "", "fit"], [278, 2, 1, "", "from_dict"], [278, 2, 1, "", "from_json"], [278, 3, 1, "", "model_params"], [278, 2, 1, "", "posterior"], [278, 2, 1, "", "replicate"], [278, 3, 1, "", "supports_multi_output"], [278, 3, 1, "", "supports_transfer_learning"], [278, 2, 1, "", "to_botorch"], [278, 2, 1, "", "to_dict"], [278, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[278, 4, 1, "", "measurements"], [278, 4, 1, "", "objective"], [278, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[278, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[278, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[278, 4, 1, "", "candidates"]], "baybe.surrogates.utils": [[280, 5, 1, "", "batchify_ensemble_predictor"], [281, 5, 1, "", "batchify_mean_var_prediction"], [282, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[280, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[282, 4, 1, "", "cls"], [282, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[284, 5, 1, "", "get_model_params_validator"], [285, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[284, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[285, 4, 1, "", "model_cls"]], "baybe.targets": [[287, 0, 0, "-", "base"], [289, 0, 0, "-", "binary"], [292, 0, 0, "-", "enum"], [295, 0, 0, "-", "numerical"], [297, 0, 0, "-", "transforms"]], "baybe.targets.base": [[288, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[288, 2, 1, "", "__init__"], [288, 2, 1, "", "from_dict"], [288, 2, 1, "", "from_json"], [288, 3, 1, "", "name"], [288, 2, 1, "", "summary"], [288, 2, 1, "", "to_dict"], [288, 2, 1, "", "to_json"], [288, 2, 1, "", "to_objective"], [288, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[288, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[288, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[288, 4, 1, "", "series"]], "baybe.targets.binary": [[290, 1, 1, "", "BinaryTarget"], [291, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[290, 2, 1, "", "__init__"], [290, 3, 1, "", "failure_value"], [290, 2, 1, "", "from_dict"], [290, 2, 1, "", "from_json"], [290, 3, 1, "", "name"], [290, 3, 1, "", "success_value"], [290, 2, 1, "", "summary"], [290, 2, 1, "", "to_dict"], [290, 2, 1, "", "to_json"], [290, 2, 1, "", "to_objective"], [290, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[290, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[290, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[290, 4, 1, "", "series"]], "baybe.targets.enum": [[293, 1, 1, "", "TargetMode"], [294, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[293, 3, 1, "", "MATCH"], [293, 3, 1, "", "MAX"], [293, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[294, 3, 1, "", "BELL"], [294, 3, 1, "", "LINEAR"], [294, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[296, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[296, 2, 1, "", "__init__"], [296, 3, 1, "", "bounds"], [296, 2, 1, "", "from_dict"], [296, 2, 1, "", "from_json"], [296, 3, 1, "", "mode"], [296, 3, 1, "", "name"], [296, 2, 1, "", "summary"], [296, 2, 1, "", "to_dict"], [296, 2, 1, "", "to_json"], [296, 2, 1, "", "to_objective"], [296, 2, 1, "", "transform"], [296, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[296, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[296, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[296, 4, 1, "", "series"]], "baybe.targets.transforms": [[298, 5, 1, "", "bell_transform"], [299, 5, 1, "", "linear_transform"], [300, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[298, 4, 1, "", "arr"], [298, 4, 1, "", "lower"], [298, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[299, 4, 1, "", "arr"], [299, 4, 1, "", "descending"], [299, 4, 1, "", "lower"], [299, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[300, 4, 1, "", "arr"], [300, 4, 1, "", "lower"], [300, 4, 1, "", "upper"]], "baybe.telemetry": [[302, 5, 1, "", "get_user_details"], [303, 5, 1, "", "is_enabled"], [304, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [305, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[304, 4, 1, "", "cached_recommendation"], [304, 4, 1, "", "measurements"], [304, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[305, 4, 1, "", "instrument_name"], [305, 4, 1, "", "value"]], "baybe.utils": [[307, 0, 0, "-", "augmentation"], [310, 0, 0, "-", "basic"], [326, 0, 0, "-", "boolean"], [330, 0, 0, "-", "chemistry"], [335, 0, 0, "-", "conversion"], [338, 0, 0, "-", "dataframe"], [353, 0, 0, "-", "interval"], [358, 0, 0, "-", "memory"], [360, 0, 0, "-", "numerical"], [367, 0, 0, "-", "plotting"], [371, 0, 0, "-", "random"], [374, 0, 0, "-", "sampling_algorithms"], [378, 0, 0, "-", "scaling"], [380, 0, 0, "-", "torch"], [383, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[308, 5, 1, "", "df_apply_dependency_augmentation"], [309, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[308, 4, 1, "", "affected"], [308, 4, 1, "", "causing"], [308, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[309, 4, 1, "", "column_groups"], [309, 4, 1, "", "df"]], "baybe.utils.basic": [[311, 1, 1, "", "Dummy"], [312, 8, 1, "", "UNSPECIFIED"], [313, 1, 1, "", "UnspecifiedType"], [314, 1, 1, "", "classproperty"], [315, 5, 1, "", "convert_to_float"], [316, 5, 1, "", "find_subclass"], [317, 5, 1, "", "get_baseclasses"], [318, 5, 1, "", "get_subclasses"], [319, 5, 1, "", "group_duplicate_values"], [320, 5, 1, "", "hilberts_factory"], [321, 5, 1, "", "is_all_instance"], [322, 5, 1, "", "match_attributes"], [323, 5, 1, "", "refers_to"], [324, 5, 1, "", "register_hooks"], [325, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[311, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[314, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[317, 4, 1, "", "abstract"], [317, 4, 1, "", "cls"], [317, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[318, 4, 1, "", "abstract"], [318, 4, 1, "", "cls"], [318, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[319, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[322, 4, 1, "", "callable_"], [322, 4, 1, "", "ignore"], [322, 4, 1, "", "object"], [322, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[324, 4, 1, "", "post_hooks"], [324, 4, 1, "", "pre_hooks"], [324, 4, 1, "", "target"]], "baybe.utils.boolean": [[327, 5, 1, "", "check_if_in"], [328, 5, 1, "", "is_abstract"], [329, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[327, 4, 1, "", "allowed"], [327, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[328, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[329, 4, 1, "", "val"]], "baybe.utils.chemistry": [[331, 5, 1, "", "get_canonical_smiles"], [332, 5, 1, "", "get_fingerprint_class"], [333, 5, 1, "", "name_to_smiles"], [334, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[332, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[333, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[334, 4, 1, "", "encoding"], [334, 4, 1, "", "kwargs_conformer"], [334, 4, 1, "", "kwargs_fingerprint"], [334, 4, 1, "", "prefix"], [334, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[336, 5, 1, "", "fraction_to_float"], [337, 5, 1, "", "nonstring_to_tuple"]], "baybe.utils.conversion.fraction_to_float.params": [[336, 4, 1, "", "value"]], "baybe.utils.dataframe": [[339, 5, 1, "", "add_fake_measurements"], [340, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [341, 5, 1, "", "add_parameter_noise"], [342, 5, 1, "", "arrays_to_dataframes"], [343, 5, 1, "", "create_fake_input"], [344, 5, 1, "", "df_drop_single_value_columns"], [345, 5, 1, "", "df_drop_string_columns"], [346, 5, 1, "", "df_uncorrelated_features"], [347, 5, 1, "", "filter_df"], [348, 5, 1, "", "fuzzy_row_match"], [349, 5, 1, "", "get_transform_objects"], [350, 5, 1, "", "pretty_print_df"], [351, 5, 1, "", "to_tensor"], [352, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[339, 4, 1, "", "bad_intervals"], [339, 4, 1, "", "data"], [339, 4, 1, "", "good_intervals"], [339, 4, 1, "", "good_reference_values"], [339, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[340, 4, 1, "", "df"], [340, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[341, 4, 1, "", "data"], [341, 4, 1, "", "noise_level"], [341, 4, 1, "", "noise_type"], [341, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[342, 4, 1, "", "input_labels"], [342, 4, 1, "", "output_labels"], [342, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[343, 4, 1, "", "**kwargs"], [343, 4, 1, "", "n_rows"], [343, 4, 1, "", "parameters"], [343, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[344, 4, 1, "", "df"], [344, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[345, 4, 1, "", "df"], [345, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[346, 4, 1, "", "df"], [346, 4, 1, "", "exclude_list"], [346, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[347, 4, 1, "", "complement"], [347, 4, 1, "", "df"], [347, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[348, 4, 1, "", "left_df"], [348, 4, 1, "", "parameters"], [348, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[349, 4, 1, "", "allow_extra"], [349, 4, 1, "", "allow_missing"], [349, 4, 1, "", "df"], [349, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[350, 4, 1, "", "df"], [350, 4, 1, "", "max_columns"], [350, 4, 1, "", "max_colwidth"], [350, 4, 1, "", "max_rows"], [350, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[351, 4, 1, "", "*x"]], "baybe.utils.interval": [[354, 7, 1, "", "InfiniteIntervalError"], [355, 1, 1, "", "Interval"], [356, 5, 1, "", "convert_bounds"], [357, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[354, 2, 1, "", "__init__"], [354, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[355, 2, 1, "", "__init__"], [355, 6, 1, "", "center"], [355, 2, 1, "", "contains"], [355, 2, 1, "", "create"], [355, 2, 1, "", "from_dict"], [355, 2, 1, "", "from_json"], [355, 6, 1, "", "is_bounded"], [355, 6, 1, "", "is_degenerate"], [355, 6, 1, "", "is_fully_unbounded"], [355, 6, 1, "", "is_half_bounded"], [355, 6, 1, "", "is_left_bounded"], [355, 6, 1, "", "is_right_bounded"], [355, 3, 1, "", "lower"], [355, 2, 1, "", "to_dict"], [355, 2, 1, "", "to_json"], [355, 2, 1, "", "to_ndarray"], [355, 2, 1, "", "to_tensor"], [355, 2, 1, "", "to_tuple"], [355, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[355, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[355, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[355, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[356, 4, 1, "", "bounds"]], "baybe.utils.memory": [[359, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[359, 4, 1, "", "num"]], "baybe.utils.numerical": [[361, 3, 1, "", "DTypeFloatNumpy"], [362, 3, 1, "", "DTypeFloatONNX"], [363, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [364, 5, 1, "", "closer_element"], [365, 5, 1, "", "closest_element"], [366, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[364, 4, 1, "", "target"], [364, 4, 1, "", "x"], [364, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[365, 4, 1, "", "array"], [365, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[366, 4, 1, "", "arr"], [366, 4, 1, "", "weights"]], "baybe.utils.plotting": [[368, 5, 1, "", "create_example_plots"], [369, 5, 1, "", "indent"], [370, 5, 1, "", "to_string"]], "baybe.utils.plotting.create_example_plots.params": [[368, 4, 1, "", "ax"], [368, 4, 1, "", "base_name"], [368, 4, 1, "", "path"]], "baybe.utils.plotting.to_string.params": [[370, 4, 1, "", "*fields"], [370, 4, 1, "", "header"], [370, 4, 1, "", "single_line"]], "baybe.utils.random": [[372, 5, 1, "", "set_random_seed"], [373, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[372, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[373, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[375, 1, 1, "", "DiscreteSamplingMethod"], [376, 5, 1, "", "farthest_point_sampling"], [377, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[375, 3, 1, "", "FPS"], [375, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[376, 4, 1, "", "initialization"], [376, 4, 1, "", "n_samples"], [376, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[377, 4, 1, "", "df"], [377, 4, 1, "", "method"], [377, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[379, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[379, 2, 1, "", "__init__"], [379, 2, 1, "", "fit"], [379, 3, 1, "", "mapping"], [379, 2, 1, "", "transform"]], "baybe.utils.torch": [[381, 8, 1, "", "DTypeFloatTorch"], [382, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[384, 5, 1, "", "finite_float"], [385, 5, 1, "", "non_inf_float"], [386, 5, 1, "", "non_nan_float"], [387, 5, 1, "", "validate_not_nan"], [388, 5, 1, "", "validate_parameter_input"], [389, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[388, 4, 1, "", "data"], [388, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [388, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[389, 4, 1, "", "data"], [389, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 188, 204, 206, 212, 229, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 320, 351, 355, 390, 393, 400, 404, 407, 408, 411, 412, 414, 415, 416, 417, 418, 420, 425, 429, 430, 431, 434, 435, 436, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455], "0": [8, 12, 20, 32, 42, 43, 49, 99, 138, 146, 149, 167, 175, 176, 177, 188, 212, 235, 237, 298, 299, 300, 308, 309, 329, 340, 341, 346, 347, 362, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 415, 417, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 434, 439, 440, 443, 447, 448, 450, 451, 452, 454, 457], "00": [424, 450], "000": [404, 426], "001": [340, 443], "001126070000054824": 407, "003244": 424, "005": [392, 393, 394, 396, 397], "01": [167, 399, 400, 405, 408, 423, 424, 431], "011674": 422, "016339": 415, "016600": 415, "02": 431, "021": [270, 346], "024820": 415, "028577": 424, "028829": 415, "03213": [270, 346], "037291": 422, "039498": 422, "05": 431, "051501": 415, "053246": 423, "056656": 422, "057": [392, 393, 394, 396, 397, 407], "058009": 422, "06": [212, 282], "060656": 424, "060949": 424, "065469": 397, "08": 431, "081601": 415, "083024": 424, "089271": 415, "089377": 419, "09653736976391157": 417, "0f": 408, "1": [12, 24, 29, 42, 99, 120, 138, 149, 178, 188, 204, 235, 237, 239, 241, 298, 299, 300, 305, 308, 309, 319, 329, 341, 343, 347, 362, 366, 376, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 415, 417, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 434, 435, 439, 442, 443, 447, 448, 450, 451, 452, 454, 457], "10": [12, 188, 237, 270, 346, 391, 393, 396, 397, 402, 403, 404, 405, 408, 411, 412, 414, 415, 417, 419, 420, 422, 426, 427, 428, 430, 431, 434, 441, 448, 452, 457], "100": [402, 403, 404, 405, 408, 411, 412, 414, 415, 419, 420, 426, 431, 446, 447, 448, 452, 454, 457], "1000": [420, 452], "102": 423, "1024": [143, 436, 448], "1038": [270, 346], "105": [392, 393, 394, 396, 397, 407, 419, 450], "106": 424, "109984": 422, "11": [314, 414, 415, 435], "111": 426, "112": 423, "112153": 422, "1147": 404, "1148": 404, "1149": 404, "1150": 404, "116": 423, "118": 424, "12": [414, 415, 423, 424, 437, 450], "120": [392, 393, 394, 396, 397, 402, 404, 407, 448], "120000": 423, "122": 426, "126": [402, 404, 405, 435], "1268824": [392, 393, 394], "127066": 415, "128": 10, "128381": 419, "13": [414, 415, 419, 430, 450], "133393": 415, "1337": [408, 409, 457], "136610": 415, "137": 397, "14": [414, 415, 419, 450], "14448993259018328": 417, "1454": 436, "15": [237, 396, 404, 414, 415, 419, 430, 431, 434, 442, 450], "150": [402, 405, 443], "1500": 448, "151": 404, "153": [392, 393, 394, 396, 397, 407], "16": [350, 362, 414, 415, 419, 424], "162591": 419, "163223": 415, "168": 419, "168661": 415, "169225": 419, "17": [414, 415], "173842": 419, "176843": 419, "177": 426, "177130": 396, "18": [397, 414, 415, 424, 442], "180": [402, 419], "180096": 415, "181364": 422, "183740": 415, "188": 426, "19": 414, "192": 404, "1e": [212, 282], "2": [8, 12, 20, 99, 101, 120, 237, 308, 309, 319, 339, 347, 366, 376, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 408, 409, 411, 412, 414, 415, 417, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 434, 439, 442, 443, 447, 448, 450, 451, 452, 454], "20": [12, 149, 237, 391, 392, 393, 394, 408, 409, 411, 414, 415, 419, 436, 448, 455, 457], "200": [393, 402, 404, 411, 412, 417, 426], "200126": 415, "2004": 439, "2007": 455, "2021": 393, "2022": 434, "2025": 434, "206988": 415, "207698": 422, "207972": 415, "209105": 415, "21": [414, 415, 419, 427], "212": 419, "215301": 415, "217": 419, "217373": 419, "22": [12, 414, 415, 419], "220": 419, "220736": 422, "221": 436, "222": 426, "223587": 415, "225142": 415, "23": [414, 452], "230": 396, "239968": 415, "24": [403, 414, 450], "241": 448, "244271": 415, "245441": 419, "25": [408, 414, 430, 450], "250": 440, "250333": 415, "252462": 422, "26": [414, 450], "261266": 415, "264215": 415, "268": 419, "269090": 415, "27": [414, 415, 450], "276039": 415, "276889": 424, "277": 419, "277995": 419, "278": 419, "279": 419, "28": [397, 414, 415], "280": 419, "282299": 422, "29": [414, 415, 434], "291631": 422, "294558": 415, "297247": 396, "3": [237, 308, 309, 314, 319, 347, 350, 369, 392, 393, 394, 397, 400, 402, 403, 404, 405, 407, 409, 412, 414, 415, 417, 419, 420, 422, 423, 424, 426, 427, 430, 431, 434, 435, 437, 439, 442, 443, 446, 448, 450, 451, 452, 454, 455], "30": [391, 405, 409, 414, 415, 419, 448], "304208": 415, "3078f3": 436, "31": [414, 415, 419, 427], "32": [403, 414, 415, 448], "327": 397, "328459": 419, "33": [403, 414, 419], "330833": 415, "338122": 415, "339306": 419, "34": 403, "343440": 415, "346187": 415, "347205": 415, "35": [403, 414], "352614": 415, "359663": 415, "36": 415, "365187": 415, "366984": 415, "367215": 419, "376050": 423, "378415": 422, "380185": 415, "383383": 415, "387418": 419, "39": 448, "392982": 419, "395713": 422, "396187": 422, "3d": 409, "4": [12, 143, 308, 309, 350, 399, 400, 402, 403, 404, 405, 409, 414, 415, 417, 419, 422, 423, 424, 434, 439, 442, 443, 448, 450], "40": [414, 447, 448], "401304": 419, "401464": 422, "408552": 415, "408881": 415, "40x": 436, "419452": 397, "42": [417, 420], "43": 415, "434857": 422, "435036": 415, "447": 402, "448": 402, "449": 402, "45": [414, 419, 454], "450": 402, "450263": 415, "457986": 422, "46": 419, "468": 436, "477214": 419, "484904": 419, "49": 419, "496561": 419, "4x": 436, "5": [99, 149, 308, 309, 392, 394, 399, 402, 403, 404, 405, 408, 411, 412, 414, 415, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 434, 439, 440, 441, 442, 443, 448, 450, 452, 455, 457], "50": [405, 412, 414, 415, 417, 419, 430, 431, 439, 440, 448, 450, 454], "500": [409, 448], "503359": 422, "506663": 415, "5066666666666667": 417, "51": 419, "510289": 419, "510590": 422, "514558": 415, "515378": 415, "516007": 415, "52": [415, 419], "53": 419, "5313": 325, "535257": 415, "54": [415, 419, 434], "544207": 419, "544209": 415, "55": [419, 454], "558649": 419, "56": [419, 452], "57": 415, "572173": 415, "577989": 419, "578488": 415, "58": 419, "59": [415, 419, 426, 434], "590": 393, "594132": 424, "598136": 415, "6": [308, 309, 350, 392, 393, 394, 402, 403, 404, 405, 414, 415, 417, 419, 422, 424, 426, 439, 443, 450], "60": [419, 447], "61": [419, 423], "62": 417, "628593": 422, "64": 188, "646446": 415, "647598": 415, "649340": 422, "65": 417, "650816": 422, "657850": 422, "66": 419, "663415": 397, "66368270ffd51418ec58bd793f2d9b1b": 455, "67": 419, "672671": 422, "68": 415, "684309": 415, "684668": 415, "686832": 415, "69": [392, 393, 394, 396], "690958": 415, "7": [149, 308, 309, 346, 403, 405, 409, 414, 415, 419, 420, 422, 430, 439, 448, 450], "70": 414, "706667": 423, "708873": 419, "71": 448, "716946": 422, "729721": 419, "732171": 415, "732877": 424, "734377": 419, "740725": 419, "742992": 415, "745": 457, "745011": 419, "75": [414, 450], "754471": 415, "755886": 424, "756425": 415, "759003": 415, "759510": 415, "761714": 415, "764446": 419, "765090": 415, "77": 419, "778": 426, "782502": 419, "786548": 422, "79": 434, "790235": 415, "797229": 424, "7gz": 448, "7hf": 448, "8": [309, 392, 394, 402, 404, 405, 414, 415, 417, 419, 422, 434, 439, 443], "80": [415, 443], "801973": 422, "809751": 415, "81": 397, "836157": 419, "838676": 422, "8389": 325, "8417": 325, "846288": 422, "847261": 422, "856681": 422, "857": 404, "861": 405, "862": 405, "863": 405, "864": 405, "864764": 415, "87": 426, "870397": 424, "874860": 422, "88": 426, "8859": 411, "889": 426, "89": [393, 419, 423, 424, 426], "896751": 419, "899468": 422, "8jq": 448, "9": [12, 405, 409, 414, 415, 419, 422, 439, 442, 450, 451], "90": [392, 393, 394, 396, 397, 407, 426, 450], "907074": 419, "911171": 419, "928352": 422, "931936": 424, "933846": 415, "936898": 415, "943840": 415, "945408": 419, "95": 419, "954184": 415, "956989": 419, "96": 393, "962205": 415, "963513": 422, "966975": 415, "967419": 415, "975909": 422, "978847": 422, "98": 419, "983757": 415, "993552": 422, "993567": 419, "997799": 415, "999": 443, "A": [0, 12, 24, 29, 36, 38, 39, 40, 42, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 68, 71, 72, 73, 74, 77, 80, 82, 87, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 117, 119, 120, 124, 126, 132, 135, 136, 138, 146, 149, 151, 160, 161, 162, 163, 164, 165, 166, 167, 170, 176, 177, 178, 180, 183, 186, 188, 190, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 213, 214, 229, 230, 235, 237, 239, 241, 244, 246, 247, 250, 254, 258, 260, 261, 268, 270, 272, 274, 276, 278, 284, 288, 290, 296, 298, 299, 300, 308, 314, 317, 318, 319, 322, 332, 339, 346, 347, 349, 359, 366, 374, 376, 379, 391, 403, 412, 414, 415, 417, 419, 427, 428, 433, 435, 436, 437, 439, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455], "AND": [52, 404, 439, 443], "AS": [434, 439], "And": 411, "As": [392, 393, 394, 409, 417, 419, 430, 431, 434, 435, 436, 443, 446, 449, 450, 452], "At": 454, "But": 454, "By": [87, 119, 136, 151, 212, 328, 347, 415, 437, 441, 444, 445, 447, 449, 450], "FOR": 439, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 87, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 157, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 212, 235, 241, 244, 246, 247, 248, 250, 254, 258, 261, 268, 270, 272, 274, 276, 278, 288, 290, 296, 301, 324, 348, 352, 355, 368, 379, 392, 393, 394, 396, 397, 403, 407, 408, 409, 414, 415, 417, 419, 424, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "If": [6, 12, 14, 29, 36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 87, 91, 114, 119, 120, 124, 126, 128, 151, 155, 156, 176, 177, 180, 204, 206, 212, 218, 219, 235, 237, 239, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 299, 304, 309, 317, 318, 322, 324, 327, 329, 332, 336, 339, 340, 341, 343, 346, 347, 348, 349, 368, 370, 376, 377, 388, 389, 397, 399, 408, 414, 423, 424, 427, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457], "In": [29, 43, 55, 188, 206, 233, 235, 322, 350, 392, 393, 394, 396, 408, 409, 411, 414, 415, 417, 419, 420, 423, 424, 427, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "It": [24, 170, 177, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 233, 253, 274, 339, 392, 396, 397, 403, 412, 414, 417, 419, 424, 426, 427, 428, 430, 441, 442, 443, 444, 445, 448, 449, 450, 452, 457], "Its": [237, 411], "No": [348, 422, 433, 436], "Not": [439, 443], "OF": [434, 439], "OR": [434, 439], "Of": [397, 406, 432, 451], "On": [411, 417], "One": [140, 392, 394, 420, 434], "Or": 444, "Such": [397, 443, 446, 452], "That": [206, 237, 244, 246, 247, 254, 258, 272, 274, 276, 278, 299, 397, 402, 414, 437, 450, 452, 455], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 87, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 120, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 157, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 212, 224, 225, 227, 229, 233, 235, 237, 239, 244, 246, 247, 248, 250, 254, 258, 261, 272, 274, 276, 278, 280, 282, 284, 285, 288, 290, 293, 296, 298, 299, 300, 302, 304, 305, 308, 309, 314, 317, 318, 319, 322, 324, 327, 328, 329, 332, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 359, 364, 365, 366, 368, 370, 372, 373, 376, 377, 388, 389, 392, 393, 394, 397, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 419, 423, 424, 428, 430, 431, 433, 435, 436, 437, 439, 442, 443, 444, 446, 447, 448, 449, 450, 453, 454, 456, 457], "Then": 409, "There": [76, 282, 362, 414, 422, 434, 435, 437, 441, 445, 450, 453], "These": [302, 390, 393, 394, 395, 398, 401, 406, 410, 413, 416, 418, 421, 425, 429, 434, 437, 441, 443, 444, 448, 450], "To": [392, 397, 408, 409, 415, 417, 420, 426, 430, 431, 434, 435, 437, 441, 442, 444, 445, 447, 448, 452, 453], "Will": 440, "With": [339, 408, 409, 414, 417, 420, 430, 431, 434, 441, 443, 448, 451], "_": [128, 155, 156, 209, 215, 222, 251, 368, 399, 408, 431], "__": 128, "__class__": [407, 417], "__excepthook__": 435, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 212, 244, 246, 247, 248, 250, 254, 258, 260, 261, 268, 270, 272, 274, 276, 278, 288, 290, 296, 311, 314, 354, 355, 379, 450, 451], "__name__": [407, 417], "__new__": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 140, 141, 143, 354], "__str__": 436, "__version__": 436, "_amount": 414, "_arraylik": 342, "_c": 318, "_cumbest": 235, "_default_my_attribut": 437, "_fit": 285, "_has_switch": 178, "_iterbest": 235, "_label": 414, "_measur": 235, "_n_last_measur": [175, 176, 177], "_nbase": 334, "_nestedsequ": [12, 120, 298, 299, 300, 365], "_no_tl": 430, "_option": 436, "_posterior": 285, "_step": [175, 176, 177], "_supportsarrai": [12, 120, 298, 299, 300, 365], "_surrogate_model": [408, 409], "_surrogategett": [250, 251, 252], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 204, 206, 212, 217, 225, 226, 229, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 319, 320, 321, 337, 349, 355], "_target": 436, "_tparamet": 151, "_tsurrog": 281, "_u": 319, "_validate_my_attribut": 437, "_was_us": [175, 176, 177], "a1": 309, "a2": 309, "ab": [405, 414], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 316, 323, 436, 456], "abc": [22, 32, 33, 34, 35, 36, 38, 94, 95, 96, 114, 132, 133, 159, 173, 183, 186, 193, 198, 246, 247, 288, 328], "abil": [440, 445, 455], "abl": [409, 435, 441, 443, 448, 451, 457], "about": [8, 24, 29, 133, 149, 288, 305, 392, 393, 394, 414, 423, 424, 434, 436, 437, 446, 448, 450, 453], "abov": [282, 300, 328, 346, 391, 397, 404, 405, 407, 408, 415, 422, 434, 437, 439, 440, 441, 442, 443, 444, 445, 448, 451, 452, 453, 455], "absenc": 447, "absolut": [146, 341, 434], "abstract": [22, 32, 33, 34, 35, 36, 38, 94, 95, 96, 114, 131, 132, 133, 159, 173, 183, 186, 193, 247, 288, 317, 318, 328, 436, 443, 455], "abstractli": 417, "acceler": [434, 436, 438, 455], "accept": [29, 176, 258, 342, 408, 409, 436, 439, 444, 447, 448, 452, 454], "access": [204, 212, 244, 246, 247, 254, 258, 272, 274, 276, 278, 392, 393, 394, 402, 407, 431, 436, 443, 451], "accord": [42, 171, 415, 440, 443, 444, 449, 457], "accordingli": [188, 442, 445, 447, 451], "account": 441, "accumul": [161, 417, 455], "accur": 442, "acet": [392, 393, 394, 396, 397], "aceton": 414, "achiev": [19, 212, 409, 414, 417, 420, 434, 437, 440, 442, 443, 445, 453], "ack": 434, "acq_funct": 397, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 408, 409, 417], "acqf1": 451, "acqf2": 451, "acqf_valu": 408, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 65, 73, 186, 188, 402, 403, 404, 405, 408, 409, 417, 419, 426, 434, 436, 440, 447, 449, 451, 453], "acquisition_funct": [186, 188, 397, 417, 427, 428, 436], "acquisition_function_cl": [186, 188, 436], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 26, 27, 186, 188, 417, 436, 451], "across": [414, 417, 430, 441, 449, 455], "act": [414, 436, 439, 443, 452], "action": [19, 407, 417, 433, 436, 456], "activ": [14, 32, 136, 178, 408, 409, 417, 434, 435, 436, 437, 443, 444, 445, 446, 449, 455, 456, 457], "active_dim": [94, 95, 96, 99, 101, 103, 104, 105], "active_valu": [136, 430, 431, 445, 455], "actual": [176, 206, 233, 423, 436, 446, 450, 452, 455, 457], "ad": [29, 212, 304, 308, 339, 376, 414, 415, 433, 437, 440, 444, 445, 448, 453, 454, 456], "adapt": [177, 270, 329, 346], "add": [29, 227, 237, 252, 339, 340, 397, 411, 412, 414, 419, 430, 434, 439, 441, 442, 443, 446, 450, 455, 457], "add_collection3d": 409, "add_fake_measur": [343, 396, 397, 402, 403, 404, 405, 411, 412, 419, 436, 441, 452, 457], "add_fake_result": 436, "add_measur": [29, 343, 396, 397, 399, 400, 402, 403, 404, 405, 409, 411, 412, 417, 419, 420, 423, 424, 434, 436, 441, 442, 444, 445], "add_noise_to_perturb_degenerate_row": 436, "add_parameter_nois": [343, 436, 457], "add_subplot": 409, "addendum": 439, "addit": [29, 87, 114, 119, 124, 126, 176, 188, 206, 227, 235, 237, 239, 341, 343, 392, 393, 394, 415, 423, 431, 434, 436, 438, 439, 442, 443, 444, 446, 447, 448, 450, 451, 452, 455, 457], "addition": [407, 415, 434, 446], "additiveexplain": [85, 88], "additivekernel": 436, "address": 452, "adher": [436, 437], "adjust": [177, 393, 397, 423, 436, 445, 447], "adopt": 397, "adrian": [434, 438], "advanc": [177, 417, 435, 436, 444, 447, 451, 455, 456], "advantag": [414, 437], "advic": 437, "advis": [439, 452], "affect": [29, 51, 188, 308, 407, 426, 433, 435, 443], "affected_paramet": [51, 402, 403, 404, 405, 414, 443], "affili": [434, 444], "afford": 442, "aforement": [206, 444], "after": [178, 324, 396, 397, 402, 403, 404, 405, 409, 419, 426, 434, 442, 446, 447, 451], "afterward": 451, "again": [408, 441, 442, 443, 455], "against": [81, 304, 322, 414, 439, 445, 455], "agent": 415, "aggreg": 447, "agraw": 438, "agre": [434, 439, 446], "agreement": 439, "ai": [92, 157, 362], "aim": [442, 446], "akin": 441, "al": [393, 434, 448], "aldrich": 438, "alex": 438, "alexand": [434, 438], "algorithm": [181, 188, 339, 374, 376, 391, 414, 419, 434, 436, 441, 446, 449], "alia": [148, 190, 448], "alias": 436, "align": [204, 324, 408, 450, 455], "all": [21, 22, 31, 33, 38, 51, 53, 87, 93, 94, 95, 96, 113, 114, 119, 130, 133, 136, 138, 142, 149, 158, 159, 169, 172, 173, 176, 182, 183, 185, 188, 192, 193, 206, 213, 214, 237, 244, 245, 247, 287, 288, 308, 321, 322, 339, 392, 393, 394, 397, 399, 400, 402, 403, 407, 408, 409, 414, 415, 417, 419, 422, 423, 430, 431, 434, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "allclos": [399, 400, 415], "alleg": 439, "allow": [19, 29, 32, 42, 49, 53, 114, 119, 124, 126, 146, 151, 177, 206, 212, 239, 305, 327, 348, 349, 388, 389, 392, 393, 394, 397, 414, 415, 430, 431, 434, 436, 440, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 457], "allow_": [436, 445], "allow_extra": [114, 119, 124, 126, 204, 206, 212, 217, 349, 352, 419, 436], "allow_miss": [114, 119, 124, 126, 204, 206, 212, 217, 349, 352, 436], "allow_recommending_already_measur": [29, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 417, 427, 428, 433, 436, 442], "allow_recommending_already_recommend": [29, 417, 427, 428, 433, 436, 442], "allow_recommending_pending_experi": [29, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 436, 442], "allow_repeated_recommend": [180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 436], "almost": 393, "alon": [436, 439], "along": [366, 439, 448, 455], "alongsid": 439, "alpha": [161, 409, 420], "alphabet": [152, 436], "alreadi": [29, 212, 244, 246, 247, 254, 258, 272, 274, 276, 278, 414, 424, 434, 436, 440, 441, 442, 445, 450, 452, 453, 455, 457], "also": [55, 87, 151, 244, 246, 247, 254, 258, 272, 274, 276, 278, 305, 322, 324, 339, 340, 341, 392, 399, 400, 408, 409, 411, 412, 414, 419, 420, 423, 424, 426, 430, 431, 434, 436, 437, 440, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "alter": [414, 436, 442, 445], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 282, 366, 407, 414, 415, 422, 434, 436, 445, 453, 456, 457], "although": [414, 424, 427, 450, 452], "alwai": [14, 29, 38, 222, 223, 411, 414, 415, 434, 440, 442, 443, 452, 453, 455, 457], "ambigu": [146, 312, 313, 450], "amend": 443, "among": [32, 414, 434, 447, 455], "amount": [309, 369, 377, 415, 430, 431, 441, 446, 448, 457], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 65, 66, 67, 69, 70, 73, 78, 81, 82, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 115, 117, 119, 124, 126, 128, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 225, 227, 229, 233, 235, 237, 239, 244, 246, 247, 250, 254, 255, 258, 261, 272, 274, 276, 278, 280, 281, 288, 290, 296, 308, 312, 313, 320, 322, 324, 327, 333, 337, 346, 347, 348, 350, 354, 355, 356, 365, 368, 370, 376, 377, 392, 394, 395, 397, 404, 405, 407, 408, 411, 412, 415, 419, 422, 426, 427, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "analog": [206, 339, 450, 451], "analogi": [171, 449], "analysi": [434, 446, 453], "analyt": [3, 4, 7, 8, 73, 452, 455], "analyz": [434, 437, 446], "angl": 409, "ani": [12, 59, 60, 87, 120, 131, 132, 133, 135, 136, 138, 149, 151, 154, 155, 156, 222, 223, 227, 231, 232, 239, 272, 276, 278, 298, 299, 300, 305, 308, 321, 322, 324, 325, 327, 328, 343, 348, 355, 357, 365, 370, 384, 385, 386, 387, 389, 407, 414, 430, 431, 433, 434, 435, 436, 437, 439, 442, 444, 445, 448, 451, 452, 455], "annot": [324, 407, 439], "anonym": [434, 444], "anoth": [51, 356, 393, 403, 404, 411, 412, 414, 424, 437, 443, 455], "ansatz": 436, "answer": 442, "anti": 347, "anymor": [436, 455], "anyth": 329, "anywai": 453, "anywher": 399, "apach": [434, 439], "apart": [437, 442], "api": [434, 435, 451], "aplei": 446, "appar": 451, "appdata": 435, "appear": [322, 435, 436, 439, 451], "append": [409, 431], "appendix": 439, "appli": [29, 38, 39, 40, 55, 188, 206, 233, 235, 244, 246, 247, 254, 258, 272, 274, 276, 278, 322, 333, 341, 343, 379, 397, 398, 401, 402, 404, 405, 407, 408, 414, 430, 435, 436, 439, 443, 446, 447, 449, 450, 451, 452, 453, 454, 455], "applic": [370, 434, 437, 439, 448, 449, 452], "approach": [212, 408, 417, 434, 437, 440, 442, 445, 447, 449, 451, 453, 455], "appropri": [45, 46, 111, 212, 417, 437, 439, 445, 450], "approxim": [10, 19, 446], "ar": [6, 12, 13, 15, 29, 32, 36, 38, 39, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 74, 75, 76, 87, 114, 119, 120, 124, 126, 136, 149, 151, 156, 170, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 235, 237, 239, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 300, 302, 304, 305, 308, 309, 317, 318, 319, 321, 322, 324, 328, 329, 339, 340, 342, 343, 344, 348, 349, 368, 376, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 407, 408, 409, 412, 414, 415, 417, 419, 422, 423, 426, 427, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "arang": [399, 409, 448], "arbitrari": [177, 206, 357, 436, 443, 448, 449, 452, 455, 457], "arbitrarili": [447, 451], "architectur": [244, 246, 247, 254, 258, 272, 274, 276, 278, 285, 436, 453, 455], "ard_num_dim": [94, 95, 96, 99, 101, 103, 104, 105], "area": 409, "arg": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 98, 100, 102, 107, 108, 109, 159, 161, 162, 163, 164, 165, 166, 167, 170, 190, 248, 255, 260, 354, 437], "argu": 414, "argument": [66, 82, 87, 92, 149, 151, 157, 173, 175, 176, 177, 178, 204, 212, 248, 250, 324, 343, 347, 397, 412, 419, 436, 443, 446, 448, 449, 450, 451, 452, 455], "aris": [54, 414, 436, 439, 443, 451, 457], "arithmet": [122, 447], "arizona": 438, "arm": [243, 244, 432, 438], "arm_index": 417, "around": [12, 197, 239, 241, 419, 436, 449, 451, 457], "arr": [298, 299, 300, 366, 420], "arrai": [12, 120, 298, 299, 300, 311, 342, 351, 361, 365, 366, 376, 409, 436, 449, 453], "arrays_to_datafram": [399, 400, 409, 420, 423, 424, 430, 431, 436, 452], "arriv": [434, 445], "artifici": 457, "aryl": [392, 393, 394, 396, 434, 448], "ascend": 419, "ask": [414, 434, 436, 437, 442, 445], "aspect": [395, 399, 400, 424, 441, 444], "assembl": [414, 451, 453], "assembli": [453, 456], "assert": [60, 128, 348, 402, 403, 404, 405, 411, 412, 414, 415, 422, 426, 436, 439, 442, 443, 451, 453], "assess": 452, "assign": [339, 408, 415, 422, 448], "associ": [206, 417, 439, 442, 444, 447, 455], "assum": [24, 43, 253, 324, 348, 349, 392, 393, 394, 397, 399, 400, 402, 403, 404, 405, 411, 412, 414, 417, 419, 423, 424, 426, 434, 439, 443, 445, 448, 451, 453, 454, 457], "assumpt": 452, "assur": 443, "asynchron": [434, 442, 456], "atol": [399, 400], "atompair": 143, "atompairfingerprint": 143, "attach": [24, 324, 407, 408, 409, 439], "attempt": [72, 78, 253, 368, 417, 435, 436, 441, 443, 446, 449], "attent": 178, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 87, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 128, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 212, 244, 246, 247, 250, 254, 258, 261, 268, 270, 272, 274, 276, 278, 288, 290, 296, 322, 325, 355, 379, 387, 436], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 81, 84, 87, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 122, 124, 126, 131, 132, 133, 135, 136, 138, 140, 141, 143, 145, 146, 147, 149, 151, 154, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 207, 211, 212, 221, 225, 227, 244, 246, 247, 250, 254, 258, 261, 265, 268, 270, 272, 274, 276, 278, 285, 288, 289, 290, 293, 294, 296, 310, 313, 322, 337, 349, 355, 360, 375, 379, 380, 383, 384, 385, 386, 387, 422, 436, 437, 439, 449, 451, 453, 454], "audit": [434, 436, 437], "augment": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 206, 280, 281, 282, 436, 442], "author": 439, "authorship": 439, "auto": [12, 13, 15, 436, 438], "auto_tutori": 362, "autocorr": 143, "autocorrfingerprint": 143, "autodoc": 436, "automat": [29, 117, 188, 258, 391, 409, 423, 435, 436, 437, 446, 447, 449, 450, 453, 455, 456], "avail": [2, 122, 138, 140, 141, 143, 149, 176, 177, 235, 237, 265, 293, 294, 305, 375, 376, 377, 394, 396, 399, 400, 414, 419, 423, 424, 434, 435, 436, 437, 439, 441, 442, 444, 445, 446, 448, 449, 450, 451, 452, 455, 456], "available_acq_funct": 397, "avalon": 143, "avalonfingerprint": 143, "averag": [274, 408, 409, 431, 448, 452], "avoid": [206, 325, 366, 436, 437, 441, 442, 448, 450], "awai": [12, 454], "awar": [414, 430, 431, 436, 440, 445, 451], "ax": [87, 368, 391, 393, 408, 409, 420, 430, 431], "axes3d": [368, 409], "axi": [204, 235, 366, 391, 399, 400, 405, 408, 409, 414, 415, 417, 419, 420, 423, 424, 430, 431, 450], "azim": 409, "azur": 436, "b": [54, 167, 270, 308, 319, 346, 347, 393, 403, 412, 417, 427, 428, 433, 434, 437, 439, 442, 445, 448, 451], "b1": 309, "b2": 309, "back": [0, 426, 433, 436, 437, 445], "backend": 305, "background": [87, 91, 436, 446], "background_data": 87, "backport": 435, "backtest": [233, 234, 240, 392, 393, 394, 408, 429, 432, 434, 436, 449, 452], "backtick": 437, "backward": [110, 116, 189, 190, 206, 436], "bad": [419, 442, 444, 454], "bad_interv": 339, "badg": 436, "bai": 434, "baird": 438, "balanc": [119, 417, 434], "banana": 437, "bandit": [244, 397, 432, 434, 436, 438], "banner": 436, "bar": [87, 89, 411, 412, 414, 426, 427, 428, 434, 436, 446, 453], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 87, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 122, 124, 126, 131, 132, 133, 135, 136, 138, 140, 141, 142, 143, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 174, 175, 176, 177, 178, 180, 183, 186, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 206, 207, 211, 212, 225, 227, 229, 244, 246, 247, 248, 250, 253, 254, 258, 260, 261, 265, 268, 270, 272, 274, 276, 278, 282, 284, 288, 290, 293, 294, 296, 311, 313, 314, 316, 317, 318, 342, 347, 355, 368, 375, 376, 379, 391, 396, 397, 408, 409, 411, 413, 417, 432, 434, 436, 439, 440, 442, 443, 444, 446, 448, 449, 450, 451, 453], "base1": 415, "base2": 415, "base_data": 408, "base_kernel": [107, 108, 109], "base_nam": [368, 391, 393, 408, 409, 430, 431], "base_predictor": 280, "base_smil": 408, "basefingerprinttransform": 332, "baselin": [391, 393, 430, 434, 448], "basesequentialmetarecommend": [176, 177], "bashrc": 444, "basi": [103, 434, 439, 446], "basic": [94, 98, 99, 100, 101, 102, 103, 104, 105, 161, 162, 163, 164, 165, 166, 167, 235, 311, 313, 314, 392, 393, 394, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 419, 423, 424, 425, 426, 429, 432, 436, 437, 445, 447, 448, 452, 456], "basic_transfer_learn": 431, "basickernel": [98, 99, 100, 101, 102, 103, 104, 105, 436], "batch": [29, 170, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 238, 280, 281, 397, 402, 403, 404, 405, 409, 419, 423, 424, 426, 430, 431, 436, 441, 445, 449, 452], "batch_quant": 436, "batch_shap": [94, 95, 96, 99, 101, 103, 104, 105], "batch_siz": [29, 42, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 235, 239, 241, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 407, 408, 409, 411, 412, 415, 417, 419, 420, 423, 424, 426, 427, 430, 431, 434, 436, 441, 442, 444, 445, 452], "batchnr": 419, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 87, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 122, 124, 126, 131, 132, 133, 135, 136, 138, 140, 141, 142, 143, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 207, 211, 212, 229, 244, 246, 247, 248, 250, 254, 258, 260, 261, 265, 268, 270, 272, 274, 276, 278, 288, 290, 293, 294, 296, 311, 313, 314, 355, 375, 379, 390, 391, 392, 393, 394, 395, 397, 399, 400, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 435, 436, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "baybe_cach": 444, "baybe_cache_dir": [436, 444], "baybe_deactivate_polar": [436, 444], "baybe_debug_fake_hosthash": 436, "baybe_debug_fake_userhash": 436, "baybe_numpy_use_single_precis": [363, 436, 444], "baybe_telemetry_en": [434, 444], "baybe_telemetry_endpoint": [436, 444], "baybe_telemetry_host": 436, "baybe_telemetry_hostnam": [436, 444], "baybe_telemetry_usernam": [436, 444], "baybe_telemetry_vpn_check": [436, 444], "baybe_telemetry_vpn_check_timeout": [436, 444], "baybe_torch_use_single_precis": [382, 436, 444], "bayesian": [0, 180, 186, 188, 233, 235, 239, 241, 253, 272, 417, 436, 440, 442, 446, 453, 456], "bayesian_recommend": 409, "bayesianlinearmodel": 412, "bayesianlinearsurrog": [397, 453], "bayesianrecommend": [180, 188, 253, 436, 449], "bayesianridg": 411, "bcut2d": [143, 436], "bcut2dfingerprint": 143, "bcw07": 455, "becaus": [76, 146, 206, 212, 241, 328, 407, 408, 414, 431, 437, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 455], "becom": [206, 414, 436, 440, 442, 443, 451, 454, 457], "been": [24, 72, 73, 176, 244, 246, 247, 254, 258, 272, 274, 276, 278, 348, 392, 393, 434, 435, 436, 439, 441, 442, 447, 449, 455], "beeswarm": [87, 89, 446], "befor": [72, 178, 235, 244, 246, 247, 254, 258, 272, 274, 276, 278, 324, 391, 394, 397, 403, 408, 434, 436, 437, 444, 445, 448, 450], "begin": [176, 402, 404, 422, 426, 449, 453], "behalf": 439, "behav": [409, 426, 451], "behavior": [188, 434, 436, 444, 447, 449, 450, 455], "behind": [447, 451, 452, 453, 454], "being": [12, 109, 339, 368, 417, 435, 436, 443, 444, 448, 450], "bell": [294, 298, 419, 454], "belong": [407, 451], "below": [178, 282, 300, 404, 407, 408, 414, 437, 439, 440, 442, 443, 447, 451, 453, 454, 455], "benchmark": [434, 436, 438], "benefici": [439, 440, 444], "benefit": [443, 455], "benzo": 455, "bernoulli": [244, 416, 432, 438], "besid": [434, 447, 454], "best": [12, 13, 15, 235, 237, 239, 394, 417, 434, 444, 449], "bet": 442, "beta": [8, 20, 161, 244, 397, 436, 440], "betabernoullimultiarmedbanditsurrog": [397, 417, 436], "betaprior": [244, 436], "better": [10, 339, 393, 436, 442, 443, 445, 447, 448], "between": [12, 32, 51, 146, 177, 204, 212, 268, 347, 407, 409, 414, 417, 419, 420, 424, 430, 431, 434, 436, 437, 441, 442, 443, 444, 447, 448, 449, 450, 451, 454, 455], "beyond": [434, 446], "bias": 448, "bin": 414, "binar": 436, "binari": [290, 389, 426, 434, 435, 436, 451], "binarytarget": [291, 417, 436], "bind": [407, 409, 439], "bit": [436, 448], "black": [233, 452, 455], "blackbox": [390, 391, 432], "blank": 437, "blob": 270, "block": [408, 414, 434, 435, 436, 444, 451], "blue": 420, "bodi": 407, "bonilla": 455, "bool": [6, 12, 13, 15, 24, 29, 32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 87, 90, 91, 114, 119, 120, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 217, 244, 246, 247, 254, 258, 272, 274, 276, 278, 290, 291, 298, 299, 300, 303, 317, 318, 322, 323, 328, 329, 342, 347, 349, 352, 355, 365, 370, 388, 417], "boolean": [12, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 87, 91, 131, 132, 133, 135, 136, 138, 145, 146, 149, 173, 175, 176, 177, 178, 349, 442, 444], "boost": [276, 431], "both": [10, 12, 151, 206, 212, 241, 300, 324, 391, 403, 408, 411, 414, 415, 417, 419, 420, 430, 431, 434, 437, 440, 443, 446, 448, 450, 451, 453, 454, 457], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 43, 180, 188, 190, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 399, 400, 409, 424, 430, 431, 436, 444, 449], "botorch_acqf": [24, 408, 409], "botorch_function_wrapp": 436, "botorchrecommend": [180, 190, 397, 402, 403, 404, 405, 408, 409, 411, 412, 417, 419, 424, 426, 427, 428, 434, 436, 441, 442, 445, 449], "bottom": 442, "bound": [8, 20, 32, 145, 151, 167, 204, 206, 212, 217, 281, 296, 297, 318, 324, 349, 355, 356, 391, 397, 399, 400, 409, 415, 419, 420, 422, 423, 424, 430, 431, 436, 448, 451, 454, 456, 457], "boundari": [212, 298, 299, 419], "boundary_onli": [212, 414], "bounded": 436, "bounds_transform_func": 436, "box": [167, 233, 452, 455], "brain": [452, 455], "branch": [434, 437], "break": [253, 451], "brettpho": [392, 393, 394, 396, 397], "briefli": [452, 455], "bring": [434, 436], "bro": 270, "broad": 451, "brute": [188, 449], "bu": [392, 393, 394, 396, 397], "bucket": 414, "budget": 442, "bug": [436, 437], "build": [204, 212, 253, 408, 414, 435, 436, 437, 443, 446, 451, 453, 455, 456, 457], "built": [212, 411, 434, 437, 442, 449, 453], "builtin": 314, "bump": 436, "button": 436, "butyl": [392, 393, 394, 396, 397], "butylphenylphosphin": [392, 393, 394, 396, 397], "butyornitril": [392, 393, 394, 396, 397], "bypass": [151, 408, 453], "byte": [12, 120, 211, 254, 298, 299, 300, 359, 365, 436, 457], "c": [54, 308, 319, 392, 393, 394, 396, 397, 402, 403, 404, 405, 412, 414, 427, 428, 434, 435, 439, 442, 445, 448, 450, 451], "c1": [392, 393, 394, 396, 397, 402, 403, 404, 405, 448], "c1c2": [392, 393, 394, 396, 397], "c1ccccc1": [392, 393, 394, 402, 404], "c1ccoc1": 443, "c2": [392, 393, 394, 396, 397, 402, 404, 405], "c2ccccc2": [392, 393, 394], "c2oc": [392, 393, 394, 396, 397], "c2p": [392, 393, 394, 396, 397], "c3": [392, 393, 394, 396, 397, 402, 404], "c3c": [392, 393, 394], "c3ccccc3": [392, 393, 394, 396, 397], "c4": [392, 393, 394, 402, 404], "c4ccccc4": [392, 393, 394, 396, 397], "c5": [402, 404], "c6": [402, 404], "c_": 420, "c_g2_min": 415, "c_g3_max": 415, "c_i": 443, "c_total_sum": 415, "cach": [304, 436, 451, 456], "cached_recommend": 304, "calcul": [304, 366, 399, 409, 430, 444, 448, 450], "calibr": 455, "call": [43, 82, 173, 175, 176, 177, 178, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 304, 305, 324, 342, 392, 393, 394, 407, 412, 414, 415, 427, 428, 434, 435, 436, 440, 442, 443, 444, 448, 451, 452, 453, 455, 456], "callabl": [50, 66, 81, 151, 225, 233, 235, 237, 239, 241, 280, 281, 284, 285, 314, 320, 322, 324, 342, 391, 407, 420, 436, 456], "callable_": 322, "campaign": [87, 235, 238, 239, 241, 339, 341, 343, 395, 396, 404, 406, 409, 417, 428, 430, 431, 432, 433, 434, 436, 440, 441, 443, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457], "campaign1": 452, "campaign2": 452, "campaign_json": 442, "campaign_oh": 393, "campaign_par": 420, "campaign_rand": [392, 393, 394], "campaign_recr": 426, "campaign_stop": 408, "campaign_with_hook": 408, "campaign_y0": 420, "campaign_y1": 420, "campaignstoppedexcept": 408, "can": [14, 19, 24, 29, 32, 38, 39, 40, 54, 87, 132, 138, 146, 149, 170, 177, 180, 181, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 233, 237, 244, 246, 247, 248, 250, 253, 254, 258, 272, 274, 276, 278, 282, 291, 303, 305, 322, 324, 328, 339, 341, 342, 362, 391, 392, 393, 394, 397, 398, 401, 402, 403, 404, 407, 408, 409, 411, 412, 414, 415, 417, 419, 420, 422, 423, 424, 427, 430, 431, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "canada": 438, "candid": [12, 13, 15, 29, 198, 200, 204, 212, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 408, 431, 436, 440, 449, 450, 456], "candidates_comp_rep": 408, "cannot": [14, 80, 81, 253, 254, 282, 329, 368, 417, 436, 439, 441, 443, 444, 448, 449, 451, 453, 455], "canon": [331, 451], "capabl": [390, 416, 418, 425, 429, 431, 436, 438, 442, 447, 453, 455], "captur": 448, "cardin": [32, 42, 49, 59, 60, 204, 436, 438], "cardinalityconstraint": [42, 49, 436], "care": [47, 414, 437, 443, 446, 447, 453], "carefulli": 444, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 73, 239, 391, 393, 394, 408, 417, 430, 431, 436, 441, 452], "carri": [324, 407, 439, 447], "cartesian": [206, 212, 213, 214, 434, 436, 445, 450], "case": [177, 241, 282, 324, 339, 350, 408, 413, 414, 423, 424, 427, 434, 435, 437, 440, 441, 442, 443, 444, 445, 448, 451, 452, 453, 454, 455, 457], "cast": [43, 436], "cat": 347, "cat_1": 419, "cat_1_22": 419, "cat_1_33": 419, "cat_2": 419, "catch_constant_target": 436, "categor": [29, 135, 136, 140, 212, 219, 348, 434, 436, 445, 448, 450, 454], "categori": [393, 408, 434, 436, 451, 454], "categorical_1": [419, 442], "categorical_2": [419, 442], "categorical_paramet": 451, "categorical_parameter_json": 451, "categorical_parameter_reconstruct": 451, "categoricalencod": [135, 136, 402, 403, 404, 405, 419, 426], "categoricalparamet": [136, 212, 393, 402, 403, 404, 405, 412, 417, 419, 426, 427, 428, 434, 436, 445, 446, 450, 451, 456], "cattr": [224, 225, 227, 428, 435, 436, 437], "cauchi": 163, "caus": [146, 308, 314, 436, 439], "caution": 455, "cc": [392, 393, 394, 396, 397, 402, 404, 405, 414, 448, 455], "cc1": [392, 393, 394, 396, 397, 448], "ccc": [402, 404, 412, 434], "cccc": [392, 393, 394, 396, 397, 402, 404], "ccccc": [402, 404, 427, 428], "cccccc": [402, 404], "cccccccco": [443, 448], "ccccoc": [392, 393, 394, 396, 397], "cco": 414, "ccoccoccn": [427, 428], "cdot": [443, 447], "ceil": 408, "cell": [411, 448, 452, 455], "cell_lin": 455, "center": [298, 300, 355, 419, 420, 442], "center_y0": 420, "center_y1": 420, "central": [436, 442], "certain": [29, 51, 81, 178, 225, 227, 233, 305, 321, 339, 369, 403, 408, 417, 434, 437, 443, 445, 446, 449, 451, 455, 457], "cesium": [392, 393, 394, 396, 397], "ch": 369, "chai": 455, "chain": [36, 173, 175, 176, 177, 178, 314, 443], "challeng": [437, 451], "chanc": 435, "chang": [51, 176, 339, 340, 341, 397, 414, 423, 434, 435, 437, 439, 442, 444, 446, 448, 450, 455], "charact": 439, "characterist": 314, "charg": 439, "check": [29, 131, 132, 133, 135, 136, 138, 145, 146, 149, 304, 321, 323, 326, 327, 328, 329, 348, 355, 364, 423, 424, 426, 434, 436, 437, 444, 446, 450, 451], "checker": 436, "checkout": 437, "chem": [434, 436, 448], "chemic": [333, 393, 396, 414, 436, 438, 443, 446, 448, 455], "cheminformat": [149, 434, 436], "chemistri": [138, 402, 404, 405], "child": [195, 196, 197, 198, 437], "chocol": 437, "choic": [235, 237, 376, 407, 414, 417, 424, 436, 443, 445, 447, 448, 449, 450, 451, 454], "choos": [171, 414, 415, 417, 419, 422, 423, 424, 433, 434, 439, 440, 442, 449, 453, 454], "chose": [423, 451], "chosen": [70, 180, 235, 237, 241, 372, 373, 397, 417, 436, 440, 443, 448, 450], "christoph": 455, "ci": [400, 430, 431, 436, 437], "circular": 448, "circumv": [435, 451], "cl": [47, 117, 222, 226, 282, 317, 318, 323, 328, 357], "claim": 439, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 80, 84, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 118, 119, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 225, 227, 228, 229, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 310, 311, 313, 314, 316, 317, 318, 323, 328, 332, 353, 355, 370, 374, 375, 378, 379, 397, 407, 408, 411, 417, 427, 436, 442, 443, 446, 447, 448, 449, 450, 451, 453], "classic": [417, 447], "classifi": 448, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 87, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 204, 206, 212, 229, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 314, 355, 436], "classvalidationerror": [428, 435], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 244, 246, 247, 254, 258, 272, 274, 276, 278], "clean": [344, 345, 346, 435, 436, 437], "clear": [362, 455], "click": [417, 448], "clone": 437, "close": [235, 241, 293, 391, 408, 430, 431, 452], "closer": [12, 364, 448], "closest": 365, "closest_el": 436, "closur": [233, 452], "cluster": [195, 196, 197, 198, 397, 436, 438, 456], "clustering_x": 436, "cmap": 409, "cn": [392, 393, 394, 396, 397], "co": 414, "co1": [392, 393, 394], "co2": [392, 393, 394], "co3": [392, 393, 394], "coars": [412, 426, 427, 428, 434], "coc": [412, 427, 428, 434], "cococ": [427, 428], "code": [253, 393, 412, 417, 423, 427, 428, 434, 435, 436, 439, 443, 444, 448, 452, 455, 457], "coeffici": [43, 45, 46, 399, 400, 415, 443], "coerc": 436, "collect": [29, 59, 60, 97, 107, 108, 128, 151, 152, 160, 176, 178, 204, 212, 218, 219, 230, 237, 250, 306, 308, 310, 321, 322, 349, 374, 376, 391, 397, 409, 414, 417, 420, 430, 431, 434, 436, 442, 444], "color": [409, 420], "column": [38, 39, 40, 87, 114, 119, 120, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 235, 237, 239, 241, 308, 309, 340, 342, 344, 345, 346, 347, 348, 349, 350, 352, 379, 388, 389, 393, 396, 402, 403, 404, 405, 408, 414, 419, 420, 426, 430, 431, 436, 442, 450, 451, 452], "column_group": 309, "com": [270, 325, 346, 434, 436], "comb": 414, "combin": [52, 151, 206, 212, 213, 214, 314, 333, 392, 393, 394, 402, 404, 407, 408, 414, 419, 434, 435, 439, 443, 445, 446, 447, 449, 450, 452, 455, 457], "combinatori": 457, "combine_func": 111, "come": [12, 417, 434, 442, 446, 451, 455, 457], "command": 435, "comment": 436, "commerci": 439, "commit": [434, 436, 437], "common": [160, 411, 415, 436, 437, 439, 442, 443, 448, 451], "commonli": 447, "commun": [439, 447, 455], "comp_df": [132, 135, 136, 138, 146, 149, 436], "comp_rep": [212, 409, 411, 436, 450], "comp_rep_bound": [204, 206, 212, 436], "comp_rep_byt": [211, 457], "comp_rep_column": [131, 132, 133, 135, 136, 138, 145, 146, 149, 204, 206, 212, 436], "comp_rep_human_read": [211, 457], "comp_rep_shap": [211, 457], "comp_rep_tensor": [408, 409], "compar": [151, 176, 391, 414, 415, 417, 420, 430, 434, 436, 437, 445, 448, 454], "comparison": [408, 420, 430, 431, 449, 451], "compat": [110, 116, 128, 151, 180, 183, 186, 188, 189, 190, 193, 195, 196, 197, 198, 200, 201, 206, 207, 237, 244, 246, 247, 254, 258, 272, 274, 276, 278, 324, 349, 387, 397, 402, 403, 404, 405, 407, 409, 419, 426, 436, 449, 453], "compens": 436, "compil": [435, 439], "complain": 437, "complaint": 437, "complement": [29, 347, 445], "complet": [409, 414, 441, 443, 445, 447, 451], "complex": [12, 120, 298, 299, 300, 365, 414, 426, 430, 431, 437, 440, 441, 443, 445, 452, 455], "compli": 439, "complianc": 434, "complic": [414, 455], "compon": [64, 414, 415, 437, 440, 442, 443, 444, 445, 451, 453, 455], "compos": [106, 250, 436, 451], "composit": [95, 107, 108, 109, 250, 456], "composite_a": 453, "composite_b": 453, "compositekernel": [107, 108, 109, 436], "compositesurrog": [244, 246, 247, 254, 258, 272, 274, 276, 278, 436, 453], "compound": 333, "comprehens": [434, 453], "compress": 451, "comput": [12, 24, 29, 77, 87, 91, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 204, 206, 211, 212, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 282, 288, 290, 296, 334, 366, 402, 403, 404, 405, 407, 414, 415, 419, 420, 426, 436, 439, 440, 442, 444, 448, 450, 451, 452, 456, 457], "computation": 188, "compute_ref_point": 12, "concat": [399, 400, 408, 409, 419, 420, 423, 424, 430, 431], "concentr": [161, 162, 392, 393, 394, 396, 397, 402, 407, 408, 443], "concentrati": 402, "concentration_valu": 408, "concept": [308, 414, 447, 448, 451], "concis": 436, "concret": [436, 451], "conda": 436, "condit": [32, 33, 34, 35, 36, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 339, 347, 393, 399, 403, 404, 405, 414, 420, 434, 436, 439, 455, 456], "conduct": [29, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 239, 244, 246, 247, 254, 258, 272, 274, 276, 278, 392, 393, 394, 434, 437, 442, 455], "confid": [8, 20, 397], "config": [411, 412, 425, 432, 436, 456], "config_json": 29, "configur": [12, 29, 36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 75, 76, 170, 177, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 233, 235, 241, 244, 246, 247, 248, 250, 254, 258, 264, 272, 274, 276, 278, 339, 368, 376, 395, 396, 414, 421, 424, 428, 434, 435, 436, 439, 440, 441, 442, 443, 444, 448, 449, 450, 452, 454, 455, 456, 457], "confirm": 409, "conflict": [434, 437, 447], "conform": [149, 334, 448], "confront": [417, 434, 445], "conjunct": 453, "connect": [55, 339, 436, 444, 448, 454], "consequ": [394, 435, 443, 444, 449, 450, 452, 453], "consequenti": 439, "consid": [29, 32, 33, 34, 35, 36, 39, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 119, 136, 176, 206, 239, 339, 348, 349, 391, 414, 417, 419, 430, 431, 434, 436, 437, 441, 443, 445, 446, 447, 448, 451, 457], "consider": [206, 441], "consist": [171, 211, 409, 437, 439, 446], "consol": 435, "consolid": [436, 449], "consortium": 438, "conspicu": 439, "constant": [274, 282, 299, 419, 436, 437, 448, 450], "constitut": 439, "constrain": [436, 443, 454, 455], "constraint": [29, 32, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 133, 204, 206, 212, 311, 411, 412, 419, 426, 427, 428, 432, 434, 436, 438, 444, 448, 456], "constraint_1": 404, "constraint_2": 404, "constraint_3": 404, "constraints_augment": 206, "constraints_cardin": 204, "constraints_lin_eq": 204, "constraints_lin_ineq": 204, "constraints_nonlin": 204, "constru": 439, "construct": [29, 204, 206, 212, 254, 284, 391, 420, 422, 430, 431, 434, 436, 440, 446, 451, 453, 456], "constructor": [195, 196, 197, 198, 206, 226, 272, 276, 278, 414, 422, 427, 428, 436, 440, 442, 445, 447, 448, 453, 456, 457], "consult": 434, "consum": [176, 407], "consumpt": 444, "cont_ind": 424, "cont_indic": [423, 424], "cont_paramet": 424, "cont_recommend": [180, 424], "contact": [434, 438], "contain": [12, 29, 32, 38, 39, 40, 60, 63, 68, 87, 114, 119, 120, 124, 126, 128, 132, 135, 136, 138, 146, 149, 151, 155, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 213, 214, 218, 233, 235, 237, 239, 244, 246, 247, 254, 258, 272, 274, 276, 278, 288, 290, 296, 298, 299, 300, 308, 309, 324, 334, 339, 341, 347, 348, 355, 366, 368, 370, 376, 388, 389, 393, 394, 408, 409, 415, 417, 424, 430, 431, 435, 436, 437, 439, 442, 443, 445, 446, 449, 450, 451, 452, 457], "content": [151, 176, 206, 237, 340, 377, 436, 439, 451], "context": [173, 175, 176, 177, 178, 233, 248, 250, 373, 407, 417, 422, 430, 431, 436, 442, 445, 446, 448, 451, 452, 453, 455, 457], "contextu": 455, "continu": [10, 14, 24, 29, 32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 68, 131, 132, 133, 135, 136, 138, 145, 146, 149, 180, 188, 204, 206, 207, 212, 213, 214, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 397, 399, 402, 403, 404, 405, 415, 419, 420, 421, 424, 426, 432, 434, 436, 442, 444, 445, 449, 451, 452, 456], "continuous_subspac": 450, "continuouscardinalityconstraint": [59, 204, 436], "continuousconstraint": [35, 43, 204, 436, 443, 445], "continuouslinearconstraint": [204, 399, 400, 415, 436, 456], "continuouslinearequalityconstraint": 436, "continuouslinearinequalityconstraint": 436, "continuousnonlinearconstraint": [42, 204, 436], "continuousparamet": [145, 204, 436], "contour": 420, "contract": 439, "contrast": [212, 328, 415, 417, 441, 445, 447], "contribut": [434, 436, 439, 457], "contributor": [434, 439], "contributori": 439, "control": [12, 14, 19, 151, 161, 188, 204, 212, 349, 419, 423, 434, 436, 439, 440, 444, 447, 448, 449, 454, 456], "convei": 451, "conveni": [436, 450, 451, 453], "convent": 206, "converg": 446, "convers": [29, 177, 411, 422, 436, 439, 446, 453, 456], "convert": [26, 115, 208, 221, 315, 325, 329, 333, 336, 337, 350, 351, 356, 359, 362, 412, 427, 428, 436, 442, 444, 451, 452], "convert_sklearn": 411, "convert_sklearn_bayesian_ridg": 411, "convertibletofloat": [12, 315], "cooki": 437, "coordin": [12, 376], "copi": [244, 246, 247, 254, 258, 272, 274, 276, 278, 408, 434, 436, 439, 457], "copyright": [434, 439], "core": [29, 204, 206, 207, 212, 239, 241, 244, 246, 247, 248, 250, 254, 258, 265, 272, 274, 276, 278, 397, 434, 436, 445, 454], "coregion": 455, "coretest": [436, 437], "corpu": 448, "correct": [29, 285, 409, 434, 436, 437, 451], "correctli": [414, 424, 436], "correl": [138, 149, 346, 448, 455], "correspond": [24, 29, 42, 114, 119, 124, 126, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 225, 233, 235, 237, 244, 246, 247, 254, 258, 272, 274, 276, 278, 298, 304, 324, 327, 329, 332, 333, 339, 342, 343, 349, 350, 352, 388, 389, 391, 396, 397, 414, 417, 420, 424, 430, 431, 434, 436, 437, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "correspondingli": 29, "corrupt": 341, "cost": [393, 417], "costli": [206, 209, 215, 442], "could": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 146, 336, 397, 407, 408, 414, 415, 431, 436, 441, 443, 448, 452, 454, 455], "count": [305, 408, 414, 443], "counterclaim": 439, "counterpart": [324, 450], "coupl": 409, "cours": [430, 431, 437, 451, 455], "cov": [436, 437], "cover": [328, 339, 445], "coverag": [436, 437], "cp": [392, 393, 394], "craft": 452, "crash": [435, 436], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 87, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 204, 206, 212, 213, 214, 229, 237, 244, 246, 247, 248, 250, 254, 258, 261, 266, 272, 274, 276, 278, 288, 290, 296, 339, 342, 343, 355, 368, 370, 376, 396, 407, 408, 409, 414, 415, 420, 424, 425, 432, 433, 434, 435, 436, 437, 443, 444, 445, 446, 451, 452, 453, 454, 456, 457], "create_example_plot": [391, 393, 408, 409, 430, 431], "create_from_config": [411, 412], "create_pi_plot": 409, "creation": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 151, 209, 212, 215, 403, 405, 411, 412, 450, 451, 456], "criteria": 409, "criterion": [408, 440], "critic": 436, "cross": [430, 439], "crucial": [434, 454], "cube": 443, "cuda": 435, "cultur": [448, 455], "curran": 455, "current": [10, 29, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 239, 241, 253, 303, 362, 408, 409, 414, 440, 442, 443, 444, 445, 448, 452, 454, 455, 457], "curv": [298, 409, 419, 443, 454], "custom": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 131, 132, 133, 135, 136, 138, 141, 145, 146, 149, 151, 254, 285, 288, 290, 296, 324, 350, 390, 397, 401, 408, 417, 424, 432, 434, 436, 443, 448, 449, 452, 455, 456, 457], "custom_blackbox": 391, "custom_conversion_funct": 411, "custom_filt": 443, "custom_funct": 402, "customari": 439, "customconstraint": 402, "customdiscreteparamet": [436, 446, 456], "customencod": 138, "customonnxsurrog": [397, 411, 436], "cycl": [176, 434, 436, 445], "cyclic": 176, "d": [12, 24, 54, 120, 308, 319, 366, 376, 409, 412, 427, 428, 430, 431, 434, 439, 450, 455], "d401": 402, "damag": 439, "daniel": 438, "darmstadt": [434, 438, 444], "dashboard": 436, "data": [12, 14, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 67, 79, 87, 91, 119, 124, 126, 138, 146, 149, 170, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 235, 239, 241, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 290, 296, 305, 307, 311, 339, 341, 348, 361, 362, 377, 381, 388, 389, 390, 391, 396, 397, 399, 400, 402, 403, 404, 405, 408, 412, 414, 419, 420, 423, 426, 427, 428, 430, 431, 432, 433, 434, 436, 440, 441, 442, 443, 444, 446, 448, 449, 451, 452, 453, 456, 457], "data_typ": 411, "databas": [29, 419, 434, 451], "dataclass": [407, 417], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 87, 91, 114, 119, 124, 126, 132, 135, 136, 138, 146, 149, 151, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 212, 213, 214, 217, 231, 232, 235, 237, 239, 241, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 290, 296, 304, 308, 309, 333, 334, 377, 388, 389, 391, 392, 396, 397, 402, 403, 404, 405, 408, 409, 411, 412, 414, 415, 419, 420, 423, 426, 430, 431, 436, 441, 442, 443, 445, 448, 456, 457], "datapoint": 436, "dataset": [176, 233, 452], "datatyp": 436, "date": 439, "dditiv": 446, "de": [224, 425, 434, 435, 436, 437, 442, 443, 449, 456], "deactiv": [434, 436, 444], "deal": [394, 441, 448, 452], "debug": 436, "decid": [146, 414, 417, 424, 440], "declar": [51, 55, 60, 198, 403, 437, 443], "decod": 411, "decor": [109, 282, 314, 342, 407, 436, 437, 452], "decorrel": [138, 149, 154, 427, 428, 448], "decreas": [176, 299, 419, 451, 455], "deduc": [399, 400, 423], "dedupl": 436, "deep": 408, "deepcopi": 436, "deeper": 446, "deepli": 453, "def": [391, 402, 407, 408, 409, 414, 417, 420, 430, 437, 443, 452], "default": [12, 40, 87, 119, 136, 138, 149, 151, 180, 186, 188, 195, 196, 197, 198, 204, 206, 212, 224, 244, 265, 268, 347, 391, 392, 394, 397, 412, 419, 424, 434, 436, 437, 442, 444, 446, 447, 448, 456], "default_campaign": 391, "default_model": 254, "defaultkernelfactori": [397, 402, 403, 404, 405, 419, 426], "defaultscal": 436, "defend": 439, "defin": [24, 29, 39, 43, 50, 141, 170, 176, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 212, 233, 258, 260, 261, 285, 341, 346, 347, 379, 392, 393, 394, 396, 402, 403, 404, 405, 411, 412, 417, 422, 436, 437, 439, 442, 443, 445, 448, 451, 452, 454], "definit": [204, 212, 328, 415, 420, 434, 436, 439, 447, 450], "degener": [340, 355, 436], "degr": 426, "degre": 451, "degree_c": [411, 412, 426], "deliber": 439, "delici": 437, "deliveri": 448, "demand": [29, 431], "demo": 436, "demonstr": [390, 391, 392, 395, 398, 401, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 421, 425, 426, 429, 430, 431, 436, 447, 450, 451, 455], "denot": 24, "densiti": 409, "depend": [51, 55, 78, 111, 206, 212, 233, 299, 308, 393, 397, 401, 414, 415, 422, 432, 433, 435, 436, 437, 443, 444, 445, 446, 450, 452, 453, 454, 455, 457], "dependenciesconstraint": 436, "deprec": [62, 143, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 212, 217, 255, 314, 402, 404, 405], "deprecationwarn": [402, 404, 405, 408], "depth": 450, "deriv": [195, 196, 197, 198, 212, 328, 439, 443, 450], "descend": 299, "describ": [136, 195, 196, 197, 198, 244, 246, 247, 254, 258, 272, 274, 276, 278, 397, 402, 407, 408, 415, 417, 419, 420, 437, 439, 441, 442, 443, 447, 448, 451, 452], "descript": 437, "descriptor": [149, 334, 436, 446, 448, 455], "deseri": [222, 226, 231, 426, 435, 436, 442, 456], "deserialize_datafram": 451, "design": [0, 19, 24, 235, 342, 407, 411, 414, 417, 439, 440, 445, 446, 447, 449, 451], "desir": [111, 119, 122, 343, 418, 419, 432, 434, 436, 440, 442, 444, 446, 447, 449, 451, 454, 457], "desirabilityobject": [29, 419, 434, 436, 451, 453, 456], "desktop": 436, "despit": 436, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 87, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 157, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 212, 235, 239, 244, 246, 247, 248, 250, 254, 258, 261, 268, 270, 272, 274, 276, 278, 288, 290, 296, 301, 302, 347, 352, 355, 379, 392, 394, 399, 400, 419, 424, 433, 434, 435, 436, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455], "detect": [311, 348, 435, 437], "determin": [12, 29, 87, 117, 178, 212, 328, 347, 359, 364, 376, 392, 414, 417, 439, 444, 449], "determinist": 376, "detriment": 448, "dev": [434, 436, 437], "develop": [434, 436, 441, 448, 452], "deviat": [6, 16, 282, 348, 411, 436], "df": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 114, 119, 124, 126, 151, 204, 206, 212, 217, 232, 237, 308, 309, 333, 340, 344, 345, 346, 347, 349, 350, 352, 377, 391, 402, 417, 434, 443, 450, 451, 452], "df_y": 420, "dfa": [308, 309], "di": [392, 393, 394, 396, 397, 438], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 117, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 195, 196, 197, 198, 204, 206, 209, 212, 215, 225, 226, 227, 229, 239, 244, 246, 247, 250, 251, 252, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 302, 319, 322, 334, 339, 355, 379, 408, 411, 430, 431, 436], "dict_bas": [392, 393, 394, 396, 397], "dict_ligand": [392, 393, 394, 396, 397], "dict_solv": [392, 393, 394, 396, 397, 402, 403, 404, 405, 414, 443], "dictat": [114, 119, 124, 126, 206, 430, 431], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 204, 206, 212, 225, 227, 229, 239, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 282, 288, 290, 296, 319, 322, 339, 355, 392, 393, 394, 396, 448, 452], "diff": 437, "differ": [12, 53, 119, 188, 204, 206, 207, 212, 233, 241, 304, 309, 339, 341, 379, 393, 402, 407, 414, 417, 419, 420, 423, 424, 430, 431, 434, 436, 437, 439, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455], "differenti": [452, 455], "difficult": 455, "digit": 350, "dilemma": 417, "dim": [24, 399, 400, 409, 411, 423, 424, 430, 431], "dimens": [24, 376, 391, 399, 400, 409, 411, 422, 423, 430, 431, 436, 448, 450, 453, 455], "dimension": [12, 120, 131, 132, 133, 135, 136, 138, 145, 146, 149, 268, 342, 376, 391, 430, 431, 436], "dimethylisoxazol": 455, "direct": [12, 392, 393, 394, 396, 434, 436, 439, 445, 448, 457], "directli": [12, 328, 431, 434, 436, 443, 447, 451, 453], "directori": [368, 424, 436], "disabl": [244, 246, 247, 254, 258, 272, 274, 276, 278, 303, 402, 404, 405, 436, 442, 445], "disadvantag": 451, "disappear": 436, "disc_ind": 424, "disc_indic": [423, 424], "disc_paramet": 424, "disc_recommend": [180, 424], "discard": [8, 414], "disclaim": 439, "discourag": 442, "discret": [14, 24, 29, 32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 68, 131, 132, 133, 135, 136, 138, 145, 146, 149, 180, 188, 195, 196, 197, 198, 200, 204, 206, 207, 211, 212, 241, 375, 396, 399, 405, 408, 409, 411, 419, 421, 424, 426, 431, 432, 434, 436, 440, 445, 446, 449, 451, 452, 456, 457], "discrete_param": [409, 430, 431], "discrete_spac": [399, 400, 424], "discrete_subspac": 450, "discretecardinalityconstraint": 436, "discreteconstraint": [29, 49, 50, 51, 52, 53, 54, 55, 56, 57, 212, 436, 443, 445], "discretecust": 402, "discretecustomconstraint": [402, 436, 456], "discretedep": 403, "discretedependenciesconstraint": [55, 60, 403, 414, 456], "discreteexcl": 404, "discreteexcludeconstraint": [404, 436, 445, 456], "discretelinkedparametersconstraint": [436, 456], "discretenolabelduplicatesconstraint": [55, 414, 436, 456], "discreteparamet": [135, 138, 146, 149, 212, 436], "discretepermutationinvarianceconstraint": [414, 456], "discreteprod": 405, "discreteproductconstraint": [405, 436, 456], "discretesamplingmethod": [14, 188, 377, 436, 440], "discretesumc": 405, "discretesumconstraint": [399, 405, 414, 436, 456], "discuss": [419, 439, 443, 450, 452], "disjoint": 212, "disk": [436, 456], "dispatch": 110, "displai": [350, 408, 439], "distanc": [146, 376], "distinct": [407, 442, 449], "distinguish": [340, 414, 436, 443, 448, 455], "distribut": [29, 157, 160, 244, 246, 247, 254, 258, 272, 274, 276, 278, 414, 419, 424, 434, 436, 439, 440, 441, 453], "distutil": 329, "div": 411, "divers": 453, "divid": 415, "divis": 366, "dll": 435, "dmac": [392, 393, 394, 396, 397], "dmf": 443, "do": [206, 212, 253, 407, 411, 412, 414, 417, 424, 426, 427, 428, 430, 433, 434, 435, 439, 441, 443, 444, 445, 446, 448, 449, 451, 455, 456, 457], "do_baybe_work": 444, "doc": [92, 157, 314, 402, 404, 405, 434, 436], "doc101": 437, "doc103": 437, "docstr": 436, "doctest": 436, "document": [29, 362, 411, 434, 436, 437, 438, 439, 442, 446, 452], "doe": [28, 29, 36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 87, 188, 233, 235, 237, 239, 244, 246, 247, 253, 254, 258, 272, 274, 276, 278, 285, 324, 333, 348, 362, 394, 397, 408, 411, 412, 414, 427, 428, 430, 431, 436, 437, 439, 443, 447, 449, 452, 453, 455, 457], "doi": [270, 346], "domain": [244, 246, 247, 254, 258, 272, 274, 276, 278, 391, 434, 450, 452], "don": [433, 445], "done": [29, 347, 348, 394, 396, 402, 403, 404, 405, 411, 412, 419, 426, 436, 440, 442, 443, 444, 445], "doubl": [362, 437, 444], "down": [451, 457], "downsid": 177, "draft": 436, "dramat": 455, "drastic": 448, "draw": [10, 104, 204, 415, 417, 422], "draw_arm": 417, "drawback": 447, "drawn": [19, 188], "drive": [409, 455], "driven": [339, 440], "driver": 435, "drop": [344, 345, 346, 408, 436, 443], "dry_run": 29, "dtype": [12, 120, 298, 299, 300, 365], "due": [305, 431, 434, 436, 440, 443, 444, 448, 449, 450, 451, 454], "duplic": [55, 156, 311, 319, 436, 443], "dure": [29, 32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 206, 212, 233, 322, 376, 414, 417, 430, 431, 434, 435, 436, 437, 438, 442, 443, 444, 445, 446, 450, 451, 452, 453], "dynam": [417, 436, 451, 456], "d\u00fcbendorf": 438, "e": [8, 19, 24, 29, 32, 51, 53, 54, 68, 87, 90, 138, 151, 178, 206, 212, 233, 305, 311, 317, 318, 334, 339, 347, 348, 355, 384, 392, 393, 394, 412, 414, 415, 417, 434, 435, 436, 437, 440, 441, 443, 444, 446, 448, 449, 450, 451, 452, 455, 457], "e3fp": 143, "e3fpfingerprint": 143, "each": [12, 19, 29, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 114, 119, 124, 126, 151, 170, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 206, 235, 237, 239, 241, 244, 246, 247, 253, 254, 258, 272, 274, 276, 278, 309, 334, 339, 340, 348, 368, 391, 393, 394, 397, 409, 414, 415, 417, 419, 420, 424, 430, 431, 437, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457], "eagerli": 436, "earli": [408, 436], "earlier": [29, 433, 435], "earn": 417, "earned_reward": 417, "easi": [333, 437, 451], "easier": [437, 457], "easiest": [434, 437], "easili": [408, 434, 437, 442, 445, 448, 450, 451, 455], "ecfp": [143, 393, 436, 448], "ecfpfingerprint": 143, "ecosystem": 451, "edbo": [268, 270, 346, 436], "edbokernelfactori": [268, 436], "edit": [434, 437], "editor": 455, "editori": 439, "edwin": 455, "effect": [53, 173, 175, 176, 177, 178, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 407, 408, 417, 431, 436, 440, 443, 448, 449, 452, 455, 457], "effici": [212, 414, 434, 436, 450], "effortlessli": 452, "ei": [3, 397], "either": [24, 29, 207, 235, 241, 258, 282, 348, 393, 404, 419, 424, 434, 439, 447, 448, 449, 450, 452, 453], "elabor": 439, "elaps": 407, "elapsedtimeprint": 407, "electron": [438, 439], "electroshap": 143, "electroshapefingerprint": 143, "eleg": [430, 451], "element": [38, 39, 40, 50, 241, 311, 321, 327, 364, 365, 370, 414, 430, 431, 436, 443, 452], "elev": 409, "elif": [423, 424], "elimin": [437, 440], "els": [328, 329, 391, 392, 393, 394, 399, 400, 402, 403, 405, 408, 409, 417, 420, 423, 424, 430, 431], "elsewher": 411, "emd": 438, "emdgroup": [301, 434], "emelin": 438, "emerg": 442, "empir": 417, "emploi": [29, 417, 449], "employe": [434, 444], "empow": 453, "empti": [91, 204, 206, 212, 219, 309, 324, 333, 347, 350, 388, 389, 414, 419, 424, 426, 436, 450], "empty_encod": [206, 212], "emptysearchspaceerror": 219, "emul": [19, 435, 436], "en": [92, 157], "enabl": [177, 303, 304, 392, 393, 394, 414, 430, 434, 435, 436, 442, 443, 444, 445, 446, 447, 449, 451, 452, 454, 455], "encod": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 131, 132, 133, 135, 136, 138, 140, 141, 142, 143, 145, 146, 149, 206, 212, 244, 246, 247, 254, 258, 272, 274, 276, 278, 332, 334, 392, 393, 394, 396, 397, 402, 403, 404, 405, 408, 412, 414, 417, 419, 426, 427, 428, 430, 431, 434, 436, 443, 450, 451, 455], "encompass": 442, "encount": [173, 175, 176, 177, 178, 376, 435, 436, 437, 447], "end": [0, 300, 355, 408, 412, 417, 419, 426, 439, 443, 451], "endeavor": 440, "endpoint": [436, 444], "enforc": [363, 382, 436, 437], "engin": [435, 449, 451, 452, 457], "enhanc": [24, 434], "enlarg": 448, "enough": [204, 451], "ensembl": 280, "ensur": [151, 392, 393, 394, 414, 415, 434, 443, 451, 452], "enter": [71, 212, 450], "entir": [304, 355, 377, 436, 437, 440, 444, 457], "entiti": 439, "entri": [36, 39, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 227, 244, 246, 247, 254, 258, 272, 274, 276, 278, 309, 339, 348, 377, 394, 402, 403, 404, 405, 414, 433, 436, 443, 444, 445, 446, 454, 457], "enum": [122, 140, 141, 142, 143, 207, 265, 293, 294, 313, 375, 436, 451], "enumer": [121, 139, 292, 409, 430, 431, 447], "env": [436, 437], "envar_nam": 444, "environ": [303, 363, 382, 391, 392, 393, 394, 400, 402, 403, 405, 408, 409, 411, 417, 420, 430, 431, 434, 435, 436, 437, 456], "envvar": 301, "envvar_nam": 444, "eq": [402, 414], "equal": [43, 119, 178, 204, 417, 419, 426, 436, 443, 447, 450, 451, 454], "equat": [43, 443, 452], "equidist": 448, "equip": 443, "equival": [19, 32, 55, 400, 422, 440, 443, 452], "erg": 143, "ergfingerprint": 143, "erron": 436, "error": [176, 186, 188, 235, 237, 239, 255, 322, 366, 394, 412, 417, 435, 436, 443, 447, 448, 449], "esian": 434, "especi": 437, "essenti": [442, 449], "establish": [408, 430, 431, 455], "estat": 143, "estatefingerprint": 143, "ester": [392, 393, 394, 396, 397], "estim": [206, 211, 212, 244, 417, 436, 453, 456], "estimate_product_space_s": [206, 212, 457], "estimated_win_r": 417, "estimation_bia": 417, "estimation_vari": 417, "et": [393, 434, 448], "etc": [38, 39, 40, 133, 206, 288, 455], "ethanol": [414, 443], "euclidean": 376, "eval_during_augment": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57], "eval_during_cr": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57], "eval_during_model": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57], "evalu": [24, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 280, 281, 329, 423, 424, 436, 442, 444, 449, 452, 455], "even": [178, 282, 345, 430, 431, 439, 441, 442, 444, 448, 452, 453, 455, 457], "event": [29, 304, 408, 439], "everi": [441, 457], "everyth": [437, 443], "evolv": [409, 437], "ex": 446, "exabyt": 457, "exact": [29, 348, 407, 435, 436, 443, 447, 448, 453], "exactexplain": [85, 88, 446], "exactli": [12, 114, 119, 124, 126, 206, 414, 436, 441, 442, 450, 451], "exampl": [12, 151, 237, 308, 309, 319, 328, 347, 390, 391, 395, 398, 401, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421, 422, 425, 429, 430, 431, 435, 436, 437, 438, 439, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "example_input_nam": 411, "exceed": 408, "exceedingli": 452, "except": [29, 324, 333, 337, 353, 354, 392, 393, 394, 408, 412, 427, 428, 434, 435, 436, 439, 445, 453], "excepthook": 435, "exceptiongroup": 436, "excess": 457, "exclud": [29, 54, 344, 402, 403, 404, 405, 419, 426, 436, 439, 443, 456], "exclude_list": 346, "exclus": [52, 401, 432, 436, 439, 443, 452, 456], "execut": [29, 62, 235, 324, 391, 393, 435, 436, 437, 439, 444, 451, 452, 455], "exemplari": 442, "exercis": 439, "exhaust": [176, 446, 449], "exist": [109, 206, 304, 314, 324, 414, 435, 436, 437, 440, 442, 443, 445, 451, 453, 455], "exp_rep": [212, 402, 403, 404, 405, 414, 450], "exp_rep_byt": [211, 457], "exp_rep_human_read": [211, 457], "exp_rep_shap": [211, 457], "expect": [3, 4, 9, 11, 12, 13, 15, 50, 248, 250, 260, 324, 342, 397, 403, 409, 411, 414, 415, 417, 428, 436, 437, 442, 443, 446, 447, 448, 451, 452, 454, 457], "expens": [10, 188, 399, 452], "experi": [0, 29, 170, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 233, 235, 244, 246, 247, 254, 258, 272, 274, 276, 278, 392, 393, 394, 396, 397, 423, 424, 436, 440, 442, 443, 445, 447, 448, 449, 454, 455, 456], "experiment": [29, 91, 114, 119, 124, 126, 132, 135, 136, 138, 146, 149, 170, 173, 174, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 206, 211, 212, 233, 244, 246, 247, 250, 254, 258, 272, 274, 276, 278, 288, 290, 296, 339, 341, 402, 403, 404, 405, 409, 419, 426, 434, 436, 440, 441, 443, 447, 448, 450, 451, 452, 454, 455, 456, 457], "experimentalist": 433, "explain": [67, 86, 87, 88, 90, 91, 409, 436, 438, 453, 456], "explainer_cl": [87, 91, 446], "explan": [87, 91, 436, 442, 453], "explanation_index": [87, 446], "explicit": [151, 177, 407, 408, 412, 414, 422, 427, 428, 436, 437, 447, 451, 453, 455, 456], "explicitli": [204, 212, 407, 424, 431, 439, 445, 450, 455], "exploit": [8, 19, 417, 436], "explor": [8, 29, 417, 440, 449, 450, 455], "exploratori": 440, "exponenti": 212, "expos": [29, 407, 436], "exposur": 436, "expr": [36, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57], "express": [36, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 434, 436, 439, 443], "extend": [445, 448, 455], "extens": [436, 449], "extra": [393, 435, 436], "extract": [29, 173, 175, 176, 177, 178, 349, 409, 430, 446, 456], "extract_pi": 409, "f": [329, 391, 392, 393, 394, 399, 400, 402, 403, 404, 405, 407, 408, 409, 414, 415, 419, 422, 423, 424, 430, 431, 457], "f1": 452, "f2": 452, "fabian": 438, "face": [244, 246, 247, 254, 258, 272, 274, 276, 278, 415, 417], "facilit": 449, "fact": [19, 409, 414, 433, 443, 447], "factor": [12, 151, 442, 457], "factori": [151, 204, 258, 259, 260, 261, 262, 268, 270, 320, 397, 402, 403, 404, 405, 419, 426, 436], "fail": [424, 428, 435, 436, 453], "failur": [290, 439], "failure_valu": 290, "fairli": 447, "fake": [237, 339, 343, 396, 397, 411, 412, 419, 436, 441, 452, 456], "fall": [178, 408, 442, 454], "fallback": [117, 212, 357, 368, 411, 436, 450], "fals": [6, 12, 29, 32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 87, 91, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 175, 176, 177, 178, 204, 206, 212, 217, 244, 246, 247, 254, 258, 272, 274, 276, 278, 290, 299, 317, 318, 322, 328, 329, 342, 347, 349, 352, 370, 388, 397, 402, 403, 404, 405, 419, 426, 427, 428, 434, 436, 444], "famili": 443, "familiar": [392, 393, 394, 397, 399, 400, 402, 403, 404, 405, 411, 412, 419, 423, 424, 426], "fang": 438, "fantasi": 10, "far": 442, "farthest": [200, 375, 376, 397, 434, 436, 438, 440, 449], "farthest_point_sampl": 436, "fashion": [298, 300], "fast": [402, 404, 405, 450, 454], "faster": 212, "fault": 82, "faulti": 435, "favicon": 436, "favor": 436, "fc": [392, 393, 394], "feasibl": [442, 446], "featur": [87, 104, 149, 346, 434, 435, 437, 443, 446, 453, 455], "fed": [434, 446], "feder": 438, "fee": 439, "feed": [420, 433, 434, 445, 455], "feedback": 438, "feel": 408, "few": [391, 417, 436, 437, 440, 448, 451, 453, 455, 457], "field": [226, 337, 370, 436, 455, 456], "fifti": 439, "fig": [409, 420], "figsiz": 420, "figur": [368, 409], "file": [368, 392, 393, 394, 411, 412, 424, 434, 436, 439, 444, 451, 455], "filenotfounderror": [392, 393, 394, 408], "fill": [29, 237, 409], "filler": 443, "filter": [29, 36, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 206, 212, 344, 347, 402, 414, 436, 443, 445, 450, 455, 457], "filter_attribut": 436, "filter_df": [29, 436], "filterwarn": 408, "final": [391, 393, 396, 408, 414, 431], "find": [206, 322, 365, 368, 434, 440, 442, 443, 447, 455], "fine": [412, 426, 427, 428, 434], "finer": [151, 434], "fingerprint": [143, 149, 332, 334, 434, 436, 438, 448], "finish": 441, "finit": [176, 233, 241, 354, 384, 417, 448, 452], "first": [206, 239, 364, 376, 391, 393, 396, 397, 402, 407, 408, 411, 412, 414, 419, 420, 424, 428, 430, 431, 434, 435, 436, 442, 443, 447, 448, 449, 450, 455, 457], "fit": [29, 198, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 377, 379, 392, 393, 394, 402, 403, 404, 405, 411, 419, 426, 436, 439, 443, 448, 453], "fit_gpytorch_ml": 436, "fit_gpytorch_mll_torch": 436, "fitnr": 419, "fitzner": [434, 438], "fix": [233, 261, 408, 409, 414, 417, 420, 423, 424, 437, 442, 448, 452, 455, 457], "flag": [24, 29, 51, 87, 91, 114, 119, 124, 126, 188, 206, 207, 212, 342, 349, 433, 436, 442, 444, 445, 446, 449], "flake8": 436, "flexibl": [407, 422, 436, 451, 452], "flexibli": [447, 449], "float": [8, 12, 14, 20, 40, 43, 45, 46, 98, 99, 100, 101, 102, 103, 104, 105, 109, 111, 119, 120, 138, 145, 146, 149, 154, 155, 161, 162, 163, 164, 165, 166, 167, 188, 211, 212, 235, 239, 244, 282, 290, 291, 298, 299, 300, 305, 315, 336, 339, 340, 341, 346, 355, 359, 361, 362, 364, 365, 366, 381, 384, 385, 386, 407, 409, 411, 417, 419, 436, 437, 456], "float64": 381, "floattensortyp": 411, "fly": [177, 451, 453], "fn": 314, "focu": 442, "focus": [126, 420, 424, 434], "folder": [393, 434, 437, 444, 453], "follow": [173, 175, 176, 177, 178, 206, 235, 237, 239, 392, 393, 394, 397, 399, 400, 402, 403, 404, 405, 407, 408, 412, 417, 419, 424, 427, 428, 430, 431, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "footprint": [10, 206], "forbid": 387, "forc": [87, 89, 188, 436, 437, 446, 449], "forest": [277, 278], "forgiv": 454, "fork": 437, "form": [212, 233, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 339, 433, 434, 439, 440, 442, 447, 448, 449, 450, 451, 452, 457], "formal": [415, 433], "format": [43, 302, 350, 356, 359, 411, 412, 426, 427, 434, 435, 436, 437, 442, 444, 451, 452], "format_except": 435, "former": [414, 436], "formul": 455, "formula": 414, "forrest": 436, "found": [80, 151, 204, 212, 322, 332, 362, 365, 368, 408, 414, 419, 434, 435, 437, 442, 443, 449, 455], "foundat": 449, "four": 414, "fourier": 104, "fourth": 443, "fp": [375, 436, 440], "fp_size": [143, 448], "fpsrecommend": [397, 411, 412, 426, 427, 428, 434, 441, 449], "frac": [431, 447], "frac1": 403, "fraction": [14, 99, 336, 408, 440, 443, 444], "fraction1": 403, "fraction_1": 443, "fraction_2": 443, "fraction_3": 443, "frame": [341, 446, 457], "frame1": 403, "frame2": 403, "frame_1": 443, "frame_2": 443, "framea": 403, "framea_a": 403, "frameb": 403, "framework": [442, 448], "free": [437, 439, 444], "freedom": 451, "freeli": 414, "frequenc": 104, "frequent": 417, "fresh": 408, "frictionless": 451, "friendli": 436, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 87, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 143, 145, 146, 149, 151, 157, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 229, 237, 239, 241, 244, 246, 247, 250, 254, 258, 261, 266, 270, 272, 274, 276, 278, 282, 288, 290, 296, 299, 300, 324, 328, 329, 333, 341, 342, 344, 346, 355, 366, 368, 377, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 415, 417, 419, 420, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 435, 437, 439, 440, 441, 443, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457], "from_bound": [204, 436, 450], "from_campaign": [87, 446], "from_config": [29, 427, 428, 442], "from_datafram": [204, 206, 212, 436, 445, 450, 451, 457], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 204, 206, 212, 229, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 355, 411], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 204, 206, 212, 229, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 355, 411, 412, 426, 442, 451], "from_paramet": [204, 206, 212, 436], "from_preset": 258, "from_product": [204, 206, 212, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 415, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 434, 436, 443, 445, 450, 451, 452], "from_recommend": [87, 446], "from_record": [451, 452], "from_repl": [250, 453], "from_simplex": [212, 414, 436, 445, 450, 457], "from_surrog": [87, 446], "front": 447, "frontier": 420, "frozenset": 414, "fsspec": 436, "fulfil": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 408, 414, 415], "full": [24, 204, 362, 390, 432, 436, 442, 445, 446, 448, 455, 456], "full_factori": 204, "full_lik": 409, "full_lookup": [392, 393, 394], "fulli": [414, 434, 436, 444, 445, 452], "fulltest": 437, "func": 437, "func_nam": 430, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 37, 43, 44, 50, 58, 65, 73, 82, 84, 87, 103, 110, 113, 116, 118, 123, 125, 127, 150, 153, 186, 188, 189, 205, 210, 216, 220, 221, 229, 230, 233, 234, 236, 238, 239, 240, 245, 249, 253, 259, 264, 279, 283, 284, 287, 294, 297, 298, 299, 300, 301, 304, 305, 307, 310, 326, 330, 335, 338, 341, 343, 348, 349, 350, 353, 358, 360, 367, 368, 371, 374, 383, 396, 402, 403, 404, 405, 407, 409, 414, 417, 420, 426, 430, 431, 434, 435, 436, 440, 442, 443, 445, 447, 449, 450, 452, 453, 454, 455, 457], "function_nam": [430, 431], "functionalgroup": 143, "functionalgroupsfingerprint": 143, "fundament": [448, 451], "furo": 436, "further": [12, 348, 414, 415, 426, 434, 441, 445, 449, 450, 453, 455, 456], "furthermor": 419, "furyl": [392, 393, 394], "futur": [55, 206, 253, 402, 404, 405, 408, 430, 445, 446, 454], "fuzzi": 304, "fuzzy_row_match": [304, 436], "g": [51, 53, 54, 68, 87, 90, 138, 151, 206, 212, 311, 334, 348, 417, 434, 435, 436, 437, 440, 441, 443, 444, 446, 448, 449, 450, 452, 457], "g1": 415, "g2": 415, "g3": 415, "gain": [212, 442, 446], "gamma": 162, "gammaprior": 436, "garbag": 436, "gather": [178, 430, 431, 440, 455], "gaussian": [92, 195, 246, 256, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 298, 397, 419, 436, 443, 449, 455], "gaussian_kd": 409, "gaussian_process": [94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 258, 260, 261, 265, 268, 270, 397, 436], "gaussianmixtureclusteringrecommend": 449, "gaussianprocesspreset": [258, 266], "gaussianprocesssurrog": [266, 397, 402, 403, 404, 405, 409, 419, 426, 427, 428, 436, 453], "gcf": [392, 394], "ge": 400, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 87, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 142, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 212, 244, 246, 247, 250, 254, 258, 261, 268, 270, 272, 274, 276, 278, 288, 290, 296, 302, 328, 334, 340, 355, 371, 379, 391, 397, 407, 414, 420, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457], "geom_mean": [111, 119, 122, 419, 447], "geometr": [122, 366, 419, 447], "germani": [434, 438, 444], "get": [29, 36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 186, 188, 204, 258, 339, 397, 408, 414, 423, 424, 433, 434, 436, 441, 456, 457], "get_candid": [212, 408], "get_cmap": 409, "get_comp_rep_parameter_indic": [206, 436], "get_current_recommend": [173, 175, 176, 177, 178, 436], "get_integration_point": 14, "get_invalid": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57], "get_invalid_polar": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57], "get_lin": 408, "get_next_recommend": [173, 175, 176, 177, 178, 436], "get_non_meta_recommend": [173, 175, 176, 177, 178, 436], "get_parameters_by_nam": [204, 206, 212], "get_parameters_from_datafram": [204, 212], "get_subclass": 397, "get_surrog": [29, 87, 186, 188, 436, 446, 453], "get_transform_object": [352, 436], "get_transform_paramet": 436, "get_valid": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 436], "getawai": 143, "getawayfingerprint": 143, "ghosecrippen": 143, "ghosecrippenfingerprint": 143, "git": [434, 437], "github": [270, 301, 325, 346, 411, 436, 437, 438], "give": [411, 412, 414, 431, 439, 442, 447, 451], "given": [12, 27, 29, 32, 38, 39, 40, 60, 80, 87, 90, 91, 114, 119, 124, 126, 128, 136, 149, 151, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 218, 233, 237, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 282, 293, 305, 309, 317, 318, 322, 323, 324, 327, 328, 331, 332, 336, 339, 342, 349, 355, 356, 364, 366, 369, 370, 376, 379, 402, 403, 404, 405, 408, 414, 417, 419, 424, 430, 431, 442, 450, 452, 453], "glass_transition_tempc": 448, "global": [14, 372, 436, 456, 457], "gmean": 366, "gmm": 195, "go": [308, 414, 434], "goal": [391, 417, 447, 455], "goe": 453, "good": [339, 408, 419, 442, 444, 454], "good_interv": 339, "good_reference_valu": 339, "goodwil": 439, "googl": [436, 437], "govern": 434, "gp": [244, 246, 247, 254, 258, 272, 274, 276, 278, 436], "gpytorch": [92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 157, 159, 161, 162, 163, 164, 165, 166, 167, 436], "grab": 433, "gradient": [10, 188, 276, 436, 444, 449], "grant": [436, 439], "granular": [412, 426, 427, 428, 434], "granularity_coar": 426, "granularity_fin": 426, "great": [417, 451], "greater": 178, "greatli": 437, "greedi": [188, 436, 449], "grid": [420, 430, 431], "grid_d": [430, 431], "grossli": 439, "group": [309, 319, 379, 415, 434, 436, 442, 446], "groupbi": [239, 241], "grow": 457, "gt": [405, 414], "gu16": 448, "guarante": [436, 443, 444, 449], "guid": [396, 434, 435, 436, 437, 440, 442, 445, 447, 450, 452, 455], "guidelin": [436, 437, 440], "ha": [51, 72, 73, 87, 176, 204, 206, 212, 244, 246, 247, 254, 258, 272, 274, 276, 278, 308, 322, 324, 328, 340, 376, 377, 393, 397, 402, 403, 404, 405, 414, 419, 424, 426, 434, 436, 437, 439, 441, 442, 443, 446, 448, 450, 451, 452, 454, 455], "had": [233, 443, 448, 452], "half": [146, 163, 164, 355, 424, 441], "halfcauchyprior": 436, "halfnormalprior": 436, "hamster": 455, "hand": [43, 149, 415, 417, 420, 430, 431, 434, 442, 451, 453], "handl": [87, 124, 133, 235, 237, 244, 246, 247, 254, 258, 272, 274, 276, 278, 282, 353, 402, 403, 417, 419, 436, 442, 447, 457], "happen": [79, 176, 419, 424, 431, 435, 436, 437, 450, 451, 455], "happili": 447, "hard": [436, 455, 457], "harmless": 439, "hartmann": [409, 430, 431], "hasattr": [399, 400, 423, 424], "hash": [302, 434, 444, 448], "hashabledict": 436, "have": [24, 29, 36, 38, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 114, 119, 124, 126, 149, 198, 206, 233, 253, 285, 309, 319, 322, 339, 348, 349, 362, 392, 393, 396, 397, 402, 403, 407, 409, 414, 415, 417, 419, 423, 424, 430, 431, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 447, 448, 449, 451, 452, 453, 455, 457], "head": 436, "header": 370, "heart": 455, "heatmap": [87, 89], "help": [417, 451, 452, 455], "helper": [407, 409, 411, 414, 451], "henc": [333, 414, 417, 426, 443, 448, 457], "here": [54, 362, 392, 394, 396, 399, 400, 407, 408, 412, 414, 415, 423, 424, 426, 430, 431, 433, 434, 435, 441, 443, 445, 447, 448, 449, 450, 451, 452, 454, 455], "herebi": 439, "herein": [439, 442], "heurist": 188, "hierarch": 451, "hierarchi": [80, 436, 437, 442, 451], "high": [268, 391, 417, 436, 437, 440, 442, 443, 448, 451], "higher": [149, 417, 435, 443, 446, 449], "highest": [440, 451], "highlight": 455, "hint": 437, "histogram": 305, "histori": 437, "hoc": 447, "hold": [42, 319, 439, 451], "home": [402, 404, 405], "homepag": [434, 436], "hood": 448, "hook": [47, 117, 212, 221, 225, 324, 432, 435, 436, 437], "hopp": [434, 438], "host": [434, 436, 444], "hostnam": [302, 444], "hot": [140, 393, 417, 434, 436, 448], "how": [52, 235, 237, 348, 376, 391, 392, 394, 395, 396, 397, 398, 401, 402, 403, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 424, 426, 427, 428, 431, 434, 442, 443, 444, 447, 452, 453, 454, 455], "howev": [151, 212, 253, 324, 407, 414, 417, 423, 424, 433, 435, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 455, 457], "hrovatin": 438, "html": [92, 157, 301, 314, 362, 411, 436], "http": [92, 157, 270, 301, 314, 325, 346, 362, 434, 436, 439, 455], "hue": [391, 392, 393, 394, 408, 430, 431], "human": [211, 359, 426, 436, 438, 451], "hybrid": [23, 24, 68, 179, 180, 188, 201, 206, 207, 397, 398, 402, 403, 404, 405, 419, 421, 426, 432, 434, 436, 449, 450], "hybrid_recommend": 424, "hybrid_sampl": [188, 449], "hyperrectangl": [204, 450], "hypervolum": 12, "hypothesi": [434, 436, 437], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 67, 68, 71, 72, 73, 74, 76, 87, 90, 91, 106, 109, 120, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 219, 233, 235, 237, 239, 241, 244, 246, 247, 248, 250, 253, 254, 258, 268, 272, 274, 276, 278, 282, 285, 293, 298, 299, 300, 303, 304, 305, 309, 312, 313, 314, 317, 318, 322, 324, 325, 327, 328, 329, 332, 333, 339, 340, 341, 342, 343, 347, 348, 349, 350, 354, 355, 362, 364, 365, 368, 370, 376, 377, 384, 388, 389, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 415, 417, 419, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "ideal": [441, 443, 452], "ident": [151, 308, 309, 445, 448, 451, 455], "identif": 417, "identifi": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 239, 319, 333, 348, 349, 408, 436, 443, 446, 447, 448, 450, 451, 452, 455], "idx_offset": 43, "ignor": [114, 119, 124, 126, 176, 188, 206, 213, 214, 235, 237, 239, 322, 346, 394, 408, 424, 436, 443, 451, 457], "ignore_exampl": 436, "ignore_list": 345, "ii": 439, "iii": 439, "illustr": [420, 422, 445], "iloc": 441, "imag": [417, 436], "imagin": [414, 417], "immedi": [368, 407, 442], "immut": 436, "impact": [393, 431, 444], "imperfect": 341, "implement": [19, 36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 120, 170, 181, 241, 248, 326, 402, 408, 414, 430, 436, 437, 438, 440, 446, 449, 450, 452, 455], "impli": [414, 434, 439, 443, 448], "implicitli": 451, "import": [12, 78, 87, 119, 237, 408, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "impos": [414, 415, 443], "imposs": [434, 444, 445, 451], "improv": [3, 4, 7, 9, 11, 12, 13, 15, 17, 397, 400, 406, 408, 432, 434, 436, 439, 444], "imput": [235, 237, 390, 394, 432, 434], "impute_mod": [235, 237, 239, 394, 452], "inabl": [434, 439], "inaccuraci": 434, "inact": 42, "inc": 455, "incident": 439, "includ": [60, 114, 119, 124, 126, 178, 235, 317, 318, 345, 392, 403, 412, 414, 427, 428, 431, 436, 437, 439, 440, 441, 443, 445, 457], "inclus": 439, "incom": 451, "incompat": [64, 65, 66, 67, 68, 69, 91, 254, 404, 443], "incompatibilityerror": 29, "incompatibleacquisitionfunctionerror": 441, "incompatibleexplainererror": 446, "incomplet": 436, "inconsist": 436, "incorpor": [439, 441, 453, 457], "incorrect": 436, "incorrectli": 436, "increas": [10, 176, 239, 299, 300, 419, 430, 431, 436, 440, 448, 455], "increment": 212, "incur": 439, "indefinit": [176, 235], "indemn": 439, "indemnifi": 439, "indent": 370, "independ": [180, 244, 246, 247, 250, 254, 258, 272, 274, 276, 278, 411, 436, 449, 452, 453], "independentgaussiansurrog": [254, 272, 274, 276, 436], "index": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 87, 206, 239, 250, 308, 309, 347, 348, 411, 412, 419, 424, 426, 436, 446, 448, 450, 452], "indexkernel": 436, "indic": [12, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 82, 87, 90, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 173, 175, 176, 177, 178, 206, 308, 309, 312, 313, 342, 376, 414, 424, 436, 439, 445, 449, 452, 453], "indirect": [317, 318, 439], "indistinguish": 414, "individu": [51, 52, 107, 108, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 235, 250, 350, 408, 415, 420, 439, 442, 445, 447, 449, 455], "induc": 417, "industri": 455, "ineffici": 212, "inequ": [43, 204, 450], "inf": [8, 402, 403, 404, 405, 426], "infeas": 445, "infer": [151, 254, 430, 431, 436, 450], "inferencesess": 254, "infin": 155, "infinit": [176, 177, 320, 354, 384, 385, 436, 448], "influenti": 455, "info": [305, 436], "inform": [24, 133, 252, 288, 349, 392, 393, 394, 409, 414, 423, 424, 431, 434, 436, 437, 439, 441, 444, 445, 448, 450, 455, 456], "infring": 439, "ingest": [212, 235, 448, 449], "ingredi": [414, 415, 443], "inher": [19, 244, 246, 247, 254, 258, 272, 274, 276, 278, 414, 453], "inherit": 437, "init": 284, "initi": [98, 99, 100, 101, 102, 103, 104, 105, 109, 178, 180, 188, 195, 196, 197, 198, 200, 212, 235, 239, 304, 376, 390, 402, 403, 404, 405, 408, 409, 419, 426, 431, 432, 436, 438, 442, 444, 448, 449, 451, 452, 455], "initial_data": [235, 239, 392, 431, 452], "initial_recommend": [178, 397, 408, 409, 411, 412, 417, 426, 427, 428, 434, 449], "initial_recommender_cl": 436, "initial_strategi": 436, "initial_typ": 411, "inject": 451, "inner": [171, 347, 446, 449, 451], "inplac": [393, 430, 431, 457], "input": [38, 39, 40, 120, 132, 135, 136, 138, 146, 149, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 288, 290, 296, 298, 319, 336, 337, 341, 342, 343, 347, 355, 357, 364, 376, 388, 389, 391, 411, 419, 420, 430, 431, 436, 447, 451, 452, 455], "input_dim": 411, "input_label": 342, "inputtransform": 379, "insid": [408, 411, 412, 435, 451], "insight": [87, 408, 434, 436, 438, 456], "inspect": [328, 407, 414], "instabl": [436, 443], "instal": [436, 437, 444, 446, 448, 457], "instanc": [38, 39, 40, 51, 54, 87, 178, 206, 339, 403, 408, 414, 415, 434, 435, 437, 441, 442, 443, 444, 446, 448, 450, 451, 452, 457], "instanti": [254, 408, 442], "instead": [173, 175, 176, 177, 178, 304, 333, 342, 402, 404, 405, 434, 435, 436, 442, 443, 447, 448, 451, 452, 454, 455, 457], "institut": [438, 439], "instruct": [434, 436, 454, 456], "instrument_nam": 305, "int": [10, 12, 14, 19, 29, 32, 42, 43, 49, 87, 94, 95, 96, 99, 101, 102, 103, 104, 105, 114, 119, 120, 124, 126, 140, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 212, 235, 239, 241, 290, 291, 298, 299, 300, 305, 343, 350, 365, 369, 372, 373, 376, 377, 379, 402, 404, 405, 414, 417, 419, 431, 437, 448], "integ": [32, 140, 206, 239, 424, 436, 437, 448], "integr": [14, 436, 437, 440, 442], "intend": [396, 407, 430, 437, 449], "intens": 448, "intention": 439, "interact": [28, 29, 396, 434, 435, 442, 445, 451], "interchang": 414, "interconnect": 442, "interest": [446, 447, 457], "interfac": [170, 248, 260, 407, 409, 436, 439, 442, 445, 446], "intermedi": [198, 376], "intern": [29, 43, 55, 176, 391, 408, 419, 436, 443, 444, 448, 449, 450, 451], "internet": 434, "internship": 438, "interplai": 436, "interpol": [99, 268, 436], "interpret": [12, 206, 233, 336, 412, 414, 427, 428, 431, 444, 450, 452], "interrupt": 62, "intersect": 424, "interv": [145, 296, 298, 299, 300, 419, 436, 442, 448, 451, 454], "intrins": 455, "introduc": [435, 436, 443, 448, 449, 452], "intuit": [442, 446], "invalid": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 70, 212, 333, 377, 412, 427, 435, 442, 443, 450], "invalid_config": 428, "invalid_surrogate_model": 412, "invalid_typ": 428, "invari": [51, 54, 55, 308, 309, 443], "invers": [225, 451], "invert": [29, 347], "investig": [233, 452, 453], "invok": [452, 456, 457], "involv": [29, 212, 250, 407, 414, 434, 444, 446, 447, 448, 451, 455], "io": 301, "irrelev": [414, 436, 443], "irrevoc": 439, "is_bound": [355, 436], "is_continu": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 131, 132, 133, 135, 136, 138, 145, 146, 149], "is_degener": 355, "is_discret": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 131, 132, 133, 135, 136, 138, 145, 146, 149], "is_empti": [204, 212, 436], "is_eq": 43, "is_finit": 436, "is_fully_unbound": 355, "is_half_bound": 355, "is_in_rang": [131, 132, 133, 135, 136, 138, 145, 146, 149], "is_left_bound": 355, "is_mc": 436, "is_multi_output": [114, 119, 124, 126, 436], "is_numer": [131, 132, 133, 135, 136, 138, 145, 146, 149, 436], "is_right_bound": 355, "is_stat": [173, 175, 176, 177, 178, 436, 445], "iso": 411, "isoxazol": 455, "issu": [253, 314, 325, 436, 439, 452, 457], "item": [39, 131, 132, 133, 135, 136, 138, 145, 146, 149, 414, 417, 430, 431, 448], "iter": [12, 29, 145, 176, 177, 206, 235, 253, 296, 315, 320, 339, 341, 343, 356, 388, 389, 392, 402, 403, 404, 405, 408, 409, 417, 430, 431, 434, 436, 440, 442, 448, 449, 452, 453, 457], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 180, 204, 206, 212, 229, 241, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 305, 308, 316, 324, 328, 339, 355, 359, 391, 397, 407, 409, 414, 415, 417, 431, 434, 435, 437, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457], "itself": [244, 246, 247, 254, 258, 272, 274, 276, 278, 407, 430, 435, 455], "j": [393, 434, 448, 455], "jackiepho": [392, 393, 394], "januari": 439, "javadi": 438, "jin": 438, "join": [347, 435], "joint": [250, 442, 453], "jointli": [420, 442], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 204, 206, 212, 229, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 355, 368, 411, 412, 426, 427, 436, 456], "json_str": 451, "juli": 438, "julian": 438, "jump": [436, 455], "jupyt": 411, "just": [417, 433, 437, 451], "k": [146, 196, 376, 391, 392, 393, 394, 396, 397, 399, 400, 408, 414, 420, 422, 423, 424, 436, 445, 449, 457], "karin": 438, "kde": 409, "keep": [50, 149, 204, 212, 408, 436, 437], "kei": [319, 339, 393, 437, 446], "kept": [347, 448, 453], "kernel": [94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 258, 259, 260, 261, 262, 268, 270, 397, 402, 403, 404, 405, 419, 426, 436, 443, 455], "kernel_factori": [94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 258, 260, 261], "kernel_or_factori": 258, "kernelexplain": [85, 87, 88, 91, 446], "kernelfactori": [258, 261, 262, 268, 270, 436], "keyword": [87, 149, 394, 397, 424, 431, 436, 441, 443, 450, 452], "kgaa": [434, 438, 444], "kian": 455, "kickstart": 451, "kind": [188, 434, 436, 439, 443, 448, 449], "kiter": [402, 403, 404, 405, 419], "klekotaroth": 143, "klekotarothfingerprint": 143, "kmean": 397, "kmeansclusteringrecommend": [397, 449], "knob": 434, "know": [417, 427, 434, 435, 447, 451, 455], "knowledg": [8, 10, 434, 436, 455], "known": [443, 445, 453, 455], "koller": 455, "kwarg": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 98, 100, 102, 107, 108, 109, 159, 161, 162, 163, 164, 165, 166, 167, 170, 190, 248, 255, 260, 334, 343, 354], "kwargs_conform": [149, 334, 448], "kwargs_fingerprint": [149, 334, 448], "l0": 32, "l1": 448, "l664": 270, "label": [54, 55, 138, 149, 305, 342, 414, 415, 420, 434, 436, 443, 448, 450, 452], "labelpad": 409, "laboratori": 420, "laggner": 143, "laggnerfingerprint": 143, "lambda": [402, 404, 405, 408, 414, 430, 453], "lanat": 446, "land": 436, "languag": [314, 415, 434], "larg": [149, 212, 399, 400, 415, 436, 444, 448, 452, 457], "larger": [99, 146, 377, 397, 404, 442, 443, 451, 455], "largest": [376, 417, 440], "last": [176, 417, 437, 442, 449], "last_call_tim": 407, "lastli": 409, "latent": 448, "later": [146, 435, 442, 451], "latest": [177, 434, 437, 442], "latter": [19, 29, 308, 328, 408, 414, 442, 447, 455], "law": [434, 439], "lawsuit": 439, "layer": 143, "layeredfingerprint": 143, "layout": 436, "lazi": [214, 380, 436], "lazili": [436, 444], "lazyfram": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 214], "le": 400, "le_method": 437, "lead": [77, 419, 436, 451], "lean": 437, "learn": [14, 240, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 397, 402, 403, 404, 405, 417, 419, 426, 430, 432, 434, 436, 443, 446, 448, 453, 454, 456], "least": [176, 415, 434, 439, 441, 442], "leav": 451, "lee": 438, "left": [74, 75, 167, 235, 340, 348, 355, 403, 420, 436, 447], "left_df": 348, "leftov": 436, "legal": 439, "legend": [392, 394, 420], "len": [403, 408, 409, 414, 415, 417], "length": [100, 176, 177, 244], "lengthi": 442, "lengthscal": [99, 100, 101, 103, 104, 105], "lengthscale_initial_valu": [99, 100, 101, 103, 104, 105], "lengthscale_prior": [99, 100, 101, 103, 104, 105], "leq": 32, "less": [8, 309, 343, 408, 409, 417, 442, 457], "let": [391, 393, 407, 408, 409, 411, 412, 414, 415, 420, 422, 431, 434, 443, 447, 451], "level": [341, 436, 437, 441, 442, 443, 449, 451], "leverag": [408, 442, 449], "li": 448, "liabil": 439, "liabl": 439, "lib": [402, 404, 405, 435], "librari": 435, "licensor": 439, "lie": [29, 244, 246, 247, 254, 258, 272, 274, 276, 278, 339], "liebig": 438, "life": [434, 437, 438, 457], "lifecycl": 442, "ligand": [392, 393, 394, 396, 397, 408, 434, 446, 448], "ligand_data": 408, "ligand_smil": 408, "like": [12, 198, 239, 311, 409, 414, 417, 434, 435, 436, 437, 441, 442, 443, 445, 448, 451, 452, 455, 457], "likelihood": 244, "lime": [87, 90, 446], "limetabular": [85, 86, 446], "limit": [8, 268, 305, 409, 434, 438, 439, 443, 450, 456], "line": [355, 370, 392, 394, 408, 417, 436, 437, 440, 442, 448, 452, 455], "linear": [43, 98, 204, 272, 294, 299, 397, 398, 419, 432, 436, 437, 446, 450, 454], "linear_model": 411, "linear_regressor": 411, "linearkernel": 436, "linearli": [268, 299, 300, 419, 436], "lineplot": [391, 392, 393, 394, 408, 430, 431], "lingo": 143, "lingofingerprint": 143, "link": [53, 435, 436, 439, 448], "linspac": [402, 403, 404, 405, 409, 411, 412, 414, 420, 423, 424, 426, 430, 431, 457], "lint": [434, 436, 437], "linter": [436, 437], "list": [32, 33, 34, 35, 36, 39, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 111, 136, 151, 156, 176, 177, 204, 206, 212, 213, 214, 217, 218, 219, 235, 239, 241, 304, 317, 318, 319, 327, 334, 339, 344, 345, 346, 349, 376, 392, 397, 402, 403, 404, 405, 409, 414, 415, 417, 419, 423, 424, 431, 434, 437, 439, 443, 447, 448, 449, 450, 452], "liter": [87, 111, 176, 235, 237, 239, 341, 376, 437], "literatur": 436, "litig": 439, "littl": 435, "live": 453, "liver": [452, 455], "ll": 445, "load": [368, 380, 408, 411, 427, 428, 435, 436], "loc": [165, 166, 392, 394, 420], "local": [435, 437, 444, 446, 456], "locat": [12, 165, 166, 441, 444, 455], "lockfil": 436, "log": [165, 305, 397, 434, 444], "logarithm": [4, 11, 12, 13, 366], "logei": [4, 436], "logic": [171, 250, 339, 342, 391, 436, 443, 449, 452, 457], "lognormalprior": 436, "logo": 436, "long": [442, 451, 452], "longer": 436, "look": [237, 397, 414, 417, 435, 440, 442, 443, 445, 446, 451, 452, 454], "look_up_target": 235, "lookup": [233, 235, 239, 241, 342, 348, 390, 391, 409, 420, 423, 432, 436, 446, 456], "lookup_df": 237, "lookup_test_task": 431, "lookup_training_task": 431, "lookup_valu": [399, 400, 409, 423, 424], "lookup_withmiss": 394, "loop": [233, 235, 241, 402, 403, 404, 405, 408, 419, 436, 441, 446, 452, 457], "loss": 439, "lost": 451, "lot": 422, "low": [268, 417, 435, 436, 446, 448, 451], "lower": [167, 298, 299, 300, 355, 392, 394, 409, 419, 430, 431, 448, 454], "lower_bound": 450, "lst_exclud": 344, "lt": 435, "luxuri": 442, "m": 414, "m1": 435, "mac": 435, "macc": 143, "maccsfingerprint": 143, "machin": [417, 434, 435, 437, 440, 444, 448, 454, 455], "machineri": [19, 188, 435, 437, 445, 455, 457], "made": [78, 235, 376, 394, 434, 435, 439, 443, 444, 445, 452], "magic": 455, "magnitud": [340, 341, 457], "mai": [29, 114, 119, 124, 126, 206, 324, 433, 434, 439, 442, 445, 451, 452, 453], "mail": 439, "main": [28, 29, 434, 436], "maintain": [282, 437, 445, 447], "major": [436, 452], "make": [55, 188, 244, 246, 247, 254, 258, 272, 274, 276, 278, 280, 281, 282, 314, 340, 342, 392, 394, 397, 399, 414, 415, 434, 435, 436, 437, 439, 441, 442, 443, 445, 446, 448, 451, 453, 455, 457], "make_explainer_for_surrog": 87, "malfunct": 439, "manag": [28, 204, 205, 206, 212, 373, 436, 439, 452], "mandatori": [433, 436, 454], "mani": [377, 414, 423, 424, 434, 442, 448, 451, 454, 455], "manipul": [436, 444], "manner": 444, "manual": [424, 435, 436, 451, 453], "map": [138, 143, 149, 237, 239, 250, 298, 299, 300, 322, 342, 379, 392, 393, 394, 419, 452, 454], "mapfingerprint": 143, "mapl": [85, 86, 87, 90, 446], "margin": 436, "mark": [439, 442, 455, 456], "markdown": [412, 427, 428, 436], "marker": [391, 392, 393, 394, 408, 430, 431, 436], "markers": [391, 393, 408, 420, 430, 431], "market": 417, "marketplac": 436, "martin": [434, 438], "mask_bad1": 402, "mask_bad2": 402, "mask_bad3": 402, "mask_good": [402, 443], "mass": 161, "master": 270, "match": [29, 79, 81, 132, 135, 136, 138, 146, 149, 151, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 288, 290, 293, 296, 304, 322, 324, 348, 349, 388, 407, 409, 419, 424, 434, 436, 441, 442, 445, 447, 451, 452, 456], "match_attribut": 436, "match_targeta": 454, "match_targetb": 454, "materi": [417, 438, 455], "matern": 99, "maternkernel": 436, "math": [408, 414], "mathemat": 436, "matmin": 435, "matplotlib": [392, 394, 409, 420, 436], "matter": [414, 422, 437, 447], "max": [237, 293, 340, 392, 393, 394, 396, 397, 402, 403, 404, 405, 408, 409, 411, 412, 417, 419, 420, 426, 427, 428, 434, 436, 447, 451, 452, 456], "max_cardin": [32, 42, 49], "max_column": [350, 414], "max_colwidth": 350, "max_nonzero": 212, "max_row": [350, 414], "max_sum": [212, 414, 450], "max_target": 454, "max_yield": [392, 394], "maxim": [6, 12, 293, 396, 409, 417, 419, 434, 436, 446, 454], "maximum": [6, 32, 42, 49, 149, 204, 206, 212, 298, 350, 414, 415, 419, 436, 443, 448, 450], "mc": [417, 441], "md": 436, "me2pph": [392, 393, 394], "mean": [5, 8, 19, 29, 55, 111, 122, 196, 233, 235, 237, 239, 244, 274, 282, 366, 394, 397, 411, 417, 419, 420, 436, 437, 439, 440, 441, 442, 443, 445, 447, 448, 449, 451, 453, 456], "meaning": 447, "meaningless": [414, 440], "meanpredictionsurrog": [282, 397, 453], "meantim": [437, 443], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 87, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 233, 235, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 288, 290, 296, 304, 339, 343, 348, 392, 393, 394, 397, 399, 400, 402, 403, 404, 405, 407, 408, 409, 419, 423, 424, 426, 433, 434, 436, 437, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456], "mechan": [29, 62, 119, 120, 122, 233, 236, 237, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 324, 347, 357, 376, 391, 407, 408, 409, 430, 431, 436, 439, 445, 446, 450, 451, 453, 455, 456], "mechanist": 434, "media": [439, 448, 455], "mediocr": 454, "medium": [412, 426, 434, 439, 448], "medoid": [197, 436, 449], "meet": [339, 439], "mem_estim": 457, "member": [328, 443, 448], "memori": [10, 206, 211, 212, 436, 444, 456], "memorys": [206, 212, 457], "mention": 440, "merchant": 439, "merck": [434, 438, 444], "mere": [439, 447], "merg": 437, "meshgrid": [420, 430, 431], "messag": [79, 408], "meta": [29, 74, 173, 175, 176, 177, 178, 181, 402, 403, 404, 405, 419, 426, 434, 436, 456], "metadata": [29, 204, 212, 302, 436], "metarecommend": [175, 176, 177, 178, 436, 445], "methanol": 414, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 82, 87, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 212, 229, 244, 246, 247, 248, 250, 254, 258, 260, 261, 268, 270, 272, 274, 276, 278, 281, 284, 285, 288, 290, 296, 311, 314, 324, 328, 355, 368, 375, 376, 377, 379, 409, 412, 427, 428, 433, 436, 438, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 455], "methodtyp": [407, 408, 409], "methyldiphenylphosphin": [392, 393, 394], "methylisoxazol": 455, "metric": [417, 434, 444, 448], "mhfp": 143, "mhfpfingerprint": 143, "micromamba": 436, "middl": 445, "midpoint": 454, "might": [51, 55, 149, 206, 393, 397, 399, 403, 424, 431, 435, 441, 442, 443, 444, 446, 450, 452, 455, 457], "mimic": [92, 157, 443], "min": [293, 340, 391, 399, 400, 409, 419, 420, 423, 424, 430, 431, 434, 436, 447, 451, 456], "min_cardin": [32, 42, 49], "min_nonzero": 212, "min_target": 454, "mind": [417, 453], "miniconda": 436, "minim": [6, 293, 419, 430, 431, 436, 450, 454], "minimum": [32, 42, 49, 146, 204, 206, 212], "minor": 436, "mirror": [12, 442, 451], "miss": [235, 237, 394, 436, 437], "mistak": 437, "mix": [241, 414, 415, 434, 443, 448, 451, 455], "mixin": 229, "mixtur": [195, 432, 436, 443, 448, 449, 455, 457], "mobil": 436, "mode": [111, 138, 149, 176, 235, 244, 293, 296, 299, 322, 339, 390, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 408, 409, 411, 412, 423, 424, 426, 427, 428, 430, 431, 432, 434, 435, 436, 447, 449, 451, 456], "model": [14, 29, 32, 33, 34, 35, 36, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 70, 72, 87, 91, 92, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 244, 246, 247, 248, 249, 250, 253, 254, 258, 272, 274, 276, 278, 282, 284, 285, 362, 399, 400, 410, 420, 430, 431, 434, 436, 438, 440, 441, 442, 443, 447, 448, 449, 451, 452, 454, 455, 456], "model_cl": 285, "model_cluster_num_parameter_nam": [195, 196, 197, 198], "model_from_config": 411, "model_from_python": 411, "model_init": 284, "model_json": 411, "model_param": [195, 196, 197, 198, 272, 276, 278, 412, 436], "modellist": 250, "modelnottrainederror": [244, 246, 247, 254, 258, 272, 274, 276, 278], "modif": [435, 439], "modifi": [177, 237, 282, 339, 340, 341, 436, 439, 457], "modul": [0, 1, 30, 83, 84, 92, 112, 129, 147, 157, 168, 171, 181, 184, 191, 202, 220, 221, 233, 242, 256, 263, 286, 289, 306, 310, 360, 380, 383, 434, 435, 436, 437], "modular": 437, "molecul": [53, 149, 333, 414, 448], "molecular": [334, 448], "moment": [241, 268, 437, 454], "monitor": [436, 444], "monkeypatch": 435, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 73, 239, 391, 393, 394, 408, 417, 430, 431, 436, 441, 452], "monte_carlo_run": [239, 408], "mordr": [143, 149, 392, 393, 394, 396, 397, 403, 408, 412, 414, 427, 428, 434, 436, 443, 448], "mordredcommun": 436, "mordredfingerprint": [143, 448], "more": [8, 10, 55, 60, 75, 149, 176, 177, 204, 206, 212, 219, 235, 282, 301, 304, 328, 352, 370, 394, 397, 409, 414, 415, 430, 433, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 448, 450, 451, 452, 453, 454, 457], "morgan": 448, "morgan_fp": [143, 436], "mors": 143, "morsefingerprint": 143, "most": [212, 235, 395, 417, 434, 437, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457], "motiv": 436, "move": [12, 436, 451], "mpl_toolkit": 409, "mplot3d": 409, "mqn": 143, "mqnsfingerprint": 143, "mse": 417, "mu": [165, 166], "much": [393, 447, 448], "multi": [123, 243, 244, 246, 247, 250, 254, 258, 272, 274, 276, 278, 420, 432, 434, 436, 438, 441, 455, 456], "multiarmedbandit": 417, "multipl": [12, 38, 114, 119, 124, 126, 238, 239, 244, 246, 247, 250, 254, 258, 272, 274, 276, 278, 341, 392, 393, 394, 403, 414, 417, 434, 436, 441, 443, 447, 453, 454, 455, 456], "multipli": 108, "multitask": 436, "must": [51, 114, 119, 124, 126, 206, 212, 237, 241, 324, 341, 388, 397, 407, 408, 414, 417, 419, 436, 437, 439, 440, 443, 444, 445, 447, 448, 452], "mutual": 452, "my_attribut": 437, "my_valu": 444, "mypi": [314, 325, 434, 436, 437], "mystr": 437, "n": [24, 244, 309, 329, 376, 392, 393, 394, 396, 397, 402, 403, 404, 405, 412, 414, 417, 419, 423, 424, 426], "n_arm": 417, "n_batches_don": 29, "n_cluster": [196, 197], "n_combin": 414, "n_combinations_actu": 414, "n_combinations_expect": 414, "n_compon": 195, "n_doe_iter": [235, 239, 241, 391, 392, 393, 394, 408, 409, 430, 431, 452], "n_duplic": 414, "n_estim": 412, "n_fits_don": 29, "n_grid_point": 420, "n_interrupted_campaign": 408, "n_iter": [399, 400, 402, 403, 404, 405, 417, 419], "n_mc_iter": [239, 241, 391, 393, 394, 408, 430, 431, 452], "n_mc_run": 417, "n_mc_sampl": 19, "n_output": [114, 119, 124, 126, 436], "n_permut": 414, "n_pis_ov": 408, "n_pis_over_requir": 408, "n_point": [204, 377], "n_raw_sampl": [188, 436, 449], "n_restart": [188, 436, 449], "n_row": 343, "n_sampl": 376, "n_task": 206, "n_task_param": 436, "n_training_data": 420, "n_wrong_sum": 414, "naiv": [180, 274, 282, 397, 436, 450], "naivehybridrecommend": 436, "naivehybridspacerecommend": [424, 436, 449], "nake": [304, 444], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 27, 42, 60, 128, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 152, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 218, 227, 239, 250, 254, 288, 290, 296, 308, 316, 322, 323, 324, 333, 334, 339, 344, 348, 349, 363, 368, 370, 382, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 415, 417, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 434, 436, 437, 439, 441, 443, 444, 447, 450, 451, 452, 453, 454, 455, 457], "name_or_abbr": [316, 323], "namedtupl": 417, "namespac": [189, 436, 437], "nan": [155, 244, 384, 386, 387, 388, 389, 419], "nativ": [411, 436, 453], "natur": [276, 393, 437, 443, 449, 451, 454], "navig": [434, 442], "nbase": 334, "nbviewer": 411, "nd": 434, "ndarrai": [12, 120, 298, 299, 300, 342, 351, 355, 366, 376, 409, 417, 420, 436, 452], "ne": 414, "nearli": 454, "necessari": [349, 407, 436, 437, 442, 443, 447, 448, 450, 452, 453], "necessarili": [439, 442, 443, 450, 455], "need": [24, 29, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 241, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 324, 348, 349, 392, 393, 394, 397, 402, 405, 407, 409, 411, 414, 417, 419, 430, 431, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 457], "neg": [14, 420, 436], "negat": [6, 43, 431, 436, 455], "neglig": 439, "neither": [8, 241, 341], "neq": 32, "nest": [370, 442, 456], "neural": 455, "neurip": 455, "neutral": 8, "never": 404, "nevertheless": [328, 435], "new": [29, 45, 46, 111, 176, 178, 204, 237, 253, 298, 299, 300, 308, 346, 347, 396, 408, 409, 426, 434, 436, 437, 442, 443, 453, 455], "new_measur": 446, "new_rec": 442, "newli": [434, 437, 444, 445, 455], "next": [29, 391, 407, 409, 414, 415, 420, 426, 430, 431, 434, 440, 441, 442, 449, 451], "ngboost": [276, 397, 436], "ngboostmodel": 412, "ngboostsurrog": [397, 412, 453], "nice": [409, 435], "nicknam": 333, "nintern": 419, "no_duplicates_constraint": 414, "no_grad": 409, "no_tl": 430, "nois": [235, 340, 341, 431, 436, 456], "noise_level": 341, "noise_perc": [235, 239, 452], "noise_ratio": 340, "noise_std": [430, 431], "noise_typ": 341, "noisi": [12, 13, 15, 343, 430, 434, 436, 455], "non": [59, 60, 86, 114, 119, 124, 126, 173, 175, 176, 177, 178, 180, 206, 235, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 322, 324, 328, 340, 377, 384, 385, 386, 388, 389, 414, 430, 434, 436, 439, 441, 445, 446, 450, 451], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 40, 45, 46, 55, 59, 60, 87, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 109, 111, 119, 124, 126, 128, 132, 145, 146, 151, 154, 155, 156, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 209, 212, 215, 218, 219, 222, 223, 225, 227, 235, 237, 239, 241, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 284, 285, 290, 296, 304, 305, 312, 313, 324, 334, 339, 344, 345, 346, 350, 355, 356, 368, 379, 384, 385, 386, 387, 388, 389, 397, 402, 403, 404, 405, 407, 408, 409, 411, 412, 419, 426, 450, 454, 456], "nonetheless": 455, "nonlinear": [35, 204], "nonpredict": [193, 195, 196, 197, 198, 200, 201], "nonpredictiverecommend": [198, 200, 201, 436], "nonzero": [32, 212, 436], "noqa": [402, 437], "nor": [8, 341, 433], "norecommenderslefterror": [176, 177], "noreturn": [180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 255], "normal": [164, 165, 166, 402, 404, 405, 419, 435, 439, 447, 450], "normaliz": 447, "normalprior": 436, "not_a_param": 412, "notabl": [436, 445, 453], "note": [32, 55, 206, 235, 239, 241, 253, 254, 339, 340, 341, 392, 393, 394, 397, 403, 407, 411, 412, 414, 419, 423, 424, 426, 427, 428, 433, 434, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 455], "notebook": 411, "noteworthi": 442, "noth": [14, 29, 32, 40, 42, 43, 49, 76, 119, 136, 149, 178, 180, 186, 188, 195, 196, 197, 198, 204, 206, 212, 244, 258, 272, 276, 278, 296, 439, 448], "notic": [407, 437, 439, 451, 453], "notimplementederror": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 120, 219, 222, 223, 241, 244, 246, 247, 253, 254, 258, 272, 274, 276, 278], "notwithstand": 439, "now": [391, 392, 393, 394, 396, 397, 402, 404, 407, 408, 409, 414, 415, 417, 419, 420, 422, 426, 427, 430, 431, 433, 434, 436, 455, 457], "np": [120, 399, 400, 402, 403, 404, 405, 409, 411, 412, 414, 415, 417, 420, 422, 423, 424, 426, 430, 431, 443, 448, 452, 457], "nrecommend": [396, 397, 419, 423, 424], "nu": 99, "num": [347, 359], "num_disc_1": [419, 442], "num_disc_2": 419, "num_experi": [235, 391, 392, 393, 394, 408, 430, 431], "num_fantasi": 10, "num_parameter_1": 405, "num_parameter_2": 405, "num_parameter_3": 405, "num_parameter_4": 405, "num_parameter_5": 405, "num_parameter_6": 405, "num_sampl": 104, "num_valu": [402, 403, 404, 405, 419, 426, 450], "number": [10, 14, 19, 29, 42, 104, 114, 119, 124, 126, 149, 170, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 235, 239, 241, 244, 343, 350, 355, 359, 371, 376, 377, 392, 393, 394, 399, 400, 402, 403, 404, 405, 409, 414, 417, 423, 430, 431, 434, 435, 436, 440, 442, 443, 444, 447, 448, 450, 451, 452, 457], "numer": [12, 29, 32, 33, 34, 35, 36, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 77, 131, 132, 133, 135, 136, 138, 145, 146, 149, 204, 212, 237, 296, 340, 341, 348, 377, 388, 389, 391, 396, 399, 414, 415, 434, 436, 443, 444, 446, 447, 448, 450, 452, 454], "numerical_measurements_must_be_within_toler": [29, 388, 436, 442], "numerical_onli": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57], "numericalcontinuousparamet": [43, 204, 391, 399, 400, 415, 420, 422, 424, 431, 450, 452, 456], "numericaldiscreteparamet": [212, 392, 393, 394, 396, 397, 399, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 419, 423, 424, 426, 427, 428, 430, 431, 434, 450, 451, 452, 456, 457], "numericaltarget": [237, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 408, 409, 411, 412, 419, 420, 423, 424, 426, 427, 428, 430, 431, 434, 436, 447, 451, 452, 456], "numericcontinu": 424, "numparam1": 405, "numparam2": 405, "numparam3": 405, "numparam4": 405, "numparam5": 405, "numparam6": 405, "numpi": [342, 351, 355, 361, 363, 399, 400, 402, 403, 404, 405, 409, 411, 412, 414, 415, 417, 420, 422, 423, 424, 426, 430, 431, 436, 443, 452, 457], "nuniqu": 414, "nyou": [423, 424], "o": [391, 392, 393, 394, 396, 397, 400, 402, 403, 404, 405, 408, 409, 412, 414, 417, 420, 430, 431, 434, 443, 444, 448], "o2": [392, 393, 394], "obj": [154, 155, 156, 223, 251, 252], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 87, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 119, 122, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 212, 213, 214, 223, 224, 227, 229, 244, 246, 247, 248, 250, 251, 252, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 311, 314, 322, 324, 341, 348, 349, 352, 355, 368, 379, 391, 396, 407, 408, 409, 411, 412, 417, 420, 422, 424, 427, 428, 435, 436, 437, 439, 442, 443, 445, 446, 449, 450, 452, 453, 454, 456, 457], "objective_json": 451, "oblig": 439, "observ": [233, 244, 246, 247, 254, 258, 272, 274, 276, 278, 417, 452, 454], "obsolet": 436, "obtain": [235, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 393, 409, 417, 420, 431, 434, 436, 442, 446, 447, 451, 455], "oc": [392, 393, 394, 396, 397], "oc1": [392, 393, 394], "occur": [54, 437], "occurr": 443, "octanol": [443, 448], "off": [8, 241, 329, 403, 434, 436, 443, 444, 447, 454], "offer": [324, 409, 414, 417, 423, 433, 434, 435, 439, 440, 445, 448, 449, 451, 452, 453, 455, 457], "offset": [43, 102], "offset_initial_valu": 102, "offset_prior": 102, "often": [415, 417, 435, 440, 443, 444, 445, 446, 448, 451, 457], "oftentim": [451, 452], "oh": [135, 140, 393, 403, 412, 417, 419, 426, 427, 428, 434, 450, 451], "ok": 419, "old": 455, "omit": [12, 186, 188, 239, 324, 407, 434, 450, 451], "onc": [239, 408, 448, 452], "one": [12, 19, 60, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 161, 170, 171, 176, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 206, 219, 237, 258, 282, 308, 309, 343, 370, 392, 393, 394, 397, 399, 414, 417, 419, 428, 430, 431, 433, 434, 435, 436, 437, 439, 441, 442, 443, 445, 447, 448, 450, 451, 452, 453, 454, 455], "onehot": 393, "ones": [206, 304, 348, 393, 424, 436, 441, 455], "ongo": [408, 455], "onli": [10, 29, 32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 87, 99, 114, 119, 124, 126, 149, 206, 212, 237, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 282, 304, 305, 324, 325, 328, 339, 348, 355, 370, 376, 377, 392, 397, 402, 403, 408, 409, 411, 412, 414, 423, 424, 431, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 457], "onlin": 417, "onnx": [253, 254, 362, 410, 434, 436, 453], "onnx_input_nam": [254, 411], "onnx_str": [254, 411], "onto": [12, 437], "open": [434, 437], "opentelemetri": [434, 436, 444], "oper": [40, 43, 52, 225, 244, 246, 247, 254, 258, 272, 274, 276, 278, 282, 342, 360, 399, 400, 404, 405, 414, 415, 435, 436, 441, 443, 444, 445, 446, 449, 451], "operator_convert": 411, "opposit": 443, "opt": [434, 444], "optim": [19, 29, 43, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 233, 235, 239, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 339, 393, 395, 396, 399, 400, 408, 409, 414, 417, 419, 424, 436, 438, 440, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455], "optimize_acqf": [43, 188], "optimize_acqf_": 43, "optimize_acqf_discret": 188, "optimize_acqf_mix": 188, "option": [29, 78, 83, 87, 98, 99, 100, 101, 102, 103, 104, 105, 109, 119, 124, 126, 132, 135, 136, 138, 146, 149, 151, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 225, 227, 235, 239, 241, 272, 276, 278, 284, 290, 296, 324, 334, 339, 344, 345, 346, 368, 394, 397, 411, 412, 417, 435, 436, 437, 440, 442, 443, 445, 446, 447, 450, 451, 452, 453, 454, 457], "oracl": 452, "orchestr": [437, 442], "order": [206, 212, 408, 417, 433, 434, 436, 437, 442, 443, 448, 451, 455], "ordin": 454, "org": [270, 314, 346, 411, 434, 439], "organ": 437, "origin": [24, 29, 308, 309, 319, 342, 426, 433, 436, 437, 439, 449, 451, 453], "orthogon": 437, "oserror": 435, "other": [51, 106, 204, 309, 392, 394, 396, 397, 399, 400, 408, 415, 417, 424, 430, 431, 433, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 455, 457], "otherwis": [43, 131, 132, 133, 135, 136, 138, 145, 146, 149, 439, 440, 445, 447, 455], "our": [391, 402, 404, 407, 408, 409, 412, 414, 415, 417, 420, 422, 423, 424, 427, 428, 430, 431, 434, 437, 440, 442, 443, 445, 451, 452], "out": [212, 419, 431, 434, 439, 444, 447, 452, 455], "out_par": 420, "out_y0": 420, "out_y1": 420, "outcom": [170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 393, 434, 448, 454], "output": [29, 109, 114, 119, 124, 126, 244, 246, 247, 254, 258, 272, 274, 276, 278, 341, 342, 343, 368, 391, 420, 430, 431, 435, 436, 438, 452, 456], "output_label": 342, "outputscal": 109, "outputscale_initial_valu": 109, "outputscale_prior": 109, "outsid": [29, 177, 282, 299, 300, 339, 419, 436, 451], "outstand": 439, "over": [29, 32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 414, 433, 436, 440, 442, 445, 455], "overal": [206, 411, 412, 414, 415, 417, 436, 437, 442, 447, 455], "overlap": [59, 60, 399, 400, 443], "overrid": [225, 227, 407, 436], "overridden": [407, 437], "overview": [434, 451], "overwritten": 424, "own": [180, 391, 415, 434, 435, 436, 437, 439, 443, 448], "owner": 439, "ownership": 439, "p": [391, 392, 393, 394, 396, 397, 399, 400, 407, 409, 423, 430, 431, 437, 445, 446, 453, 457], "p1": [450, 451, 452], "p1_json": 451, "p1_via_json": 451, "p2": [450, 451, 452], "p2_json": 451, "p2_via_json": 451, "p3c4": [392, 393, 394], "p_cont": 450, "p_disc": 450, "p_g1_amount": 415, "p_g2_amount": 415, "p_g3_amount": 415, "p_i": 32, "pack": 451, "packag": [87, 143, 302, 402, 404, 405, 435, 436, 437, 448, 452, 453, 457], "page": [411, 434, 436, 437, 445], "pair": [308, 420, 434, 448], "pam": 197, "pamclusteringrecommend": 449, "panda": [50, 213, 231, 232, 237, 333, 351, 391, 392, 393, 394, 399, 400, 402, 408, 409, 414, 415, 419, 420, 423, 424, 430, 431, 436, 443, 444, 448, 450, 451, 452], "panic": 433, "paper": 455, "paper_fil": 455, "parallel": 437, "param": [410, 412, 432], "param1": [450, 452], "param2": [450, 452], "param_bounds_comp": 436, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 63, 75, 79, 87, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 120, 124, 126, 131, 132, 135, 136, 138, 140, 141, 142, 143, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 208, 211, 212, 213, 214, 217, 218, 219, 225, 227, 229, 233, 235, 237, 239, 241, 244, 246, 247, 250, 254, 258, 261, 268, 270, 272, 274, 276, 278, 280, 282, 284, 285, 288, 290, 296, 298, 299, 300, 304, 305, 308, 309, 317, 318, 319, 322, 324, 327, 328, 329, 332, 333, 334, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 359, 364, 365, 366, 368, 370, 372, 373, 376, 377, 379, 388, 389, 391, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 417, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 434, 436, 437, 443, 444, 445, 447, 451, 452, 453, 455, 456], "parameter": [161, 162, 163, 164, 165, 166, 167], "parameter_json": 451, "parameter_nam": [204, 206, 212, 424], "parameterencod": [132, 140, 141, 143, 146], "parametr": 443, "parent": 437, "pareto": [124, 418, 432, 434, 436, 447], "paretoobject": [420, 434, 436, 456], "pars": [357, 436], "parser": 436, "part": [14, 24, 29, 38, 68, 181, 204, 206, 212, 339, 389, 412, 424, 427, 428, 430, 431, 436, 437, 439, 440, 441, 442, 443, 449, 450, 451, 457], "parti": [439, 452], "partial": [24, 408, 456], "particl": 455, "particular": [29, 212, 233, 407, 420, 424, 433, 434, 435, 437, 439, 442, 447, 448, 450, 451, 452], "particularli": [324, 442], "partit": [197, 239, 241, 436, 449, 452], "partitionexplain": [85, 88], "pass": [29, 36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 87, 149, 195, 196, 197, 198, 206, 212, 223, 258, 272, 276, 278, 343, 349, 414, 426, 431, 436, 437, 441, 445, 446, 447, 448, 451], "passthrough": [26, 115, 208, 262], "patch": 408, "patent": 439, "path": [368, 393, 414, 436, 437, 444, 457], "pattern": [143, 437, 455], "patternfingerprint": 143, "pd": [29, 237, 308, 309, 347, 391, 392, 393, 394, 399, 400, 402, 408, 409, 414, 415, 419, 420, 423, 424, 430, 431, 436, 443, 445, 448, 450, 451, 452], "pdf": 455, "peek": 451, "pend": [24, 29, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 434, 436, 456], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 436, 441, 442], "per": [235, 250, 392, 393, 394, 397, 414, 419, 423, 430, 431, 436, 448, 450, 452], "percent": [235, 439], "percentag": [188, 304, 341, 397, 402, 403, 404, 405, 414, 419, 426, 431, 449], "perf_count": 407, "perfectli": 451, "perform": [188, 235, 304, 348, 393, 402, 403, 404, 405, 409, 414, 427, 430, 431, 433, 434, 436, 437, 439, 440, 442, 444, 446, 448, 449, 452, 453, 455], "period": 100, "period_length_initial_valu": 100, "period_length_prior": 100, "periodickernel": 436, "perm_inv_constraint": 414, "perman": 456, "permiss": [434, 439], "permut": [51, 54, 55, 309, 436, 443], "permutation_invari": 51, "permutationexplain": [85, 88], "perpetu": 439, "persist": [436, 438, 442, 444, 451, 453], "perspect": 451, "pertain": 439, "pharmacophor": 143, "pharmacophorefingerprint": 143, "phase": [178, 415], "phaseagent1": 415, "phaseagent2": 415, "phcpho": [392, 393, 394, 396, 397], "phenomenon": 442, "philosophi": 451, "physic": [446, 452], "physiochemicalproperti": 143, "physiochemicalpropertiesfingerprint": 143, "pi": [7, 397, 408, 409], "pi_max": 409, "pi_per_iter": 409, "pi_required_fract": 408, "pi_threshold": 408, "pickl": 436, "pictur": 434, "piec": [417, 434, 442, 443], "piecewis": 101, "piecewisepolynomialkernel": 436, "pin": [24, 436], "pin_discret": 24, "pinned_part": 24, "pip": [434, 436, 437, 446, 457], "pipelin": [430, 431, 436, 437], "pival": [392, 393, 394, 396, 397], "pl": [36, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57], "place": [12, 32, 237, 339, 340, 341, 411, 412, 414, 417, 435, 436, 437, 439, 442, 445, 448, 451, 455], "placehold": 311, "plai": [442, 446, 454], "plain": 262, "plainkernelfactori": [94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 258], "plan": [253, 445, 448], "platt": 455, "pleas": [411, 412, 434, 440, 446, 449], "plenti": 446, "plot": [87, 89, 235, 392, 393, 394, 420, 430, 431, 436, 453, 455, 456], "plot_abegin_convert_pipelin": 362, "plot_ebegin_float_doubl": 362, "plot_typ": 87, "plotting_them": 368, "plt": [392, 394, 409, 420], "plu": [237, 434], "plugin": 436, "pm": [5, 397], "png": [392, 394], "po16": 448, "poetri": 436, "point": [6, 12, 14, 19, 24, 28, 29, 87, 146, 170, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 348, 361, 362, 374, 375, 376, 377, 381, 392, 396, 397, 408, 415, 420, 423, 424, 430, 431, 433, 434, 436, 438, 440, 441, 442, 445, 446, 447, 449, 450, 456, 457], "points_per_dim": [409, 423, 424, 430, 431], "polar": [36, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 214, 434, 436, 438, 456, 457], "poli": 409, "polici": 417, "polycollect": 409, "polym": 448, "polynomi": [101, 102], "polynomialkernel": 436, "polytop": 436, "popul": 414, "popular": [446, 448, 453], "posit": [12, 87, 324, 376, 436, 446, 447], "posixpath": 368, "possibl": [29, 151, 212, 213, 214, 233, 324, 339, 394, 408, 409, 414, 419, 434, 436, 439, 442, 443, 444, 445, 448, 449, 450, 451, 452, 454, 455, 457], "post": [447, 448], "post_hook": [324, 407, 408, 409], "posterior": [5, 6, 14, 16, 19, 29, 244, 246, 247, 250, 254, 258, 272, 274, 276, 278, 281, 397, 436, 440, 453], "posterior_mean": [244, 417], "posterior_mod": 244, "posteriorlist": 250, "posteriorstandarddevi": [417, 440], "postprocess": 333, "potassium": [392, 393, 394, 396, 397], "potenti": [206, 434, 435, 436, 437, 442, 446, 447, 450, 457], "power": [102, 439, 443, 449], "pph3": [392, 393, 394], "pr": [436, 437], "practic": [440, 446, 449], "pre": [151, 176, 261, 410, 435, 436, 437], "pre_hook": [324, 407], "precis": [55, 176, 204, 304, 350, 362, 363, 382, 436, 456], "precomput": 138, "predefin": [368, 442, 449], "predict": [29, 72, 198, 244, 246, 247, 254, 258, 272, 274, 276, 278, 434, 436, 440, 441, 442, 447, 452, 453, 455], "predictor": 280, "prefer": [29, 439, 445, 447, 451], "prefix": 334, "preliminari": 455, "prepar": [409, 437, 439, 457], "preprocess": 436, "presenc": 435, "present": [67, 87, 114, 119, 124, 126, 206, 308, 309, 324, 396, 417, 436, 443, 452, 457], "preset": [258, 265, 268, 270, 436], "pressur": [404, 411, 412, 426, 427, 428, 434, 443], "pretrain": [254, 410, 432], "pretti": 350, "pretty_print_df": [414, 436], "prevent": [222, 223, 324, 435, 436, 437], "previou": [176, 408, 409, 436, 442, 444, 455], "previous": [304, 392, 393, 394, 396, 404, 441, 442], "price": 448, "primari": 442, "primarili": 440, "principl": [414, 417, 453], "print": [237, 350, 370, 392, 393, 394, 396, 397, 399, 400, 404, 407, 411, 412, 414, 415, 417, 422, 423, 424, 426, 427, 428, 434, 436, 450, 457], "print_parameter_names_hook": 407, "printer_inst": 407, "prior": [98, 99, 100, 101, 102, 103, 104, 105, 109, 161, 162, 163, 164, 165, 166, 167, 244, 268, 405, 434, 435, 436], "priori": [443, 451, 455], "privat": [436, 438], "probabilist": 440, "probability_of_improv": 409, "probabilityofimprov": [408, 409], "probabl": [7, 17, 19, 397, 406, 408, 432, 436], "problem": [414, 415, 417, 430, 431, 436, 437, 442, 447, 451], "problemat": [328, 435, 448], "proce": [235, 396, 444], "procedur": [440, 455], "proceed": 455, "process": [29, 92, 256, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 347, 376, 397, 407, 414, 417, 430, 431, 436, 437, 440, 441, 442, 443, 444, 445, 447, 448, 451, 455], "prod": 405, "prod_constraint": 405, "prod_i": 447, "produc": [114, 119, 120, 124, 126, 237, 434, 436, 437, 444, 452], "product": [56, 108, 206, 212, 213, 214, 320, 401, 432, 434, 436, 439, 443, 445, 456, 457], "product_paramet": [212, 414, 450], "productkernel": 436, "programmat": 414, "progress": [29, 174, 409, 436, 445], "prohibit": 440, "project": [409, 434, 436, 444], "promin": 439, "promis": [408, 441], "proper": 436, "properli": [24, 419, 435, 450], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 87, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 122, 124, 126, 131, 132, 133, 135, 136, 138, 140, 141, 143, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 207, 211, 212, 244, 246, 247, 250, 254, 258, 261, 265, 268, 270, 272, 274, 276, 278, 288, 290, 293, 294, 296, 313, 314, 355, 375, 379, 436, 437, 443, 445], "proport": 431, "propos": 442, "protobuf": 436, "protocol": [169, 170, 248, 260, 328, 436], "prototyp": 438, "provid": [12, 14, 29, 43, 87, 91, 120, 138, 149, 151, 170, 176, 177, 180, 181, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 225, 229, 233, 235, 237, 239, 241, 244, 246, 247, 254, 258, 268, 270, 272, 274, 276, 278, 308, 320, 324, 336, 340, 341, 346, 349, 351, 376, 377, 391, 392, 393, 394, 407, 414, 420, 422, 423, 424, 427, 430, 431, 434, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "prune": [12, 13, 15], "prune_baselin": [12, 13, 15], "pstd": [6, 436, 440], "pubchem": 143, "pubchemfingerprint": 143, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 87, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 122, 124, 126, 131, 132, 133, 135, 136, 138, 140, 141, 143, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 207, 211, 212, 229, 244, 246, 247, 248, 250, 254, 258, 260, 261, 265, 268, 270, 272, 274, 276, 278, 288, 290, 293, 294, 296, 311, 313, 314, 355, 375, 379, 436, 437], "publicli": 439, "publish": 436, "pull": [417, 436], "punish": 8, "pure": [8, 10, 14, 171, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 206, 241, 253, 377, 423, 436, 456], "purerecommend": [173, 175, 176, 177, 178, 180, 186, 193, 436], "purpl": 420, "purpos": [14, 407, 408, 411, 417, 434, 435, 437, 439, 445, 451, 457], "push": 437, "put": [414, 417, 444, 448], "puzzl": 434, "py": [270, 402, 404, 405, 436, 444], "py310": [402, 404, 405], "py312": 437, "pyarrow": 436, "pydant": 436, "pydoclint": [436, 437], "pydocstyl": 437, "pylint": 436, "pymatgen": 435, "pypi": [434, 436], "pyplot": [392, 394, 409, 420], "pyproject": 436, "pytest": [436, 437], "python": [28, 314, 325, 393, 412, 427, 428, 434, 435, 436, 437, 442, 444, 451], "python3": [402, 404, 405], "python310": 435, "pytorch": 436, "pyupgrad": 436, "q": [101, 280, 281, 397, 441], "qei": [9, 397, 427, 428, 436], "qkg": [10, 436], "qlogei": [11, 397, 436], "qlogexpectedimprov": 397, "qlognehvi": 12, "qlognei": [13, 436], "qlognoisyexpectedhypervolumeimprov": [436, 447], "qnegintegratedposteriorvari": 440, "qnei": [15, 436], "qnipv": [14, 436, 440], "qpi": [17, 397], "qposteriorstandarddevi": 440, "qpstd": [16, 436, 440], "qsimpleregret": 19, "qsr": [18, 436], "qt": 19, "qthompsonsampl": [417, 436], "quadrat": [105, 391, 420], "qualiti": 437, "quantif": 455, "quantifi": [417, 440, 455], "quantiti": [29, 53, 444, 446, 447, 453, 457], "quantum": 138, "qucb": [20, 397, 436, 440], "queri": [171, 181, 233, 235, 237, 420, 434, 442, 444, 445, 452], "question": [437, 442, 455], "qupperconfidencebound": 440, "qvarucb": 436, "r": [392, 393, 394, 396, 397], "radial": 103, "radiu": [143, 436, 448], "rais": [12, 14, 29, 36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 87, 91, 120, 128, 151, 155, 156, 176, 177, 186, 188, 204, 206, 212, 218, 219, 222, 223, 235, 237, 241, 244, 246, 247, 253, 254, 255, 258, 272, 274, 276, 278, 285, 309, 322, 324, 327, 329, 332, 336, 337, 339, 340, 341, 343, 348, 349, 370, 376, 377, 388, 389, 407, 408, 409, 424, 435, 436, 437, 441, 449], "rand": 411, "random": [14, 104, 204, 206, 235, 237, 239, 277, 278, 339, 375, 376, 377, 391, 392, 393, 394, 397, 408, 409, 411, 415, 417, 420, 431, 434, 436, 440, 448, 449, 452, 457], "random_campaign": 391, "random_forest": [278, 397], "random_se": [235, 239, 408, 452], "randomforestmodel": 412, "randomforestsurrog": [397, 436, 453], "randomli": [201, 391, 393, 420, 440, 446, 449], "randomrecommend": [391, 392, 393, 394, 397, 402, 403, 404, 405, 407, 408, 409, 415, 417, 419, 436, 441, 449], "rang": [131, 132, 133, 135, 136, 138, 145, 146, 149, 288, 339, 340, 391, 399, 400, 402, 403, 404, 405, 409, 414, 417, 419, 422, 423, 424, 431, 434, 443, 450, 451, 452, 454, 457], "rank": 454, "rare": 436, "rastrigin": [399, 400, 423, 424], "rate": [162, 244, 417], "rather": [426, 435, 440, 451], "ration": 105, "ravel": [420, 430, 431], "raw": [188, 451], "rbf": 103, "rbfkernel": 436, "rdf": 143, "rdffingerprint": 143, "rdkit": [143, 402, 404, 405, 436, 443, 448], "rdkit2ddescriptor": [143, 393, 402, 404, 405, 436], "rdkit2ddescriptorsfingerprint": 143, "rdkitfingerprint": 143, "re": [408, 423, 424, 437, 449], "reach": [298, 300, 419], "reachabl": 444, "reactant": [446, 448], "reaction": [393, 396, 434, 443, 446, 448, 455], "reactor": [441, 455], "reactora": 455, "reactorb": 455, "reactorc": 455, "read": [138, 206, 368, 393, 396, 434, 436, 437], "read_excel": [392, 393, 394, 408], "readabl": [211, 350, 359, 426, 436, 438, 439, 451], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 235, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 437, 441], "readm": [436, 437], "reagent": [443, 448], "real": [355, 434, 442, 454], "realist": 452, "realiz": [233, 452], "reason": [40, 195, 196, 197, 198, 393, 423, 436, 439, 440, 441, 443, 444, 448, 452], "reassembl": 451, "rebas": 437, "rec": [402, 403, 404, 405, 419, 441, 442], "rec_finish": 441, "rec_next": 441, "rec_par": 420, "rec_pend": 441, "rec_y0": 420, "rec_y1": 420, "receiv": [439, 444, 451], "recip": 437, "recipi": 439, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 68, 74, 75, 87, 136, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 233, 235, 248, 250, 253, 304, 339, 341, 343, 391, 392, 393, 394, 395, 399, 400, 402, 403, 404, 405, 407, 408, 409, 415, 417, 419, 420, 427, 428, 430, 431, 432, 433, 434, 436, 437, 440, 444, 446, 448, 452, 453, 455, 456, 457], "recommendation_orig": 426, "recommendation_recr": 426, "recommended_arm_idx": 417, "recommender_with_hook": 408, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 87, 173, 175, 176, 177, 178, 183, 248, 250, 407, 409, 433, 436, 441], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 204, 206, 212, 229, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 355, 434, 442, 444, 451], "record": [29, 304, 305, 434, 444, 455], "recreat": [265, 426, 451], "recreate_model": 412, "recurs": [173, 175, 176, 177, 178, 317, 318], "red": 420, "redesign": 436, "redistribut": 439, "reduc": [149, 409, 417, 430, 431, 445, 448], "reduct": 456, "ref": 434, "ref_point": 12, "refactor": 436, "refer": [12, 233, 270, 323, 339, 348, 362, 392, 393, 394, 397, 399, 400, 402, 403, 404, 405, 407, 409, 411, 412, 414, 419, 423, 424, 426, 435, 436, 442, 446, 447, 448, 449, 450, 451, 452, 453, 455], "referenc": 437, "refin": [408, 434, 436, 442, 445], "reflect": [180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 409, 436, 437, 440, 443, 448], "regard": [32, 38, 399, 400, 437, 439], "regardless": 453, "regim": [436, 446], "regist": [324, 406, 408], "register_custom_architectur": 436, "register_hook": [406, 407, 408, 409, 436], "registr": 436, "regress": 272, "regressor": 411, "regret": [18, 19], "regroup": 436, "regular": [19, 282, 422, 435, 436, 441, 455], "reinstal": 434, "rel": [12, 235, 340, 443, 447], "relat": [53, 114, 119, 121, 124, 126, 139, 206, 224, 292, 307, 424, 430, 431, 433, 434, 436, 442, 443, 444, 455], "relationship": [430, 431, 434, 437, 447, 455], "relative_perc": 341, "releas": [434, 436], "relev": [51, 87, 237, 348, 349, 403, 414, 436, 437, 442, 443, 445, 455, 457], "reli": [435, 436, 447], "reliabl": 448, "remain": [54, 178, 241, 299, 391, 397, 402, 403, 404, 405, 414, 417, 419, 424, 426, 430, 431, 439, 448, 451, 452], "remain_switch": [178, 436], "remaind": 377, "remind": 436, "remot": 437, "remov": [50, 53, 54, 206, 212, 414, 437, 443, 450], "renam": [393, 430, 431, 436, 437], "render": [87, 411], "reoccur": 455, "reorder": 436, "reorgan": 436, "repeat": [417, 436, 437, 441, 442], "repetit": [239, 397, 408], "rephras": 443, "replac": [423, 424, 436, 437], "replic": [244, 246, 247, 250, 254, 258, 272, 274, 276, 278, 436, 451, 456], "repo": 436, "report": [170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 417, 435], "repositori": [393, 434, 437], "repr": 411, "repres": [12, 36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 107, 108, 138, 206, 241, 244, 246, 247, 250, 254, 258, 272, 274, 276, 278, 336, 351, 355, 359, 376, 391, 414, 415, 417, 420, 427, 428, 434, 436, 439, 442, 447, 448, 450, 452, 457], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 212, 229, 244, 246, 247, 248, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 329, 331, 336, 339, 350, 355, 370, 402, 403, 404, 405, 411, 413, 419, 426, 436, 441, 442, 448, 451, 452, 456, 457], "reproduc": [408, 417, 420, 436, 439, 456], "reproduct": 439, "request": [29, 74, 75, 120, 176, 177, 178, 219, 261, 302, 343, 376, 377, 420, 433, 436, 441, 442, 445], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 42, 43, 49, 73, 178, 212, 285, 324, 396, 407, 408, 411, 415, 417, 419, 423, 427, 433, 434, 435, 436, 437, 439, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457], "rerun": 411, "reserv": [434, 437], "reset_index": 430, "reshap": 420, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 403, 405, 414, 451], "resolv": [251, 333], "resort": [282, 437, 451, 457], "resource_track": 435, "resp": [207, 394, 424], "respect": [29, 188, 207, 235, 239, 303, 308, 339, 414, 415, 437, 442, 443, 445, 446, 447, 451, 452, 453, 454, 457], "respond": 433, "respons": [173, 175, 176, 177, 178, 439, 442, 449], "restart": [176, 188], "restor": 451, "restr": 19, "restrain": 448, "restrict": [206, 212, 233, 239, 241, 402, 415, 436, 445, 452, 455, 456], "result": [10, 12, 29, 149, 212, 235, 244, 246, 247, 254, 258, 272, 274, 276, 278, 339, 347, 392, 393, 394, 396, 411, 412, 414, 415, 417, 419, 420, 422, 430, 431, 434, 436, 438, 439, 440, 442, 443, 444, 446, 448, 449, 451, 452, 455, 456, 457], "result_baselin": [430, 431], "result_fract": 431, "results_interrupt": 408, "results_uninterrupt": 408, "retain": [439, 443], "retrain": [253, 254, 453], "retriev": [206, 233, 316, 317, 318, 332, 437, 452], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 87, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 114, 115, 117, 119, 120, 124, 126, 128, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 152, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 190, 193, 195, 196, 197, 198, 200, 201, 204, 206, 208, 209, 212, 213, 214, 215, 217, 218, 219, 222, 223, 225, 226, 227, 229, 231, 232, 235, 237, 239, 241, 244, 246, 247, 248, 250, 251, 252, 254, 255, 258, 261, 262, 266, 272, 274, 276, 278, 280, 281, 282, 284, 285, 288, 290, 296, 298, 299, 300, 302, 303, 304, 305, 308, 309, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 359, 364, 365, 366, 368, 369, 370, 376, 377, 379, 384, 385, 386, 387, 388, 389, 391, 402, 408, 409, 411, 414, 417, 420, 430, 436, 442, 443, 452, 453, 457], "return_std": 411, "reus": [178, 436], "reuse_last": 176, "reveal": [409, 415, 431], "review": 437, "revis": [436, 439], "reward": [8, 417], "rework": 436, "rewrit": 436, "rff": 104, "rffkernel": 436, "rh": [43, 45, 46, 399, 400, 415, 443], "right": [43, 167, 348, 355, 392, 394, 403, 417, 434, 435, 437, 439, 443, 445, 447, 448, 454], "right_df": 348, "rihana": 438, "rim": 438, "risk": [8, 435, 439, 442], "roam": 435, "robust": [434, 436, 455], "robustli": 282, "role": [436, 437, 442, 446, 447, 452, 454, 456], "room": [409, 442], "root": [393, 434, 437, 443], "round": [350, 399, 411, 412, 443], "roundtrip": [436, 451], "rout": 451, "row": [12, 36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 120, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 237, 304, 308, 309, 340, 343, 347, 348, 350, 366, 392, 394, 402, 403, 404, 405, 414, 415, 419, 426, 436, 442, 445, 450, 452], "rowei": 455, "roya": 438, "royalti": 439, "rq": 105, "rqkernel": 436, "ruff": [436, 437], "rule": [407, 436], "run": [235, 239, 392, 393, 394, 408, 409, 430, 431, 434, 435, 436, 437, 442, 445, 451, 452, 457], "run_full_initial_data": 392, "run_impute_mod": 394, "runner": [402, 404, 405], "runtim": [362, 435], "runtimeerror": [29, 176, 407], "rv": 417, "s3": 436, "s41586": [270, 346], "safe": [436, 437, 442], "safeti": 324, "sai": 443, "said": 437, "sake": 414, "same": [53, 128, 178, 212, 218, 237, 244, 246, 247, 254, 258, 272, 274, 276, 278, 319, 397, 408, 411, 412, 414, 417, 420, 426, 435, 436, 443, 444, 445, 451, 452, 453, 455], "sampl": [10, 14, 19, 42, 188, 200, 201, 204, 305, 374, 375, 376, 377, 392, 397, 402, 403, 404, 405, 417, 419, 420, 422, 426, 431, 434, 436, 438, 446, 456], "sample_from_full_factori": [204, 436], "sample_inactive_paramet": 42, "sample_uniform": [204, 420, 422, 436, 452], "sampler": [397, 402, 403, 404, 405, 419, 426], "samples_full_factori": [204, 436], "samples_random": [204, 436], "sampling_algorithm": [375, 440], "sampling_fract": [14, 440], "sampling_method": [14, 440], "sampling_n_point": [14, 440], "sampling_percentag": [188, 449], "satisfi": [38, 39, 40, 212, 399, 400, 414], "save": [368, 392, 394, 411, 436, 452], "savefig": [392, 394, 420], "sca": 420, "scalar": [119, 419, 434, 436, 447, 451], "scale": [109, 163, 164, 165, 166, 167, 379, 419, 420, 430, 436, 440, 447], "scalekernel": 436, "scaler": 436, "scatter": [87, 89], "scenario": [241, 391, 392, 393, 394, 408, 414, 430, 431, 441, 443, 447, 455, 456, 457], "scene": [447, 452, 453], "schema": 442, "schembl15068049": [392, 393, 394], "scheme": 436, "scienc": [434, 438], "scientif": [436, 455], "scikit": [143, 434, 436, 438, 448], "scipi": [366, 409, 417, 436], "scope": 391, "screen": [319, 455], "script": [333, 435, 436, 444, 457], "seaborn": [391, 392, 393, 394, 408, 430, 431], "seamlessli": 451, "search": [14, 24, 29, 36, 50, 53, 63, 68, 75, 79, 131, 132, 133, 135, 136, 138, 145, 146, 149, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 216, 235, 239, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 304, 348, 349, 391, 394, 396, 398, 401, 402, 403, 404, 405, 407, 408, 409, 417, 419, 421, 426, 431, 436, 438, 441, 442, 443, 444, 445, 446, 449, 451, 452, 456], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 87, 131, 132, 133, 135, 136, 138, 145, 146, 149, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 207, 211, 212, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 391, 393, 396, 407, 408, 409, 411, 412, 414, 415, 417, 420, 422, 426, 427, 428, 430, 432, 434, 436, 442, 443, 444, 445, 446, 448, 450, 451, 452, 457], "searchspace1": 422, "searchspace2": 422, "searchspace3": 422, "searchspace_ful": 445, "searchspace_json": 451, "searchspace_reduc": 445, "searchspacetyp": [180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 206, 397, 402, 403, 404, 405, 408, 409, 419, 426, 450], "secfp": 143, "secfpfingerprint": 143, "second": [347, 364, 366, 411, 412, 419, 420, 428, 430, 443, 444, 446], "secondari": [434, 444], "section": [434, 436, 437, 439, 451], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 32, 33, 34, 35, 36, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 87, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 157, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 211, 212, 235, 239, 241, 244, 246, 247, 248, 250, 254, 258, 261, 268, 270, 272, 274, 276, 278, 288, 290, 296, 301, 322, 328, 341, 347, 352, 355, 379, 392, 393, 394, 399, 400, 407, 408, 412, 415, 424, 433, 434, 437, 442, 444, 445, 446, 447, 448, 451, 452, 456], "seed": [235, 239, 372, 373, 408, 409, 417, 420, 434, 436, 457], "seek": [419, 447], "seem": [362, 428, 435], "seen": 440, "select": [6, 38, 39, 40, 65, 69, 73, 173, 175, 176, 177, 178, 181, 198, 200, 244, 246, 247, 254, 258, 272, 274, 276, 278, 299, 347, 376, 397, 403, 404, 414, 415, 417, 424, 434, 436, 440, 442, 443, 446, 448, 449, 451, 453], "select_recommend": [173, 175, 176, 177, 178, 436], "self": [324, 337, 384, 385, 386, 387, 407, 408, 409, 417, 437], "sell": 439, "semant": [436, 451], "sens": [55, 124, 324, 328, 347, 443, 448, 453], "sent": 439, "sentinel": [312, 313], "separ": [239, 241, 282, 322, 379, 380, 409, 433, 436, 437, 439, 451], "sequenc": [29, 43, 119, 124, 155, 176, 177, 204, 206, 212, 213, 214, 217, 304, 308, 309, 324, 325, 334, 337, 342, 348, 349, 352, 366, 447, 449], "sequenti": [175, 176, 177, 178, 188, 397, 402, 403, 404, 405, 419, 426, 436, 449], "sequential_continu": [188, 436, 449], "sequential_greedy_x": 436, "sequentialgreedyrecommend": 436, "sequentialmetarecommend": [177, 449], "sequentialstrategi": 436, "seri": [29, 38, 39, 40, 50, 132, 135, 136, 138, 146, 149, 288, 290, 296, 402, 414, 436, 443, 445], "serial": [177, 212, 229, 305, 411, 432, 435, 436, 437, 443, 449, 456], "serializ": [434, 443, 449], "serialize_datafram": 451, "serialized_df": 231, "serializetostr": 411, "serialmixin": [22, 29, 33, 38, 96, 114, 133, 159, 173, 204, 206, 212, 247, 250, 261, 288, 290, 296, 355, 436], "serv": [241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 348, 430, 431, 442, 443, 448], "servic": 439, "session": [254, 444, 451], "set": [12, 29, 32, 40, 42, 53, 55, 59, 60, 87, 91, 149, 170, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 235, 239, 265, 303, 339, 346, 347, 368, 372, 373, 392, 393, 394, 395, 397, 402, 404, 407, 412, 413, 414, 415, 417, 419, 424, 433, 434, 436, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 457], "set_box_aspect": 409, "set_dash": 408, "set_random_se": [409, 417, 420, 457], "set_size_inch": [392, 394], "set_x_pend": 24, "set_xlabel": 409, "set_xtick": 409, "set_xticklabel": 409, "set_ylabel": 409, "set_ylim": 409, "set_zlabel": 409, "setpoint": 146, "setup": [235, 408, 443, 452, 457], "sever": [151, 171, 391, 393, 397, 408, 411, 417, 419, 422, 431, 434, 436, 437, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 455, 457], "sh": 446, "shall": [176, 341, 439, 447], "shap": [87, 434, 436, 438, 453, 456], "shap_valu": 453, "shape": [19, 204, 211, 294, 298, 300, 376, 420, 450, 457], "shapinsight": [85, 86, 88, 89, 436, 446], "shaplei": 87, "share": [244, 246, 247, 254, 258, 272, 274, 276, 278, 436, 439, 455], "shield": [270, 346, 393, 434, 448], "shift": 430, "shifted_hartmann": 430, "ship": [380, 444, 451], "shm": 435, "short": 437, "shortcut": [212, 450, 451], "shorten": [436, 437], "shot": 455, "should": [29, 51, 87, 136, 149, 178, 227, 239, 293, 308, 309, 339, 341, 345, 346, 350, 354, 355, 356, 364, 368, 402, 404, 408, 411, 414, 415, 424, 428, 434, 436, 437, 441, 442, 443, 450, 452, 453, 455, 457], "show": [87, 392, 393, 394, 396, 397, 402, 403, 404, 411, 412, 414, 417, 424, 426, 427, 428, 430, 431, 443, 446], "showcas": 449, "shown": [408, 417, 431, 436], "shrink": 409, "shutdown": 435, "side": [43, 299, 436], "sigma": [164, 165, 166, 167, 298, 419, 438], "signal": [62, 447], "signatur": [81, 285, 322, 324, 409, 436, 437, 443, 451], "significantli": [212, 417, 430, 431], "silenc": 437, "silent": [436, 443], "similar": [177, 435, 443, 444, 446, 448, 449, 450, 451, 455, 457], "similarli": [420, 448], "simpl": [18, 19, 314, 393, 407, 408, 415, 434, 436, 449, 452, 454, 455], "simpler": [437, 451], "simplest": [450, 453], "simplex": [212, 456], "simplex_paramet": [212, 414, 450], "simpli": [328, 407, 408, 437, 443, 445, 447, 448, 449, 450, 451, 454, 455], "simplic": 324, "simplifi": 437, "simul": [76, 341, 404, 409, 434, 436, 455, 456], "simulate_experi": [239, 241, 452], "simulate_scenario": [241, 391, 392, 393, 394, 408, 430, 431, 452], "simulate_transfer_learn": [430, 452], "simulationresult": 417, "simultan": [447, 453], "sinc": [55, 206, 253, 324, 392, 399, 400, 412, 423, 426, 427, 428, 430, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 451, 452, 453, 455], "singer": 455, "singl": [19, 29, 38, 51, 87, 111, 126, 204, 206, 212, 235, 244, 246, 247, 250, 254, 258, 272, 274, 276, 278, 288, 290, 296, 355, 363, 370, 376, 382, 392, 393, 394, 403, 408, 414, 419, 430, 431, 434, 436, 443, 444, 445, 446, 447, 448, 450, 453, 455, 456], "single_lin": 370, "single_y0": 420, "single_y1": 420, "singledispatch": 357, "singletargetobject": [29, 288, 290, 296, 392, 393, 394, 396, 397, 402, 403, 404, 405, 408, 411, 412, 426, 427, 428, 434, 436, 453, 456], "site": [402, 404, 405, 435], "situat": [402, 404, 414, 435, 437, 441, 443, 447, 448, 451, 452, 455], "six": [414, 415], "size": [19, 94, 95, 96, 99, 101, 103, 104, 105, 176, 178, 206, 211, 212, 305, 359, 409, 411, 417, 423, 424, 430, 431, 442, 451, 452, 455, 457], "sk": 411, "skeleton": 436, "skfp": 143, "skicit": 436, "skin": 452, "skip": [209, 215, 436, 442], "skl2onnx": 411, "sklearn": [198, 362, 411, 435], "sklearnclusteringrecommend": [195, 196, 197, 436, 441], "slightli": [233, 393, 414, 452], "slot": [413, 417, 432, 436, 443], "slot1_amount": 414, "slot1_label": 414, "slot2_amount": 414, "slot2_label": 414, "slot3_amount": 414, "slot3_label": 414, "slow": [402, 404, 405, 450], "slowest": 436, "small": [306, 310, 399, 414, 430, 431, 436, 440, 448], "smaller": [29, 417, 442, 455], "smallest": [204, 348, 450], "smart": 434, "smartli": 414, "smile": [149, 331, 333, 334, 434, 448], "smoke": 436, "smoke_test": [368, 391, 392, 393, 394, 400, 402, 403, 405, 408, 409, 417, 420, 430, 431], "smooth": [99, 101, 167], "smoothedboxprior": 436, "smoother": 99, "sn": [391, 392, 393, 394, 408, 430, 431], "snippet": 444, "so": [29, 235, 253, 347, 394, 408, 414, 417, 423, 424, 434, 435, 442, 443, 444, 445, 447, 448, 449, 451, 454], "softwar": [434, 439], "sola": 438, "sole": 439, "solut": [442, 447, 450, 451, 455], "solv": [253, 403, 404, 414, 417], "solv_rdkit2ddesc": 404, "solvent": [392, 393, 394, 396, 397, 402, 403, 404, 405, 408, 412, 414, 415, 427, 428, 434, 443, 448], "solvent1": [414, 415], "solvent2": [414, 415], "solvent3": 414, "solvent4": 414, "solvent5": 414, "solvent8": 414, "solvent9": 414, "solvent_1": 443, "solvent_2": 443, "solvent_3": 443, "solvent_data": 408, "solvent_encoding1": 443, "solvent_encoding2": 443, "solvent_mordred_enc": 443, "solvent_rdkit2dd": [402, 405], "solvent_rdkit_enc": 443, "solvent_smil": 408, "solver": 452, "some": [51, 362, 392, 393, 394, 397, 402, 403, 404, 405, 408, 409, 411, 412, 414, 415, 420, 422, 423, 424, 426, 431, 441, 443, 444, 448, 449, 451, 452, 453, 457], "someth": [79, 428], "sometim": [443, 452], "somewhat": 444, "somewher": 442, "soon": [434, 442, 449], "sophist": [436, 445, 451], "sort": 152, "sourabh": 438, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 114, 115, 117, 119, 120, 122, 124, 126, 128, 131, 132, 133, 135, 136, 138, 140, 141, 142, 143, 145, 146, 149, 151, 152, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 190, 193, 195, 196, 197, 198, 200, 201, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 225, 226, 227, 229, 231, 232, 235, 237, 239, 241, 244, 246, 247, 248, 250, 251, 252, 254, 255, 258, 260, 261, 262, 265, 266, 268, 270, 272, 274, 276, 278, 280, 281, 282, 284, 285, 288, 290, 293, 294, 296, 298, 299, 300, 302, 303, 304, 305, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 364, 365, 366, 368, 369, 370, 372, 373, 375, 376, 377, 379, 387, 388, 389, 434, 435, 436, 437, 439], "space": [10, 14, 23, 24, 29, 36, 43, 50, 53, 63, 68, 71, 75, 79, 131, 132, 133, 135, 136, 138, 145, 146, 149, 170, 179, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 215, 216, 235, 239, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 304, 348, 376, 391, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 417, 419, 420, 421, 423, 426, 431, 432, 436, 438, 441, 443, 444, 445, 446, 448, 449, 451, 452, 456], "span": [131, 132, 133, 135, 136, 138, 145, 146, 149, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 304, 407, 417, 422, 446], "speak": 455, "spec": [209, 215, 226], "special": [178, 434, 435, 439, 440, 445, 455, 457], "specif": [92, 151, 157, 198, 206, 209, 222, 239, 282, 316, 388, 407, 408, 423, 434, 437, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 51, 80, 91, 138, 149, 151, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 225, 226, 235, 237, 239, 248, 298, 299, 300, 308, 323, 332, 339, 342, 348, 349, 376, 377, 393, 397, 399, 411, 412, 417, 419, 430, 434, 435, 436, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455], "speed": [212, 402, 404, 405, 430, 431, 444, 450], "speed_fast": 450, "speed_norm": 450, "speed_slow": 450, "speedup": [436, 455], "spell": 437, "spellcheck": 436, "sphinx": [436, 437], "split": [180, 441], "sporad": 436, "spread": 454, "sqrt": 443, "squar": [417, 420, 443], "squash": 437, "stabil": [436, 444], "stabl": [92, 157, 301], "stage": [442, 443, 451], "stand": 436, "standard": [6, 16, 282, 411, 436, 448], "star": 414, "start": [235, 391, 407, 408, 409, 415, 417, 420, 435, 436, 441, 448, 449, 451, 452, 455], "startup": 436, "stat": [302, 409, 415, 417], "state": [173, 175, 176, 177, 178, 408, 414, 433, 436, 439, 442, 445], "stateless": [417, 433, 436, 445], "statement": [350, 423, 434, 439], "static": [12, 206, 212, 258, 434, 437, 455], "statist": [305, 431, 434, 444], "statu": 442, "std_threshold": 282, "stem": [435, 455], "step": [209, 215, 235, 414, 417, 433, 434, 437, 442, 447, 451, 453], "sterl": 438, "steven": 393, "still": [151, 339, 408, 417, 441, 443, 444, 446, 448, 453, 455, 457], "stop": [406, 432, 436, 437], "stop_on_pi": 408, "stoppag": 439, "storag": [442, 444, 451], "store": [24, 133, 282, 288, 409, 414, 417, 434, 436, 442, 457], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 87, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 120, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 186, 188, 195, 196, 197, 198, 204, 206, 211, 212, 225, 229, 239, 241, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 291, 296, 298, 299, 300, 302, 305, 308, 309, 316, 322, 323, 329, 331, 333, 334, 336, 339, 342, 345, 346, 350, 355, 359, 365, 368, 369, 370, 412, 417, 427, 428, 430, 431], "straightforward": [454, 455], "strategi": [14, 188, 206, 233, 391, 417, 436], "stream": [320, 436, 444], "streamingsequentialmetarecommend": [176, 449], "streamingsequentialstrategi": 436, "streamlin": 437, "streamlit": [434, 436], "streibel": 438, "strict": 322, "strictli": [412, 427, 428], "stride": 399, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 148, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 204, 206, 212, 229, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 329, 333, 334, 336, 337, 345, 355, 370, 411, 426, 436, 442, 443, 448, 454, 456], "strip": [235, 394], "strong": 436, "strongli": 442, "strtobool": [436, 444], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 47, 117, 225, 434, 435, 436, 437, 438, 442, 448, 451], "studi": [171, 434, 446, 449, 456], "style": [111, 430, 436, 437], "sub": [198, 436, 446, 451], "subclass": [80, 225, 316, 318, 328, 397, 436, 437, 449, 451], "subfold": 444, "subgraph": 448, "subgroup": 415, "subject": 439, "sublicens": 439, "submiss": [436, 439], "submit": [24, 302, 304, 434, 437, 439], "subpackag": [436, 437, 452], "subplot": 420, "subselectioncondit": [403, 404, 436, 445, 456], "subsequ": [178, 206, 212, 239, 333, 433, 439, 442, 451, 453], "subset": [29, 114, 119, 124, 126, 149, 206, 319, 349, 376, 442, 443, 445], "subspac": [24, 180, 188, 203, 204, 206, 208, 210, 212, 399, 402, 403, 404, 405, 419, 422, 424, 426, 436, 449, 451, 456, 457], "subspace_json": 451, "subspacecontinu": [29, 131, 145, 206, 208, 422, 436, 450], "subspacediscret": [29, 132, 135, 136, 138, 146, 149, 206, 208, 211, 402, 403, 404, 405, 414, 419, 426, 436, 450, 451, 457], "substanc": [143, 149, 332, 393, 396, 402, 404, 405, 415, 436, 443, 446, 448, 455], "substance_12": 443, "substance_3": 443, "substance_43": 443, "substance_data": 436, "substance_encod": 393, "substanceencod": [149, 332, 334, 402, 403, 404, 405, 436, 448], "substanceparamet": [392, 393, 394, 396, 397, 402, 403, 404, 405, 408, 412, 414, 427, 428, 434, 436, 443, 444, 446, 450, 456], "substanti": [149, 457], "substrat": 455, "subtyp": 451, "success": [290, 376, 417, 451], "success_valu": 290, "suffic": 437, "suffici": [408, 450, 451], "suggest": [446, 452], "suit": 437, "suitabl": [198, 212, 235, 329, 437, 440, 442, 448, 452, 453, 455], "sum": [57, 107, 212, 391, 401, 402, 403, 404, 408, 414, 415, 417, 420, 432, 443, 447, 450], "sum_": [443, 447], "sum_constraint": 414, "sum_constraint_1": 405, "sum_constraint_2": 405, "sum_toler": 414, "summar": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 131, 132, 133, 135, 136, 138, 145, 146, 149, 288, 290, 296], "summari": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 131, 132, 133, 135, 136, 138, 145, 146, 149, 288, 290, 296, 436, 437], "superior": 440, "supersed": 439, "support": [10, 85, 86, 87, 88, 89, 177, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 362, 397, 402, 403, 404, 405, 408, 409, 411, 414, 419, 426, 434, 436, 437, 438, 439, 443, 446, 448, 449, 450, 452, 453], "supports_batch": 436, "supports_multi_output": [244, 246, 247, 254, 258, 272, 274, 276, 278, 436, 453], "supports_pending_experi": 436, "supports_transfer_learn": [244, 246, 247, 254, 258, 272, 274, 276, 278, 453], "suppos": [304, 443], "sure": [414, 422, 434, 437], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 69, 70, 87, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 186, 188, 195, 196, 197, 198, 244, 246, 248, 250, 254, 258, 260, 261, 265, 268, 270, 272, 274, 276, 278, 402, 403, 404, 405, 409, 417, 419, 426, 432, 434, 436, 438, 443, 446, 448, 449, 455, 456], "surrogate_model": [186, 188, 397, 409, 411, 412, 417, 427, 428, 436], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 87, 186, 188, 247, 250, 436], "svg": [368, 420], "sw": 403, "swiss": 438, "switch": [51, 174, 177, 178, 282, 397, 402, 403, 404, 405, 417, 419, 426, 434, 436, 443, 449], "switch1": 403, "switch2": 403, "switch2_left": 403, "switch2_right": 403, "switch_1": 443, "switch_2": 443, "switch_aft": [178, 427, 428, 449], "switzerland": 438, "sy": 435, "symmetri": 443, "syntax": [434, 436], "synthet": [399, 400, 409, 420, 430, 431], "system": [393, 417, 434, 435, 439, 444, 452, 455], "t": [280, 281, 321, 329, 392, 393, 394, 396, 397, 404, 409, 420, 430, 431, 433, 445, 451, 452], "t1": [451, 452], "t2": 451, "t3": 451, "t_1": 447, "t_2": 447, "t_3": 447, "t_i": 447, "tab": 420, "tabl": [350, 436, 443, 446], "tabular": 452, "tag": [434, 436, 451], "tailor": 442, "take": [8, 47, 99, 132, 146, 151, 244, 246, 247, 254, 258, 268, 272, 274, 276, 278, 291, 407, 414, 436, 441, 442, 443, 447, 448, 449, 455], "taken": [176, 408, 436, 442, 445, 447], "tantamount": 440, "target": [12, 29, 71, 111, 114, 115, 119, 123, 124, 125, 126, 128, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 233, 235, 236, 237, 244, 246, 247, 250, 254, 258, 272, 274, 276, 278, 282, 290, 293, 294, 296, 324, 339, 342, 343, 349, 352, 364, 365, 371, 389, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 408, 409, 411, 412, 417, 423, 424, 426, 427, 428, 430, 431, 432, 434, 436, 441, 442, 444, 446, 451, 452, 453, 456], "target_1": [403, 404, 405, 419, 447, 454], "target_2": [419, 447, 454], "target_3": [419, 447], "target_3a": 454, "target_3b": 454, "target_a": 453, "target_b": 453, "target_cumbest": [391, 430, 431], "target_max": 442, "target_transform": 419, "targetmod": [296, 451, 454], "targetnam": 235, "targettransform": [296, 436, 454], "task": [136, 206, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 288, 290, 296, 417, 436, 442, 449, 451, 452, 455], "task_idx": [206, 436], "task_param": [430, 431, 452], "task_paramet": 451, "task_parameter_json": 451, "task_parameter_reconstruct": 451, "taskparamet": [219, 430, 431, 436, 445, 451, 452, 456], "tb": 457, "technic": [212, 441, 452, 455], "techniqu": [198, 449], "technologi": 438, "telemetri": [436, 438, 456], "tell": 303, "temp": [402, 404, 438], "temp_c": [392, 393, 394, 408], "temperatur": [392, 394, 396, 397, 402, 404, 407, 411, 412, 426, 443, 448, 450, 455], "temperature_resolut": 402, "temperature_valu": 408, "temporari": [110, 116, 189, 206, 373, 408, 436, 444, 451], "temporarili": [436, 457], "temporary_se": 457, "tempt": 455, "tenac": 436, "tend": 409, "tensor": [24, 43, 244, 280, 281, 342, 351, 355, 379, 381, 430, 436], "term": [102, 233, 408, 417, 437, 439, 442, 446, 450, 451, 452, 455], "termin": [408, 409, 435, 439], "terminologi": 456, "tert": [392, 393, 394, 396, 397], "test": [212, 235, 254, 339, 417, 430, 431, 434, 435, 436, 437, 442, 446, 452, 457], "test_funct": [399, 400, 409, 423, 424, 430, 431], "test_scenario": [392, 394], "testabl": [76, 235], "testfunct": [399, 400, 423, 424], "testfunctionclass": [399, 400, 423, 424], "text": [32, 369, 411, 420, 439, 443, 444, 447], "th": [309, 443], "than": [29, 60, 75, 146, 176, 177, 178, 204, 206, 219, 309, 328, 343, 370, 377, 393, 404, 408, 415, 440, 443, 444, 446, 448, 451, 453], "thei": [151, 171, 181, 299, 345, 349, 397, 405, 408, 414, 417, 422, 436, 437, 441, 442, 443, 446, 448, 449, 450, 451, 454, 455, 457], "them": [36, 268, 340, 368, 397, 434, 435, 436, 437, 441, 443, 444, 445, 446, 448, 449, 451, 455], "theme": [368, 436], "theori": 439, "therebi": 212, "therefor": [178, 244, 246, 247, 254, 258, 272, 274, 276, 278, 397, 435, 442, 451, 453, 455], "therein": 436, "thereof": 439, "thf": 443, "thi": [10, 14, 19, 29, 32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 173, 175, 176, 177, 178, 180, 188, 195, 196, 197, 198, 204, 206, 212, 233, 237, 239, 241, 244, 246, 247, 248, 250, 253, 254, 258, 268, 272, 274, 276, 278, 282, 305, 308, 324, 325, 328, 333, 339, 341, 343, 344, 346, 348, 350, 368, 391, 407, 408, 409, 411, 412, 414, 415, 417, 420, 422, 426, 427, 428, 430, 431, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "think": [417, 448], "third": [419, 439, 452], "thompson": [19, 438], "thomson": 19, "those": [151, 178, 180, 233, 376, 397, 435, 439, 443, 452], "though": 455, "three": [393, 414, 415, 419, 420, 434, 442, 443, 446, 447, 449, 450, 455], "threshold": [40, 138, 149, 178, 282, 346, 399, 404, 405, 408, 414, 436, 443, 448], "thresholdcondit": [56, 57, 399, 404, 405, 414, 456], "through": [29, 206, 298, 308, 339, 349, 412, 414, 417, 419, 434, 436, 437, 439, 443, 447, 451, 452, 456], "throughout": 178, "throw": [333, 443, 448], "thrown": [237, 394, 408, 427, 435, 447], "thu": [188, 324, 349, 392, 393, 399, 400, 402, 403, 404, 405, 411, 412, 414, 417, 419, 423, 424, 426, 435, 437, 442, 444, 445, 448, 449, 451, 452, 455, 457], "tick": 409, "tight_layout": 420, "time": [10, 188, 305, 377, 400, 407, 414, 417, 434, 436, 441, 442, 443, 445, 448, 451, 452, 453, 457], "timeout": [436, 444], "timer": 407, "titl": [420, 439], "tl": 430, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 43, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 408, 409, 436], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 204, 206, 212, 229, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 355], "to_factori": [94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109], "to_fram": 391, "to_gpytorch": [94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 159, 161, 162, 163, 164, 165, 166, 167, 436], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 204, 206, 212, 229, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 288, 290, 296, 355, 411, 412, 426, 442, 451], "to_keep": 347, "to_ndarrai": 355, "to_numpi": 420, "to_object": [288, 290, 296, 391, 399, 400, 409, 417, 420, 423, 424, 430, 431, 447, 452], "to_polar": [38, 39, 40], "to_searchspac": [131, 132, 133, 135, 136, 138, 145, 146, 149, 204, 212, 417, 422, 436, 445], "to_subspac": [131, 132, 135, 136, 138, 145, 146, 149, 436], "to_tensor": [355, 408, 409, 411, 436], "to_tupl": [355, 420], "togeth": [36, 64, 309, 397, 417, 424, 434, 436], "toggl": 29, "toggle_discrete_candid": [29, 436, 445], "toler": [29, 40, 146, 212, 388, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 408, 411, 412, 414, 419, 423, 424, 426, 427, 428, 434, 436, 443, 448], "tolist": 399, "toluen": 448, "toml": 436, "too": [399, 452, 455], "tool": [330, 436, 451], "toolbox": 434, "top": [436, 437], "topic": 442, "topolog": 448, "topologicaltors": 143, "topologicaltorsionfingerprint": 143, "torch": [342, 355, 408, 409, 411, 430, 436], "toronto": 438, "tort": 439, "total": [177, 178, 376, 414, 415, 417, 450], "total_bas": 415, "total_phase_ag": 415, "toward": [161, 339, 443], "towel": 433, "tox": [402, 404, 405, 434, 436, 437], "tracebackexcept": 435, "track": [170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 212, 408, 439, 445], "trade": [8, 439, 447], "trademark": 439, "tradit": [393, 413, 414, 432, 434, 436], "train": [72, 87, 170, 176, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 241, 244, 246, 247, 248, 250, 253, 254, 258, 272, 274, 276, 278, 282, 410, 420, 430, 431, 436, 452], "train_i": 411, "train_x": 411, "training_funct": 431, "trajectori": [233, 391, 408, 417, 442, 452], "transfer": [240, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 397, 402, 403, 404, 405, 419, 426, 430, 432, 434, 436, 439, 448, 453, 456], "transform": [29, 72, 114, 119, 124, 126, 132, 133, 135, 136, 138, 146, 149, 204, 206, 212, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 288, 290, 294, 296, 334, 342, 349, 352, 355, 356, 379, 402, 403, 404, 405, 426, 436, 439, 444, 448, 453, 454], "transform_rep_exp2comp": 436, "transit": 436, "translat": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 436, 439, 445, 448], "transmiss": 451, "transmit": 305, "travers": 436, "treasur": 456, "treat": [149, 244, 246, 247, 254, 258, 272, 274, 276, 278, 393, 434, 443, 448, 454, 457], "tree": 436, "tremend": 393, "trend": 455, "tri": 450, "triangl": 300, "triangular": [294, 300, 419, 454], "tricki": 446, "tricyclohexylphosphin": [392, 393, 394], "trigger": [176, 308, 408, 412, 417, 436, 437, 441, 447, 451], "trivial": [261, 274, 447, 448, 453], "true": [6, 12, 13, 15, 29, 32, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 87, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 188, 206, 258, 290, 299, 317, 318, 322, 328, 329, 347, 370, 388, 393, 397, 399, 400, 402, 403, 404, 405, 409, 411, 412, 414, 417, 419, 423, 424, 426, 427, 428, 430, 431, 436, 442, 443, 444, 445, 446, 448, 451], "truncat": [434, 444], "trust": [411, 444], "truth": 329, "truthi": 444, "try": [79, 339, 392, 393, 394, 408, 411, 412, 428, 435, 436, 457], "tune": 434, "tupl": [12, 29, 39, 43, 94, 95, 96, 99, 101, 103, 104, 105, 107, 108, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 152, 204, 206, 211, 212, 281, 308, 315, 322, 325, 337, 339, 351, 355, 359, 379], "turn": [204, 212, 244, 246, 247, 254, 258, 272, 274, 276, 278, 359, 422, 434, 435, 436, 443, 444], "turnaround": 452, "twice": [445, 447], "two": [12, 32, 53, 59, 60, 120, 178, 188, 233, 309, 314, 342, 364, 376, 391, 392, 394, 407, 414, 417, 419, 420, 424, 430, 431, 433, 434, 436, 437, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "twofold": 417, "twophasemetarecommend": [392, 394, 397, 402, 403, 404, 405, 408, 409, 411, 412, 417, 419, 424, 426, 427, 428, 434, 436, 449], "twophasestrategi": 436, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 115, 117, 119, 120, 124, 126, 128, 131, 132, 133, 135, 136, 138, 145, 146, 148, 149, 151, 152, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 190, 193, 195, 196, 197, 198, 200, 201, 204, 206, 207, 208, 209, 212, 213, 214, 215, 217, 218, 219, 222, 223, 225, 226, 227, 229, 231, 232, 235, 237, 239, 241, 244, 246, 247, 248, 250, 251, 252, 254, 255, 258, 261, 262, 266, 272, 274, 276, 278, 280, 281, 282, 284, 285, 288, 290, 291, 296, 298, 299, 300, 302, 303, 304, 305, 308, 309, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 355, 356, 357, 359, 361, 362, 364, 365, 366, 368, 369, 370, 376, 377, 379, 381, 384, 385, 386, 387, 388, 389, 393, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 415, 417, 419, 426, 427, 428, 434, 436, 437, 439, 440, 443, 446, 447, 448, 449, 450, 453, 455, 456], "typealia": 291, "typeerror": [87, 91, 235, 254, 324, 339, 340, 377, 388, 389, 408, 409], "typeguard": 321, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 151, 159, 161, 162, 163, 164, 165, 166, 167, 173, 175, 176, 177, 178, 204, 206, 212, 217, 225, 226, 229, 244, 246, 247, 250, 254, 258, 261, 272, 274, 276, 278, 281, 288, 290, 296, 318, 319, 320, 321, 337, 342, 349, 355], "typic": [14, 324, 370, 393, 434, 441, 442, 446, 448, 451, 457], "typing_extens": 437, "typo": [436, 437], "u": [19, 391, 392, 393, 394, 407, 409, 414, 415, 417, 422, 431, 434, 440, 443, 447], "ucb": [8, 397, 436, 440, 451], "ultim": 437, "ultra": [427, 428], "un": 436, "unabl": 411, "unavail": 436, "unawar": 441, "unbound": [355, 407], "uncaught": 436, "uncertainti": [8, 14, 397, 456], "uncharacter": 455, "uncorrel": [346, 455], "undefin": [244, 445], "under": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 305, 349, 405, 409, 417, 420, 434, 435, 439, 441, 448], "underflow": 77, "underli": [29, 53, 408, 417, 434, 442, 446, 449, 451], "underscor": 436, "understand": [434, 455], "undesir": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 82, 443, 445, 448, 457], "undo": 435, "unequ": 405, "unevenli": 448, "unexpect": 79, "unfinish": 441, "unfortun": 455, "unhandl": 436, "uniform": [204, 244, 340, 341, 436], "uniformli": 376, "uniniti": 328, "uninstal": [78, 434], "unintend": [82, 324, 436, 437], "unintention": 457, "union": [12, 120, 235, 239, 298, 299, 300, 365, 424, 439, 450], "uniqu": [54, 128, 151, 414, 436, 448], "unit": [211, 359], "unknown": [177, 376, 391, 417, 436, 453, 455], "unlabel": 342, "unless": [434, 437, 439, 444, 448, 451], "unlik": [12, 13, 15, 414, 447, 457], "unlock": 456, "unmaintain": 436, "unmatch": 322, "unmatchedattributeerror": 322, "unmeasur": [235, 394], "unnecessari": [436, 442], "unpromis": 408, "unreach": 436, "unrealist": 452, "unrecogn": 339, "unrestrict": 324, "unsaf": 436, "unspecifi": [313, 436, 451], "unspecifiedtyp": 29, "unsqueez": [408, 409], "unstructur": [227, 451], "unstructure_bas": 225, "unsupport": [204, 237], "until": [173, 175, 176, 177, 178, 235, 417, 434, 452], "untouch": 340, "untransform": [29, 453], "unusedobjectwarn": [408, 436, 441], "unveil": 431, "unwant": 36, "up": [29, 212, 235, 237, 391, 392, 393, 394, 395, 402, 404, 407, 409, 413, 414, 415, 420, 424, 430, 431, 434, 435, 436, 440, 443, 447, 457], "updat": [29, 393, 396, 436, 437, 441], "upgrad": 436, "upon": [180, 261, 435, 436, 437, 443, 450, 453, 455], "upper": [8, 20, 167, 206, 212, 298, 299, 300, 355, 397, 409, 419, 420, 430, 431, 436, 454, 457], "upper_bound": [402, 403, 404, 405, 426, 450], "upperconfidencebound": [20, 440, 451], "upstream": 437, "urg": 446, "url": [444, 455], "us": [14, 19, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 68, 87, 99, 119, 120, 138, 143, 146, 149, 151, 170, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 204, 206, 212, 213, 214, 226, 235, 237, 239, 244, 246, 247, 254, 255, 258, 272, 274, 276, 278, 294, 304, 305, 311, 324, 325, 333, 334, 339, 341, 342, 348, 357, 361, 362, 368, 376, 381, 391, 399, 400, 406, 407, 408, 409, 410, 413, 414, 415, 422, 426, 427, 428, 430, 431, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 454, 455, 456, 457], "usa": 438, "usabl": [328, 435, 436, 448, 451], "usag": [358, 434, 436, 443, 444, 449, 456], "use_comp_rep": [87, 91, 446], "use_torch": [342, 399, 400, 409, 423, 424, 430, 431], "user": [50, 51, 62, 73, 82, 138, 141, 244, 246, 247, 254, 258, 272, 274, 276, 278, 285, 302, 341, 396, 397, 402, 419, 428, 434, 435, 436, 437, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 455], "userguid": 301, "usernam": [302, 436, 444], "userwarn": 435, "uses_shap_explain": 87, "usort": 436, "usr": 143, "usrcat": 143, "usrcatfingerprint": 143, "usrfingerprint": 143, "usual": [235, 392, 393, 394, 427, 435, 446, 448], "util": [29, 188, 204, 212, 304, 311, 313, 314, 355, 375, 379, 391, 393, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 417, 419, 420, 423, 424, 430, 431, 434, 436, 440, 441, 446, 447, 448, 449, 451, 452, 453, 455, 456], "uv": 436, "v": 455, "val": [47, 117, 329, 430], "val_from_param1": 55, "val_from_param2": 55, "valid": [29, 32, 33, 34, 35, 36, 39, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 151, 206, 209, 212, 215, 254, 343, 348, 402, 425, 427, 432, 435, 436, 437, 442, 443, 452], "validate_compat": 254, "validate_config": [29, 428, 436, 442], "validate_parameter_input": 29, "validate_target_input": 29, "valu": [6, 12, 24, 29, 32, 38, 39, 40, 43, 51, 53, 71, 87, 98, 99, 100, 101, 102, 103, 104, 105, 109, 114, 119, 120, 124, 126, 132, 135, 136, 138, 140, 141, 143, 146, 149, 151, 154, 155, 156, 178, 195, 196, 197, 198, 204, 206, 212, 213, 214, 233, 235, 237, 239, 244, 246, 247, 254, 258, 272, 274, 276, 278, 290, 291, 293, 298, 299, 300, 305, 308, 312, 313, 319, 322, 329, 336, 339, 340, 341, 343, 345, 348, 349, 350, 355, 357, 364, 365, 366, 384, 385, 386, 387, 388, 389, 392, 393, 394, 396, 397, 399, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 417, 419, 420, 423, 424, 426, 427, 428, 430, 431, 434, 436, 437, 440, 442, 443, 444, 445, 446, 447, 448, 454, 455, 456, 457], "valuabl": [449, 452], "valueerror": [12, 14, 29, 59, 60, 87, 91, 120, 128, 151, 155, 156, 204, 206, 212, 218, 235, 237, 244, 246, 247, 254, 258, 272, 274, 276, 278, 285, 309, 322, 327, 329, 332, 336, 339, 341, 343, 348, 349, 370, 376, 377, 388, 389, 412, 424, 435], "var": [417, 456], "vari": [29, 212, 393, 447], "variabl": [32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 114, 119, 124, 126, 131, 132, 133, 135, 136, 138, 145, 146, 149, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 244, 246, 247, 254, 258, 272, 274, 276, 278, 288, 303, 305, 363, 368, 382, 423, 434, 436, 437, 443, 448, 449, 451, 453], "varianc": [8, 14, 98, 274, 344, 436, 440], "variance_initial_valu": 98, "variance_prior": 98, "variant": [397, 430, 446, 455], "variat": 420, "varieti": [423, 437, 451, 452], "variou": [355, 414, 421, 436, 441, 446, 449, 452], "varucb": 436, "vector": [32, 411, 436, 438, 447], "vendor": 448, "verbal": 439, "verbos": [412, 436], "veri": [402, 404, 419, 441, 444, 446, 448, 453, 457], "verifi": [328, 399, 402, 403, 404, 405, 414, 415, 422, 424, 426, 434, 437], "versa": [430, 455], "versatil": 449, "version": [206, 302, 362, 402, 404, 405, 414, 417, 422, 430, 431, 434, 435, 436, 437, 439, 451], "vert": 409, "via": [14, 19, 28, 29, 87, 178, 188, 200, 244, 246, 247, 248, 250, 254, 258, 272, 274, 276, 278, 304, 316, 324, 339, 347, 394, 400, 407, 408, 411, 422, 434, 436, 437, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 454, 455, 456], "via_init": 451, "via_json": 451, "viabl": [75, 419], "vice": [430, 455], "view": [204, 212, 409, 450], "view_init": 409, "violat": [36, 49, 50, 51, 52, 53, 54, 55, 56, 57], "viridi": 409, "virtual": 437, "visibl": 436, "visual": [393, 430, 431, 446, 454], "volum": 455, "vpn": [434, 444], "vsa": 143, "vsafingerprint": 143, "vulner": [436, 437], "w_i": 447, "wa": [14, 65, 66, 69, 70, 71, 78, 82, 151, 178, 244, 246, 247, 254, 258, 272, 274, 276, 278, 336, 339, 343, 377, 393, 435, 436, 437, 439, 444, 446, 448, 451, 455], "wai": [206, 407, 414, 415, 421, 422, 430, 433, 434, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 457], "wall": 10, "want": [50, 397, 402, 414, 417, 424, 431, 434, 437, 443, 444, 445, 446, 448, 449, 451, 453, 454], "warn": [61, 325, 402, 404, 405, 408, 423, 424, 436, 437], "warranti": [434, 439], "watch": 407, "water": [402, 403, 404, 405, 414, 443, 448], "waterfal": [87, 89, 436], "we": [24, 233, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 415, 417, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 434, 435, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 454, 455, 456, 457], "web": 437, "weber": 438, "weight": [111, 119, 120, 366, 419, 447, 451], "weight_kdalton": 448, "welcom": 437, "well": [302, 368, 397, 408, 413, 433, 437, 442, 443, 446, 448, 452], "were": [29, 339, 394, 431, 435, 436, 441, 443, 444, 448, 450], "what": [151, 176, 206, 233, 339, 379, 391, 411, 419, 428, 433, 437, 440, 442, 446, 448, 455, 456], "whatsnew": 314, "when": [12, 29, 51, 79, 146, 176, 177, 178, 186, 188, 206, 244, 246, 247, 254, 255, 258, 272, 274, 276, 278, 285, 312, 313, 322, 324, 328, 339, 342, 370, 377, 402, 403, 405, 407, 412, 414, 415, 417, 419, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "whenev": [24, 176, 339, 451], "where": [12, 19, 24, 32, 36, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 170, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 233, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 308, 339, 376, 392, 393, 394, 397, 402, 404, 414, 417, 434, 435, 436, 437, 439, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455], "wherea": 451, "wherev": [439, 441], "whether": [24, 32, 33, 34, 35, 36, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 91, 131, 132, 133, 135, 136, 138, 145, 146, 149, 188, 204, 212, 244, 246, 247, 254, 258, 272, 274, 276, 278, 303, 341, 355, 414, 436, 439, 442, 444, 445, 454], "which": [12, 14, 29, 38, 39, 40, 82, 87, 114, 119, 124, 126, 136, 151, 170, 171, 173, 175, 176, 177, 178, 180, 183, 186, 188, 193, 195, 196, 197, 198, 200, 201, 206, 212, 239, 241, 244, 246, 247, 254, 258, 272, 274, 276, 278, 282, 304, 305, 324, 328, 339, 341, 346, 348, 350, 364, 365, 368, 379, 391, 393, 397, 400, 407, 408, 414, 415, 417, 422, 423, 424, 428, 430, 431, 434, 435, 436, 437, 439, 440, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457], "while": [206, 209, 215, 408, 417, 419, 431, 435, 439, 440, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455], "whilst": 339, "whim": 143, "whimfingerprint": 143, "whole": 439, "whom": 439, "whose": [120, 151, 206, 237, 319, 322, 342, 391, 407, 414, 441, 452], "wide": 452, "wider": 454, "width": 350, "wieczorek": 438, "william": 455, "willing": 442, "win": [244, 417], "win_rat": 417, "window": [436, 444], "winerror": 435, "wise": 366, "wish": 451, "within": [29, 131, 132, 133, 135, 136, 138, 145, 146, 149, 388, 422, 439, 443, 444, 448, 453, 455, 456, 457], "without": [177, 430, 431, 434, 436, 439, 441, 442, 443, 444, 448, 452, 455, 457], "work": [24, 279, 308, 342, 402, 404, 405, 408, 419, 426, 428, 434, 436, 437, 438, 439, 443, 444, 449, 451, 452], "workaround": [435, 436], "workflow": [411, 434, 442, 451, 456], "world": [434, 442], "worldwid": 439, "worst": [12, 235, 237, 239, 394], "would": [54, 77, 151, 233, 235, 241, 253, 407, 414, 417, 434, 437, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 457], "wrap": [94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 258, 262, 280, 281, 324, 434, 436, 447], "wrapper": [1, 23, 239, 241, 254, 325, 430, 431, 434, 449], "write": [434, 435, 439, 451], "written": [423, 424, 437, 439], "wrong": [428, 436], "wrongli": 435, "www": [434, 439], "x": [24, 115, 208, 235, 237, 262, 315, 321, 325, 337, 351, 364, 379, 391, 392, 393, 394, 402, 403, 404, 405, 408, 409, 414, 419, 426, 430, 431, 434, 436, 450, 453], "x0": [420, 450], "x0_mesh": 420, "x1": [420, 450], "x1_mesh": 420, "x2": 450, "x_": [391, 399, 400, 422, 423, 424], "x_1": [399, 400, 422, 423, 424, 443], "x_2": [399, 400, 422, 423, 424, 443], "x_3": [399, 400, 422, 423, 424, 443], "x_4": [399, 400, 422, 423, 424], "x_5": 424, "x_6": 424, "x_i": 443, "x_pend": 24, "xlabel": 420, "xlsx": [392, 393, 394, 408], "xpho": [392, 393, 394], "xxxx": 435, "xylen": [392, 393, 394, 396, 397], "y": [270, 329, 346, 364, 391, 392, 393, 394, 408, 409, 411, 414, 430, 431, 434, 455], "y0": 420, "y0_mesh": 420, "y1": 420, "y1_mesh": 420, "ye": 329, "year": 455, "yet": [24, 436, 441, 449], "yield": [6, 99, 392, 393, 394, 396, 397, 402, 408, 411, 412, 414, 424, 426, 427, 428, 434, 436, 440, 446, 447, 451], "yield_cumbest": [392, 393, 394, 408], "ylabel": 420, "yml": 436, "you": [29, 50, 393, 397, 399, 407, 412, 414, 417, 423, 424, 427, 433, 434, 435, 437, 439, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457], "your": [393, 407, 414, 417, 424, 433, 434, 435, 436, 437, 439, 442, 444, 445, 446, 448, 451, 452, 453, 454, 455, 457], "your_branch_nam": 437, "yourself": 417, "z": [409, 434], "zdir": 409, "zero": [161, 344, 414, 417, 455], "zip": [408, 409], "\u00b5fmt": 436, "\u0161o\u0161i\u0107": [434, 438]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.composite.structure_surrogate_getter", "baybe.surrogates.composite.unstructure_surrogate_getter", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 437, "0": 436, "01": 436, "02": 436, "03": 436, "04": 436, "05": 436, "06": 436, "07": 436, "08": 436, "09": 436, "1": 436, "10": 436, "11": 436, "12": 436, "13": 436, "14": 436, "15": 436, "16": 436, "17": 436, "19": 436, "2": 436, "2022": 436, "2023": 436, "2024": 436, "2025": 436, "21": 436, "23": 436, "24": 436, "27": 436, "28": 436, "29": 436, "3": 436, "31": 436, "4": 436, "5": 436, "6": 436, "7": 436, "8": 436, "9": 436, "A": 434, "On": 446, "The": [417, 427, 434, 445, 451, 452, 455], "abbrevi": 451, "acqf": 2, "acquisit": [1, 2, 21, 23, 25, 26, 27, 397, 441], "acquisitionfunct": 22, "action": 455, "activ": 440, "ad": [396, 436, 441, 442, 455, 457], "add_fake_measur": 339, "add_noise_to_perturb_degenerate_row": 340, "add_parameter_nois": 341, "addendum": 419, "addit": 414, "additivekernel": 107, "advanc": [434, 453], "altern": 451, "amount": 414, "an": 417, "appli": 445, "arm": [416, 417], "arm64": 435, "arrai": 452, "arrays_to_datafram": 342, "assembli": 451, "asynchron": 441, "attr": 437, "augment": [307, 308, 309], "auto": 453, "automat": 451, "avail": [397, 453], "avx": 435, "back": 434, "backtest": [390, 430], "bandit": [243, 416, 417], "base": [21, 31, 93, 113, 115, 130, 158, 169, 172, 182, 185, 192, 245, 287, 392, 393, 394, 399, 400, 414, 415, 424, 445, 452], "basesequentialmetarecommend": 175, "basic": [97, 160, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 395, 396, 442, 444, 446, 451], "basickernel": 94, "batch": 442, "batchify_ensemble_predictor": 280, "batchify_mean_var_predict": 281, "batteri": 434, "bayb": [0, 1, 2, 21, 23, 25, 26, 27, 28, 30, 31, 37, 41, 44, 45, 46, 47, 48, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 97, 106, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 123, 125, 127, 128, 129, 130, 134, 137, 139, 144, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 168, 169, 171, 172, 174, 179, 181, 182, 184, 185, 187, 189, 190, 191, 192, 194, 199, 202, 203, 205, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 251, 252, 253, 255, 256, 257, 259, 262, 263, 264, 266, 267, 269, 271, 273, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 396, 434, 437], "bayesian": [184, 185, 187, 189, 190, 434, 449], "bayesianlinearsurrog": 272, "bayesianrecommend": 186, "bell_transform": 298, "bernoulli": 417, "betabernoullimultiarmedbanditsurrog": 244, "betaprior": 161, "binari": [289, 291], "binarytarget": 290, "black": [391, 417], "block_deserialization_hook": 222, "block_serialization_hook": 223, "bo": 446, "boolean": [326, 327, 328, 329], "both": 426, "botorch": [187, 423], "botorchrecommend": 188, "bound": [407, 447, 450], "box": [391, 417], "break": 436, "build": [417, 450], "bytes_to_human_read": 359, "cach": [442, 444], "call": 445, "callabl": [399, 400, 424, 452], "campaign": [28, 29, 391, 392, 393, 394, 397, 399, 400, 402, 403, 405, 408, 411, 412, 419, 420, 423, 424, 426, 427, 442], "candid": [442, 445], "cardinalityconstraint": 32, "case": 417, "catch_constant_target": 282, "categor": 134, "categoricalencod": 140, "categoricalparamet": [135, 448], "caution": 445, "chang": 436, "changelog": 436, "check_if_in": 327, "chemic": 434, "chemistri": [330, 331, 332, 333, 334], "choicevalu": 291, "class": 437, "classproperti": 314, "clone": 434, "closer_el": 364, "closest_el": 365, "cluster": [194, 449], "code": 437, "columntransform": 379, "compar": 426, "compon": 407, "composit": [106, 249, 251, 252, 453], "compositekernel": 95, "compositesurrog": 250, "comput": 446, "condit": [37, 38, 443], "config": [427, 428, 442], "configur": [411, 412, 427, 445, 447, 451], "constraint": [30, 31, 33, 37, 41, 44, 45, 46, 47, 48, 58, 59, 60, 398, 399, 400, 401, 402, 403, 404, 405, 414, 415, 443, 445, 450, 457], "construct": [392, 393, 394, 399, 400, 414, 423, 424, 447, 450], "constructor": [450, 451], "continu": [41, 203, 398, 400, 414, 422, 440, 443, 448, 450, 455, 457], "continuouscardinalityconstraint": 42, "continuousconstraint": 34, "continuouslinearconstraint": [43, 443], "continuouslinearequalityconstraint": 45, "continuouslinearinequalityconstraint": 46, "continuousnonlinearconstraint": 35, "continuousparamet": 131, "contribut": 437, "contributor": 438, "control": [442, 445], "conveni": 447, "convent": 437, "convers": [335, 336, 337, 447, 451], "convert": [224, 411], "convert_acqf": 26, "convert_bound": 356, "convert_to_float": 315, "copi": 451, "core": [205, 208, 209, 221, 222, 223, 224, 225, 226, 227, 234, 235, 257, 264, 266], "cpu": 435, "creat": [391, 392, 393, 394, 397, 399, 400, 402, 403, 404, 405, 411, 412, 419, 422, 423, 426, 427, 430, 431, 442, 450], "create_example_plot": 368, "create_fake_input": 343, "creation": [392, 393, 394, 414, 415, 442, 457], "current": 453, "custom": [137, 253, 255, 391, 402, 406, 407, 410, 411, 412, 453], "customdiscreteparamet": [138, 448], "customencod": 141, "customonnxsurrog": 254, "data": [392, 393, 394, 450, 455], "datafram": [338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 399, 400, 424, 450, 451, 452], "de": [426, 451], "default": [267, 450, 451], "defaultkernelfactori": 268, "defin": [391, 399, 400, 407, 408, 409, 419, 420, 423, 424, 428, 430, 431, 434], "definit": 408, "depend": [403, 434, 448], "deprec": [44, 45, 46, 47, 116, 117, 436], "deprecationerror": 62, "descript": 419, "deseri": 451, "deserialize_datafram": 231, "design": [434, 437], "desir": [118, 120], "desirabilityobject": [119, 447], "develop": 437, "df_apply_dependency_augment": 308, "df_apply_permutation_augment": 309, "df_drop_single_value_column": 344, "df_drop_string_column": 345, "df_uncorrelated_featur": 346, "dictionari": [427, 428], "differ": 397, "dimens": 424, "discret": [48, 210, 213, 214, 215, 401, 402, 403, 404, 414, 423, 442, 443, 448, 450], "discretecardinalityconstraint": 49, "discreteconstraint": 36, "discretecustomconstraint": [50, 443], "discretedependenciesconstraint": [51, 443], "discreteexcludeconstraint": [52, 443], "discretelinkedparametersconstraint": [53, 443], "discretenolabelduplicatesconstraint": [54, 443], "discreteparamet": 132, "discretepermutationinvarianceconstraint": [55, 443], "discreteproductconstraint": [56, 443], "discretesamplingmethod": 375, "discretesumconstraint": [57, 443], "discuss": 417, "disk": 444, "do": 452, "docstr": 437, "document": 412, "domin": 447, "dtypefloatnumpi": 361, "dtypefloatonnx": 362, "dtypefloattorch": 381, "dummi": 311, "duplic": 414, "dure": 457, "dynam": 445, "edbo": 269, "edbokernelfactori": 270, "effici": 457, "emptysearchspaceerror": 63, "encod": 448, "end": 434, "enum": [121, 139, 292], "environ": 444, "equival": 451, "estim": 457, "exampl": [392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 411, 412, 419, 423, 424, 426, 427, 428, 432, 434, 446], "except": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "exceptiongroup": 435, "exclud": 445, "exclus": [404, 405, 445], "expect": 455, "expectedimprov": 3, "experi": [402, 403, 404, 405, 411, 412, 419, 426, 434, 441, 452], "experiment": [442, 444, 445, 446], "expir": 436, "explain": [85, 446], "explicit": 450, "extend": 437, "extract": 453, "fake": 457, "faq": 433, "farthest_point_sampl": 376, "featur": [444, 445], "field": 451, "file": [427, 428], "filter_df": 347, "find_subclass": 316, "finite_float": 384, "fix": [435, 436], "float": 444, "fpsrecommend": 200, "fraction_to_float": 336, "from": [427, 434, 436, 442, 450, 451], "full": [392, 393, 394, 450], "function": [391, 392, 393, 394, 397, 399, 400, 408, 419, 423, 424, 437, 441], "further": 442, "fuzzy_row_match": 348, "gammaprior": 162, "gaussian_process": [256, 257, 259, 262, 263, 264, 266, 267, 269], "gaussianmixtureclusteringrecommend": 195, "gaussianprocesspreset": 265, "gaussianprocesssurrog": 258, "gener": [430, 431, 437, 449], "geom_mean": 366, "get": [396, 442, 445], "get_base_structure_hook": 225, "get_baseclass": 317, "get_canonical_smil": 331, "get_fingerprint_class": 332, "get_model_params_valid": 284, "get_parameters_from_datafram": 151, "get_subclass": 318, "get_transform_object": 349, "get_transform_paramet": 217, "get_user_detail": 302, "github": 434, "global": 440, "group_duplicate_valu": 319, "guid": 456, "halfcauchyprior": 163, "halfnormalprior": 164, "hilberts_factori": 320, "hook": [406, 407, 408, 409], "hybrid": [399, 424, 443], "imaginari": 417, "implicit": 447, "import": [391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 407, 409, 411, 412, 414, 415, 417, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 446], "improv": 409, "includ": 434, "inclus": 392, "incompatibilityerror": 64, "incompatibleacquisitionfunctionerror": 65, "incompatibleargumenterror": 66, "incompatibleexplainererror": 67, "incompatiblesearchspaceerror": 68, "incompatiblesurrogateerror": 69, "incomplet": 394, "incorpor": 405, "indent": 369, "independentgaussiansurrog": 246, "index": 434, "indic": 434, "infiniteintervalerror": 354, "influenc": 457, "inform": [442, 449], "initi": [392, 397], "insight": [83, 84, 85, 86, 88, 89, 90, 91, 446], "instal": [434, 435], "instanc": 407, "instead": [411, 412], "instruct": 444, "internet": 444, "interpret": 446, "interrupt": 408, "interv": [353, 354, 355, 356, 357], "invalidsurrogatemodelerror": 70, "invalidtargetvalueerror": 71, "invari": 414, "invok": 451, "irrelev": 455, "is_abstract": 328, "is_all_inst": 321, "is_en": 303, "is_shap_explain": 90, "issu": [434, 435], "iter": [399, 400, 411, 412, 419], "json": [442, 451], "kernel": [92, 93, 96, 97, 106], "kernel_factori": [259, 262], "kernelfactori": 260, "kmeansclusteringrecommend": 196, "known": [434, 435], "leak": 435, "learn": [429, 431, 440, 452, 455], "licens": [434, 439], "limit": [446, 453, 454], "linear": [271, 400], "linear_transform": 299, "linearkernel": 98, "link": 412, "local": [434, 440], "logexpectedimprov": 4, "lognormalprior": 165, "look_up_target": 237, "lookup": [236, 237, 392, 393, 394, 399, 400, 408, 424, 430, 431, 452], "loop": [391, 392, 393, 394, 430, 431, 434], "maco": 435, "maintain": [434, 438], "make_explainer_for_surrog": 91, "make_gp_from_preset": 266, "mandatori": 447, "manual": [402, 403, 404, 405], "mark": 441, "match": 454, "match_attribut": 322, "maternkernel": 99, "max": 454, "mean": 452, "meanpredictionsurrog": 274, "measur": [396, 411, 412, 442, 457], "mechan": [392, 393, 394, 452], "memori": [358, 359, 457], "memorys": 211, "meta": [171, 172, 174, 445, 449], "metarecommend": 173, "method": [407, 437, 440], "min": 454, "miss": 452, "mixin": 228, "mixtur": [413, 414, 415], "mode": [419, 454], "model": [397, 411, 412, 414, 415, 417, 446, 453], "modelnottrainederror": 72, "monitor": 409, "monkeypatch": [407, 408, 409], "multi": [416, 417, 418, 419, 453], "multipl": 452, "naiv": [179, 273], "naivehybridspacerecommend": 180, "name": 448, "name_to_smil": 333, "necessari": [392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 411, 412, 419, 423, 424, 426, 427, 428], "nest": 451, "ngboost": 275, "ngboostsurrog": 276, "nois": 457, "nomcacquisitionfunctionerror": 73, "non": 447, "non_inf_float": 385, "non_nan_float": 386, "non_shap_explain": 86, "none": 452, "nonpredict": [191, 192, 194, 199], "nonpredictiverecommend": 193, "nonstring_to_tupl": 337, "norecommenderslefterror": 74, "normalprior": 166, "notenoughpointslefterror": 75, "nothingtosimulateerror": 76, "numer": [144, 295, 360, 361, 362, 363, 364, 365, 366], "numericalcontinuousparamet": [145, 448], "numericaldiscreteparamet": [146, 448], "numericaltarget": [296, 454], "numericalunderflowerror": 77, "object": [110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 127, 128, 392, 393, 394, 397, 399, 400, 402, 403, 404, 405, 419, 423, 426, 430, 431, 434, 447, 451], "onli": 444, "onnx": 411, "optim": [391, 420, 430, 431, 434, 442, 457], "option": [434, 448], "optionalimporterror": 78, "order": [414, 444], "output": [411, 412, 453], "overrid": 437, "packag": [434, 444], "page": 446, "pamclusteringrecommend": 197, "parallel": 442, "paramet": [129, 130, 133, 134, 137, 139, 144, 147, 148, 150, 151, 152, 153, 154, 155, 156, 392, 393, 394, 397, 412, 414, 415, 442, 446, 448, 450, 457], "parameter_cartesian_prod_panda": 213, "parameter_cartesian_prod_polar": 214, "parameterencod": 142, "pareto": [123, 420], "paretoobject": [124, 447], "partial": [23, 441], "partialacquisitionfunct": 24, "pass": 412, "pend": 441, "perform": [392, 419, 423, 424], "periodickernel": 100, "perman": 445, "permut": 414, "piecewisepolynomialkernel": 101, "plainkernelfactori": 261, "plot": [367, 368, 369, 370, 391, 408, 409, 446], "point": 444, "polar": [435, 444], "polynomialkernel": 102, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 411, "precis": 444, "preset": [263, 264, 266, 267, 269], "pretrain": 411, "pretty_print_df": 350, "print": [402, 403, 405, 419], "prior": [157, 158, 159, 160], "probabilityofimprov": 7, "probabl": 409, "problem": [391, 408, 420, 435], "product": [405, 450], "productkernel": 108, "pull": 437, "pure": [181, 182, 184, 185, 187, 189, 190, 191, 192, 194, 199, 440, 449], "purerecommend": 183, "pycharm": 435, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedhypervolumeimprov": 12, "qlognoisyexpectedimprov": 13, "qnegintegratedposteriorvari": 14, "qnoisyexpectedimprov": 15, "qposteriorstandarddevi": 16, "qprobabilityofimprov": 17, "qsimpleregret": 18, "qthompsonsampl": 19, "quick": 434, "qupperconfidencebound": 20, "random": [371, 372, 373], "random_forest": 277, "randomforestsurrog": 278, "randomrecommend": 201, "rbfkernel": 103, "recommend": [168, 169, 171, 172, 174, 179, 181, 182, 184, 185, 187, 189, 190, 191, 192, 194, 199, 396, 397, 411, 412, 423, 424, 426, 441, 442, 445, 449], "recommenderprotocol": 170, "reduct": 440, "refers_to": 323, "regist": 407, "register_custom_architectur": 255, "register_hook": 324, "relat": 435, "remov": 436, "replic": 453, "represent": [414, 415, 446, 450], "reproduc": 457, "request": 437, "restrict": 450, "result": [391, 408, 409, 441], "rffkernel": 104, "role": 455, "row": 444, "rqkernel": 105, "run": [391, 399, 400, 417], "sampl": [199, 440, 449], "sample_numerical_df": 377, "sampling_algorithm": [374, 376, 377], "scalar": [120, 122, 453], "scale": 378, "scalekernel": 109, "scenario": [238, 239, 452], "scope": 444, "search": [414, 415, 422, 430, 434, 440, 450, 457], "searchspac": [202, 203, 205, 206, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 392, 394, 397, 399, 400, 402, 403, 404, 405, 419, 421, 423, 424, 431], "searchspacematchwarn": 79, "searchspacetyp": 207, "see": 455, "select_constructor_hook": 226, "semaphor": 435, "sequenti": [174, 442], "sequential_greedi": [189, 190], "sequentialgreedyrecommend": 190, "sequentialmetarecommend": 176, "serial": [220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 425, 426, 442, 451], "serialize_datafram": 232, "serialmixin": 229, "set": [391, 408, 409, 420, 422, 430, 431], "set_random_se": 372, "setup": [396, 402, 403, 404, 405, 411, 412, 414, 415, 417, 419, 420, 426], "shap": [84, 85, 86, 88, 89, 90, 91, 446], "shap_explain": 88, "shap_plot": 89, "shapinsight": 87, "signatur": 407, "simplex": [414, 450], "simul": [233, 234, 235, 236, 237, 238, 239, 240, 241, 391, 392, 393, 394, 408, 417, 430, 431, 452], "simulate_experi": 235, "simulate_scenario": 239, "simulate_transfer_learn": 241, "singl": [125, 420, 452], "singletargetobject": [126, 447], "sklearnclusteringrecommend": 198, "slot": [414, 415], "smile": 148, "smiles_to_fingerprint_featur": 334, "smoothedboxprior": 167, "some": [399, 400, 419], "sort_paramet": 152, "space": [414, 415, 422, 424, 430, 434, 440, 442, 450, 457], "span": 414, "stage": 411, "start": 434, "stop": 408, "str_to_acqf": 27, "strategi": [397, 434], "streamingsequentialmetarecommend": 177, "string": [427, 451], "strtobool": 329, "structure_constraint": 47, "structure_object": 117, "structure_surrogate_gett": 251, "studi": 453, "sub": 440, "subselectioncondit": [39, 443], "subspac": 450, "subspacecontinu": 204, "subspacediscret": 212, "substanc": [147, 148, 414, 434], "substanceencod": 143, "substanceparamet": [149, 448], "suggest": 435, "suitabl": 397, "sum": 405, "support": [435, 441], "surrog": [242, 243, 245, 247, 249, 251, 252, 253, 255, 256, 257, 259, 262, 263, 264, 266, 267, 269, 271, 273, 275, 277, 279, 280, 281, 282, 283, 284, 285, 397, 410, 411, 412, 453], "surrogateprotocol": 248, "synchron": 437, "synthet": [423, 424], "tabl": [392, 393, 394, 430, 431, 434], "target": [286, 287, 288, 289, 291, 292, 295, 297, 298, 299, 300, 407, 418, 419, 420, 447, 454, 457], "targetmod": 293, "targettransform": 294, "task": [430, 431], "taskparamet": [136, 448, 455], "technologi": 455, "telemetri": [301, 302, 303, 304, 305, 434, 444], "telemetry_record_recommended_measurement_percentag": 304, "telemetry_record_valu": 305, "temporary_se": 373, "terminologi": [414, 451, 452, 455], "test": [399, 400, 423, 424], "theoret": 414, "thi": [392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 419, 423, 424, 446], "thresholdcondit": [40, 443], "through": 455, "to_kernel_factori": 262, "to_object": 115, "to_searchspac": 208, "to_str": 370, "to_tensor": 351, "to_tupl": 325, "toggl": 445, "toler": 442, "tool": 437, "torch": [380, 381, 382, 435], "tradit": 415, "train": 411, "trajectori": 445, "transfer": [429, 431, 452, 455], "transfer_learn": [240, 241], "transform": [297, 298, 299, 300, 419], "transform_target_column": 352, "treasur": 455, "triangular_transform": 300, "trigger": [407, 409], "two": 428, "twophasemetarecommend": 178, "type": 451, "uncertainti": 440, "unidentifiedsubclasserror": 80, "uninstal": 444, "uninterrupt": 408, "unlock": 455, "unmatchedattributeerror": 81, "unreleas": 436, "unspecifi": 312, "unspecifiedtyp": 313, "unstructure_bas": 227, "unstructure_surrogate_gett": 252, "unusedobjectwarn": 82, "upperconfidencebound": 8, "us": [392, 393, 394, 396, 397, 402, 403, 404, 405, 411, 412, 417, 419, 423, 424, 450, 451, 452, 453], "usag": 446, "use_fallback_constructor_hook": 357, "user": 456, "util": [25, 26, 27, 150, 151, 152, 230, 231, 232, 279, 280, 281, 282, 306, 307, 308, 309, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 457], "v": [407, 414, 420, 435, 442, 445], "valid": [58, 59, 60, 127, 128, 153, 154, 155, 156, 216, 217, 218, 219, 283, 284, 285, 383, 384, 385, 386, 387, 388, 389, 412, 428], "validate_cardinality_constraints_are_nonoverlap": 59, "validate_constraint": 60, "validate_custom_architecture_cl": 285, "validate_decorrel": 154, "validate_is_finit": 155, "validate_not_nan": 387, "validate_paramet": 219, "validate_parameter_input": 388, "validate_parameter_nam": 218, "validate_searchspace_from_config": 209, "validate_simplex_subspace_from_config": 215, "validate_target_input": 389, "validate_target_nam": 128, "validate_unique_valu": 156, "valu": [450, 451, 452], "variabl": 444, "varname_numpy_use_single_precis": 363, "varname_torch_use_single_precis": 382, "verif": [402, 403, 404, 405, 414, 415, 428], "verifi": 400, "via": 446, "visual": 420, "we": 452, "what": 452, "window": 435, "within": 450, "without": 435, "workflow": [437, 441], "wrap": [399, 400, 424], "write": 437}})