Search.setIndex({"alltitles": {"(De-)Serializability Unsupported": [[486, null]], "Absolute Transformation": [[497, "absolute-transformation"]], "AbsoluteTransformation": [[316, null]], "Accessing Desirability Values": [[461, "accessing-desirability-values"]], "Acquisition Function Values": [[485, "acquisition-function-values"]], "Acquisition function": [[439, "acquisition-function"]], "AcquisitionFunction": [[26, null]], "Active Learning": [[483, null]], "Added": [[479, "added"], [479, "id2"], [479, "id13"], [479, "id22"], [479, "id33"], [479, "id37"], [479, "id43"], [479, "id50"], [479, "id59"], [479, "id65"], [479, "id69"], [479, "id76"], [479, "id81"], [479, "id87"], [479, "id93"], [479, "id97"], [479, "id101"], [479, "id105"], [479, "id110"], [479, "id114"], [479, "id117"], [479, "id121"], [479, "id125"], [479, "id129"], [479, "id132"], [479, "id136"], [479, "id140"], [479, "id144"], [479, "id148"], [479, "id154"], [479, "id157"]], "Adding Fake Target Measurements and Parameter Noise": [[501, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[498, null]], "Adding Measurements": [[485, "adding-measurements"]], "Adding Partial Results": [[484, "adding-partial-results"]], "Addition": [[499, "addition"]], "AdditiveKernel": [[119, null]], "AdditiveTransformation": [[329, null]], "Advanced Example: Chemical Substances": [[477, "advanced-example-chemical-substances"]], "Advanced Transformations": [[499, "advanced-transformations"]], "AffinePosteriorTransform": [[304, null]], "AffineTransformation": [[317, null], [499, "affinetransformation"]], "An Imaginary Use Case": [[459, "an-imaginary-use-case"]], "Array-Based Callables": [[495, null]], "Asynchronous Workflows": [[484, null]], "Auto-Replication": [[496, "auto-replication"]], "Automatic Wrapping": [[499, null]], "Automatic field conversion": [[494, "automatic-field-conversion"]], "Available Models": [[496, "available-models"]], "Available recommenders suitable for initial recommendation": [[439, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[439, "available-surrogate-models"]], "Backtesting": [[432, null]], "Backwards Compatibility and Deprecations": [[500, null]], "BaseSequentialMetaRecommender": [[186, null]], "Basic Creation": [[485, "basic-creation"]], "Basic Instructions": [[487, "basic-instructions"]], "Basic Transformations": [[499, "basic-transformations"]], "Basic Usage": [[489, "basic-usage"]], "Basic example for using BayBE": [[438, null]], "Basic string assembly": [[494, "basic-string-assembly"]], "BasicKernel": [[106, null]], "Basics": [[437, null], [485, "basics"]], "Batch Optimization": [[485, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[477, null]], "Bayesian Recommenders": [[492, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[282, null]], "BayesianRecommender": [[197, null]], "Bell Transformation": [[497, "bell-transformation"]], "BellTransformation": [[318, null], [499, "belltransformation"]], "Bernoulli Multi Armed Bandit": [[459, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[255, null]], "BetaPrior": [[172, null]], "BinaryTarget": [[301, null]], "BotorchRecommender": [[199, null]], "Bound methods": [[449, "bound-methods"]], "Breaking Changes": [[479, "breaking-changes"], [479, "id42"], [479, "id49"]], "Building from the Product of Parameter Values": [[493, "building-from-the-product-of-parameter-values"], [493, "id2"]], "Building the Model": [[459, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[478, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[485, "caching-of-recommendations"]], "Campaign": [[34, null]], "Campaign Setup": [[462, "campaign-setup"]], "Campaign Stopping": [[450, null]], "Campaigns": [[485, null]], "Candidate Control in Discrete Spaces": [[485, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[488, null]], "CardinalityConstraint": [[37, null]], "CategoricalEncoding": [[149, null]], "CategoricalParameter": [[144, null], [491, "categoricalparameter"]], "Caution": [[488, null]], "ChainedMCObjective": [[127, null]], "ChainedTransformation": [[330, null]], "Chaining": [[499, "chaining"]], "Chaining Custom Transformations": [[499, null]], "Changed": [[479, "changed"], [479, "id3"], [479, "id6"], [479, "id9"], [479, "id14"], [479, "id18"], [479, "id20"], [479, "id23"], [479, "id28"], [479, "id34"], [479, "id38"], [479, "id44"], [479, "id51"], [479, "id56"], [479, "id60"], [479, "id66"], [479, "id70"], [479, "id73"], [479, "id77"], [479, "id82"], [479, "id88"], [479, "id94"], [479, "id98"], [479, "id102"], [479, "id106"], [479, "id111"], [479, "id115"], [479, "id118"], [479, "id122"], [479, "id126"], [479, "id130"], [479, "id133"], [479, "id137"], [479, "id141"], [479, "id145"], [479, "id149"]], "Changelog": [[479, null]], "ClampingTransformation": [[319, null], [499, "clampingtransformation"]], "Clustering Recommenders": [[492, "clustering-recommenders"]], "Code Design": [[480, "code-design"]], "ColumnTransformer": [[419, null]], "Comparing recommendations in both objects": [[468, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[496, "composite-surrogates"]], "Composite Transformations": [[499, "composite-transformations"]], "CompositeKernel": [[107, null]], "CompositeSurrogate": [[262, null]], "Compression": [[499, "transformation-compression"]], "Computational Challenges": [[486, null]], "Condition": [[43, null]], "Conditions": [[486, "conditions"]], "Constraint": [[38, null]], "Constraint Setup": [[456, "constraint-setup"]], "Constraints": [[486, null]], "Constraints Continuous": [[440, null]], "Constraints Discrete": [[443, null]], "Constraints Setup": [[457, "constraints-setup"]], "Construct the campaign and run some iterations": [[441, "construct-the-campaign-and-run-some-iterations"], [442, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[493, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[434, "constructing-campaigns-for-the-simulation-loop"], [435, "constructing-campaigns-for-the-simulation-loop"], [436, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[493, "constructing-from-a-dataframe"], [493, "id1"], [493, "id3"]], "Constructing hybrid recommenders": [[466, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[465, "constructing-the-campaign-and-performing-a-recommendation"], [466, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[466, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[486, "continuous-constraints"]], "Continuous Parameters": [[491, "continuous-parameters"]], "Continuous Subspaces": [[493, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[47, null], [486, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[39, null]], "ContinuousLinearConstraint": [[48, null], [486, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[40, null]], "ContinuousParameter": [[140, null]], "Contributing to BayBE": [[480, null]], "Contributors": [[481, null], [481, "id1"]], "Convenience Construction": [[499, null], [499, null], [499, null]], "Convenience Construction and Implicit Conversion": [[490, null]], "Convenience Multi-Output Casting": [[490, null]], "Conventions for attrs classes": [[480, "conventions-for-attrs-classes"]], "Convert model to onnx": [[453, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[453, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[454, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[453, "create-campaign"]], "Creating Continuous Search Spaces": [[464, null]], "Creating a Campaign": [[485, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[493, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[469, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[444, "creating-and-printing-the-campaign"], [445, "creating-and-printing-the-campaign"], [447, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[433, "creating-the-campaigns"]], "Creating the Objective": [[435, "creating-the-objective"], [461, "creating-the-objective"]], "Creating the Optimization Objective": [[472, "creating-the-optimization-objective"]], "Creating the Searchspace": [[472, "creating-the-searchspace"]], "Creating the campaign": [[439, "creating-the-campaign"], [454, "creating-the-campaign"], [468, "creating-the-campaign"]], "Creating the constraint": [[444, "creating-the-constraint"], [446, "creating-the-constraint"]], "Creating the constraints": [[445, "creating-the-constraints"], [447, "creating-the-constraints"]], "Creating the recommender object": [[439, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[434, "creating-the-searchspace-and-the-objective"], [436, "creating-the-searchspace-and-the-objective"], [441, "creating-the-searchspace-and-the-objective"], [442, "creating-the-searchspace-and-the-objective"], [444, "creating-the-searchspace-and-the-objective"], [445, "creating-the-searchspace-and-the-objective"], [446, "creating-the-searchspace-and-the-objective"], [447, "creating-the-searchspace-and-the-objective"], [465, "creating-the-searchspace-and-the-objective"]], "Creation From Existing Targets": [[497, "creation-from-existing-targets"]], "Creation From a JSON Config": [[485, "creation-from-a-json-config"]], "Creation from Existing Transformations": [[499, null]], "Current Scope": [[499, null]], "Custom Hooks": [[448, null]], "Custom Surrogates": [[452, null]], "Custom Transformation": [[497, "custom-transformation"]], "Custom Transformations": [[499, "custom-transformations"]], "CustomDiscreteParameter": [[147, null], [491, "customdiscreteparameter"]], "CustomEncoding": [[150, null]], "CustomONNXSurrogate": [[264, null]], "CustomTransformation": [[320, null]], "Customization": [[461, null]], "Dataframe deserialization": [[494, "dataframe-deserialization"]], "DefaultKernelFactory": [[278, null]], "Defining config dictionaries": [[470, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[450, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[451, "defining-the-hook"]], "Defining the Hooks": [[449, "defining-the-hooks"]], "Defining the Optimization Objective": [[477, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[433, "defining-the-optimization-problem"], [462, "defining-the-optimization-problem"]], "Defining the Search Space": [[461, "defining-the-search-space"], [477, "defining-the-search-space"]], "Defining the Targets": [[461, "defining-the-targets"]], "Defining the Tasks": [[472, "defining-the-tasks"]], "Defining the test function": [[441, "defining-the-test-function"], [442, "defining-the-test-function"], [465, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[466, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[479, "deprecations"], [479, "id26"], [479, "id40"], [479, "id47"], [479, "id54"], [479, "id63"], [479, "id79"], [479, "id85"], [479, "id91"], [479, "id108"]], "Deserialization from configuration strings": [[494, "deserialization-from-configuration-strings"]], "Desirability Optimization": [[461, null]], "DesirabilityObjective": [[129, null], [490, "desirabilityobjective"]], "Developer Tools": [[480, "developer-tools"]], "Discrete Constraints": [[486, "discrete-constraints"]], "Discrete Parameters": [[491, "discrete-parameters"]], "Discrete Subspaces": [[493, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[456, null]], "DiscreteCardinalityConstraint": [[53, null], [486, "discretecardinalityconstraint"]], "DiscreteConstraint": [[41, null]], "DiscreteCustomConstraint": [[54, null], [486, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[55, null], [486, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[56, null], [486, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[57, null], [486, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[58, null], [486, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[141, null]], "DiscretePermutationInvarianceConstraint": [[59, null], [486, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[60, null]], "DiscreteSamplingMethod": [[415, null]], "DiscreteSumConstraint": [[61, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[486, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[459, "discussion"]], "Disk Caching": [[487, "disk-caching"]], "Dummy": [[341, null]], "Duplicate Substances": [[456, "duplicate-substances"]], "Dynamic Exclusion": [[488, "dynamic-exclusion"]], "EDBOKernelFactory": [[280, null]], "EXPERIMENTAL: Floating Point Precision": [[487, "experimental-floating-point-precision"]], "Efficient Constraint Implementation via Polars": [[486, null]], "Efficient Search Space Creation": [[501, null]], "Environment Variables": [[487, null]], "Equality": [[499, "equality"]], "Equivalent copies": [[494, null]], "Estimation with Constraints": [[501, null]], "Example 1 \u2013 Normalized Targets": [[490, "example-1-normalized-targets"]], "Example 2 \u2013 Non-Normalized Targets": [[490, "example-2-non-normalized-targets"]], "Example Searchspace and objective parameters": [[439, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[441, null]], "Example for creating campaigns from configs": [[469, null]], "Example for custom parameter passing in surrogate models": [[454, null]], "Example for full simulation loop using a table-based lookup mechanism": [[435, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[436, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[434, null]], "Example for linear constraints in a continuous searchspace": [[442, null]], "Example for surrogate model with a custom pretrained model": [[453, null]], "Example for the serialization of a campaign": [[468, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[465, null]], "Example for using custom constraints in discrete searchspaces": [[444, null]], "Example for using dependency constraints in discrete searchspaces": [[445, null]], "Example for using different strategies": [[439, null]], "Example for using exclusion constraints in discrete searchspaces": [[446, null]], "Example for using exclusion constraints incorporating sums and products": [[447, null]], "Example for using synthetic test functions in hybrid spaces": [[466, null]], "Example for validation of a config file": [[470, null]], "Examples": [[475, null]], "Examples On This Page": [[489, null]], "Excluding Configurations": [[488, "excluding-configurations"]], "Expectations": [[498, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[453, "experiment-setup"], [454, "experiment-setup"]], "Experiment setup": [[444, "experiment-setup"], [445, "experiment-setup"], [446, "experiment-setup"], [447, "experiment-setup"], [468, "experiment-setup"]], "Experimental Feature": [[487, null], [487, null]], "Experimental Representation Limits": [[489, null]], "Experimental and Computational Representations": [[489, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.10.*)": [[479, "expired-deprecations-from-0-10"]], "Expired Deprecations (from 0.6.*)": [[479, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[479, "expired-deprecations-from-0-7"]], "Expired Deprecations (from 0.9.*)": [[479, "expired-deprecations-from-0-9"]], "Explainers": [[489, "explainers"]], "ExponentialTransformation": [[321, null]], "Extending BayBE\u2019s Functionality": [[480, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[496, "extracting-the-model-for-advanced-study"]], "FAQ": [[476, null]], "FPS Sampling Implementation": [[487, "fps-sampling-implementation"]], "FPSInitialization": [[209, null]], "FPSRecommender": [[210, null]], "Fixed": [[479, "fixed"], [479, "id4"], [479, "id7"], [479, "id10"], [479, "id15"], [479, "id24"], [479, "id29"], [479, "id31"], [479, "id35"], [479, "id39"], [479, "id45"], [479, "id53"], [479, "id57"], [479, "id62"], [479, "id67"], [479, "id71"], [479, "id78"], [479, "id83"], [479, "id89"], [479, "id95"], [479, "id103"], [479, "id107"], [479, "id112"], [479, "id119"], [479, "id123"], [479, "id127"], [479, "id134"], [479, "id138"], [479, "id142"], [479, "id146"], [479, "id150"], [479, "id152"], [479, "id155"]], "For Label-Like Parameters: Values and Active Values": [[491, "label-like"]], "From GitHub": [[477, "from-github"]], "From Local Clone": [[477, "from-local-clone"]], "From Package Index": [[477, "from-package-index"]], "From the Default Constructor": [[493, "from-the-default-constructor"]], "Further Information": [[485, "further-information"]], "GammaPrior": [[173, null]], "GaussianMixtureClusteringRecommender": [[204, null]], "GaussianProcessPreset": [[275, null]], "GaussianProcessSurrogate": [[268, null]], "General Information": [[492, "general-information"]], "General Workflow": [[480, "general-workflow"]], "Generating Lookup Tables": [[472, "generating-lookup-tables"]], "Getting Recommendations": [[461, "getting-recommendations"], [485, "getting-recommendations"], [488, null]], "Getting a recommendation and adding measurements": [[438, "getting-a-recommendation-and-adding-measurements"]], "Global Uncertainty Reduction": [[483, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[174, null]], "HalfNormalPrior": [[175, null]], "Hook instance vs. target instance": [[449, null]], "Hybrid constraints": [[486, null]], "IdentityTransformation": [[322, null]], "Important": [[497, null]], "Imports": [[433, "imports"], [449, "imports"], [451, "imports"], [456, "imports"], [457, "imports"], [459, "imports"], [461, "imports"], [462, "imports"], [464, "imports"], [472, "imports"], [474, "imports"]], "Inclusion of initial data": [[434, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[257, null]], "Indices and Tables": [[477, "indices-and-tables"]], "Influence of Continuous Parameters": [[501, null]], "Influence on Surrogate Models": [[486, null]], "Insights": [[489, null]], "Installation Related Issues": [[478, "installation-related-issues"]], "Interval": [[396, null]], "Invoking alternative constructors": [[494, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[453, "iterate-with-recommendations-and-measurements"], [454, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[494, "json-de-serialization"]], "KMeansClusteringRecommender": [[205, null]], "KMedoids": [[371, null]], "Kernel": [[108, null]], "KernelFactory": [[270, null]], "Known Issues": [[478, null]], "License": [[482, null]], "Limitations": [[484, null], [497, "limitations"]], "LinearKernel": [[110, null]], "Links for documentation": [[454, "links-for-documentation"]], "Local Uncertainty Reduction": [[483, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[176, null]], "LogarithmicTransformation": [[323, null]], "Lookup functionality and data creation": [[434, "lookup-functionality-and-data-creation"], [435, "lookup-functionality-and-data-creation"], [436, "lookup-functionality-and-data-creation"]], "Maintainers": [[481, "maintainers"]], "Manual verification of the constraint": [[444, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[445, "manual-verification-of-the-constraints"], [446, "manual-verification-of-the-constraints"], [447, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[484, "marking-experiments-as-pending"]], "MaternKernel": [[111, null]], "MeanPredictionSurrogate": [[284, null]], "MeasurableMetadata": [[402, null]], "Memory During Optimization": [[501, null]], "MemorySize": [[221, null]], "Meta Recommenders": [[488, null], [492, "meta-recommenders"]], "MetaRecommender": [[184, null]], "Metadata": [[403, null]], "Method overrides": [[480, "method-overrides"]], "Minimization": [[497, "minimization"]], "Minimization = Negated Maximization": [[497, null]], "Missing Lookup Values": [[495, null]], "Mixtures": [[455, null]], "Model Interpretation in BO": [[489, null]], "Model Outputs": [[453, "model-outputs"], [454, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[456, null]], "Modeling a Mixture in Traditional Representation": [[457, null]], "Monitoring the Probability of Improvement": [[451, null]], "Monkeypatching": [[449, "monkeypatching"], [450, null], [451, "monkeypatching"]], "MonotonicTransformation": [[313, null]], "Multi Target": [[460, null]], "Multi-Armed Bandit": [[458, null]], "Multi-Output Modeling": [[496, "multi-output-modeling"]], "Multi-Output Surrogate Models": [[489, "multi-output-surrogate-models"]], "Multiplication": [[499, "multiplication"]], "MultiplicativeTransformation": [[331, null]], "NGBoostSurrogate": [[286, null]], "NaiveHybridSpaceRecommender": [[191, null]], "Necessary imports": [[453, "necessary-imports"], [454, "necessary-imports"], [468, "necessary-imports"], [469, "necessary-imports"], [470, "necessary-imports"]], "Necessary imports for this example": [[434, "necessary-imports-for-this-example"], [435, "necessary-imports-for-this-example"], [436, "necessary-imports-for-this-example"], [438, "necessary-imports-for-this-example"], [439, "necessary-imports-for-this-example"], [441, "necessary-imports-for-this-example"], [442, "necessary-imports-for-this-example"], [444, "necessary-imports-for-this-example"], [445, "necessary-imports-for-this-example"], [446, "necessary-imports-for-this-example"], [447, "necessary-imports-for-this-example"], [465, "necessary-imports-for-this-example"], [466, "necessary-imports-for-this-example"]], "Nesting objects": [[494, "nesting-objects"]], "Non-Dominated Configurations": [[490, null]], "NonPredictiveRecommender": [[202, null]], "NormalPrior": [[177, null]], "Normalizing Existing Targets": [[497, "normalizing-existing-targets"]], "NumericalContinuousParameter": [[154, null], [491, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[155, null], [491, "numericaldiscreteparameter"]], "NumericalTarget": [[307, null], [497, "numericaltarget"]], "Objective": [[124, null], [490, null]], "Optimizing a Custom Black-Box Function": [[433, null]], "Optimizing a Laser\u2019s Wavelength": [[474, null]], "Optional Dependencies": [[477, "optional-dependencies"]], "Optional Dependency": [[491, null]], "Optional: Defining the Optimization Strategy": [[477, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[456, null]], "Order of Operations": [[499, null]], "PAMClusteringRecommender": [[206, null]], "Parallel Runs in Scenario Simulations": [[487, "parallel-runs-in-scenario-simulations"]], "Parameter": [[142, null]], "Parameter Encoding": [[491, null]], "Parameter Importance via SHAP": [[489, "parameter-importance-via-shap"]], "Parameter Names": [[491, null]], "Parameter Setup": [[456, "parameter-setup"], [457, "parameter-setup"]], "Parameter tolerances": [[485, null]], "ParameterEncoding": [[151, null]], "Parameters": [[491, null]], "Parameters for a full simulation loop": [[434, "parameters-for-a-full-simulation-loop"], [435, "parameters-for-a-full-simulation-loop"], [436, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[133, null], [490, "paretoobjective"]], "PartialAcquisitionFunction": [[28, null]], "Performing the simulation loop": [[434, "performing-the-simulation-loop"]], "PeriodicKernel": [[112, null]], "Permanent Exclusion": [[488, "permanent-exclusion"]], "Permutation Invariance": [[456, "permutation-invariance"]], "PiecewisePolynomialKernel": [[113, null]], "PlainKernelFactory": [[271, null]], "Plots": [[489, "plots"]], "Plotting the Results": [[433, "plotting-the-results"], [450, "plotting-the-results"], [451, "plotting-the-results"]], "Polars": [[487, "polars"]], "PolynomialKernel": [[114, null]], "Posterior Statistics with Desirability Objectives": [[485, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Power Transformation": [[497, "power-transformation"]], "PowerTransformation": [[324, null]], "Practical Considerations": [[497, null], [497, null], [497, null], [497, null], [497, null], [497, null]], "Predictive Statistics": [[485, "predictive-statistics"]], "Prior": [[170, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[450, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[120, null]], "Pure Recommenders": [[492, "pure-recommenders"]], "PureRecommender": [[194, null]], "Purely Continuous Search Spaces": [[483, null]], "PyCharm vs. exceptiongroup": [[478, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[115, null]], "RFFKernel": [[116, null]], "RQKernel": [[117, null]], "Ramp Transformation": [[497, "ramp-transformation"]], "RandomForestSurrogate": [[288, null]], "RandomRecommender": [[211, null]], "RecommenderProtocol": [[181, null]], "Recommenders": [[492, null]], "Registering Custom Hooks": [[449, null]], "Removed": [[479, "removed"], [479, "id11"], [479, "id16"], [479, "id25"], [479, "id46"], [479, "id52"], [479, "id61"], [479, "id74"], [479, "id84"], [479, "id90"], [479, "id99"]], "Representation of Data within Discrete Subspaces": [[493, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[501, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[493, "restricting-search-spaces-using-constraints"]], "Results": [[474, "results"]], "Row Order": [[487, null]], "Running the Simulation": [[459, "running-the-simulation"]], "Running the Simulation Loop": [[433, "running-the-simulation-loop"]], "SHAPInsight": [[99, null]], "SKLearnClusteringRecommender": [[207, null]], "Sampling Recommenders": [[492, "sampling-recommenders"]], "Scalarizer": [[131, null]], "ScaleKernel": [[121, null]], "Search Space Creation": [[456, "search-space-creation"], [457, "search-space-creation"]], "Search Space Memory Estimation": [[501, "search-space-memory-estimation"]], "Search Spaces": [[493, null]], "SearchSpace": [[216, null]], "SearchSpaceType": [[217, null]], "Searchspaces": [[463, null]], "Seeing Transfer Learning in Action": [[498, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[485, null]], "SequentialMetaRecommender": [[187, null]], "SerialMixin": [[240, null]], "Serialization": [[467, null], [485, "serialization"], [494, null], [499, null]], "Serialization and de-serialization": [[468, "serialization-and-de-serialization"]], "Set Point Matching": [[497, "set-point-matching"]], "Settings": [[433, "settings"], [450, "settings"], [451, "settings"], [462, "settings"], [464, "settings"], [472, "settings"], [474, "settings"]], "Setup": [[438, "setup"], [459, "setup"]], "Sigmoid Transformation": [[497, "sigmoid-transformation"]], "SigmoidTransformation": [[325, null], [499, "sigmoidtransformation"]], "Signature components": [[449, null]], "Simplex Construction": [[456, null]], "Simulating Multiple Scenarios": [[495, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[495, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[495, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[450, "simulating-the-interrupted-campaigns"]], "Simulating the Optimization Loop": [[474, "simulating-the-optimization-loop"]], "Simulating the Uninterrupted Campaigns": [[450, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[495, null]], "Simulation Loop": [[472, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[462, null]], "SingleTargetObjective": [[135, null], [490, "singletargetobjective"]], "Slot-based Representation": [[457, null]], "SmoothedBoxPrior": [[178, null]], "StreamingSequentialMetaRecommender": [[188, null]], "Sub-Sampling Method": [[483, null]], "SubSelectionCondition": [[44, null], [486, "subselectioncondition"]], "SubspaceContinuous": [[214, null]], "SubspaceDiscrete": [[222, null]], "Substance Amounts": [[456, "substance-amounts"]], "SubstanceEncoding": [[152, null]], "SubstanceParameter": [[158, null], [491, "substanceparameter"]], "Suggested Fix": [[478, null], [478, null], [478, null], [478, null]], "Supported Acquisition Functions": [[484, null]], "Supported Recommenders": [[484, null]], "Surrogate": [[259, null]], "Surrogate Model Limitations": [[486, null]], "Surrogate Replication": [[496, "surrogate-replication"]], "SurrogateProtocol": [[260, null]], "Surrogates": [[496, null]], "Synchronizing Pull Requests": [[480, "synchronizing-pull-requests"]], "Target": [[299, null]], "Target Normalization": [[461, null], [490, "target-normalization"], [497, "target-normalization"]], "Targets": [[497, null]], "Targets are Optimization Instructions": [[497, "targets-as-instruction"]], "TaskParameter": [[145, null], [491, "taskparameter"]], "Technology": [[498, null]], "Terminology": [[456, "terminology"], [494, null], [498, null]], "Terminology Continued": [[498, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[495, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[459, "the-black-box-model"]], "The Laser Model": [[474, "the-laser-model"]], "The Lookup Mechanism": [[495, "the-lookup-mechanism"]], "The Optimization Loop": [[477, "the-optimization-loop"]], "The Optimization Problem": [[474, "the-optimization-problem"]], "The Role of the TaskParameter": [[498, "the-role-of-the-taskparameter"]], "The Scenario": [[474, "the-scenario"]], "The configuration dictionary as a string": [[469, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[488, "the-recommend-call"]], "The type field": [[494, "the-type-field"]], "Theoretical Span": [[456, null]], "ThresholdCondition": [[45, null], [486, "thresholdcondition"]], "Trajectory-Based Control": [[488, null]], "Transfer Learning": [[471, null], [472, null], [498, null]], "Transformation": [[314, null]], "Transformations": [[473, null], [499, null]], "Triangular Transformation": [[497, "triangular-transformation"]], "TriangularTransformation": [[326, null], [499, "triangulartransformation"]], "Triggering the Hook": [[451, "triggering-the-hook"]], "Triggering the Hooks": [[449, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[189, null]], "TwoSidedAffineTransformation": [[327, null], [499, "twosidedaffinetransformation"]], "UncertainBool": [[343, null]], "Unlocking Data Treasures Through Transfer Learning": [[498, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[344, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[500, null]], "Using Custom Models": [[496, "using-custom-models"]], "Using Explicit Bounds": [[493, "using-explicit-bounds"]], "Using None": [[495, "using-none"]], "Using a Callable": [[495, "using-a-callable"]], "Using a Dataframe": [[495, "using-a-dataframe"]], "Using abbreviations": [[494, "using-abbreviations"]], "Using configuration instead": [[453, "using-configuration-instead"], [454, "using-configuration-instead"]], "Using default values": [[494, "using-default-values"]], "Utilities": [[501, null]], "Validation of model parameters": [[454, "validation-of-model-parameters"]], "Verification of Constraints": [[456, "verification-of-constraints"], [457, "verification-of-constraints"]], "Verification of Span": [[456, "verification-of-span"]], "Verification of the two dictionaries": [[470, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[442, "verify-the-constraints"]], "Visualization": [[462, "visualization"]], "Windows \u2013 Torch Problems": [[478, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[441, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [442, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [466, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[480, "writing-docstrings"]], "Writing classes": [[480, "writing-classes"]], "[0.1.0] - 2022-10-01": [[479, "id156"]], "[0.10.0] - 2024-08-02": [[479, "id48"]], "[0.11.0] - 2024-09-09": [[479, "id41"]], "[0.11.1] - 2024-10-01": [[479, "id36"]], "[0.11.2] - 2024-10-11": [[479, "id32"]], "[0.11.3] - 2024-11-06": [[479, "id30"]], "[0.11.4] - 2025-01-27": [[479, "id27"]], "[0.12.0] - 2025-01-28": [[479, "id21"]], "[0.12.1] - 2025-01-29": [[479, "id19"]], "[0.12.2] - 2025-01-31": [[479, "id17"]], "[0.13.0] - 2025-04-16": [[479, "id12"]], "[0.13.1] - 2025-06-06": [[479, "id8"]], "[0.13.2] - 2025-07-09": [[479, "id5"]], "[0.14.0] - 2025-09-10": [[479, "id1"]], "[0.2.0] - 2022-11-10": [[479, "id153"]], "[0.2.1] - 2022-12-01": [[479, "id151"]], "[0.2.2] - 2023-01-13": [[479, "id147"]], "[0.2.3] - 2023-03-14": [[479, "id143"]], "[0.2.4] - 2023-03-24": [[479, "id139"]], "[0.3.0] - 2023-06-27": [[479, "id135"]], "[0.3.1] - 2023-07-17": [[479, "id131"]], "[0.3.2] - 2023-07-24": [[479, "id128"]], "[0.4.0] - 2023-08-16": [[479, "id124"]], "[0.4.1] - 2023-08-23": [[479, "id120"]], "[0.4.2] - 2023-08-29": [[479, "id116"]], "[0.5.0] - 2023-09-15": [[479, "id113"]], "[0.5.1] - 2023-10-19": [[479, "id109"]], "[0.6.0] - 2023-11-17": [[479, "id104"]], "[0.6.1] - 2023-11-27": [[479, "id100"]], "[0.7.0] - 2023-12-04": [[479, "id96"]], "[0.7.1] - 2023-12-07": [[479, "id92"]], "[0.7.2] - 2024-01-24": [[479, "id86"]], "[0.7.3] - 2024-02-09": [[479, "id80"]], "[0.7.4] - 2024-02-28": [[479, "id75"]], "[0.8.0] - 2024-02-29": [[479, "id72"]], "[0.8.1] - 2024-03-11": [[479, "id68"]], "[0.8.2] - 2024-03-27": [[479, "id64"]], "[0.9.0] - 2024-05-21": [[479, "id58"]], "[0.9.1] - 2024-06-04": [[479, "id55"]], "[Unreleased]": [[479, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[25, null]], "baybe.acquisition.partial": [[27, null]], "baybe.acquisition.utils": [[29, null]], "baybe.acquisition.utils.convert_acqf": [[30, null]], "baybe.acquisition.utils.make_partitioning": [[31, null]], "baybe.acquisition.utils.str_to_acqf": [[32, null]], "baybe.campaign": [[33, null]], "baybe.constraints": [[35, null]], "baybe.constraints.base": [[36, null]], "baybe.constraints.conditions": [[42, null]], "baybe.constraints.continuous": [[46, null]], "baybe.constraints.deprecation": [[49, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[50, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[51, null]], "baybe.constraints.discrete": [[52, null]], "baybe.constraints.utils": [[62, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[63, null]], "baybe.constraints.validation": [[64, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[65, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[66, null]], "baybe.constraints.validation.validate_constraints": [[67, null]], "baybe.exceptions": [[68, null]], "baybe.exceptions.DeprecationError": [[69, null]], "baybe.exceptions.EmptySearchSpaceError": [[70, null]], "baybe.exceptions.IncompatibilityError": [[71, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[72, null]], "baybe.exceptions.IncompatibleArgumentError": [[73, null]], "baybe.exceptions.IncompatibleExplainerError": [[74, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[75, null]], "baybe.exceptions.IncompatibleSurrogateError": [[76, null]], "baybe.exceptions.IncompleteMeasurementsError": [[77, null]], "baybe.exceptions.InfeasibilityError": [[78, null]], "baybe.exceptions.InputDataTypeWarning": [[79, null]], "baybe.exceptions.InvalidSurrogateModelError": [[80, null]], "baybe.exceptions.InvalidTargetValueError": [[81, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[82, null]], "baybe.exceptions.ModelNotTrainedError": [[83, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[84, null]], "baybe.exceptions.NoMeasurementsError": [[85, null]], "baybe.exceptions.NoRecommendersLeftError": [[86, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[87, null]], "baybe.exceptions.NothingToSimulateError": [[88, null]], "baybe.exceptions.NumericalUnderflowError": [[89, null]], "baybe.exceptions.OptionalImportError": [[90, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[91, null]], "baybe.exceptions.UnidentifiedSubclassError": [[92, null]], "baybe.exceptions.UnmatchedAttributeError": [[93, null]], "baybe.exceptions.UnusedObjectWarning": [[94, null]], "baybe.insights": [[95, null]], "baybe.insights.shap": [[96, null]], "baybe.insights.shap.EXPLAINERS": [[97, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[98, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[100, null]], "baybe.insights.shap.SHAP_PLOTS": [[101, null]], "baybe.insights.shap.is_shap_explainer": [[102, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[103, null]], "baybe.kernels": [[104, null]], "baybe.kernels.base": [[105, null]], "baybe.kernels.basic": [[109, null]], "baybe.kernels.composite": [[118, null]], "baybe.objectives": [[122, null]], "baybe.objectives.base": [[123, null]], "baybe.objectives.base.to_objective": [[125, null]], "baybe.objectives.botorch": [[126, null]], "baybe.objectives.desirability": [[128, null]], "baybe.objectives.enum": [[130, null]], "baybe.objectives.pareto": [[132, null]], "baybe.objectives.single": [[134, null]], "baybe.objectives.validation": [[136, null]], "baybe.objectives.validation.validate_target_names": [[137, null]], "baybe.parameters": [[138, null]], "baybe.parameters.base": [[139, null]], "baybe.parameters.categorical": [[143, null]], "baybe.parameters.custom": [[146, null]], "baybe.parameters.enum": [[148, null]], "baybe.parameters.numerical": [[153, null]], "baybe.parameters.substance": [[156, null]], "baybe.parameters.substance.Smiles": [[157, null]], "baybe.parameters.utils": [[159, null]], "baybe.parameters.utils.activate_parameter": [[160, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[161, null]], "baybe.parameters.utils.is_inactive": [[162, null]], "baybe.parameters.utils.sort_parameters": [[163, null]], "baybe.parameters.validation": [[164, null]], "baybe.parameters.validation.validate_decorrelation": [[165, null]], "baybe.parameters.validation.validate_is_finite": [[166, null]], "baybe.parameters.validation.validate_unique_values": [[167, null]], "baybe.priors": [[168, null]], "baybe.priors.base": [[169, null]], "baybe.priors.basic": [[171, null]], "baybe.recommenders": [[179, null]], "baybe.recommenders.base": [[180, null]], "baybe.recommenders.meta": [[182, null]], "baybe.recommenders.meta.base": [[183, null]], "baybe.recommenders.meta.sequential": [[185, null]], "baybe.recommenders.naive": [[190, null]], "baybe.recommenders.pure": [[192, null]], "baybe.recommenders.pure.base": [[193, null]], "baybe.recommenders.pure.bayesian": [[195, null]], "baybe.recommenders.pure.bayesian.base": [[196, null]], "baybe.recommenders.pure.bayesian.botorch": [[198, null]], "baybe.recommenders.pure.nonpredictive": [[200, null]], "baybe.recommenders.pure.nonpredictive.base": [[201, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[203, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[208, null]], "baybe.searchspace": [[212, null]], "baybe.searchspace.continuous": [[213, null]], "baybe.searchspace.core": [[215, null]], "baybe.searchspace.core.to_searchspace": [[218, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[219, null]], "baybe.searchspace.discrete": [[220, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[223, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[224, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[225, null]], "baybe.searchspace.validation": [[226, null]], "baybe.searchspace.validation.get_transform_parameters": [[227, null]], "baybe.searchspace.validation.validate_parameter_names": [[228, null]], "baybe.searchspace.validation.validate_parameters": [[229, null]], "baybe.serialization": [[230, null]], "baybe.serialization.core": [[231, null]], "baybe.serialization.core.add_type": [[232, null]], "baybe.serialization.core.block_deserialization_hook": [[233, null]], "baybe.serialization.core.block_serialization_hook": [[234, null]], "baybe.serialization.core.converter": [[235, null]], "baybe.serialization.core.make_base_structure_hook": [[236, null]], "baybe.serialization.core.select_constructor_hook": [[237, null]], "baybe.serialization.core.unstructure_with_type": [[238, null]], "baybe.serialization.mixin": [[239, null]], "baybe.serialization.utils": [[241, null]], "baybe.serialization.utils.deserialize_dataframe": [[242, null]], "baybe.serialization.utils.serialize_dataframe": [[243, null]], "baybe.simulation": [[244, null]], "baybe.simulation.core": [[245, null]], "baybe.simulation.core.simulate_experiment": [[246, null]], "baybe.simulation.lookup": [[247, null]], "baybe.simulation.lookup.look_up_targets": [[248, null]], "baybe.simulation.scenarios": [[249, null]], "baybe.simulation.scenarios.simulate_scenarios": [[250, null]], "baybe.simulation.transfer_learning": [[251, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[252, null]], "baybe.surrogates": [[253, null]], "baybe.surrogates.bandit": [[254, null]], "baybe.surrogates.base": [[256, null]], "baybe.surrogates.base.PosteriorStatistic": [[258, null]], "baybe.surrogates.composite": [[261, null]], "baybe.surrogates.custom": [[263, null]], "baybe.surrogates.custom.register_custom_architecture": [[265, null]], "baybe.surrogates.gaussian_process": [[266, null]], "baybe.surrogates.gaussian_process.core": [[267, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[269, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[272, null]], "baybe.surrogates.gaussian_process.presets": [[273, null]], "baybe.surrogates.gaussian_process.presets.core": [[274, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[276, null]], "baybe.surrogates.gaussian_process.presets.default": [[277, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[279, null]], "baybe.surrogates.linear": [[281, null]], "baybe.surrogates.naive": [[283, null]], "baybe.surrogates.ngboost": [[285, null]], "baybe.surrogates.random_forest": [[287, null]], "baybe.surrogates.utils": [[289, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[290, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[291, null]], "baybe.surrogates.utils.catch_constant_targets": [[292, null]], "baybe.surrogates.validation": [[293, null]], "baybe.surrogates.validation.make_dict_validator": [[294, null]], "baybe.surrogates.validation.type_validation_converter": [[295, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[296, null]], "baybe.targets": [[297, null]], "baybe.targets.base": [[298, null]], "baybe.targets.binary": [[300, null]], "baybe.targets.binary.ChoiceValue": [[302, null]], "baybe.targets.botorch": [[303, null]], "baybe.targets.enum": [[305, null]], "baybe.targets.numerical": [[306, null]], "baybe.targets.transforms": [[308, null]], "baybe.targets.utils": [[309, null]], "baybe.targets.utils.combine_numerical_targets": [[310, null]], "baybe.transformations": [[311, null]], "baybe.transformations.base": [[312, null]], "baybe.transformations.basic": [[315, null]], "baybe.transformations.composite": [[328, null]], "baybe.transformations.utils": [[332, null]], "baybe.transformations.utils.combine_affine_transformations": [[333, null]], "baybe.transformations.utils.compress_transformations": [[334, null]], "baybe.transformations.utils.convert_transformation": [[335, null]], "baybe.utils": [[336, null]], "baybe.utils.augmentation": [[337, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[338, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[339, null]], "baybe.utils.basic": [[340, null]], "baybe.utils.basic.UNSPECIFIED": [[342, null]], "baybe.utils.basic.compose": [[346, null]], "baybe.utils.basic.compose_two": [[347, null]], "baybe.utils.basic.convert_to_float": [[348, null]], "baybe.utils.basic.find_subclass": [[349, null]], "baybe.utils.basic.get_baseclasses": [[350, null]], "baybe.utils.basic.get_subclasses": [[351, null]], "baybe.utils.basic.group_duplicate_values": [[352, null]], "baybe.utils.basic.hilberts_factory": [[353, null]], "baybe.utils.basic.is_all_instance": [[354, null]], "baybe.utils.basic.match_attributes": [[355, null]], "baybe.utils.basic.refers_to": [[356, null]], "baybe.utils.basic.register_hooks": [[357, null]], "baybe.utils.basic.to_tuple": [[358, null]], "baybe.utils.boolean": [[359, null]], "baybe.utils.boolean.check_if_in": [[360, null]], "baybe.utils.boolean.is_abstract": [[361, null]], "baybe.utils.boolean.strtobool": [[362, null]], "baybe.utils.chemistry": [[363, null]], "baybe.utils.chemistry.get_canonical_smiles": [[364, null]], "baybe.utils.chemistry.get_fingerprint_class": [[365, null]], "baybe.utils.chemistry.name_to_smiles": [[366, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[367, null]], "baybe.utils.clustering_algorithms": [[368, null]], "baybe.utils.clustering_algorithms.third_party": [[369, null]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[370, null]], "baybe.utils.conversion": [[372, null]], "baybe.utils.conversion.fraction_to_float": [[373, null]], "baybe.utils.conversion.nonstring_to_tuple": [[374, null]], "baybe.utils.conversion.to_string": [[375, null]], "baybe.utils.dataframe": [[376, null]], "baybe.utils.dataframe.add_fake_measurements": [[377, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[378, null]], "baybe.utils.dataframe.add_parameter_noise": [[379, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[380, null]], "baybe.utils.dataframe.create_fake_input": [[381, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[382, null]], "baybe.utils.dataframe.df_drop_string_columns": [[383, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[384, null]], "baybe.utils.dataframe.filter_df": [[385, null]], "baybe.utils.dataframe.fuzzy_row_match": [[386, null]], "baybe.utils.dataframe.get_transform_objects": [[387, null]], "baybe.utils.dataframe.handle_missing_values": [[388, null]], "baybe.utils.dataframe.normalize_input_dtypes": [[389, null]], "baybe.utils.dataframe.pretty_print_df": [[390, null]], "baybe.utils.dataframe.to_tensor": [[391, null]], "baybe.utils.dataframe.transform_target_columns": [[392, null]], "baybe.utils.interval": [[393, null]], "baybe.utils.interval.ConvertibleToInterval": [[394, null]], "baybe.utils.interval.InfiniteIntervalError": [[395, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[397, null]], "baybe.utils.memory": [[398, null]], "baybe.utils.memory.bytes_to_human_readable": [[399, null]], "baybe.utils.metadata": [[400, null]], "baybe.utils.metadata.ConvertibleToMeasurableMetadata": [[401, null]], "baybe.utils.metadata.to_metadata": [[404, null]], "baybe.utils.numerical": [[405, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[406, null]], "baybe.utils.numerical.DTypeFloatONNX": [[407, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[408, null]], "baybe.utils.numerical.closer_element": [[409, null]], "baybe.utils.numerical.closest_element": [[410, null]], "baybe.utils.random": [[411, null]], "baybe.utils.random.set_random_seed": [[412, null]], "baybe.utils.random.temporary_seed": [[413, null]], "baybe.utils.sampling_algorithms": [[414, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[416, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[417, null]], "baybe.utils.scaling": [[418, null]], "baybe.utils.torch": [[420, null]], "baybe.utils.torch.DTypeFloatTorch": [[421, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[422, null]], "baybe.utils.validation": [[423, null]], "baybe.utils.validation.finite_float": [[424, null]], "baybe.utils.validation.non_inf_float": [[425, null]], "baybe.utils.validation.non_nan_float": [[426, null]], "baybe.utils.validation.validate_not_nan": [[427, null]], "baybe.utils.validation.validate_object_names": [[428, null]], "baybe.utils.validation.validate_objective_input": [[429, null]], "baybe.utils.validation.validate_parameter_input": [[430, null]], "baybe.utils.validation.validate_target_input": [[431, null]], "classproperty": [[345, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[478, "macos-arm64-leaked-semaphore"]], "qExpectedHypervolumeImprovement": [[9, null]], "qExpectedImprovement": [[10, null]], "qKnowledgeGradient": [[11, null]], "qLogExpectedHypervolumeImprovement": [[12, null]], "qLogExpectedImprovement": [[13, null]], "qLogNParEGO": [[14, null]], "qLogNoisyExpectedHypervolumeImprovement": [[15, null]], "qLogNoisyExpectedImprovement": [[16, null]], "qNegIntegratedPosteriorVariance": [[17, null]], "qNoisyExpectedHypervolumeImprovement": [[18, null]], "qNoisyExpectedImprovement": [[19, null]], "qPosteriorStandardDeviation": [[20, null]], "qProbabilityOfImprovement": [[21, null]], "qSimpleRegret": [[22, null]], "qThompsonSampling": [[23, null]], "qUpperConfidenceBound": [[24, null]], "\u201cPre-training\u201d stage": [[453, "pre-training-stage"]], "\u26a1 Quick Start": [[477, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[477, "maintainers"]], "\ud83d\udcbb Installation": [[477, "installation"]], "\ud83d\udcc4 License": [[477, "license"]], "\ud83d\udcd6 Citation": [[477, "citation"]], "\ud83d\udce1 Telemetry": [[477, "telemetry"]], "\ud83d\udd0b Batteries Included": [[477, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[477, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.make_partitioning", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.IncompleteMeasurementsError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InputDataTypeWarning", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoMeasurementsError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.botorch", "_autosummary/baybe.objectives.botorch.ChainedMCObjective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.add_type", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.make_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_with_type", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.make_dict_validator", "_autosummary/baybe.surrogates.validation.type_validation_converter", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.botorch", "_autosummary/baybe.targets.botorch.AffinePosteriorTransform", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.utils", "_autosummary/baybe.targets.utils.combine_numerical_targets", "_autosummary/baybe.transformations", "_autosummary/baybe.transformations.base", "_autosummary/baybe.transformations.base.MonotonicTransformation", "_autosummary/baybe.transformations.base.Transformation", "_autosummary/baybe.transformations.basic", "_autosummary/baybe.transformations.basic.AbsoluteTransformation", "_autosummary/baybe.transformations.basic.AffineTransformation", "_autosummary/baybe.transformations.basic.BellTransformation", "_autosummary/baybe.transformations.basic.ClampingTransformation", "_autosummary/baybe.transformations.basic.CustomTransformation", "_autosummary/baybe.transformations.basic.ExponentialTransformation", "_autosummary/baybe.transformations.basic.IdentityTransformation", "_autosummary/baybe.transformations.basic.LogarithmicTransformation", "_autosummary/baybe.transformations.basic.PowerTransformation", "_autosummary/baybe.transformations.basic.SigmoidTransformation", "_autosummary/baybe.transformations.basic.TriangularTransformation", "_autosummary/baybe.transformations.basic.TwoSidedAffineTransformation", "_autosummary/baybe.transformations.composite", "_autosummary/baybe.transformations.composite.AdditiveTransformation", "_autosummary/baybe.transformations.composite.ChainedTransformation", "_autosummary/baybe.transformations.composite.MultiplicativeTransformation", "_autosummary/baybe.transformations.utils", "_autosummary/baybe.transformations.utils.combine_affine_transformations", "_autosummary/baybe.transformations.utils.compress_transformations", "_autosummary/baybe.transformations.utils.convert_transformation", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UncertainBool", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.compose", "_autosummary/baybe.utils.basic.compose_two", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.clustering_algorithms", "_autosummary/baybe.utils.clustering_algorithms.third_party", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.conversion.to_string", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.handle_missing_values", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.ConvertibleToInterval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.metadata", "_autosummary/baybe.utils.metadata.ConvertibleToMeasurableMetadata", "_autosummary/baybe.utils.metadata.MeasurableMetadata", "_autosummary/baybe.utils.metadata.Metadata", "_autosummary/baybe.utils.metadata.to_metadata", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_object_names", "_autosummary/baybe.utils.validation.validate_objective_input", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/basic_transfer_learning", "examples/Transformations/Transformations", "examples/Transformations/laser_tuning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/transformations", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.make_partitioning.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.IncompleteMeasurementsError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InputDataTypeWarning.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoMeasurementsError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.botorch.rst", "_autosummary/baybe.objectives.botorch.ChainedMCObjective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.add_type.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.make_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_with_type.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.make_dict_validator.rst", "_autosummary/baybe.surrogates.validation.type_validation_converter.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.botorch.rst", "_autosummary/baybe.targets.botorch.AffinePosteriorTransform.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.utils.rst", "_autosummary/baybe.targets.utils.combine_numerical_targets.rst", "_autosummary/baybe.transformations.rst", "_autosummary/baybe.transformations.base.rst", "_autosummary/baybe.transformations.base.MonotonicTransformation.rst", "_autosummary/baybe.transformations.base.Transformation.rst", "_autosummary/baybe.transformations.basic.rst", "_autosummary/baybe.transformations.basic.AbsoluteTransformation.rst", "_autosummary/baybe.transformations.basic.AffineTransformation.rst", "_autosummary/baybe.transformations.basic.BellTransformation.rst", "_autosummary/baybe.transformations.basic.ClampingTransformation.rst", "_autosummary/baybe.transformations.basic.CustomTransformation.rst", "_autosummary/baybe.transformations.basic.ExponentialTransformation.rst", "_autosummary/baybe.transformations.basic.IdentityTransformation.rst", "_autosummary/baybe.transformations.basic.LogarithmicTransformation.rst", "_autosummary/baybe.transformations.basic.PowerTransformation.rst", "_autosummary/baybe.transformations.basic.SigmoidTransformation.rst", "_autosummary/baybe.transformations.basic.TriangularTransformation.rst", "_autosummary/baybe.transformations.basic.TwoSidedAffineTransformation.rst", "_autosummary/baybe.transformations.composite.rst", "_autosummary/baybe.transformations.composite.AdditiveTransformation.rst", "_autosummary/baybe.transformations.composite.ChainedTransformation.rst", "_autosummary/baybe.transformations.composite.MultiplicativeTransformation.rst", "_autosummary/baybe.transformations.utils.rst", "_autosummary/baybe.transformations.utils.combine_affine_transformations.rst", "_autosummary/baybe.transformations.utils.compress_transformations.rst", "_autosummary/baybe.transformations.utils.convert_transformation.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UncertainBool.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.compose.rst", "_autosummary/baybe.utils.basic.compose_two.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.clustering_algorithms.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.conversion.to_string.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.handle_missing_values.rst", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.ConvertibleToInterval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.metadata.rst", "_autosummary/baybe.utils.metadata.ConvertibleToMeasurableMetadata.rst", "_autosummary/baybe.utils.metadata.MeasurableMetadata.rst", "_autosummary/baybe.utils.metadata.Metadata.rst", "_autosummary/baybe.utils.metadata.to_metadata.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_object_names.rst", "_autosummary/baybe.utils.validation.validate_objective_input.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/Transformations/Transformations.md", "examples/Transformations/laser_tuning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/transformations.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[69, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[70, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[71, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[72, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[73, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[74, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[75, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[76, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.incompletemeasurementserror method)": [[77, "baybe.exceptions.IncompleteMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[78, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.inputdatatypewarning method)": [[79, "baybe.exceptions.InputDataTypeWarning.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[80, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[81, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[82, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[83, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[84, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.nomeasurementserror method)": [[85, "baybe.exceptions.NoMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[86, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[87, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[88, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[89, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[90, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[91, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[92, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[93, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[94, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[99, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[106, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[107, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[108, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[110, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[111, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[112, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[114, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[115, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[116, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[117, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[119, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[120, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[121, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[124, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[133, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[135, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[142, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[170, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[172, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[173, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[174, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[175, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[176, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[177, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[178, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[181, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[194, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[221, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[260, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[278, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[280, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[299, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[301, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.transformations.base.monotonictransformation method)": [[313, "baybe.transformations.base.MonotonicTransformation.__init__", false]], "__init__() (baybe.transformations.base.transformation method)": [[314, "baybe.transformations.base.Transformation.__init__", false]], "__init__() (baybe.transformations.basic.absolutetransformation method)": [[316, "baybe.transformations.basic.AbsoluteTransformation.__init__", false]], "__init__() (baybe.transformations.basic.affinetransformation method)": [[317, "baybe.transformations.basic.AffineTransformation.__init__", false]], "__init__() (baybe.transformations.basic.belltransformation method)": [[318, "baybe.transformations.basic.BellTransformation.__init__", false]], "__init__() (baybe.transformations.basic.clampingtransformation method)": [[319, "baybe.transformations.basic.ClampingTransformation.__init__", false]], "__init__() (baybe.transformations.basic.customtransformation method)": [[320, "baybe.transformations.basic.CustomTransformation.__init__", false]], "__init__() (baybe.transformations.basic.exponentialtransformation method)": [[321, "baybe.transformations.basic.ExponentialTransformation.__init__", false]], "__init__() (baybe.transformations.basic.identitytransformation method)": [[322, "baybe.transformations.basic.IdentityTransformation.__init__", false]], "__init__() (baybe.transformations.basic.logarithmictransformation method)": [[323, "baybe.transformations.basic.LogarithmicTransformation.__init__", false]], "__init__() (baybe.transformations.basic.powertransformation method)": [[324, "baybe.transformations.basic.PowerTransformation.__init__", false]], "__init__() (baybe.transformations.basic.sigmoidtransformation method)": [[325, "baybe.transformations.basic.SigmoidTransformation.__init__", false]], "__init__() (baybe.transformations.basic.triangulartransformation method)": [[326, "baybe.transformations.basic.TriangularTransformation.__init__", false]], "__init__() (baybe.transformations.basic.twosidedaffinetransformation method)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.__init__", false]], "__init__() (baybe.transformations.composite.additivetransformation method)": [[329, "baybe.transformations.composite.AdditiveTransformation.__init__", false]], "__init__() (baybe.transformations.composite.chainedtransformation method)": [[330, "baybe.transformations.composite.ChainedTransformation.__init__", false]], "__init__() (baybe.transformations.composite.multiplicativetransformation method)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[345, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[341, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[395, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[396, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.metadata.measurablemetadata method)": [[402, "baybe.utils.metadata.MeasurableMetadata.__init__", false]], "__init__() (baybe.utils.metadata.metadata method)": [[403, "baybe.utils.metadata.Metadata.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[419, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[69, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[70, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[71, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[72, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[73, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[74, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[75, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[76, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.incompletemeasurementserror method)": [[77, "baybe.exceptions.IncompleteMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[78, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.inputdatatypewarning method)": [[79, "baybe.exceptions.InputDataTypeWarning.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[80, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[81, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[82, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[83, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[84, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.nomeasurementserror method)": [[85, "baybe.exceptions.NoMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[86, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[87, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[88, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[89, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[90, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[91, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[92, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[93, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[94, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[149, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[150, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[152, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[395, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[178, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[26, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "abs() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.abs", false]], "abs() (baybe.transformations.base.monotonictransformation method)": [[313, "baybe.transformations.base.MonotonicTransformation.abs", false]], "abs() (baybe.transformations.base.transformation method)": [[314, "baybe.transformations.base.Transformation.abs", false]], "abs() (baybe.transformations.basic.absolutetransformation method)": [[316, "baybe.transformations.basic.AbsoluteTransformation.abs", false]], "abs() (baybe.transformations.basic.affinetransformation method)": [[317, "baybe.transformations.basic.AffineTransformation.abs", false]], "abs() (baybe.transformations.basic.belltransformation method)": [[318, "baybe.transformations.basic.BellTransformation.abs", false]], "abs() (baybe.transformations.basic.clampingtransformation method)": [[319, "baybe.transformations.basic.ClampingTransformation.abs", false]], "abs() (baybe.transformations.basic.customtransformation method)": [[320, "baybe.transformations.basic.CustomTransformation.abs", false]], "abs() (baybe.transformations.basic.exponentialtransformation method)": [[321, "baybe.transformations.basic.ExponentialTransformation.abs", false]], "abs() (baybe.transformations.basic.identitytransformation method)": [[322, "baybe.transformations.basic.IdentityTransformation.abs", false]], "abs() (baybe.transformations.basic.logarithmictransformation method)": [[323, "baybe.transformations.basic.LogarithmicTransformation.abs", false]], "abs() (baybe.transformations.basic.powertransformation method)": [[324, "baybe.transformations.basic.PowerTransformation.abs", false]], "abs() (baybe.transformations.basic.sigmoidtransformation method)": [[325, "baybe.transformations.basic.SigmoidTransformation.abs", false]], "abs() (baybe.transformations.basic.triangulartransformation method)": [[326, "baybe.transformations.basic.TriangularTransformation.abs", false]], "abs() (baybe.transformations.basic.twosidedaffinetransformation method)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.abs", false]], "abs() (baybe.transformations.composite.additivetransformation method)": [[329, "baybe.transformations.composite.AdditiveTransformation.abs", false]], "abs() (baybe.transformations.composite.chainedtransformation method)": [[330, "baybe.transformations.composite.ChainedTransformation.abs", false]], "abs() (baybe.transformations.composite.multiplicativetransformation method)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.abs", false]], "absolutetransformation (class in baybe.transformations.basic)": [[316, "baybe.transformations.basic.AbsoluteTransformation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_values() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[26, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[160, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[377, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.add_measurements", false]], "add_module() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.add_module", false]], "add_module() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.add_module", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[378, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[379, "baybe.utils.dataframe.add_parameter_noise", false]], "add_type() (in module baybe.serialization.core)": [[232, "baybe.serialization.core.add_type", false]], "additivekernel (class in baybe.kernels.composite)": [[119, "baybe.kernels.composite.AdditiveKernel", false]], "additivetransformation (class in baybe.transformations.composite)": [[329, "baybe.transformations.composite.AdditiveTransformation", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "affineposteriortransform (class in baybe.targets.botorch)": [[304, "baybe.targets.botorch.AffinePosteriorTransform", false]], "affinetransformation (class in baybe.transformations.basic)": [[317, "baybe.transformations.basic.AffineTransformation", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[194, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[194, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[194, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.alpha", false]], "alpha (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.alpha", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[172, "baybe.priors.basic.BetaPrior.alpha", false]], "apply() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.apply", false]], "apply() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.apply", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[380, "baybe.utils.dataframe.arrays_to_dataframes", false]], "as_pre_transformation (baybe.objectives.desirability.desirabilityobjective attribute)": [[129, "baybe.objectives.desirability.DesirabilityObjective.as_pre_transformation", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[178, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[99, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[121, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[119, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[120, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[106, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[290, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[291, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[275, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[25, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[27, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[29, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[33, "module-baybe.campaign", false]], "baybe.constraints": [[35, "module-baybe.constraints", false]], "baybe.constraints.base": [[36, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[42, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[46, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[49, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[52, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[62, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[64, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[68, "module-baybe.exceptions", false]], "baybe.insights": [[95, "module-baybe.insights", false]], "baybe.insights.shap": [[96, "module-baybe.insights.shap", false]], "baybe.kernels": [[104, "module-baybe.kernels", false]], "baybe.kernels.base": [[105, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[109, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[118, "module-baybe.kernels.composite", false]], "baybe.objectives": [[122, "module-baybe.objectives", false]], "baybe.objectives.base": [[123, "module-baybe.objectives.base", false]], "baybe.objectives.botorch": [[126, "module-baybe.objectives.botorch", false]], "baybe.objectives.desirability": [[128, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[130, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[132, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[134, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[136, "module-baybe.objectives.validation", false]], "baybe.parameters": [[138, "module-baybe.parameters", false]], "baybe.parameters.base": [[139, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[143, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[146, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[148, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[153, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[156, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[159, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[164, "module-baybe.parameters.validation", false]], "baybe.priors": [[168, "module-baybe.priors", false]], "baybe.priors.base": [[169, "module-baybe.priors.base", false]], "baybe.priors.basic": [[171, "module-baybe.priors.basic", false]], "baybe.recommenders": [[179, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[180, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[182, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[183, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[185, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[190, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[192, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[193, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[195, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[196, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[198, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.nonpredictive": [[200, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[201, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[203, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[208, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[212, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[213, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[215, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[220, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[226, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[230, "module-baybe.serialization", false]], "baybe.serialization.core": [[231, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[239, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[241, "module-baybe.serialization.utils", false]], "baybe.simulation": [[244, "module-baybe.simulation", false]], "baybe.simulation.core": [[245, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[247, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[249, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[251, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[253, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[254, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[256, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[261, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[263, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[266, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[267, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[269, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[273, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[274, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[277, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[279, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[281, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[283, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[285, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[287, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[289, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[293, "module-baybe.surrogates.validation", false]], "baybe.targets": [[297, "module-baybe.targets", false]], "baybe.targets.base": [[298, "module-baybe.targets.base", false]], "baybe.targets.binary": [[300, "module-baybe.targets.binary", false]], "baybe.targets.botorch": [[303, "module-baybe.targets.botorch", false]], "baybe.targets.enum": [[305, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[306, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[308, "module-baybe.targets.transforms", false]], "baybe.targets.utils": [[309, "module-baybe.targets.utils", false]], "baybe.transformations": [[311, "module-baybe.transformations", false]], "baybe.transformations.base": [[312, "module-baybe.transformations.base", false]], "baybe.transformations.basic": [[315, "module-baybe.transformations.basic", false]], "baybe.transformations.composite": [[328, "module-baybe.transformations.composite", false]], "baybe.transformations.utils": [[332, "module-baybe.transformations.utils", false]], "baybe.utils": [[336, "module-baybe.utils", false]], "baybe.utils.augmentation": [[337, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[340, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[359, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[363, "module-baybe.utils.chemistry", false]], "baybe.utils.clustering_algorithms": [[368, "module-baybe.utils.clustering_algorithms", false]], "baybe.utils.clustering_algorithms.third_party": [[369, "module-baybe.utils.clustering_algorithms.third_party", false]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[370, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false]], "baybe.utils.conversion": [[372, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[376, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[393, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[398, "module-baybe.utils.memory", false]], "baybe.utils.metadata": [[400, "module-baybe.utils.metadata", false]], "baybe.utils.numerical": [[405, "module-baybe.utils.numerical", false]], "baybe.utils.random": [[411, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[414, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[418, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[420, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[423, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "belltransformation (class in baybe.transformations.basic)": [[318, "baybe.transformations.basic.BellTransformation", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[172, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[172, "baybe.priors.basic.BetaPrior", false]], "bfloat16() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.bfloat16", false]], "bfloat16() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.bfloat16", false]], "binarytarget (class in baybe.targets.binary)": [[301, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[233, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[234, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "buffers() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.buffers", false]], "buffers() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.buffers", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[399, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[34, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[292, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[149, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[144, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.transformations.basic.belltransformation attribute)": [[318, "baybe.transformations.basic.BellTransformation.center", false]], "center (baybe.transformations.basic.sigmoidtransformation attribute)": [[325, "baybe.transformations.basic.SigmoidTransformation.center", false]], "center (baybe.utils.interval.interval property)": [[396, "baybe.utils.interval.Interval.center", false]], "chain() (baybe.transformations.base.monotonictransformation method)": [[313, "baybe.transformations.base.MonotonicTransformation.chain", false]], "chain() (baybe.transformations.base.transformation method)": [[314, "baybe.transformations.base.Transformation.chain", false]], "chain() (baybe.transformations.basic.absolutetransformation method)": [[316, "baybe.transformations.basic.AbsoluteTransformation.chain", false]], "chain() (baybe.transformations.basic.affinetransformation method)": [[317, "baybe.transformations.basic.AffineTransformation.chain", false]], "chain() (baybe.transformations.basic.belltransformation method)": [[318, "baybe.transformations.basic.BellTransformation.chain", false]], "chain() (baybe.transformations.basic.clampingtransformation method)": [[319, "baybe.transformations.basic.ClampingTransformation.chain", false]], "chain() (baybe.transformations.basic.customtransformation method)": [[320, "baybe.transformations.basic.CustomTransformation.chain", false]], "chain() (baybe.transformations.basic.exponentialtransformation method)": [[321, "baybe.transformations.basic.ExponentialTransformation.chain", false]], "chain() (baybe.transformations.basic.identitytransformation method)": [[322, "baybe.transformations.basic.IdentityTransformation.chain", false]], "chain() (baybe.transformations.basic.logarithmictransformation method)": [[323, "baybe.transformations.basic.LogarithmicTransformation.chain", false]], "chain() (baybe.transformations.basic.powertransformation method)": [[324, "baybe.transformations.basic.PowerTransformation.chain", false]], "chain() (baybe.transformations.basic.sigmoidtransformation method)": [[325, "baybe.transformations.basic.SigmoidTransformation.chain", false]], "chain() (baybe.transformations.basic.triangulartransformation method)": [[326, "baybe.transformations.basic.TriangularTransformation.chain", false]], "chain() (baybe.transformations.basic.twosidedaffinetransformation method)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.chain", false]], "chain() (baybe.transformations.composite.additivetransformation method)": [[329, "baybe.transformations.composite.AdditiveTransformation.chain", false]], "chain() (baybe.transformations.composite.chainedtransformation method)": [[330, "baybe.transformations.composite.ChainedTransformation.chain", false]], "chain() (baybe.transformations.composite.multiplicativetransformation method)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.chain", false]], "chainedmcobjective (class in baybe.objectives.botorch)": [[127, "baybe.objectives.botorch.ChainedMCObjective", false]], "chainedtransformation (class in baybe.transformations.composite)": [[330, "baybe.transformations.composite.ChainedTransformation", false]], "check_if_in() (in module baybe.utils.boolean)": [[360, "baybe.utils.boolean.check_if_in", false]], "children() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.children", false]], "children() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.children", false]], "choicevalue (in module baybe.targets.binary)": [[302, "baybe.targets.binary.ChoiceValue", false]], "clamp() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.clamp", false]], "clamp() (baybe.transformations.base.monotonictransformation method)": [[313, "baybe.transformations.base.MonotonicTransformation.clamp", false]], "clamp() (baybe.transformations.base.transformation method)": [[314, "baybe.transformations.base.Transformation.clamp", false]], "clamp() (baybe.transformations.basic.absolutetransformation method)": [[316, "baybe.transformations.basic.AbsoluteTransformation.clamp", false]], "clamp() (baybe.transformations.basic.affinetransformation method)": [[317, "baybe.transformations.basic.AffineTransformation.clamp", false]], "clamp() (baybe.transformations.basic.belltransformation method)": [[318, "baybe.transformations.basic.BellTransformation.clamp", false]], "clamp() (baybe.transformations.basic.clampingtransformation method)": [[319, "baybe.transformations.basic.ClampingTransformation.clamp", false]], "clamp() (baybe.transformations.basic.customtransformation method)": [[320, "baybe.transformations.basic.CustomTransformation.clamp", false]], "clamp() (baybe.transformations.basic.exponentialtransformation method)": [[321, "baybe.transformations.basic.ExponentialTransformation.clamp", false]], "clamp() (baybe.transformations.basic.identitytransformation method)": [[322, "baybe.transformations.basic.IdentityTransformation.clamp", false]], "clamp() (baybe.transformations.basic.logarithmictransformation method)": [[323, "baybe.transformations.basic.LogarithmicTransformation.clamp", false]], "clamp() (baybe.transformations.basic.powertransformation method)": [[324, "baybe.transformations.basic.PowerTransformation.clamp", false]], "clamp() (baybe.transformations.basic.sigmoidtransformation method)": [[325, "baybe.transformations.basic.SigmoidTransformation.clamp", false]], "clamp() (baybe.transformations.basic.triangulartransformation method)": [[326, "baybe.transformations.basic.TriangularTransformation.clamp", false]], "clamp() (baybe.transformations.basic.twosidedaffinetransformation method)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.clamp", false]], "clamp() (baybe.transformations.composite.additivetransformation method)": [[329, "baybe.transformations.composite.AdditiveTransformation.clamp", false]], "clamp() (baybe.transformations.composite.chainedtransformation method)": [[330, "baybe.transformations.composite.ChainedTransformation.clamp", false]], "clamp() (baybe.transformations.composite.multiplicativetransformation method)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.clamp", false]], "clamp() (baybe.utils.interval.interval method)": [[396, "baybe.utils.interval.Interval.clamp", false]], "clampingtransformation (class in baybe.transformations.basic)": [[319, "baybe.transformations.basic.ClampingTransformation", false]], "classproperty (class in baybe.utils.basic)": [[345, "baybe.utils.basic.classproperty", false]], "clear_cache() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.clear_cache", false]], "closer_element() (in module baybe.utils.numerical)": [[409, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[410, "baybe.utils.numerical.closest_element", false]], "cluster_centers_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.cluster_centers_", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[419, "baybe.utils.scaling.ColumnTransformer", false]], "combine_affine_transformations() (in module baybe.transformations.utils)": [[333, "baybe.transformations.utils.combine_affine_transformations", false]], "combine_numerical_targets() (in module baybe.targets.utils)": [[310, "baybe.targets.utils.combine_numerical_targets", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[221, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[140, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[142, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[221, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[221, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[194, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compile() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.compile", false]], "compile() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.compile", false]], "compose() (in module baybe.utils.basic)": [[346, "baybe.utils.basic.compose", false]], "compose_two() (in module baybe.utils.basic)": [[347, "baybe.utils.basic.compose_two", false]], "compositekernel (class in baybe.kernels.base)": [[107, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[262, "baybe.surrogates.composite.CompositeSurrogate", false]], "compress_transformations() (in module baybe.transformations.utils)": [[334, "baybe.transformations.utils.compress_transformations", false]], "compute_ref_point() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement static method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement static method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[173, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[43, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[396, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[216, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[217, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[39, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[50, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[51, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[140, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[30, "baybe.acquisition.utils.convert_acqf", false]], "convert_to_float() (in module baybe.utils.basic)": [[348, "baybe.utils.basic.convert_to_float", false]], "convert_transformation() (in module baybe.transformations.utils)": [[335, "baybe.transformations.utils.convert_transformation", false]], "converter (in module baybe.serialization.core)": [[235, "baybe.serialization.core.converter", false]], "convertibletointerval (in module baybe.utils.interval)": [[394, "baybe.utils.interval.ConvertibleToInterval", false]], "convertibletomeasurablemetadata (in module baybe.utils.metadata)": [[401, "baybe.utils.metadata.ConvertibleToMeasurableMetadata", false]], "cpu() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.cpu", false]], "cpu() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.cpu", false]], "create() (baybe.utils.interval.interval class method)": [[396, "baybe.utils.interval.Interval.create", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[381, "baybe.utils.dataframe.create_fake_input", false]], "cuda() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.cuda", false]], "cuda() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.cuda", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[150, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[147, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[150, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "customtransformation (class in baybe.transformations.basic)": [[320, "baybe.transformations.basic.CustomTransformation", false]], "cutoffs (baybe.transformations.basic.clampingtransformation attribute)": [[319, "baybe.transformations.basic.ClampingTransformation.cutoffs", false]], "cutoffs (baybe.transformations.basic.triangulartransformation attribute)": [[326, "baybe.transformations.basic.TriangularTransformation.cutoffs", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[278, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[69, "baybe.exceptions.DeprecationError", false]], "description (baybe.objectives.base.objective property)": [[124, "baybe.objectives.base.Objective.description", false]], "description (baybe.objectives.desirability.desirabilityobjective property)": [[129, "baybe.objectives.desirability.DesirabilityObjective.description", false]], "description (baybe.objectives.pareto.paretoobjective property)": [[133, "baybe.objectives.pareto.ParetoObjective.description", false]], "description (baybe.objectives.single.singletargetobjective property)": [[135, "baybe.objectives.single.SingleTargetObjective.description", false]], "description (baybe.parameters.base.continuousparameter property)": [[140, "baybe.parameters.base.ContinuousParameter.description", false]], "description (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.description", false]], "description (baybe.parameters.base.parameter property)": [[142, "baybe.parameters.base.Parameter.description", false]], "description (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.description", false]], "description (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.description", false]], "description (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.description", false]], "description (baybe.parameters.numerical.numericalcontinuousparameter property)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.description", false]], "description (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.description", false]], "description (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.description", false]], "description (baybe.targets.base.target property)": [[299, "baybe.targets.base.Target.description", false]], "description (baybe.targets.binary.binarytarget property)": [[301, "baybe.targets.binary.BinaryTarget.description", false]], "description (baybe.targets.numerical.numericaltarget property)": [[307, "baybe.targets.numerical.NumericalTarget.description", false]], "description (baybe.utils.metadata.measurablemetadata attribute)": [[402, "baybe.utils.metadata.MeasurableMetadata.description", false]], "description (baybe.utils.metadata.metadata attribute)": [[403, "baybe.utils.metadata.Metadata.description", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[242, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[129, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[338, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[339, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[382, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[383, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[384, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[216, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[217, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[41, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[141, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[415, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "double() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.double", false]], "double() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.double", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[406, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[407, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[421, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[341, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[280, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[217, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[70, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[141, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[144, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[145, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[216, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.eval", false]], "eval() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.eval", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.evaluate", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "evaluate() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.evaluate", false]], "exp() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.exp", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[221, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[221, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[221, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[99, "baybe.insights.shap.SHAPInsight.explain", false]], "explain_target() (baybe.insights.shap.shapinsight method)": [[99, "baybe.insights.shap.SHAPInsight.explain_target", false]], "explainers (baybe.insights.shap.shapinsight attribute)": [[99, "baybe.insights.shap.SHAPInsight.explainers", false]], "explainers (in module baybe.insights.shap)": [[97, "baybe.insights.shap.EXPLAINERS", false]], "exponent (baybe.transformations.basic.powertransformation attribute)": [[324, "baybe.transformations.basic.PowerTransformation.exponent", false]], "exponentialtransformation (class in baybe.transformations.basic)": [[321, "baybe.transformations.basic.ExponentialTransformation", false]], "extra_repr() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.extra_repr", false]], "extra_repr() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.extra_repr", false]], "factor (baybe.transformations.basic.affinetransformation attribute)": [[317, "baybe.transformations.basic.AffineTransformation.factor", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[301, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.FARTHEST", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[416, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[385, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[349, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[424, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[260, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[419, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fit_predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict", false]], "fit_transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform", false]], "float() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.float", false]], "float() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.float", false]], "forward() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.forward", false]], "forward() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.forward", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[415, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsinitialization (class in baybe.recommenders.pure.nonpredictive.sampling)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[373, "baybe.utils.conversion.fraction_to_float", false]], "from_anchors() (baybe.transformations.basic.sigmoidtransformation class method)": [[325, "baybe.transformations.basic.SigmoidTransformation.from_anchors", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[99, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[26, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[37, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[38, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[39, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[41, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[43, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[45, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[106, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[107, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[108, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[110, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[111, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[112, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[114, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[115, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[116, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[117, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[119, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[120, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[121, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[124, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[133, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[135, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[140, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[141, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[142, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[144, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[145, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[158, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[170, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[172, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[173, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[174, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[175, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[176, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[177, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[178, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[240, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[259, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[299, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[301, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.transformations.base.monotonictransformation class method)": [[313, "baybe.transformations.base.MonotonicTransformation.from_dict", false]], "from_dict() (baybe.transformations.base.transformation class method)": [[314, "baybe.transformations.base.Transformation.from_dict", false]], "from_dict() (baybe.transformations.basic.absolutetransformation class method)": [[316, "baybe.transformations.basic.AbsoluteTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.affinetransformation class method)": [[317, "baybe.transformations.basic.AffineTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.belltransformation class method)": [[318, "baybe.transformations.basic.BellTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.clampingtransformation class method)": [[319, "baybe.transformations.basic.ClampingTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.customtransformation class method)": [[320, "baybe.transformations.basic.CustomTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.exponentialtransformation class method)": [[321, "baybe.transformations.basic.ExponentialTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.identitytransformation class method)": [[322, "baybe.transformations.basic.IdentityTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.logarithmictransformation class method)": [[323, "baybe.transformations.basic.LogarithmicTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.powertransformation class method)": [[324, "baybe.transformations.basic.PowerTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.sigmoidtransformation class method)": [[325, "baybe.transformations.basic.SigmoidTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.triangulartransformation class method)": [[326, "baybe.transformations.basic.TriangularTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.twosidedaffinetransformation class method)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.from_dict", false]], "from_dict() (baybe.transformations.composite.additivetransformation class method)": [[329, "baybe.transformations.composite.AdditiveTransformation.from_dict", false]], "from_dict() (baybe.transformations.composite.chainedtransformation class method)": [[330, "baybe.transformations.composite.ChainedTransformation.from_dict", false]], "from_dict() (baybe.transformations.composite.multiplicativetransformation class method)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[396, "baybe.utils.interval.Interval.from_dict", false]], "from_dict() (baybe.utils.metadata.measurablemetadata class method)": [[402, "baybe.utils.metadata.MeasurableMetadata.from_dict", false]], "from_dict() (baybe.utils.metadata.metadata class method)": [[403, "baybe.utils.metadata.Metadata.from_dict", false]], "from_erroneous_callable() (baybe.utils.basic.uncertainbool class method)": [[343, "baybe.utils.basic.UncertainBool.from_erroneous_callable", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[26, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[37, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[38, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[39, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[41, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[43, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[45, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[106, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[107, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[108, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[110, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[111, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[112, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[114, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[115, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[116, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[117, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[119, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[120, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[121, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[124, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[133, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[135, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[140, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[141, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[142, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[144, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[145, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[158, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[170, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[172, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[173, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[174, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[175, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[176, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[177, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[178, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[240, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[259, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[299, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[301, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.transformations.base.monotonictransformation class method)": [[313, "baybe.transformations.base.MonotonicTransformation.from_json", false]], "from_json() (baybe.transformations.base.transformation class method)": [[314, "baybe.transformations.base.Transformation.from_json", false]], "from_json() (baybe.transformations.basic.absolutetransformation class method)": [[316, "baybe.transformations.basic.AbsoluteTransformation.from_json", false]], "from_json() (baybe.transformations.basic.affinetransformation class method)": [[317, "baybe.transformations.basic.AffineTransformation.from_json", false]], "from_json() (baybe.transformations.basic.belltransformation class method)": [[318, "baybe.transformations.basic.BellTransformation.from_json", false]], "from_json() (baybe.transformations.basic.clampingtransformation class method)": [[319, "baybe.transformations.basic.ClampingTransformation.from_json", false]], "from_json() (baybe.transformations.basic.customtransformation class method)": [[320, "baybe.transformations.basic.CustomTransformation.from_json", false]], "from_json() (baybe.transformations.basic.exponentialtransformation class method)": [[321, "baybe.transformations.basic.ExponentialTransformation.from_json", false]], "from_json() (baybe.transformations.basic.identitytransformation class method)": [[322, "baybe.transformations.basic.IdentityTransformation.from_json", false]], "from_json() (baybe.transformations.basic.logarithmictransformation class method)": [[323, "baybe.transformations.basic.LogarithmicTransformation.from_json", false]], "from_json() (baybe.transformations.basic.powertransformation class method)": [[324, "baybe.transformations.basic.PowerTransformation.from_json", false]], "from_json() (baybe.transformations.basic.sigmoidtransformation class method)": [[325, "baybe.transformations.basic.SigmoidTransformation.from_json", false]], "from_json() (baybe.transformations.basic.triangulartransformation class method)": [[326, "baybe.transformations.basic.TriangularTransformation.from_json", false]], "from_json() (baybe.transformations.basic.twosidedaffinetransformation class method)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.from_json", false]], "from_json() (baybe.transformations.composite.additivetransformation class method)": [[329, "baybe.transformations.composite.AdditiveTransformation.from_json", false]], "from_json() (baybe.transformations.composite.chainedtransformation class method)": [[330, "baybe.transformations.composite.ChainedTransformation.from_json", false]], "from_json() (baybe.transformations.composite.multiplicativetransformation class method)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[396, "baybe.utils.interval.Interval.from_json", false]], "from_json() (baybe.utils.metadata.measurablemetadata class method)": [[402, "baybe.utils.metadata.MeasurableMetadata.from_json", false]], "from_json() (baybe.utils.metadata.metadata class method)": [[403, "baybe.utils.metadata.Metadata.from_json", false]], "from_legacy_interface() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.from_legacy_interface", false]], "from_margins() (baybe.transformations.basic.triangulartransformation class method)": [[326, "baybe.transformations.basic.TriangularTransformation.from_margins", false]], "from_modern_interface() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.from_modern_interface", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[99, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[99, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "from_values_mapped_to_unit_interval() (baybe.transformations.basic.affinetransformation class method)": [[317, "baybe.transformations.basic.AffineTransformation.from_values_mapped_to_unit_interval", false]], "from_width() (baybe.transformations.basic.triangulartransformation class method)": [[326, "baybe.transformations.basic.TriangularTransformation.from_width", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "function (baybe.transformations.basic.customtransformation attribute)": [[320, "baybe.transformations.basic.CustomTransformation.function", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[386, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[275, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[131, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_acquisition_function() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_acquisition_function", false]], "get_baseclasses() (in module baybe.utils.basic)": [[350, "baybe.utils.basic.get_baseclasses", false]], "get_buffer() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.get_buffer", false]], "get_buffer() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.get_buffer", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[364, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_codomain() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.get_codomain", false]], "get_codomain() (baybe.transformations.base.monotonictransformation method)": [[313, "baybe.transformations.base.MonotonicTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.base.transformation method)": [[314, "baybe.transformations.base.Transformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.absolutetransformation method)": [[316, "baybe.transformations.basic.AbsoluteTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.affinetransformation method)": [[317, "baybe.transformations.basic.AffineTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.belltransformation method)": [[318, "baybe.transformations.basic.BellTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.clampingtransformation method)": [[319, "baybe.transformations.basic.ClampingTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.customtransformation method)": [[320, "baybe.transformations.basic.CustomTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.exponentialtransformation method)": [[321, "baybe.transformations.basic.ExponentialTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.identitytransformation method)": [[322, "baybe.transformations.basic.IdentityTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.logarithmictransformation method)": [[323, "baybe.transformations.basic.LogarithmicTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.powertransformation method)": [[324, "baybe.transformations.basic.PowerTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.sigmoidtransformation method)": [[325, "baybe.transformations.basic.SigmoidTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.triangulartransformation method)": [[326, "baybe.transformations.basic.TriangularTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.twosidedaffinetransformation method)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.composite.additivetransformation method)": [[329, "baybe.transformations.composite.AdditiveTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.composite.chainedtransformation method)": [[330, "baybe.transformations.composite.ChainedTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.composite.multiplicativetransformation method)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.get_codomain", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_extra_state() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.get_extra_state", false]], "get_extra_state() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.get_extra_state", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[365, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_image() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.get_image", false]], "get_image() (baybe.transformations.base.monotonictransformation method)": [[313, "baybe.transformations.base.MonotonicTransformation.get_image", false]], "get_image() (baybe.transformations.base.transformation method)": [[314, "baybe.transformations.base.Transformation.get_image", false]], "get_image() (baybe.transformations.basic.absolutetransformation method)": [[316, "baybe.transformations.basic.AbsoluteTransformation.get_image", false]], "get_image() (baybe.transformations.basic.affinetransformation method)": [[317, "baybe.transformations.basic.AffineTransformation.get_image", false]], "get_image() (baybe.transformations.basic.belltransformation method)": [[318, "baybe.transformations.basic.BellTransformation.get_image", false]], "get_image() (baybe.transformations.basic.clampingtransformation method)": [[319, "baybe.transformations.basic.ClampingTransformation.get_image", false]], "get_image() (baybe.transformations.basic.customtransformation method)": [[320, "baybe.transformations.basic.CustomTransformation.get_image", false]], "get_image() (baybe.transformations.basic.exponentialtransformation method)": [[321, "baybe.transformations.basic.ExponentialTransformation.get_image", false]], "get_image() (baybe.transformations.basic.identitytransformation method)": [[322, "baybe.transformations.basic.IdentityTransformation.get_image", false]], "get_image() (baybe.transformations.basic.logarithmictransformation method)": [[323, "baybe.transformations.basic.LogarithmicTransformation.get_image", false]], "get_image() (baybe.transformations.basic.powertransformation method)": [[324, "baybe.transformations.basic.PowerTransformation.get_image", false]], "get_image() (baybe.transformations.basic.sigmoidtransformation method)": [[325, "baybe.transformations.basic.SigmoidTransformation.get_image", false]], "get_image() (baybe.transformations.basic.triangulartransformation method)": [[326, "baybe.transformations.basic.TriangularTransformation.get_image", false]], "get_image() (baybe.transformations.basic.twosidedaffinetransformation method)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.get_image", false]], "get_image() (baybe.transformations.composite.additivetransformation method)": [[329, "baybe.transformations.composite.AdditiveTransformation.get_image", false]], "get_image() (baybe.transformations.composite.chainedtransformation method)": [[330, "baybe.transformations.composite.ChainedTransformation.get_image", false]], "get_image() (baybe.transformations.composite.multiplicativetransformation method)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.get_image", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_metadata_routing() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_metadata_routing", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameter() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.get_parameter", false]], "get_parameter() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.get_parameter", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[161, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params", false]], "get_subclasses() (in module baybe.utils.basic)": [[351, "baybe.utils.basic.get_subclasses", false]], "get_submodule() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.get_submodule", false]], "get_submodule() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.get_submodule", false]], "get_surrogate() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[387, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[227, "baybe.searchspace.validation.get_transform_parameters", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[352, "baybe.utils.basic.group_duplicate_values", false]], "half() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.half", false]], "half() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.half", false]], "halfcauchyprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[175, "baybe.priors.basic.HalfNormalPrior", false]], "handle_missing_values() (in module baybe.utils.dataframe)": [[388, "baybe.utils.dataframe.handle_missing_values", false]], "hilberts_factory() (in module baybe.utils.basic)": [[353, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[217, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "identitytransformation (class in baybe.transformations.basic)": [[322, "baybe.transformations.basic.IdentityTransformation", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[71, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[72, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[73, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[74, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[75, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[76, "baybe.exceptions.IncompatibleSurrogateError", false]], "incompletemeasurementserror": [[77, "baybe.exceptions.IncompleteMeasurementsError", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "inertia_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.inertia_", false]], "infeasibilityerror": [[78, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[395, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "initialization (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.initialization", false]], "inputdatatypewarning": [[79, "baybe.exceptions.InputDataTypeWarning", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[149, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[396, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[80, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[81, "baybe.exceptions.InvalidTargetValueError", false]], "ipu() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.ipu", false]], "ipu() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.ipu", false]], "is_abstract() (in module baybe.utils.boolean)": [[361, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[354, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[396, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[63, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[37, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[38, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[39, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[41, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[140, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[142, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[396, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[37, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[38, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[39, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[41, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[140, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[142, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_empty (baybe.utils.metadata.measurablemetadata property)": [[402, "baybe.utils.metadata.MeasurableMetadata.is_empty", false]], "is_empty (baybe.utils.metadata.metadata property)": [[403, "baybe.utils.metadata.Metadata.is_empty", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[396, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[396, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[142, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[162, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[396, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[124, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[129, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[133, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[135, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_normalized (baybe.targets.numerical.numericaltarget property)": [[307, "baybe.targets.numerical.NumericalTarget.is_normalized", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[140, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[141, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[142, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[144, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[145, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[396, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[102, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[184, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "joint_acquisition_value() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.joint_acquisition_value", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[108, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kmedoids (class in baybe.utils.clustering_algorithms.third_party.kmedoids)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "labels_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.labels_", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[111, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[112, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[115, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[116, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[117, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[111, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[112, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[115, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[116, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[117, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linearkernel (class in baybe.kernels.basic)": [[110, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[176, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[177, "baybe.priors.basic.NormalPrior.loc", false]], "log() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.log", false]], "logarithmictransformation (class in baybe.transformations.basic)": [[323, "baybe.transformations.basic.LogarithmicTransformation", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[176, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[248, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[396, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_base_structure_hook() (in module baybe.serialization.core)": [[236, "baybe.serialization.core.make_base_structure_hook", false]], "make_dict_validator() (in module baybe.surrogates.validation)": [[294, "baybe.surrogates.validation.make_dict_validator", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[103, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[276, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "make_partitioning() (in module baybe.acquisition.utils)": [[31, "baybe.acquisition.utils.make_partitioning", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[419, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "margins (baybe.transformations.basic.triangulartransformation property)": [[326, "baybe.transformations.basic.TriangularTransformation.margins", false]], "match_absolute() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.match_absolute", false]], "match_attributes() (in module baybe.utils.basic)": [[355, "baybe.utils.basic.match_attributes", false]], "match_bell() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.match_bell", false]], "match_power() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.match_power", false]], "match_quadratic() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.match_quadratic", false]], "match_triangular() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.match_triangular", false]], "maternkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.MaternKernel", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[131, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurablemetadata (class in baybe.utils.metadata)": [[402, "baybe.utils.metadata.MeasurableMetadata", false]], "measurements (baybe.campaign.campaign property)": [[34, "baybe.campaign.Campaign.measurements", false]], "medoid_indices_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.medoid_indices_", false]], "memorysize (class in baybe.searchspace.discrete)": [[221, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.objectives.base.objective attribute)": [[124, "baybe.objectives.base.Objective.metadata", false]], "metadata (baybe.objectives.desirability.desirabilityobjective attribute)": [[129, "baybe.objectives.desirability.DesirabilityObjective.metadata", false]], "metadata (baybe.objectives.pareto.paretoobjective attribute)": [[133, "baybe.objectives.pareto.ParetoObjective.metadata", false]], "metadata (baybe.objectives.single.singletargetobjective attribute)": [[135, "baybe.objectives.single.SingleTargetObjective.metadata", false]], "metadata (baybe.parameters.base.continuousparameter attribute)": [[140, "baybe.parameters.base.ContinuousParameter.metadata", false]], "metadata (baybe.parameters.base.discreteparameter attribute)": [[141, "baybe.parameters.base.DiscreteParameter.metadata", false]], "metadata (baybe.parameters.base.parameter attribute)": [[142, "baybe.parameters.base.Parameter.metadata", false]], "metadata (baybe.parameters.categorical.categoricalparameter attribute)": [[144, "baybe.parameters.categorical.CategoricalParameter.metadata", false]], "metadata (baybe.parameters.categorical.taskparameter attribute)": [[145, "baybe.parameters.categorical.TaskParameter.metadata", false]], "metadata (baybe.parameters.custom.customdiscreteparameter attribute)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.metadata", false]], "metadata (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.metadata", false]], "metadata (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.metadata", false]], "metadata (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.metadata", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metadata (baybe.targets.base.target attribute)": [[299, "baybe.targets.base.Target.metadata", false]], "metadata (baybe.targets.binary.binarytarget attribute)": [[301, "baybe.targets.binary.BinaryTarget.metadata", false]], "metadata (baybe.targets.numerical.numericaltarget attribute)": [[307, "baybe.targets.numerical.NumericalTarget.metadata", false]], "metadata (class in baybe.utils.metadata)": [[403, "baybe.utils.metadata.Metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[184, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "midpoint (baybe.transformations.basic.twosidedaffinetransformation attribute)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.midpoint", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimize (baybe.targets.numerical.numericaltarget attribute)": [[307, "baybe.targets.numerical.NumericalTarget.minimize", false]], "minimumcardinalityviolatedwarning": [[82, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "misc (baybe.utils.metadata.measurablemetadata attribute)": [[402, "baybe.utils.metadata.MeasurableMetadata.misc", false]], "misc (baybe.utils.metadata.metadata attribute)": [[403, "baybe.utils.metadata.Metadata.misc", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[83, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [25, "module-baybe.acquisition.base", false], [27, "module-baybe.acquisition.partial", false], [29, "module-baybe.acquisition.utils", false], [33, "module-baybe.campaign", false], [35, "module-baybe.constraints", false], [36, "module-baybe.constraints.base", false], [42, "module-baybe.constraints.conditions", false], [46, "module-baybe.constraints.continuous", false], [49, "module-baybe.constraints.deprecation", false], [52, "module-baybe.constraints.discrete", false], [62, "module-baybe.constraints.utils", false], [64, "module-baybe.constraints.validation", false], [68, "module-baybe.exceptions", false], [95, "module-baybe.insights", false], [96, "module-baybe.insights.shap", false], [104, "module-baybe.kernels", false], [105, "module-baybe.kernels.base", false], [109, "module-baybe.kernels.basic", false], [118, "module-baybe.kernels.composite", false], [122, "module-baybe.objectives", false], [123, "module-baybe.objectives.base", false], [126, "module-baybe.objectives.botorch", false], [128, "module-baybe.objectives.desirability", false], [130, "module-baybe.objectives.enum", false], [132, "module-baybe.objectives.pareto", false], [134, "module-baybe.objectives.single", false], [136, "module-baybe.objectives.validation", false], [138, "module-baybe.parameters", false], [139, "module-baybe.parameters.base", false], [143, "module-baybe.parameters.categorical", false], [146, "module-baybe.parameters.custom", false], [148, "module-baybe.parameters.enum", false], [153, "module-baybe.parameters.numerical", false], [156, "module-baybe.parameters.substance", false], [159, "module-baybe.parameters.utils", false], [164, "module-baybe.parameters.validation", false], [168, "module-baybe.priors", false], [169, "module-baybe.priors.base", false], [171, "module-baybe.priors.basic", false], [179, "module-baybe.recommenders", false], [180, "module-baybe.recommenders.base", false], [182, "module-baybe.recommenders.meta", false], [183, "module-baybe.recommenders.meta.base", false], [185, "module-baybe.recommenders.meta.sequential", false], [190, "module-baybe.recommenders.naive", false], [192, "module-baybe.recommenders.pure", false], [193, "module-baybe.recommenders.pure.base", false], [195, "module-baybe.recommenders.pure.bayesian", false], [196, "module-baybe.recommenders.pure.bayesian.base", false], [198, "module-baybe.recommenders.pure.bayesian.botorch", false], [200, "module-baybe.recommenders.pure.nonpredictive", false], [201, "module-baybe.recommenders.pure.nonpredictive.base", false], [203, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [208, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [212, "module-baybe.searchspace", false], [213, "module-baybe.searchspace.continuous", false], [215, "module-baybe.searchspace.core", false], [220, "module-baybe.searchspace.discrete", false], [226, "module-baybe.searchspace.validation", false], [230, "module-baybe.serialization", false], [231, "module-baybe.serialization.core", false], [239, "module-baybe.serialization.mixin", false], [241, "module-baybe.serialization.utils", false], [244, "module-baybe.simulation", false], [245, "module-baybe.simulation.core", false], [247, "module-baybe.simulation.lookup", false], [249, "module-baybe.simulation.scenarios", false], [251, "module-baybe.simulation.transfer_learning", false], [253, "module-baybe.surrogates", false], [254, "module-baybe.surrogates.bandit", false], [256, "module-baybe.surrogates.base", false], [261, "module-baybe.surrogates.composite", false], [263, "module-baybe.surrogates.custom", false], [266, "module-baybe.surrogates.gaussian_process", false], [267, "module-baybe.surrogates.gaussian_process.core", false], [269, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [273, "module-baybe.surrogates.gaussian_process.presets", false], [274, "module-baybe.surrogates.gaussian_process.presets.core", false], [277, "module-baybe.surrogates.gaussian_process.presets.default", false], [279, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [281, "module-baybe.surrogates.linear", false], [283, "module-baybe.surrogates.naive", false], [285, "module-baybe.surrogates.ngboost", false], [287, "module-baybe.surrogates.random_forest", false], [289, "module-baybe.surrogates.utils", false], [293, "module-baybe.surrogates.validation", false], [297, "module-baybe.targets", false], [298, "module-baybe.targets.base", false], [300, "module-baybe.targets.binary", false], [303, "module-baybe.targets.botorch", false], [305, "module-baybe.targets.enum", false], [306, "module-baybe.targets.numerical", false], [308, "module-baybe.targets.transforms", false], [309, "module-baybe.targets.utils", false], [311, "module-baybe.transformations", false], [312, "module-baybe.transformations.base", false], [315, "module-baybe.transformations.basic", false], [328, "module-baybe.transformations.composite", false], [332, "module-baybe.transformations.utils", false], [336, "module-baybe.utils", false], [337, "module-baybe.utils.augmentation", false], [340, "module-baybe.utils.basic", false], [359, "module-baybe.utils.boolean", false], [363, "module-baybe.utils.chemistry", false], [368, "module-baybe.utils.clustering_algorithms", false], [369, "module-baybe.utils.clustering_algorithms.third_party", false], [370, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false], [372, "module-baybe.utils.conversion", false], [376, "module-baybe.utils.dataframe", false], [393, "module-baybe.utils.interval", false], [398, "module-baybe.utils.memory", false], [400, "module-baybe.utils.metadata", false], [405, "module-baybe.utils.numerical", false], [411, "module-baybe.utils.random", false], [414, "module-baybe.utils.sampling_algorithms", false], [418, "module-baybe.utils.scaling", false], [420, "module-baybe.utils.torch", false], [423, "module-baybe.utils.validation", false]], "modules() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.modules", false]], "modules() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.modules", false]], "monotonictransformation (class in baybe.transformations.base)": [[313, "baybe.transformations.base.MonotonicTransformation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "mtia() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.mtia", false]], "mtia() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.mtia", false]], "multiplicativetransformation (class in baybe.transformations.composite)": [[331, "baybe.transformations.composite.MultiplicativeTransformation", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[124, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[129, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[133, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[135, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[140, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[141, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[142, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[144, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[145, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[299, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[301, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[307, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[366, "baybe.utils.chemistry.name_to_smiles", false]], "named_buffers() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.named_buffers", false]], "named_buffers() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.named_buffers", false]], "named_children() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.named_children", false]], "named_children() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.named_children", false]], "named_modules() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.named_modules", false]], "named_modules() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.named_modules", false]], "named_parameters() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.named_parameters", false]], "named_parameters() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.named_parameters", false]], "negate() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.negate", false]], "negate() (baybe.transformations.base.monotonictransformation method)": [[313, "baybe.transformations.base.MonotonicTransformation.negate", false]], "negate() (baybe.transformations.base.transformation method)": [[314, "baybe.transformations.base.Transformation.negate", false]], "negate() (baybe.transformations.basic.absolutetransformation method)": [[316, "baybe.transformations.basic.AbsoluteTransformation.negate", false]], "negate() (baybe.transformations.basic.affinetransformation method)": [[317, "baybe.transformations.basic.AffineTransformation.negate", false]], "negate() (baybe.transformations.basic.belltransformation method)": [[318, "baybe.transformations.basic.BellTransformation.negate", false]], "negate() (baybe.transformations.basic.clampingtransformation method)": [[319, "baybe.transformations.basic.ClampingTransformation.negate", false]], "negate() (baybe.transformations.basic.customtransformation method)": [[320, "baybe.transformations.basic.CustomTransformation.negate", false]], "negate() (baybe.transformations.basic.exponentialtransformation method)": [[321, "baybe.transformations.basic.ExponentialTransformation.negate", false]], "negate() (baybe.transformations.basic.identitytransformation method)": [[322, "baybe.transformations.basic.IdentityTransformation.negate", false]], "negate() (baybe.transformations.basic.logarithmictransformation method)": [[323, "baybe.transformations.basic.LogarithmicTransformation.negate", false]], "negate() (baybe.transformations.basic.powertransformation method)": [[324, "baybe.transformations.basic.PowerTransformation.negate", false]], "negate() (baybe.transformations.basic.sigmoidtransformation method)": [[325, "baybe.transformations.basic.SigmoidTransformation.negate", false]], "negate() (baybe.transformations.basic.triangulartransformation method)": [[326, "baybe.transformations.basic.TriangularTransformation.negate", false]], "negate() (baybe.transformations.basic.twosidedaffinetransformation method)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.negate", false]], "negate() (baybe.transformations.composite.additivetransformation method)": [[329, "baybe.transformations.composite.AdditiveTransformation.negate", false]], "negate() (baybe.transformations.composite.chainedtransformation method)": [[330, "baybe.transformations.composite.ChainedTransformation.negate", false]], "negate() (baybe.transformations.composite.multiplicativetransformation method)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.negate", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[84, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "nomeasurementserror": [[85, "baybe.exceptions.NoMeasurementsError", false]], "non_inf_float() (in module baybe.utils.validation)": [[425, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[426, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[98, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[374, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[86, "baybe.exceptions.NoRecommendersLeftError", false]], "normalize() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.normalize", false]], "normalize_input_dtypes() (in module baybe.utils.dataframe)": [[389, "baybe.utils.dataframe.normalize_input_dtypes", false]], "normalized_ramp() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.normalized_ramp", false]], "normalized_sigmoid() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.normalized_sigmoid", false]], "normalprior (class in baybe.priors.basic)": [[177, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[87, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[88, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[111, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[116, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[307, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[89, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[124, "baybe.objectives.base.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[114, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[114, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[149, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[45, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[90, "baybe.exceptions.OptionalImportError", false]], "output_names (baybe.objectives.base.objective property)": [[124, "baybe.objectives.base.Objective.output_names", false]], "output_names (baybe.objectives.desirability.desirabilityobjective property)": [[129, "baybe.objectives.desirability.DesirabilityObjective.output_names", false]], "output_names (baybe.objectives.pareto.paretoobjective property)": [[133, "baybe.objectives.pareto.ParetoObjective.output_names", false]], "output_names (baybe.objectives.single.singletargetobjective property)": [[135, "baybe.objectives.single.SingleTargetObjective.output_names", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[121, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[121, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[142, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[223, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[224, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[151, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[34, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "parameters() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.parameters", false]], "parameters() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[133, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "peak (baybe.transformations.basic.triangulartransformation attribute)": [[326, "baybe.transformations.basic.TriangularTransformation.peak", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[112, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[112, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[99, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[114, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[258, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[114, "baybe.kernels.basic.PolynomialKernel.power", false]], "power() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.power", false]], "powertransformation (class in baybe.transformations.basic)": [[324, "baybe.transformations.basic.PowerTransformation", false]], "predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[390, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[170, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[120, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[194, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[23, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.RANDOM", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[415, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "random_tie_break (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.random_tie_break", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[173, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[115, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[181, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[194, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[181, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[356, "baybe.utils.basic.refers_to", false]], "register_backward_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_backward_hook", false]], "register_backward_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_backward_hook", false]], "register_buffer() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_buffer", false]], "register_buffer() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_buffer", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[265, "baybe.surrogates.custom.register_custom_architecture", false]], "register_forward_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_forward_hook", false]], "register_forward_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_forward_hook", false]], "register_forward_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_forward_pre_hook", false]], "register_forward_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_forward_pre_hook", false]], "register_full_backward_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_hook", false]], "register_full_backward_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_hook", false]], "register_full_backward_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_pre_hook", false]], "register_full_backward_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_pre_hook", false]], "register_hooks() (in module baybe.utils.basic)": [[357, "baybe.utils.basic.register_hooks", false]], "register_load_state_dict_post_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_load_state_dict_post_hook", false]], "register_load_state_dict_post_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_load_state_dict_post_hook", false]], "register_load_state_dict_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_load_state_dict_pre_hook", false]], "register_load_state_dict_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_load_state_dict_pre_hook", false]], "register_module() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_module", false]], "register_module() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_module", false]], "register_parameter() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_parameter", false]], "register_parameter() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_parameter", false]], "register_state_dict_post_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_state_dict_post_hook", false]], "register_state_dict_post_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_state_dict_post_hook", false]], "register_state_dict_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_state_dict_pre_hook", false]], "register_state_dict_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_state_dict_pre_hook", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "require_normalization (baybe.objectives.desirability.desirabilityobjective attribute)": [[129, "baybe.objectives.desirability.DesirabilityObjective.require_normalization", false]], "requires_grad_() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.requires_grad_", false]], "requires_grad_() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.requires_grad_", false]], "rffkernel (class in baybe.kernels.basic)": [[116, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[117, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[417, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[129, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[131, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[174, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[175, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[176, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[177, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[121, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[216, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[91, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[217, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[237, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[44, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[243, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[240, "baybe.serialization.mixin.SerialMixin", false]], "set_extra_state() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.set_extra_state", false]], "set_extra_state() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.set_extra_state", false]], "set_output() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output", false]], "set_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params", false]], "set_random_seed() (in module baybe.utils.random)": [[412, "baybe.utils.random.set_random_seed", false]], "set_submodule() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.set_submodule", false]], "set_submodule() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.set_submodule", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[100, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[101, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[99, "baybe.insights.shap.SHAPInsight", false]], "share_memory() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.share_memory", false]], "share_memory() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.share_memory", false]], "shift (baybe.transformations.basic.affinetransformation attribute)": [[317, "baybe.transformations.basic.AffineTransformation.shift", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[178, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "sigma (baybe.transformations.basic.belltransformation attribute)": [[318, "baybe.transformations.basic.BellTransformation.sigma", false]], "sigmoidtransformation (class in baybe.transformations.basic)": [[325, "baybe.transformations.basic.SigmoidTransformation", false]], "simulate_experiment() (in module baybe.simulation.core)": [[246, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[250, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[252, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[135, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "slope_left (baybe.transformations.basic.twosidedaffinetransformation attribute)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.slope_left", false]], "slope_right (baybe.transformations.basic.twosidedaffinetransformation attribute)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.slope_right", false]], "smiles (in module baybe.parameters.substance)": [[157, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[367, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[178, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[163, "baybe.parameters.utils.sort_parameters", false]], "state_dict() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.state_dict", false]], "state_dict() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.state_dict", false]], "steepness (baybe.transformations.basic.sigmoidtransformation attribute)": [[325, "baybe.transformations.basic.SigmoidTransformation.steepness", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[32, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[362, "baybe.utils.boolean.strtobool", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[44, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[214, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[152, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[158, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[301, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[142, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[299, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[301, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[26, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[259, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_partial_measurements (baybe.objectives.base.objective property)": [[124, "baybe.objectives.base.Objective.supports_partial_measurements", false]], "supports_partial_measurements (baybe.objectives.desirability.desirabilityobjective property)": [[129, "baybe.objectives.desirability.DesirabilityObjective.supports_partial_measurements", false]], "supports_partial_measurements (baybe.objectives.pareto.paretoobjective property)": [[133, "baybe.objectives.pareto.ParetoObjective.supports_partial_measurements", false]], "supports_partial_measurements (baybe.objectives.single.singletargetobjective property)": [[135, "baybe.objectives.single.SingleTargetObjective.supports_partial_measurements", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[259, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[259, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[260, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[262, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[299, "baybe.targets.base.Target", false]], "targets (baybe.campaign.campaign property)": [[34, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[124, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[129, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[133, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[135, "baybe.objectives.single.SingleTargetObjective.targets", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[145, "baybe.parameters.categorical.TaskParameter", false]], "temporary_seed() (in module baybe.utils.random)": [[413, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[45, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[45, "baybe.constraints.conditions.ThresholdCondition", false]], "to() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.to", false]], "to() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.to", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.objectives.base.objective method)": [[124, "baybe.objectives.base.Objective.to_botorch", false]], "to_botorch() (baybe.objectives.desirability.desirabilityobjective method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.to_botorch", false]], "to_botorch() (baybe.objectives.pareto.paretoobjective method)": [[133, "baybe.objectives.pareto.ParetoObjective.to_botorch", false]], "to_botorch() (baybe.objectives.single.singletargetobjective method)": [[135, "baybe.objectives.single.SingleTargetObjective.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[260, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_botorch_objective() (baybe.transformations.base.monotonictransformation method)": [[313, "baybe.transformations.base.MonotonicTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.base.transformation method)": [[314, "baybe.transformations.base.Transformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.absolutetransformation method)": [[316, "baybe.transformations.basic.AbsoluteTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.affinetransformation method)": [[317, "baybe.transformations.basic.AffineTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.belltransformation method)": [[318, "baybe.transformations.basic.BellTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.clampingtransformation method)": [[319, "baybe.transformations.basic.ClampingTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.customtransformation method)": [[320, "baybe.transformations.basic.CustomTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.exponentialtransformation method)": [[321, "baybe.transformations.basic.ExponentialTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.identitytransformation method)": [[322, "baybe.transformations.basic.IdentityTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.logarithmictransformation method)": [[323, "baybe.transformations.basic.LogarithmicTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.powertransformation method)": [[324, "baybe.transformations.basic.PowerTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.sigmoidtransformation method)": [[325, "baybe.transformations.basic.SigmoidTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.triangulartransformation method)": [[326, "baybe.transformations.basic.TriangularTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.twosidedaffinetransformation method)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.composite.additivetransformation method)": [[329, "baybe.transformations.composite.AdditiveTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.composite.chainedtransformation method)": [[330, "baybe.transformations.composite.ChainedTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.composite.multiplicativetransformation method)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.to_botorch_objective", false]], "to_botorch_posterior_transform() (baybe.transformations.basic.affinetransformation method)": [[317, "baybe.transformations.basic.AffineTransformation.to_botorch_posterior_transform", false]], "to_botorch_posterior_transform() (baybe.transformations.basic.identitytransformation method)": [[322, "baybe.transformations.basic.IdentityTransformation.to_botorch_posterior_transform", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[106, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[107, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[108, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[110, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[111, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[112, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[114, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[115, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[116, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[117, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[119, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[120, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[121, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[124, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[133, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[135, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[142, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[170, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[172, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[173, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[174, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[175, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[176, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[177, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[178, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[240, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[299, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[301, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.transformations.base.monotonictransformation method)": [[313, "baybe.transformations.base.MonotonicTransformation.to_dict", false]], "to_dict() (baybe.transformations.base.transformation method)": [[314, "baybe.transformations.base.Transformation.to_dict", false]], "to_dict() (baybe.transformations.basic.absolutetransformation method)": [[316, "baybe.transformations.basic.AbsoluteTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.affinetransformation method)": [[317, "baybe.transformations.basic.AffineTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.belltransformation method)": [[318, "baybe.transformations.basic.BellTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.clampingtransformation method)": [[319, "baybe.transformations.basic.ClampingTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.customtransformation method)": [[320, "baybe.transformations.basic.CustomTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.exponentialtransformation method)": [[321, "baybe.transformations.basic.ExponentialTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.identitytransformation method)": [[322, "baybe.transformations.basic.IdentityTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.logarithmictransformation method)": [[323, "baybe.transformations.basic.LogarithmicTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.powertransformation method)": [[324, "baybe.transformations.basic.PowerTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.sigmoidtransformation method)": [[325, "baybe.transformations.basic.SigmoidTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.triangulartransformation method)": [[326, "baybe.transformations.basic.TriangularTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.twosidedaffinetransformation method)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.to_dict", false]], "to_dict() (baybe.transformations.composite.additivetransformation method)": [[329, "baybe.transformations.composite.AdditiveTransformation.to_dict", false]], "to_dict() (baybe.transformations.composite.chainedtransformation method)": [[330, "baybe.transformations.composite.ChainedTransformation.to_dict", false]], "to_dict() (baybe.transformations.composite.multiplicativetransformation method)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[396, "baybe.utils.interval.Interval.to_dict", false]], "to_dict() (baybe.utils.metadata.measurablemetadata method)": [[402, "baybe.utils.metadata.MeasurableMetadata.to_dict", false]], "to_dict() (baybe.utils.metadata.metadata method)": [[403, "baybe.utils.metadata.Metadata.to_dict", false]], "to_empty() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.to_empty", false]], "to_empty() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.to_empty", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[106, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[107, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[108, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[110, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[111, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[112, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[114, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[115, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[116, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[117, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[119, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[120, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[121, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[106, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[107, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[108, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[110, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[111, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[112, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[114, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[115, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[116, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[117, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[119, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[120, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[121, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[170, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[172, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[173, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[174, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[175, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[176, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[177, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[178, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[106, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[107, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[108, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[110, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[111, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[112, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[114, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[115, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[116, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[117, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[119, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[120, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[121, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[124, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[133, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[135, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[142, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[170, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[172, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[173, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[174, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[175, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[176, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[177, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[178, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[240, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[299, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[301, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.transformations.base.monotonictransformation method)": [[313, "baybe.transformations.base.MonotonicTransformation.to_json", false]], "to_json() (baybe.transformations.base.transformation method)": [[314, "baybe.transformations.base.Transformation.to_json", false]], "to_json() (baybe.transformations.basic.absolutetransformation method)": [[316, "baybe.transformations.basic.AbsoluteTransformation.to_json", false]], "to_json() (baybe.transformations.basic.affinetransformation method)": [[317, "baybe.transformations.basic.AffineTransformation.to_json", false]], "to_json() (baybe.transformations.basic.belltransformation method)": [[318, "baybe.transformations.basic.BellTransformation.to_json", false]], "to_json() (baybe.transformations.basic.clampingtransformation method)": [[319, "baybe.transformations.basic.ClampingTransformation.to_json", false]], "to_json() (baybe.transformations.basic.customtransformation method)": [[320, "baybe.transformations.basic.CustomTransformation.to_json", false]], "to_json() (baybe.transformations.basic.exponentialtransformation method)": [[321, "baybe.transformations.basic.ExponentialTransformation.to_json", false]], "to_json() (baybe.transformations.basic.identitytransformation method)": [[322, "baybe.transformations.basic.IdentityTransformation.to_json", false]], "to_json() (baybe.transformations.basic.logarithmictransformation method)": [[323, "baybe.transformations.basic.LogarithmicTransformation.to_json", false]], "to_json() (baybe.transformations.basic.powertransformation method)": [[324, "baybe.transformations.basic.PowerTransformation.to_json", false]], "to_json() (baybe.transformations.basic.sigmoidtransformation method)": [[325, "baybe.transformations.basic.SigmoidTransformation.to_json", false]], "to_json() (baybe.transformations.basic.triangulartransformation method)": [[326, "baybe.transformations.basic.TriangularTransformation.to_json", false]], "to_json() (baybe.transformations.basic.twosidedaffinetransformation method)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation.to_json", false]], "to_json() (baybe.transformations.composite.additivetransformation method)": [[329, "baybe.transformations.composite.AdditiveTransformation.to_json", false]], "to_json() (baybe.transformations.composite.chainedtransformation method)": [[330, "baybe.transformations.composite.ChainedTransformation.to_json", false]], "to_json() (baybe.transformations.composite.multiplicativetransformation method)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[396, "baybe.utils.interval.Interval.to_json", false]], "to_json() (baybe.utils.metadata.measurablemetadata method)": [[402, "baybe.utils.metadata.MeasurableMetadata.to_json", false]], "to_json() (baybe.utils.metadata.metadata method)": [[403, "baybe.utils.metadata.Metadata.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[272, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_metadata() (in module baybe.utils.metadata)": [[404, "baybe.utils.metadata.to_metadata", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[396, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[299, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[301, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[125, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[142, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[218, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.conversion)": [[375, "baybe.utils.conversion.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[396, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[391, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[396, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[358, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[45, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "train() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.train", false]], "train() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.train", false]], "transform() (baybe.objectives.base.objective method)": [[124, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[133, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[135, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[299, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[301, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[371, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[419, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[392, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[307, "baybe.targets.numerical.NumericalTarget.transformation", false]], "transformation (class in baybe.transformations.base)": [[314, "baybe.transformations.base.Transformation", false]], "transformations (baybe.transformations.composite.additivetransformation attribute)": [[329, "baybe.transformations.composite.AdditiveTransformation.transformations", false]], "transformations (baybe.transformations.composite.chainedtransformation attribute)": [[330, "baybe.transformations.composite.ChainedTransformation.transformations", false]], "transformations (baybe.transformations.composite.multiplicativetransformation attribute)": [[331, "baybe.transformations.composite.MultiplicativeTransformation.transformations", false]], "triangulartransformation (class in baybe.transformations.basic)": [[326, "baybe.transformations.basic.TriangularTransformation", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "twosidedaffinetransformation (class in baybe.transformations.basic)": [[327, "baybe.transformations.basic.TwoSidedAffineTransformation", false]], "type (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.type", false]], "type() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.type", false]], "type() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.type", false]], "type_validation_converter (in module baybe.surrogates.validation)": [[295, "baybe.surrogates.validation.type_validation_converter", false]], "uncertainbool (class in baybe.utils.basic)": [[343, "baybe.utils.basic.UncertainBool", false]], "unidentifiedsubclasserror": [[92, "baybe.exceptions.UnidentifiedSubclassError", false]], "unit (baybe.parameters.base.continuousparameter property)": [[140, "baybe.parameters.base.ContinuousParameter.unit", false]], "unit (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.unit", false]], "unit (baybe.parameters.base.parameter property)": [[142, "baybe.parameters.base.Parameter.unit", false]], "unit (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.unit", false]], "unit (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.unit", false]], "unit (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.unit", false]], "unit (baybe.parameters.numerical.numericalcontinuousparameter property)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.unit", false]], "unit (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.unit", false]], "unit (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.unit", false]], "unit (baybe.targets.base.target property)": [[299, "baybe.targets.base.Target.unit", false]], "unit (baybe.targets.binary.binarytarget property)": [[301, "baybe.targets.binary.BinaryTarget.unit", false]], "unit (baybe.targets.numerical.numericaltarget property)": [[307, "baybe.targets.numerical.NumericalTarget.unit", false]], "unit (baybe.utils.metadata.measurablemetadata attribute)": [[402, "baybe.utils.metadata.MeasurableMetadata.unit", false]], "unmatchedattributeerror": [[93, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[342, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[344, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_with_type() (in module baybe.serialization.core)": [[238, "baybe.serialization.core.unstructure_with_type", false]], "unusedobjectwarning": [[94, "baybe.exceptions.UnusedObjectWarning", false]], "update_measurements() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.update_measurements", false]], "upper (baybe.utils.interval.interval attribute)": [[396, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[397, "baybe.utils.interval.use_fallback_constructor_hook", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[65, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[66, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[67, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[296, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[165, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[166, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[427, "baybe.utils.validation.validate_not_nan", false]], "validate_object_names() (in module baybe.utils.validation)": [[428, "baybe.utils.validation.validate_object_names", false]], "validate_objective_input() (in module baybe.utils.validation)": [[429, "baybe.utils.validation.validate_objective_input", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[430, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[228, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[229, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[219, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[225, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[431, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[137, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[167, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[110, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[110, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[408, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[422, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[129, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]], "xpu() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.xpu", false]], "xpu() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.xpu", false]], "zero_grad() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.zero_grad", false]], "zero_grad() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.zero_grad", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [33, 0, 0, "-", "campaign"], [35, 0, 0, "-", "constraints"], [68, 0, 0, "-", "exceptions"], [95, 0, 0, "-", "insights"], [104, 0, 0, "-", "kernels"], [122, 0, 0, "-", "objectives"], [138, 0, 0, "-", "parameters"], [168, 0, 0, "-", "priors"], [179, 0, 0, "-", "recommenders"], [212, 0, 0, "-", "searchspace"], [230, 0, 0, "-", "serialization"], [244, 0, 0, "-", "simulation"], [253, 0, 0, "-", "surrogates"], [297, 0, 0, "-", "targets"], [311, 0, 0, "-", "transformations"], [336, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [25, 0, 0, "-", "base"], [27, 0, 0, "-", "partial"], [29, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedHypervolumeImprovement"], [10, 1, 1, "", "qExpectedImprovement"], [11, 1, 1, "", "qKnowledgeGradient"], [12, 1, 1, "", "qLogExpectedHypervolumeImprovement"], [13, 1, 1, "", "qLogExpectedImprovement"], [14, 1, 1, "", "qLogNParEGO"], [15, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [16, 1, 1, "", "qLogNoisyExpectedImprovement"], [17, 1, 1, "", "qNegIntegratedPosteriorVariance"], [18, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [19, 1, 1, "", "qNoisyExpectedImprovement"], [20, 1, 1, "", "qPosteriorStandardDeviation"], [21, 1, 1, "", "qProbabilityOfImprovement"], [22, 1, 1, "", "qSimpleRegret"], [23, 1, 1, "", "qThompsonSampling"], [24, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.evaluate.params": [[3, 4, 1, "", "candidates"], [3, 4, 1, "", "jointly"], [3, 4, 1, "", "measurements"], [3, 4, 1, "", "objective"], [3, 4, 1, "", "pending_experiments"], [3, 4, 1, "", "searchspace"], [3, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "source"]], "baybe.acquisition.acqfs.ExpectedImprovement.to_json.params": [[3, 4, 1, "", "overwrite"], [3, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate.params": [[4, 4, 1, "", "candidates"], [4, 4, 1, "", "jointly"], [4, 4, 1, "", "measurements"], [4, 4, 1, "", "objective"], [4, 4, 1, "", "pending_experiments"], [4, 4, 1, "", "searchspace"], [4, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "source"]], "baybe.acquisition.acqfs.LogExpectedImprovement.to_json.params": [[4, 4, 1, "", "overwrite"], [4, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "evaluate"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.evaluate.params": [[5, 4, 1, "", "candidates"], [5, 4, 1, "", "jointly"], [5, 4, 1, "", "measurements"], [5, 4, 1, "", "objective"], [5, 4, 1, "", "pending_experiments"], [5, 4, 1, "", "searchspace"], [5, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "source"]], "baybe.acquisition.acqfs.PosteriorMean.to_json.params": [[5, 4, 1, "", "overwrite"], [5, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "evaluate"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate.params": [[6, 4, 1, "", "candidates"], [6, 4, 1, "", "jointly"], [6, 4, 1, "", "measurements"], [6, 4, 1, "", "objective"], [6, 4, 1, "", "pending_experiments"], [6, 4, 1, "", "searchspace"], [6, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "source"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json.params": [[6, 4, 1, "", "overwrite"], [6, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "evaluate"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate.params": [[7, 4, 1, "", "candidates"], [7, 4, 1, "", "jointly"], [7, 4, 1, "", "measurements"], [7, 4, 1, "", "objective"], [7, 4, 1, "", "pending_experiments"], [7, 4, 1, "", "searchspace"], [7, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "source"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json.params": [[7, 4, 1, "", "overwrite"], [7, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate.params": [[8, 4, 1, "", "candidates"], [8, 4, 1, "", "jointly"], [8, 4, 1, "", "measurements"], [8, 4, 1, "", "objective"], [8, 4, 1, "", "pending_experiments"], [8, 4, 1, "", "searchspace"], [8, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "source"]], "baybe.acquisition.acqfs.UpperConfidenceBound.to_json.params": [[8, 4, 1, "", "overwrite"], [8, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 3, 1, "", "alpha"], [9, 2, 1, "", "compute_ref_point"], [9, 2, 1, "", "evaluate"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "reference_point"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.compute_ref_point.params": [[9, 4, 1, "", "array"], [9, 4, 1, "", "factor"], [9, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.evaluate.params": [[9, 4, 1, "", "candidates"], [9, 4, 1, "", "jointly"], [9, 4, 1, "", "measurements"], [9, 4, 1, "", "objective"], [9, 4, 1, "", "pending_experiments"], [9, 4, 1, "", "searchspace"], [9, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_json.params": [[9, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_json.params": [[9, 4, 1, "", "overwrite"], [9, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "evaluate"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.evaluate.params": [[10, 4, 1, "", "candidates"], [10, 4, 1, "", "jointly"], [10, 4, 1, "", "measurements"], [10, 4, 1, "", "objective"], [10, 4, 1, "", "pending_experiments"], [10, 4, 1, "", "searchspace"], [10, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[10, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qExpectedImprovement.to_json.params": [[10, 4, 1, "", "overwrite"], [10, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "evaluate"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "num_fantasies"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate.params": [[11, 4, 1, "", "candidates"], [11, 4, 1, "", "jointly"], [11, 4, 1, "", "measurements"], [11, 4, 1, "", "objective"], [11, 4, 1, "", "pending_experiments"], [11, 4, 1, "", "searchspace"], [11, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[11, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qKnowledgeGradient.to_json.params": [[11, 4, 1, "", "overwrite"], [11, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 3, 1, "", "alpha"], [12, 2, 1, "", "compute_ref_point"], [12, 2, 1, "", "evaluate"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "reference_point"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.compute_ref_point.params": [[12, 4, 1, "", "array"], [12, 4, 1, "", "factor"], [12, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.evaluate.params": [[12, 4, 1, "", "candidates"], [12, 4, 1, "", "jointly"], [12, 4, 1, "", "measurements"], [12, 4, 1, "", "objective"], [12, 4, 1, "", "pending_experiments"], [12, 4, 1, "", "searchspace"], [12, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_json.params": [[12, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_json.params": [[12, 4, 1, "", "overwrite"], [12, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "evaluate"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate.params": [[13, 4, 1, "", "candidates"], [13, 4, 1, "", "jointly"], [13, 4, 1, "", "measurements"], [13, 4, 1, "", "objective"], [13, 4, 1, "", "pending_experiments"], [13, 4, 1, "", "searchspace"], [13, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[13, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json.params": [[13, 4, 1, "", "overwrite"], [13, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qLogNParEGO": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "evaluate"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.evaluate.params": [[14, 4, 1, "", "candidates"], [14, 4, 1, "", "jointly"], [14, 4, 1, "", "measurements"], [14, 4, 1, "", "objective"], [14, 4, 1, "", "pending_experiments"], [14, 4, 1, "", "searchspace"], [14, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[14, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qLogNParEGO.to_json.params": [[14, 4, 1, "", "overwrite"], [14, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "compute_ref_point"], [15, 2, 1, "", "evaluate"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 3, 1, "", "prune_baseline"], [15, 3, 1, "", "reference_point"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[15, 4, 1, "", "array"], [15, 4, 1, "", "factor"], [15, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate.params": [[15, 4, 1, "", "candidates"], [15, 4, 1, "", "jointly"], [15, 4, 1, "", "measurements"], [15, 4, 1, "", "objective"], [15, 4, 1, "", "pending_experiments"], [15, 4, 1, "", "searchspace"], [15, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[15, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json.params": [[15, 4, 1, "", "overwrite"], [15, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "evaluate"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate.params": [[16, 4, 1, "", "candidates"], [16, 4, 1, "", "jointly"], [16, 4, 1, "", "measurements"], [16, 4, 1, "", "objective"], [16, 4, 1, "", "pending_experiments"], [16, 4, 1, "", "searchspace"], [16, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[16, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json.params": [[16, 4, 1, "", "overwrite"], [16, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "evaluate"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 2, 1, "", "get_integration_points"], [17, 3, 1, "", "sampling_fraction"], [17, 3, 1, "", "sampling_method"], [17, 3, 1, "", "sampling_n_points"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate.params": [[17, 4, 1, "", "candidates"], [17, 4, 1, "", "jointly"], [17, 4, 1, "", "measurements"], [17, 4, 1, "", "objective"], [17, 4, 1, "", "pending_experiments"], [17, 4, 1, "", "searchspace"], [17, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[17, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[17, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json.params": [[17, 4, 1, "", "overwrite"], [17, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "compute_ref_point"], [18, 2, 1, "", "evaluate"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "prune_baseline"], [18, 3, 1, "", "reference_point"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[18, 4, 1, "", "array"], [18, 4, 1, "", "factor"], [18, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate.params": [[18, 4, 1, "", "candidates"], [18, 4, 1, "", "jointly"], [18, 4, 1, "", "measurements"], [18, 4, 1, "", "objective"], [18, 4, 1, "", "pending_experiments"], [18, 4, 1, "", "searchspace"], [18, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[18, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json.params": [[18, 4, 1, "", "overwrite"], [18, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "evaluate"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "prune_baseline"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate.params": [[19, 4, 1, "", "candidates"], [19, 4, 1, "", "jointly"], [19, 4, 1, "", "measurements"], [19, 4, 1, "", "objective"], [19, 4, 1, "", "pending_experiments"], [19, 4, 1, "", "searchspace"], [19, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[19, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json.params": [[19, 4, 1, "", "overwrite"], [19, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "evaluate"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate.params": [[20, 4, 1, "", "candidates"], [20, 4, 1, "", "jointly"], [20, 4, 1, "", "measurements"], [20, 4, 1, "", "objective"], [20, 4, 1, "", "pending_experiments"], [20, 4, 1, "", "searchspace"], [20, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[20, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json.params": [[20, 4, 1, "", "overwrite"], [20, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "evaluate"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate.params": [[21, 4, 1, "", "candidates"], [21, 4, 1, "", "jointly"], [21, 4, 1, "", "measurements"], [21, 4, 1, "", "objective"], [21, 4, 1, "", "pending_experiments"], [21, 4, 1, "", "searchspace"], [21, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[21, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json.params": [[21, 4, 1, "", "overwrite"], [21, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qSimpleRegret": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 2, 1, "", "evaluate"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.evaluate.params": [[22, 4, 1, "", "candidates"], [22, 4, 1, "", "jointly"], [22, 4, 1, "", "measurements"], [22, 4, 1, "", "objective"], [22, 4, 1, "", "pending_experiments"], [22, 4, 1, "", "searchspace"], [22, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[22, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qSimpleRegret.to_json.params": [[22, 4, 1, "", "overwrite"], [22, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qThompsonSampling": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "abbreviation"], [23, 2, 1, "", "evaluate"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "from_json"], [23, 3, 1, "", "n_mc_samples"], [23, 3, 1, "", "supports_multi_output"], [23, 2, 1, "", "to_botorch"], [23, 2, 1, "", "to_dict"], [23, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.evaluate.params": [[23, 4, 1, "", "candidates"], [23, 4, 1, "", "jointly"], [23, 4, 1, "", "measurements"], [23, 4, 1, "", "objective"], [23, 4, 1, "", "pending_experiments"], [23, 4, 1, "", "searchspace"], [23, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[23, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[23, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qThompsonSampling.to_json.params": [[23, 4, 1, "", "overwrite"], [23, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 3, 1, "", "beta"], [24, 2, 1, "", "evaluate"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate.params": [[24, 4, 1, "", "candidates"], [24, 4, 1, "", "jointly"], [24, 4, 1, "", "measurements"], [24, 4, 1, "", "objective"], [24, 4, 1, "", "pending_experiments"], [24, 4, 1, "", "searchspace"], [24, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[24, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json.params": [[24, 4, 1, "", "overwrite"], [24, 4, 1, "", "sink"]], "baybe.acquisition.base": [[26, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "abbreviation"], [26, 2, 1, "", "evaluate"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "from_json"], [26, 3, 1, "", "supports_multi_output"], [26, 2, 1, "", "to_botorch"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.evaluate.params": [[26, 4, 1, "", "candidates"], [26, 4, 1, "", "jointly"], [26, 4, 1, "", "measurements"], [26, 4, 1, "", "objective"], [26, 4, 1, "", "pending_experiments"], [26, 4, 1, "", "searchspace"], [26, 4, 1, "", "surrogate"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[26, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[26, 4, 1, "", "source"]], "baybe.acquisition.base.AcquisitionFunction.to_json.params": [[26, 4, 1, "", "overwrite"], [26, 4, 1, "", "sink"]], "baybe.acquisition.partial": [[28, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[28, 2, 1, "", "__init__"], [28, 3, 1, "", "botorch_acqf"], [28, 3, 1, "", "pin_discrete"], [28, 3, 1, "", "pinned_part"], [28, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[28, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[30, 5, 1, "", "convert_acqf"], [31, 5, 1, "", "make_partitioning"], [32, 5, 1, "", "str_to_acqf"]], "baybe.acquisition.utils.make_partitioning.params": [[31, 4, 1, "", "alpha"], [31, 4, 1, "", "predictions"], [31, 4, 1, "", "ref_point"]], "baybe.campaign": [[34, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "acquisition_values"], [34, 2, 1, "", "add_measurements"], [34, 3, 1, "", "allow_recommending_already_measured"], [34, 3, 1, "", "allow_recommending_already_recommended"], [34, 3, 1, "", "allow_recommending_pending_experiments"], [34, 2, 1, "", "clear_cache"], [34, 2, 1, "", "from_config"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 2, 1, "", "get_acquisition_function"], [34, 2, 1, "", "get_surrogate"], [34, 2, 1, "", "joint_acquisition_value"], [34, 6, 1, "", "measurements"], [34, 3, 1, "", "n_batches_done"], [34, 3, 1, "", "n_fits_done"], [34, 3, 1, "", "objective"], [34, 6, 1, "", "parameters"], [34, 2, 1, "", "posterior"], [34, 2, 1, "", "posterior_stats"], [34, 2, 1, "", "recommend"], [34, 3, 1, "", "recommender"], [34, 3, 1, "", "searchspace"], [34, 6, 1, "", "targets"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"], [34, 2, 1, "", "toggle_discrete_candidates"], [34, 2, 1, "", "update_measurements"], [34, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.acquisition_values.params": [[34, 4, 1, "", "acquisition_function"], [34, 4, 1, "", "batch_size"], [34, 4, 1, "", "candidates"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.add_measurements.params": [[34, 4, 1, "", "data"], [34, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[34, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[34, 4, 1, "", "source"]], "baybe.campaign.Campaign.get_acquisition_function.params": [[34, 4, 1, "", "batch_size"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.get_surrogate.params": [[34, 4, 1, "", "batch_size"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[34, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[34, 4, 1, "", "candidates"], [34, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[34, 4, 1, "", "batch_size"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.to_json.params": [[34, 4, 1, "", "overwrite"], [34, 4, 1, "", "sink"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[34, 4, 1, "", "complement"], [34, 4, 1, "", "constraints"], [34, 4, 1, "", "dry_run"], [34, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.update_measurements.params": [[34, 4, 1, "", "data"], [34, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.validate_config.params": [[34, 4, 1, "", "config_json"]], "baybe.constraints": [[36, 0, 0, "-", "base"], [42, 0, 0, "-", "conditions"], [46, 0, 0, "-", "continuous"], [49, 0, 0, "-", "deprecation"], [52, 0, 0, "-", "discrete"], [62, 0, 0, "-", "utils"], [64, 0, 0, "-", "validation"]], "baybe.constraints.base": [[37, 1, 1, "", "CardinalityConstraint"], [38, 1, 1, "", "Constraint"], [39, 1, 1, "", "ContinuousConstraint"], [40, 1, 1, "", "ContinuousNonlinearConstraint"], [41, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "max_cardinality"], [37, 3, 1, "", "min_cardinality"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[37, 4, 1, "", "source"]], "baybe.constraints.base.CardinalityConstraint.to_json.params": [[37, 4, 1, "", "overwrite"], [37, 4, 1, "", "sink"]], "baybe.constraints.base.Constraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[38, 4, 1, "", "source"]], "baybe.constraints.base.Constraint.to_json.params": [[38, 4, 1, "", "overwrite"], [38, 4, 1, "", "sink"]], "baybe.constraints.base.ContinuousConstraint": [[39, 2, 1, "", "__init__"], [39, 3, 1, "", "eval_during_augmentation"], [39, 3, 1, "", "eval_during_creation"], [39, 3, 1, "", "eval_during_modeling"], [39, 2, 1, "", "from_dict"], [39, 2, 1, "", "from_json"], [39, 6, 1, "", "is_continuous"], [39, 6, 1, "", "is_discrete"], [39, 3, 1, "", "numerical_only"], [39, 3, 1, "", "parameters"], [39, 2, 1, "", "summary"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[39, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[39, 4, 1, "", "source"]], "baybe.constraints.base.ContinuousConstraint.to_json.params": [[39, 4, 1, "", "overwrite"], [39, 4, 1, "", "sink"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "eval_during_augmentation"], [40, 3, 1, "", "eval_during_creation"], [40, 3, 1, "", "eval_during_modeling"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 6, 1, "", "is_continuous"], [40, 6, 1, "", "is_discrete"], [40, 3, 1, "", "numerical_only"], [40, 3, 1, "", "parameters"], [40, 2, 1, "", "summary"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[40, 4, 1, "", "source"]], "baybe.constraints.base.ContinuousNonlinearConstraint.to_json.params": [[40, 4, 1, "", "overwrite"], [40, 4, 1, "", "sink"]], "baybe.constraints.base.DiscreteConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 2, 1, "", "get_invalid"], [41, 2, 1, "", "get_invalid_polars"], [41, 2, 1, "", "get_valid"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "parameters"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[41, 4, 1, "", "source"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[41, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[41, 4, 1, "", "df"]], "baybe.constraints.base.DiscreteConstraint.to_json.params": [[41, 4, 1, "", "overwrite"], [41, 4, 1, "", "sink"]], "baybe.constraints.conditions": [[43, 1, 1, "", "Condition"], [44, 1, 1, "", "SubSelectionCondition"], [45, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[43, 2, 1, "", "evaluate"], [43, 2, 1, "", "from_dict"], [43, 2, 1, "", "from_json"], [43, 2, 1, "", "to_dict"], [43, 2, 1, "", "to_json"], [43, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[43, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[43, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[43, 4, 1, "", "source"]], "baybe.constraints.conditions.Condition.to_json.params": [[43, 4, 1, "", "overwrite"], [43, 4, 1, "", "sink"]], "baybe.constraints.conditions.Condition.to_polars.params": [[43, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "evaluate"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 6, 1, "", "selection"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"], [44, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[44, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[44, 4, 1, "", "source"]], "baybe.constraints.conditions.SubSelectionCondition.to_json.params": [[44, 4, 1, "", "overwrite"], [44, 4, 1, "", "sink"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[44, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "evaluate"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "threshold"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"], [45, 2, 1, "", "to_polars"], [45, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[45, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[45, 4, 1, "", "source"]], "baybe.constraints.conditions.ThresholdCondition.to_json.params": [[45, 4, 1, "", "overwrite"], [45, 4, 1, "", "sink"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[45, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[47, 1, 1, "", "ContinuousCardinalityConstraint"], [48, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_absolute_thresholds"], [47, 2, 1, "", "inactive_parameter_combinations"], [47, 6, 1, "", "is_continuous"], [47, 6, 1, "", "is_discrete"], [47, 3, 1, "", "max_cardinality"], [47, 3, 1, "", "min_cardinality"], [47, 6, 1, "", "n_inactive_parameter_combinations"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "relative_threshold"], [47, 2, 1, "", "sample_inactive_parameters"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[47, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[47, 4, 1, "", "source"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[47, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[47, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json.params": [[47, 4, 1, "", "overwrite"], [47, 4, 1, "", "sink"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "coefficients"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 6, 1, "", "is_eq"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "operator"], [48, 3, 1, "", "parameters"], [48, 3, 1, "", "rhs"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_botorch"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[48, 4, 1, "", "source"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[48, 4, 1, "", "idx_offset"], [48, 4, 1, "", "parameters"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_json.params": [[48, 4, 1, "", "overwrite"], [48, 4, 1, "", "sink"]], "baybe.constraints.deprecation": [[50, 5, 1, "", "ContinuousLinearEqualityConstraint"], [51, 5, 1, "", "ContinuousLinearInequalityConstraint"]], "baybe.constraints.discrete": [[53, 1, 1, "", "DiscreteCardinalityConstraint"], [54, 1, 1, "", "DiscreteCustomConstraint"], [55, 1, 1, "", "DiscreteDependenciesConstraint"], [56, 1, 1, "", "DiscreteExcludeConstraint"], [57, 1, 1, "", "DiscreteLinkedParametersConstraint"], [58, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [59, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [60, 1, 1, "", "DiscreteProductConstraint"], [61, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "max_cardinality"], [53, 3, 1, "", "min_cardinality"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[53, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json.params": [[53, 4, 1, "", "overwrite"], [53, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"], [54, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[54, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint.to_json.params": [[54, 4, 1, "", "overwrite"], [54, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "affected_parameters"], [55, 3, 1, "", "conditions"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 3, 1, "", "permutation_invariant"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[55, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json.params": [[55, 4, 1, "", "overwrite"], [55, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "combiner"], [56, 3, 1, "", "conditions"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[56, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json.params": [[56, 4, 1, "", "overwrite"], [56, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[57, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json.params": [[57, 4, 1, "", "overwrite"], [57, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[58, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json.params": [[58, 4, 1, "", "overwrite"], [58, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[59, 2, 1, "", "__init__"], [59, 3, 1, "", "dependencies"], [59, 3, 1, "", "eval_during_augmentation"], [59, 3, 1, "", "eval_during_creation"], [59, 3, 1, "", "eval_during_modeling"], [59, 2, 1, "", "from_dict"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_invalid"], [59, 2, 1, "", "get_invalid_polars"], [59, 2, 1, "", "get_valid"], [59, 6, 1, "", "is_continuous"], [59, 6, 1, "", "is_discrete"], [59, 3, 1, "", "numerical_only"], [59, 3, 1, "", "parameters"], [59, 2, 1, "", "summary"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[59, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[59, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[59, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[59, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json.params": [[59, 4, 1, "", "overwrite"], [59, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[60, 2, 1, "", "__init__"], [60, 3, 1, "", "condition"], [60, 3, 1, "", "eval_during_augmentation"], [60, 3, 1, "", "eval_during_creation"], [60, 3, 1, "", "eval_during_modeling"], [60, 2, 1, "", "from_dict"], [60, 2, 1, "", "from_json"], [60, 2, 1, "", "get_invalid"], [60, 2, 1, "", "get_invalid_polars"], [60, 2, 1, "", "get_valid"], [60, 6, 1, "", "is_continuous"], [60, 6, 1, "", "is_discrete"], [60, 3, 1, "", "numerical_only"], [60, 3, 1, "", "parameters"], [60, 2, 1, "", "summary"], [60, 2, 1, "", "to_dict"], [60, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[60, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[60, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[60, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[60, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint.to_json.params": [[60, 4, 1, "", "overwrite"], [60, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[61, 2, 1, "", "__init__"], [61, 3, 1, "", "condition"], [61, 3, 1, "", "eval_during_augmentation"], [61, 3, 1, "", "eval_during_creation"], [61, 3, 1, "", "eval_during_modeling"], [61, 2, 1, "", "from_dict"], [61, 2, 1, "", "from_json"], [61, 2, 1, "", "get_invalid"], [61, 2, 1, "", "get_invalid_polars"], [61, 2, 1, "", "get_valid"], [61, 6, 1, "", "is_continuous"], [61, 6, 1, "", "is_discrete"], [61, 3, 1, "", "numerical_only"], [61, 3, 1, "", "parameters"], [61, 2, 1, "", "summary"], [61, 2, 1, "", "to_dict"], [61, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[61, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[61, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[61, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[61, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint.to_json.params": [[61, 4, 1, "", "overwrite"], [61, 4, 1, "", "sink"]], "baybe.constraints.utils": [[63, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[63, 4, 1, "", "check_maximum"], [63, 4, 1, "", "check_minimum"], [63, 4, 1, "", "df"], [63, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[65, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [66, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [67, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[65, 4, 1, "", "constraint"], [65, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[66, 4, 1, "", "constraints"]], "baybe.exceptions": [[69, 7, 1, "", "DeprecationError"], [70, 7, 1, "", "EmptySearchSpaceError"], [71, 7, 1, "", "IncompatibilityError"], [72, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [73, 7, 1, "", "IncompatibleArgumentError"], [74, 7, 1, "", "IncompatibleExplainerError"], [75, 7, 1, "", "IncompatibleSearchSpaceError"], [76, 7, 1, "", "IncompatibleSurrogateError"], [77, 7, 1, "", "IncompleteMeasurementsError"], [78, 7, 1, "", "InfeasibilityError"], [79, 7, 1, "", "InputDataTypeWarning"], [80, 7, 1, "", "InvalidSurrogateModelError"], [81, 7, 1, "", "InvalidTargetValueError"], [82, 7, 1, "", "MinimumCardinalityViolatedWarning"], [83, 7, 1, "", "ModelNotTrainedError"], [84, 7, 1, "", "NoMCAcquisitionFunctionError"], [85, 7, 1, "", "NoMeasurementsError"], [86, 7, 1, "", "NoRecommendersLeftError"], [87, 7, 1, "", "NotEnoughPointsLeftError"], [88, 7, 1, "", "NothingToSimulateError"], [89, 7, 1, "", "NumericalUnderflowError"], [90, 7, 1, "", "OptionalImportError"], [91, 7, 1, "", "SearchSpaceMatchWarning"], [92, 7, 1, "", "UnidentifiedSubclassError"], [93, 7, 1, "", "UnmatchedAttributeError"], [94, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.IncompleteMeasurementsError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.InputDataTypeWarning": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.NoMeasurementsError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "__new__"]], "baybe.insights": [[96, 0, 0, "-", "shap"]], "baybe.insights.shap": [[97, 8, 1, "", "EXPLAINERS"], [98, 8, 1, "", "NON_SHAP_EXPLAINERS"], [99, 1, 1, "", "SHAPInsight"], [100, 8, 1, "", "SHAP_EXPLAINERS"], [101, 8, 1, "", "SHAP_PLOTS"], [102, 5, 1, "", "is_shap_explainer"], [103, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[99, 2, 1, "", "__init__"], [99, 3, 1, "", "background_data"], [99, 2, 1, "", "explain"], [99, 2, 1, "", "explain_target"], [99, 3, 1, "", "explainers"], [99, 2, 1, "", "from_campaign"], [99, 2, 1, "", "from_recommender"], [99, 2, 1, "", "from_surrogate"], [99, 2, 1, "", "plot"]], "baybe.insights.shap.SHAPInsight.explain.params": [[99, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.explain_target.params": [[99, 4, 1, "", "data"], [99, 4, 1, "", "target_index"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[99, 4, 1, "", "campaign"], [99, 4, 1, "", "explainer_cls"], [99, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[99, 4, 1, "", "explainer_cls"], [99, 4, 1, "", "measurements"], [99, 4, 1, "", "objective"], [99, 4, 1, "", "recommender"], [99, 4, 1, "", "searchspace"], [99, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[99, 4, 1, "", "**kwargs"], [99, 4, 1, "", "data"], [99, 4, 1, "", "explanation_index"], [99, 4, 1, "", "plot_type"], [99, 4, 1, "", "show"], [99, 4, 1, "", "target_index"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[103, 4, 1, "", "data"], [103, 4, 1, "", "explainer_cls"], [103, 4, 1, "", "surrogate"], [103, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[105, 0, 0, "-", "base"], [109, 0, 0, "-", "basic"], [118, 0, 0, "-", "composite"]], "baybe.kernels.base": [[106, 1, 1, "", "BasicKernel"], [107, 1, 1, "", "CompositeKernel"], [108, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[106, 4, 1, "", "source"]], "baybe.kernels.base.BasicKernel.to_json.params": [[106, 4, 1, "", "overwrite"], [106, 4, 1, "", "sink"]], "baybe.kernels.base.CompositeKernel": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[107, 4, 1, "", "source"]], "baybe.kernels.base.CompositeKernel.to_json.params": [[107, 4, 1, "", "overwrite"], [107, 4, 1, "", "sink"]], "baybe.kernels.base.Kernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[108, 4, 1, "", "source"]], "baybe.kernels.base.Kernel.to_json.params": [[108, 4, 1, "", "overwrite"], [108, 4, 1, "", "sink"]], "baybe.kernels.basic": [[110, 1, 1, "", "LinearKernel"], [111, 1, 1, "", "MaternKernel"], [112, 1, 1, "", "PeriodicKernel"], [113, 1, 1, "", "PiecewisePolynomialKernel"], [114, 1, 1, "", "PolynomialKernel"], [115, 1, 1, "", "RBFKernel"], [116, 1, 1, "", "RFFKernel"], [117, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_factory"], [110, 2, 1, "", "to_gpytorch"], [110, 2, 1, "", "to_json"], [110, 3, 1, "", "variance_initial_value"], [110, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[110, 4, 1, "", "source"]], "baybe.kernels.basic.LinearKernel.to_json.params": [[110, 4, 1, "", "overwrite"], [110, 4, 1, "", "sink"]], "baybe.kernels.basic.MaternKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 3, 1, "", "lengthscale_initial_value"], [111, 3, 1, "", "lengthscale_prior"], [111, 3, 1, "", "nu"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[111, 4, 1, "", "source"]], "baybe.kernels.basic.MaternKernel.to_json.params": [[111, 4, 1, "", "overwrite"], [111, 4, 1, "", "sink"]], "baybe.kernels.basic.PeriodicKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "lengthscale_initial_value"], [112, 3, 1, "", "lengthscale_prior"], [112, 3, 1, "", "period_length_initial_value"], [112, 3, 1, "", "period_length_prior"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[112, 4, 1, "", "source"]], "baybe.kernels.basic.PeriodicKernel.to_json.params": [[112, 4, 1, "", "overwrite"], [112, 4, 1, "", "sink"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 3, 1, "", "lengthscale_initial_value"], [113, 3, 1, "", "lengthscale_prior"], [113, 3, 1, "", "q"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_factory"], [113, 2, 1, "", "to_gpytorch"], [113, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[113, 4, 1, "", "source"]], "baybe.kernels.basic.PiecewisePolynomialKernel.to_json.params": [[113, 4, 1, "", "overwrite"], [113, 4, 1, "", "sink"]], "baybe.kernels.basic.PolynomialKernel": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 3, 1, "", "offset_initial_value"], [114, 3, 1, "", "offset_prior"], [114, 3, 1, "", "power"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_factory"], [114, 2, 1, "", "to_gpytorch"], [114, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[114, 4, 1, "", "source"]], "baybe.kernels.basic.PolynomialKernel.to_json.params": [[114, 4, 1, "", "overwrite"], [114, 4, 1, "", "sink"]], "baybe.kernels.basic.RBFKernel": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 3, 1, "", "lengthscale_initial_value"], [115, 3, 1, "", "lengthscale_prior"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_factory"], [115, 2, 1, "", "to_gpytorch"], [115, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[115, 4, 1, "", "source"]], "baybe.kernels.basic.RBFKernel.to_json.params": [[115, 4, 1, "", "overwrite"], [115, 4, 1, "", "sink"]], "baybe.kernels.basic.RFFKernel": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 3, 1, "", "lengthscale_initial_value"], [116, 3, 1, "", "lengthscale_prior"], [116, 3, 1, "", "num_samples"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_factory"], [116, 2, 1, "", "to_gpytorch"], [116, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[116, 4, 1, "", "source"]], "baybe.kernels.basic.RFFKernel.to_json.params": [[116, 4, 1, "", "overwrite"], [116, 4, 1, "", "sink"]], "baybe.kernels.basic.RQKernel": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 3, 1, "", "lengthscale_initial_value"], [117, 3, 1, "", "lengthscale_prior"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_factory"], [117, 2, 1, "", "to_gpytorch"], [117, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[117, 4, 1, "", "source"]], "baybe.kernels.basic.RQKernel.to_json.params": [[117, 4, 1, "", "overwrite"], [117, 4, 1, "", "sink"]], "baybe.kernels.composite": [[119, 1, 1, "", "AdditiveKernel"], [120, 1, 1, "", "ProductKernel"], [121, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[119, 2, 1, "", "__init__"], [119, 3, 1, "", "base_kernels"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_factory"], [119, 2, 1, "", "to_gpytorch"], [119, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[119, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[119, 4, 1, "", "source"]], "baybe.kernels.composite.AdditiveKernel.to_json.params": [[119, 4, 1, "", "overwrite"], [119, 4, 1, "", "sink"]], "baybe.kernels.composite.ProductKernel": [[120, 2, 1, "", "__init__"], [120, 3, 1, "", "base_kernels"], [120, 2, 1, "", "from_dict"], [120, 2, 1, "", "from_json"], [120, 2, 1, "", "to_dict"], [120, 2, 1, "", "to_factory"], [120, 2, 1, "", "to_gpytorch"], [120, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[120, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[120, 4, 1, "", "source"]], "baybe.kernels.composite.ProductKernel.to_json.params": [[120, 4, 1, "", "overwrite"], [120, 4, 1, "", "sink"]], "baybe.kernels.composite.ScaleKernel": [[121, 2, 1, "", "__init__"], [121, 3, 1, "", "base_kernel"], [121, 2, 1, "", "from_dict"], [121, 2, 1, "", "from_json"], [121, 3, 1, "", "outputscale_initial_value"], [121, 3, 1, "", "outputscale_prior"], [121, 2, 1, "", "to_dict"], [121, 2, 1, "", "to_factory"], [121, 2, 1, "", "to_gpytorch"], [121, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[121, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[121, 4, 1, "", "source"]], "baybe.kernels.composite.ScaleKernel.to_json.params": [[121, 4, 1, "", "overwrite"], [121, 4, 1, "", "sink"]], "baybe.objectives": [[123, 0, 0, "-", "base"], [126, 0, 0, "-", "botorch"], [128, 0, 0, "-", "desirability"], [130, 0, 0, "-", "enum"], [132, 0, 0, "-", "pareto"], [134, 0, 0, "-", "single"], [136, 0, 0, "-", "validation"]], "baybe.objectives.base": [[124, 1, 1, "", "Objective"], [125, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[124, 2, 1, "", "__init__"], [124, 6, 1, "", "description"], [124, 2, 1, "", "from_dict"], [124, 2, 1, "", "from_json"], [124, 3, 1, "", "is_multi_output"], [124, 3, 1, "", "metadata"], [124, 6, 1, "", "n_outputs"], [124, 6, 1, "", "output_names"], [124, 6, 1, "", "supports_partial_measurements"], [124, 6, 1, "", "targets"], [124, 2, 1, "", "to_botorch"], [124, 2, 1, "", "to_dict"], [124, 2, 1, "", "to_json"], [124, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[124, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[124, 4, 1, "", "source"]], "baybe.objectives.base.Objective.to_json.params": [[124, 4, 1, "", "overwrite"], [124, 4, 1, "", "sink"]], "baybe.objectives.base.Objective.transform.params": [[124, 4, 1, "", "allow_extra"], [124, 4, 1, "", "allow_missing"], [124, 4, 1, "", "data"], [124, 4, 1, "", "df"]], "baybe.objectives.botorch": [[127, 1, 1, "", "ChainedMCObjective"]], "baybe.objectives.botorch.ChainedMCObjective": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "add_module"], [127, 2, 1, "", "apply"], [127, 2, 1, "", "bfloat16"], [127, 2, 1, "", "buffers"], [127, 2, 1, "", "children"], [127, 2, 1, "", "compile"], [127, 2, 1, "", "cpu"], [127, 2, 1, "", "cuda"], [127, 2, 1, "", "double"], [127, 2, 1, "", "eval"], [127, 2, 1, "", "extra_repr"], [127, 2, 1, "", "float"], [127, 2, 1, "", "forward"], [127, 2, 1, "", "get_buffer"], [127, 2, 1, "", "get_extra_state"], [127, 2, 1, "", "get_parameter"], [127, 2, 1, "", "get_submodule"], [127, 2, 1, "", "half"], [127, 2, 1, "", "ipu"], [127, 2, 1, "", "modules"], [127, 2, 1, "", "mtia"], [127, 2, 1, "", "named_buffers"], [127, 2, 1, "", "named_children"], [127, 2, 1, "", "named_modules"], [127, 2, 1, "", "named_parameters"], [127, 2, 1, "", "parameters"], [127, 2, 1, "", "register_backward_hook"], [127, 2, 1, "", "register_buffer"], [127, 2, 1, "", "register_forward_hook"], [127, 2, 1, "", "register_forward_pre_hook"], [127, 2, 1, "", "register_full_backward_hook"], [127, 2, 1, "", "register_full_backward_pre_hook"], [127, 2, 1, "", "register_load_state_dict_post_hook"], [127, 2, 1, "", "register_load_state_dict_pre_hook"], [127, 2, 1, "", "register_module"], [127, 2, 1, "", "register_parameter"], [127, 2, 1, "", "register_state_dict_post_hook"], [127, 2, 1, "", "register_state_dict_pre_hook"], [127, 2, 1, "", "requires_grad_"], [127, 2, 1, "", "set_extra_state"], [127, 2, 1, "", "set_submodule"], [127, 2, 1, "", "share_memory"], [127, 2, 1, "", "state_dict"], [127, 2, 1, "", "to"], [127, 2, 1, "", "to_empty"], [127, 2, 1, "", "train"], [127, 2, 1, "", "type"], [127, 2, 1, "", "xpu"], [127, 2, 1, "", "zero_grad"]], "baybe.objectives.botorch.ChainedMCObjective.add_module.params": [[127, 4, 1, "", "module"], [127, 4, 1, "", "name"]], "baybe.objectives.botorch.ChainedMCObjective.apply.params": [[127, 4, 1, "", "fn"]], "baybe.objectives.botorch.ChainedMCObjective.buffers.params": [[127, 4, 1, "", "recurse"]], "baybe.objectives.botorch.ChainedMCObjective.cuda.params": [[127, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.forward.params": [[127, 4, 1, "", "X"], [127, 4, 1, "", "samples"]], "baybe.objectives.botorch.ChainedMCObjective.get_buffer.params": [[127, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.get_parameter.params": [[127, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.get_submodule.params": [[127, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.ipu.params": [[127, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.mtia.params": [[127, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.named_buffers.params": [[127, 4, 1, "", "prefix"], [127, 4, 1, "", "recurse"], [127, 4, 1, "", "remove_duplicate"]], "baybe.objectives.botorch.ChainedMCObjective.named_modules.params": [[127, 4, 1, "", "memo"], [127, 4, 1, "", "prefix"], [127, 4, 1, "", "remove_duplicate"]], "baybe.objectives.botorch.ChainedMCObjective.named_parameters.params": [[127, 4, 1, "", "prefix"], [127, 4, 1, "", "recurse"], [127, 4, 1, "", "remove_duplicate"]], "baybe.objectives.botorch.ChainedMCObjective.parameters.params": [[127, 4, 1, "", "recurse"]], "baybe.objectives.botorch.ChainedMCObjective.register_buffer.params": [[127, 4, 1, "", "name"], [127, 4, 1, "", "persistent"], [127, 4, 1, "", "tensor"]], "baybe.objectives.botorch.ChainedMCObjective.register_forward_hook.params": [[127, 4, 1, "", "always_call"], [127, 4, 1, "", "hook"], [127, 4, 1, "", "prepend"], [127, 4, 1, "", "with_kwargs"]], "baybe.objectives.botorch.ChainedMCObjective.register_forward_pre_hook.params": [[127, 4, 1, "", "hook"], [127, 4, 1, "", "prepend"], [127, 4, 1, "", "with_kwargs"]], "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_hook.params": [[127, 4, 1, "", "hook"], [127, 4, 1, "", "prepend"]], "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_pre_hook.params": [[127, 4, 1, "", "hook"], [127, 4, 1, "", "prepend"]], "baybe.objectives.botorch.ChainedMCObjective.register_load_state_dict_pre_hook.params": [[127, 4, 1, "", "hook"]], "baybe.objectives.botorch.ChainedMCObjective.register_parameter.params": [[127, 4, 1, "", "name"], [127, 4, 1, "", "param"]], "baybe.objectives.botorch.ChainedMCObjective.requires_grad_.params": [[127, 4, 1, "", "requires_grad"]], "baybe.objectives.botorch.ChainedMCObjective.set_extra_state.params": [[127, 4, 1, "", "state"]], "baybe.objectives.botorch.ChainedMCObjective.set_submodule.params": [[127, 4, 1, "", "module"], [127, 4, 1, "", "strict"], [127, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.state_dict.params": [[127, 4, 1, "", "destination"], [127, 4, 1, "", "keep_vars"], [127, 4, 1, "", "prefix"]], "baybe.objectives.botorch.ChainedMCObjective.to.params": [[127, 4, 1, "", "device"], [127, 4, 1, "", "dtype"], [127, 4, 1, "", "memory_format"], [127, 4, 1, "", "tensor"]], "baybe.objectives.botorch.ChainedMCObjective.to_empty.params": [[127, 4, 1, "", "device"], [127, 4, 1, "", "recurse"]], "baybe.objectives.botorch.ChainedMCObjective.train.params": [[127, 4, 1, "", "mode"]], "baybe.objectives.botorch.ChainedMCObjective.type.params": [[127, 4, 1, "", "dst_type"]], "baybe.objectives.botorch.ChainedMCObjective.xpu.params": [[127, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.zero_grad.params": [[127, 4, 1, "", "set_to_none"]], "baybe.objectives.desirability": [[129, 1, 1, "", "DesirabilityObjective"]], "baybe.objectives.desirability.DesirabilityObjective": [[129, 2, 1, "", "__init__"], [129, 3, 1, "", "as_pre_transformation"], [129, 6, 1, "", "description"], [129, 2, 1, "", "from_dict"], [129, 2, 1, "", "from_json"], [129, 3, 1, "", "is_multi_output"], [129, 3, 1, "", "metadata"], [129, 6, 1, "", "n_outputs"], [129, 6, 1, "", "output_names"], [129, 3, 1, "", "require_normalization"], [129, 3, 1, "", "scalarizer"], [129, 6, 1, "", "supports_partial_measurements"], [129, 6, 1, "", "targets"], [129, 2, 1, "", "to_botorch"], [129, 2, 1, "", "to_dict"], [129, 2, 1, "", "to_json"], [129, 2, 1, "", "transform"], [129, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[129, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[129, 4, 1, "", "source"]], "baybe.objectives.desirability.DesirabilityObjective.to_json.params": [[129, 4, 1, "", "overwrite"], [129, 4, 1, "", "sink"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[129, 4, 1, "", "allow_extra"], [129, 4, 1, "", "allow_missing"], [129, 4, 1, "", "data"], [129, 4, 1, "", "df"]], "baybe.objectives.enum": [[131, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[131, 3, 1, "", "GEOM_MEAN"], [131, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[133, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[133, 2, 1, "", "__init__"], [133, 6, 1, "", "description"], [133, 2, 1, "", "from_dict"], [133, 2, 1, "", "from_json"], [133, 3, 1, "", "is_multi_output"], [133, 3, 1, "", "metadata"], [133, 6, 1, "", "n_outputs"], [133, 6, 1, "", "output_names"], [133, 6, 1, "", "supports_partial_measurements"], [133, 6, 1, "", "targets"], [133, 2, 1, "", "to_botorch"], [133, 2, 1, "", "to_dict"], [133, 2, 1, "", "to_json"], [133, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[133, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[133, 4, 1, "", "source"]], "baybe.objectives.pareto.ParetoObjective.to_json.params": [[133, 4, 1, "", "overwrite"], [133, 4, 1, "", "sink"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[133, 4, 1, "", "allow_extra"], [133, 4, 1, "", "allow_missing"], [133, 4, 1, "", "data"], [133, 4, 1, "", "df"]], "baybe.objectives.single": [[135, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[135, 2, 1, "", "__init__"], [135, 6, 1, "", "description"], [135, 2, 1, "", "from_dict"], [135, 2, 1, "", "from_json"], [135, 3, 1, "", "is_multi_output"], [135, 3, 1, "", "metadata"], [135, 6, 1, "", "n_outputs"], [135, 6, 1, "", "output_names"], [135, 6, 1, "", "supports_partial_measurements"], [135, 6, 1, "", "targets"], [135, 2, 1, "", "to_botorch"], [135, 2, 1, "", "to_dict"], [135, 2, 1, "", "to_json"], [135, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[135, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[135, 4, 1, "", "source"]], "baybe.objectives.single.SingleTargetObjective.to_json.params": [[135, 4, 1, "", "overwrite"], [135, 4, 1, "", "sink"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[135, 4, 1, "", "allow_extra"], [135, 4, 1, "", "allow_missing"], [135, 4, 1, "", "data"], [135, 4, 1, "", "df"]], "baybe.objectives.validation": [[137, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[139, 0, 0, "-", "base"], [143, 0, 0, "-", "categorical"], [146, 0, 0, "-", "custom"], [148, 0, 0, "-", "enum"], [153, 0, 0, "-", "numerical"], [156, 0, 0, "-", "substance"], [159, 0, 0, "-", "utils"], [164, 0, 0, "-", "validation"]], "baybe.parameters.base": [[140, 1, 1, "", "ContinuousParameter"], [141, 1, 1, "", "DiscreteParameter"], [142, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[140, 2, 1, "", "__init__"], [140, 6, 1, "", "comp_rep_columns"], [140, 6, 1, "", "description"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 6, 1, "", "is_continuous"], [140, 6, 1, "", "is_discrete"], [140, 2, 1, "", "is_in_range"], [140, 3, 1, "", "is_numerical"], [140, 3, 1, "", "metadata"], [140, 3, 1, "", "name"], [140, 2, 1, "", "summary"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_json"], [140, 2, 1, "", "to_searchspace"], [140, 2, 1, "", "to_subspace"], [140, 6, 1, "", "unit"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[140, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[140, 4, 1, "", "source"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[140, 4, 1, "", "item"]], "baybe.parameters.base.ContinuousParameter.to_json.params": [[140, 4, 1, "", "overwrite"], [140, 4, 1, "", "sink"]], "baybe.parameters.base.DiscreteParameter": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "active_values"], [141, 6, 1, "", "comp_df"], [141, 6, 1, "", "comp_rep_columns"], [141, 6, 1, "", "description"], [141, 3, 1, "", "encoding"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 6, 1, "", "is_continuous"], [141, 6, 1, "", "is_discrete"], [141, 2, 1, "", "is_in_range"], [141, 3, 1, "", "is_numerical"], [141, 3, 1, "", "metadata"], [141, 3, 1, "", "name"], [141, 2, 1, "", "summary"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_json"], [141, 2, 1, "", "to_searchspace"], [141, 2, 1, "", "to_subspace"], [141, 2, 1, "", "transform"], [141, 6, 1, "", "unit"], [141, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[141, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[141, 4, 1, "", "source"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[141, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.to_json.params": [[141, 4, 1, "", "overwrite"], [141, 4, 1, "", "sink"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[141, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "comp_rep_columns"], [142, 6, 1, "", "description"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "metadata"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 6, 1, "", "unit"]], "baybe.parameters.base.Parameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[142, 4, 1, "", "source"]], "baybe.parameters.base.Parameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.base.Parameter.to_json.params": [[142, 4, 1, "", "overwrite"], [142, 4, 1, "", "sink"]], "baybe.parameters.categorical": [[144, 1, 1, "", "CategoricalParameter"], [145, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[144, 2, 1, "", "__init__"], [144, 6, 1, "", "active_values"], [144, 6, 1, "", "comp_df"], [144, 6, 1, "", "comp_rep_columns"], [144, 6, 1, "", "description"], [144, 3, 1, "", "encoding"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_json"], [144, 6, 1, "", "is_continuous"], [144, 6, 1, "", "is_discrete"], [144, 2, 1, "", "is_in_range"], [144, 3, 1, "", "is_numerical"], [144, 3, 1, "", "metadata"], [144, 3, 1, "", "name"], [144, 2, 1, "", "summary"], [144, 2, 1, "", "to_dict"], [144, 2, 1, "", "to_json"], [144, 2, 1, "", "to_searchspace"], [144, 2, 1, "", "to_subspace"], [144, 2, 1, "", "transform"], [144, 6, 1, "", "unit"], [144, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[144, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[144, 4, 1, "", "source"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[144, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.to_json.params": [[144, 4, 1, "", "overwrite"], [144, 4, 1, "", "sink"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[144, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[145, 2, 1, "", "__init__"], [145, 6, 1, "", "active_values"], [145, 6, 1, "", "comp_df"], [145, 6, 1, "", "comp_rep_columns"], [145, 6, 1, "", "description"], [145, 3, 1, "", "encoding"], [145, 2, 1, "", "from_dict"], [145, 2, 1, "", "from_json"], [145, 6, 1, "", "is_continuous"], [145, 6, 1, "", "is_discrete"], [145, 2, 1, "", "is_in_range"], [145, 3, 1, "", "is_numerical"], [145, 3, 1, "", "metadata"], [145, 3, 1, "", "name"], [145, 2, 1, "", "summary"], [145, 2, 1, "", "to_dict"], [145, 2, 1, "", "to_json"], [145, 2, 1, "", "to_searchspace"], [145, 2, 1, "", "to_subspace"], [145, 2, 1, "", "transform"], [145, 6, 1, "", "unit"], [145, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[145, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[145, 4, 1, "", "source"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[145, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.to_json.params": [[145, 4, 1, "", "overwrite"], [145, 4, 1, "", "sink"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[145, 4, 1, "", "series"]], "baybe.parameters.custom": [[147, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[147, 2, 1, "", "__init__"], [147, 6, 1, "", "active_values"], [147, 6, 1, "", "comp_df"], [147, 6, 1, "", "comp_rep_columns"], [147, 3, 1, "", "data"], [147, 3, 1, "", "decorrelate"], [147, 6, 1, "", "description"], [147, 3, 1, "", "encoding"], [147, 2, 1, "", "from_dict"], [147, 2, 1, "", "from_json"], [147, 6, 1, "", "is_continuous"], [147, 6, 1, "", "is_discrete"], [147, 2, 1, "", "is_in_range"], [147, 3, 1, "", "is_numerical"], [147, 3, 1, "", "metadata"], [147, 3, 1, "", "name"], [147, 2, 1, "", "summary"], [147, 2, 1, "", "to_dict"], [147, 2, 1, "", "to_json"], [147, 2, 1, "", "to_searchspace"], [147, 2, 1, "", "to_subspace"], [147, 2, 1, "", "transform"], [147, 6, 1, "", "unit"], [147, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[147, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[147, 4, 1, "", "source"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[147, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.to_json.params": [[147, 4, 1, "", "overwrite"], [147, 4, 1, "", "sink"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[147, 4, 1, "", "series"]], "baybe.parameters.enum": [[149, 1, 1, "", "CategoricalEncoding"], [150, 1, 1, "", "CustomEncoding"], [151, 1, 1, "", "ParameterEncoding"], [152, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[149, 3, 1, "", "INT"], [149, 3, 1, "", "OHE"], [149, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[150, 3, 1, "", "CUSTOM"], [150, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[152, 3, 1, "", "ATOMPAIR"], [152, 3, 1, "", "AUTOCORR"], [152, 3, 1, "", "AVALON"], [152, 3, 1, "", "BCUT2D"], [152, 3, 1, "", "E3FP"], [152, 3, 1, "", "ECFP"], [152, 3, 1, "", "ELECTROSHAPE"], [152, 3, 1, "", "ERG"], [152, 3, 1, "", "ESTATE"], [152, 3, 1, "", "FUNCTIONALGROUPS"], [152, 3, 1, "", "GETAWAY"], [152, 3, 1, "", "GHOSECRIPPEN"], [152, 3, 1, "", "KLEKOTAROTH"], [152, 3, 1, "", "LAGGNER"], [152, 3, 1, "", "LAYERED"], [152, 3, 1, "", "LINGO"], [152, 3, 1, "", "MACCS"], [152, 3, 1, "", "MAP"], [152, 3, 1, "", "MHFP"], [152, 3, 1, "", "MORDRED"], [152, 3, 1, "", "MORGAN_FP"], [152, 3, 1, "", "MORSE"], [152, 3, 1, "", "MQNS"], [152, 3, 1, "", "PATTERN"], [152, 3, 1, "", "PHARMACOPHORE"], [152, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [152, 3, 1, "", "PUBCHEM"], [152, 3, 1, "", "RDF"], [152, 3, 1, "", "RDKIT"], [152, 3, 1, "", "RDKIT2DDESCRIPTORS"], [152, 3, 1, "", "RDKITFINGERPRINT"], [152, 3, 1, "", "SECFP"], [152, 3, 1, "", "TOPOLOGICALTORSION"], [152, 3, 1, "", "USR"], [152, 3, 1, "", "USRCAT"], [152, 3, 1, "", "VSA"], [152, 3, 1, "", "WHIM"], [152, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[154, 1, 1, "", "NumericalContinuousParameter"], [155, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[154, 2, 1, "", "__init__"], [154, 3, 1, "", "bounds"], [154, 6, 1, "", "comp_rep_columns"], [154, 6, 1, "", "description"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 6, 1, "", "is_continuous"], [154, 6, 1, "", "is_discrete"], [154, 2, 1, "", "is_in_range"], [154, 3, 1, "", "is_numerical"], [154, 3, 1, "", "metadata"], [154, 3, 1, "", "name"], [154, 2, 1, "", "summary"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_json"], [154, 2, 1, "", "to_searchspace"], [154, 2, 1, "", "to_subspace"], [154, 6, 1, "", "unit"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[154, 4, 1, "", "source"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[154, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalContinuousParameter.to_json.params": [[154, 4, 1, "", "overwrite"], [154, 4, 1, "", "sink"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[155, 2, 1, "", "__init__"], [155, 6, 1, "", "active_values"], [155, 6, 1, "", "comp_df"], [155, 6, 1, "", "comp_rep_columns"], [155, 6, 1, "", "description"], [155, 3, 1, "", "encoding"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 6, 1, "", "is_continuous"], [155, 6, 1, "", "is_discrete"], [155, 2, 1, "", "is_in_range"], [155, 3, 1, "", "is_numerical"], [155, 3, 1, "", "metadata"], [155, 3, 1, "", "name"], [155, 2, 1, "", "summary"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_json"], [155, 2, 1, "", "to_searchspace"], [155, 2, 1, "", "to_subspace"], [155, 3, 1, "", "tolerance"], [155, 2, 1, "", "transform"], [155, 6, 1, "", "unit"], [155, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[155, 4, 1, "", "source"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[155, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.to_json.params": [[155, 4, 1, "", "overwrite"], [155, 4, 1, "", "sink"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[155, 4, 1, "", "series"]], "baybe.parameters.substance": [[157, 3, 1, "", "Smiles"], [158, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[158, 2, 1, "", "__init__"], [158, 6, 1, "", "active_values"], [158, 6, 1, "", "comp_df"], [158, 6, 1, "", "comp_rep_columns"], [158, 3, 1, "", "data"], [158, 3, 1, "", "decorrelate"], [158, 6, 1, "", "description"], [158, 3, 1, "", "encoding"], [158, 2, 1, "", "from_dict"], [158, 2, 1, "", "from_json"], [158, 6, 1, "", "is_continuous"], [158, 6, 1, "", "is_discrete"], [158, 2, 1, "", "is_in_range"], [158, 3, 1, "", "is_numerical"], [158, 3, 1, "", "kwargs_conformer"], [158, 3, 1, "", "kwargs_fingerprint"], [158, 3, 1, "", "metadata"], [158, 3, 1, "", "name"], [158, 2, 1, "", "summary"], [158, 2, 1, "", "to_dict"], [158, 2, 1, "", "to_json"], [158, 2, 1, "", "to_searchspace"], [158, 2, 1, "", "to_subspace"], [158, 2, 1, "", "transform"], [158, 6, 1, "", "unit"], [158, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[158, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[158, 4, 1, "", "source"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[158, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.to_json.params": [[158, 4, 1, "", "overwrite"], [158, 4, 1, "", "sink"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[158, 4, 1, "", "series"]], "baybe.parameters.utils": [[160, 5, 1, "", "activate_parameter"], [161, 5, 1, "", "get_parameters_from_dataframe"], [162, 5, 1, "", "is_inactive"], [163, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[160, 4, 1, "", "parameter"], [160, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[161, 4, 1, "", "df"], [161, 4, 1, "", "factory"], [161, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[162, 4, 1, "", "lower_threshold"], [162, 4, 1, "", "upper_threshold"], [162, 4, 1, "", "x"]], "baybe.parameters.validation": [[165, 5, 1, "", "validate_decorrelation"], [166, 5, 1, "", "validate_is_finite"], [167, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[169, 0, 0, "-", "base"], [171, 0, 0, "-", "basic"]], "baybe.priors.base": [[170, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_gpytorch"], [170, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[170, 4, 1, "", "source"]], "baybe.priors.base.Prior.to_json.params": [[170, 4, 1, "", "overwrite"], [170, 4, 1, "", "sink"]], "baybe.priors.basic": [[172, 1, 1, "", "BetaPrior"], [173, 1, 1, "", "GammaPrior"], [174, 1, 1, "", "HalfCauchyPrior"], [175, 1, 1, "", "HalfNormalPrior"], [176, 1, 1, "", "LogNormalPrior"], [177, 1, 1, "", "NormalPrior"], [178, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[172, 2, 1, "", "__init__"], [172, 3, 1, "", "alpha"], [172, 3, 1, "", "beta"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_gpytorch"], [172, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[172, 4, 1, "", "source"]], "baybe.priors.basic.BetaPrior.to_json.params": [[172, 4, 1, "", "overwrite"], [172, 4, 1, "", "sink"]], "baybe.priors.basic.GammaPrior": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "concentration"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 3, 1, "", "rate"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[173, 4, 1, "", "source"]], "baybe.priors.basic.GammaPrior.to_json.params": [[173, 4, 1, "", "overwrite"], [173, 4, 1, "", "sink"]], "baybe.priors.basic.HalfCauchyPrior": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "scale"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[174, 4, 1, "", "source"]], "baybe.priors.basic.HalfCauchyPrior.to_json.params": [[174, 4, 1, "", "overwrite"], [174, 4, 1, "", "sink"]], "baybe.priors.basic.HalfNormalPrior": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "from_json"], [175, 3, 1, "", "scale"], [175, 2, 1, "", "to_dict"], [175, 2, 1, "", "to_gpytorch"], [175, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[175, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[175, 4, 1, "", "source"]], "baybe.priors.basic.HalfNormalPrior.to_json.params": [[175, 4, 1, "", "overwrite"], [175, 4, 1, "", "sink"]], "baybe.priors.basic.LogNormalPrior": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "from_dict"], [176, 2, 1, "", "from_json"], [176, 3, 1, "", "loc"], [176, 3, 1, "", "scale"], [176, 2, 1, "", "to_dict"], [176, 2, 1, "", "to_gpytorch"], [176, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[176, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[176, 4, 1, "", "source"]], "baybe.priors.basic.LogNormalPrior.to_json.params": [[176, 4, 1, "", "overwrite"], [176, 4, 1, "", "sink"]], "baybe.priors.basic.NormalPrior": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "from_dict"], [177, 2, 1, "", "from_json"], [177, 3, 1, "", "loc"], [177, 3, 1, "", "scale"], [177, 2, 1, "", "to_dict"], [177, 2, 1, "", "to_gpytorch"], [177, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[177, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[177, 4, 1, "", "source"]], "baybe.priors.basic.NormalPrior.to_json.params": [[177, 4, 1, "", "overwrite"], [177, 4, 1, "", "sink"]], "baybe.priors.basic.SmoothedBoxPrior": [[178, 2, 1, "", "__init__"], [178, 3, 1, "", "a"], [178, 3, 1, "", "b"], [178, 2, 1, "", "from_dict"], [178, 2, 1, "", "from_json"], [178, 3, 1, "", "sigma"], [178, 2, 1, "", "to_dict"], [178, 2, 1, "", "to_gpytorch"], [178, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[178, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[178, 4, 1, "", "source"]], "baybe.priors.basic.SmoothedBoxPrior.to_json.params": [[178, 4, 1, "", "overwrite"], [178, 4, 1, "", "sink"]], "baybe.recommenders": [[180, 0, 0, "-", "base"], [182, 0, 0, "-", "meta"], [190, 0, 0, "-", "naive"], [192, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[181, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[181, 4, 1, "", "batch_size"], [181, 4, 1, "", "measurements"], [181, 4, 1, "", "objective"], [181, 4, 1, "", "pending_experiments"], [181, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[183, 0, 0, "-", "base"], [185, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[184, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "get_current_recommender"], [184, 2, 1, "", "get_next_recommender"], [184, 2, 1, "", "get_non_meta_recommender"], [184, 6, 1, "", "is_stateful"], [184, 2, 1, "", "recommend"], [184, 2, 1, "", "select_recommender"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[184, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[184, 4, 1, "", "source"]], "baybe.recommenders.meta.base.MetaRecommender.to_json.params": [[184, 4, 1, "", "overwrite"], [184, 4, 1, "", "sink"]], "baybe.recommenders.meta.sequential": [[186, 1, 1, "", "BaseSequentialMetaRecommender"], [187, 1, 1, "", "SequentialMetaRecommender"], [188, 1, 1, "", "StreamingSequentialMetaRecommender"], [189, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "from_dict"], [186, 2, 1, "", "from_json"], [186, 2, 1, "", "get_current_recommender"], [186, 2, 1, "", "get_next_recommender"], [186, 2, 1, "", "get_non_meta_recommender"], [186, 6, 1, "", "is_stateful"], [186, 2, 1, "", "recommend"], [186, 2, 1, "", "select_recommender"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[186, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[186, 4, 1, "", "source"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json.params": [[186, 4, 1, "", "overwrite"], [186, 4, 1, "", "sink"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "from_dict"], [187, 2, 1, "", "from_json"], [187, 2, 1, "", "get_current_recommender"], [187, 2, 1, "", "get_next_recommender"], [187, 2, 1, "", "get_non_meta_recommender"], [187, 6, 1, "", "is_stateful"], [187, 3, 1, "", "mode"], [187, 2, 1, "", "recommend"], [187, 3, 1, "", "recommenders"], [187, 2, 1, "", "select_recommender"], [187, 2, 1, "", "to_dict"], [187, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[187, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[187, 4, 1, "", "source"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json.params": [[187, 4, 1, "", "overwrite"], [187, 4, 1, "", "sink"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[188, 2, 1, "", "__init__"], [188, 2, 1, "", "from_dict"], [188, 2, 1, "", "from_json"], [188, 2, 1, "", "get_current_recommender"], [188, 2, 1, "", "get_next_recommender"], [188, 2, 1, "", "get_non_meta_recommender"], [188, 6, 1, "", "is_stateful"], [188, 2, 1, "", "recommend"], [188, 3, 1, "", "recommenders"], [188, 2, 1, "", "select_recommender"], [188, 2, 1, "", "to_dict"], [188, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[188, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[188, 4, 1, "", "source"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json.params": [[188, 4, 1, "", "overwrite"], [188, 4, 1, "", "sink"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "from_dict"], [189, 2, 1, "", "from_json"], [189, 2, 1, "", "get_current_recommender"], [189, 2, 1, "", "get_next_recommender"], [189, 2, 1, "", "get_non_meta_recommender"], [189, 3, 1, "", "initial_recommender"], [189, 6, 1, "", "is_stateful"], [189, 2, 1, "", "recommend"], [189, 3, 1, "", "recommender"], [189, 3, 1, "", "remain_switched"], [189, 2, 1, "", "select_recommender"], [189, 3, 1, "", "switch_after"], [189, 2, 1, "", "to_dict"], [189, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[189, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[189, 4, 1, "", "source"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json.params": [[189, 4, 1, "", "overwrite"], [189, 4, 1, "", "sink"]], "baybe.recommenders.naive": [[191, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[191, 2, 1, "", "__init__"], [191, 6, 1, "", "allow_recommending_already_measured"], [191, 6, 1, "", "allow_recommending_pending_experiments"], [191, 6, 1, "", "allow_repeated_recommendations"], [191, 3, 1, "", "compatibility"], [191, 3, 1, "", "cont_recommender"], [191, 3, 1, "", "disc_recommender"], [191, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[191, 4, 1, "", "batch_size"], [191, 4, 1, "", "measurements"], [191, 4, 1, "", "objective"], [191, 4, 1, "", "pending_experiments"], [191, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[193, 0, 0, "-", "base"], [195, 0, 0, "-", "bayesian"], [200, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[194, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[194, 2, 1, "", "__init__"], [194, 6, 1, "", "allow_recommending_already_measured"], [194, 6, 1, "", "allow_recommending_pending_experiments"], [194, 6, 1, "", "allow_repeated_recommendations"], [194, 3, 1, "", "compatibility"], [194, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[194, 4, 1, "", "batch_size"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[196, 0, 0, "-", "base"], [198, 0, 0, "-", "botorch"]], "baybe.recommenders.pure.bayesian.base": [[197, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[197, 2, 1, "", "__init__"], [197, 3, 1, "", "acquisition_function"], [197, 2, 1, "", "acquisition_values"], [197, 6, 1, "", "allow_recommending_already_measured"], [197, 6, 1, "", "allow_recommending_pending_experiments"], [197, 6, 1, "", "allow_repeated_recommendations"], [197, 3, 1, "", "compatibility"], [197, 2, 1, "", "get_acquisition_function"], [197, 2, 1, "", "get_surrogate"], [197, 2, 1, "", "joint_acquisition_value"], [197, 2, 1, "", "recommend"], [197, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values.params": [[197, 4, 1, "", "acquisition_function"], [197, 4, 1, "", "candidates"], [197, 4, 1, "", "measurements"], [197, 4, 1, "", "objective"], [197, 4, 1, "", "pending_experiments"], [197, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[197, 4, 1, "", "batch_size"], [197, 4, 1, "", "measurements"], [197, 4, 1, "", "objective"], [197, 4, 1, "", "pending_experiments"], [197, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[199, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[199, 2, 1, "", "__init__"], [199, 3, 1, "", "acquisition_function"], [199, 2, 1, "", "acquisition_values"], [199, 6, 1, "", "allow_recommending_already_measured"], [199, 6, 1, "", "allow_recommending_pending_experiments"], [199, 6, 1, "", "allow_repeated_recommendations"], [199, 3, 1, "", "compatibility"], [199, 2, 1, "", "get_acquisition_function"], [199, 2, 1, "", "get_surrogate"], [199, 3, 1, "", "hybrid_sampler"], [199, 2, 1, "", "joint_acquisition_value"], [199, 3, 1, "", "max_n_subspaces"], [199, 3, 1, "", "n_raw_samples"], [199, 3, 1, "", "n_restarts"], [199, 2, 1, "", "recommend"], [199, 3, 1, "", "sampling_percentage"], [199, 3, 1, "", "sequential_continuous"], [199, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values.params": [[199, 4, 1, "", "acquisition_function"], [199, 4, 1, "", "candidates"], [199, 4, 1, "", "measurements"], [199, 4, 1, "", "objective"], [199, 4, 1, "", "pending_experiments"], [199, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[199, 4, 1, "", "batch_size"], [199, 4, 1, "", "measurements"], [199, 4, 1, "", "objective"], [199, 4, 1, "", "pending_experiments"], [199, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive": [[201, 0, 0, "-", "base"], [203, 0, 0, "-", "clustering"], [208, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[202, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[202, 2, 1, "", "__init__"], [202, 6, 1, "", "allow_recommending_already_measured"], [202, 6, 1, "", "allow_recommending_pending_experiments"], [202, 6, 1, "", "allow_repeated_recommendations"], [202, 3, 1, "", "compatibility"], [202, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[202, 4, 1, "", "batch_size"], [202, 4, 1, "", "measurements"], [202, 4, 1, "", "objective"], [202, 4, 1, "", "pending_experiments"], [202, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[204, 1, 1, "", "GaussianMixtureClusteringRecommender"], [205, 1, 1, "", "KMeansClusteringRecommender"], [206, 1, 1, "", "PAMClusteringRecommender"], [207, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[204, 2, 1, "", "__init__"], [204, 6, 1, "", "allow_recommending_already_measured"], [204, 6, 1, "", "allow_recommending_pending_experiments"], [204, 6, 1, "", "allow_repeated_recommendations"], [204, 3, 1, "", "compatibility"], [204, 3, 1, "", "model_cluster_num_parameter_name"], [204, 3, 1, "", "model_params"], [204, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[204, 4, 1, "", "batch_size"], [204, 4, 1, "", "measurements"], [204, 4, 1, "", "objective"], [204, 4, 1, "", "pending_experiments"], [204, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[205, 2, 1, "", "__init__"], [205, 6, 1, "", "allow_recommending_already_measured"], [205, 6, 1, "", "allow_recommending_pending_experiments"], [205, 6, 1, "", "allow_repeated_recommendations"], [205, 3, 1, "", "compatibility"], [205, 3, 1, "", "model_cluster_num_parameter_name"], [205, 3, 1, "", "model_params"], [205, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[205, 4, 1, "", "batch_size"], [205, 4, 1, "", "measurements"], [205, 4, 1, "", "objective"], [205, 4, 1, "", "pending_experiments"], [205, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[206, 2, 1, "", "__init__"], [206, 6, 1, "", "allow_recommending_already_measured"], [206, 6, 1, "", "allow_recommending_pending_experiments"], [206, 6, 1, "", "allow_repeated_recommendations"], [206, 3, 1, "", "compatibility"], [206, 3, 1, "", "model_cluster_num_parameter_name"], [206, 3, 1, "", "model_params"], [206, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[206, 4, 1, "", "batch_size"], [206, 4, 1, "", "measurements"], [206, 4, 1, "", "objective"], [206, 4, 1, "", "pending_experiments"], [206, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[207, 2, 1, "", "__init__"], [207, 6, 1, "", "allow_recommending_already_measured"], [207, 6, 1, "", "allow_recommending_pending_experiments"], [207, 6, 1, "", "allow_repeated_recommendations"], [207, 3, 1, "", "compatibility"], [207, 3, 1, "", "model_cluster_num_parameter_name"], [207, 3, 1, "", "model_params"], [207, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[207, 4, 1, "", "batch_size"], [207, 4, 1, "", "measurements"], [207, 4, 1, "", "objective"], [207, 4, 1, "", "pending_experiments"], [207, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[209, 1, 1, "", "FPSInitialization"], [210, 1, 1, "", "FPSRecommender"], [211, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization": [[209, 3, 1, "", "FARTHEST"], [209, 3, 1, "", "RANDOM"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[210, 2, 1, "", "__init__"], [210, 6, 1, "", "allow_recommending_already_measured"], [210, 6, 1, "", "allow_recommending_pending_experiments"], [210, 6, 1, "", "allow_repeated_recommendations"], [210, 3, 1, "", "compatibility"], [210, 3, 1, "", "initialization"], [210, 3, 1, "", "random_tie_break"], [210, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[210, 4, 1, "", "batch_size"], [210, 4, 1, "", "measurements"], [210, 4, 1, "", "objective"], [210, 4, 1, "", "pending_experiments"], [210, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[211, 2, 1, "", "__init__"], [211, 6, 1, "", "allow_recommending_already_measured"], [211, 6, 1, "", "allow_recommending_pending_experiments"], [211, 6, 1, "", "allow_repeated_recommendations"], [211, 3, 1, "", "compatibility"], [211, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[211, 4, 1, "", "batch_size"], [211, 4, 1, "", "measurements"], [211, 4, 1, "", "objective"], [211, 4, 1, "", "pending_experiments"], [211, 4, 1, "", "searchspace"]], "baybe.searchspace": [[213, 0, 0, "-", "continuous"], [215, 0, 0, "-", "core"], [220, 0, 0, "-", "discrete"], [226, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[214, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[214, 2, 1, "", "__init__"], [214, 6, 1, "", "comp_rep_bounds"], [214, 6, 1, "", "comp_rep_columns"], [214, 6, 1, "", "constraints_cardinality"], [214, 3, 1, "", "constraints_lin_eq"], [214, 3, 1, "", "constraints_lin_ineq"], [214, 3, 1, "", "constraints_nonlin"], [214, 2, 1, "", "empty"], [214, 2, 1, "", "from_bounds"], [214, 2, 1, "", "from_dataframe"], [214, 2, 1, "", "from_dict"], [214, 2, 1, "", "from_json"], [214, 2, 1, "", "from_parameter"], [214, 2, 1, "", "from_product"], [214, 6, 1, "", "full_factorial"], [214, 2, 1, "", "get_parameters_by_name"], [214, 2, 1, "", "inactive_parameter_combinations"], [214, 6, 1, "", "is_empty"], [214, 6, 1, "", "n_inactive_parameter_combinations"], [214, 6, 1, "", "parameter_names"], [214, 6, 1, "", "parameter_names_in_cardinality_constraints"], [214, 3, 1, "", "parameters"], [214, 2, 1, "", "sample_from_full_factorial"], [214, 2, 1, "", "sample_uniform"], [214, 6, 1, "", "scaling_bounds"], [214, 2, 1, "", "to_dict"], [214, 2, 1, "", "to_json"], [214, 2, 1, "", "to_searchspace"], [214, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[214, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[214, 4, 1, "", "df"], [214, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[214, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[214, 4, 1, "", "source"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[214, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[214, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[214, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[214, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.to_json.params": [[214, 4, 1, "", "overwrite"], [214, 4, 1, "", "sink"]], "baybe.searchspace.core": [[216, 1, 1, "", "SearchSpace"], [217, 1, 1, "", "SearchSpaceType"], [218, 5, 1, "", "to_searchspace"], [219, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[216, 2, 1, "", "__init__"], [216, 6, 1, "", "comp_rep_bounds"], [216, 6, 1, "", "comp_rep_columns"], [216, 6, 1, "", "constraints"], [216, 6, 1, "", "constraints_augmentable"], [216, 3, 1, "", "continuous"], [216, 3, 1, "", "discrete"], [216, 2, 1, "", "estimate_product_space_size"], [216, 2, 1, "", "from_dataframe"], [216, 2, 1, "", "from_dict"], [216, 2, 1, "", "from_json"], [216, 2, 1, "", "from_parameter"], [216, 2, 1, "", "from_product"], [216, 2, 1, "", "get_comp_rep_parameter_indices"], [216, 2, 1, "", "get_parameters_by_name"], [216, 6, 1, "", "n_tasks"], [216, 6, 1, "", "parameter_names"], [216, 6, 1, "", "parameters"], [216, 6, 1, "", "scaling_bounds"], [216, 6, 1, "", "task_idx"], [216, 2, 1, "", "to_dict"], [216, 2, 1, "", "to_json"], [216, 2, 1, "", "transform"], [216, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[216, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[216, 4, 1, "", "df"], [216, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[216, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[216, 4, 1, "", "source"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[216, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[216, 4, 1, "", "constraints"], [216, 4, 1, "", "empty_encoding"], [216, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[216, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[216, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.to_json.params": [[216, 4, 1, "", "overwrite"], [216, 4, 1, "", "sink"]], "baybe.searchspace.core.SearchSpace.transform.params": [[216, 4, 1, "", "allow_extra"], [216, 4, 1, "", "allow_missing"], [216, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[217, 3, 1, "", "CONTINUOUS"], [217, 3, 1, "", "DISCRETE"], [217, 3, 1, "", "EITHER"], [217, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[221, 1, 1, "", "MemorySize"], [222, 1, 1, "", "SubspaceDiscrete"], [223, 5, 1, "", "parameter_cartesian_prod_pandas"], [224, 5, 1, "", "parameter_cartesian_prod_polars"], [225, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[221, 2, 1, "", "__init__"], [221, 3, 1, "", "comp_rep_bytes"], [221, 6, 1, "", "comp_rep_human_readable"], [221, 3, 1, "", "comp_rep_shape"], [221, 3, 1, "", "exp_rep_bytes"], [221, 6, 1, "", "exp_rep_human_readable"], [221, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[222, 2, 1, "", "__init__"], [222, 3, 1, "", "comp_rep"], [222, 6, 1, "", "comp_rep_bounds"], [222, 6, 1, "", "comp_rep_columns"], [222, 3, 1, "", "constraints"], [222, 2, 1, "", "empty"], [222, 3, 1, "", "empty_encoding"], [222, 2, 1, "", "estimate_product_space_size"], [222, 3, 1, "", "exp_rep"], [222, 2, 1, "", "from_dataframe"], [222, 2, 1, "", "from_dict"], [222, 2, 1, "", "from_json"], [222, 2, 1, "", "from_parameter"], [222, 2, 1, "", "from_product"], [222, 2, 1, "", "from_simplex"], [222, 2, 1, "", "get_candidates"], [222, 2, 1, "", "get_parameters_by_name"], [222, 6, 1, "", "is_empty"], [222, 6, 1, "", "metadata"], [222, 6, 1, "", "parameter_names"], [222, 3, 1, "", "parameters"], [222, 6, 1, "", "scaling_bounds"], [222, 2, 1, "", "to_dict"], [222, 2, 1, "", "to_json"], [222, 2, 1, "", "to_searchspace"], [222, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[222, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[222, 4, 1, "", "df"], [222, 4, 1, "", "empty_encoding"], [222, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[222, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[222, 4, 1, "", "source"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[222, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[222, 4, 1, "", "boundary_only"], [222, 4, 1, "", "constraints"], [222, 4, 1, "", "max_nonzero"], [222, 4, 1, "", "max_sum"], [222, 4, 1, "", "min_nonzero"], [222, 4, 1, "", "product_parameters"], [222, 4, 1, "", "simplex_parameters"], [222, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[222, 4, 1, "", "names"]], "baybe.searchspace.discrete.SubspaceDiscrete.to_json.params": [[222, 4, 1, "", "overwrite"], [222, 4, 1, "", "sink"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[223, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[224, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[227, 5, 1, "", "get_transform_parameters"], [228, 5, 1, "", "validate_parameter_names"], [229, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[231, 0, 0, "-", "core"], [239, 0, 0, "-", "mixin"], [241, 0, 0, "-", "utils"]], "baybe.serialization.core": [[232, 5, 1, "", "add_type"], [233, 5, 1, "", "block_deserialization_hook"], [234, 5, 1, "", "block_serialization_hook"], [235, 8, 1, "", "converter"], [236, 5, 1, "", "make_base_structure_hook"], [237, 5, 1, "", "select_constructor_hook"], [238, 5, 1, "", "unstructure_with_type"]], "baybe.serialization.mixin": [[240, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[240, 2, 1, "", "from_dict"], [240, 2, 1, "", "from_json"], [240, 2, 1, "", "to_dict"], [240, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[240, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[240, 4, 1, "", "source"]], "baybe.serialization.mixin.SerialMixin.to_json.params": [[240, 4, 1, "", "overwrite"], [240, 4, 1, "", "sink"]], "baybe.serialization.utils": [[242, 5, 1, "", "deserialize_dataframe"], [243, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[245, 0, 0, "-", "core"], [247, 0, 0, "-", "lookup"], [249, 0, 0, "-", "scenarios"], [251, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[246, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[246, 4, 1, "", "batch_size"], [246, 4, 1, "", "campaign"], [246, 4, 1, "", "impute_mode"], [246, 4, 1, "", "initial_data"], [246, 4, 1, "", "lookup"], [246, 4, 1, "", "n_doe_iterations"], [246, 4, 1, "", "noise_percent"], [246, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[248, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[248, 4, 1, "", "impute_mode"], [248, 4, 1, "", "lookup"], [248, 4, 1, "", "queries"], [248, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[250, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[250, 4, 1, "", "batch_size"], [250, 4, 1, "", "groupby"], [250, 4, 1, "", "impute_mode"], [250, 4, 1, "", "initial_data"], [250, 4, 1, "", "lookup"], [250, 4, 1, "", "n_doe_iterations"], [250, 4, 1, "", "n_mc_iterations"], [250, 4, 1, "", "noise_percent"], [250, 4, 1, "", "parallel_runs"], [250, 4, 1, "", "random_seed"], [250, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[252, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[252, 4, 1, "", "batch_size"], [252, 4, 1, "", "campaign"], [252, 4, 1, "", "groupby"], [252, 4, 1, "", "lookup"], [252, 4, 1, "", "n_doe_iterations"], [252, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[254, 0, 0, "-", "bandit"], [256, 0, 0, "-", "base"], [261, 0, 0, "-", "composite"], [263, 0, 0, "-", "custom"], [266, 0, 0, "-", "gaussian_process"], [281, 0, 0, "-", "linear"], [283, 0, 0, "-", "naive"], [285, 0, 0, "-", "ngboost"], [287, 0, 0, "-", "random_forest"], [289, 0, 0, "-", "utils"], [293, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[255, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[255, 2, 1, "", "__init__"], [255, 2, 1, "", "fit"], [255, 2, 1, "", "from_dict"], [255, 2, 1, "", "from_json"], [255, 2, 1, "", "posterior"], [255, 2, 1, "", "posterior_means"], [255, 2, 1, "", "posterior_modes"], [255, 2, 1, "", "posterior_stats"], [255, 3, 1, "", "prior"], [255, 2, 1, "", "replicate"], [255, 3, 1, "", "supports_multi_output"], [255, 3, 1, "", "supports_transfer_learning"], [255, 2, 1, "", "to_botorch"], [255, 2, 1, "", "to_dict"], [255, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[255, 4, 1, "", "measurements"], [255, 4, 1, "", "objective"], [255, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[255, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[255, 4, 1, "", "source"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[255, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[255, 4, 1, "", "candidates"], [255, 4, 1, "", "stats"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json.params": [[255, 4, 1, "", "overwrite"], [255, 4, 1, "", "sink"]], "baybe.surrogates.base": [[257, 1, 1, "", "IndependentGaussianSurrogate"], [258, 8, 1, "", "PosteriorStatistic"], [259, 1, 1, "", "Surrogate"], [260, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[257, 2, 1, "", "__init__"], [257, 2, 1, "", "fit"], [257, 2, 1, "", "from_dict"], [257, 2, 1, "", "from_json"], [257, 2, 1, "", "posterior"], [257, 2, 1, "", "posterior_stats"], [257, 2, 1, "", "replicate"], [257, 3, 1, "", "supports_multi_output"], [257, 3, 1, "", "supports_transfer_learning"], [257, 2, 1, "", "to_botorch"], [257, 2, 1, "", "to_dict"], [257, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[257, 4, 1, "", "measurements"], [257, 4, 1, "", "objective"], [257, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[257, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[257, 4, 1, "", "source"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[257, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[257, 4, 1, "", "candidates"], [257, 4, 1, "", "stats"]], "baybe.surrogates.base.IndependentGaussianSurrogate.to_json.params": [[257, 4, 1, "", "overwrite"], [257, 4, 1, "", "sink"]], "baybe.surrogates.base.Surrogate": [[259, 2, 1, "", "__init__"], [259, 2, 1, "", "fit"], [259, 2, 1, "", "from_dict"], [259, 2, 1, "", "from_json"], [259, 2, 1, "", "posterior"], [259, 2, 1, "", "posterior_stats"], [259, 2, 1, "", "replicate"], [259, 3, 1, "", "supports_multi_output"], [259, 3, 1, "", "supports_transfer_learning"], [259, 2, 1, "", "to_botorch"], [259, 2, 1, "", "to_dict"], [259, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[259, 4, 1, "", "measurements"], [259, 4, 1, "", "objective"], [259, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[259, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[259, 4, 1, "", "source"]], "baybe.surrogates.base.Surrogate.posterior.params": [[259, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[259, 4, 1, "", "candidates"], [259, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate.to_json.params": [[259, 4, 1, "", "overwrite"], [259, 4, 1, "", "sink"]], "baybe.surrogates.base.SurrogateProtocol": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "fit"], [260, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[262, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "fit"], [262, 2, 1, "", "from_dict"], [262, 2, 1, "", "from_json"], [262, 2, 1, "", "from_replication"], [262, 2, 1, "", "posterior"], [262, 2, 1, "", "posterior_stats"], [262, 3, 1, "", "surrogates"], [262, 2, 1, "", "to_botorch"], [262, 2, 1, "", "to_dict"], [262, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[262, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[262, 4, 1, "", "source"]], "baybe.surrogates.composite.CompositeSurrogate.to_json.params": [[262, 4, 1, "", "overwrite"], [262, 4, 1, "", "sink"]], "baybe.surrogates.custom": [[264, 1, 1, "", "CustomONNXSurrogate"], [265, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "fit"], [264, 2, 1, "", "from_dict"], [264, 2, 1, "", "from_json"], [264, 3, 1, "", "onnx_input_name"], [264, 3, 1, "", "onnx_str"], [264, 2, 1, "", "posterior"], [264, 2, 1, "", "posterior_stats"], [264, 2, 1, "", "replicate"], [264, 3, 1, "", "supports_multi_output"], [264, 3, 1, "", "supports_transfer_learning"], [264, 2, 1, "", "to_botorch"], [264, 2, 1, "", "to_dict"], [264, 2, 1, "", "to_json"], [264, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[264, 4, 1, "", "measurements"], [264, 4, 1, "", "objective"], [264, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[264, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[264, 4, 1, "", "source"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[264, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[264, 4, 1, "", "candidates"], [264, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.to_json.params": [[264, 4, 1, "", "overwrite"], [264, 4, 1, "", "sink"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[264, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[267, 0, 0, "-", "core"], [269, 0, 0, "-", "kernel_factory"], [273, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[268, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[268, 2, 1, "", "__init__"], [268, 2, 1, "", "fit"], [268, 2, 1, "", "from_dict"], [268, 2, 1, "", "from_json"], [268, 2, 1, "", "from_preset"], [268, 3, 1, "", "kernel_factory"], [268, 2, 1, "", "posterior"], [268, 2, 1, "", "posterior_stats"], [268, 2, 1, "", "replicate"], [268, 3, 1, "", "supports_multi_output"], [268, 3, 1, "", "supports_transfer_learning"], [268, 2, 1, "", "to_botorch"], [268, 2, 1, "", "to_dict"], [268, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[268, 4, 1, "", "measurements"], [268, 4, 1, "", "objective"], [268, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[268, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[268, 4, 1, "", "source"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[268, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[268, 4, 1, "", "candidates"], [268, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json.params": [[268, 4, 1, "", "overwrite"], [268, 4, 1, "", "sink"]], "baybe.surrogates.gaussian_process.kernel_factory": [[270, 1, 1, "", "KernelFactory"], [271, 1, 1, "", "PlainKernelFactory"], [272, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[270, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[271, 2, 1, "", "__init__"], [271, 2, 1, "", "from_dict"], [271, 2, 1, "", "from_json"], [271, 3, 1, "", "kernel"], [271, 2, 1, "", "to_dict"], [271, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[271, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[271, 4, 1, "", "source"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json.params": [[271, 4, 1, "", "overwrite"], [271, 4, 1, "", "sink"]], "baybe.surrogates.gaussian_process.presets": [[274, 0, 0, "-", "core"], [277, 0, 0, "-", "default"], [279, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[275, 1, 1, "", "GaussianProcessPreset"], [276, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[275, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[278, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[278, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[280, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[280, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[282, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[282, 2, 1, "", "__init__"], [282, 2, 1, "", "fit"], [282, 2, 1, "", "from_dict"], [282, 2, 1, "", "from_json"], [282, 3, 1, "", "model_params"], [282, 2, 1, "", "posterior"], [282, 2, 1, "", "posterior_stats"], [282, 2, 1, "", "replicate"], [282, 3, 1, "", "supports_multi_output"], [282, 3, 1, "", "supports_transfer_learning"], [282, 2, 1, "", "to_botorch"], [282, 2, 1, "", "to_dict"], [282, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[282, 4, 1, "", "measurements"], [282, 4, 1, "", "objective"], [282, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[282, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[282, 4, 1, "", "source"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[282, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[282, 4, 1, "", "candidates"], [282, 4, 1, "", "stats"]], "baybe.surrogates.linear.BayesianLinearSurrogate.to_json.params": [[282, 4, 1, "", "overwrite"], [282, 4, 1, "", "sink"]], "baybe.surrogates.naive": [[284, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[284, 2, 1, "", "__init__"], [284, 2, 1, "", "fit"], [284, 2, 1, "", "from_dict"], [284, 2, 1, "", "from_json"], [284, 2, 1, "", "posterior"], [284, 2, 1, "", "posterior_stats"], [284, 2, 1, "", "replicate"], [284, 3, 1, "", "supports_multi_output"], [284, 3, 1, "", "supports_transfer_learning"], [284, 2, 1, "", "to_botorch"], [284, 2, 1, "", "to_dict"], [284, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[284, 4, 1, "", "measurements"], [284, 4, 1, "", "objective"], [284, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[284, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[284, 4, 1, "", "source"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[284, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[284, 4, 1, "", "candidates"], [284, 4, 1, "", "stats"]], "baybe.surrogates.naive.MeanPredictionSurrogate.to_json.params": [[284, 4, 1, "", "overwrite"], [284, 4, 1, "", "sink"]], "baybe.surrogates.ngboost": [[286, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[286, 2, 1, "", "__init__"], [286, 2, 1, "", "fit"], [286, 2, 1, "", "from_dict"], [286, 2, 1, "", "from_json"], [286, 3, 1, "", "model_params"], [286, 2, 1, "", "posterior"], [286, 2, 1, "", "posterior_stats"], [286, 2, 1, "", "replicate"], [286, 3, 1, "", "supports_multi_output"], [286, 3, 1, "", "supports_transfer_learning"], [286, 2, 1, "", "to_botorch"], [286, 2, 1, "", "to_dict"], [286, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[286, 4, 1, "", "measurements"], [286, 4, 1, "", "objective"], [286, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[286, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[286, 4, 1, "", "source"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[286, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[286, 4, 1, "", "candidates"], [286, 4, 1, "", "stats"]], "baybe.surrogates.ngboost.NGBoostSurrogate.to_json.params": [[286, 4, 1, "", "overwrite"], [286, 4, 1, "", "sink"]], "baybe.surrogates.random_forest": [[288, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[288, 2, 1, "", "__init__"], [288, 2, 1, "", "fit"], [288, 2, 1, "", "from_dict"], [288, 2, 1, "", "from_json"], [288, 3, 1, "", "model_params"], [288, 2, 1, "", "posterior"], [288, 2, 1, "", "posterior_stats"], [288, 2, 1, "", "replicate"], [288, 3, 1, "", "supports_multi_output"], [288, 3, 1, "", "supports_transfer_learning"], [288, 2, 1, "", "to_botorch"], [288, 2, 1, "", "to_dict"], [288, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[288, 4, 1, "", "measurements"], [288, 4, 1, "", "objective"], [288, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[288, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[288, 4, 1, "", "source"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[288, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[288, 4, 1, "", "candidates"], [288, 4, 1, "", "stats"]], "baybe.surrogates.random_forest.RandomForestSurrogate.to_json.params": [[288, 4, 1, "", "overwrite"], [288, 4, 1, "", "sink"]], "baybe.surrogates.utils": [[290, 5, 1, "", "batchify_ensemble_predictor"], [291, 5, 1, "", "batchify_mean_var_prediction"], [292, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[290, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[292, 4, 1, "", "cls"], [292, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[294, 5, 1, "", "make_dict_validator"], [295, 8, 1, "", "type_validation_converter"], [296, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.make_dict_validator.params": [[294, 4, 1, "", "specification"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[296, 4, 1, "", "model_cls"]], "baybe.targets": [[298, 0, 0, "-", "base"], [300, 0, 0, "-", "binary"], [303, 0, 0, "-", "botorch"], [305, 0, 0, "-", "enum"], [306, 0, 0, "-", "numerical"], [308, 0, 0, "-", "transforms"], [309, 0, 0, "-", "utils"]], "baybe.targets.base": [[299, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[299, 2, 1, "", "__init__"], [299, 6, 1, "", "description"], [299, 2, 1, "", "from_dict"], [299, 2, 1, "", "from_json"], [299, 3, 1, "", "metadata"], [299, 3, 1, "", "name"], [299, 2, 1, "", "summary"], [299, 2, 1, "", "to_dict"], [299, 2, 1, "", "to_json"], [299, 2, 1, "", "to_objective"], [299, 2, 1, "", "transform"], [299, 6, 1, "", "unit"]], "baybe.targets.base.Target.from_dict.params": [[299, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[299, 4, 1, "", "source"]], "baybe.targets.base.Target.to_json.params": [[299, 4, 1, "", "overwrite"], [299, 4, 1, "", "sink"]], "baybe.targets.base.Target.transform.params": [[299, 4, 1, "", "series"]], "baybe.targets.binary": [[301, 1, 1, "", "BinaryTarget"], [302, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[301, 2, 1, "", "__init__"], [301, 6, 1, "", "description"], [301, 3, 1, "", "failure_value"], [301, 2, 1, "", "from_dict"], [301, 2, 1, "", "from_json"], [301, 3, 1, "", "metadata"], [301, 3, 1, "", "name"], [301, 3, 1, "", "success_value"], [301, 2, 1, "", "summary"], [301, 2, 1, "", "to_dict"], [301, 2, 1, "", "to_json"], [301, 2, 1, "", "to_objective"], [301, 2, 1, "", "transform"], [301, 6, 1, "", "unit"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[301, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[301, 4, 1, "", "source"]], "baybe.targets.binary.BinaryTarget.to_json.params": [[301, 4, 1, "", "overwrite"], [301, 4, 1, "", "sink"]], "baybe.targets.binary.BinaryTarget.transform.params": [[301, 4, 1, "", "series"]], "baybe.targets.botorch": [[304, 1, 1, "", "AffinePosteriorTransform"]], "baybe.targets.botorch.AffinePosteriorTransform": [[304, 2, 1, "", "__init__"], [304, 2, 1, "", "add_module"], [304, 2, 1, "", "apply"], [304, 2, 1, "", "bfloat16"], [304, 2, 1, "", "buffers"], [304, 2, 1, "", "children"], [304, 2, 1, "", "compile"], [304, 2, 1, "", "cpu"], [304, 2, 1, "", "cuda"], [304, 2, 1, "", "double"], [304, 2, 1, "", "eval"], [304, 2, 1, "", "evaluate"], [304, 2, 1, "", "extra_repr"], [304, 2, 1, "", "float"], [304, 2, 1, "", "forward"], [304, 2, 1, "", "get_buffer"], [304, 2, 1, "", "get_extra_state"], [304, 2, 1, "", "get_parameter"], [304, 2, 1, "", "get_submodule"], [304, 2, 1, "", "half"], [304, 2, 1, "", "ipu"], [304, 2, 1, "", "modules"], [304, 2, 1, "", "mtia"], [304, 2, 1, "", "named_buffers"], [304, 2, 1, "", "named_children"], [304, 2, 1, "", "named_modules"], [304, 2, 1, "", "named_parameters"], [304, 2, 1, "", "parameters"], [304, 2, 1, "", "register_backward_hook"], [304, 2, 1, "", "register_buffer"], [304, 2, 1, "", "register_forward_hook"], [304, 2, 1, "", "register_forward_pre_hook"], [304, 2, 1, "", "register_full_backward_hook"], [304, 2, 1, "", "register_full_backward_pre_hook"], [304, 2, 1, "", "register_load_state_dict_post_hook"], [304, 2, 1, "", "register_load_state_dict_pre_hook"], [304, 2, 1, "", "register_module"], [304, 2, 1, "", "register_parameter"], [304, 2, 1, "", "register_state_dict_post_hook"], [304, 2, 1, "", "register_state_dict_pre_hook"], [304, 2, 1, "", "requires_grad_"], [304, 2, 1, "", "set_extra_state"], [304, 2, 1, "", "set_submodule"], [304, 2, 1, "", "share_memory"], [304, 2, 1, "", "state_dict"], [304, 2, 1, "", "to"], [304, 2, 1, "", "to_empty"], [304, 2, 1, "", "train"], [304, 2, 1, "", "type"], [304, 2, 1, "", "xpu"], [304, 2, 1, "", "zero_grad"]], "baybe.targets.botorch.AffinePosteriorTransform.add_module.params": [[304, 4, 1, "", "module"], [304, 4, 1, "", "name"]], "baybe.targets.botorch.AffinePosteriorTransform.apply.params": [[304, 4, 1, "", "fn"]], "baybe.targets.botorch.AffinePosteriorTransform.buffers.params": [[304, 4, 1, "", "recurse"]], "baybe.targets.botorch.AffinePosteriorTransform.cuda.params": [[304, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.evaluate.params": [[304, 4, 1, "", "Y"]], "baybe.targets.botorch.AffinePosteriorTransform.forward.params": [[304, 4, 1, "", "posterior"]], "baybe.targets.botorch.AffinePosteriorTransform.get_buffer.params": [[304, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.get_parameter.params": [[304, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.get_submodule.params": [[304, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.ipu.params": [[304, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.mtia.params": [[304, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.named_buffers.params": [[304, 4, 1, "", "prefix"], [304, 4, 1, "", "recurse"], [304, 4, 1, "", "remove_duplicate"]], "baybe.targets.botorch.AffinePosteriorTransform.named_modules.params": [[304, 4, 1, "", "memo"], [304, 4, 1, "", "prefix"], [304, 4, 1, "", "remove_duplicate"]], "baybe.targets.botorch.AffinePosteriorTransform.named_parameters.params": [[304, 4, 1, "", "prefix"], [304, 4, 1, "", "recurse"], [304, 4, 1, "", "remove_duplicate"]], "baybe.targets.botorch.AffinePosteriorTransform.parameters.params": [[304, 4, 1, "", "recurse"]], "baybe.targets.botorch.AffinePosteriorTransform.register_buffer.params": [[304, 4, 1, "", "name"], [304, 4, 1, "", "persistent"], [304, 4, 1, "", "tensor"]], "baybe.targets.botorch.AffinePosteriorTransform.register_forward_hook.params": [[304, 4, 1, "", "always_call"], [304, 4, 1, "", "hook"], [304, 4, 1, "", "prepend"], [304, 4, 1, "", "with_kwargs"]], "baybe.targets.botorch.AffinePosteriorTransform.register_forward_pre_hook.params": [[304, 4, 1, "", "hook"], [304, 4, 1, "", "prepend"], [304, 4, 1, "", "with_kwargs"]], "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_hook.params": [[304, 4, 1, "", "hook"], [304, 4, 1, "", "prepend"]], "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_pre_hook.params": [[304, 4, 1, "", "hook"], [304, 4, 1, "", "prepend"]], "baybe.targets.botorch.AffinePosteriorTransform.register_load_state_dict_pre_hook.params": [[304, 4, 1, "", "hook"]], "baybe.targets.botorch.AffinePosteriorTransform.register_parameter.params": [[304, 4, 1, "", "name"], [304, 4, 1, "", "param"]], "baybe.targets.botorch.AffinePosteriorTransform.requires_grad_.params": [[304, 4, 1, "", "requires_grad"]], "baybe.targets.botorch.AffinePosteriorTransform.set_extra_state.params": [[304, 4, 1, "", "state"]], "baybe.targets.botorch.AffinePosteriorTransform.set_submodule.params": [[304, 4, 1, "", "module"], [304, 4, 1, "", "strict"], [304, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.state_dict.params": [[304, 4, 1, "", "destination"], [304, 4, 1, "", "keep_vars"], [304, 4, 1, "", "prefix"]], "baybe.targets.botorch.AffinePosteriorTransform.to.params": [[304, 4, 1, "", "device"], [304, 4, 1, "", "dtype"], [304, 4, 1, "", "memory_format"], [304, 4, 1, "", "tensor"]], "baybe.targets.botorch.AffinePosteriorTransform.to_empty.params": [[304, 4, 1, "", "device"], [304, 4, 1, "", "recurse"]], "baybe.targets.botorch.AffinePosteriorTransform.train.params": [[304, 4, 1, "", "mode"]], "baybe.targets.botorch.AffinePosteriorTransform.type.params": [[304, 4, 1, "", "dst_type"]], "baybe.targets.botorch.AffinePosteriorTransform.xpu.params": [[304, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.zero_grad.params": [[304, 4, 1, "", "set_to_none"]], "baybe.targets.numerical": [[307, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[307, 2, 1, "", "__init__"], [307, 2, 1, "", "abs"], [307, 2, 1, "", "clamp"], [307, 6, 1, "", "description"], [307, 2, 1, "", "exp"], [307, 2, 1, "", "from_dict"], [307, 2, 1, "", "from_json"], [307, 2, 1, "", "from_legacy_interface"], [307, 2, 1, "", "from_modern_interface"], [307, 2, 1, "", "get_codomain"], [307, 2, 1, "", "get_image"], [307, 6, 1, "", "is_normalized"], [307, 2, 1, "", "log"], [307, 2, 1, "", "match_absolute"], [307, 2, 1, "", "match_bell"], [307, 2, 1, "", "match_power"], [307, 2, 1, "", "match_quadratic"], [307, 2, 1, "", "match_triangular"], [307, 3, 1, "", "metadata"], [307, 3, 1, "", "minimize"], [307, 3, 1, "", "name"], [307, 2, 1, "", "negate"], [307, 2, 1, "", "normalize"], [307, 2, 1, "", "normalized_ramp"], [307, 2, 1, "", "normalized_sigmoid"], [307, 2, 1, "", "power"], [307, 2, 1, "", "summary"], [307, 2, 1, "", "to_dict"], [307, 2, 1, "", "to_json"], [307, 2, 1, "", "to_objective"], [307, 2, 1, "", "transform"], [307, 3, 1, "", "transformation"], [307, 6, 1, "", "unit"]], "baybe.targets.numerical.NumericalTarget.clamp.params": [[307, 4, 1, "", "max"], [307, 4, 1, "", "min"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[307, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[307, 4, 1, "", "source"]], "baybe.targets.numerical.NumericalTarget.from_legacy_interface.params": [[307, 4, 1, "", "bounds"], [307, 4, 1, "", "metadata"], [307, 4, 1, "", "mode"], [307, 4, 1, "", "name"], [307, 4, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_modern_interface.params": [[307, 4, 1, "", "metadata"], [307, 4, 1, "", "minimize"], [307, 4, 1, "", "name"], [307, 4, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.match_absolute.params": [[307, 4, 1, "", "match_value"], [307, 4, 1, "", "metadata"], [307, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.match_bell.params": [[307, 4, 1, "", "match_value"], [307, 4, 1, "", "metadata"], [307, 4, 1, "", "name"], [307, 4, 1, "", "sigma"]], "baybe.targets.numerical.NumericalTarget.match_power.params": [[307, 4, 1, "", "exponent"], [307, 4, 1, "", "match_value"], [307, 4, 1, "", "metadata"], [307, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.match_quadratic.params": [[307, 4, 1, "", "match_value"], [307, 4, 1, "", "metadata"], [307, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.match_triangular.params": [[307, 4, 1, "", "cutoffs"], [307, 4, 1, "", "margins"], [307, 4, 1, "", "match_value"], [307, 4, 1, "", "metadata"], [307, 4, 1, "", "name"], [307, 4, 1, "", "width"]], "baybe.targets.numerical.NumericalTarget.normalized_ramp.params": [[307, 4, 1, "", "cutoffs"], [307, 4, 1, "", "descending"], [307, 4, 1, "", "metadata"], [307, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.normalized_sigmoid.params": [[307, 4, 1, "", "anchors"], [307, 4, 1, "", "metadata"], [307, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.power.params": [[307, 4, 1, "", "exponent"]], "baybe.targets.numerical.NumericalTarget.to_json.params": [[307, 4, 1, "", "overwrite"], [307, 4, 1, "", "sink"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[307, 4, 1, "", "series"]], "baybe.targets.utils": [[310, 5, 1, "", "combine_numerical_targets"]], "baybe.transformations": [[312, 0, 0, "-", "base"], [315, 0, 0, "-", "basic"], [328, 0, 0, "-", "composite"], [332, 0, 0, "-", "utils"]], "baybe.transformations.base": [[313, 1, 1, "", "MonotonicTransformation"], [314, 1, 1, "", "Transformation"]], "baybe.transformations.base.MonotonicTransformation": [[313, 2, 1, "", "__init__"], [313, 2, 1, "", "abs"], [313, 2, 1, "", "chain"], [313, 2, 1, "", "clamp"], [313, 2, 1, "", "from_dict"], [313, 2, 1, "", "from_json"], [313, 2, 1, "", "get_codomain"], [313, 2, 1, "", "get_image"], [313, 2, 1, "", "negate"], [313, 2, 1, "", "to_botorch_objective"], [313, 2, 1, "", "to_dict"], [313, 2, 1, "", "to_json"]], "baybe.transformations.base.MonotonicTransformation.from_dict.params": [[313, 4, 1, "", "dictionary"]], "baybe.transformations.base.MonotonicTransformation.from_json.params": [[313, 4, 1, "", "source"]], "baybe.transformations.base.MonotonicTransformation.to_json.params": [[313, 4, 1, "", "overwrite"], [313, 4, 1, "", "sink"]], "baybe.transformations.base.Transformation": [[314, 2, 1, "", "__init__"], [314, 2, 1, "", "abs"], [314, 2, 1, "", "chain"], [314, 2, 1, "", "clamp"], [314, 2, 1, "", "from_dict"], [314, 2, 1, "", "from_json"], [314, 2, 1, "", "get_codomain"], [314, 2, 1, "", "get_image"], [314, 2, 1, "", "negate"], [314, 2, 1, "", "to_botorch_objective"], [314, 2, 1, "", "to_dict"], [314, 2, 1, "", "to_json"]], "baybe.transformations.base.Transformation.from_dict.params": [[314, 4, 1, "", "dictionary"]], "baybe.transformations.base.Transformation.from_json.params": [[314, 4, 1, "", "source"]], "baybe.transformations.base.Transformation.to_json.params": [[314, 4, 1, "", "overwrite"], [314, 4, 1, "", "sink"]], "baybe.transformations.basic": [[316, 1, 1, "", "AbsoluteTransformation"], [317, 1, 1, "", "AffineTransformation"], [318, 1, 1, "", "BellTransformation"], [319, 1, 1, "", "ClampingTransformation"], [320, 1, 1, "", "CustomTransformation"], [321, 1, 1, "", "ExponentialTransformation"], [322, 1, 1, "", "IdentityTransformation"], [323, 1, 1, "", "LogarithmicTransformation"], [324, 1, 1, "", "PowerTransformation"], [325, 1, 1, "", "SigmoidTransformation"], [326, 1, 1, "", "TriangularTransformation"], [327, 1, 1, "", "TwoSidedAffineTransformation"]], "baybe.transformations.basic.AbsoluteTransformation": [[316, 2, 1, "", "__init__"], [316, 2, 1, "", "abs"], [316, 2, 1, "", "chain"], [316, 2, 1, "", "clamp"], [316, 2, 1, "", "from_dict"], [316, 2, 1, "", "from_json"], [316, 2, 1, "", "get_codomain"], [316, 2, 1, "", "get_image"], [316, 2, 1, "", "negate"], [316, 2, 1, "", "to_botorch_objective"], [316, 2, 1, "", "to_dict"], [316, 2, 1, "", "to_json"]], "baybe.transformations.basic.AbsoluteTransformation.from_dict.params": [[316, 4, 1, "", "dictionary"]], "baybe.transformations.basic.AbsoluteTransformation.from_json.params": [[316, 4, 1, "", "source"]], "baybe.transformations.basic.AbsoluteTransformation.to_json.params": [[316, 4, 1, "", "overwrite"], [316, 4, 1, "", "sink"]], "baybe.transformations.basic.AffineTransformation": [[317, 2, 1, "", "__init__"], [317, 2, 1, "", "abs"], [317, 2, 1, "", "chain"], [317, 2, 1, "", "clamp"], [317, 3, 1, "", "factor"], [317, 2, 1, "", "from_dict"], [317, 2, 1, "", "from_json"], [317, 2, 1, "", "from_values_mapped_to_unit_interval"], [317, 2, 1, "", "get_codomain"], [317, 2, 1, "", "get_image"], [317, 2, 1, "", "negate"], [317, 3, 1, "", "shift"], [317, 2, 1, "", "to_botorch_objective"], [317, 2, 1, "", "to_botorch_posterior_transform"], [317, 2, 1, "", "to_dict"], [317, 2, 1, "", "to_json"]], "baybe.transformations.basic.AffineTransformation.from_dict.params": [[317, 4, 1, "", "dictionary"]], "baybe.transformations.basic.AffineTransformation.from_json.params": [[317, 4, 1, "", "source"]], "baybe.transformations.basic.AffineTransformation.from_values_mapped_to_unit_interval.params": [[317, 4, 1, "", "mapped_to_one"], [317, 4, 1, "", "mapped_to_zero"]], "baybe.transformations.basic.AffineTransformation.to_json.params": [[317, 4, 1, "", "overwrite"], [317, 4, 1, "", "sink"]], "baybe.transformations.basic.BellTransformation": [[318, 2, 1, "", "__init__"], [318, 2, 1, "", "abs"], [318, 3, 1, "", "center"], [318, 2, 1, "", "chain"], [318, 2, 1, "", "clamp"], [318, 2, 1, "", "from_dict"], [318, 2, 1, "", "from_json"], [318, 2, 1, "", "get_codomain"], [318, 2, 1, "", "get_image"], [318, 2, 1, "", "negate"], [318, 3, 1, "", "sigma"], [318, 2, 1, "", "to_botorch_objective"], [318, 2, 1, "", "to_dict"], [318, 2, 1, "", "to_json"]], "baybe.transformations.basic.BellTransformation.from_dict.params": [[318, 4, 1, "", "dictionary"]], "baybe.transformations.basic.BellTransformation.from_json.params": [[318, 4, 1, "", "source"]], "baybe.transformations.basic.BellTransformation.to_json.params": [[318, 4, 1, "", "overwrite"], [318, 4, 1, "", "sink"]], "baybe.transformations.basic.ClampingTransformation": [[319, 2, 1, "", "__init__"], [319, 2, 1, "", "abs"], [319, 2, 1, "", "chain"], [319, 2, 1, "", "clamp"], [319, 3, 1, "", "cutoffs"], [319, 2, 1, "", "from_dict"], [319, 2, 1, "", "from_json"], [319, 2, 1, "", "get_codomain"], [319, 2, 1, "", "get_image"], [319, 2, 1, "", "negate"], [319, 2, 1, "", "to_botorch_objective"], [319, 2, 1, "", "to_dict"], [319, 2, 1, "", "to_json"]], "baybe.transformations.basic.ClampingTransformation.from_dict.params": [[319, 4, 1, "", "dictionary"]], "baybe.transformations.basic.ClampingTransformation.from_json.params": [[319, 4, 1, "", "source"]], "baybe.transformations.basic.ClampingTransformation.to_json.params": [[319, 4, 1, "", "overwrite"], [319, 4, 1, "", "sink"]], "baybe.transformations.basic.CustomTransformation": [[320, 2, 1, "", "__init__"], [320, 2, 1, "", "abs"], [320, 2, 1, "", "chain"], [320, 2, 1, "", "clamp"], [320, 2, 1, "", "from_dict"], [320, 2, 1, "", "from_json"], [320, 3, 1, "", "function"], [320, 2, 1, "", "get_codomain"], [320, 2, 1, "", "get_image"], [320, 2, 1, "", "negate"], [320, 2, 1, "", "to_botorch_objective"], [320, 2, 1, "", "to_dict"], [320, 2, 1, "", "to_json"]], "baybe.transformations.basic.CustomTransformation.from_dict.params": [[320, 4, 1, "", "dictionary"]], "baybe.transformations.basic.CustomTransformation.from_json.params": [[320, 4, 1, "", "source"]], "baybe.transformations.basic.CustomTransformation.to_json.params": [[320, 4, 1, "", "overwrite"], [320, 4, 1, "", "sink"]], "baybe.transformations.basic.ExponentialTransformation": [[321, 2, 1, "", "__init__"], [321, 2, 1, "", "abs"], [321, 2, 1, "", "chain"], [321, 2, 1, "", "clamp"], [321, 2, 1, "", "from_dict"], [321, 2, 1, "", "from_json"], [321, 2, 1, "", "get_codomain"], [321, 2, 1, "", "get_image"], [321, 2, 1, "", "negate"], [321, 2, 1, "", "to_botorch_objective"], [321, 2, 1, "", "to_dict"], [321, 2, 1, "", "to_json"]], "baybe.transformations.basic.ExponentialTransformation.from_dict.params": [[321, 4, 1, "", "dictionary"]], "baybe.transformations.basic.ExponentialTransformation.from_json.params": [[321, 4, 1, "", "source"]], "baybe.transformations.basic.ExponentialTransformation.to_json.params": [[321, 4, 1, "", "overwrite"], [321, 4, 1, "", "sink"]], "baybe.transformations.basic.IdentityTransformation": [[322, 2, 1, "", "__init__"], [322, 2, 1, "", "abs"], [322, 2, 1, "", "chain"], [322, 2, 1, "", "clamp"], [322, 2, 1, "", "from_dict"], [322, 2, 1, "", "from_json"], [322, 2, 1, "", "get_codomain"], [322, 2, 1, "", "get_image"], [322, 2, 1, "", "negate"], [322, 2, 1, "", "to_botorch_objective"], [322, 2, 1, "", "to_botorch_posterior_transform"], [322, 2, 1, "", "to_dict"], [322, 2, 1, "", "to_json"]], "baybe.transformations.basic.IdentityTransformation.from_dict.params": [[322, 4, 1, "", "dictionary"]], "baybe.transformations.basic.IdentityTransformation.from_json.params": [[322, 4, 1, "", "source"]], "baybe.transformations.basic.IdentityTransformation.to_json.params": [[322, 4, 1, "", "overwrite"], [322, 4, 1, "", "sink"]], "baybe.transformations.basic.LogarithmicTransformation": [[323, 2, 1, "", "__init__"], [323, 2, 1, "", "abs"], [323, 2, 1, "", "chain"], [323, 2, 1, "", "clamp"], [323, 2, 1, "", "from_dict"], [323, 2, 1, "", "from_json"], [323, 2, 1, "", "get_codomain"], [323, 2, 1, "", "get_image"], [323, 2, 1, "", "negate"], [323, 2, 1, "", "to_botorch_objective"], [323, 2, 1, "", "to_dict"], [323, 2, 1, "", "to_json"]], "baybe.transformations.basic.LogarithmicTransformation.from_dict.params": [[323, 4, 1, "", "dictionary"]], "baybe.transformations.basic.LogarithmicTransformation.from_json.params": [[323, 4, 1, "", "source"]], "baybe.transformations.basic.LogarithmicTransformation.to_json.params": [[323, 4, 1, "", "overwrite"], [323, 4, 1, "", "sink"]], "baybe.transformations.basic.PowerTransformation": [[324, 2, 1, "", "__init__"], [324, 2, 1, "", "abs"], [324, 2, 1, "", "chain"], [324, 2, 1, "", "clamp"], [324, 3, 1, "", "exponent"], [324, 2, 1, "", "from_dict"], [324, 2, 1, "", "from_json"], [324, 2, 1, "", "get_codomain"], [324, 2, 1, "", "get_image"], [324, 2, 1, "", "negate"], [324, 2, 1, "", "to_botorch_objective"], [324, 2, 1, "", "to_dict"], [324, 2, 1, "", "to_json"]], "baybe.transformations.basic.PowerTransformation.from_dict.params": [[324, 4, 1, "", "dictionary"]], "baybe.transformations.basic.PowerTransformation.from_json.params": [[324, 4, 1, "", "source"]], "baybe.transformations.basic.PowerTransformation.to_json.params": [[324, 4, 1, "", "overwrite"], [324, 4, 1, "", "sink"]], "baybe.transformations.basic.SigmoidTransformation": [[325, 2, 1, "", "__init__"], [325, 2, 1, "", "abs"], [325, 3, 1, "", "center"], [325, 2, 1, "", "chain"], [325, 2, 1, "", "clamp"], [325, 2, 1, "", "from_anchors"], [325, 2, 1, "", "from_dict"], [325, 2, 1, "", "from_json"], [325, 2, 1, "", "get_codomain"], [325, 2, 1, "", "get_image"], [325, 2, 1, "", "negate"], [325, 3, 1, "", "steepness"], [325, 2, 1, "", "to_botorch_objective"], [325, 2, 1, "", "to_dict"], [325, 2, 1, "", "to_json"]], "baybe.transformations.basic.SigmoidTransformation.from_anchors.params": [[325, 4, 1, "", "anchors"]], "baybe.transformations.basic.SigmoidTransformation.from_dict.params": [[325, 4, 1, "", "dictionary"]], "baybe.transformations.basic.SigmoidTransformation.from_json.params": [[325, 4, 1, "", "source"]], "baybe.transformations.basic.SigmoidTransformation.to_json.params": [[325, 4, 1, "", "overwrite"], [325, 4, 1, "", "sink"]], "baybe.transformations.basic.TriangularTransformation": [[326, 2, 1, "", "__init__"], [326, 2, 1, "", "abs"], [326, 2, 1, "", "chain"], [326, 2, 1, "", "clamp"], [326, 3, 1, "", "cutoffs"], [326, 2, 1, "", "from_dict"], [326, 2, 1, "", "from_json"], [326, 2, 1, "", "from_margins"], [326, 2, 1, "", "from_width"], [326, 2, 1, "", "get_codomain"], [326, 2, 1, "", "get_image"], [326, 6, 1, "", "margins"], [326, 2, 1, "", "negate"], [326, 3, 1, "", "peak"], [326, 2, 1, "", "to_botorch_objective"], [326, 2, 1, "", "to_dict"], [326, 2, 1, "", "to_json"]], "baybe.transformations.basic.TriangularTransformation.from_dict.params": [[326, 4, 1, "", "dictionary"]], "baybe.transformations.basic.TriangularTransformation.from_json.params": [[326, 4, 1, "", "source"]], "baybe.transformations.basic.TriangularTransformation.to_json.params": [[326, 4, 1, "", "overwrite"], [326, 4, 1, "", "sink"]], "baybe.transformations.basic.TwoSidedAffineTransformation": [[327, 2, 1, "", "__init__"], [327, 2, 1, "", "abs"], [327, 2, 1, "", "chain"], [327, 2, 1, "", "clamp"], [327, 2, 1, "", "from_dict"], [327, 2, 1, "", "from_json"], [327, 2, 1, "", "get_codomain"], [327, 2, 1, "", "get_image"], [327, 3, 1, "", "midpoint"], [327, 2, 1, "", "negate"], [327, 3, 1, "", "slope_left"], [327, 3, 1, "", "slope_right"], [327, 2, 1, "", "to_botorch_objective"], [327, 2, 1, "", "to_dict"], [327, 2, 1, "", "to_json"]], "baybe.transformations.basic.TwoSidedAffineTransformation.from_dict.params": [[327, 4, 1, "", "dictionary"]], "baybe.transformations.basic.TwoSidedAffineTransformation.from_json.params": [[327, 4, 1, "", "source"]], "baybe.transformations.basic.TwoSidedAffineTransformation.to_json.params": [[327, 4, 1, "", "overwrite"], [327, 4, 1, "", "sink"]], "baybe.transformations.composite": [[329, 1, 1, "", "AdditiveTransformation"], [330, 1, 1, "", "ChainedTransformation"], [331, 1, 1, "", "MultiplicativeTransformation"]], "baybe.transformations.composite.AdditiveTransformation": [[329, 2, 1, "", "__init__"], [329, 2, 1, "", "abs"], [329, 2, 1, "", "chain"], [329, 2, 1, "", "clamp"], [329, 2, 1, "", "from_dict"], [329, 2, 1, "", "from_json"], [329, 2, 1, "", "get_codomain"], [329, 2, 1, "", "get_image"], [329, 2, 1, "", "negate"], [329, 2, 1, "", "to_botorch_objective"], [329, 2, 1, "", "to_dict"], [329, 2, 1, "", "to_json"], [329, 3, 1, "", "transformations"]], "baybe.transformations.composite.AdditiveTransformation.from_dict.params": [[329, 4, 1, "", "dictionary"]], "baybe.transformations.composite.AdditiveTransformation.from_json.params": [[329, 4, 1, "", "source"]], "baybe.transformations.composite.AdditiveTransformation.to_json.params": [[329, 4, 1, "", "overwrite"], [329, 4, 1, "", "sink"]], "baybe.transformations.composite.ChainedTransformation": [[330, 2, 1, "", "__init__"], [330, 2, 1, "", "abs"], [330, 2, 1, "", "chain"], [330, 2, 1, "", "clamp"], [330, 2, 1, "", "from_dict"], [330, 2, 1, "", "from_json"], [330, 2, 1, "", "get_codomain"], [330, 2, 1, "", "get_image"], [330, 2, 1, "", "negate"], [330, 2, 1, "", "to_botorch_objective"], [330, 2, 1, "", "to_dict"], [330, 2, 1, "", "to_json"], [330, 3, 1, "", "transformations"]], "baybe.transformations.composite.ChainedTransformation.from_dict.params": [[330, 4, 1, "", "dictionary"]], "baybe.transformations.composite.ChainedTransformation.from_json.params": [[330, 4, 1, "", "source"]], "baybe.transformations.composite.ChainedTransformation.to_json.params": [[330, 4, 1, "", "overwrite"], [330, 4, 1, "", "sink"]], "baybe.transformations.composite.MultiplicativeTransformation": [[331, 2, 1, "", "__init__"], [331, 2, 1, "", "abs"], [331, 2, 1, "", "chain"], [331, 2, 1, "", "clamp"], [331, 2, 1, "", "from_dict"], [331, 2, 1, "", "from_json"], [331, 2, 1, "", "get_codomain"], [331, 2, 1, "", "get_image"], [331, 2, 1, "", "negate"], [331, 2, 1, "", "to_botorch_objective"], [331, 2, 1, "", "to_dict"], [331, 2, 1, "", "to_json"], [331, 3, 1, "", "transformations"]], "baybe.transformations.composite.MultiplicativeTransformation.from_dict.params": [[331, 4, 1, "", "dictionary"]], "baybe.transformations.composite.MultiplicativeTransformation.from_json.params": [[331, 4, 1, "", "source"]], "baybe.transformations.composite.MultiplicativeTransformation.to_json.params": [[331, 4, 1, "", "overwrite"], [331, 4, 1, "", "sink"]], "baybe.transformations.utils": [[333, 5, 1, "", "combine_affine_transformations"], [334, 5, 1, "", "compress_transformations"], [335, 5, 1, "", "convert_transformation"]], "baybe.transformations.utils.compress_transformations.params": [[334, 4, 1, "", "transformations"]], "baybe.utils": [[337, 0, 0, "-", "augmentation"], [340, 0, 0, "-", "basic"], [359, 0, 0, "-", "boolean"], [363, 0, 0, "-", "chemistry"], [368, 0, 0, "-", "clustering_algorithms"], [372, 0, 0, "-", "conversion"], [376, 0, 0, "-", "dataframe"], [393, 0, 0, "-", "interval"], [398, 0, 0, "-", "memory"], [400, 0, 0, "-", "metadata"], [405, 0, 0, "-", "numerical"], [411, 0, 0, "-", "random"], [414, 0, 0, "-", "sampling_algorithms"], [418, 0, 0, "-", "scaling"], [420, 0, 0, "-", "torch"], [423, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[338, 5, 1, "", "df_apply_dependency_augmentation"], [339, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[338, 4, 1, "", "affected"], [338, 4, 1, "", "causing"], [338, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[339, 4, 1, "", "column_groups"], [339, 4, 1, "", "df"]], "baybe.utils.basic": [[341, 1, 1, "", "Dummy"], [342, 8, 1, "", "UNSPECIFIED"], [343, 1, 1, "", "UncertainBool"], [344, 1, 1, "", "UnspecifiedType"], [345, 1, 1, "", "classproperty"], [346, 5, 1, "", "compose"], [347, 5, 1, "", "compose_two"], [348, 5, 1, "", "convert_to_float"], [349, 5, 1, "", "find_subclass"], [350, 5, 1, "", "get_baseclasses"], [351, 5, 1, "", "get_subclasses"], [352, 5, 1, "", "group_duplicate_values"], [353, 5, 1, "", "hilberts_factory"], [354, 5, 1, "", "is_all_instance"], [355, 5, 1, "", "match_attributes"], [356, 5, 1, "", "refers_to"], [357, 5, 1, "", "register_hooks"], [358, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[341, 2, 1, "", "__init__"]], "baybe.utils.basic.UncertainBool": [[343, 2, 1, "", "from_erroneous_callable"]], "baybe.utils.basic.classproperty": [[345, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[350, 4, 1, "", "abstract"], [350, 4, 1, "", "cls"], [350, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[351, 4, 1, "", "abstract"], [351, 4, 1, "", "cls"], [351, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[352, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[355, 4, 1, "", "callable_"], [355, 4, 1, "", "ignore"], [355, 4, 1, "", "object"], [355, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[357, 4, 1, "", "post_hooks"], [357, 4, 1, "", "pre_hooks"], [357, 4, 1, "", "target"]], "baybe.utils.boolean": [[360, 5, 1, "", "check_if_in"], [361, 5, 1, "", "is_abstract"], [362, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[360, 4, 1, "", "allowed"], [360, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[361, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[362, 4, 1, "", "val"]], "baybe.utils.chemistry": [[364, 5, 1, "", "get_canonical_smiles"], [365, 5, 1, "", "get_fingerprint_class"], [366, 5, 1, "", "name_to_smiles"], [367, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[365, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[366, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[367, 4, 1, "", "encoding"], [367, 4, 1, "", "kwargs_conformer"], [367, 4, 1, "", "kwargs_fingerprint"], [367, 4, 1, "", "prefix"], [367, 4, 1, "", "smiles"]], "baybe.utils.clustering_algorithms": [[369, 0, 0, "-", "third_party"]], "baybe.utils.clustering_algorithms.third_party": [[370, 0, 0, "-", "kmedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[371, 1, 1, "", "KMedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids": [[371, 2, 1, "", "__init__"], [371, 3, 1, "", "cluster_centers_"], [371, 2, 1, "", "fit"], [371, 2, 1, "", "fit_predict"], [371, 2, 1, "", "fit_transform"], [371, 2, 1, "", "get_metadata_routing"], [371, 2, 1, "", "get_params"], [371, 3, 1, "", "inertia_"], [371, 3, 1, "", "labels_"], [371, 3, 1, "", "medoid_indices_"], [371, 2, 1, "", "predict"], [371, 2, 1, "", "set_output"], [371, 2, 1, "", "set_params"], [371, 2, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit.params": [[371, 4, 1, "", "X"], [371, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict.params": [[371, 4, 1, "", "**kwargs"], [371, 4, 1, "", "X"], [371, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform.params": [[371, 4, 1, "", "**fit_params"], [371, 4, 1, "", "X"], [371, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params.params": [[371, 4, 1, "", "deep"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params": [[371, 4, 1, "", "init"], [371, 4, 1, "", "max_iter"], [371, 4, 1, "", "method"], [371, 4, 1, "", "metric"], [371, 4, 1, "", "n_clusters"], [371, 4, 1, "", "random_state"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict.params": [[371, 4, 1, "", "X"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output.params": [[371, 4, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params.params": [[371, 4, 1, "", "**params"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform.params": [[371, 4, 1, "", "-------"], [371, 4, 1, "", "Returns"], [371, 4, 1, "", "X"], [371, 4, 1, "", "X_new"]], "baybe.utils.conversion": [[373, 5, 1, "", "fraction_to_float"], [374, 5, 1, "", "nonstring_to_tuple"], [375, 5, 1, "", "to_string"]], "baybe.utils.conversion.fraction_to_float.params": [[373, 4, 1, "", "value"]], "baybe.utils.conversion.to_string.params": [[375, 4, 1, "", "*fields"], [375, 4, 1, "", "header"], [375, 4, 1, "", "single_line"]], "baybe.utils.dataframe": [[377, 5, 1, "", "add_fake_measurements"], [378, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [379, 5, 1, "", "add_parameter_noise"], [380, 5, 1, "", "arrays_to_dataframes"], [381, 5, 1, "", "create_fake_input"], [382, 5, 1, "", "df_drop_single_value_columns"], [383, 5, 1, "", "df_drop_string_columns"], [384, 5, 1, "", "df_uncorrelated_features"], [385, 5, 1, "", "filter_df"], [386, 5, 1, "", "fuzzy_row_match"], [387, 5, 1, "", "get_transform_objects"], [388, 5, 1, "", "handle_missing_values"], [389, 5, 1, "", "normalize_input_dtypes"], [390, 5, 1, "", "pretty_print_df"], [391, 5, 1, "", "to_tensor"], [392, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[377, 4, 1, "", "data"], [377, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[378, 4, 1, "", "df"], [378, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[379, 4, 1, "", "data"], [379, 4, 1, "", "noise_level"], [379, 4, 1, "", "noise_type"], [379, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[380, 4, 1, "", "input_labels"], [380, 4, 1, "", "output_labels"], [380, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[381, 4, 1, "", "**kwargs"], [381, 4, 1, "", "n_rows"], [381, 4, 1, "", "parameters"], [381, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[382, 4, 1, "", "df"], [382, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[383, 4, 1, "", "df"], [383, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[384, 4, 1, "", "df"], [384, 4, 1, "", "exclude_list"], [384, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[385, 4, 1, "", "complement"], [385, 4, 1, "", "df"], [385, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[386, 4, 1, "", "left_df"], [386, 4, 1, "", "parameters"], [386, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[387, 4, 1, "", "allow_extra"], [387, 4, 1, "", "allow_missing"], [387, 4, 1, "", "df"], [387, 4, 1, "", "objects"]], "baybe.utils.dataframe.handle_missing_values.params": [[388, 4, 1, "", "columns"], [388, 4, 1, "", "data"], [388, 4, 1, "", "drop"]], "baybe.utils.dataframe.normalize_input_dtypes.params": [[389, 4, 1, "", "df"], [389, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[390, 4, 1, "", "df"], [390, 4, 1, "", "max_columns"], [390, 4, 1, "", "max_colwidth"], [390, 4, 1, "", "max_rows"], [390, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[391, 4, 1, "", "*x"]], "baybe.utils.interval": [[394, 8, 1, "", "ConvertibleToInterval"], [395, 7, 1, "", "InfiniteIntervalError"], [396, 1, 1, "", "Interval"], [397, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[395, 2, 1, "", "__init__"], [395, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[396, 2, 1, "", "__init__"], [396, 6, 1, "", "center"], [396, 2, 1, "", "clamp"], [396, 2, 1, "", "contains"], [396, 2, 1, "", "create"], [396, 2, 1, "", "from_dict"], [396, 2, 1, "", "from_json"], [396, 6, 1, "", "is_bounded"], [396, 6, 1, "", "is_degenerate"], [396, 6, 1, "", "is_fully_unbounded"], [396, 6, 1, "", "is_half_bounded"], [396, 6, 1, "", "is_left_bounded"], [396, 6, 1, "", "is_right_bounded"], [396, 3, 1, "", "lower"], [396, 2, 1, "", "to_dict"], [396, 2, 1, "", "to_json"], [396, 2, 1, "", "to_ndarray"], [396, 2, 1, "", "to_tensor"], [396, 2, 1, "", "to_tuple"], [396, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[396, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[396, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[396, 4, 1, "", "source"]], "baybe.utils.interval.Interval.to_json.params": [[396, 4, 1, "", "overwrite"], [396, 4, 1, "", "sink"]], "baybe.utils.memory": [[399, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[399, 4, 1, "", "num"]], "baybe.utils.metadata": [[401, 8, 1, "", "ConvertibleToMeasurableMetadata"], [402, 1, 1, "", "MeasurableMetadata"], [403, 1, 1, "", "Metadata"], [404, 5, 1, "", "to_metadata"]], "baybe.utils.metadata.MeasurableMetadata": [[402, 2, 1, "", "__init__"], [402, 3, 1, "", "description"], [402, 2, 1, "", "from_dict"], [402, 2, 1, "", "from_json"], [402, 6, 1, "", "is_empty"], [402, 3, 1, "", "misc"], [402, 2, 1, "", "to_dict"], [402, 2, 1, "", "to_json"], [402, 3, 1, "", "unit"]], "baybe.utils.metadata.MeasurableMetadata.from_dict.params": [[402, 4, 1, "", "dictionary"]], "baybe.utils.metadata.MeasurableMetadata.from_json.params": [[402, 4, 1, "", "source"]], "baybe.utils.metadata.MeasurableMetadata.to_json.params": [[402, 4, 1, "", "overwrite"], [402, 4, 1, "", "sink"]], "baybe.utils.metadata.Metadata": [[403, 2, 1, "", "__init__"], [403, 3, 1, "", "description"], [403, 2, 1, "", "from_dict"], [403, 2, 1, "", "from_json"], [403, 6, 1, "", "is_empty"], [403, 3, 1, "", "misc"], [403, 2, 1, "", "to_dict"], [403, 2, 1, "", "to_json"]], "baybe.utils.metadata.Metadata.from_dict.params": [[403, 4, 1, "", "dictionary"]], "baybe.utils.metadata.Metadata.from_json.params": [[403, 4, 1, "", "source"]], "baybe.utils.metadata.Metadata.to_json.params": [[403, 4, 1, "", "overwrite"], [403, 4, 1, "", "sink"]], "baybe.utils.metadata.to_metadata.params": [[404, 4, 1, "", "cls"], [404, 4, 1, "", "value"]], "baybe.utils.numerical": [[406, 3, 1, "", "DTypeFloatNumpy"], [407, 3, 1, "", "DTypeFloatONNX"], [408, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [409, 5, 1, "", "closer_element"], [410, 5, 1, "", "closest_element"]], "baybe.utils.numerical.closer_element.params": [[409, 4, 1, "", "target"], [409, 4, 1, "", "x"], [409, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[410, 4, 1, "", "array"], [410, 4, 1, "", "target"]], "baybe.utils.random": [[412, 5, 1, "", "set_random_seed"], [413, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[412, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[413, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[415, 1, 1, "", "DiscreteSamplingMethod"], [416, 5, 1, "", "farthest_point_sampling"], [417, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[415, 3, 1, "", "FPS"], [415, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[416, 4, 1, "", "initialization"], [416, 4, 1, "", "n_samples"], [416, 4, 1, "", "points"], [416, 4, 1, "", "random_tie_break"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[417, 4, 1, "", "df"], [417, 4, 1, "", "method"], [417, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[419, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[419, 2, 1, "", "__init__"], [419, 2, 1, "", "fit"], [419, 3, 1, "", "mapping"], [419, 2, 1, "", "transform"]], "baybe.utils.torch": [[421, 8, 1, "", "DTypeFloatTorch"], [422, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[424, 5, 1, "", "finite_float"], [425, 5, 1, "", "non_inf_float"], [426, 5, 1, "", "non_nan_float"], [427, 5, 1, "", "validate_not_nan"], [428, 5, 1, "", "validate_object_names"], [429, 5, 1, "", "validate_objective_input"], [430, 5, 1, "", "validate_parameter_input"], [431, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_object_names.params": [[428, 4, 1, "", "objects"]], "baybe.utils.validation.validate_objective_input.params": [[429, 4, 1, "", "data"], [429, 4, 1, "", "objective"]], "baybe.utils.validation.validate_parameter_input.params": [[430, 4, 1, "", "data"], [430, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [430, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[431, 4, 1, "", "data"], [431, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 199, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 353, 371, 391, 396, 402, 403, 432, 435, 442, 446, 449, 450, 453, 454, 456, 457, 458, 459, 460, 462, 467, 471, 472, 473, 477, 478, 479, 482, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499], "0": [8, 9, 12, 15, 18, 24, 34, 37, 47, 48, 53, 111, 127, 147, 155, 158, 178, 186, 187, 188, 199, 222, 246, 248, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 307, 317, 318, 325, 326, 327, 338, 339, 362, 371, 378, 379, 384, 385, 407, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 461, 462, 464, 465, 466, 468, 469, 470, 472, 474, 477, 482, 483, 484, 485, 486, 490, 491, 493, 494, 495, 497, 499, 501], "00": [466, 474, 493], "000": [446, 468], "000000": 468, "0006917789999079105": 449, "001": [47, 378, 453, 486], "005": [434, 435, 436, 438, 439], "006680": 457, "01": [178, 441, 442, 447, 450, 465, 466, 472], "015010": 457, "02": 472, "021": [280, 384], "03213": [280, 384], "041208": 457, "048705": 464, "05": 472, "053246": 465, "057": [434, 435, 436, 438, 439, 449], "06": [222, 292, 453], "060641": 464, "061281": 438, "067860": 457, "071638": 464, "079276": 464, "08": 472, "091895": 457, "09653736976391157": 459, "0f": 450, "1": [9, 12, 15, 18, 28, 34, 47, 111, 127, 147, 158, 189, 199, 214, 246, 248, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 307, 317, 318, 325, 326, 338, 339, 352, 362, 371, 379, 381, 385, 407, 416, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 461, 462, 464, 465, 466, 468, 469, 470, 472, 474, 477, 478, 482, 484, 485, 486, 491, 493, 494, 495, 497, 499, 500, 501], "10": [9, 12, 15, 18, 199, 248, 280, 384, 433, 435, 444, 445, 446, 450, 453, 454, 456, 457, 459, 461, 462, 464, 468, 469, 470, 472, 474, 477, 484, 485, 487, 490, 491, 495, 497, 499, 501], "100": [127, 304, 439, 444, 445, 446, 447, 450, 453, 454, 456, 457, 461, 462, 468, 472, 489, 490, 491, 495, 499, 501], "1000": [462, 474, 495], "1024": [152, 479, 491], "103": 439, "1038": [280, 384], "1039": 477, "105": [434, 435, 436, 438, 439, 449, 493], "11": [345, 456, 457, 478, 484], "111": 468, "113": 465, "1147": 446, "1148": 446, "1149": 446, "1150": [127, 304, 446], "12": [456, 457, 466, 484, 485, 493], "120": [434, 435, 436, 438, 439, 444, 446, 449, 491], "120000": 465, "122": [454, 468], "126": [444, 446, 447, 478], "1268824": [434, 435, 436], "128": 11, "128521": 464, "129": 371, "13": [456, 480, 493], "130002": 461, "1337": [450, 451, 474, 501], "135": 371, "135898": 457, "14": [456, 457, 477, 493, 497], "140": 466, "14448993259018328": 459, "1454": 479, "149": 466, "149477": 464, "15": [248, 446, 456, 457, 472, 477, 485, 493], "150": [444, 447, 486], "1500": 491, "151": 446, "153": [434, 435, 436, 438, 439, 449], "153295": 457, "1550": 474, "1551": 474, "16": [127, 304, 390, 407, 453, 456], "165": 465, "166": [453, 468], "17": 456, "174158": 464, "177": 468, "18": [456, 457, 466, 485], "180": 444, "180675": 457, "184358": 457, "188": 468, "19": 456, "1913": [127, 304], "1914": [127, 304], "192": 446, "194918": 457, "1963": 371, "1991": 477, "199721": 457, "199838": 457, "1e": [222, 292, 453], "1l": [127, 304], "2": [8, 9, 12, 15, 18, 24, 111, 113, 127, 248, 304, 325, 338, 339, 352, 371, 385, 416, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 450, 451, 453, 454, 456, 457, 459, 461, 462, 464, 465, 466, 468, 469, 470, 472, 474, 477, 482, 484, 485, 486, 489, 491, 493, 494, 495, 497, 499, 500], "20": [9, 12, 15, 18, 158, 248, 433, 434, 435, 436, 450, 451, 456, 457, 461, 469, 474, 479, 491, 498, 499, 501], "200": [127, 304, 435, 444, 446, 453, 454, 459, 468], "2000": [453, 477], "2004": 482, "2007": 498, "2009": 371, "2021": 435, "2022": 477, "2025": 477, "20l": [127, 304], "21": 456, "215535": 457, "216428": 457, "22": [9, 12, 15, 18, 456, 457, 485], "221": 479, "222": 468, "222222": 454, "226244": 457, "23": [456, 457, 485, 495], "231945": 464, "2324": [127, 304], "2325": [127, 304], "2382": [127, 304], "24": [445, 456, 493], "241": 491, "247376": 457, "25": [450, 456, 461, 493], "250": 483, "254658": 457, "255661": 439, "259725": 457, "26": [456, 493], "260155": 464, "265": 439, "27": [456, 457, 493], "271497": 464, "273006": 457, "28": 456, "281": 438, "284": 438, "289": 454, "29": [456, 457, 477], "290289": 457, "291734": 457, "298056": 464, "3": [127, 248, 304, 317, 338, 339, 345, 352, 385, 390, 434, 435, 436, 439, 442, 444, 445, 446, 447, 449, 451, 454, 456, 457, 459, 461, 462, 464, 465, 466, 468, 469, 472, 477, 478, 480, 482, 484, 485, 486, 489, 491, 493, 494, 495, 497, 498, 499], "30": [433, 447, 451, 456, 457, 468, 491], "300": [371, 453], "300293": 464, "300751": 457, "301629": 457, "302022": 457, "3078f3": 479, "31": 456, "313687": 457, "316119": 461, "318868": 457, "319378": 439, "32": [445, 456, 485, 491], "324306": 457, "327172": 464, "33": [127, 304, 445, 456, 457, 469], "3336": 371, "3341": 371, "34": [445, 485], "3420": [127, 304], "343580": 457, "345286": 457, "35": [445, 456, 457, 461], "36": [371, 457], "364008": 457, "367240": 457, "37": 497, "371260": 464, "3741": [127, 304], "38": 485, "381934": 464, "386785": 461, "387430": 464, "39": 491, "396233": 457, "3d": 451, "4": [9, 12, 15, 18, 152, 338, 339, 371, 390, 441, 442, 444, 445, 446, 447, 451, 456, 457, 459, 464, 465, 466, 477, 482, 484, 485, 486, 491, 493, 499], "40": [456, 491], "401864": 466, "407637": 465, "408762": 438, "409222": 457, "40x": 479, "412526": 457, "413672": 439, "418271": 464, "419207": 457, "419433": 464, "42": [459, 462, 485, 497], "43": 438, "4443": [127, 304], "447": 444, "448": 444, "449": 444, "45": 456, "450": 444, "452100": 457, "453788": 466, "454796": 464, "460758": 457, "463803": 457, "467690": 464, "468": 479, "47": [457, 497], "474972": 457, "48": 461, "490869": 464, "491861": 464, "4d": [127, 304], "4x": 479, "5": [111, 158, 325, 338, 339, 434, 436, 441, 444, 445, 446, 447, 450, 453, 454, 456, 457, 461, 462, 464, 465, 466, 468, 469, 470, 472, 474, 477, 482, 483, 484, 485, 486, 491, 493, 494, 495, 497, 498, 499, 501], "50": [447, 454, 456, 457, 459, 461, 472, 482, 483, 490, 491, 493], "500": [451, 491], "502673": 457, "505824": 457, "5066666666666667": 459, "5112": [127, 304], "5113": [127, 304], "516180": 457, "517378": 457, "5313": 358, "532470": 457, "54": [477, 485], "55": 461, "555626": 464, "5593": [127, 304], "56": [485, 495], "561682": 457, "566711": 464, "567446": 461, "570869": 457, "571908": 466, "58": 457, "583192": 457, "585458": 466, "59": [457, 477, 485], "590": 435, "592714": 457, "5l": [127, 304], "6": [325, 338, 339, 390, 434, 435, 436, 445, 447, 456, 457, 459, 464, 466, 482, 486, 493], "60": [457, 461, 474], "6122": [127, 304], "62": [459, 465, 485], "627277": 464, "627941": 464, "636092": 457, "64": 199, "649135": 466, "65": [457, 459, 461], "653277": 457, "653918": 461, "655161": 466, "661507": 457, "666667": [453, 468], "671627": 457, "674935": 464, "682720": 457, "686108": 457, "687037": 457, "69": [434, 435, 436, 457], "691169": 464, "7": [158, 317, 338, 339, 384, 445, 447, 451, 456, 457, 462, 464, 469, 482, 484, 485, 491, 493], "70": [438, 456], "706667": 465, "71": [465, 491], "718830": 457, "72": 485, "725105": 457, "730683": 457, "738632": 464, "743398": 457, "745": 501, "747451": 466, "75": [456, 457, 493], "757933": 464, "758969": 457, "77": 439, "778": 468, "782910": 464, "79": 477, "798078": 457, "798457": 466, "799109": 464, "7gz": 491, "7hf": 491, "8": [339, 371, 434, 436, 444, 446, 447, 456, 457, 459, 461, 464, 474, 477, 482, 484, 486], "80": [457, 486], "807712": 464, "808009": 457, "813339": 466, "814919": 457, "818223": 457, "825031": 457, "827870": 461, "83": 485, "830347": 464, "832175": 464, "8389": 358, "840871": 457, "8417": 358, "841961": 457, "845076": 457, "85": 439, "857": 446, "86": 468, "861": 447, "862": 447, "863": 447, "864": 447, "869445": 457, "869889": 457, "87": [461, 468, 485], "88": 468, "8859": 453, "889": 468, "89": [435, 465, 466, 468], "895817": 457, "897756": 464, "8jq": 491, "9": [9, 12, 15, 18, 439, 447, 451, 453, 456, 457, 464, 482, 484, 485, 490, 493, 497, 499], "90": [434, 435, 436, 438, 439, 449, 468, 493], "904694": 457, "91": 485, "919424": 464, "920219": 457, "920337": 457, "927009": 466, "934358": 457, "937890": 457, "94": 439, "945473": 457, "946570": 464, "957526": 464, "958690": 457, "96": 435, "972202": 464, "978873": 457, "983697": 466, "987932": 466, "990813": 457, "999": 486, "A": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 75, 77, 81, 83, 84, 85, 86, 89, 92, 94, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 223, 224, 240, 241, 246, 248, 250, 252, 255, 257, 259, 262, 264, 268, 270, 271, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 338, 345, 350, 351, 352, 355, 365, 371, 384, 385, 387, 388, 396, 399, 401, 402, 403, 414, 416, 419, 433, 445, 454, 456, 457, 459, 469, 470, 474, 476, 478, 479, 480, 482, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499], "AND": [56, 446, 482, 486], "AS": [477, 482], "And": [127, 304, 453], "As": [434, 435, 436, 451, 459, 472, 477, 478, 479, 484, 485, 486, 489, 492, 493, 495, 500], "By": [99, 129, 161, 222, 326, 361, 385, 457, 479, 480, 484, 485, 487, 488, 489, 490, 492, 493], "FOR": 482, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 168, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 246, 252, 255, 257, 259, 260, 262, 264, 268, 271, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 357, 386, 392, 396, 402, 403, 416, 419, 434, 435, 436, 438, 439, 445, 449, 450, 451, 456, 457, 459, 461, 466, 472, 474, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 498, 499, 501], "If": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 197, 199, 210, 214, 216, 222, 228, 229, 240, 246, 248, 250, 252, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 339, 350, 351, 355, 357, 360, 362, 365, 371, 373, 375, 378, 379, 381, 384, 385, 386, 387, 388, 396, 402, 403, 404, 416, 417, 428, 429, 430, 431, 439, 441, 450, 456, 461, 465, 466, 469, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 495, 497, 498, 499, 501], "In": [34, 48, 59, 127, 160, 199, 216, 244, 246, 304, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 355, 390, 434, 435, 436, 438, 450, 451, 453, 456, 457, 459, 462, 465, 466, 469, 474, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501], "It": [28, 127, 181, 188, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 244, 263, 284, 304, 371, 434, 438, 439, 445, 454, 456, 459, 466, 468, 469, 470, 474, 479, 484, 485, 486, 487, 491, 492, 493, 495, 497, 499, 501], "Its": [127, 248, 304, 453], "No": [386, 434, 435, 450, 464, 476, 479], "Not": [371, 482, 486], "OF": [477, 482], "OR": [477, 482], "Of": [439, 448, 475, 494], "On": [371, 453, 459], "One": [149, 434, 436, 462, 477, 497], "Or": 487, "Such": [439, 486, 489, 495], "That": [47, 216, 248, 255, 257, 259, 264, 268, 282, 284, 286, 288, 439, 444, 456, 480, 493, 495, 498], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 70, 99, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 168, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 235, 240, 244, 246, 248, 250, 255, 257, 259, 260, 262, 264, 268, 271, 282, 284, 286, 288, 290, 292, 296, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 334, 338, 339, 345, 350, 351, 352, 355, 357, 360, 361, 362, 365, 371, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 399, 402, 403, 404, 409, 410, 412, 413, 416, 417, 429, 430, 431, 434, 435, 436, 439, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 461, 465, 466, 470, 472, 476, 478, 479, 480, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 496, 497, 499, 500, 501], "Then": [451, 499], "There": [88, 292, 407, 456, 464, 477, 478, 480, 484, 488, 493, 496], "These": [432, 435, 436, 437, 440, 443, 448, 452, 455, 458, 460, 463, 467, 471, 473, 477, 480, 484, 486, 491, 493], "To": [127, 304, 434, 439, 450, 451, 457, 459, 461, 462, 468, 472, 474, 477, 478, 480, 484, 485, 486, 487, 488, 490, 491, 495, 496, 499], "Will": 483, "With": [450, 451, 456, 459, 462, 472, 477, 484, 486, 490, 491, 494], "_": [137, 166, 167, 219, 225, 233, 441, 450, 451, 472], "__": [137, 371], "__call__": [127, 304], "__class__": [449, 459], "__excepthook__": 478, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 255, 257, 259, 260, 262, 264, 268, 270, 271, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 341, 345, 371, 395, 396, 402, 403, 419, 493, 494], "__name__": [449, 459], "__new__": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 149, 150, 152, 395], "__str__": 479, "__version__": 479, "_amount": 456, "_ardregressionparam": 282, "_arraylik": 380, "_buffer": [9, 12, 15, 18, 162, 410], "_c": 351, "_cumbest": 246, "_default_my_attribut": 480, "_discretelabellikeparamet": [144, 147, 158], "_enforce_modern_interfac": 307, "_expectedhypervolumeimprov": [9, 12, 15, 18], "_fit": 296, "_iterbest": 246, "_label": 456, "_measur": 246, "_n_last_measur": [186, 187, 188], "_nbase": 367, "_nestedsequ": [9, 12, 15, 18, 162, 410], "_ngbregressorparam": 286, "_option": 479, "_posterior": 296, "_posterior_comp": 479, "_randomforestregressorparam": 288, "_supportsarrai": [9, 12, 15, 18, 162, 410], "_surrogategett": 262, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 227, 236, 237, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 352, 353, 354, 374, 387, 389, 396, 402, 403], "_target": 479, "_tmetadata": 404, "_tparamet": 161, "_tsurrog": [291, 292], "_u": 352, "_validate_my_attribut": 480, "a1": 339, "a2": 339, "ab": [307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 447, 456, 479, 497, 499], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 349, 356, 479, 500], "abc": [26, 37, 38, 39, 40, 41, 43, 106, 107, 108, 124, 141, 142, 170, 184, 194, 197, 202, 207, 257, 259, 299, 313, 314, 361], "abil": [474, 483, 484, 488, 498], "abl": [451, 478, 484, 486, 489, 491, 494, 501], "about": [8, 28, 34, 142, 158, 299, 434, 435, 436, 456, 465, 466, 477, 479, 480, 485, 489, 491, 493, 496, 497], "abov": [127, 292, 304, 361, 384, 433, 439, 446, 447, 449, 450, 457, 464, 477, 480, 482, 483, 484, 485, 486, 488, 491, 494, 495, 496, 497, 498, 499], "absenc": 490, "absolut": [47, 155, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 379, 499, 500], "absolutetransform": 499, "abstract": [26, 37, 38, 39, 40, 41, 43, 106, 107, 108, 124, 140, 141, 142, 170, 184, 194, 197, 202, 259, 299, 313, 314, 350, 351, 361, 479, 486, 498], "abstractli": 459, "acceler": [477, 479, 481, 498], "accept": [34, 124, 127, 129, 133, 135, 187, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 380, 450, 451, 474, 479, 482, 487, 490, 491, 495, 497, 499], "access": [127, 214, 222, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 434, 435, 436, 444, 449, 472, 479, 484, 486, 490, 491, 494], "accord": [47, 182, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 457, 474, 483, 486, 492, 501], "accordingli": [199, 485, 488, 490, 494], "account": [479, 484], "accumul": [172, 459, 498], "accur": [371, 485], "acet": [434, 435, 436, 438, 439], "aceton": 456, "achiev": [23, 127, 222, 304, 451, 456, 459, 461, 462, 474, 477, 480, 483, 485, 486, 488, 490, 496, 497, 499], "ack": 477, "acq_funct": 439, "acq_valu": 485, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 450, 451, 459], "acqf1": 494, "acqf2": 494, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 72, 84, 197, 199, 444, 445, 446, 447, 450, 451, 459, 468, 477, 479, 483, 490, 492, 494, 496, 500], "acquisition_funct": [34, 197, 199, 439, 450, 451, 459, 469, 470, 479], "acquisition_function_cl": 479, "acquisition_valu": [34, 197, 199, 450, 451, 479, 485], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 30, 32, 34, 197, 199, 459, 479, 494], "across": [456, 459, 484, 492, 498], "act": [456, 479, 482, 486, 495], "action": [23, 449, 459, 476, 479, 500], "activ": [17, 37, 160, 189, 199, 450, 451, 459, 477, 478, 479, 480, 486, 487, 488, 489, 492, 497, 498, 500, 501], "activate_paramet": 479, "active_dim": [106, 107, 108, 111, 113, 115, 116, 117], "active_valu": [141, 144, 145, 147, 155, 158, 472, 479, 488, 491, 498], "actual": [187, 216, 244, 465, 479, 489, 493, 495, 498, 501], "ad": [34, 127, 222, 304, 329, 338, 371, 377, 416, 456, 457, 476, 480, 483, 488, 496, 497, 500], "adapt": [188, 280, 362, 384], "add": [34, 127, 232, 238, 248, 304, 377, 378, 439, 453, 454, 456, 474, 477, 482, 484, 485, 486, 489, 493, 498, 499, 501], "add_collection3d": 451, "add_fake_measur": [381, 438, 439, 444, 445, 446, 447, 453, 454, 479, 484, 495, 501], "add_fake_result": 479, "add_measur": [34, 381, 438, 439, 441, 442, 444, 445, 446, 447, 451, 453, 454, 459, 461, 462, 465, 466, 477, 479, 484, 485, 488], "add_modul": [127, 304], "add_noise_to_perturb_degenerate_row": 479, "add_parameter_nois": [381, 479, 501], "add_subplot": 451, "addendum": 482, "addit": [34, 99, 124, 127, 129, 133, 135, 187, 199, 216, 246, 248, 250, 304, 371, 379, 381, 402, 403, 434, 435, 436, 457, 465, 472, 477, 479, 481, 482, 485, 486, 487, 489, 490, 491, 493, 494, 495, 497, 498, 500, 501], "addition": [449, 457, 477, 489], "additiveexplain": [97, 100], "additivekernel": 479, "additivetransform": 499, "address": 495, "adher": [479, 480], "adjust": [160, 188, 435, 439, 465, 479, 488, 490], "administ": 500, "adopt": 439, "adrian": [477, 481], "advanc": [188, 459, 461, 478, 479, 487, 490, 494, 498, 500], "advantag": [456, 480], "advic": 480, "advis": [482, 495], "affect": [34, 55, 65, 67, 127, 199, 214, 304, 318, 338, 449, 468, 474, 476, 478, 486, 499], "affected_paramet": [55, 444, 445, 446, 447, 456, 486], "affili": 477, "affin": [304, 307, 317, 327, 333, 334, 461, 499], "affineposteriortransform": [317, 322], "affinet": 317, "affinetransform": [497, 500], "afford": 485, "aforement": [216, 487], "after": [127, 189, 304, 357, 438, 439, 444, 445, 446, 447, 451, 468, 474, 477, 479, 485, 489, 490, 491, 494, 500], "afterward": 494, "again": [450, 484, 485, 486, 498], "against": [93, 127, 304, 355, 429, 456, 482, 488, 498], "agent": 457, "aggreg": 490, "agraw": 481, "agre": [477, 482, 489], "agreement": 482, "ai": [104, 168, 407], "aim": [484, 485, 489], "akin": 484, "al": [435, 477, 491], "aldrich": 481, "alex": 481, "alexand": [477, 481], "algebra": 474, "algorithm": [192, 199, 371, 414, 416, 433, 456, 474, 477, 479, 484, 489, 492], "alia": [127, 157, 258, 304, 394, 401, 491], "alias": 479, "align": [160, 214, 357, 450, 474, 490, 493, 497, 498], "all": [25, 26, 36, 38, 43, 47, 55, 57, 63, 65, 99, 105, 106, 107, 108, 123, 124, 127, 129, 139, 142, 147, 151, 158, 169, 170, 180, 183, 184, 187, 193, 194, 196, 199, 201, 202, 214, 216, 223, 224, 248, 255, 256, 259, 298, 299, 304, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 338, 354, 355, 371, 389, 434, 435, 436, 439, 441, 442, 444, 445, 449, 450, 451, 456, 457, 459, 461, 464, 465, 472, 477, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501], "allclos": [441, 442, 457], "alleg": 482, "alli": 474, "allow": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 250, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 294, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 360, 386, 387, 396, 402, 403, 430, 431, 434, 435, 436, 439, 456, 457, 472, 477, 479, 483, 485, 486, 488, 490, 492, 493, 494, 495, 496, 497, 499, 501], "allow_": [479, 488], "allow_extra": [124, 129, 133, 135, 214, 216, 222, 227, 387, 392, 461, 479], "allow_miss": [124, 129, 133, 135, 214, 216, 222, 227, 387, 392, 479], "allow_recommending_already_measur": [34, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 459, 469, 470, 476, 479, 485], "allow_recommending_already_recommend": [34, 451, 459, 469, 470, 476, 479, 485], "allow_recommending_pending_experi": [34, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 479, 485], "allow_repeated_recommend": [191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 479], "almost": 435, "alon": [479, 482], "along": [127, 304, 482, 491, 498], "alongsid": [127, 304, 482], "alpha": [9, 12, 31, 172, 451, 462, 474], "alpha_1": 453, "alpha_2": 453, "alpha_init": 453, "alphabet": [163, 479], "alreadi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403, 456, 466, 477, 479, 483, 484, 485, 488, 493, 495, 496, 497, 498, 501], "also": [34, 47, 59, 99, 127, 161, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 355, 357, 378, 379, 434, 441, 442, 450, 451, 453, 454, 456, 461, 462, 465, 466, 468, 472, 474, 477, 479, 480, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501], "alter": [456, 479, 485, 488], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 292, 371, 449, 456, 457, 464, 474, 477, 479, 487, 488, 490, 496, 499, 500, 501], "although": [456, 466, 469, 493, 495, 497], "alwai": [17, 34, 43, 127, 233, 234, 304, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 416, 453, 456, 457, 479, 480, 483, 485, 486, 495, 497, 498, 499, 501], "always_cal": [127, 304], "ambigu": [155, 342, 344, 493], "amend": 486, "among": [37, 456, 477, 490, 498], "amount": [339, 417, 457, 472, 484, 486, 489, 491, 501], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 72, 73, 74, 76, 78, 79, 80, 84, 90, 93, 94, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 238, 240, 244, 246, 248, 250, 255, 257, 259, 262, 264, 265, 268, 271, 282, 284, 286, 288, 290, 291, 294, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 334, 338, 342, 343, 344, 346, 353, 355, 357, 360, 366, 371, 374, 375, 384, 385, 386, 388, 390, 394, 395, 396, 402, 403, 410, 417, 428, 434, 436, 437, 439, 446, 447, 449, 450, 453, 454, 457, 461, 464, 468, 469, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "analog": [216, 486, 493, 494, 499], "analogi": [182, 492], "analys": 500, "analysi": [477, 489], "analyt": [3, 4, 7, 8, 84, 474, 484, 495, 498], "analyz": [477, 480, 489], "anchor": [307, 325, 484, 490, 497, 499], "angl": 451, "ani": [9, 12, 15, 18, 66, 67, 90, 99, 127, 140, 141, 142, 144, 145, 147, 158, 161, 162, 165, 166, 167, 232, 233, 234, 238, 242, 243, 250, 304, 307, 334, 338, 354, 355, 357, 358, 360, 361, 375, 381, 386, 388, 397, 401, 402, 403, 404, 410, 424, 425, 426, 427, 431, 449, 456, 461, 472, 476, 477, 478, 479, 480, 482, 484, 485, 487, 488, 491, 494, 495, 497, 498, 499], "annot": [236, 357, 449, 482], "anoth": [55, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 435, 445, 446, 453, 454, 456, 466, 480, 486, 498, 499], "ansatz": 479, "answer": 485, "anti": 385, "anymor": [479, 498], "anyth": 362, "anywai": 496, "anywher": 441, "apach": [477, 482], "apart": [480, 485], "api": [371, 477, 478, 479, 481, 494, 500], "aplei": 489, "appar": 494, "appdata": 478, "appear": [355, 478, 479, 482, 494], "append": [451, 472], "appendix": 482, "appli": [34, 43, 44, 45, 59, 127, 129, 199, 216, 244, 246, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 346, 347, 355, 366, 379, 381, 419, 439, 440, 443, 444, 446, 447, 449, 450, 456, 461, 474, 478, 479, 482, 486, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499], "applic": [371, 375, 477, 480, 482, 491, 492, 495], "approach": [222, 450, 459, 461, 474, 477, 480, 483, 485, 488, 490, 492, 494, 496, 498], "appropri": [50, 51, 222, 459, 461, 480, 482, 488, 490, 493, 497], "approxim": [11, 23, 31, 486, 489], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 41, 43, 44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 71, 82, 86, 87, 88, 99, 124, 127, 129, 133, 135, 141, 144, 145, 147, 155, 158, 160, 161, 162, 167, 181, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 246, 248, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 307, 319, 325, 326, 338, 339, 350, 351, 352, 354, 355, 357, 361, 362, 371, 378, 380, 381, 382, 386, 387, 389, 416, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 449, 450, 451, 454, 456, 457, 459, 461, 464, 465, 468, 469, 472, 474, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 501], "arang": [441, 451, 491], "arbitrari": [188, 216, 320, 346, 397, 479, 486, 491, 492, 495, 498, 499, 501], "arbitrarili": [490, 494], "architectur": [255, 257, 259, 264, 268, 282, 284, 286, 288, 296, 479, 496, 498], "ard_num_dim": [106, 107, 108, 111, 113, 115, 116, 117], "ardregress": 282, "area": 451, "arg": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 110, 112, 114, 119, 120, 121, 127, 170, 172, 173, 174, 175, 176, 177, 178, 181, 260, 265, 270, 304, 307, 395, 480], "argu": 456, "argument": [31, 34, 73, 94, 99, 104, 127, 158, 161, 168, 184, 186, 187, 188, 189, 197, 199, 214, 222, 250, 260, 262, 304, 357, 371, 381, 385, 439, 454, 479, 486, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499], "aris": [58, 456, 474, 479, 480, 482, 486, 494, 501], "arithmet": [131, 490], "arizona": 481, "arm": [254, 255, 475, 481], "arm_index": 459, "around": [9, 12, 15, 18, 47, 206, 250, 252, 461, 474, 479, 492, 494, 497, 501], "arr": 462, "arrai": [9, 12, 15, 18, 162, 341, 371, 380, 391, 406, 410, 416, 451, 479, 492, 496], "arrays_to_datafram": [441, 442, 451, 462, 465, 466, 472, 479, 495], "arriv": [477, 488], "articl": 477, "artifici": 501, "aryl": [434, 435, 436, 438, 477, 491], "as_pre_transform": [129, 479, 484, 489, 490], "asarrai": 371, "ascend": 307, "ask": [456, 477, 479, 480, 485, 488], "aspect": [437, 441, 442, 466, 484, 487, 497, 499], "aspir": 500, "assembl": [456, 494, 496], "assembli": [496, 500], "assert": [67, 137, 325, 386, 444, 445, 446, 447, 453, 454, 456, 457, 464, 468, 479, 482, 484, 485, 486, 494, 496, 497, 499], "assert_frame_equ": 497, "assess": [479, 489, 495], "assign": [450, 457, 464, 490, 491, 497], "associ": [127, 216, 304, 459, 479, 482, 485, 490, 498], "assum": [28, 48, 127, 263, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 357, 386, 387, 434, 435, 436, 439, 441, 442, 444, 445, 446, 447, 453, 454, 456, 459, 465, 466, 468, 474, 477, 482, 484, 486, 488, 491, 494, 496, 497, 501], "assumpt": 495, "assur": 486, "asymmetr": [47, 499], "asynchron": [127, 304, 477, 485, 500], "atol": [441, 442], "atompair": 152, "atompairfingerprint": 152, "attach": [28, 357, 449, 450, 451, 482], "attempt": [83, 90, 127, 263, 304, 459, 478, 479, 484, 486, 489, 490, 492], "attent": 189, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 255, 257, 259, 262, 264, 268, 271, 278, 280, 282, 284, 286, 288, 294, 299, 301, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 355, 358, 396, 402, 403, 419, 427, 479], "attract": 474, "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 93, 96, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 131, 133, 135, 140, 141, 142, 144, 145, 147, 149, 150, 152, 154, 155, 156, 158, 161, 165, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 221, 222, 231, 255, 256, 257, 259, 262, 264, 268, 271, 275, 278, 280, 282, 284, 286, 288, 293, 296, 299, 300, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 340, 343, 344, 355, 374, 387, 393, 396, 400, 402, 403, 405, 415, 419, 420, 423, 424, 425, 426, 427, 464, 479, 480, 482, 486, 492, 494, 496], "attributeerror": [127, 304], "audit": [479, 480], "augment": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 216, 290, 291, 292, 377, 479, 485], "author": [477, 482], "authorship": 482, "auto": [14, 15, 16, 18, 19, 479, 481, 499], "auto_tutori": 407, "autocomplet": 497, "autocorr": 152, "autocorrfingerprint": 152, "autodoc": 479, "autograd": [127, 304], "automat": [34, 199, 268, 433, 451, 465, 478, 479, 480, 486, 489, 490, 492, 493, 496, 498, 500], "autowrap": 335, "avail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 77, 85, 131, 147, 149, 150, 152, 158, 187, 188, 246, 248, 275, 415, 416, 417, 436, 438, 441, 442, 456, 461, 465, 466, 477, 478, 479, 480, 482, 484, 485, 487, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500], "available_acq_funct": 439, "avalon": 152, "avalonfingerprint": 152, "averag": [127, 284, 304, 450, 451, 461, 472, 491, 495], "avoid": [127, 216, 304, 358, 479, 480, 484, 485, 491, 493, 497], "awai": [9, 12, 15, 18, 160], "awar": [456, 472, 479, 480, 483, 488, 494], "ax": [99, 433, 435, 450, 451, 462, 472, 474, 499], "ax2": 474, "axes3d": 451, "axhlin": 474, "axi": [214, 246, 433, 441, 442, 447, 450, 451, 456, 457, 459, 461, 462, 465, 466, 472, 474, 493], "ayesian": 477, "azim": 451, "azur": 479, "b": [47, 58, 178, 280, 338, 352, 384, 385, 435, 445, 454, 459, 469, 470, 476, 477, 480, 482, 485, 488, 491, 494, 499], "b1": 339, "b2": 339, "b950": [127, 304], "back": [0, 468, 476, 479, 480, 488], "background": [99, 103, 479, 484, 489], "background_data": 99, "backport": 478, "backtest": [244, 245, 251, 436, 475, 477, 479, 492, 495], "backtick": 480, "backward": [124, 127, 129, 133, 135, 304, 479, 497], "backward_pr": [127, 304], "bad": [485, 487, 497], "badg": 479, "bai": 477, "baird": 481, "balanc": [129, 459, 477], "banana": 480, "bandit": [255, 439, 475, 477, 479, 481], "banner": 479, "bar": [99, 101, 453, 454, 456, 468, 469, 470, 477, 479, 489, 496], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 131, 133, 135, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 185, 186, 187, 188, 189, 191, 194, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 221, 222, 236, 240, 255, 257, 259, 260, 262, 263, 264, 268, 270, 271, 275, 278, 280, 282, 284, 286, 288, 292, 294, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 341, 343, 344, 345, 349, 350, 351, 371, 380, 385, 396, 402, 403, 415, 416, 419, 433, 438, 439, 450, 451, 453, 455, 459, 475, 477, 479, 482, 483, 485, 486, 487, 489, 491, 492, 493, 494, 496, 497], "base1": 457, "base2": 457, "base_data": 450, "base_kernel": [119, 120, 121], "base_nam": [433, 435, 450, 451, 472], "base_predictor": 290, "base_smil": 450, "baseestim": 371, "basefingerprinttransform": 365, "baselin": [433, 435, 477, 491], "basesequentialmetarecommend": [187, 188], "bashrc": 487, "basi": [115, 477, 482, 489], "basic": [106, 110, 111, 112, 113, 114, 115, 116, 117, 172, 173, 174, 175, 176, 177, 178, 246, 307, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 341, 343, 344, 345, 403, 434, 435, 436, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 456, 465, 466, 467, 468, 471, 474, 475, 479, 480, 488, 490, 491, 495, 497, 500], "basic_transfer_learn": 472, "basickernel": [110, 111, 112, 113, 114, 115, 116, 117, 479], "basin": 474, "batch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 181, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 249, 290, 291, 439, 444, 445, 446, 447, 451, 465, 466, 468, 472, 479, 484, 488, 492, 495], "batch_quant": 479, "batch_shap": [106, 107, 108, 111, 113, 115, 116, 117, 127, 304], "batch_siz": [34, 47, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 246, 250, 252, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 457, 459, 461, 462, 465, 466, 468, 469, 472, 477, 479, 484, 485, 488, 495], "batchnorm": [127, 304], "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 131, 133, 135, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 221, 222, 240, 255, 257, 259, 260, 262, 264, 268, 270, 271, 275, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 341, 343, 344, 345, 371, 396, 402, 403, 415, 419, 432, 433, 434, 435, 436, 437, 439, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "baybe_2025": 477, "baybe_cach": 487, "baybe_cache_dir": [479, 487], "baybe_deactivate_polar": [479, 487], "baybe_debug_fake_hosthash": 479, "baybe_debug_fake_userhash": 479, "baybe_numpy_use_single_precis": [408, 479, 487], "baybe_parallel_simulation_run": [250, 487], "baybe_telemetry_endpoint": 479, "baybe_telemetry_host": 479, "baybe_telemetry_hostnam": 479, "baybe_telemetry_usernam": 479, "baybe_telemetry_vpn_check": 479, "baybe_telemetry_vpn_check_timeout": 479, "baybe_torch_use_single_precis": [422, 479, 487], "baybe_use_fpsampl": [210, 479, 487], "bayesian": [0, 191, 197, 199, 244, 246, 250, 252, 263, 282, 459, 479, 483, 485, 489, 496, 500], "bayesian_recommend": 451, "bayesianlinearmodel": 454, "bayesianlinearsurrog": [439, 479, 496], "bayesianrecommend": [191, 199, 263, 479, 492], "bayesianridg": 453, "bcut2d": [152, 479], "bcut2dfingerprint": 152, "bcw07": 498, "becaus": [47, 88, 127, 155, 160, 216, 222, 252, 304, 361, 449, 450, 456, 461, 472, 474, 480, 483, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499], "becom": [216, 456, 479, 483, 485, 486, 494, 501], "been": [28, 34, 83, 84, 187, 255, 257, 259, 264, 268, 282, 284, 286, 288, 386, 434, 435, 477, 478, 479, 482, 484, 485, 490, 492, 497, 498], "beeswarm": [99, 101, 489], "befor": [83, 127, 189, 246, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 357, 433, 436, 439, 445, 450, 477, 479, 480, 487, 488, 490, 491, 493, 497], "begin": [187, 326, 444, 446, 464, 468, 474, 490, 492, 496, 499], "behalf": 482, "behav": [451, 468, 494], "behavior": [127, 160, 199, 304, 477, 479, 490, 492, 493, 497, 498, 499], "behind": [490, 494, 495, 496, 497, 499], "being": [9, 12, 15, 18, 121, 127, 304, 459, 478, 479, 486, 491, 493, 497, 499], "bell": [307, 318, 461, 499, 500], "bell_transform": 479, "belltransform": [307, 500], "belong": [246, 371, 449, 494], "below": [127, 189, 292, 304, 446, 449, 450, 456, 480, 482, 483, 485, 486, 494, 496, 498, 499, 500], "benchmark": [434, 435, 450, 474, 477, 479, 481], "benefici": [482, 483, 487, 497], "benefit": [486, 498], "benzo": 498, "bernoulli": [255, 458, 475, 481], "besid": [477, 490], "best": [9, 12, 14, 15, 16, 18, 19, 246, 248, 250, 436, 459, 477, 479, 487, 492], "bet": 485, "beta": [8, 24, 172, 255, 439, 479, 483], "betabernoullimultiarmedbanditsurrog": [439, 459, 479], "betaprior": [255, 479], "better": [11, 435, 474, 479, 485, 486, 488, 490, 491], "between": [9, 12, 15, 18, 37, 55, 127, 155, 188, 214, 222, 278, 304, 319, 326, 385, 449, 451, 456, 459, 462, 466, 472, 474, 477, 479, 480, 484, 485, 486, 487, 490, 491, 492, 493, 494, 497, 498], "beyond": [160, 477, 489], "bfloat16": [127, 304], "bia": [127, 304], "bias": 491, "bimod": 474, "bin": 456, "binar": 479, "binari": [301, 310, 431, 468, 477, 478, 479, 494], "binarytarget": [302, 459, 479], "bind": [449, 451, 482], "bit": [479, 491], "black": [244, 474, 495, 498], "blackbox": [432, 433, 475], "blank": 480, "blob": 280, "block": [450, 456, 478, 479, 494, 499], "blue": [462, 474], "boacquisitionfunct": [197, 199], "bodi": 449, "bonilla": 498, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 99, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 227, 240, 250, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 302, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 350, 351, 355, 356, 361, 362, 371, 375, 380, 385, 387, 388, 392, 396, 402, 403, 410, 416, 430, 459], "boolean": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 343, 387, 396, 402, 403, 479, 485, 487, 490], "boost": [286, 472], "both": [9, 11, 12, 15, 18, 124, 127, 129, 133, 135, 160, 161, 222, 252, 304, 307, 326, 357, 433, 445, 450, 453, 456, 457, 459, 462, 472, 474, 477, 479, 480, 483, 485, 486, 489, 491, 493, 494, 496, 497, 500, 501], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 48, 124, 127, 129, 133, 135, 191, 199, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 304, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 441, 442, 451, 466, 472, 479, 487, 492], "botorch_acqf": 28, "botorch_function_wrapp": 479, "botorchrecommend": [191, 439, 444, 445, 446, 447, 450, 451, 453, 454, 459, 466, 468, 469, 470, 477, 479, 484, 485, 486, 488, 492], "bottom": 485, "bound": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 227, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 291, 292, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 351, 357, 387, 389, 396, 402, 403, 404, 416, 433, 439, 441, 442, 451, 457, 462, 464, 465, 466, 472, 474, 479, 491, 494, 497, 499, 500, 501], "boundari": [47, 222], "boundary_onli": [222, 456], "bounded": 479, "bounds_transform_func": 479, "box": [178, 244, 474, 495, 498], "boxdecomposit": 31, "brain": [495, 498], "branch": [477, 480], "brandenburg": 477, "break": [127, 263, 304, 494, 500], "brettpho": [434, 435, 436, 438, 439], "breviti": 497, "briefli": [495, 498], "bring": [477, 479, 499], "bro": 280, "broad": 494, "broadcast": 162, "brute": [199, 492], "bu": [434, 435, 436, 438, 439], "bucket": 456, "budget": 485, "buf": [127, 304], "buffer": [127, 304], "bug": [479, 480], "build": [127, 214, 222, 263, 304, 371, 450, 456, 474, 478, 479, 480, 486, 489, 494, 496, 498, 499, 500, 501], "built": [222, 453, 461, 477, 480, 485, 492, 496, 497, 499], "builtin": 345, "bump": 479, "busi": 474, "button": 479, "butyl": [434, 435, 436, 438, 439], "butylphenylphosphin": [434, 435, 436, 438, 439], "butyornitril": [434, 435, 436, 438, 439], "bypass": [161, 450, 487, 490, 496], "byte": [9, 12, 15, 18, 162, 221, 264, 399, 410, 479, 501], "c": [58, 338, 352, 371, 434, 435, 436, 438, 439, 444, 445, 446, 447, 454, 456, 469, 470, 477, 478, 482, 485, 488, 491, 493, 494, 499], "c1": [434, 435, 436, 438, 439, 444, 445, 446, 447, 491], "c1c2": [434, 435, 436, 438, 439], "c1ccccc1": [434, 435, 436, 444, 446], "c1ccoc1": 486, "c2": [434, 435, 436, 438, 439, 444, 446, 447], "c2ccccc2": [434, 435, 436], "c2oc": [434, 435, 436, 438, 439], "c2p": [434, 435, 436, 438, 439], "c3": [434, 435, 436, 438, 439, 444, 446], "c3c": [434, 435, 436], "c3ccccc3": [434, 435, 436, 438, 439], "c4": [434, 435, 436, 444, 446], "c4ccccc4": [434, 435, 436, 438, 439], "c5": [444, 446], "c6": [444, 446], "c_": [462, 499], "c_1": 326, "c_2": 326, "c_g2_min": 457, "c_g3_max": 457, "c_i": 486, "c_total_sum": 457, "cach": [34, 479, 494, 500], "calcul": [34, 246, 371, 441, 451, 479, 485, 487, 489, 491, 493], "calibr": [317, 498], "call": [48, 94, 127, 184, 186, 187, 188, 189, 236, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 304, 343, 357, 380, 434, 435, 436, 449, 454, 456, 457, 469, 470, 477, 478, 479, 483, 485, 486, 487, 491, 494, 495, 496, 497, 498, 499, 500], "callabl": [54, 73, 93, 127, 161, 232, 244, 246, 248, 250, 252, 290, 291, 294, 296, 304, 320, 335, 343, 345, 346, 347, 353, 355, 357, 371, 380, 433, 449, 462, 474, 479, 499, 500], "callable_": [343, 355], "caller": [127, 304], "campaign": [99, 246, 249, 250, 252, 379, 381, 437, 438, 446, 448, 451, 459, 461, 470, 472, 474, 475, 476, 477, 479, 483, 484, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 500, 501], "campaign1": 495, "campaign2": 495, "campaign_json": 485, "campaign_oh": 435, "campaign_par": 462, "campaign_rand": [434, 435, 436], "campaign_recr": 468, "campaign_stop": 450, "campaign_with_hook": 450, "campaign_y0": 462, "campaign_y1": 462, "campaignstoppedexcept": 450, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 192, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 240, 244, 246, 248, 255, 257, 259, 260, 262, 263, 264, 268, 271, 282, 284, 286, 288, 292, 299, 301, 302, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 355, 357, 361, 371, 379, 380, 394, 396, 401, 402, 403, 407, 433, 434, 435, 436, 439, 440, 443, 444, 445, 446, 449, 450, 451, 453, 454, 456, 457, 459, 461, 462, 464, 465, 466, 469, 472, 474, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "canada": 481, "candid": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 197, 199, 207, 210, 214, 222, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 416, 450, 451, 472, 479, 483, 486, 492, 493, 500], "cannot": [17, 92, 93, 160, 263, 264, 292, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 362, 459, 479, 482, 484, 486, 487, 491, 492, 494, 496, 497, 498], "canon": [364, 494], "capabl": [432, 458, 460, 467, 471, 472, 474, 479, 481, 485, 490, 496, 498], "captur": [474, 491], "cardin": [37, 47, 53, 63, 65, 66, 67, 82, 199, 214, 477, 479, 481, 486], "cardinalityconstraint": [47, 53, 479], "care": [456, 461, 480, 486, 489, 496], "carefulli": 487, "carlo": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 84, 127, 250, 433, 435, 436, 450, 459, 472, 474, 479, 484, 495], "carri": [357, 449, 482, 490], "cartesian": [216, 222, 223, 224, 477, 479, 488, 493], "case": [160, 188, 252, 292, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 357, 371, 390, 450, 455, 456, 461, 465, 466, 469, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 501], "cast": [48, 127, 304, 479], "cat": 385, "catch": 453, "catch_constant_target": 479, "categor": [34, 144, 145, 149, 222, 229, 386, 477, 479, 491, 493, 497], "categori": [435, 450, 477, 479, 494, 497], "categorical_1": 485, "categorical_2": 485, "categorical_paramet": 494, "categorical_parameter_json": 494, "categorical_parameter_reconstruct": 494, "categoricalencod": [144, 145, 444, 445, 446, 447, 468], "categoricalparamet": [145, 222, 435, 444, 445, 446, 447, 454, 459, 468, 469, 470, 477, 479, 488, 489, 493, 494, 500], "cattr": [235, 295, 470, 478, 479, 480], "cauchi": 174, "caus": [155, 338, 345, 479, 482], "caution": 498, "caviti": 474, "cc": [434, 435, 436, 438, 439, 444, 446, 447, 456, 491, 494], "cc1": [434, 435, 436, 438, 439, 491], "ccc": [444, 446, 454, 477], "cccc": [434, 435, 436, 438, 439, 444, 446], "ccccc": [444, 446, 469, 470], "cccccc": [444, 446], "cccccccco": [486, 491], "ccccoc": [434, 435, 436, 438, 439], "cco": 456, "ccoccoccn": [469, 470], "cdot": [486, 490, 499], "cdoubl": [127, 304], "ceil": 450, "cell": [453, 491, 495, 498], "cell_lin": 498, "center": [318, 325, 326, 371, 396, 461, 462, 485, 499], "center_y0": 462, "center_y1": 462, "central": [479, 485, 500], "certain": [34, 55, 93, 127, 189, 244, 304, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 354, 445, 450, 459, 461, 477, 479, 480, 486, 488, 489, 492, 494, 497, 498, 501], "cesium": [434, 435, 436, 438, 439], "chai": 498, "chain": [41, 127, 184, 186, 187, 188, 189, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 345, 486, 497, 500], "chain1": 499, "chain2": 499, "chain3": 499, "chain4": 499, "chainedtransform": 499, "challeng": [480, 494], "chanc": 478, "chang": [55, 127, 187, 304, 378, 379, 439, 456, 461, 465, 477, 478, 480, 482, 485, 487, 489, 490, 491, 493, 497, 498, 500], "changelog": 500, "channel": 474, "channels_last": [127, 304], "charact": 482, "character": 474, "characterist": [345, 474], "charg": 482, "chebyshev": 14, "check": [34, 63, 127, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 304, 354, 356, 359, 360, 361, 362, 371, 386, 388, 389, 396, 402, 403, 409, 461, 465, 466, 468, 477, 479, 480, 489, 493, 494, 497], "check_maximum": 63, "check_minimum": 63, "checker": 479, "checkout": 480, "chem": [477, 479, 491], "chemic": [366, 435, 438, 456, 479, 481, 486, 489, 491, 498], "cheminformat": [158, 477, 479], "chemistri": [147, 444, 446, 447], "child": [127, 204, 205, 206, 207, 304, 480], "children": [127, 304], "chocol": 480, "choic": [246, 248, 416, 449, 456, 459, 461, 466, 479, 486, 488, 490, 491, 492, 493, 494], "choos": [182, 456, 457, 459, 464, 465, 466, 476, 477, 482, 483, 485, 492, 496], "chose": [465, 494], "chosen": [80, 191, 246, 248, 252, 412, 413, 416, 439, 459, 479, 483, 486, 490, 491, 493, 497], "christoph": 498, "chung": 481, "ci": [442, 472, 479, 480], "circ": 499, "circular": 491, "circumv": [478, 494], "cite": 477, "cl": [233, 237, 292, 350, 351, 356, 361, 397, 404], "claim": 482, "clamp": [307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 461, 479, 490, 497, 499], "clampingtransform": 500, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 92, 96, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 236, 239, 240, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 296, 298, 299, 300, 301, 303, 304, 306, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 340, 341, 343, 344, 345, 349, 350, 351, 356, 361, 365, 370, 371, 375, 393, 396, 400, 402, 403, 414, 415, 418, 419, 439, 449, 450, 453, 459, 469, 479, 485, 486, 489, 490, 491, 492, 493, 494, 496, 497, 499], "classic": [459, 490], "classifi": 491, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 343, 345, 396, 402, 403, 479], "classvalidationerror": [470, 478], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 255, 257, 259, 264, 268, 282, 284, 286, 288], "clean": [382, 383, 384, 478, 479, 480], "clear": [34, 127, 304, 407, 498], "clear_cach": 34, "click": [459, 491], "clipboard": 453, "clone": 480, "close": [246, 252, 433, 450, 472, 474, 495], "closer": [9, 12, 15, 18, 409, 491], "closest": [371, 410, 453], "closest_el": 479, "closur": [244, 495], "cluster": [204, 205, 206, 207, 368, 369, 370, 371, 439, 474, 479, 481, 500], "cluster_centers_": 371, "clustering_algorithm": 371, "clustering_x": 479, "clustermixin": 371, "cmap": 451, "cn": [434, 435, 436, 438, 439], "co": 456, "co1": [434, 435, 436], "co2": [434, 435, 436], "co3": [434, 435, 436], "coars": [454, 468, 469, 470, 477], "coc": [454, 469, 470, 477], "cococ": [469, 470], "code": [263, 435, 454, 459, 465, 469, 470, 474, 477, 478, 479, 482, 486, 487, 491, 495, 497, 498, 500, 501], "codomain": [307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331], "coeffici": [48, 50, 51, 441, 442, 457, 486], "coerc": 479, "collect": [34, 65, 66, 67, 109, 119, 120, 137, 161, 163, 171, 187, 189, 214, 222, 228, 229, 241, 248, 262, 336, 338, 340, 354, 355, 368, 369, 387, 388, 414, 416, 433, 439, 451, 456, 459, 461, 462, 472, 479, 485], "color": [451, 453, 462, 474], "column": [43, 44, 45, 99, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 246, 248, 250, 252, 338, 339, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 419, 430, 431, 435, 438, 444, 445, 446, 447, 450, 456, 462, 468, 472, 474, 479, 485, 493, 494, 495], "column_group": 339, "com": [280, 358, 384, 477, 479], "comb": 456, "combin": [47, 56, 161, 199, 214, 216, 222, 223, 224, 310, 333, 334, 345, 366, 428, 434, 435, 436, 444, 446, 449, 450, 456, 477, 478, 482, 486, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 501], "combinatori": [199, 501], "combo_runn": 250, "come": [9, 12, 15, 18, 459, 477, 485, 486, 489, 494, 497, 498, 499, 501], "command": 478, "comment": 479, "commerci": 482, "commit": [477, 479, 480], "common": [171, 453, 457, 479, 480, 482, 484, 485, 486, 491, 494, 497, 499], "commonli": [490, 500], "commun": [482, 490, 498], "comp_df": [141, 144, 145, 147, 155, 158, 479], "comp_rep": [222, 453, 479, 493], "comp_rep_bound": [214, 216, 222, 479], "comp_rep_byt": [221, 501], "comp_rep_column": [140, 141, 142, 144, 145, 147, 154, 155, 158, 214, 216, 222, 479], "comp_rep_human_read": [221, 501], "comp_rep_shap": [221, 501], "compar": [161, 187, 433, 456, 457, 459, 462, 477, 479, 480, 486, 488, 491], "comparison": [127, 304, 450, 462, 472, 492, 494, 497, 499], "compat": [124, 127, 129, 133, 135, 137, 161, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 217, 248, 255, 257, 259, 264, 268, 282, 284, 286, 288, 294, 304, 357, 387, 427, 439, 444, 445, 446, 447, 449, 451, 468, 479, 492, 496, 497], "compens": 479, "compil": [127, 304, 478, 482], "complain": 480, "complaint": 480, "complement": [34, 385, 488], "complementari": 47, "complet": [77, 429, 451, 456, 484, 486, 488, 494], "complex": [9, 12, 15, 18, 127, 162, 304, 371, 410, 456, 468, 472, 474, 480, 483, 484, 486, 488, 495, 497, 498, 499], "complex128": [127, 304], "compli": [482, 486], "complianc": 477, "complic": [456, 497, 498], "compon": [71, 371, 456, 457, 480, 483, 485, 486, 487, 488, 494, 496, 498, 500], "compos": [118, 127, 262, 304, 330, 347, 474, 479, 494, 499], "composit": [107, 119, 120, 121, 262, 329, 330, 331, 479, 500], "composite_a": 496, "composite_b": 496, "compositekernel": [119, 120, 121, 479], "compositesurrog": [255, 257, 259, 264, 268, 282, 284, 286, 288, 479, 489, 490, 496], "compound": 366, "comprehens": [477, 496], "compress": [334, 494], "comput": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 89, 99, 103, 127, 129, 140, 141, 142, 144, 145, 147, 154, 155, 158, 197, 199, 214, 216, 221, 222, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 292, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 367, 371, 444, 445, 446, 447, 449, 456, 457, 461, 462, 468, 479, 482, 483, 485, 487, 490, 491, 493, 494, 495, 497, 499, 500, 501], "computation": 199, "compute_ref_point": [9, 12, 15, 18], "compute_scor": 453, "computedstyl": 453, "concat": [441, 442, 450, 451, 461, 462, 465, 466, 472], "concentr": [172, 173, 434, 435, 436, 438, 439, 444, 449, 450, 474, 486], "concentrati": 444, "concentration_valu": 450, "concept": [338, 456, 490, 491, 494, 499], "concern": 318, "concis": [479, 497, 499], "concret": [479, 494], "conda": 479, "condit": [37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 385, 435, 441, 445, 446, 447, 456, 462, 477, 479, 482, 498, 500], "conduct": [34, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 250, 255, 257, 259, 264, 268, 282, 284, 286, 288, 434, 435, 436, 477, 480, 485, 498], "confid": [8, 24, 439], "config": [453, 454, 467, 475, 479, 500], "config_json": 34, "configur": [9, 12, 15, 18, 34, 41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 87, 88, 181, 188, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 244, 246, 252, 255, 257, 259, 260, 262, 264, 268, 274, 282, 284, 286, 288, 371, 416, 437, 438, 456, 461, 463, 466, 470, 477, 478, 479, 482, 483, 484, 485, 486, 487, 491, 492, 493, 495, 497, 498, 500, 501], "confirm": 451, "conflict": [477, 480, 490], "conform": [158, 367, 491], "confront": [459, 477, 488], "confus": [127, 304, 480], "conjunct": 496, "connect": [59, 479, 491, 497], "consequ": [436, 461, 474, 478, 486, 487, 492, 493, 495, 496], "consequenti": 482, "consid": [34, 37, 38, 39, 40, 41, 44, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 127, 129, 141, 144, 145, 147, 155, 158, 160, 162, 187, 199, 216, 250, 304, 386, 387, 433, 456, 459, 461, 472, 477, 479, 480, 484, 486, 488, 489, 490, 491, 494, 497, 501], "consider": [216, 484], "consist": [127, 182, 221, 304, 371, 451, 480, 482, 489], "consol": [453, 478], "consolid": [479, 492], "consortium": 481, "conspicu": 482, "const": 453, "constant": [284, 292, 317, 474, 479, 480, 491, 493, 497, 499, 500], "constitut": 482, "constrain": [479, 486, 498], "constraint": [34, 37, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 82, 142, 199, 214, 216, 222, 341, 453, 454, 468, 469, 470, 475, 477, 479, 481, 487, 491, 500], "constraint_1": 446, "constraint_2": 446, "constraint_3": 446, "constraints_augment": 216, "constraints_cardin": 214, "constraints_lin_eq": 214, "constraints_lin_ineq": 214, "constraints_nonlin": 214, "constru": 482, "construct": [34, 127, 214, 216, 222, 264, 294, 304, 433, 462, 464, 472, 474, 477, 479, 483, 486, 489, 494, 496, 500], "constructor": [204, 205, 206, 207, 216, 237, 282, 286, 288, 456, 461, 464, 469, 470, 474, 479, 483, 485, 488, 490, 491, 496, 497, 499, 500, 501], "consum": [187, 449, 479], "consumpt": 487, "cont_ind": 466, "cont_indic": [465, 466], "cont_paramet": 466, "cont_recommend": [191, 466], "contact": [477, 481], "contain": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 70, 75, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 166, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 223, 224, 228, 240, 244, 246, 248, 250, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 338, 339, 357, 367, 371, 375, 379, 385, 386, 388, 396, 402, 403, 416, 428, 429, 430, 431, 435, 436, 450, 451, 457, 459, 466, 472, 478, 479, 480, 482, 485, 486, 488, 489, 492, 493, 494, 495, 501], "content": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 248, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 378, 396, 402, 403, 417, 453, 479, 482, 494], "context": [77, 85, 127, 160, 184, 186, 187, 188, 189, 197, 199, 244, 260, 262, 304, 413, 449, 459, 464, 472, 479, 485, 488, 489, 491, 494, 495, 496, 497, 498, 499, 501], "contextu": 498, "continu": [11, 17, 28, 34, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 75, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 191, 199, 214, 216, 217, 222, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 439, 441, 444, 445, 446, 447, 457, 462, 463, 466, 468, 475, 477, 479, 485, 487, 488, 492, 494, 495, 500], "continuous_subspac": 493, "continuouscardinalityconstraint": [65, 66, 214, 479, 500], "continuousconstraint": [40, 48, 214, 479, 486, 488], "continuouslinearconstraint": [214, 441, 442, 457, 479, 500], "continuouslinearequalityconstraint": 479, "continuouslinearinequalityconstraint": 479, "continuousnonlinearconstraint": [47, 214, 479], "continuousparamet": [154, 214, 479], "contour": 462, "contract": 482, "contractor": 481, "contraint": 486, "contrast": [222, 361, 457, 459, 484, 488, 490], "contribut": [477, 479, 482, 501], "contributor": [477, 482], "contributori": 482, "control": [9, 12, 15, 17, 18, 23, 31, 129, 161, 172, 199, 214, 222, 307, 387, 465, 474, 477, 479, 482, 483, 486, 490, 491, 492, 497, 499, 500], "conv": [127, 304], "conv2d": [127, 304], "conv4": [127, 304], "conv5": [127, 304], "convei": 494, "conveni": [474, 479, 493, 494, 496, 497], "convent": [216, 371], "converg": [474, 489], "convers": [34, 188, 453, 464, 479, 482, 489, 496, 500], "convert": [30, 124, 125, 127, 129, 133, 135, 218, 231, 295, 304, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 348, 358, 362, 366, 373, 374, 389, 390, 391, 394, 399, 401, 404, 407, 454, 469, 470, 479, 485, 487, 494, 495], "convert_bound": 479, "convert_sklearn": 453, "convert_sklearn_bayesian_ridg": 453, "convertibletofloat": [9, 12, 15, 18, 348], "cooki": 480, "coordin": [9, 12, 15, 18, 416], "copi": [127, 160, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 369, 389, 450, 453, 477, 479, 482, 501], "copy_x": 453, "copyright": [477, 482], "copytoclipboard": 453, "core": [34, 214, 216, 217, 222, 250, 252, 255, 257, 259, 260, 262, 264, 268, 275, 282, 284, 286, 288, 439, 477, 479, 488, 497], "coregion": 498, "coretest": [479, 480], "corpu": 491, "correct": [34, 236, 296, 451, 477, 479, 480, 494], "correctli": [127, 304, 456, 466, 479], "correl": [147, 158, 384, 491, 498], "correspond": [28, 34, 47, 124, 127, 129, 133, 135, 160, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 244, 246, 248, 255, 257, 258, 259, 264, 268, 282, 284, 286, 288, 294, 304, 357, 360, 362, 365, 366, 380, 381, 387, 388, 389, 390, 392, 416, 430, 431, 433, 438, 439, 456, 459, 461, 462, 466, 472, 474, 477, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "correspondingli": 34, "corrupt": 379, "cost": [371, 435, 459, 487, 497], "costli": [216, 219, 225, 485], "could": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 155, 304, 373, 439, 449, 450, 456, 457, 472, 479, 484, 486, 491, 495, 497, 498], "count": [450, 456, 486], "counterclaim": 482, "counterpart": [357, 493, 497], "coupl": 451, "cours": [472, 480, 494, 498], "cousin": 486, "cov": [479, 480], "cover": [361, 486, 488], "coverag": [479, 480], "cp": [434, 435, 436], "cpu": [127, 304], "craft": 495, "crash": [478, 479], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 70, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 223, 224, 236, 240, 248, 255, 257, 259, 260, 262, 264, 268, 271, 276, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 343, 375, 380, 381, 396, 402, 403, 404, 416, 438, 449, 450, 451, 456, 457, 462, 466, 467, 474, 475, 476, 477, 478, 479, 480, 484, 486, 487, 488, 489, 491, 494, 495, 496, 497, 499, 500, 501], "create_example_plot": [433, 435, 450, 451, 472, 479], "create_from_config": [453, 454], "create_pi_plot": 451, "creation": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 161, 219, 222, 225, 445, 447, 453, 454, 461, 479, 493, 494, 500], "criteria": 451, "criterion": [371, 450, 483], "critic": [474, 479], "cross": [325, 482, 499], "crucial": [477, 497], "csv": [434, 435, 450], "cube": [486, 497], "cuda": [127, 304, 478], "cultur": [491, 498], "cumul": 479, "curran": 498, "current": [11, 34, 127, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 250, 252, 263, 304, 407, 450, 451, 456, 474, 483, 485, 486, 487, 488, 491, 495, 496, 497, 498, 500, 501], "curv": [307, 318, 325, 451, 461, 486, 499], "custom": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 127, 140, 141, 142, 144, 145, 147, 150, 154, 155, 158, 161, 210, 264, 296, 299, 301, 304, 307, 320, 357, 390, 432, 439, 443, 450, 459, 466, 475, 477, 479, 485, 486, 491, 492, 495, 498, 500, 501], "custom_blackbox": 433, "custom_conversion_funct": 453, "custom_filt": 486, "custom_funct": 444, "customari": 482, "customconstraint": 444, "customdiscreteparamet": [479, 489, 500], "customencod": 147, "customonnxsurrog": [439, 453, 479], "customtransform": [497, 499], "cut": 499, "cutoff": [307, 319, 326, 461, 484, 490, 497, 499], "cycl": [187, 477, 479, 488], "cyclic": 187, "d": [9, 12, 15, 18, 28, 58, 127, 338, 352, 416, 451, 454, 469, 470, 472, 477, 482, 493, 498], "d401": 444, "d5dd00050e": 477, "damag": 482, "daniel": 481, "darmstadt": [477, 481], "dashboard": 479, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 74, 79, 91, 99, 103, 124, 129, 133, 135, 147, 155, 158, 181, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 246, 250, 252, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 301, 307, 337, 341, 371, 377, 379, 386, 388, 406, 407, 417, 421, 429, 430, 431, 432, 433, 438, 439, 441, 442, 444, 445, 446, 447, 450, 454, 456, 462, 465, 468, 469, 470, 472, 474, 475, 476, 477, 479, 483, 484, 485, 486, 487, 489, 491, 492, 494, 495, 496, 500, 501], "data_typ": 453, "databas": [34, 477, 494], "dataclass": [449, 459], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 91, 99, 103, 124, 129, 133, 135, 141, 144, 145, 147, 155, 158, 161, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 223, 224, 227, 242, 243, 246, 248, 250, 252, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 301, 307, 338, 339, 366, 367, 371, 417, 429, 430, 431, 433, 434, 438, 439, 444, 445, 446, 447, 450, 451, 453, 454, 456, 457, 462, 465, 468, 472, 474, 479, 484, 485, 486, 488, 491, 500, 501], "datapoint": 479, "dataset": [187, 244, 371, 453, 495], "datatyp": [127, 304, 479], "date": 482, "dditiv": 489, "de": [235, 467, 477, 478, 479, 480, 485, 492, 499, 500], "deactiv": [479, 487], "deal": [436, 484, 491, 495], "debug": 479, "decid": [155, 456, 459, 466, 483], "declar": [55, 59, 67, 207, 445, 480, 486, 497], "decod": 453, "decor": [121, 292, 345, 380, 449, 479, 480, 495], "decorrel": [147, 158, 165, 469, 470, 491], "decreas": [187, 494, 498], "deduc": [441, 442, 465], "dedupl": 479, "deep": [371, 450], "deepcopi": 479, "deeper": 489, "deepli": 496, "def": [127, 304, 433, 444, 449, 450, 451, 456, 459, 462, 474, 480, 486, 495], "default": [9, 12, 15, 18, 45, 99, 124, 127, 129, 133, 135, 147, 158, 161, 191, 197, 199, 204, 205, 206, 207, 214, 222, 235, 255, 275, 278, 304, 307, 326, 371, 385, 433, 434, 436, 439, 453, 454, 466, 477, 479, 480, 485, 486, 487, 489, 490, 491, 497, 499, 500], "default_campaign": 433, "defaultkernelfactori": [439, 444, 445, 446, 447, 468], "defaultscal": 479, "defend": 482, "defer": 479, "defin": [28, 34, 44, 47, 48, 54, 127, 150, 160, 181, 187, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 222, 244, 268, 270, 271, 296, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 379, 384, 385, 402, 403, 419, 434, 435, 436, 438, 444, 445, 446, 447, 453, 454, 459, 464, 474, 479, 480, 482, 485, 486, 488, 491, 494, 495, 497, 499], "definit": [214, 222, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 361, 457, 462, 477, 479, 482, 490, 493], "degener": [378, 396, 479], "degr": 468, "degre": [127, 304, 494], "degree_c": [453, 454, 468], "deliber": 482, "delici": 480, "delimit": 326, "deliveri": 491, "demand": [34, 472], "demo": 479, "demonstr": [432, 433, 434, 437, 440, 443, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 463, 467, 468, 471, 472, 473, 474, 479, 490, 493, 494, 497, 498, 499], "denot": [28, 326], "densiti": 451, "depend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 55, 59, 90, 127, 216, 222, 244, 338, 435, 439, 443, 456, 457, 464, 474, 475, 476, 478, 479, 480, 486, 487, 488, 489, 493, 495, 496, 497, 498, 501], "dependenciesconstraint": 479, "deprec": [69, 127, 152, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 222, 227, 265, 304, 307, 308, 345, 444, 446, 447, 497], "deprecationwarn": [444, 446, 447, 450], "depth": 493, "deriv": [204, 205, 206, 207, 222, 361, 482, 486, 493, 497], "descend": [307, 461, 490, 497], "describ": [204, 205, 206, 207, 255, 257, 259, 264, 268, 282, 284, 286, 288, 294, 439, 444, 449, 450, 457, 459, 462, 480, 482, 484, 485, 486, 490, 491, 494, 495, 497], "descript": [124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 299, 301, 307, 402, 403, 479, 480], "descriptor": [158, 367, 479, 489, 491, 498], "deseri": [233, 237, 242, 468, 478, 479, 485, 500], "deserialize_datafram": 494, "design": [0, 23, 28, 127, 246, 304, 371, 380, 449, 453, 456, 459, 482, 483, 486, 488, 489, 490, 492, 494], "desir": [127, 129, 131, 304, 381, 460, 474, 475, 477, 479, 483, 487, 489, 490, 492, 494, 497, 499, 501], "desirabilityobject": [34, 461, 477, 479, 484, 485, 489, 494, 497, 500], "desktop": 479, "despit": 479, "destin": [127, 304], "detach": [127, 304], "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 168, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 246, 250, 255, 257, 259, 260, 262, 264, 268, 271, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 385, 392, 396, 402, 403, 419, 434, 436, 441, 442, 453, 461, 466, 476, 477, 478, 479, 485, 486, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 500], "detect": [341, 386, 478, 480], "detector": 474, "determin": [9, 12, 15, 18, 34, 47, 99, 189, 222, 250, 361, 385, 399, 409, 416, 434, 456, 459, 474, 479, 482, 487, 492], "determinist": [127, 304, 416, 479], "detriment": 491, "dev": [477, 479, 480], "develop": [477, 479, 491, 495, 500], "deviat": [6, 20, 292, 318, 386, 453, 479, 485, 497, 499], "devic": [127, 304], "df": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 124, 129, 133, 135, 161, 214, 216, 222, 227, 243, 248, 338, 339, 366, 378, 382, 383, 384, 385, 387, 389, 390, 392, 417, 433, 444, 459, 474, 477, 486, 493, 494, 495, 497], "df_y": 462, "dfa": [338, 339], "di": [434, 435, 436, 438, 439, 481], "diagram": [127, 304, 479, 481, 500], "dicret": 486, "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 204, 205, 206, 207, 214, 216, 219, 222, 225, 237, 238, 240, 250, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 352, 355, 367, 371, 396, 401, 402, 403, 404, 419, 450, 453, 472, 479], "dict_bas": [434, 435, 436, 438, 439], "dict_ligand": [434, 435, 436, 438, 439], "dict_solv": [434, 435, 436, 438, 439, 444, 445, 446, 447, 456, 486], "dictat": [124, 129, 133, 135, 199, 216, 472], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 250, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 292, 294, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 352, 355, 396, 402, 403, 404, 434, 435, 436, 438, 454, 491, 495], "diff": 480, "differ": [9, 12, 15, 18, 57, 127, 129, 199, 214, 216, 217, 222, 244, 252, 304, 339, 379, 419, 435, 444, 449, 456, 459, 461, 462, 465, 466, 472, 474, 477, 479, 480, 482, 484, 485, 486, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "differenti": [495, 498], "difficult": 498, "digit": [390, 477], "dilemma": 459, "dim": [28, 127, 304, 441, 442, 451, 453, 465, 466, 472], "dimens": [28, 416, 433, 441, 442, 451, 453, 464, 465, 472, 479, 491, 493, 496, 498], "dimension": [9, 12, 15, 18, 140, 141, 142, 144, 145, 147, 154, 155, 158, 278, 380, 416, 433, 472, 479], "dimethylisoxazol": 498, "direct": [9, 12, 15, 18, 127, 304, 307, 434, 435, 436, 438, 477, 479, 482, 488, 491, 497, 501], "direct_aryl": [434, 435, 450], "directli": [9, 12, 15, 18, 127, 361, 472, 477, 479, 486, 487, 490, 494, 496, 497, 499], "directori": [434, 435, 450, 466, 479], "disabl": [127, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 444, 446, 447, 461, 479, 485, 487, 488, 490], "disadvantag": 494, "disappear": 479, "disc_ind": 466, "disc_indic": [465, 466], "disc_paramet": 466, "disc_recommend": [191, 466], "discard": [8, 456], "disclaim": 482, "discourag": 485, "discoveri": 477, "discret": [17, 28, 34, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 75, 140, 141, 142, 144, 145, 147, 154, 155, 158, 191, 199, 204, 205, 206, 207, 210, 214, 216, 217, 221, 222, 252, 415, 438, 441, 447, 450, 451, 453, 463, 466, 468, 472, 475, 477, 479, 483, 488, 489, 492, 494, 495, 500, 501], "discrete_param": [451, 472], "discrete_spac": [441, 442, 466], "discrete_subspac": 493, "discretecardinalityconstraint": [479, 500], "discreteconstraint": [34, 53, 54, 55, 56, 57, 58, 59, 60, 61, 222, 479, 486, 488], "discretecust": 444, "discretecustomconstraint": [444, 479, 500], "discretedep": 445, "discretedependenciesconstraint": [59, 67, 445, 456, 500], "discreteexcl": 446, "discreteexcludeconstraint": [446, 479, 488, 500], "discretelinkedparametersconstraint": [479, 500], "discretenolabelduplicatesconstraint": [59, 456, 479, 500], "discreteparamet": [155, 222, 223, 224, 479], "discretepermutationinvarianceconstraint": [456, 500], "discreteprod": 447, "discreteproductconstraint": [447, 479, 500], "discretesamplingmethod": [17, 199, 417, 479, 483], "discretesumc": 447, "discretesumconstraint": [441, 447, 456, 479, 500], "discuss": [482, 486, 493, 495], "disguis": 497, "disjoint": 222, "disk": [479, 500], "displai": [390, 450, 482, 489], "distanc": [155, 209, 371, 416, 461, 497], "distict": 490, "distinct": [449, 474, 485, 492], "distinguish": [378, 456, 479, 486, 491, 498], "distribut": [34, 168, 171, 255, 257, 259, 264, 268, 282, 284, 286, 288, 318, 456, 466, 477, 479, 482, 483, 484, 496, 499], "distutil": 362, "div": 453, "divers": 496, "divid": [457, 497], "divis": 474, "dll": 478, "dmac": [434, 435, 436, 438, 439], "dmf": 486, "do": [31, 65, 216, 222, 246, 263, 449, 453, 454, 456, 459, 461, 466, 468, 469, 470, 474, 476, 477, 478, 482, 484, 486, 487, 488, 489, 490, 491, 492, 494, 497, 498, 499, 500, 501], "do_baybe_work": 487, "doc": [104, 168, 345, 477, 479], "doc101": 480, "doc103": 480, "docstr": [127, 304, 479], "doctest": 479, "document": [34, 127, 304, 407, 453, 477, 479, 480, 481, 482, 485, 489, 495], "doe": [33, 34, 41, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 67, 99, 127, 160, 199, 244, 246, 248, 250, 255, 257, 259, 263, 264, 268, 282, 284, 286, 288, 296, 304, 325, 357, 366, 386, 407, 436, 439, 450, 453, 454, 456, 469, 470, 472, 479, 480, 482, 486, 490, 492, 495, 496, 497, 498, 499, 501], "doesn": [127, 304], "doi": [280, 384, 477], "domain": [255, 257, 259, 264, 268, 282, 284, 286, 288, 433, 477, 479, 493, 495, 497, 499], "don": [476, 488], "done": [34, 246, 385, 386, 436, 438, 444, 445, 446, 447, 453, 454, 468, 479, 483, 485, 486, 487, 488], "doubl": [127, 304, 407, 480, 487], "down": [494, 501], "downsid": 188, "draft": 479, "dramat": 498, "drastic": 491, "draw": [11, 116, 214, 457, 459, 464], "draw_arm": 459, "drawback": 490, "drawn": [23, 199], "drift": 474, "drive": [451, 498], "driven": [474, 483], "driver": 478, "drop": [31, 334, 382, 383, 384, 388, 450, 479, 484, 486, 499], "dropout": [127, 304], "drug": 484, "dry_run": 34, "dst_type": [127, 304], "dtype": [9, 12, 15, 18, 127, 162, 304, 371, 389, 410, 479], "due": [160, 472, 479, 480, 483, 486, 487, 490, 491, 492, 493, 494, 497, 499], "dunder": 479, "duplic": [34, 59, 127, 167, 304, 341, 352, 479, 486], "durat": [371, 484, 497], "dure": [34, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 216, 222, 244, 355, 416, 456, 459, 472, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 493, 494, 495, 496], "dx": 477, "dynam": [459, 474, 479, 494, 500], "d\u00fcbendorf": 481, "e": [8, 23, 28, 34, 37, 47, 55, 57, 58, 75, 102, 127, 147, 161, 162, 189, 216, 222, 244, 304, 341, 350, 351, 367, 371, 385, 386, 396, 424, 434, 435, 436, 450, 454, 456, 457, 459, 461, 477, 478, 479, 480, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501], "e3fp": 152, "e3fpfingerprint": 152, "each": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 124, 127, 129, 133, 135, 161, 181, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 216, 246, 248, 250, 252, 255, 257, 259, 263, 264, 268, 282, 284, 286, 288, 304, 325, 339, 367, 371, 378, 386, 433, 435, 436, 439, 451, 456, 457, 459, 462, 466, 472, 474, 479, 480, 482, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 501], "eagerli": 479, "earli": [450, 474, 479], "earlier": [34, 476, 478], "earn": 459, "earned_reward": 459, "easi": [366, 479, 480, 494, 497], "easier": [480, 484, 501], "easiest": [477, 480], "easili": [450, 461, 474, 477, 480, 485, 488, 491, 493, 494, 497, 498, 499], "ecfp": [152, 435, 479, 491], "ecfpfingerprint": 152, "ecosystem": 494, "edbo": [278, 280, 384, 479], "edbokernelfactori": [278, 479], "edg": 160, "edit": [477, 480], "editor": 498, "editori": 482, "edwin": 498, "effect": [57, 127, 184, 186, 187, 188, 189, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 449, 450, 459, 472, 474, 479, 483, 486, 491, 492, 495, 498, 499, 501], "effici": [222, 371, 456, 477, 479, 487, 493], "effortlessli": 495, "ei": [3, 439], "either": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 127, 217, 246, 252, 268, 292, 304, 327, 386, 435, 446, 466, 474, 477, 482, 490, 491, 492, 493, 495, 496, 497], "elabor": 482, "elaps": 449, "elapsedtimeprint": 449, "electron": [481, 482], "electroshap": 152, "electroshapefingerprint": 152, "eleg": 494, "element": [43, 44, 45, 54, 162, 252, 330, 341, 354, 360, 371, 375, 409, 410, 453, 456, 472, 474, 479, 486, 495], "elev": 451, "elif": [465, 466], "elimin": [480, 483, 497], "els": [361, 362, 433, 434, 435, 436, 441, 442, 444, 445, 447, 450, 451, 459, 462, 465, 466, 472, 474], "elsewher": 453, "embed": 499, "emd": 481, "emdgroup": 477, "emelin": 481, "emerg": 485, "emit": 474, "empir": 459, "emploi": [34, 459, 492], "empow": 496, "empti": [103, 127, 214, 216, 222, 229, 304, 339, 357, 366, 385, 390, 430, 431, 456, 466, 468, 479, 493], "empty_encod": [216, 222], "emptysearchspaceerror": 229, "emul": [23, 478, 479], "en": [104, 168], "enabl": [188, 250, 434, 435, 436, 456, 461, 477, 478, 479, 480, 485, 486, 487, 488, 489, 490, 492, 494, 495, 497, 498, 499], "encapsul": [371, 474], "encod": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 154, 155, 158, 216, 222, 255, 257, 259, 264, 268, 282, 284, 286, 288, 365, 367, 434, 435, 436, 438, 439, 444, 445, 446, 447, 450, 454, 456, 459, 468, 469, 470, 472, 477, 479, 486, 493, 494, 498], "encompass": 485, "encount": [160, 184, 186, 187, 188, 189, 416, 478, 479, 480, 490], "end": [0, 127, 304, 326, 396, 450, 454, 459, 468, 474, 482, 486, 490, 494, 499], "endeavor": 483, "endpoint": 479, "enforc": [127, 210, 304, 408, 422, 479, 480, 491], "engin": [478, 492, 494, 495, 497, 501], "enhanc": [28, 477], "enlarg": 491, "enough": [214, 494], "ensembl": 290, "ensur": [127, 160, 161, 304, 389, 434, 435, 436, 456, 457, 477, 479, 486, 494, 495], "enter": [81, 222, 490, 493, 499], "entir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 396, 417, 479, 480, 483, 485, 486, 487, 497, 501], "entiti": 482, "entri": [34, 41, 44, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 127, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 339, 386, 417, 436, 444, 445, 446, 447, 456, 476, 479, 486, 487, 488, 489, 501], "enum": [131, 149, 150, 151, 152, 209, 217, 275, 343, 344, 415, 479, 494], "enumer": [127, 130, 148, 304, 305, 451, 472], "env": [127, 304, 479, 480], "envar_nam": 487, "environ": [210, 250, 408, 422, 433, 434, 435, 436, 442, 444, 445, 447, 450, 451, 453, 459, 462, 472, 474, 477, 478, 479, 480, 486, 500], "envvar_nam": 487, "eq": [444, 456], "equal": [48, 129, 189, 214, 325, 459, 468, 474, 479, 486, 490, 493, 494, 497, 500], "equat": [48, 474, 486, 495], "equidist": [416, 479, 491], "equip": 486, "equival": [23, 37, 59, 127, 304, 334, 442, 464, 474, 479, 483, 486, 495, 497, 499], "erg": 152, "ergfingerprint": 152, "err": 453, "errno": [434, 435, 450], "erron": [343, 479], "error": [127, 187, 246, 248, 250, 265, 304, 355, 388, 436, 453, 454, 459, 478, 479, 484, 486, 492], "error_msg": [127, 304], "escap": 474, "esian": 477, "especi": [480, 484, 497], "essenti": [485, 492], "establish": [450, 472, 498], "estat": 152, "estatefingerprint": 152, "ester": [434, 435, 436, 438, 439], "estim": [216, 221, 222, 255, 371, 459, 479, 496, 500], "estimate_product_space_s": [216, 222, 501], "estimated_win_r": 459, "estimation_bia": 459, "estimation_vari": 459, "et": [435, 477, 491], "etc": [43, 44, 45, 127, 142, 216, 299, 304, 498], "ethan": 494, "ethanol": [456, 486], "euclidean": [371, 416], "eval": [127, 304], "eval_during_augment": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61], "eval_during_cr": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61], "eval_during_model": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61], "evalu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 124, 127, 129, 133, 135, 197, 199, 290, 291, 304, 362, 465, 466, 479, 485, 487, 492, 495, 498], "even": [189, 292, 383, 472, 474, 482, 484, 485, 487, 490, 491, 495, 496, 498, 499, 501], "event": [34, 450, 482], "everi": [127, 304, 484, 501], "everyth": [480, 486], "evolv": [451, 480], "ex": 489, "exabyt": 501, "exact": [34, 386, 449, 478, 479, 486, 490, 491, 496], "exactexplain": [97, 100, 489], "exactli": [9, 12, 15, 18, 47, 124, 129, 133, 135, 216, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 456, 479, 484, 485, 493, 494, 497], "examin": 485, "exampl": [9, 12, 15, 18, 127, 160, 161, 248, 304, 317, 325, 338, 339, 352, 361, 371, 385, 432, 433, 437, 440, 443, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 471, 472, 473, 474, 478, 479, 480, 481, 482, 484, 485, 486, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "example_input_nam": 453, "exceed": 450, "exceedingli": 495, "except": [34, 127, 304, 357, 366, 374, 393, 395, 434, 435, 436, 450, 454, 469, 470, 477, 478, 479, 482, 488, 496, 499], "excepthook": 478, "exceptiongroup": [65, 479], "excess": 501, "exclud": [34, 58, 382, 444, 445, 446, 447, 468, 479, 482, 486, 500], "exclude_list": 384, "exclus": [56, 443, 475, 479, 482, 486, 495, 500], "execut": [34, 69, 127, 246, 304, 357, 433, 435, 461, 478, 479, 480, 482, 487, 494, 495, 498], "exemplari": 485, "exemplifi": 499, "exercis": 482, "exhaust": [187, 199, 489, 492], "exist": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 236, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 345, 357, 396, 402, 403, 456, 474, 478, 479, 480, 483, 485, 486, 488, 494, 496, 498, 500], "exot": 479, "exp": [307, 474, 479, 490], "exp_rep": [222, 444, 445, 446, 447, 456, 493], "exp_rep_byt": [221, 501], "exp_rep_human_read": [221, 501], "exp_rep_shap": [221, 501], "expect": [3, 4, 9, 10, 12, 13, 15, 16, 18, 19, 31, 54, 77, 85, 127, 260, 262, 270, 304, 357, 380, 389, 439, 445, 451, 453, 456, 457, 459, 470, 479, 480, 485, 486, 489, 490, 491, 494, 495, 497, 501], "expens": [11, 199, 441, 495], "experi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 181, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 244, 246, 255, 257, 259, 264, 268, 282, 284, 286, 288, 434, 435, 436, 438, 439, 465, 466, 474, 479, 483, 485, 486, 488, 490, 491, 492, 497, 498, 500], "experiment": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 103, 141, 144, 145, 147, 155, 158, 181, 184, 185, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 216, 221, 222, 244, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 299, 301, 307, 379, 444, 445, 446, 447, 451, 468, 477, 479, 483, 484, 486, 488, 490, 491, 493, 494, 495, 497, 498, 500, 501], "experimentalist": 476, "expert": 371, "expir": 500, "explain": [74, 98, 99, 100, 102, 103, 451, 479, 481, 496, 500], "explain_target": [99, 479], "explainer_cl": [99, 103, 489], "explan": [99, 103, 127, 304, 479, 485, 489, 496], "explanation_index": [99, 489], "explicit": [161, 188, 449, 450, 454, 456, 464, 469, 470, 479, 480, 490, 494, 496, 498, 499, 500], "explicitli": [127, 214, 222, 449, 466, 472, 479, 482, 488, 490, 493, 497, 498, 499], "exploit": [8, 23, 459, 474, 479], "explor": [8, 34, 459, 474, 483, 492, 493, 498], "exploratori": 483, "expon": [307, 324, 497, 499], "exponenti": [222, 307, 321], "exponentialtransform": 499, "expos": [34, 449, 479], "exposur": 479, "expr": [41, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61], "express": [41, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 474, 477, 479, 482, 486, 497, 499], "extend": [160, 307, 488, 491, 498], "extens": [479, 492], "extern": [480, 481], "extra": [127, 304, 371, 435, 477, 479, 487], "extra_repr": [127, 304], "extract": [34, 184, 186, 187, 188, 189, 387, 451, 489, 500], "extract_pi": 451, "f": [326, 346, 347, 362, 371, 433, 434, 435, 436, 441, 442, 444, 445, 446, 447, 449, 450, 451, 456, 457, 464, 465, 466, 472, 474, 499, 501], "f1": 495, "f2": 495, "fa": 453, "fabian": [477, 481], "face": [255, 257, 259, 264, 268, 282, 284, 286, 288, 457, 459], "facilit": 492, "fact": [23, 451, 456, 476, 486, 490, 497], "factor": [9, 12, 15, 18, 304, 317, 477, 485, 486, 497, 499, 501], "factori": [161, 214, 268, 269, 270, 271, 272, 278, 280, 353, 439, 444, 445, 446, 447, 468, 479], "fail": [453, 466, 470, 478, 479, 496], "failur": [301, 479, 482], "failure_valu": 301, "fairli": 490, "fake": [248, 377, 381, 438, 439, 453, 454, 479, 484, 495, 500], "fall": [160, 189, 450, 485], "fallback": [210, 222, 250, 397, 453, 479, 493, 497], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 210, 214, 216, 222, 227, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 350, 351, 355, 361, 362, 375, 380, 385, 387, 388, 392, 396, 402, 403, 430, 439, 444, 445, 446, 447, 453, 468, 469, 470, 474, 479, 487, 490, 494, 497], "falsi": 487, "famili": 486, "familiar": [434, 435, 436, 439, 441, 442, 444, 445, 446, 447, 453, 454, 465, 466, 468], "fang": 481, "fantasi": 11, "far": [307, 485, 487], "farthest": [209, 210, 415, 416, 439, 477, 479, 481, 483, 487, 492], "farthest_point_sampl": [210, 479], "fast": [371, 444, 446, 447, 484, 493], "faster": [31, 222, 371, 484], "fault": 94, "faulti": 478, "favicon": 479, "favor": [127, 304, 479], "fc": [434, 435, 436], "feasibl": [78, 485, 489], "featur": [99, 116, 158, 384, 477, 478, 479, 480, 486, 489, 496, 498, 499], "fed": [477, 489], "feder": 481, "fee": 482, "feed": [371, 462, 476, 477, 488, 498], "feedback": [474, 481], "feel": 450, "fetch": 480, "few": [433, 459, 479, 480, 483, 491, 494, 496, 498, 501], "field": [237, 374, 375, 479, 498, 500], "fifti": 482, "fig": [451, 462, 474], "figsiz": [462, 474], "figur": 451, "file": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403, 434, 435, 436, 450, 453, 454, 466, 477, 479, 482, 487, 494], "fileexistserror": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403], "filenotfounderror": [434, 435, 436, 450], "fill": [34, 248, 451], "fill_": [127, 304], "filler": 486, "filter": [34, 41, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 216, 222, 382, 385, 444, 456, 479, 486, 488, 493, 498, 501], "filter_attribut": 479, "filter_df": [34, 479], "filterwarn": 450, "final": [433, 435, 438, 450, 456, 472, 474], "find": [216, 246, 355, 410, 474, 477, 483, 485, 486, 490, 498], "fine": [454, 468, 469, 470, 477, 497], "finer": [161, 477], "finetun": [127, 304], "fingerprint": [152, 158, 365, 367, 477, 479, 481, 491], "finish": 484, "finit": [187, 244, 252, 358, 395, 424, 459, 491, 495], "fire": [127, 304], "first": [209, 216, 250, 330, 346, 347, 409, 416, 433, 435, 438, 439, 444, 449, 450, 453, 454, 456, 461, 462, 466, 470, 472, 474, 477, 478, 479, 485, 486, 490, 491, 492, 493, 497, 498, 499, 501], "fit": [34, 207, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 371, 417, 419, 434, 435, 436, 444, 445, 446, 447, 453, 468, 479, 482, 484, 486, 490, 491, 496, 497, 499], "fit_gpytorch_ml": 479, "fit_gpytorch_mll_torch": 479, "fit_intercept": 453, "fit_param": 371, "fit_predict": 371, "fit_transform": 371, "fitnr": 34, "fitzner": [477, 481], "fix": [244, 271, 450, 451, 456, 459, 462, 465, 466, 480, 485, 491, 495, 498, 501], "flag": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 199, 214, 216, 217, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 380, 387, 396, 402, 403, 461, 476, 479, 484, 485, 488, 489, 490, 492, 497], "flake8": 479, "flexibl": [449, 464, 479, 490, 494, 495], "flexibli": 492, "float": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 45, 47, 48, 50, 51, 110, 111, 112, 113, 114, 115, 116, 117, 121, 127, 129, 147, 154, 155, 158, 162, 165, 166, 172, 173, 174, 175, 176, 177, 178, 197, 199, 221, 222, 246, 250, 255, 257, 258, 259, 262, 264, 268, 282, 284, 286, 288, 292, 301, 302, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 348, 371, 373, 378, 379, 384, 391, 394, 396, 399, 406, 407, 409, 410, 421, 424, 425, 426, 449, 451, 453, 459, 479, 480, 484, 485, 500], "float16": [127, 304], "float64": [127, 304, 421, 462], "floattensortyp": 453, "fly": [188, 494, 496], "fn": [127, 304, 345], "focu": [461, 485], "focus": [135, 462, 466, 477], "folder": [435, 477, 480, 487, 496], "follow": [127, 162, 184, 186, 187, 188, 189, 216, 246, 248, 250, 304, 434, 435, 436, 439, 441, 442, 444, 445, 446, 447, 449, 450, 454, 459, 466, 469, 470, 472, 474, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "footprint": [11, 216], "forbid": 427, "forc": [99, 101, 160, 199, 479, 480, 489, 492], "foreach": 453, "forest": [287, 288], "fork": 480, "form": [127, 222, 244, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 304, 371, 474, 476, 477, 480, 482, 483, 485, 490, 491, 492, 493, 494, 495, 497, 501], "formal": [457, 476], "format": [48, 127, 304, 371, 390, 399, 453, 454, 468, 469, 477, 478, 479, 480, 485, 487, 494, 495], "format_except": 478, "former": [456, 479], "formul": [484, 498], "formula": 456, "forrest": 479, "forward": [127, 304], "forward_pr": [127, 304], "found": [92, 127, 161, 214, 222, 246, 304, 355, 365, 407, 410, 450, 456, 477, 478, 480, 485, 486, 492, 497, 498, 500], "foundat": 492, "four": [456, 490], "fourier": 116, "fourth": 486, "fp": [415, 479, 483, 500], "fp_size": [152, 491], "fpsampl": [210, 479, 481, 487], "fpsiniti": 210, "fpsrecommend": [439, 453, 454, 468, 469, 470, 477, 479, 481, 484, 487, 492], "frac": [326, 472, 474, 490, 499], "frac1": 445, "fraction": [17, 31, 111, 373, 450, 483, 486], "fraction1": 445, "fraction_1": 486, "fraction_2": 486, "fraction_3": 486, "fractur": 486, "frame": [379, 489, 501], "frame1": 445, "frame2": 445, "frame_1": 486, "frame_2": 486, "framea": 445, "framea_a": 445, "frameb": 445, "framework": [474, 485, 491], "free": [480, 482], "freedom": 494, "freeli": 456, "freez": [127, 304], "frequenc": 116, "frequent": 459, "fresh": 450, "frictionless": 494, "friendli": 479, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 152, 154, 155, 158, 160, 161, 168, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 236, 240, 248, 250, 252, 255, 257, 259, 262, 264, 268, 271, 276, 280, 282, 284, 286, 288, 292, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 343, 357, 361, 362, 366, 369, 371, 379, 380, 382, 384, 396, 402, 403, 416, 417, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 461, 462, 464, 465, 466, 467, 468, 470, 472, 474, 475, 476, 478, 480, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 495, 496, 498, 500, 501], "from_anchor": [325, 499], "from_bound": [214, 479, 493], "from_campaign": [99, 489], "from_config": [34, 469, 470, 485], "from_datafram": [214, 216, 222, 479, 488, 493, 494, 501], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403, 453, 494], "from_erroneous_cal": 343, "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403, 453, 454, 468, 479, 485, 494], "from_legacy_interfac": [307, 497], "from_margin": [326, 499], "from_modern_interfac": [307, 497], "from_paramet": [214, 216, 222, 479], "from_preset": 268, "from_product": [214, 216, 222, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 457, 462, 464, 465, 466, 468, 469, 470, 472, 477, 479, 486, 488, 493, 494, 495], "from_recommend": [99, 489], "from_record": [494, 495], "from_repl": [262, 496], "from_simplex": [222, 456, 479, 488, 493, 501], "from_surrog": [99, 489], "from_values_mapped_to_unit_interv": 317, "from_width": [326, 499], "front": 490, "frontier": 462, "frozenset": [47, 214, 456], "fsspec": 479, "fulfil": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 450, 456, 457], "full": [28, 214, 407, 432, 461, 475, 479, 485, 486, 488, 489, 491, 497, 498, 500], "full_factori": 214, "full_lik": 451, "full_lookup": [434, 435, 436], "fulli": [127, 304, 456, 477, 479, 487, 488, 495], "fullparamnam": 453, "fulltest": 480, "func": [371, 480], "funci": 479, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 42, 48, 49, 54, 62, 64, 72, 84, 94, 96, 99, 115, 123, 127, 128, 132, 134, 136, 159, 160, 164, 197, 199, 215, 220, 226, 230, 231, 240, 241, 244, 245, 247, 249, 250, 251, 256, 263, 269, 274, 289, 293, 298, 304, 309, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 337, 340, 346, 347, 359, 363, 372, 376, 379, 381, 386, 387, 390, 393, 398, 400, 405, 411, 414, 423, 438, 444, 445, 446, 447, 449, 451, 453, 456, 459, 462, 468, 472, 473, 474, 477, 478, 479, 483, 486, 487, 488, 490, 492, 493, 495, 496, 497, 498, 499, 500, 501], "function_nam": 472, "functionalgroup": 152, "functionalgroupsfingerprint": 152, "fundament": [474, 491, 494], "furo": 479, "further": [9, 12, 15, 18, 386, 456, 457, 468, 477, 484, 488, 492, 493, 496, 497, 498, 500], "furthermor": 484, "furyl": [434, 435, 436], "futur": [59, 124, 127, 129, 133, 135, 263, 304, 444, 446, 447, 450, 489, 497], "fuzzy_row_match": 479, "g": [55, 57, 58, 75, 102, 127, 147, 161, 216, 222, 304, 341, 347, 367, 386, 459, 461, 477, 478, 479, 480, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 497, 499, 501], "g1": 457, "g2": 457, "g3": 457, "gain": [222, 485, 489], "gamma": 173, "gammaprior": 479, "gan": [127, 304], "garbag": 479, "gather": [189, 472, 483, 498], "gaussian": [104, 204, 257, 266, 267, 268, 269, 273, 274, 275, 277, 278, 279, 280, 318, 439, 474, 479, 486, 492, 498, 499], "gaussian_kd": 451, "gaussian_process": [106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 268, 270, 271, 275, 278, 280, 439, 479], "gaussianmixtureclusteringrecommend": 492, "gaussianprocesspreset": [268, 276], "gaussianprocesssurrog": [276, 439, 444, 445, 446, 447, 451, 468, 469, 470, 479, 496], "gcf": [434, 436], "ge": 442, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 151, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 246, 255, 257, 259, 262, 264, 268, 271, 278, 280, 282, 284, 286, 288, 299, 301, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 361, 367, 371, 378, 396, 400, 402, 403, 411, 419, 433, 439, 449, 456, 461, 462, 474, 476, 477, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 494, 495, 496, 497, 498, 500, 501], "geom_mean": [129, 131, 479, 490], "geometr": 131, "gerit": 477, "germani": [477, 481], "get": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 41, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 197, 199, 214, 268, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 371, 439, 450, 453, 456, 465, 466, 476, 477, 479, 484, 497, 499, 500, 501], "get_absolute_threshold": [47, 479], "get_acquisition_funct": [34, 197, 199, 479], "get_base_structure_hook": 479, "get_buff": [127, 304], "get_candid": [222, 450, 451], "get_cmap": 451, "get_codomain": [307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331], "get_comp_rep_parameter_indic": [216, 479], "get_current_recommend": [184, 186, 187, 188, 189, 479], "get_extra_st": [127, 304], "get_imag": [307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 479], "get_integration_point": 17, "get_invalid": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61], "get_invalid_polar": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61], "get_lin": 450, "get_metadata_rout": 371, "get_next_recommend": [184, 186, 187, 188, 189, 479], "get_non_meta_recommend": [184, 186, 187, 188, 189, 479], "get_param": 371, "get_paramet": [127, 304], "get_parameters_by_nam": [214, 216, 222], "get_parameters_from_datafram": [214, 222], "get_subclass": 439, "get_submodul": [127, 304], "get_surrog": [34, 99, 197, 199, 479, 489, 496], "get_transform_object": [392, 479], "get_transform_paramet": 479, "get_valid": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 479], "getawai": 152, "getawayfingerprint": 152, "getcomputedstyl": 453, "ghosecrippen": 152, "ghosecrippenfingerprint": 152, "git": [477, 480], "github": [280, 358, 384, 453, 479, 480, 481], "give": [453, 454, 456, 472, 482, 485, 486, 490, 494, 499], "given": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 34, 37, 43, 44, 45, 47, 67, 92, 99, 102, 103, 124, 127, 129, 133, 135, 137, 158, 160, 161, 162, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 228, 232, 236, 244, 248, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 292, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 339, 347, 350, 351, 355, 356, 357, 360, 361, 364, 365, 373, 375, 377, 380, 387, 396, 409, 416, 419, 429, 444, 445, 446, 447, 450, 456, 459, 466, 472, 479, 484, 485, 486, 490, 493, 495, 496, 499], "glass_transition_tempc": 491, "global": [17, 127, 304, 412, 474, 479, 500, 501], "gmm": 204, "go": [338, 456, 477], "goal": [433, 459, 461, 474, 490, 498], "goe": 496, "good": [450, 485, 497], "goodwil": 482, "googl": [479, 480], "got": 479, "govern": 477, "gp": [255, 257, 259, 264, 268, 282, 284, 286, 288, 479], "gpu": [127, 304], "gpu1": [127, 304], "gpytorch": [104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 168, 170, 172, 173, 174, 175, 176, 177, 178, 479], "gpytorchposterior": 304, "grab": 476, "grad": [127, 304], "grad_input": [127, 304], "grad_output": [127, 304], "gradient": [11, 127, 199, 286, 304, 479, 487, 492, 497], "grain": 497, "grant": [479, 482], "granular": [454, 468, 469, 470, 477], "granularity_coar": 468, "granularity_fin": 468, "great": [459, 494], "greater": [189, 199], "greatli": 480, "greedi": [199, 479, 492], "green": 453, "grid": [462, 472], "grid_d": 472, "grossli": 482, "ground": [479, 497], "group": [90, 199, 339, 352, 419, 457, 477, 479, 485, 486, 487, 489], "groupbi": [250, 252], "grow": 501, "gt": [447, 456], "gu16": 491, "guarante": [127, 304, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 479, 486, 487, 492], "guid": [371, 438, 474, 477, 478, 479, 480, 483, 485, 488, 493, 495, 498, 499], "guidelin": [479, 480, 483], "h": [371, 499], "ha": [34, 55, 78, 79, 83, 84, 99, 127, 187, 214, 216, 222, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 318, 338, 355, 357, 361, 378, 389, 416, 417, 435, 439, 444, 445, 446, 447, 456, 466, 468, 477, 479, 480, 482, 484, 485, 486, 489, 491, 493, 494, 495, 497, 498, 499], "had": [244, 486, 491, 495], "half": [127, 155, 174, 175, 304, 396, 466, 484], "halfcauchyprior": 479, "halfnormalprior": 479, "halter": 477, "hamster": 498, "hand": [48, 158, 250, 457, 459, 462, 472, 477, 485, 494, 496], "handi": 486, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 99, 127, 133, 142, 246, 248, 255, 257, 259, 264, 268, 282, 284, 286, 288, 292, 304, 388, 393, 444, 445, 459, 474, 479, 484, 485, 490, 501], "happen": [91, 187, 466, 472, 478, 479, 480, 493, 494, 498, 499], "happili": 490, "hard": [479, 497, 498, 501], "hardcod": 479, "harmless": 482, "hartmann": [451, 472], "hasattr": [441, 442, 465, 466], "hash": 491, "hashabledict": 479, "have": [28, 31, 34, 41, 43, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 124, 127, 129, 133, 135, 158, 160, 207, 216, 244, 263, 296, 304, 339, 352, 355, 371, 386, 387, 407, 428, 434, 435, 438, 439, 444, 445, 449, 451, 456, 457, 459, 465, 466, 472, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 496, 497, 498, 501], "head": 479, "header": 375, "heart": 498, "heatmap": [99, 101], "help": [127, 304, 459, 461, 494, 495, 498], "helper": [307, 449, 451, 453, 456, 494], "henc": [366, 456, 459, 468, 486, 491, 501], "here": [58, 407, 434, 436, 438, 441, 442, 449, 450, 454, 456, 457, 465, 466, 468, 472, 474, 476, 477, 478, 484, 486, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499], "herebi": 482, "herein": [482, 485], "heurist": [199, 371], "hidden": 497, "hierarch": 494, "hierarchi": [92, 479, 480, 485, 494], "high": [278, 433, 459, 474, 479, 480, 483, 485, 486, 491, 494], "higher": [158, 459, 478, 486, 489, 490, 492, 497, 499], "highest": [326, 483, 494], "highlight": 498, "hing": 499, "hint": [480, 497], "histor": 491, "histori": 480, "hoc": 490, "hold": [47, 352, 482, 494, 497], "home": [444, 446, 447], "homepag": [477, 479], "hood": 491, "hook": [127, 222, 231, 232, 236, 304, 357, 475, 478, 479, 480], "hope": 474, "hopp": [477, 481], "host": [127, 304, 479], "hot": [149, 435, 459, 477, 479, 491], "how": [56, 127, 246, 248, 304, 307, 371, 386, 416, 433, 434, 436, 437, 438, 439, 440, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 459, 461, 466, 468, 469, 470, 472, 474, 477, 485, 486, 490, 495, 496, 497, 498, 499, 500], "howev": [127, 161, 222, 246, 263, 304, 357, 449, 456, 459, 465, 466, 474, 476, 478, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 493, 494, 495, 496, 497, 498, 501], "hrovatin": [477, 481], "hsuan": 481, "html": [104, 168, 345, 407, 453, 479], "http": [104, 168, 280, 345, 358, 384, 407, 477, 479, 482], "hue": [433, 434, 435, 436, 450, 472, 474], "human": [221, 399, 468, 479, 481, 494], "hybrid": [27, 28, 75, 190, 191, 199, 211, 216, 217, 439, 440, 444, 445, 446, 447, 463, 468, 475, 477, 479, 492, 493], "hybrid_recommend": 466, "hybrid_sampl": [199, 492], "hypercel": 31, "hyperrectangl": [214, 493], "hypervolum": [9, 12, 15, 18, 31], "hypothesi": [477, 479, 480], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 74, 75, 81, 83, 84, 86, 88, 99, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 229, 240, 244, 246, 248, 250, 252, 255, 257, 259, 260, 262, 263, 264, 268, 271, 278, 282, 284, 286, 288, 292, 296, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 334, 339, 342, 344, 345, 346, 347, 350, 351, 355, 357, 358, 360, 361, 362, 365, 366, 371, 375, 378, 379, 380, 381, 385, 386, 387, 390, 395, 396, 402, 403, 404, 407, 409, 410, 416, 417, 424, 430, 431, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 461, 465, 466, 468, 469, 470, 472, 474, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "ibm": 371, "icon": 453, "ideal": [484, 486, 495], "ident": [161, 322, 334, 338, 339, 474, 479, 488, 491, 494, 497, 498, 499], "identif": 459, "identifi": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 250, 352, 366, 386, 387, 450, 479, 486, 489, 490, 491, 493, 494, 495, 498], "identitytran": [444, 445, 446, 447, 468], "identitytransform": 499, "idx": [127, 304], "idx_offset": 48, "ignor": [124, 127, 129, 133, 135, 187, 199, 216, 246, 248, 250, 304, 355, 371, 384, 436, 450, 466, 479, 486, 494, 499, 501], "ignore_exampl": 479, "ignore_list": 383, "ignore_w": [127, 304], "ii": 482, "iii": 482, "illustr": [462, 464, 488], "iloc": 484, "imag": [307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 459, 479], "imagin": [456, 459, 474], "immedi": [127, 304, 449, 485], "immut": 479, "impact": [435, 472, 487], "imperfect": 379, "implement": [23, 41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 181, 192, 210, 252, 260, 304, 329, 331, 359, 444, 450, 456, 474, 479, 480, 481, 483, 489, 492, 493, 495, 497, 498, 500], "impli": [456, 477, 482, 486, 491], "implicitli": 494, "import": [9, 12, 15, 18, 90, 99, 129, 246, 248, 317, 325, 371, 450, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501], "impos": [456, 457, 479, 486], "imposs": [488, 494], "imprint": [474, 499], "improv": [3, 4, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21, 439, 442, 448, 450, 475, 477, 479, 482, 487], "imput": [246, 248, 432, 436, 475, 477], "impute_mod": [246, 248, 250, 436, 495], "in_featur": [127, 304], "inabl": 482, "inaccuraci": [477, 479], "inact": [47, 160, 162, 199, 214, 479], "inactive_parameter_combin": [47, 214, 479], "inc": 498, "incident": 482, "includ": [65, 67, 124, 127, 129, 133, 135, 160, 189, 246, 304, 350, 351, 383, 434, 445, 454, 456, 469, 470, 472, 479, 480, 482, 483, 484, 486, 488, 501], "inclus": 482, "incom": [494, 499], "incompat": [71, 72, 73, 74, 75, 76, 103, 264, 446, 486], "incompatibilityerror": [34, 307], "incompatible_kei": [127, 304], "incompatibleacquisitionfunctionerror": 484, "incompatibleexplainererror": 489, "incomplet": [479, 484], "incompletemeasurementserror": 429, "inconsist": 479, "incorpor": [482, 484, 496, 501], "incorrect": 479, "incorrectli": 479, "increas": [11, 187, 250, 326, 472, 479, 483, 491, 498], "increment": 222, "incur": 482, "inde": 485, "indefinit": [187, 246], "indemn": 482, "indemnifi": 482, "indent": [375, 479], "independ": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 191, 246, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 453, 474, 479, 490, 492, 495, 496], "independentgaussiansurrog": [264, 282, 284, 286, 479], "index": [34, 41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 216, 250, 262, 338, 339, 371, 385, 386, 453, 454, 466, 468, 479, 484, 489, 491, 493, 495], "indexkernel": 479, "indic": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 94, 102, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 338, 339, 342, 344, 371, 380, 396, 402, 403, 416, 456, 466, 479, 482, 484, 488, 492, 495, 496], "indirect": [350, 351, 482], "indistinguish": 456, "individu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 55, 56, 119, 120, 127, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 246, 262, 304, 330, 390, 450, 457, 462, 479, 482, 485, 488, 489, 490, 492, 498, 499, 500], "induc": [47, 459], "induced_target": 474, "induced_wavelength": 474, "industri": 498, "ineffici": [222, 486], "inequ": [48, 214, 493], "inertia_": 371, "inf": [8, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 499], "infeas": [486, 488], "infer": [161, 472, 479, 493], "infin": 166, "infinit": [187, 188, 353, 395, 424, 425, 479, 491], "influenti": 498, "info": 479, "inform": [28, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 232, 236, 238, 299, 301, 304, 307, 371, 387, 402, 403, 434, 435, 436, 451, 456, 465, 466, 472, 474, 477, 479, 480, 482, 484, 488, 490, 491, 493, 497, 498, 500], "infring": 482, "ingest": [222, 246, 479, 491, 492], "ingredi": [456, 457, 486, 497], "inher": [23, 160, 255, 257, 259, 264, 268, 282, 284, 286, 288, 456, 496], "inherit": 480, "init": [127, 304, 371], "init_weight": [127, 304], "initi": [110, 111, 112, 113, 114, 115, 116, 117, 121, 127, 189, 191, 199, 204, 205, 206, 207, 209, 210, 222, 246, 250, 304, 371, 416, 432, 444, 445, 446, 447, 450, 451, 468, 472, 474, 475, 479, 481, 484, 485, 487, 491, 492, 494, 495, 498], "initial_data": [246, 250, 434, 472, 495], "initial_recommend": [189, 439, 450, 451, 453, 454, 459, 468, 469, 470, 477, 492], "initial_recommender_cl": 479, "initial_strategi": 479, "initial_typ": 453, "initialis": 371, "inject": [494, 497], "inner": [182, 385, 489, 492, 494], "innerhtml": 453, "inplac": [127, 304, 435, 472, 501], "input": [43, 44, 45, 79, 124, 127, 129, 133, 135, 141, 144, 145, 147, 155, 158, 214, 216, 222, 236, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 334, 352, 371, 373, 374, 379, 380, 381, 385, 388, 389, 391, 396, 397, 404, 409, 416, 429, 430, 431, 433, 453, 462, 472, 479, 490, 494, 495, 498, 499], "input_dim": 453, "input_label": 380, "inputtransform": 419, "insid": [326, 450, 453, 454, 478, 494, 497], "insight": [99, 450, 477, 479, 481, 500], "inspect": [361, 449, 456], "inspir": 499, "instabl": [479, 486], "instal": [210, 479, 480, 486, 487, 489, 491, 501], "instanc": [43, 44, 45, 55, 58, 99, 127, 189, 216, 304, 371, 404, 445, 450, 456, 457, 477, 478, 480, 484, 485, 486, 487, 489, 491, 493, 494, 495, 501], "instanti": [450, 485], "instead": [127, 184, 186, 187, 188, 189, 304, 366, 380, 388, 444, 446, 447, 477, 478, 479, 485, 486, 490, 491, 494, 495, 497, 498, 499, 501], "institut": [481, 482], "instruct": [477, 479, 500], "int": [9, 11, 12, 15, 17, 18, 23, 34, 37, 47, 48, 53, 99, 106, 107, 108, 111, 113, 114, 115, 116, 117, 124, 127, 129, 133, 135, 149, 162, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 246, 250, 252, 301, 302, 304, 307, 324, 371, 381, 390, 391, 410, 412, 413, 416, 417, 419, 444, 446, 447, 456, 459, 472, 479, 480, 491], "int64": 371, "integ": [37, 149, 216, 250, 466, 479, 480, 491], "integr": [17, 127, 304, 479, 480, 483, 485], "intend": [438, 449, 480, 492], "intens": 491, "intention": 482, "interact": [33, 34, 438, 477, 478, 485, 488, 494], "interchang": [456, 499], "interconnect": 485, "interest": [485, 489, 490, 491, 501], "interfac": [181, 260, 270, 307, 449, 451, 479, 482, 485, 488, 489, 497, 500], "intermedi": [207, 416], "intern": [34, 48, 59, 127, 187, 304, 433, 450, 479, 484, 486, 487, 491, 492, 493, 494, 499], "internship": 481, "interplai": 479, "interpol": [111, 278, 479, 497], "interpret": [9, 12, 15, 18, 216, 244, 318, 373, 454, 456, 469, 470, 472, 487, 493, 495, 497, 499], "interrupt": 69, "intersect": 466, "interv": [34, 47, 154, 160, 162, 255, 257, 259, 264, 268, 282, 284, 286, 288, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 461, 479, 485, 491, 494, 497, 499], "intrins": 498, "introduc": [371, 478, 479, 486, 491, 492, 495], "intuit": [485, 489, 497], "invalid": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 80, 127, 222, 304, 366, 417, 454, 469, 478, 479, 485, 486, 493], "invalid_config": 470, "invalid_surrogate_model": 454, "invalid_typ": 470, "invari": [55, 58, 59, 338, 339, 486], "invers": 494, "invert": [34, 385], "investig": [244, 474, 495, 496], "invok": [127, 304, 495, 500, 501], "involv": [34, 222, 262, 449, 456, 474, 477, 489, 490, 491, 494, 498, 499], "ipu": [127, 304], "irrelev": [456, 479, 486], "irrevoc": 482, "is_bound": [396, 479], "is_cardinality_fulfil": 479, "is_continu": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 140, 141, 142, 144, 145, 147, 154, 155, 158], "is_degener": 396, "is_discret": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 140, 141, 142, 144, 145, 147, 154, 155, 158], "is_empti": [214, 222, 402, 403, 479], "is_eq": 48, "is_finit": 479, "is_fully_unbound": 396, "is_half_bound": 396, "is_in_rang": [140, 141, 142, 144, 145, 147, 154, 155, 158], "is_inact": 479, "is_left_bound": 396, "is_mc": 479, "is_multi_output": [124, 129, 133, 135, 479], "is_norm": [307, 479], "is_numer": [140, 141, 142, 144, 145, 147, 154, 155, 158, 479], "is_right_bound": 396, "is_stat": [184, 186, 187, 188, 189, 479, 488], "isinst": 499, "iso": 453, "isol": 485, "isoxazol": 498, "issu": [263, 345, 358, 389, 479, 482, 495, 501], "item": [44, 140, 141, 142, 144, 145, 147, 154, 155, 158, 456, 459, 472, 491], "iter": [9, 12, 15, 18, 34, 44, 47, 119, 120, 127, 129, 133, 144, 145, 147, 158, 187, 188, 214, 216, 222, 246, 263, 304, 307, 329, 330, 331, 334, 348, 353, 358, 371, 377, 379, 381, 389, 394, 396, 428, 430, 431, 434, 444, 445, 446, 447, 450, 451, 459, 472, 474, 477, 479, 483, 485, 491, 492, 495, 496, 501], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 210, 214, 216, 222, 238, 240, 250, 252, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 338, 349, 357, 361, 396, 399, 402, 403, 433, 439, 449, 451, 456, 457, 459, 472, 474, 477, 478, 480, 482, 483, 484, 486, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501], "itself": [127, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 449, 478, 479, 497, 498], "j": [127, 304, 435, 477, 491, 498], "jackiepho": [434, 435, 436], "jan": 477, "januari": 482, "javadi": 481, "jin": 481, "join": [385, 478], "joint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 197, 199, 262, 485, 496], "joint_acq_valu": 485, "joint_acquisition_valu": [34, 197, 199, 479, 485], "jointli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 462, 485], "jonathan": 481, "journal": [371, 477], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403, 453, 454, 468, 469, 479, 500], "json_str": 494, "juli": 481, "julian": 481, "jump": [479, 498], "jun": 371, "jupyt": 453, "just": [459, 476, 479, 480, 494, 497, 499], "k": [155, 205, 371, 416, 433, 434, 435, 436, 438, 439, 441, 442, 450, 456, 462, 464, 465, 466, 479, 488, 492, 501], "karin": [477, 481], "kde": 451, "keep": [54, 158, 214, 222, 450, 461, 479, 480], "keep_var": [127, 304], "kei": [127, 282, 288, 294, 304, 352, 435, 480, 489], "kept": [385, 491], "kernel": [106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 268, 269, 270, 271, 272, 278, 280, 371, 439, 444, 445, 446, 447, 468, 479, 486, 498], "kernel_factori": [106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 268, 270, 271], "kernel_or_factori": 268, "kernel_s": [127, 304], "kernelexplain": [97, 99, 100, 103, 489], "kernelfactori": [268, 271, 272, 278, 280, 479], "keyword": [99, 127, 158, 304, 436, 439, 466, 472, 479, 484, 486, 493, 495], "kgaa": [477, 481], "kian": 498, "kickstart": 494, "kind": [199, 477, 479, 482, 486, 491, 492], "kiter": [444, 445, 446, 447], "klekotaroth": 152, "klekotarothfingerprint": 152, "kmean": [371, 439], "kmeansclusteringrecommend": [439, 492], "knob": 477, "know": [459, 461, 469, 477, 478, 490, 494, 498], "knowledg": [8, 11, 477, 479, 498, 499], "known": [474, 486, 488, 496, 498], "koller": 498, "kwarg": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 110, 112, 114, 119, 120, 121, 127, 170, 172, 173, 174, 175, 176, 177, 178, 181, 260, 265, 270, 304, 307, 367, 371, 381, 395], "kwargs_conform": [158, 367, 491], "kwargs_fingerprint": [158, 367, 491], "l": [127, 304], "l0": 37, "l1": 491, "l664": 280, "lab": 474, "label": [58, 59, 147, 158, 371, 380, 456, 457, 462, 477, 479, 486, 488, 493, 495], "labelcolor": 474, "labelpad": 451, "labels_": 371, "laboratori": 462, "lack": 474, "laggner": 152, "laggnerfingerprint": 152, "lambda": [444, 446, 447, 450, 456, 474, 496], "lambda_1": [453, 474], "lambda_2": [453, 474], "lambda_init": 453, "lanat": 489, "land": 479, "languag": [345, 457, 477], "larg": [158, 222, 371, 441, 442, 457, 479, 486, 487, 491, 495, 501], "larger": [111, 155, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 417, 439, 446, 474, 485, 486, 494, 498], "largest": [209, 416, 459, 483], "laser": [473, 475], "last": [187, 459, 480, 485, 492, 500], "last_call_tim": 449, "lastli": 451, "latent": 491, "later": [155, 478, 484, 485, 494], "latest": [188, 477, 480, 485], "latter": [23, 34, 127, 304, 338, 361, 371, 450, 456, 485, 490, 497, 498, 499], "law": [477, 482], "lawsuit": 482, "layer": [152, 499], "layeredfingerprint": 152, "layout": 479, "lazi": [224, 420, 479], "lazili": [479, 487], "lazyfram": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 224], "le": 442, "le_method": 480, "lead": [31, 89, 474, 479, 487, 494, 499], "lean": 480, "learn": [17, 251, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 371, 439, 444, 445, 446, 447, 459, 468, 475, 477, 479, 486, 489, 491, 496, 497, 499, 500], "least": [162, 187, 457, 477, 482, 484, 485], "leav": 494, "lee": 481, "left": [86, 87, 178, 246, 326, 327, 378, 386, 396, 445, 462, 474, 479, 490, 499], "left_df": 386, "leftov": 479, "legaci": [307, 479, 497], "legal": 482, "legend": [434, 436, 462, 474], "len": [445, 450, 451, 456, 457, 459], "length": [112, 187, 188, 255, 358], "lengthi": 485, "lengthscal": [111, 112, 113, 115, 116, 117], "lengthscale_initial_valu": [111, 112, 113, 115, 116, 117], "lengthscale_prior": [111, 112, 113, 115, 116, 117], "leq": [37, 326, 499], "less": [8, 31, 339, 381, 416, 450, 451, 459, 485, 486, 497, 501], "let": [127, 304, 433, 435, 449, 450, 451, 453, 454, 456, 457, 462, 464, 472, 474, 477, 484, 486, 490, 494, 497, 499], "level": [379, 479, 480, 484, 485, 486, 492, 494, 499], "leverag": [450, 484, 485, 492], "li": [162, 461, 491], "liabil": 482, "liabl": 482, "lib": 478, "librari": [478, 479], "licensor": 482, "lie": [34, 255, 257, 259, 264, 268, 282, 284, 286, 288], "liebig": [477, 481], "life": [477, 480, 481, 501], "lifecycl": 485, "ligand": [434, 435, 436, 438, 439, 450, 477, 489, 491], "ligand_data": 450, "ligand_smil": 450, "like": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 207, 214, 216, 222, 240, 250, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 341, 371, 396, 402, 403, 451, 456, 459, 461, 477, 478, 479, 480, 484, 485, 486, 488, 494, 495, 498, 499, 501], "likelihood": 255, "lime": [99, 102, 489], "limetabular": [97, 98, 489], "limit": [8, 278, 451, 477, 481, 482, 490, 493, 499, 500], "line": [127, 304, 375, 396, 434, 436, 450, 459, 479, 480, 483, 485, 491, 495, 497, 498], "linear": [48, 110, 127, 214, 282, 304, 439, 440, 474, 475, 479, 480, 489, 493, 497], "linear_model": 453, "linear_regressor": 453, "linear_transform": 479, "linearkernel": 479, "linearli": [278, 326, 479, 497], "lineplot": [433, 434, 435, 436, 450, 472, 474], "lingo": 152, "lingofingerprint": 152, "link": [57, 478, 479, 482, 491], "linspac": [444, 445, 446, 447, 451, 453, 454, 456, 462, 465, 466, 468, 472, 474, 497, 499, 501], "lint": [477, 479, 480], "linter": [479, 480], "list": [37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 161, 167, 187, 188, 214, 216, 222, 223, 224, 227, 228, 229, 246, 250, 252, 304, 350, 351, 352, 360, 367, 382, 383, 384, 387, 416, 434, 439, 444, 445, 446, 447, 451, 456, 457, 459, 465, 466, 472, 477, 479, 480, 482, 486, 490, 491, 492, 493, 495], "liter": [34, 99, 187, 246, 248, 250, 255, 257, 258, 259, 262, 264, 268, 282, 284, 286, 288, 379, 416, 480], "literatur": 479, "litig": 482, "littl": 478, "live": [127, 304, 496], "liver": [495, 498], "ll": 488, "ller": 477, "ln": 499, "load": [127, 304, 420, 450, 453, 469, 470, 478, 479], "load_state_dict": [127, 304], "loc": [176, 177, 434, 436, 462, 484], "local": [127, 304, 478, 479, 480, 487, 489, 500], "local_metadata": [127, 304], "locat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 371, 396, 402, 403, 484, 487, 498, 499], "lock": 479, "lockfil": 479, "log": [176, 307, 439, 479], "logarithm": [4, 12, 13, 15, 16, 307, 323], "logarithmictransform": [497, 499], "logei": [4, 479], "logic": [182, 262, 380, 433, 461, 479, 486, 492, 495, 497, 499, 501], "lognormalprior": 479, "logo": 479, "long": [485, 494, 495], "longer": [160, 479, 487], "look": [127, 246, 248, 304, 439, 456, 459, 478, 483, 485, 486, 488, 489, 494, 495, 497], "look_up_target": 246, "lookup": [244, 246, 250, 252, 380, 386, 432, 433, 451, 462, 465, 474, 475, 479, 487, 489, 500], "lookup_df": 248, "lookup_test_task": 472, "lookup_training_task": 472, "lookup_valu": [441, 442, 451, 465, 466], "lookup_withmiss": 436, "loop": [244, 246, 252, 444, 445, 446, 447, 450, 479, 484, 489, 495, 500, 501], "loss": [461, 482, 499], "lost": 494, "lot": 464, "low": [278, 459, 477, 478, 479, 489, 491, 494], "lower": [162, 178, 396, 434, 436, 451, 472, 486, 491, 497], "lower_bound": 493, "lower_threshold": 162, "lst_exclud": 382, "lt": 478, "luxuri": 485, "m": [127, 304, 456, 477], "m1": 478, "mac": 478, "macc": 152, "maccsfingerprint": 152, "machin": [459, 478, 479, 480, 483, 487, 491, 497, 498], "machineri": [23, 199, 478, 479, 480, 488, 498, 501], "made": [34, 90, 127, 246, 304, 416, 436, 477, 478, 482, 486, 487, 495], "magic": 498, "magnitud": [318, 378, 379, 486, 499, 501], "mai": [34, 47, 124, 127, 129, 133, 135, 216, 304, 357, 371, 476, 477, 482, 485, 488, 494, 495, 496, 497], "mail": 482, "main": [33, 34, 477, 479, 486], "maintain": [292, 480, 488, 490], "major": [479, 495], "make": [59, 127, 199, 255, 257, 259, 264, 268, 282, 284, 286, 288, 290, 291, 292, 304, 345, 378, 380, 434, 436, 439, 441, 456, 457, 474, 477, 478, 479, 480, 482, 484, 485, 486, 488, 489, 491, 494, 496, 498, 501], "make_base_structure_hook": 479, "make_explainer_for_surrog": 99, "malfunct": 482, "manag": [33, 214, 215, 216, 222, 413, 479, 482, 495], "mandatori": [476, 479], "mani": [199, 417, 456, 465, 466, 477, 485, 486, 491, 494, 497, 498, 499], "manipul": [479, 487], "manner": 487, "manual": [466, 478, 479, 494, 496, 497], "map": [147, 152, 158, 248, 250, 262, 317, 355, 371, 380, 419, 434, 435, 436, 495, 497, 499], "mapfingerprint": 152, "mapl": [97, 98, 99, 102, 489], "mapped_to_on": 317, "mapped_to_zero": 317, "maranzana": 371, "marcel": 477, "margin": [307, 326, 479, 497, 499], "mark": [482, 485, 498, 500], "markdown": [454, 469, 470, 479], "marker": [433, 434, 435, 436, 450, 472, 474, 479], "markers": [433, 435, 450, 462, 472], "market": 459, "marketplac": 479, "martin": [477, 481], "mask_bad1": 444, "mask_bad2": 444, "mask_bad3": 444, "mask_good": [444, 486], "mass": 172, "master": 280, "match": [34, 91, 93, 141, 144, 145, 147, 155, 158, 161, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 299, 301, 307, 355, 357, 386, 387, 430, 449, 451, 461, 466, 477, 479, 484, 485, 488, 494, 495, 500], "match_": 497, "match_absolut": [307, 479, 490, 494, 497], "match_attribut": 479, "match_bel": [307, 461, 474, 479, 490, 497], "match_pow": [307, 479, 497], "match_quadrat": [307, 479, 497], "match_triangular": [307, 479, 497], "match_valu": [307, 461, 490, 494, 497], "materi": [459, 481, 498], "matern": 111, "maternkernel": 479, "math": [450, 456], "mathemat": [313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 474, 479, 499], "mathia": 477, "matmin": 478, "matplotlib": [434, 436, 451, 462, 474, 479], "matrix": 371, "matter": [456, 461, 464, 480, 490, 497, 499], "max": [307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 378, 396, 434, 436, 451, 459, 474, 477, 479, 490, 497, 499], "max_cardin": [37, 47, 53, 486], "max_column": [390, 456], "max_colwidth": 390, "max_it": [371, 453], "max_n_subspac": [199, 479, 486], "max_nonzero": 222, "max_row": [390, 456], "max_sum": [222, 456, 493], "max_yield": [434, 436], "maxim": [6, 9, 12, 15, 18, 127, 438, 451, 459, 461, 477, 479, 489], "maximum": [6, 37, 47, 53, 63, 158, 199, 214, 216, 222, 307, 318, 371, 390, 456, 457, 479, 486, 491, 493], "mc": [459, 484], "mc_obj": 127, "mcacquisitionobject": [124, 127, 129, 133, 135, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331], "md": 479, "me2pph": [434, 435, 436], "mean": [5, 8, 23, 34, 59, 131, 205, 244, 246, 248, 250, 255, 257, 258, 259, 262, 264, 268, 282, 284, 286, 288, 292, 436, 439, 453, 459, 461, 462, 479, 480, 482, 483, 484, 485, 486, 488, 490, 491, 492, 494, 496, 497, 500], "meaning": [402, 403, 490], "meaningless": [456, 483], "meanpredictionsurrog": [292, 439, 496], "meantim": [480, 486], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 77, 85, 99, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 244, 246, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 299, 301, 307, 381, 386, 402, 429, 434, 435, 436, 439, 441, 442, 444, 445, 446, 447, 449, 450, 451, 461, 465, 466, 468, 474, 476, 477, 479, 480, 483, 484, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 500], "measurablemetadata": [140, 141, 142, 144, 145, 147, 154, 155, 158, 299, 301, 307, 401, 479], "mechan": [34, 69, 127, 129, 131, 244, 247, 248, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 357, 371, 385, 397, 416, 433, 449, 450, 451, 472, 479, 482, 484, 488, 489, 491, 493, 494, 496, 498, 500], "mechanist": 477, "media": [482, 491, 498], "medic": 484, "mediocr": 497, "medium": [454, 468, 477, 482, 491], "medoid": [206, 371, 479, 492], "medoid_indices_": 371, "meet": [327, 482, 499], "mem_estim": 501, "member": [127, 304, 361, 486, 491], "memo": [127, 304], "memori": [11, 127, 216, 221, 222, 304, 371, 479, 486, 487, 500], "memory_format": [127, 304], "memorys": [216, 222, 501], "mention": 483, "merchant": 482, "merck": [477, 481], "mere": [482, 490], "merg": 480, "meshgrid": [462, 472], "messag": [91, 450], "meta": [34, 86, 184, 186, 187, 188, 189, 192, 444, 445, 446, 447, 468, 477, 479, 500], "metadata": [34, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 214, 222, 299, 301, 307, 371, 402, 474, 479, 481], "metadatarequest": 371, "metarecommend": [186, 187, 188, 189, 479, 488], "methan": 494, "methanol": 456, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 94, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 221, 222, 240, 255, 257, 259, 260, 262, 264, 268, 270, 271, 278, 280, 282, 284, 286, 288, 291, 296, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 341, 343, 345, 357, 361, 371, 396, 402, 403, 415, 416, 417, 419, 451, 454, 461, 469, 470, 476, 479, 481, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499], "methodtyp": [449, 450, 451], "methyldiphenylphosphin": [434, 435, 436], "methylisoxazol": 498, "metric": [371, 459, 491], "mhfp": 152, "mhfpfingerprint": 152, "micromamba": 479, "mid": 499, "middl": 488, "midpoint": [307, 327, 499], "might": [55, 59, 158, 216, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 435, 439, 441, 445, 466, 472, 478, 480, 484, 485, 486, 487, 489, 493, 495, 498, 500, 501], "migrat": 479, "mimic": [104, 168, 486], "min": [307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 378, 396, 474, 477, 479, 499], "min_cardin": [37, 47, 53, 486], "min_nonzero": 222, "mind": 459, "miniconda": 479, "minim": [6, 307, 371, 433, 441, 442, 444, 445, 446, 447, 451, 461, 462, 465, 466, 468, 472, 479, 486, 490, 493, 494, 500], "minimum": [37, 47, 53, 63, 82, 155, 214, 216, 222, 307, 334, 416, 479, 486], "minimumcardinalityviolatedwarn": [479, 486], "minor": [479, 500], "mirror": [9, 12, 15, 18, 485, 494], "misc": [402, 403], "miss": [127, 246, 248, 304, 388, 429, 430, 431, 436, 479, 480, 484], "missing_kei": [127, 304], "mistak": [34, 480], "mix": [252, 456, 457, 477, 486, 491, 494, 498], "mixin": 240, "mixtur": [204, 475, 479, 486, 491, 492, 498, 501], "mobil": 479, "mode": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 127, 147, 158, 187, 246, 255, 257, 258, 259, 262, 264, 268, 282, 284, 286, 288, 304, 307, 355, 432, 474, 475, 477, 478, 479, 485, 492], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 80, 83, 99, 103, 104, 127, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 255, 257, 259, 260, 261, 262, 263, 264, 268, 282, 284, 286, 288, 292, 296, 304, 407, 441, 442, 452, 462, 472, 477, 479, 481, 483, 484, 485, 490, 491, 492, 494, 495, 497, 498, 500], "model_cl": 296, "model_cluster_num_parameter_nam": [204, 205, 206, 207], "model_from_config": 453, "model_from_python": 453, "model_json": 453, "model_param": [204, 205, 206, 207, 282, 286, 288, 454, 479], "modellist": 262, "modelnottrainederror": [255, 257, 259, 264, 268, 282, 284, 286, 288], "modern": 307, "modif": [127, 304, 478, 482], "modifi": [127, 188, 248, 292, 304, 377, 378, 379, 479, 482, 501], "modul": [0, 1, 35, 95, 96, 104, 122, 127, 138, 156, 168, 179, 182, 192, 195, 200, 212, 230, 231, 244, 253, 256, 266, 273, 293, 297, 300, 304, 311, 336, 340, 368, 369, 393, 400, 405, 420, 423, 477, 478, 479, 480, 499], "modular": 480, "molecul": [57, 158, 366, 456, 491], "molecular": [367, 491], "moment": [252, 278, 480, 500], "monitor": 479, "monkeypatch": 478, "monoton": 313, "monotonictransform": [317, 319, 321, 322, 323, 325], "mont": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 84, 127, 250, 433, 435, 436, 450, 459, 472, 474, 479, 484, 495], "monte_carlo_run": [250, 450, 474], "mordr": [152, 158, 434, 435, 436, 438, 439, 445, 450, 454, 456, 469, 470, 477, 479, 486, 491], "mordredcommun": 479, "mordredfingerprint": [152, 491], "more": [8, 11, 31, 59, 67, 87, 127, 158, 187, 188, 214, 216, 222, 229, 246, 292, 304, 307, 361, 371, 375, 392, 416, 428, 436, 439, 451, 456, 457, 461, 474, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 491, 493, 494, 495, 496, 497, 499, 501], "morgan": 491, "morgan_fp": [152, 479], "mors": [152, 494], "morsefingerprint": 152, "most": [222, 246, 437, 459, 477, 480, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501], "motiv": 479, "mous": 484, "move": [9, 12, 15, 18, 127, 160, 304, 479, 494], "mpl_toolkit": 451, "mplot3d": 451, "mqn": 152, "mqnsfingerprint": 152, "mse": 459, "mtia": [127, 304], "mu": [176, 177], "much": [435, 486, 490, 491], "multi": [99, 127, 132, 246, 254, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 304, 461, 462, 475, 477, 479, 481, 498, 500], "multiarmedbandit": 459, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 43, 124, 129, 133, 135, 249, 250, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 317, 379, 434, 435, 436, 445, 456, 459, 477, 479, 484, 486, 489, 490, 496, 497, 498, 500], "multiplex": 474, "multipli": [120, 331, 499], "multiplicativetransform": 499, "multitask": 479, "must": [55, 124, 129, 133, 135, 216, 222, 248, 252, 325, 357, 371, 379, 430, 439, 449, 450, 456, 459, 474, 479, 480, 482, 483, 486, 487, 488, 489, 490, 491, 495], "mutual": 495, "my_attribut": 480, "my_valu": 487, "mypi": [345, 358, 477, 479, 480], "mystr": 480, "n": [28, 127, 255, 304, 339, 362, 416, 434, 435, 436, 438, 439, 444, 445, 446, 447, 454, 456, 459, 465, 466, 468], "n_arm": 459, "n_batches_don": 34, "n_cluster": [205, 206, 371], "n_combin": 456, "n_combinations_actu": 456, "n_combinations_expect": 456, "n_compon": 204, "n_doe_iter": [246, 250, 252, 433, 434, 435, 436, 450, 451, 472, 474, 495], "n_duplic": 456, "n_estim": 454, "n_featur": 371, "n_features_new": 371, "n_fits_don": 34, "n_grid_point": 462, "n_inactive_parameter_combin": [47, 214, 479], "n_index": 371, "n_interrupted_campaign": 450, "n_iter": [441, 442, 444, 445, 446, 447, 459], "n_mc_iter": [250, 252, 433, 435, 436, 450, 472, 474, 487, 495], "n_mc_run": 459, "n_mc_sampl": 23, "n_output": [31, 124, 129, 133, 135, 371, 479], "n_permut": 456, "n_pis_ov": 450, "n_pis_over_requir": 450, "n_point": 417, "n_queri": 371, "n_raw_sampl": [199, 479, 492], "n_restart": [199, 479, 492], "n_row": 381, "n_sampl": [31, 371, 416], "n_task": 216, "n_task_param": 479, "n_training_data": 462, "n_wrong_sum": 456, "na": 484, "nactivevalu": [444, 445, 446, 447, 468], "naiv": [191, 284, 292, 439, 479, 493], "naivehybridrecommend": 479, "naivehybridspacerecommend": [466, 479, 492], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 47, 67, 90, 124, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 163, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 228, 250, 262, 264, 299, 301, 304, 307, 338, 349, 355, 356, 357, 366, 367, 371, 375, 382, 386, 387, 388, 408, 422, 428, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 461, 462, 464, 465, 466, 468, 469, 470, 472, 474, 477, 479, 480, 482, 484, 485, 486, 487, 490, 493, 494, 495, 496, 497, 498, 499, 501], "name_or_abbr": [349, 356], "named_buff": [127, 304], "named_children": [127, 304], "named_modul": [127, 304], "named_paramet": [127, 304], "namedtupl": [127, 304, 459], "namespac": [479, 480], "nan": [166, 255, 388, 396, 424, 426, 427, 430, 431, 444, 445, 446, 447, 468, 479, 484], "nativ": [453, 479, 496], "natur": [286, 435, 480, 486, 492, 494, 497], "navig": [453, 477, 485], "nbase": 367, "nbsp": 453, "nbviewer": 453, "nd": 477, "ndarrai": [9, 12, 15, 18, 162, 371, 380, 391, 396, 416, 451, 459, 462, 479, 495], "ne": 456, "necessari": [387, 449, 461, 479, 480, 485, 486, 490, 491, 493, 495, 496, 497], "necessarili": [246, 482, 485, 486, 493, 498, 499], "need": [28, 34, 127, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 252, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 304, 357, 386, 387, 434, 435, 436, 439, 444, 447, 449, 451, 453, 456, 459, 472, 474, 476, 477, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 501], "neg": [17, 462, 479, 486, 497], "negat": [6, 48, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 472, 474, 479, 498, 499], "neglig": 482, "neither": [8, 252, 379], "neq": 37, "nest": [127, 304, 371, 375, 485, 500], "net": [127, 304], "net_b": [127, 304], "net_c": [127, 304], "network": [127, 304], "neural": 498, "neutral": 8, "never": [446, 484], "nevertheless": [361, 478], "new": [34, 50, 51, 127, 187, 189, 214, 248, 263, 304, 338, 371, 384, 385, 388, 438, 450, 451, 468, 477, 479, 480, 485, 486, 496, 497, 498, 499, 500], "new_measur": 489, "new_rec": 485, "newli": [477, 480, 488, 498], "next": [34, 433, 449, 451, 456, 457, 461, 462, 468, 472, 477, 483, 484, 485, 492, 494, 499], "nextelements": 453, "ngboost": [286, 439, 479], "ngboostmodel": 454, "ngboostsurrog": [439, 454, 479, 496], "nice": [451, 478], "nicknam": 366, "nm": 474, "nn": [127, 304], "no_duplicates_constraint": 456, "no_grad": [127, 304], "nois": [246, 378, 379, 472, 479, 500], "noise_level": 379, "noise_perc": [246, 250, 495], "noise_ratio": 378, "noise_std": 472, "noise_typ": 379, "noisi": [15, 16, 18, 19, 381, 477, 479, 498], "non": [66, 67, 98, 124, 127, 129, 133, 135, 184, 186, 187, 188, 189, 191, 216, 246, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 355, 357, 361, 378, 416, 417, 424, 425, 426, 430, 431, 456, 477, 479, 482, 484, 486, 488, 489, 493, 494, 497, 500], "non_block": [127, 304], "nondominatedpartit": 31, "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 77, 85, 90, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 219, 222, 225, 228, 229, 240, 246, 248, 250, 252, 255, 257, 259, 260, 262, 264, 268, 271, 282, 284, 286, 288, 296, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 342, 344, 357, 367, 371, 382, 383, 384, 390, 394, 396, 401, 402, 403, 404, 419, 424, 425, 426, 427, 428, 429, 430, 431, 439, 444, 445, 446, 447, 449, 450, 451, 453, 454, 468, 484, 493, 497, 499, 500], "nonetheless": 498, "nonlinear": [40, 214, 474, 497], "nonpredict": [202, 204, 205, 206, 207, 209, 210, 211], "nonpredictiverecommend": [207, 210, 211, 479], "nonzero": [37, 47, 222, 479], "noqa": [127, 304, 444, 480], "nor": [8, 379, 476], "norecommenderslefterror": [187, 188], "noreturn": [191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 233, 234, 265], "normal": [129, 175, 176, 177, 307, 444, 446, 447, 478, 479, 482, 493, 499, 500], "normalize_input_dtyp": 479, "normalized_": 497, "normalized_ramp": [307, 461, 479, 484, 490, 497], "normalized_sigmoid": [307, 479, 484, 490, 497], "normalprior": 479, "not_a_param": 454, "notabl": [479, 488, 496], "notat": 499, "note": [37, 47, 59, 127, 216, 246, 250, 252, 263, 264, 304, 371, 378, 379, 434, 435, 436, 439, 445, 449, 453, 454, 456, 461, 465, 466, 468, 469, 470, 476, 477, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 499, 500], "notebook": 453, "noteworthi": 485, "noth": [17, 34, 37, 45, 47, 48, 53, 88, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 189, 191, 197, 199, 204, 205, 206, 207, 210, 214, 216, 222, 255, 268, 282, 286, 288, 299, 301, 326, 402, 403, 482, 491], "notic": [449, 474, 480, 482, 494, 496, 497, 499], "notimplementederror": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 160, 229, 233, 234, 252, 255, 257, 259, 263, 264, 268, 282, 284, 286, 288], "notwithstand": 482, "now": [433, 434, 435, 436, 438, 439, 444, 446, 449, 450, 451, 456, 457, 459, 461, 462, 464, 468, 469, 472, 474, 476, 477, 479, 498, 501], "np": [371, 441, 442, 444, 445, 446, 447, 451, 453, 454, 456, 457, 459, 462, 464, 465, 466, 468, 472, 474, 484, 486, 491, 495, 497, 501], "nrecommend": [438, 439, 465, 466], "nu": 111, "num": [385, 399], "num_disc_1": 485, "num_experi": [246, 433, 434, 435, 436, 450, 472, 474], "num_fantasi": 11, "num_featur": [127, 304], "num_parameter_1": 447, "num_parameter_2": 447, "num_parameter_3": 447, "num_parameter_4": 447, "num_parameter_5": 447, "num_parameter_6": 447, "num_sampl": 116, "num_valu": 493, "number": [11, 17, 23, 34, 47, 116, 124, 127, 129, 133, 135, 158, 181, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 246, 250, 252, 255, 304, 346, 371, 381, 390, 396, 399, 411, 416, 417, 434, 435, 436, 441, 442, 444, 445, 446, 447, 451, 456, 459, 465, 472, 477, 478, 479, 483, 485, 486, 490, 491, 493, 494, 495, 499, 501], "numer": [9, 12, 15, 18, 34, 37, 38, 39, 40, 41, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 89, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 214, 222, 248, 307, 310, 378, 379, 386, 417, 430, 431, 433, 438, 441, 456, 457, 461, 474, 477, 479, 486, 487, 489, 490, 491, 493, 495, 497, 499], "numerical_measurements_must_be_within_toler": [34, 430, 479, 485], "numerical_onli": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61], "numericalcontinuousparamet": [48, 65, 160, 214, 433, 441, 442, 457, 461, 462, 464, 466, 472, 474, 493, 494, 495, 500], "numericaldiscreteparamet": [222, 434, 435, 436, 438, 439, 441, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 465, 466, 468, 469, 470, 472, 477, 493, 494, 495, 500, 501], "numericaltarget": [129, 133, 248, 310, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 450, 451, 453, 454, 461, 462, 465, 466, 468, 469, 470, 472, 474, 477, 479, 484, 490, 494, 495, 499, 500], "numericcontinu": 466, "numparam1": 447, "numparam2": 447, "numparam3": 447, "numparam4": 447, "numparam5": 447, "numparam6": 447, "numpi": [162, 371, 380, 391, 396, 406, 408, 441, 442, 444, 445, 446, 447, 451, 453, 454, 456, 457, 459, 462, 464, 465, 466, 468, 472, 474, 479, 484, 486, 495, 497, 501], "nuniqu": 456, "nyou": [465, 466], "o": [127, 304, 371, 433, 434, 435, 436, 438, 439, 442, 444, 445, 446, 447, 450, 451, 454, 456, 459, 462, 472, 474, 477, 486, 487, 491], "o2": [434, 435, 436], "obj": [165, 166, 167, 234, 484], "obj_pr": 484, "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 127, 129, 131, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 162, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 223, 224, 232, 234, 235, 238, 240, 255, 257, 259, 260, 262, 264, 268, 271, 282, 284, 286, 288, 295, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 341, 345, 355, 357, 371, 379, 386, 387, 389, 392, 396, 400, 401, 402, 403, 419, 428, 429, 433, 438, 449, 450, 451, 453, 454, 459, 462, 464, 466, 469, 470, 474, 478, 479, 480, 482, 484, 486, 488, 489, 492, 493, 495, 496, 497, 499, 500, 501], "objective_json": 494, "oblig": 482, "observ": [244, 255, 257, 259, 264, 268, 282, 284, 286, 288, 459, 474, 495, 497], "obsolet": 479, "obtain": [246, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 435, 451, 459, 462, 472, 477, 479, 485, 489, 490, 494, 497, 498], "oc": [434, 435, 436, 438, 439], "oc1": [434, 435, 436], "occur": [58, 474, 480], "occurr": [484, 486], "octanol": [486, 491], "off": [8, 252, 362, 445, 479, 484, 486, 487, 490], "offer": [357, 451, 456, 459, 461, 465, 476, 477, 478, 482, 483, 486, 488, 491, 492, 494, 495, 496, 497, 498, 501], "offset": [48, 114], "offset_initial_valu": 114, "offset_prior": 114, "often": [313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 457, 459, 478, 483, 486, 488, 489, 491, 494, 499, 501], "oftentim": [494, 495], "oh": [144, 149, 435, 445, 454, 459, 468, 469, 470, 477, 493, 494], "old": [498, 500], "omit": [9, 12, 15, 18, 197, 199, 250, 307, 357, 449, 477, 493, 494], "onc": [127, 250, 304, 450, 461, 491, 495], "onclick": 453, "one": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 67, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 170, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 229, 240, 246, 248, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 292, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 333, 338, 339, 375, 381, 396, 402, 403, 434, 435, 436, 439, 441, 456, 459, 470, 472, 474, 476, 477, 478, 479, 480, 482, 484, 485, 486, 488, 490, 491, 493, 494, 495, 496, 497, 498, 499], "onehot": 435, "ones": [127, 216, 304, 386, 435, 466, 479, 484, 497, 498, 499], "ongo": [450, 480, 498], "onli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 210, 214, 216, 222, 240, 248, 252, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 292, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 357, 358, 361, 371, 375, 386, 388, 396, 402, 403, 416, 417, 434, 439, 444, 445, 450, 451, 453, 454, 456, 461, 465, 466, 472, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501], "onlin": 459, "onnx": [263, 264, 407, 452, 477, 479, 496], "onnx_input_nam": [264, 453], "onnx_str": [264, 453, 479], "onto": [9, 12, 15, 18, 474, 480], "open": [34, 47, 160, 162, 255, 257, 259, 264, 268, 282, 284, 286, 288, 480], "opentelemetri": 479, "oper": [45, 48, 56, 127, 255, 257, 259, 264, 268, 282, 284, 286, 288, 292, 304, 310, 380, 405, 441, 442, 446, 447, 456, 457, 474, 478, 479, 484, 486, 487, 488, 489, 492, 494, 500], "operator_convert": 453, "opposit": 486, "optic": 474, "optim": [14, 23, 34, 47, 48, 78, 127, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 244, 246, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 435, 437, 438, 441, 442, 450, 451, 456, 459, 466, 479, 481, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500], "optimize_acqf": [48, 199], "optimize_acqf_": 48, "optimize_acqf_discret": 199, "optimize_acqf_mix": 199, "optimum": 474, "option": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 90, 95, 99, 110, 111, 112, 113, 114, 115, 116, 117, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 246, 250, 252, 282, 286, 288, 299, 301, 304, 307, 357, 367, 371, 382, 383, 384, 436, 439, 453, 454, 459, 461, 478, 479, 480, 483, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 499, 501], "oracl": 495, "orang": 474, "orchestr": [480, 485], "order": [127, 216, 222, 304, 450, 459, 476, 477, 479, 480, 485, 486, 491, 494, 497, 498], "ordereddict": [127, 304], "ordin": [325, 497], "org": [280, 345, 384, 453, 477, 482], "organ": 480, "origin": [28, 34, 160, 338, 339, 352, 371, 380, 389, 468, 476, 479, 480, 482, 490, 492, 494], "originalhtml": 453, "originalstyl": 453, "originalwidth": 453, "orthogon": 480, "oserror": 478, "other": [55, 118, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 214, 299, 301, 304, 307, 339, 434, 436, 438, 439, 441, 442, 450, 457, 459, 461, 466, 472, 474, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501], "otherwis": [48, 63, 127, 140, 141, 142, 144, 145, 147, 154, 155, 158, 210, 304, 389, 416, 482, 483, 488, 498], "our": [433, 444, 446, 449, 450, 451, 454, 456, 457, 459, 461, 462, 464, 465, 466, 469, 470, 472, 474, 477, 480, 483, 485, 486, 488, 494, 495], "out": [127, 222, 304, 325, 416, 472, 477, 482, 490, 495, 498], "out_featur": [127, 304], "out_par": 462, "out_y0": 462, "out_y1": 462, "outcom": [127, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 304, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 435, 477, 484, 491, 497], "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 99, 121, 124, 127, 129, 133, 135, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 371, 379, 380, 381, 433, 461, 462, 472, 474, 478, 479, 481, 495, 497, 499, 500], "output_label": 380, "output_nam": [124, 129, 133, 135], "outputscal": 121, "outputscale_initial_valu": 121, "outputscale_prior": 121, "outsid": [34, 160, 188, 255, 257, 259, 264, 268, 282, 284, 286, 288, 292, 307, 326, 479, 494, 497], "outstand": 482, "over": [34, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 214, 250, 304, 456, 474, 476, 479, 483, 485, 487, 488, 497, 498], "overal": [216, 453, 454, 456, 457, 459, 479, 480, 485, 489, 490, 498], "overhead": 487, "overlai": 474, "overlap": [66, 67, 160, 441, 442, 486], "overload": 499, "overrid": [127, 304, 449, 479], "overridden": [449, 480], "overview": [477, 481, 494], "overwrit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403], "overwritten": 466, "own": [127, 191, 304, 433, 457, 477, 478, 479, 480, 482, 486, 491, 497], "owner": 482, "ownership": 482, "p": [326, 433, 434, 435, 436, 438, 439, 441, 442, 449, 451, 465, 472, 474, 480, 488, 489, 494, 496, 499, 501], "p1": [325, 493, 494, 495, 499], "p1_json": 494, "p1_via_json": 494, "p2": [325, 493, 494, 495, 499], "p2_json": 494, "p2_via_json": 494, "p3": 494, "p3c4": [434, 435, 436], "p_cont": 493, "p_disc": 493, "p_g1_amount": 457, "p_g2_amount": 457, "p_g3_amount": 457, "p_i": 37, "pack": 494, "packag": [99, 152, 210, 478, 479, 480, 487, 491, 495, 496, 501], "page": [453, 477, 479, 480, 488], "pair": [325, 338, 462, 477, 491], "pairwis": 371, "pairwise_dist": 371, "pam": [206, 371], "pamclusteringrecommend": 492, "panda": [54, 223, 242, 243, 248, 366, 371, 391, 433, 434, 435, 436, 441, 442, 444, 450, 451, 456, 457, 461, 462, 465, 466, 472, 474, 479, 484, 486, 487, 491, 493, 494, 495, 497], "panic": 476, "paper": 477, "parallel": [250, 479, 480, 500], "parallel_run": [250, 487], "param": [127, 304, 371, 452, 453, 475], "param1": [493, 495], "param2": [493, 495], "param_1": 484, "param_2": 484, "param_bounds_comp": 479, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 70, 87, 91, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 144, 145, 147, 149, 150, 151, 152, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 218, 221, 222, 223, 224, 227, 228, 229, 240, 244, 246, 248, 250, 252, 255, 257, 259, 262, 264, 268, 271, 278, 280, 282, 284, 286, 288, 290, 292, 294, 296, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 334, 338, 339, 350, 351, 352, 355, 357, 360, 361, 362, 365, 366, 367, 371, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 399, 402, 403, 404, 409, 410, 412, 413, 416, 417, 419, 428, 429, 430, 431, 433, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 459, 461, 462, 464, 465, 466, 468, 469, 470, 472, 474, 477, 479, 480, 486, 487, 488, 494, 495, 496, 497, 498, 499, 500], "parameter": [172, 173, 174, 175, 176, 177, 178, 499], "parameter_json": 494, "parameter_nam": [214, 216, 222, 466], "parameter_names_in_cardinality_constraint": 214, "parameterencod": [141, 149, 150, 152, 155], "parametr": 486, "paramnam": 453, "paramprefix": 453, "parent": [127, 304, 480], "parentel": 453, "pareto": [14, 31, 133, 460, 475, 477, 479, 490], "paretoobject": [462, 477, 479, 489, 500], "park": 371, "pars": [397, 479], "parser": 479, "part": [17, 28, 34, 43, 75, 127, 192, 214, 216, 222, 304, 431, 454, 466, 469, 470, 472, 474, 479, 480, 482, 483, 484, 485, 486, 491, 492, 493, 494, 500, 501], "parti": [369, 482, 495], "partial": [28, 124, 129, 133, 135, 450, 477, 479, 500], "particl": 498, "particular": [34, 127, 222, 244, 304, 449, 462, 466, 476, 477, 478, 480, 482, 485, 490, 491, 493, 494, 495], "particularli": [357, 485], "partit": [9, 12, 31, 206, 250, 252, 479, 492, 495], "partitionexplain": [97, 100], "pass": [34, 41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 73, 99, 124, 127, 129, 133, 135, 158, 204, 205, 206, 207, 216, 222, 234, 268, 282, 286, 288, 304, 325, 371, 381, 387, 456, 468, 472, 479, 480, 484, 488, 489, 491, 494, 497, 499], "passthrough": [30, 125, 218, 272, 335, 404], "past": 453, "patch": [450, 479], "patent": 482, "path": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 90, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403, 435, 456, 479, 480, 487, 499, 501], "pattern": [152, 480, 498], "patternfingerprint": 152, "pd": [34, 197, 199, 222, 248, 262, 338, 339, 385, 433, 434, 435, 436, 441, 442, 444, 450, 451, 456, 457, 461, 462, 465, 466, 472, 474, 479, 484, 486, 488, 491, 493, 494, 495, 497], "peak": [326, 474, 499], "peek": 494, "penal": [461, 497], "penalti": [497, 499], "pend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 477, 479, 500], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 479, 484, 485], "per": [246, 262, 434, 435, 436, 439, 456, 465, 472, 479, 490, 491, 493, 495], "percent": [246, 482], "percentag": [199, 379, 439, 444, 445, 446, 447, 456, 468, 472, 492], "perf_count": 449, "perfectli": 494, "perform": [127, 199, 246, 304, 371, 386, 435, 444, 445, 446, 447, 451, 456, 469, 472, 474, 476, 477, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 495, 496, 498, 500], "period": [112, 497], "period_length_initial_valu": 112, "period_length_prior": 112, "periodickernel": 479, "perm_inv_constraint": 456, "perman": [477, 500], "permiss": [477, 482], "permut": [55, 58, 59, 339, 479, 486], "permutation_invari": 55, "permutationexplain": [97, 100], "perpetu": 482, "persist": [127, 304, 479, 481, 485, 487, 494, 496], "perspect": [494, 499], "pertain": 482, "pharmacophor": 152, "pharmacophorefingerprint": 152, "phase": [189, 457, 474], "phaseagent1": 457, "phaseagent2": 457, "phcpho": [434, 435, 436, 438, 439], "phenomenon": 485, "philosophi": 494, "physic": [474, 489, 495], "physiochemicalproperti": 152, "physiochemicalpropertiesfingerprint": 152, "pi": [7, 439, 450, 451, 474], "pi_max": 451, "pi_per_iter": 451, "pi_required_fract": 450, "pi_threshold": 450, "pickl": [127, 304, 479], "picklabl": [127, 304], "pictur": 477, "piec": [459, 477, 485, 486], "piecewis": [113, 499], "piecewisepolynomialkernel": 479, "pin": [28, 127, 304, 479], "pin_discret": 28, "pinned_part": 28, "pip": [477, 479, 480, 486, 487, 489, 501], "pipe": 499, "pipelin": [371, 472, 479, 480], "pival": [434, 435, 436, 438, 439], "pl": [41, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61], "place": [9, 12, 15, 18, 37, 127, 248, 304, 377, 378, 379, 453, 454, 456, 459, 478, 479, 480, 482, 485, 488, 491, 494, 498], "placehold": 341, "plai": [485, 489, 497], "plain": 272, "plainkernelfactori": [106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 268], "plan": [263, 477, 488, 491, 499], "platt": 498, "pleas": [127, 304, 371, 453, 454, 477, 480, 483, 489, 492], "plenti": 489, "plot": [99, 101, 246, 434, 436, 462, 472, 474, 479, 496, 498, 500], "plot_abegin_convert_pipelin": 407, "plot_ebegin_float_doubl": 407, "plot_kmedoids_digit": 371, "plot_typ": 99, "plt": [434, 436, 451, 462, 474], "plu": [248, 477, 480], "plugin": 479, "pl\u00f6tz": 481, "pm": [5, 439], "png": [434, 436], "po16": 491, "poetri": 479, "point": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 222, 240, 246, 255, 257, 259, 260, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 371, 386, 396, 402, 403, 406, 407, 414, 415, 416, 417, 421, 434, 438, 439, 450, 457, 462, 465, 466, 472, 476, 477, 479, 481, 483, 484, 485, 488, 489, 490, 492, 493, 499, 500, 501], "points_per_dim": [451, 465, 466, 472], "polar": [41, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 224, 371, 477, 479, 481, 500, 501], "poli": 451, "polici": 459, "polycollect": 451, "polym": 491, "polynomi": [113, 114], "polynomialkernel": 479, "polytop": 479, "popul": 456, "popular": [489, 491, 496], "posit": [9, 12, 15, 18, 99, 127, 304, 357, 416, 479, 486, 489, 490, 499], "possibl": [34, 47, 127, 161, 214, 222, 223, 224, 244, 304, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 357, 371, 436, 450, 451, 456, 477, 479, 482, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 497, 498, 499, 501], "possibli": [127, 304, 479, 484, 485], "post": [127, 304, 490, 491, 500], "post_hook": [357, 449, 450, 451], "posterior": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 127, 197, 199, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 291, 304, 317, 322, 439, 479, 483, 490, 496], "posterior_mean": [255, 459], "posterior_mod": 255, "posterior_stat": [34, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 479, 485, 490], "posteriorlist": 262, "posteriorstandarddevi": [459, 479, 483], "posteriortransform": 304, "postprocess": 366, "potassium": [434, 435, 436, 438, 439], "potenti": [216, 343, 477, 478, 479, 480, 485, 486, 489, 490, 493, 497, 501], "power": [114, 307, 324, 474, 479, 482, 486, 492, 499, 500], "powertransform": 499, "pp": 371, "pph3": [434, 435, 436], "pr": [479, 480], "practic": [246, 474, 483, 489, 492], "pre": [127, 129, 161, 187, 271, 304, 416, 452, 478, 479, 480, 497, 499], "pre_hook": [357, 449], "preced": 487, "precis": [59, 187, 214, 390, 407, 408, 422, 474, 479, 497, 499, 500], "precomput": [147, 371], "predefin": [485, 492], "predict": [31, 34, 83, 207, 255, 257, 259, 264, 268, 282, 284, 286, 288, 371, 477, 479, 483, 484, 490, 495, 496, 498, 500], "predictor": 290, "prefer": [34, 474, 482, 488, 490, 494], "prefix": [127, 304, 367, 453, 497], "preliminari": 498, "prepar": [451, 474, 480, 482, 501], "prepend": [127, 304], "preprocess": 479, "presenc": [199, 478, 479], "present": [34, 74, 99, 124, 129, 133, 135, 216, 338, 339, 357, 371, 438, 459, 479, 486, 495, 497, 501], "preset": [268, 275, 278, 280, 479], "pressur": [446, 453, 454, 468, 469, 470, 477, 486], "pretrain": [264, 452, 475], "pretti": 390, "pretty_print_df": [456, 479], "prevent": [160, 233, 234, 357, 478, 479, 480], "previou": [187, 450, 451, 479, 485, 497, 498], "previous": [34, 434, 435, 436, 438, 446, 484, 485], "price": 491, "primari": 485, "primarili": 483, "principl": [456, 459, 496], "print": [127, 248, 304, 375, 390, 434, 435, 436, 438, 439, 441, 442, 446, 449, 450, 453, 454, 456, 457, 459, 461, 464, 465, 466, 468, 469, 470, 477, 479, 493, 501], "print_parameter_names_hook": 449, "printer_inst": 449, "prior": [110, 111, 112, 113, 114, 115, 116, 117, 121, 172, 173, 174, 175, 176, 177, 178, 255, 278, 447, 477, 478, 479], "priori": [486, 494, 498], "privat": [479, 481], "probabilist": 483, "probability_of_improv": 451, "probabilityofimprov": [450, 451], "probabl": [7, 21, 23, 439, 448, 450, 475, 479], "problem": [78, 456, 457, 459, 461, 472, 479, 480, 485, 490, 494, 497], "problemat": [361, 478, 491], "proce": [246, 438, 484, 487], "procedur": [483, 498], "process": [34, 104, 127, 266, 267, 268, 269, 273, 274, 275, 277, 278, 279, 280, 304, 385, 416, 439, 449, 456, 459, 461, 472, 474, 479, 480, 483, 484, 485, 486, 487, 488, 490, 491, 494, 498, 499], "prod": 447, "prod_constraint": 447, "prod_i": 490, "produc": [124, 129, 133, 135, 248, 477, 479, 480, 487, 495, 499], "product": [60, 120, 216, 222, 223, 224, 331, 353, 443, 475, 477, 479, 482, 486, 488, 499, 500, 501], "product_paramet": [222, 456, 493], "productkernel": 479, "programmat": 456, "progress": [34, 185, 451, 479, 488], "prohibit": 483, "project": [451, 479], "promin": [480, 482], "promis": [450, 484], "prompt": 487, "proper": 479, "properli": [28, 461, 478, 479, 490, 493], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 131, 133, 135, 140, 141, 142, 144, 145, 147, 149, 150, 152, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 221, 222, 255, 257, 259, 262, 264, 268, 271, 275, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 343, 344, 345, 396, 402, 403, 415, 419, 479, 480, 484, 486, 488, 491], "proport": 472, "propos": 485, "protobuf": 479, "protocol": [180, 181, 260, 270, 361, 479], "prototyp": 481, "provid": [9, 12, 15, 17, 18, 34, 48, 99, 103, 127, 147, 158, 161, 181, 187, 188, 191, 192, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 240, 244, 246, 248, 250, 252, 255, 257, 259, 264, 268, 278, 280, 282, 284, 286, 288, 304, 307, 338, 353, 357, 371, 373, 378, 379, 384, 387, 391, 402, 403, 416, 417, 428, 433, 434, 435, 436, 449, 454, 456, 462, 464, 465, 466, 469, 472, 474, 477, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "proxim": 497, "prune": [14, 15, 16, 18, 19], "prune_baselin": [14, 15, 16, 18, 19], "pstd": [6, 479, 483], "pubchem": 152, "pubchemfingerprint": 152, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 131, 133, 135, 140, 141, 142, 144, 145, 147, 149, 150, 152, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 221, 222, 240, 255, 257, 259, 260, 262, 264, 268, 270, 271, 275, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 341, 343, 344, 345, 371, 396, 402, 403, 415, 419, 479, 480], "publicli": 482, "publish": [477, 479], "pull": [459, 479], "punish": 8, "pure": [8, 11, 17, 182, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 216, 252, 263, 417, 465, 479, 500], "purerecommend": [184, 186, 187, 188, 189, 191, 197, 202, 479], "purpl": 462, "purpos": [17, 449, 450, 453, 459, 474, 477, 478, 480, 482, 485, 488, 490, 494, 497, 501], "pursu": 497, "push": [47, 480], "put": [456, 459, 487, 491], "puzzl": 477, "py": [280, 371, 444, 446, 447, 479, 487], "py313": 480, "pyarrow": 479, "pydant": 479, "pydoclint": [479, 480], "pydocstyl": 480, "pylint": 479, "pymatgen": 478, "pypi": [477, 479], "pyplot": [434, 436, 451, 462, 474], "pyproject": 479, "pytest": [479, 480], "python": [33, 345, 358, 435, 454, 469, 470, 477, 478, 479, 480, 485, 486, 487, 494], "python310": 478, "pytorch": 479, "pyupgrad": 479, "q": [113, 127, 290, 291, 304, 439, 484], "qehvi": [9, 479], "qei": [10, 439, 469, 470, 479], "qkg": [11, 479], "qlogehvi": [12, 479], "qlogei": [13, 439, 479], "qlogexpectedimprov": 439, "qlognehvi": [9, 12, 15, 18], "qlognei": [16, 479], "qlognoisyexpectedhypervolumeimprov": [479, 490], "qlognparego": 479, "qnegintegratedposteriorvari": 483, "qnehvi": 18, "qnei": [19, 479], "qnipv": [17, 479, 483], "qnoisyexpectedhypervolumeimprov": 479, "qpi": [21, 439], "qposteriorstandarddevi": 483, "qpstd": [20, 479, 483, 485], "qsimpleregret": 23, "qsr": [22, 479], "qt": 23, "qthompsonsampl": [459, 479], "quad": 499, "quadrat": [117, 307, 433, 462, 499], "qualifi": [127, 304], "qualiti": 480, "quantif": 498, "quantifi": [459, 483, 498], "quantil": [34, 255, 257, 258, 259, 264, 268, 282, 284, 286, 288, 485], "quantiti": [34, 57, 474, 485, 489, 490, 497, 499, 501], "quantum": 147, "qucb": [24, 439, 479, 483], "queri": [127, 182, 192, 244, 246, 248, 304, 461, 462, 474, 477, 485, 488, 495], "queryselectoral": 453, "question": [480, 485, 498], "quick": 484, "quickli": [486, 497, 499], "qupperconfidencebound": 483, "qvarucb": 479, "r": [47, 434, 435, 436, 438, 439], "radial": 115, "radiu": [152, 479, 491], "rais": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 228, 229, 233, 234, 240, 246, 248, 252, 255, 257, 259, 262, 263, 264, 265, 268, 271, 282, 284, 286, 288, 296, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 339, 355, 357, 360, 362, 365, 373, 374, 375, 378, 379, 381, 386, 387, 388, 396, 402, 403, 404, 416, 417, 428, 429, 430, 431, 449, 450, 451, 466, 478, 479, 480, 484, 492], "ramp": 500, "rand": 453, "random": [17, 116, 209, 214, 216, 246, 248, 250, 287, 288, 371, 415, 416, 417, 433, 434, 435, 436, 439, 450, 451, 453, 457, 459, 462, 472, 474, 477, 479, 483, 491, 492, 495, 501], "random_campaign": 433, "random_forest": [288, 439], "random_se": [246, 250, 450, 495], "random_st": 371, "random_tie_break": [210, 416, 479, 487], "randomforestmodel": 454, "randomforestregressor": 288, "randomforestsurrog": [439, 479, 496], "randomli": [199, 211, 416, 433, 435, 462, 483, 489, 492], "randomrecommend": [433, 434, 435, 436, 439, 444, 445, 446, 447, 449, 450, 451, 457, 459, 479, 484, 492], "randomst": 371, "rang": [47, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 299, 307, 319, 378, 396, 433, 441, 442, 444, 445, 446, 447, 451, 456, 459, 464, 465, 466, 472, 477, 479, 486, 490, 493, 494, 495, 497, 499, 501], "rank": 497, "rare": 479, "rastrigin": [441, 442, 465, 466], "rate": [173, 255, 459], "rather": [468, 478, 479, 483, 494], "ration": 117, "ravel": [462, 472], "raw": [199, 494], "rbf": 115, "rbfkernel": 479, "rdf": 152, "rdffingerprint": 152, "rdkit": [152, 444, 446, 447, 479, 486, 491], "rdkit2ddescriptor": [152, 435, 444, 446, 447, 479], "rdkit2ddescriptorsfingerprint": 152, "rdkitfingerprint": 152, "re": [127, 304, 450, 465, 466, 474, 480, 492], "reach": [307, 318, 326, 499], "reactant": [489, 491], "reaction": [435, 438, 477, 486, 489, 491, 498], "reactor": [484, 498], "reactora": 498, "reactorb": 498, "reactorc": 498, "read": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 236, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403, 435, 438, 477, 479, 480], "read_csv": [434, 435, 450], "read_excel": 436, "readabl": [221, 390, 399, 468, 479, 481, 482, 494], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 246, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 480, 484], "readm": [479, 480], "reagent": [486, 491], "real": [396, 474, 477, 485, 497], "realist": [474, 495], "realiz": [244, 495], "reason": [45, 127, 204, 205, 206, 207, 304, 435, 465, 479, 480, 482, 483, 484, 486, 487, 490, 491, 495, 497], "reassembl": 494, "rebas": 480, "rec": [444, 445, 446, 447, 484, 485], "rec_finish": 484, "rec_next": 484, "rec_par": 462, "rec_pend": 484, "rec_y0": 462, "rec_y1": 462, "receiv": [127, 304, 482, 494], "recip": 480, "recipi": 482, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 75, 86, 87, 99, 141, 144, 145, 147, 155, 158, 160, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 244, 246, 260, 262, 263, 379, 381, 433, 434, 435, 436, 437, 441, 442, 444, 445, 446, 447, 449, 450, 451, 457, 459, 462, 469, 470, 472, 474, 475, 476, 477, 479, 480, 483, 487, 489, 491, 495, 496, 498, 499, 500, 501], "recommendation_orig": 468, "recommendation_recr": 468, "recommended_arm_idx": 459, "recommender_with_hook": 450, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 99, 184, 186, 187, 188, 189, 194, 197, 199, 260, 262, 449, 451, 476, 479, 484], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403, 485, 494], "record": [34, 127, 304, 498], "recreat": [275, 468, 494, 499], "recreate_model": 454, "recurs": [127, 184, 186, 187, 188, 189, 304, 350, 351], "red": [453, 462, 474], "redesign": [479, 497], "redistribut": 482, "reduc": [158, 451, 459, 472, 480, 486, 488, 491, 497], "reduct": 500, "redund": [334, 499], "ref": 477, "ref_point": 31, "refactor": 479, "refer": [9, 12, 15, 18, 31, 127, 244, 280, 304, 317, 356, 371, 386, 407, 434, 435, 436, 439, 441, 442, 444, 445, 446, 447, 449, 451, 453, 454, 456, 465, 466, 468, 474, 478, 479, 485, 489, 490, 491, 492, 493, 494, 495, 496, 498], "referenc": [127, 304, 480], "reference_point": [9, 12, 15, 18], "refin": [450, 474, 477, 479, 485, 488], "reflect": [191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 451, 461, 479, 480, 483, 486, 491, 497], "regard": [37, 43, 441, 442, 480, 482], "regardless": [127, 304, 496], "regim": [477, 479, 489], "region": [162, 307, 326, 497], "regist": [127, 304, 357, 448, 450], "register_backward_hook": [127, 304], "register_buff": [127, 304], "register_custom_architectur": 479, "register_forward_hook": [127, 304], "register_forward_pre_hook": [127, 304], "register_full_backward_hook": [127, 304], "register_full_backward_pre_hook": [127, 304], "register_hook": [448, 449, 450, 451, 479], "register_load_state_dict_post_hook": [127, 304], "register_load_state_dict_pre_hook": [127, 304], "register_modul": [127, 304], "register_module_forward_hook": [127, 304], "register_module_forward_pre_hook": [127, 304], "register_module_full_backward_hook": [127, 304], "register_module_full_backward_pre_hook": [127, 304], "register_paramet": [127, 304], "register_state_dict_post_hook": [127, 304], "register_state_dict_pre_hook": [127, 304], "registr": 479, "regress": 282, "regressor": 453, "regret": [22, 23], "regroup": 479, "regular": [23, 160, 292, 453, 464, 478, 479, 484, 497, 498], "reinstal": 477, "reject": 484, "rel": [9, 12, 15, 18, 31, 47, 246, 378, 486, 490], "relat": [57, 124, 129, 130, 133, 135, 148, 216, 235, 305, 337, 466, 472, 476, 479, 480, 485, 486, 498], "relationship": [472, 474, 477, 480, 490, 498], "relative_perc": 379, "relative_threshold": [47, 479, 486], "relax": 497, "releas": [127, 304, 477, 479], "relev": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 248, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 386, 387, 388, 396, 402, 403, 445, 456, 479, 480, 485, 486, 488, 498, 501], "reli": [461, 478, 479, 490, 499], "reliabl": 491, "reloc": 479, "remain": [58, 160, 189, 252, 433, 439, 444, 445, 446, 447, 456, 459, 466, 468, 472, 482, 491, 494, 495], "remain_switch": [189, 479], "remaind": 417, "remind": 479, "remot": 480, "remov": [54, 57, 58, 124, 127, 129, 133, 135, 222, 304, 334, 456, 477, 480, 486, 493, 499, 500], "removablehandl": [127, 304], "remove_dupl": [127, 304], "renam": [435, 472, 474, 479, 480], "render": [99, 453], "reoccur": 498, "reorder": 479, "reorgan": 479, "repeat": [459, 479, 480, 484, 485], "repetit": [250, 439, 450], "rephras": 486, "replac": [127, 304, 453, 465, 466, 479, 480], "replic": [255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 479, 490, 494, 500], "repo": 479, "report": [181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 459, 478], "repositori": [435, 477, 480], "repr": 453, "repres": [9, 12, 15, 18, 41, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 119, 120, 147, 216, 252, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 320, 325, 343, 373, 391, 396, 399, 416, 433, 456, 457, 459, 462, 469, 470, 474, 477, 479, 482, 485, 490, 491, 493, 495, 499, 501], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 240, 255, 257, 259, 260, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 362, 364, 373, 375, 390, 396, 402, 403, 444, 445, 446, 447, 453, 455, 468, 479, 484, 485, 491, 494, 495, 499, 500, 501], "reproduc": [450, 459, 462, 479, 482, 500], "reproduct": 482, "request": [34, 86, 87, 187, 188, 189, 229, 255, 257, 258, 259, 264, 268, 271, 282, 284, 286, 288, 381, 404, 416, 417, 462, 476, 479, 484, 485, 488, 489], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 47, 48, 53, 84, 99, 127, 189, 222, 296, 304, 357, 429, 438, 449, 450, 453, 457, 459, 461, 465, 469, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501], "require_norm": [129, 461, 490, 494], "requires_grad": [127, 304], "requires_grad_": [127, 304], "rerun": 453, "reserv": [477, 480], "reset": [34, 127, 304, 484], "reset_index": 484, "reshap": 462, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 445, 447, 456, 494], "resolv": [127, 304, 366], "resort": [292, 461, 480, 494, 501], "resource_track": 478, "resp": [217, 436, 466], "respect": [34, 127, 199, 217, 246, 250, 304, 326, 338, 456, 457, 479, 480, 485, 486, 488, 489, 490, 494, 495, 497, 499, 501], "respond": 476, "respons": [184, 186, 187, 188, 189, 482, 485, 492], "restart": [187, 199], "restor": 494, "restr": 23, "restrain": 491, "restrict": [216, 222, 244, 250, 252, 444, 457, 479, 488, 495, 497, 498, 500], "result": [9, 11, 12, 15, 18, 34, 127, 158, 160, 222, 246, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 377, 385, 434, 435, 436, 438, 453, 454, 456, 457, 459, 462, 464, 472, 477, 479, 481, 482, 483, 485, 486, 487, 489, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501], "result_baselin": 472, "result_fract": 472, "results_interrupt": 450, "results_uninterrupt": 450, "retain": [482, 486], "retrain": [263, 264, 496], "retriev": [216, 236, 244, 349, 350, 351, 365, 479, 480, 495], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 99, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 163, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 218, 219, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 237, 238, 240, 242, 243, 246, 248, 250, 252, 255, 257, 259, 260, 262, 264, 265, 268, 271, 272, 276, 282, 284, 286, 288, 290, 291, 292, 294, 296, 299, 301, 304, 307, 310, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 334, 335, 338, 339, 343, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 397, 399, 402, 403, 404, 409, 410, 416, 417, 419, 424, 425, 426, 427, 428, 429, 430, 431, 433, 444, 450, 451, 453, 456, 459, 462, 474, 479, 485, 486, 495, 501], "return_std": 453, "reus": [189, 479, 497], "reuse_last": 187, "reveal": [451, 457, 472, 474], "revers": [497, 499], "review": 480, "revis": [479, 482], "reward": [8, 459, 474], "rework": 479, "rewrit": 479, "rff": 116, "rffkernel": 479, "rh": [48, 50, 51, 441, 442, 457, 486], "right": [48, 178, 326, 327, 386, 396, 434, 436, 445, 459, 474, 477, 478, 480, 482, 486, 488, 490, 491, 499], "right_df": 386, "rihana": [477, 481], "rim": [477, 481], "risk": [8, 478, 482, 485], "roam": 478, "robust": [477, 479, 498], "robustli": 292, "role": [479, 480, 485, 489, 490, 495, 497, 500], "room": [451, 485], "root": [435, 477, 480, 486], "round": [390, 441, 453, 454, 486], "roundtrip": [479, 494], "rout": [371, 474, 479, 494], "routin": [47, 497], "row": [9, 12, 15, 18, 41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 248, 338, 339, 371, 378, 381, 385, 386, 388, 390, 434, 436, 444, 445, 446, 447, 456, 457, 468, 479, 484, 485, 488, 493, 495], "rowei": 498, "roya": 481, "royalti": 482, "rq": 117, "rqkernel": 479, "rsc": 477, "ruff": [479, 480], "rule": [449, 479, 497, 499], "run": [127, 246, 250, 304, 434, 435, 436, 450, 451, 472, 474, 477, 478, 479, 480, 485, 488, 491, 494, 495, 500, 501], "run_full_initial_data": 434, "run_impute_mod": 436, "runner": [250, 444, 446, 447, 487], "running_mean": [127, 304], "running_var": [127, 304], "runtim": [127, 304, 407, 478, 484], "runtimeerror": [187, 449], "rv": 459, "s3": 479, "s41586": [280, 384], "safe": [479, 480, 485], "safeti": 357, "sai": [127, 304, 486], "said": 480, "sake": 456, "same": [57, 127, 137, 189, 222, 228, 246, 248, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 318, 352, 428, 439, 450, 453, 454, 456, 459, 462, 468, 474, 478, 479, 486, 487, 488, 494, 495, 496, 497, 498, 499], "sampl": [11, 17, 23, 47, 127, 199, 209, 210, 211, 214, 371, 414, 415, 416, 417, 434, 439, 444, 445, 446, 447, 459, 462, 464, 468, 472, 477, 479, 481, 489, 500], "sample_from_full_factori": [214, 479], "sample_inactive_paramet": 47, "sample_shap": 127, "sample_uniform": [214, 462, 464, 479, 495], "sampler": [127, 439, 444, 445, 446, 447, 468], "samples_full_factori": 479, "samples_random": 479, "sampling_algorithm": [415, 483], "sampling_fract": [17, 483], "sampling_method": [17, 483], "sampling_n_point": [17, 483], "sampling_percentag": [199, 492], "satisfi": [43, 44, 45, 222, 441, 442, 456], "save": [127, 304, 434, 436, 453, 479, 495], "savefig": [434, 436, 462], "sca": 462, "scalabl": 487, "scalar": [14, 129, 461, 477, 479, 485, 490, 494], "scale": [121, 174, 175, 176, 177, 178, 214, 216, 222, 307, 318, 371, 419, 462, 479, 483, 490, 497, 499], "scalekernel": 479, "scaler": 479, "scaling_bound": [214, 216, 222], "scatter": [99, 101], "scenario": [246, 252, 433, 434, 435, 436, 450, 456, 472, 484, 486, 490, 498, 500, 501], "scene": [490, 495, 496, 497, 499], "schema": 485, "schembl15068049": [434, 435, 436], "scheme": [479, 486], "scienc": [477, 481], "scientif": [479, 498], "scikit": [152, 371, 477, 479, 481, 491], "scipi": [451, 459, 479], "scm": 479, "scope": 433, "screen": [352, 498], "script": [366, 453, 478, 479, 487, 501], "scriptmodul": [127, 304], "seaborn": [433, 434, 435, 436, 450, 472, 474], "seamlessli": 494, "search": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 41, 54, 57, 70, 75, 87, 91, 140, 141, 142, 144, 145, 147, 154, 155, 158, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 212, 214, 215, 216, 217, 218, 219, 222, 226, 246, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 386, 387, 433, 436, 438, 440, 443, 444, 445, 446, 447, 449, 450, 451, 459, 463, 468, 472, 474, 479, 481, 484, 485, 486, 487, 488, 489, 492, 494, 495, 500], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 99, 140, 141, 142, 144, 145, 147, 154, 155, 158, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 217, 221, 222, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 433, 435, 438, 449, 450, 451, 453, 454, 456, 457, 459, 461, 462, 464, 468, 469, 470, 474, 475, 477, 479, 485, 486, 487, 488, 489, 491, 493, 494, 495, 501], "searchspace1": 464, "searchspace2": 464, "searchspace3": 464, "searchspace_ful": 488, "searchspace_json": 494, "searchspace_reduc": 488, "searchspacetyp": [191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 216, 439, 444, 445, 446, 447, 450, 451, 468, 493], "secfp": 152, "secfpfingerprint": 152, "second": [385, 409, 453, 454, 461, 462, 470, 474, 486, 489, 497, 499], "secondari": 461, "section": [477, 479, 480, 482, 494, 499], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 168, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 246, 250, 252, 255, 257, 259, 260, 262, 264, 268, 271, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 355, 361, 371, 379, 385, 392, 396, 402, 403, 419, 434, 435, 436, 441, 442, 449, 450, 454, 457, 461, 466, 474, 476, 477, 479, 480, 485, 487, 488, 489, 491, 494, 495, 497, 499, 500], "seed": [246, 250, 412, 413, 450, 451, 459, 462, 477, 479, 501], "seek": 490, "seem": [407, 470, 478, 497], "seen": 483, "segment": [327, 499], "select": [6, 43, 44, 45, 72, 76, 84, 184, 186, 187, 188, 189, 192, 199, 207, 209, 210, 255, 257, 259, 264, 268, 282, 284, 286, 288, 385, 416, 439, 445, 446, 456, 457, 459, 461, 466, 477, 479, 483, 485, 486, 489, 491, 492, 494, 496], "select_recommend": [184, 186, 187, 188, 189, 479], "selectivity_mean": 485, "selectivity_mod": 485, "selectivity_q_0": 485, "selectivity_std": 485, "self": [127, 304, 357, 371, 374, 424, 425, 426, 427, 449, 450, 451, 459, 480], "sell": 482, "semant": [479, 494, 497], "sens": [59, 133, 357, 361, 385, 486, 491, 496], "sent": 482, "sentinel": [342, 344], "separ": [250, 252, 292, 355, 419, 420, 451, 476, 479, 480, 482, 489, 494, 497], "sequenc": [34, 48, 166, 187, 188, 214, 216, 222, 223, 224, 227, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 307, 325, 326, 334, 338, 339, 357, 367, 374, 380, 386, 387, 392, 485, 490, 492, 499], "sequenti": [127, 186, 187, 188, 189, 199, 304, 439, 444, 445, 446, 447, 468, 479, 492, 499], "sequential_continu": [199, 479, 492], "sequential_greedy_x": 479, "sequentialgreedyrecommend": 479, "sequentialmetarecommend": [188, 492], "sequentialstrategi": 479, "seri": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 43, 44, 45, 54, 141, 144, 145, 147, 155, 158, 197, 199, 299, 301, 307, 391, 444, 456, 474, 479, 486, 488, 497], "serial": [127, 188, 222, 240, 304, 453, 475, 478, 479, 480, 486, 492, 500], "serializ": [477, 492], "serialize_datafram": 494, "serialized_df": 242, "serializetostr": 453, "serialmixin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403, 479], "serv": [252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 386, 472, 485, 486, 491, 499], "servic": 482, "session": [487, 494], "set": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 45, 47, 57, 59, 66, 67, 99, 103, 127, 158, 181, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 246, 250, 275, 304, 371, 384, 385, 412, 413, 434, 435, 436, 437, 439, 444, 446, 449, 454, 455, 456, 457, 459, 461, 466, 476, 477, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501], "set_box_aspect": 451, "set_dash": 450, "set_extra_st": [127, 304], "set_output": 371, "set_param": 371, "set_random_se": [451, 459, 462, 474, 501], "set_size_inch": [434, 436], "set_submodul": [127, 304], "set_to_non": [127, 304], "set_x_pend": 28, "set_xlabel": [451, 474], "set_xtick": 451, "set_xticklabel": 451, "set_ylabel": [451, 474], "set_ylim": 451, "set_zlabel": 451, "setattribut": 453, "setpoint": 155, "settimeout": 453, "setup": [246, 450, 486, 495, 501], "setuptool": 479, "sever": [65, 127, 161, 182, 304, 330, 433, 435, 439, 450, 453, 459, 461, 464, 472, 474, 477, 479, 480, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 498, 501], "sh": 489, "shall": [187, 379, 482, 490], "shallow": [127, 304], "shan": 481, "shap": [99, 477, 479, 481, 496, 500], "shap_valu": 496, "shape": [9, 12, 23, 31, 214, 221, 326, 371, 416, 461, 462, 474, 479, 493, 499, 501], "shapinsight": [97, 98, 100, 101, 479, 489, 490], "shaplei": 99, "share": [127, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 479, 482, 498], "share_memori": [127, 304], "share_memory_": [127, 304], "shield": [280, 384, 435, 477, 491], "shift": [304, 317, 499], "shift_first": [317, 499], "ship": [420, 494], "shm": 478, "short": 480, "shortcut": [222, 493, 494], "shorten": [479, 480], "shot": 498, "should": [34, 47, 55, 99, 127, 158, 189, 246, 250, 304, 307, 338, 339, 377, 379, 383, 384, 390, 395, 396, 409, 444, 446, 450, 453, 456, 457, 466, 470, 477, 479, 480, 484, 485, 486, 489, 493, 495, 498, 501], "show": [99, 127, 304, 434, 435, 436, 438, 439, 444, 445, 446, 453, 454, 456, 459, 466, 468, 469, 470, 472, 474, 486, 489, 497], "showcas": 492, "shown": [450, 459, 472, 479, 485], "shrink": 451, "shutdown": 478, "side": [48, 160, 327, 479, 499], "sigma": [175, 176, 177, 178, 307, 318, 461, 474, 481, 490, 497, 499], "sigmoid": [307, 325, 499, 500], "sigmoidtransform": [307, 500], "sign": 497, "signal": [69, 490, 497], "signatur": [93, 127, 296, 304, 355, 357, 451, 479, 480, 486, 494], "significantli": [222, 459, 472, 486, 487, 497], "silenc": 480, "silent": [479, 486], "similar": [127, 188, 304, 478, 479, 486, 487, 489, 491, 492, 493, 494, 497, 498, 501], "similarli": [127, 304, 462, 491, 497], "simpl": [22, 23, 127, 304, 345, 371, 435, 449, 450, 457, 461, 477, 479, 484, 485, 492, 495, 497, 498], "simpler": [480, 494], "simplest": [493, 496, 497], "simplex": [222, 500], "simplex_paramet": [222, 456, 493], "simpli": [361, 449, 450, 480, 486, 488, 490, 491, 492, 493, 494, 497, 498], "simplic": 357, "simplifi": 480, "simul": [88, 379, 446, 451, 477, 479, 498, 500], "simulate_experi": [250, 252, 479, 495], "simulate_scenario": [252, 433, 434, 435, 436, 450, 472, 474, 479, 487, 495], "simulate_transfer_learn": 495, "simulationresult": 459, "simultan": [490, 496], "sin": [474, 499], "sinc": [59, 127, 160, 216, 263, 304, 357, 371, 434, 441, 442, 454, 465, 468, 469, 470, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 497, 498, 499], "singer": 498, "singl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 43, 55, 99, 127, 135, 160, 214, 216, 222, 246, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 299, 301, 304, 307, 375, 396, 408, 416, 422, 434, 435, 436, 445, 450, 456, 461, 472, 477, 479, 485, 486, 487, 488, 489, 490, 491, 493, 496, 497, 498, 499, 500], "single_lin": 375, "single_y0": 462, "single_y1": 462, "singledispatch": 397, "singletargetobject": [34, 299, 301, 307, 434, 435, 436, 438, 439, 444, 445, 446, 447, 450, 453, 454, 468, 469, 470, 477, 479, 500], "sink": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403], "sinusoid": 499, "site": 478, "situat": [99, 160, 416, 444, 446, 456, 478, 480, 484, 486, 490, 491, 494, 495, 497, 498], "six": [456, 457], "size": [23, 106, 107, 108, 111, 113, 115, 116, 117, 127, 187, 189, 216, 221, 222, 304, 399, 451, 453, 459, 465, 466, 472, 485, 494, 495, 497, 498, 501], "sk": 453, "skeleton": 479, "skew": 499, "skfp": 152, "skicit": 479, "skin": 495, "skip": [127, 219, 225, 304, 479, 485], "skl2onnx": 453, "sklearn": [207, 407, 453], "sklearnclusteringrecommend": [204, 205, 206, 479, 484], "slightli": [244, 435, 456, 495, 499], "slope": [327, 499], "slope_left": [327, 499], "slope_right": [327, 499], "slot": [455, 459, 475, 479, 486], "slot1_amount": 456, "slot1_label": 456, "slot2_amount": 456, "slot2_label": 456, "slot3_amount": 456, "slot3_label": 456, "slow": [444, 446, 447, 484, 493], "slower": 484, "slowest": 479, "small": [336, 340, 441, 456, 472, 479, 480, 483, 491], "smaller": [34, 459, 485, 498], "smallest": [214, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 386, 493], "smart": [477, 499], "smartli": 456, "smile": [158, 364, 366, 367, 477, 491], "smoke": 479, "smoke_test": [433, 434, 435, 436, 442, 444, 445, 447, 450, 451, 459, 462, 472, 474], "smooth": [111, 113, 178, 497], "smoothedboxprior": 479, "smoother": 111, "smoothli": 497, "sn": [433, 434, 435, 436, 450, 472, 474], "snippet": 487, "so": [34, 127, 246, 263, 304, 371, 385, 436, 450, 456, 459, 461, 465, 466, 474, 477, 478, 485, 486, 487, 488, 490, 491, 492, 494, 497, 499], "soften": 497, "softwar": [477, 482], "sola": 481, "sole": 482, "solut": [78, 474, 485, 486, 490, 493, 494, 498], "solv": [263, 445, 446, 456, 459, 479], "solv_rdkit2ddesc": 446, "solvent": [434, 435, 436, 438, 439, 444, 445, 446, 447, 450, 454, 456, 457, 469, 470, 477, 486, 491], "solvent1": [456, 457], "solvent2": [456, 457], "solvent3": 456, "solvent4": 456, "solvent5": 456, "solvent8": 456, "solvent9": 456, "solvent_1": 486, "solvent_2": 486, "solvent_3": 486, "solvent_data": 450, "solvent_encoding1": 486, "solvent_encoding2": 486, "solvent_mordred_enc": 486, "solvent_rdkit2dd": [444, 447], "solvent_rdkit_enc": 486, "solvent_smil": 450, "solver": 495, "some": [55, 127, 304, 407, 434, 435, 436, 439, 444, 445, 446, 447, 450, 451, 453, 454, 456, 457, 462, 464, 465, 466, 468, 472, 479, 484, 485, 486, 487, 491, 492, 494, 495, 496, 497, 501], "someth": [91, 127, 304, 470], "sometim": [486, 490, 495, 497], "somewhat": 487, "somewher": 485, "soon": [477, 485, 492], "sophist": [479, 488, 494], "sort": 163, "sourabh": 481, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 129, 131, 133, 135, 137, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 154, 155, 158, 160, 161, 162, 163, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 236, 237, 238, 240, 242, 243, 246, 248, 250, 252, 255, 257, 259, 260, 262, 264, 265, 268, 270, 271, 272, 275, 276, 278, 280, 282, 284, 286, 288, 290, 291, 292, 294, 296, 299, 301, 304, 307, 310, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 333, 334, 335, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 399, 402, 403, 404, 409, 410, 412, 413, 415, 416, 417, 419, 427, 428, 429, 430, 431, 478, 479, 480, 482, 497], "space": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 34, 41, 48, 54, 57, 70, 75, 81, 87, 91, 140, 141, 142, 144, 145, 147, 154, 155, 158, 181, 190, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 212, 214, 215, 216, 217, 218, 219, 222, 225, 226, 246, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 371, 386, 416, 433, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 459, 462, 463, 465, 468, 472, 474, 475, 479, 481, 484, 486, 487, 488, 489, 491, 492, 494, 495, 500], "span": [63, 140, 141, 142, 144, 145, 147, 154, 155, 158, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 449, 459, 464, 489], "spars": 371, "speak": 498, "spec": [219, 225, 237], "special": [189, 477, 478, 482, 483, 488, 498, 501], "specif": [104, 161, 168, 207, 210, 216, 219, 233, 250, 292, 294, 307, 349, 404, 430, 449, 450, 461, 465, 474, 477, 479, 480, 485, 486, 488, 491, 492, 493, 494, 495, 496, 498, 499], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 47, 55, 92, 99, 103, 127, 147, 158, 160, 161, 162, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 237, 246, 248, 250, 260, 304, 317, 319, 325, 338, 356, 365, 371, 380, 386, 387, 396, 404, 417, 435, 439, 441, 453, 454, 459, 461, 477, 478, 479, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499], "speed": [222, 444, 446, 447, 472, 487, 493], "speed_fast": 493, "speed_norm": 493, "speed_slow": 493, "speedup": [479, 498], "spell": 480, "spellcheck": 479, "sphinx": [479, 480], "split": [191, 484], "sporad": 479, "sqrt": 486, "squar": [371, 459, 462, 486, 497], "squash": 480, "stabil": [479, 487], "stabl": [104, 168], "stage": [485, 486, 494], "stand": 479, "standard": [6, 20, 292, 318, 453, 479, 485, 491, 499], "star": 456, "start": [246, 433, 449, 450, 451, 457, 459, 462, 474, 478, 479, 480, 484, 491, 492, 494, 495, 498, 499], "startup": 479, "stat": [34, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 451, 457, 459, 485], "state": [127, 184, 186, 187, 188, 189, 304, 371, 450, 456, 476, 479, 482, 485, 488, 500], "state_dict": [127, 304], "stateless": [459, 476, 479, 488], "statement": [390, 465, 482], "static": [9, 12, 15, 18, 216, 222, 268, 477, 480, 497, 498], "statist": [34, 255, 257, 258, 259, 264, 268, 282, 284, 286, 288, 472, 479, 500], "statu": 485, "std": [34, 255, 257, 258, 259, 262, 264, 268, 282, 284, 286, 288], "std_threshold": 292, "steep": [325, 499], "steeper": 499, "steer": 499, "stem": [478, 498], "step": [219, 225, 246, 456, 459, 476, 477, 480, 485, 490, 494, 496, 497, 499], "sterl": 481, "steven": 435, "still": [161, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 450, 459, 474, 484, 486, 487, 489, 491, 496, 498, 501], "stop": [448, 475, 479, 480], "stop_on_pi": 450, "stoppag": 482, "storag": [127, 304, 485, 487, 494], "store": [28, 127, 142, 292, 299, 304, 371, 451, 456, 459, 477, 479, 485, 501], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 90, 91, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 162, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 197, 199, 204, 205, 206, 207, 214, 216, 221, 222, 238, 240, 250, 252, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 302, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 338, 339, 349, 355, 356, 362, 364, 366, 367, 373, 375, 380, 383, 384, 388, 390, 396, 399, 401, 402, 403, 404, 410, 454, 459, 469, 470, 472], "straightforward": [485, 497, 498], "strategi": [17, 199, 216, 244, 433, 459, 479], "stream": [353, 479, 487], "streamingsequentialmetarecommend": [187, 492], "streamingsequentialstrategi": 479, "streamlin": 480, "streamlit": [477, 479], "streibel": 481, "strict": [127, 295, 304, 355, 497], "strictli": [454, 469, 470, 479], "stride": [127, 304, 441], "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 157, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 362, 366, 367, 371, 373, 374, 375, 383, 396, 402, 403, 453, 468, 479, 485, 486, 491, 500], "strip": [246, 436], "strong": 479, "strongli": [485, 497], "strtobool": [479, 487], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 236, 477, 478, 479, 480, 481, 485, 491, 494], "studi": [182, 489, 492, 500], "style": [453, 479, 480], "sub": [127, 207, 304, 479, 489, 494], "subclass": [92, 236, 349, 351, 361, 404, 439, 479, 480, 492, 494], "subfold": 487, "subgraph": 491, "subgroup": 457, "subject": 482, "sublicens": 482, "submiss": [479, 482], "submit": [28, 477, 480, 482], "submodul": [127, 304], "subobject": 371, "subpackag": [479, 480, 495], "subplot": [462, 474], "subselectioncondit": [445, 446, 479, 488, 500], "subsequ": [127, 189, 216, 222, 250, 304, 334, 366, 476, 482, 485, 494], "subset": [34, 124, 129, 133, 135, 158, 216, 352, 387, 416, 485, 486, 488, 491], "subspac": [28, 63, 191, 199, 213, 214, 216, 218, 220, 222, 441, 444, 445, 446, 447, 464, 466, 468, 479, 486, 492, 494, 500, 501], "subspace_continu": 63, "subspace_json": 494, "subspacecontinu": [34, 63, 140, 154, 216, 218, 464, 479, 493], "subspacediscret": [34, 141, 144, 145, 147, 155, 158, 216, 218, 221, 444, 445, 446, 447, 456, 468, 479, 493, 494, 501], "substanc": [152, 158, 365, 435, 438, 444, 446, 447, 457, 479, 486, 489, 491, 498], "substance_12": 486, "substance_3": 486, "substance_43": 486, "substance_data": 479, "substance_encod": 435, "substanceencod": [158, 365, 367, 444, 445, 446, 447, 479, 491, 494], "substanceparamet": [434, 435, 436, 438, 439, 444, 445, 446, 447, 450, 454, 456, 469, 470, 477, 479, 486, 487, 489, 493, 494, 500], "substanti": [158, 501], "substrat": 498, "subtract": 497, "subtyp": 494, "success": [301, 416, 459, 494, 499], "success_valu": 301, "suffic": 480, "suffici": [371, 450, 493, 494], "suggest": [489, 495, 500], "suit": 480, "suitabl": [207, 222, 246, 362, 371, 480, 483, 485, 491, 495, 496, 497, 498], "sum": [61, 119, 222, 329, 371, 433, 443, 444, 445, 446, 450, 456, 457, 459, 462, 475, 486, 493, 499], "sum_": [486, 490], "sum_constraint": 456, "sum_constraint_1": 447, "sum_constraint_2": 447, "sum_toler": 456, "summar": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 140, 141, 142, 144, 145, 147, 154, 155, 158, 299, 301, 307], "summari": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 140, 141, 142, 144, 145, 147, 154, 155, 158, 299, 301, 307, 479, 480], "superior": 483, "supersed": 482, "suppli": 371, "support": [11, 34, 97, 98, 99, 100, 101, 188, 210, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 407, 439, 444, 445, 446, 447, 450, 451, 453, 456, 468, 477, 479, 480, 481, 482, 486, 489, 491, 492, 493, 495, 496, 497, 499, 500], "supports_batch": 479, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 255, 257, 259, 264, 268, 282, 284, 286, 288, 479, 496], "supports_partial_measur": [124, 129, 133, 135, 479, 484], "supports_pending_experi": 479, "supports_transfer_learn": [255, 257, 259, 264, 268, 282, 284, 286, 288, 496], "supportsread": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403], "supportswrit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403], "suppos": 486, "sure": [456, 464, 477, 480], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 76, 80, 99, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 197, 199, 204, 205, 206, 207, 214, 216, 222, 255, 257, 260, 262, 264, 268, 270, 271, 275, 278, 280, 282, 284, 286, 288, 444, 445, 446, 447, 451, 459, 468, 475, 477, 479, 481, 484, 485, 490, 491, 492, 498, 500], "surrogate_model": [197, 199, 439, 451, 453, 454, 459, 469, 470, 479], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 99, 197, 199, 259, 262, 479], "svg": 462, "sw": 445, "swiss": 481, "switch": [55, 185, 188, 189, 292, 439, 444, 445, 446, 447, 459, 468, 477, 479, 486, 492], "switch1": 445, "switch2": 445, "switch2_left": 445, "switch2_right": 445, "switch_1": 486, "switch_2": 486, "switch_aft": [189, 469, 470, 492], "switzerland": 481, "sy": 478, "symmetr": [307, 474, 499], "symmetri": 486, "sync": [479, 480], "syntax": [477, 479], "synthet": [441, 442, 451, 462, 472, 479], "system": [371, 400, 435, 459, 474, 477, 478, 481, 482, 487, 495, 498], "t": [127, 290, 291, 304, 325, 354, 362, 434, 435, 436, 438, 439, 446, 451, 462, 472, 476, 488, 491, 495, 497, 499], "t1": [310, 317, 333, 484, 490, 495, 497, 499], "t2": [310, 317, 333, 484, 490, 497, 499], "t3": [490, 497, 499], "t4": [490, 497, 499], "t5": [497, 499], "t6": 497, "t7": 497, "t_1": 490, "t_2": 490, "t_3": 490, "t_ab": 497, "t_bell": 497, "t_both": 499, "t_i": 490, "t_match": [490, 494], "t_max": [490, 494, 499], "t_min": [494, 499], "t_power": 497, "t_quad": 497, "t_skew1": 499, "t_skew2": 499, "t_sym1": 499, "t_sym2": 499, "t_sym3": 499, "tab": [462, 474], "tabl": [390, 453, 479, 485, 486, 489], "tabular": 495, "tag": [477, 479, 494], "tailor": 485, "take": [8, 111, 141, 155, 160, 161, 255, 257, 259, 264, 268, 278, 282, 284, 286, 288, 302, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 449, 456, 461, 479, 484, 485, 486, 487, 490, 491, 492, 498], "taken": [187, 450, 479, 485, 488], "tantamount": 483, "target": [9, 12, 14, 15, 18, 34, 81, 99, 124, 125, 127, 129, 132, 133, 134, 135, 137, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 244, 246, 247, 248, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 292, 301, 304, 307, 312, 357, 371, 377, 380, 381, 387, 388, 389, 392, 409, 410, 411, 428, 429, 431, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 450, 451, 453, 454, 459, 465, 466, 468, 469, 470, 472, 474, 475, 477, 479, 484, 485, 489, 494, 495, 496, 499, 500], "target_1": [445, 446, 447, 484, 490], "target_2": [484, 490], "target_3": [484, 490], "target_a": 496, "target_b": 496, "target_cumbest": [433, 472], "target_index": [99, 479, 489], "target_match": 461, "target_max": [461, 485], "target_min": 461, "targetmod": [307, 479], "targetnam": 246, "targettransform": [307, 479], "task": [145, 216, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 299, 301, 307, 459, 479, 485, 492, 494, 495, 498], "task_idx": [216, 479], "task_param": [472, 495], "task_paramet": 494, "task_parameter_json": 494, "task_parameter_reconstruct": 494, "taskparamet": [229, 472, 479, 488, 494, 495, 500], "tb": 501, "tbodi": 453, "td": 453, "technic": [127, 222, 304, 484, 495, 498], "techniqu": [207, 492], "technologi": 481, "telemetri": [479, 481], "temp": [444, 446, 481], "temp_c": [434, 435, 436, 450], "temperatur": [434, 436, 438, 439, 444, 446, 449, 453, 454, 468, 486, 491, 493, 498], "temperature_resolut": 444, "temperature_valu": 450, "temporari": [124, 129, 133, 135, 413, 450, 479, 487, 494, 497], "temporarili": [479, 501], "temporary_se": 501, "tempt": 498, "tenac": 479, "tend": 451, "tensor": [28, 31, 48, 127, 255, 290, 291, 304, 317, 325, 335, 380, 391, 396, 419, 421, 479], "tensorcal": 320, "term": [114, 244, 450, 459, 480, 482, 485, 489, 493, 494, 495, 497, 498], "termin": [450, 451, 478, 482], "terminologi": 500, "tert": [434, 435, 436, 438, 439], "test": [222, 246, 264, 459, 472, 477, 478, 479, 480, 485, 489, 495, 497, 501], "test_funct": [441, 442, 451, 465, 466, 472], "test_scenario": [434, 436], "testabl": [88, 246], "testfunct": [441, 442, 465, 466], "testfunctionclass": [441, 442, 465, 466], "text": [37, 326, 453, 462, 474, 482, 486, 487, 490, 499], "textcont": 453, "texttt": 499, "th": [339, 486], "than": [31, 34, 67, 87, 155, 187, 188, 189, 199, 214, 216, 229, 307, 339, 361, 375, 381, 416, 417, 435, 446, 450, 457, 479, 483, 486, 487, 489, 491, 494, 496, 497], "thank": 497, "thei": [127, 161, 182, 192, 304, 383, 387, 439, 447, 450, 456, 459, 461, 464, 479, 480, 484, 485, 486, 489, 491, 492, 493, 494, 497, 498, 499, 501], "them": [41, 278, 378, 439, 474, 478, 479, 480, 484, 486, 487, 488, 489, 491, 492, 494, 497, 498, 499], "theme": 479, "themselv": 497, "theori": 482, "therebi": 222, "therefor": [47, 189, 255, 257, 259, 264, 268, 282, 284, 286, 288, 439, 478, 485, 494, 496, 498, 499], "therein": 479, "thereof": 482, "thf": 486, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 184, 186, 187, 188, 189, 191, 199, 204, 205, 206, 207, 214, 216, 222, 244, 246, 248, 250, 252, 255, 257, 259, 260, 262, 263, 264, 268, 278, 282, 284, 286, 288, 292, 304, 338, 357, 358, 361, 366, 371, 379, 381, 382, 384, 386, 390, 433, 449, 450, 451, 453, 454, 456, 457, 459, 461, 462, 464, 468, 469, 470, 472, 474, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "think": [459, 491], "third": [369, 461, 482, 489, 495], "third_parti": 371, "thompson": [23, 481], "thomson": 23, "those": [65, 161, 189, 191, 244, 416, 439, 478, 482, 484, 486, 495], "though": [498, 499], "three": [435, 456, 457, 461, 462, 477, 485, 486, 489, 490, 492, 493, 498, 500], "threshold": [9, 12, 31, 45, 47, 147, 158, 160, 162, 189, 199, 292, 384, 441, 446, 447, 450, 456, 479, 486, 491, 497], "thresholdcondit": [60, 61, 441, 446, 447, 456, 500], "through": [34, 216, 325, 338, 387, 454, 456, 459, 474, 477, 479, 480, 482, 486, 490, 494, 495, 499, 500], "throughout": 189, "throw": [127, 304, 366, 486], "thrown": [127, 248, 304, 436, 450, 469, 478, 484], "thu": [199, 246, 357, 387, 434, 435, 441, 442, 444, 445, 446, 447, 453, 454, 456, 459, 465, 466, 468, 478, 480, 485, 487, 488, 491, 492, 494, 495, 498, 501], "tick": 451, "tick_param": 474, "tight": 497, "tight_layout": [462, 474], "time": [11, 127, 199, 304, 417, 442, 449, 456, 459, 477, 479, 484, 485, 486, 487, 488, 491, 494, 495, 496, 500, 501], "timeout": 479, "timer": 449, "titl": [453, 462, 477, 482], "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 48, 124, 129, 133, 135, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 479], "to_botorch_object": [313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331], "to_botorch_posterior_transform": [317, 322], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403], "to_empti": [127, 304], "to_factori": [106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121], "to_fram": [433, 497], "to_gpytorch": [106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 170, 172, 173, 174, 175, 176, 177, 178, 479], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403, 453, 454, 468, 479, 485, 494], "to_keep": 385, "to_ndarrai": 396, "to_numpi": [451, 462], "to_object": [299, 301, 307, 433, 441, 442, 451, 459, 462, 465, 466, 472, 474, 490, 495, 497], "to_polar": [43, 44, 45], "to_searchspac": [140, 141, 142, 144, 145, 147, 154, 155, 158, 214, 222, 459, 461, 464, 474, 479, 488], "to_str": 479, "to_subspac": [140, 141, 144, 145, 147, 154, 155, 158, 479], "to_tensor": [396, 453, 479], "to_tupl": [396, 462, 474], "tobia": 481, "togeth": [41, 71, 339, 439, 459, 466, 477, 479, 486, 499], "toggl": [34, 479], "toggle_discrete_candid": [34, 479, 488], "toggleabl": 453, "toggleable__cont": 453, "toggleablecont": 453, "tol": 453, "toler": [34, 45, 155, 222, 430, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 450, 453, 454, 456, 465, 466, 468, 469, 470, 474, 477, 479, 486], "tolist": 441, "toluen": 491, "toml": 479, "too": [441, 495, 497, 498], "tool": [363, 477, 479, 486, 494], "toolbox": 477, "top": [479, 480], "topic": 485, "topolog": 491, "topologicaltors": 152, "topologicaltorsionfingerprint": 152, "torch": [127, 304, 317, 320, 325, 335, 380, 396, 453, 479, 499], "torch_doctest_cuda1": [127, 304], "toronto": 481, "tort": 482, "total": [31, 188, 189, 416, 456, 457, 459, 493], "total_bas": 457, "total_phase_ag": 457, "toward": [172, 486], "towel": 476, "tox": [479, 480], "tr": 453, "tracebackexcept": 478, "track": [181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 222, 450, 482, 488], "trade": [8, 482, 490], "trademark": 482, "tradit": [435, 455, 456, 475, 477, 479], "train": [83, 99, 127, 181, 187, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 252, 255, 257, 259, 260, 262, 263, 264, 268, 282, 284, 286, 288, 292, 304, 452, 462, 472, 479, 495], "train_i": 453, "train_x": 453, "training_funct": 472, "trajectori": [244, 433, 450, 459, 474, 485, 495], "transfer": [251, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 439, 444, 445, 446, 447, 468, 475, 477, 479, 482, 491, 496, 500], "transform": [34, 83, 124, 129, 133, 135, 141, 142, 144, 145, 147, 155, 158, 214, 216, 222, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 299, 301, 303, 304, 307, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 367, 371, 380, 387, 392, 396, 419, 444, 445, 446, 447, 461, 468, 474, 475, 479, 482, 487, 490, 491, 500], "transform_rep_exp2comp": 479, "transformermixin": 371, "transit": [127, 304, 479, 497], "translat": [41, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 307, 479, 482, 488, 491], "transmiss": 494, "transport": 371, "travers": 479, "treasur": 500, "treat": [158, 162, 255, 257, 259, 264, 268, 282, 284, 286, 288, 435, 474, 477, 486, 491, 497, 501], "tree": 479, "tremend": 435, "trend": 498, "tri": [127, 304, 493], "triangl": [307, 326, 499], "triangular": [307, 326, 500], "triangular_transform": 479, "triangulartransform": 500, "tricki": 489, "tricyclohexylphosphin": [434, 435, 436], "trigger": [187, 338, 450, 454, 459, 479, 480, 484, 490, 494], "trim": 453, "trivial": [271, 284, 490, 491, 496, 499], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 99, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 199, 216, 250, 268, 301, 304, 350, 351, 355, 361, 362, 371, 375, 385, 416, 430, 433, 435, 439, 441, 442, 444, 445, 446, 447, 451, 453, 454, 456, 459, 461, 462, 465, 466, 468, 469, 470, 472, 479, 484, 485, 486, 488, 489, 490, 491, 494, 497, 499], "trust": 453, "truth": 362, "truthi": 487, "try": [91, 434, 435, 436, 450, 453, 454, 470, 478, 479, 501], "tunabl": 474, "tune": [473, 474, 475, 477], "tupl": [9, 12, 15, 18, 34, 44, 48, 99, 106, 107, 108, 111, 113, 115, 116, 117, 119, 120, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 163, 214, 216, 221, 222, 291, 304, 326, 329, 330, 331, 334, 338, 348, 354, 355, 358, 374, 391, 396, 399, 419, 479], "turn": [47, 214, 222, 255, 257, 259, 264, 268, 282, 284, 286, 288, 399, 464, 474, 478, 479, 486, 487, 490], "turnaround": 495, "twice": [488, 490, 499], "twini": 474, "two": [9, 12, 15, 18, 37, 57, 66, 67, 127, 189, 199, 209, 244, 304, 310, 325, 326, 327, 329, 331, 333, 339, 345, 347, 380, 409, 416, 428, 433, 434, 436, 449, 456, 459, 462, 466, 472, 474, 476, 477, 479, 480, 483, 484, 485, 486, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499], "twofold": 459, "twophasemetarecommend": [434, 436, 439, 444, 445, 446, 447, 450, 451, 453, 454, 459, 466, 468, 469, 470, 477, 479, 492], "twophasestrategi": 479, "twosid": 499, "twosidedaffinetransform": 500, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 79, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 236, 237, 238, 240, 242, 243, 246, 248, 250, 252, 255, 257, 258, 259, 260, 262, 264, 265, 268, 271, 272, 276, 282, 284, 286, 288, 290, 291, 292, 294, 295, 296, 299, 301, 302, 304, 307, 310, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 334, 335, 338, 339, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 397, 399, 401, 402, 403, 404, 406, 407, 409, 410, 416, 417, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 435, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 461, 468, 469, 470, 474, 477, 479, 480, 482, 483, 486, 489, 490, 491, 492, 493, 496, 497, 498, 499, 500], "typealia": 302, "typeddict": [294, 479], "typeerror": [34, 99, 103, 246, 255, 257, 259, 264, 268, 282, 284, 286, 288, 357, 378, 404, 417, 430, 431, 450, 451, 454], "typeguard": 354, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 227, 237, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 291, 292, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 351, 352, 353, 354, 374, 380, 387, 389, 396, 402, 403, 404], "typic": [17, 127, 304, 357, 375, 435, 474, 477, 479, 484, 485, 489, 491, 494, 501], "typing_extens": 480, "typo": [479, 480], "u": [23, 433, 434, 435, 436, 449, 451, 456, 457, 459, 461, 464, 472, 474, 477, 483, 484, 486, 490, 497, 499], "ucb": [8, 439, 479, 483, 485, 494], "ultim": 480, "ultra": [469, 470], "un": 479, "unabl": 453, "unavail": 479, "unawar": 484, "unbound": [396, 449], "uncaught": 479, "uncertain": 343, "uncertainbool": 307, "uncertainti": [8, 17, 439, 500], "unchang": [127, 160, 304, 371], "uncharacter": 498, "uncorrel": [384, 498], "undefin": [127, 255, 304, 488], "under": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 304, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 387, 447, 451, 459, 462, 477, 478, 482, 491], "underflow": 89, "underli": [34, 57, 450, 459, 477, 479, 484, 485, 489, 492, 494, 497], "underscor": 479, "understand": [477, 498], "undesir": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 94, 486, 488, 491, 501], "undo": 478, "unequ": 447, "unevenli": 491, "unexpect": [79, 91, 127, 304, 479], "unexpected_kei": [127, 304], "unfilt": 486, "unfinish": 484, "unfortun": 498, "unhandl": 479, "unifi": 499, "uniform": [214, 255, 378, 379, 479], "uniformli": [209, 416], "uniniti": 361, "uninstal": 90, "unintend": [94, 357, 479, 480], "unintention": 501, "union": [9, 12, 15, 18, 34, 162, 246, 250, 255, 257, 259, 264, 268, 282, 284, 286, 288, 307, 404, 410, 416, 466, 482, 493], "uniqu": [58, 137, 161, 416, 428, 456, 479, 491], "unit": [140, 141, 142, 144, 145, 147, 154, 155, 158, 221, 299, 301, 307, 317, 325, 399, 402, 461, 474, 479], "unix": 499, "unknown": [188, 416, 433, 459, 474, 479, 490, 496, 498], "unlabel": 380, "unless": [127, 304, 477, 480, 482, 487, 491, 494], "unlik": [14, 15, 16, 18, 19, 456, 490, 497, 501], "unlock": 500, "unmaintain": 479, "unmatch": 355, "unmatchedattributeerror": 355, "unmeasur": [246, 436], "unnecessari": [479, 485, 499], "unnorm": 499, "unpromis": [450, 484], "unreach": 479, "unrealist": 495, "unrepresent": 479, "unrestrict": 357, "unsaf": 479, "unspecifi": [344, 479, 494], "unspecifiedtyp": 34, "unstructur": [232, 238, 494], "unstructure_bas": 479, "unstructure_with_typ": 479, "unsupervis": 371, "unsupport": [214, 248, 484], "until": [184, 186, 187, 188, 189, 246, 459, 477, 484, 495], "untouch": 378, "untransform": 34, "unusedobjectwarn": [450, 479, 484], "unveil": 472, "unwant": 41, "unweight": 490, "up": [34, 222, 246, 248, 433, 434, 435, 436, 437, 444, 446, 449, 451, 455, 456, 457, 461, 462, 466, 472, 477, 478, 479, 483, 486, 487, 490, 497, 501], "updat": [34, 127, 304, 371, 435, 438, 479, 480, 484], "update_measur": [34, 479], "upgrad": 479, "upon": [191, 271, 478, 479, 480, 486, 493, 496, 498], "upper": [8, 24, 162, 178, 216, 222, 396, 439, 451, 462, 472, 479, 486, 497, 501], "upper_bound": 493, "upper_threshold": 162, "upperconfidencebound": [24, 483, 494], "upstream": 480, "urg": 489, "url": 477, "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 71, 75, 99, 111, 127, 129, 147, 152, 155, 158, 161, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 223, 224, 236, 237, 246, 248, 250, 255, 257, 259, 264, 265, 268, 282, 284, 286, 288, 295, 304, 307, 310, 341, 357, 358, 366, 367, 371, 379, 380, 386, 397, 406, 407, 416, 421, 433, 441, 442, 448, 449, 450, 451, 452, 455, 456, 457, 461, 464, 468, 469, 470, 472, 474, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 497, 498, 499, 500, 501], "usa": 481, "usabl": [361, 478, 479, 491, 494], "usag": [398, 479, 486, 492, 500], "use_comp_rep": [99, 103, 489], "use_torch": [380, 441, 442, 451, 465, 466, 472], "user": [54, 55, 69, 84, 94, 127, 147, 150, 255, 257, 259, 264, 268, 282, 284, 286, 288, 296, 304, 371, 379, 402, 403, 438, 439, 444, 470, 474, 477, 478, 479, 480, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499], "userguid": 461, "usernam": 479, "userwarn": 478, "uses_shap_explain": 479, "usort": 479, "usr": 152, "usrcat": 152, "usrcatfingerprint": 152, "usrfingerprint": 152, "usual": [127, 246, 434, 435, 436, 469, 478, 487, 489, 491], "util": [34, 127, 199, 214, 222, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 341, 343, 344, 345, 371, 396, 402, 403, 415, 419, 433, 435, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 456, 459, 462, 465, 466, 472, 474, 477, 479, 483, 484, 485, 489, 490, 491, 492, 494, 495, 496, 498, 500], "uv": 479, "v": [474, 477, 498], "val": 362, "val_from_param1": 59, "val_from_param2": 59, "valid": [34, 37, 38, 39, 40, 41, 44, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 160, 161, 216, 219, 222, 225, 264, 381, 386, 444, 467, 469, 475, 478, 479, 480, 485, 486, 495], "validate_compat": 264, "validate_config": [34, 470, 479, 485], "validate_parameter_input": 34, "validate_target_input": 34, "valu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 43, 44, 45, 47, 48, 55, 57, 81, 99, 110, 111, 112, 113, 114, 115, 116, 117, 121, 124, 127, 129, 133, 135, 141, 144, 145, 147, 149, 150, 152, 155, 158, 160, 161, 162, 165, 166, 167, 189, 197, 199, 204, 205, 206, 207, 214, 216, 222, 223, 224, 244, 246, 248, 250, 255, 257, 259, 264, 268, 282, 284, 286, 288, 294, 301, 302, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 338, 342, 343, 344, 352, 355, 362, 371, 373, 377, 378, 379, 381, 383, 386, 387, 390, 396, 397, 404, 409, 410, 424, 425, 426, 427, 429, 430, 431, 434, 435, 436, 438, 439, 441, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 459, 462, 465, 466, 468, 469, 470, 472, 474, 477, 479, 480, 483, 484, 486, 487, 488, 489, 490, 497, 498, 499, 500, 501], "valuabl": [492, 495], "valueerror": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 228, 240, 246, 248, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 296, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 339, 355, 360, 362, 365, 373, 375, 379, 381, 386, 387, 388, 396, 402, 403, 416, 417, 428, 430, 431, 466, 478], "vanilla": 499, "var": [34, 127, 255, 257, 258, 259, 262, 264, 268, 282, 284, 286, 288, 304, 459, 500], "vari": [34, 222, 435, 487, 490], "variabl": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 250, 255, 257, 259, 264, 268, 282, 284, 286, 288, 299, 408, 422, 465, 474, 479, 480, 486, 491, 492, 494, 496], "varianc": [8, 17, 110, 284, 382, 479, 483], "variance_initial_valu": 110, "variance_prior": 110, "variant": [439, 479, 489, 497, 498], "variat": [462, 474], "varieti": [465, 480, 494, 495], "variou": [371, 396, 456, 463, 479, 480, 484, 489, 492, 495, 497, 499], "varucb": 479, "vector": [37, 453, 479, 481, 490], "vendor": 491, "verbal": 482, "verbos": [453, 454, 479], "veri": [246, 444, 446, 474, 484, 487, 489, 491, 496, 501], "verifi": [361, 441, 444, 445, 446, 447, 456, 457, 464, 466, 468, 480], "versa": 498, "versatil": 492, "version": [124, 127, 129, 133, 135, 304, 371, 407, 444, 446, 447, 456, 459, 464, 472, 477, 478, 479, 480, 482, 494, 497, 499, 500], "vert": 451, "via": [14, 17, 23, 33, 34, 47, 99, 127, 189, 199, 210, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 349, 357, 385, 436, 442, 449, 450, 453, 461, 464, 477, 479, 480, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 497, 498, 499, 500], "via_init": 494, "via_json": 494, "viabl": 87, "vice": 498, "view": [127, 214, 222, 304, 451, 493], "view_init": 451, "violat": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 82, 479], "viridi": 451, "virtual": 480, "visibl": 479, "visual": [435, 472, 474, 489], "vitro": 484, "vivo": 484, "voltag": 474, "voltage_grid": 474, "volum": [31, 477, 498], "vsa": 152, "vsafingerprint": 152, "vulner": [479, 480], "w0": 474, "w_i": 490, "wa": [17, 72, 73, 76, 80, 81, 90, 94, 161, 189, 255, 257, 259, 264, 268, 282, 284, 286, 288, 371, 373, 381, 417, 435, 477, 478, 479, 480, 482, 486, 487, 489, 491, 494, 498], "wai": [216, 449, 456, 457, 463, 464, 474, 476, 477, 484, 488, 489, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501], "wait": 484, "wall": 11, "want": [54, 246, 439, 444, 456, 459, 466, 472, 477, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 494, 496, 497], "warn": [68, 358, 444, 446, 447, 450, 465, 466, 479, 480], "warranti": [477, 482], "watch": 449, "water": [444, 445, 446, 447, 456, 486, 491], "waterfal": [99, 101, 479], "wavelength1": 474, "wavelength1_peak": 474, "wavelength2": 474, "wavelength2_peak": 474, "wavelength_cumbest": 474, "wavelength_grid": 474, "we": [28, 127, 244, 304, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 456, 457, 459, 461, 462, 464, 465, 466, 468, 469, 470, 472, 474, 477, 478, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496, 497, 498, 499, 500, 501], "web": 480, "weber": 481, "weight": [127, 129, 304, 461, 490, 494], "weight_kdalton": 491, "welcom": 480, "well": [127, 304, 371, 439, 450, 455, 476, 479, 480, 485, 486, 489, 491, 495, 497, 499], "were": [34, 77, 85, 436, 472, 478, 479, 484, 486, 491, 493], "what": [161, 187, 216, 244, 371, 419, 433, 453, 461, 470, 476, 480, 483, 485, 489, 490, 491, 497, 498, 500], "whatsnew": 345, "when": [9, 12, 15, 18, 34, 47, 55, 91, 127, 155, 160, 162, 187, 188, 189, 197, 199, 216, 250, 255, 257, 259, 264, 265, 268, 282, 284, 286, 288, 296, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 342, 344, 355, 357, 361, 371, 375, 380, 417, 444, 445, 447, 449, 454, 456, 457, 459, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501], "whenev": [28, 187, 494, 497], "where": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 240, 244, 252, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 338, 396, 402, 403, 416, 434, 435, 436, 439, 444, 446, 456, 459, 474, 477, 478, 479, 480, 482, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499], "wherea": [474, 494], "wherev": [482, 484], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 103, 127, 140, 141, 142, 144, 145, 147, 154, 155, 158, 199, 214, 222, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 379, 388, 396, 456, 479, 482, 485, 488], "which": [9, 12, 15, 17, 18, 34, 43, 44, 45, 47, 94, 99, 124, 127, 129, 133, 135, 161, 162, 181, 182, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 216, 222, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 292, 304, 307, 319, 325, 357, 361, 371, 377, 379, 384, 386, 389, 390, 409, 410, 419, 433, 435, 439, 442, 449, 450, 456, 457, 459, 461, 464, 465, 466, 470, 472, 474, 477, 478, 479, 480, 482, 483, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501], "while": [127, 216, 219, 225, 246, 304, 371, 450, 459, 472, 478, 479, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499], "whim": 152, "whimfingerprint": 152, "whole": [127, 304, 482], "whom": 482, "whose": [127, 160, 161, 216, 248, 304, 352, 355, 380, 433, 449, 456, 461, 484, 495], "wide": [495, 499], "width": [307, 318, 326, 390, 453, 474, 497, 499], "wieczorek": 481, "william": 498, "willing": 485, "win": [255, 459], "win_rat": 459, "window": [453, 479, 487], "winerror": 478, "winkel": 477, "wish": 494, "with_kwarg": [127, 304], "within": [34, 127, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 304, 371, 430, 464, 479, 482, 486, 487, 491, 496, 498, 500, 501], "without": [127, 188, 304, 461, 472, 474, 477, 479, 482, 484, 485, 486, 487, 491, 495, 498, 499, 501], "wolfgang": 477, "won": [127, 304, 491, 497], "work": [28, 127, 289, 304, 338, 371, 380, 444, 446, 447, 450, 468, 470, 479, 480, 481, 482, 486, 487, 492, 494, 495], "workaround": [478, 479], "workflow": [453, 477, 485, 494, 497, 500], "workload": 480, "world": [477, 485], "worldwid": 482, "worst": [9, 12, 15, 18, 246, 248, 250, 436], "would": [58, 89, 127, 160, 161, 244, 246, 252, 263, 304, 449, 456, 459, 474, 477, 480, 484, 486, 488, 489, 491, 492, 493, 494, 495, 496, 498, 501], "wrap": [106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 127, 232, 268, 272, 290, 291, 304, 357, 477, 479, 490], "wrapper": [1, 27, 250, 252, 264, 358, 472, 477, 492], "write": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 396, 402, 403, 477, 478, 482, 494], "writetext": 453, "written": [465, 466, 480, 482], "wrong": [470, 479], "wrongli": 478, "www": [477, 482], "x": [28, 125, 127, 162, 218, 238, 246, 248, 272, 304, 326, 335, 348, 354, 358, 371, 374, 391, 409, 419, 433, 434, 435, 436, 444, 445, 446, 447, 450, 451, 456, 468, 472, 474, 477, 479, 493, 496, 499], "x0": [462, 493], "x0_mesh": 462, "x1": [462, 493], "x1_mesh": 462, "x2": 493, "x_": [433, 441, 442, 464, 465, 466], "x_1": [441, 442, 464, 465, 466, 486], "x_2": [441, 442, 464, 465, 466, 486], "x_3": [441, 442, 464, 465, 466, 486], "x_4": [441, 442, 464, 465, 466], "x_5": 466, "x_6": 466, "x_i": 486, "x_new": 371, "x_pend": 28, "xdoctest": [127, 304], "xlabel": 462, "xlsx": [434, 435, 436], "xpho": [434, 435, 436], "xpu": [127, 304], "xxxx": 478, "xylen": [434, 435, 436, 438, 439], "y": [280, 304, 362, 371, 384, 409, 433, 434, 435, 436, 450, 451, 453, 456, 472, 474, 477, 498], "y0": 462, "y0_mesh": 462, "y1": 462, "y1_mesh": 462, "ye": 362, "year": [477, 498], "yet": [28, 479, 484, 492, 497], "yield": [6, 111, 127, 258, 304, 434, 435, 436, 438, 439, 444, 450, 453, 454, 456, 466, 468, 469, 470, 474, 477, 479, 483, 489, 490, 494, 497], "yield_cumbest": [434, 435, 436, 450], "yield_mean": 485, "yield_mod": 485, "yield_q_0": 485, "yield_std": 485, "ylabel": 462, "yml": 479, "you": [34, 54, 127, 304, 435, 439, 441, 449, 454, 456, 459, 461, 465, 466, 469, 474, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501], "your": [127, 304, 435, 449, 456, 459, 466, 474, 476, 477, 478, 479, 480, 482, 485, 486, 487, 488, 489, 491, 494, 495, 496, 497, 498, 499, 500, 501], "your_branch_nam": 480, "yourself": [459, 497], "z": [451, 477], "zdir": 451, "zero": [47, 65, 67, 127, 160, 162, 172, 304, 307, 317, 326, 371, 382, 456, 459, 486, 497, 498, 499], "zero_grad": [127, 304], "zip": [450, 451], "\u00b5fmt": 479, "\u0161o\u0161i\u0107": [477, 481]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedHypervolumeImprovement", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedHypervolumeImprovement", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.make_partitioning", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.IncompleteMeasurementsError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InputDataTypeWarning", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoMeasurementsError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.botorch", "ChainedMCObjective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSInitialization", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.add_type", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.make_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_with_type", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.make_dict_validator", "baybe.surrogates.validation.type_validation_converter", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.botorch", "AffinePosteriorTransform", "baybe.targets.enum", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.utils", "baybe.targets.utils.combine_numerical_targets", "baybe.transformations", "baybe.transformations.base", "MonotonicTransformation", "Transformation", "baybe.transformations.basic", "AbsoluteTransformation", "AffineTransformation", "BellTransformation", "ClampingTransformation", "CustomTransformation", "ExponentialTransformation", "IdentityTransformation", "LogarithmicTransformation", "PowerTransformation", "SigmoidTransformation", "TriangularTransformation", "TwoSidedAffineTransformation", "baybe.transformations.composite", "AdditiveTransformation", "ChainedTransformation", "MultiplicativeTransformation", "baybe.transformations.utils", "baybe.transformations.utils.combine_affine_transformations", "baybe.transformations.utils.compress_transformations", "baybe.transformations.utils.convert_transformation", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UncertainBool", "UnspecifiedType", "classproperty", "baybe.utils.basic.compose", "baybe.utils.basic.compose_two", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.clustering_algorithms", "baybe.utils.clustering_algorithms.third_party", "baybe.utils.clustering_algorithms.third_party.kmedoids", "KMedoids", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.conversion.to_string", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.handle_missing_values", "baybe.utils.dataframe.normalize_input_dtypes", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.ConvertibleToInterval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.metadata", "baybe.utils.metadata.ConvertibleToMeasurableMetadata", "MeasurableMetadata", "Metadata", "baybe.utils.metadata.to_metadata", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_object_names", "baybe.utils.validation.validate_objective_input", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Desirability Optimization", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Transfer Learning", "Transformations", "Optimizing a Laser\u2019s Wavelength", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "Transformations", "User Guide", "Utilities"], "titleterms": {"": [474, 480], "0": 479, "01": 479, "02": 479, "03": 479, "04": 479, "05": 479, "06": 479, "07": 479, "08": 479, "09": 479, "1": [479, 490], "10": 479, "11": 479, "12": 479, "13": 479, "14": 479, "15": 479, "16": 479, "17": 479, "19": 479, "2": [479, 490], "2022": 479, "2023": 479, "2024": 479, "2025": 479, "21": 479, "23": 479, "24": 479, "27": 479, "28": 479, "29": 479, "3": 479, "31": 479, "4": 479, "5": 479, "6": 479, "7": 479, "8": 479, "9": 479, "A": 477, "For": 491, "On": 489, "The": [459, 469, 474, 477, 488, 494, 495, 498], "abbrevi": 494, "absolut": 497, "absolutetransform": 316, "access": 461, "acqf": 2, "acquisit": [1, 2, 25, 27, 29, 30, 31, 32, 439, 484, 485], "acquisitionfunct": 26, "action": 498, "activ": [483, 491], "activate_paramet": 160, "ad": [438, 479, 484, 485, 498, 501], "add_fake_measur": 377, "add_noise_to_perturb_degenerate_row": 378, "add_parameter_nois": 379, "add_typ": 232, "addit": [456, 499], "additivekernel": 119, "additivetransform": 329, "advanc": [477, 496, 499], "affineposteriortransform": 304, "affinetransform": [317, 499], "altern": 494, "amount": 456, "an": 459, "appli": 488, "ar": 497, "arm": [458, 459], "arm64": 478, "arrai": 495, "arrays_to_datafram": 380, "assembli": 494, "asynchron": 484, "attr": 480, "augment": [337, 338, 339], "auto": 496, "automat": [494, 499], "avail": [439, 496], "avx": 478, "back": 477, "backtest": 432, "backward": 500, "bandit": [254, 458, 459], "base": [25, 36, 105, 123, 125, 139, 169, 180, 183, 193, 196, 201, 256, 258, 298, 312, 434, 435, 436, 441, 442, 456, 457, 466, 488, 495], "basesequentialmetarecommend": 186, "basic": [109, 171, 315, 340, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 437, 438, 485, 487, 489, 494, 499], "basickernel": 106, "batch": 485, "batchify_ensemble_predictor": 290, "batchify_mean_var_predict": 291, "batteri": 477, "bayb": [0, 1, 2, 25, 27, 29, 30, 31, 32, 33, 35, 36, 42, 46, 49, 50, 51, 52, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 109, 118, 122, 123, 125, 126, 128, 130, 132, 134, 136, 137, 138, 139, 143, 146, 148, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 179, 180, 182, 183, 185, 190, 192, 193, 195, 196, 198, 200, 201, 203, 208, 212, 213, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 261, 263, 265, 266, 267, 269, 272, 273, 274, 276, 277, 279, 281, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 306, 308, 309, 310, 311, 312, 315, 328, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 438, 477, 480], "bayesian": [195, 196, 198, 477, 492], "bayesianlinearsurrog": 282, "bayesianrecommend": 197, "bell": 497, "belltransform": [318, 499], "bernoulli": 459, "betabernoullimultiarmedbanditsurrog": 255, "betaprior": 172, "binari": [300, 302], "binarytarget": 301, "black": [433, 459], "block_deserialization_hook": 233, "block_serialization_hook": 234, "bo": 489, "boolean": [359, 360, 361, 362], "both": 468, "botorch": [126, 198, 303, 465], "botorchrecommend": 199, "bound": [449, 493], "box": [433, 459], "break": 479, "build": [459, 493], "bytes_to_human_read": 399, "cach": [485, 487], "call": 488, "callabl": [441, 442, 466, 495], "campaign": [33, 34, 433, 434, 435, 436, 439, 441, 442, 444, 445, 447, 450, 453, 454, 462, 465, 466, 468, 469, 485], "candid": [485, 488], "cardinalityconstraint": 37, "case": 459, "cast": 490, "catch_constant_target": 292, "categor": 143, "categoricalencod": 149, "categoricalparamet": [144, 491], "caution": 488, "chain": 499, "chainedmcobject": 127, "chainedtransform": 330, "challeng": 486, "chang": 479, "changelog": 479, "check_if_in": 360, "chemic": 477, "chemistri": [363, 364, 365, 366, 367], "choicevalu": 302, "citat": 477, "clampingtransform": [319, 499], "class": 480, "classproperti": 345, "clone": 477, "closer_el": 409, "closest_el": 410, "cluster": [203, 492], "clustering_algorithm": [368, 369, 370], "code": 480, "columntransform": 419, "combine_affine_transform": 333, "combine_numerical_target": 310, "compar": 468, "compat": 500, "compon": 449, "compos": 346, "compose_two": 347, "composit": [118, 261, 328, 496, 499], "compositekernel": 107, "compositesurrog": 262, "compress": 499, "compress_transform": 334, "comput": [486, 489], "condit": [42, 43, 486], "config": [469, 470, 485], "configur": [453, 454, 469, 488, 490, 494], "consider": 497, "constraint": [35, 36, 38, 42, 46, 49, 50, 51, 52, 62, 63, 64, 65, 66, 67, 440, 441, 442, 443, 444, 445, 446, 447, 456, 457, 486, 488, 493, 501], "construct": [434, 435, 436, 441, 442, 456, 465, 466, 490, 493, 499], "constructor": [493, 494], "continu": [46, 213, 440, 442, 456, 464, 483, 486, 491, 493, 498, 501], "continuouscardinalityconstraint": [47, 486], "continuousconstraint": 39, "continuouslinearconstraint": [48, 486], "continuouslinearequalityconstraint": 50, "continuouslinearinequalityconstraint": 51, "continuousnonlinearconstraint": 40, "continuousparamet": 140, "contribut": 480, "contributor": 481, "control": [485, 488], "conveni": [490, 499], "convent": 480, "convers": [372, 373, 374, 375, 490, 494], "convert": [235, 453], "convert_acqf": 30, "convert_to_float": 348, "convert_transform": 335, "convertibletointerv": 394, "convertibletomeasurablemetadata": 401, "copi": 494, "core": [215, 218, 219, 231, 232, 233, 234, 235, 236, 237, 238, 245, 246, 267, 274, 276], "cpu": 478, "creat": [433, 434, 435, 436, 439, 441, 442, 444, 445, 446, 447, 453, 454, 461, 464, 465, 468, 469, 472, 485, 493], "create_fake_input": 381, "creation": [434, 435, 436, 456, 457, 485, 497, 499, 501], "current": 499, "custom": [146, 263, 265, 433, 444, 448, 449, 452, 453, 454, 461, 496, 497, 499], "customdiscreteparamet": [147, 491], "customencod": 150, "customonnxsurrog": 264, "customtransform": 320, "data": [434, 435, 436, 493, 498], "datafram": [376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 441, 442, 466, 493, 494, 495], "de": [468, 486, 494], "default": [277, 493, 494], "defaultkernelfactori": 278, "defin": [433, 441, 442, 449, 450, 451, 461, 462, 465, 466, 470, 472, 477], "definit": 450, "depend": [445, 477, 491], "deprec": [49, 50, 51, 479, 500], "deprecationerror": 69, "deseri": 494, "deserialize_datafram": 242, "design": [477, 480], "desir": [128, 461, 485], "desirabilityobject": [129, 490], "develop": 480, "df_apply_dependency_augment": 338, "df_apply_permutation_augment": 339, "df_drop_single_value_column": 382, "df_drop_string_column": 383, "df_uncorrelated_featur": 384, "dictionari": [469, 470], "differ": 439, "dimens": 466, "discret": [52, 220, 223, 224, 225, 443, 444, 445, 446, 456, 465, 485, 486, 491, 493], "discretecardinalityconstraint": [53, 486], "discreteconstraint": 41, "discretecustomconstraint": [54, 486], "discretedependenciesconstraint": [55, 486], "discreteexcludeconstraint": [56, 486], "discretelinkedparametersconstraint": [57, 486], "discretenolabelduplicatesconstraint": [58, 486], "discreteparamet": 141, "discretepermutationinvarianceconstraint": [59, 486], "discreteproductconstraint": [60, 486], "discretesamplingmethod": 415, "discretesumconstraint": [61, 486], "discuss": 459, "disk": 487, "do": 495, "docstr": 480, "document": 454, "domin": 490, "dtypefloatnumpi": 406, "dtypefloatonnx": 407, "dtypefloattorch": 421, "dummi": 341, "duplic": 456, "dure": 501, "dynam": 488, "edbo": 279, "edbokernelfactori": 280, "effici": [486, 501], "emptysearchspaceerror": 70, "encod": 491, "end": 477, "enum": [130, 148, 305], "environ": 487, "equal": 499, "equival": 494, "estim": 501, "exampl": [434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 453, 454, 465, 466, 468, 469, 470, 475, 477, 489, 490], "except": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "exceptiongroup": 478, "exclud": 488, "exclus": [446, 447, 488], "exist": [497, 499], "expect": 498, "expectedimprov": 3, "experi": [444, 445, 446, 447, 453, 454, 468, 477, 484, 495], "experiment": [485, 487, 489], "expir": 479, "explain": [97, 489], "explicit": 493, "exponentialtransform": 321, "extend": 480, "extract": 496, "fake": 501, "faq": 476, "farthest_point_sampl": 416, "featur": 487, "field": 494, "file": [469, 470], "filter_df": 385, "find_subclass": 349, "finite_float": 424, "fix": [478, 479], "float": 487, "fp": 487, "fpsiniti": 209, "fpsrecommend": 210, "fraction_to_float": 373, "from": [469, 477, 479, 485, 493, 494, 497, 499], "full": [434, 435, 436, 493], "function": [433, 434, 435, 436, 439, 441, 442, 450, 465, 466, 480, 484, 485], "further": 485, "fuzzy_row_match": 386, "gammaprior": 173, "gaussian_process": [266, 267, 269, 272, 273, 274, 276, 277, 279], "gaussianmixtureclusteringrecommend": 204, "gaussianprocesspreset": 275, "gaussianprocesssurrog": 268, "gener": [472, 480, 492], "get": [438, 461, 485, 488], "get_baseclass": 350, "get_canonical_smil": 364, "get_fingerprint_class": 365, "get_parameters_from_datafram": 161, "get_subclass": 351, "get_transform_object": 387, "get_transform_paramet": 227, "github": 477, "global": 483, "group_duplicate_valu": 352, "guid": 500, "halfcauchyprior": 174, "halfnormalprior": 175, "handle_missing_valu": 388, "hilberts_factori": 353, "hook": [448, 449, 450, 451], "hybrid": [441, 466, 486], "identitytransform": 322, "imaginari": 459, "implement": [486, 487], "implicit": 490, "import": [433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 449, 451, 453, 454, 456, 457, 459, 461, 462, 464, 465, 466, 468, 469, 470, 472, 474, 489, 497], "improv": 451, "includ": 477, "inclus": 434, "incompatibilityerror": 71, "incompatibleacquisitionfunctionerror": 72, "incompatibleargumenterror": 73, "incompatibleexplainererror": 74, "incompatiblesearchspaceerror": 75, "incompatiblesurrogateerror": 76, "incomplet": 436, "incompletemeasurementserror": 77, "incorpor": 447, "independentgaussiansurrog": 257, "index": 477, "indic": 477, "infeasibilityerror": 78, "infiniteintervalerror": 395, "influenc": [486, 501], "inform": [485, 492], "initi": [434, 439], "inputdatatypewarn": 79, "insight": [95, 96, 97, 98, 100, 101, 102, 103, 489], "instal": [477, 478], "instanc": 449, "instead": [453, 454], "instruct": [487, 497], "interpret": 489, "interrupt": 450, "interv": [393, 394, 395, 396, 397], "invalidsurrogatemodelerror": 80, "invalidtargetvalueerror": 81, "invari": 456, "invok": 494, "irrelev": 498, "is_abstract": 361, "is_all_inst": 354, "is_cardinality_fulfil": 63, "is_inact": 162, "is_shap_explain": 102, "issu": [477, 478], "iter": [441, 442, 453, 454], "json": [485, 494], "kernel": [104, 105, 108, 109, 118], "kernel_factori": [269, 272], "kernelfactori": 270, "kmeansclusteringrecommend": 205, "kmedoid": [370, 371], "known": [477, 478], "label": 491, "laser": 474, "leak": 478, "learn": [471, 472, 483, 495, 498], "licens": [477, 482], "like": 491, "limit": [484, 486, 489, 497], "linear": [281, 442], "linearkernel": 110, "link": 454, "local": [477, 483], "logarithmictransform": 323, "logexpectedimprov": 4, "lognormalprior": 176, "look_up_target": 248, "lookup": [247, 248, 434, 435, 436, 441, 442, 450, 466, 472, 495], "loop": [433, 434, 435, 436, 472, 474, 477], "maco": 478, "maintain": [477, 481], "make_base_structure_hook": 236, "make_dict_valid": 294, "make_explainer_for_surrog": 103, "make_gp_from_preset": 276, "make_partit": 31, "manual": [444, 445, 446, 447], "mark": 484, "match": 497, "match_attribut": 355, "maternkernel": 111, "maxim": 497, "mean": 495, "meanpredictionsurrog": 284, "measur": [438, 453, 454, 485, 501], "measurablemetadata": 402, "mechan": [434, 435, 436, 495], "memori": [398, 399, 501], "memorys": 221, "meta": [182, 183, 185, 488, 492], "metadata": [400, 401, 403, 404], "metarecommend": 184, "method": [449, 480, 483], "minim": 497, "minimumcardinalityviolatedwarn": 82, "miss": 495, "mixin": 239, "mixtur": [455, 456, 457], "model": [439, 453, 454, 456, 457, 459, 474, 486, 489, 496], "modelnottrainederror": 83, "monitor": 451, "monkeypatch": [449, 450, 451], "monotonictransform": 313, "multi": [458, 459, 460, 489, 490, 496], "multipl": [495, 499], "multiplicativetransform": 331, "naiv": [190, 283], "naivehybridspacerecommend": 191, "name": 491, "name_to_smil": 366, "necessari": [434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 453, 454, 465, 466, 468, 469, 470], "negat": 497, "nest": 494, "ngboost": 285, "ngboostsurrog": 286, "nois": 501, "nomcacquisitionfunctionerror": 84, "nomeasurementserror": 85, "non": 490, "non_inf_float": 425, "non_nan_float": 426, "non_shap_explain": 98, "none": 495, "nonpredict": [200, 201, 203, 208], "nonpredictiverecommend": 202, "nonstring_to_tupl": 374, "norecommenderslefterror": 86, "normal": [461, 490, 497], "normalize_input_dtyp": 389, "normalprior": 177, "notenoughpointslefterror": 87, "nothingtosimulateerror": 88, "numer": [153, 306, 405, 406, 407, 408, 409, 410], "numericalcontinuousparamet": [154, 491], "numericaldiscreteparamet": [155, 491], "numericaltarget": [307, 497], "numericalunderflowerror": 89, "object": [122, 123, 124, 125, 126, 128, 130, 132, 134, 136, 137, 434, 435, 436, 439, 441, 442, 444, 445, 446, 447, 461, 465, 468, 472, 477, 485, 490, 494], "onnx": 453, "oper": 499, "optim": [433, 461, 462, 472, 474, 477, 485, 497, 501], "option": [477, 491], "optionalimporterror": 90, "order": [456, 487, 499], "output": [453, 454, 489, 490, 496], "overrid": 480, "packag": 477, "page": 489, "pamclusteringrecommend": 206, "parallel": [485, 487], "paramet": [138, 139, 142, 143, 146, 148, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 434, 435, 436, 439, 454, 456, 457, 485, 489, 491, 493, 501], "parameter_cartesian_prod_panda": 223, "parameter_cartesian_prod_polar": 224, "parameterencod": 151, "pareto": [132, 462], "paretoobject": [133, 490], "partial": [27, 484], "partialacquisitionfunct": 28, "pass": 454, "pend": 484, "perform": [434, 465, 466], "periodickernel": 112, "perman": 488, "permut": 456, "piecewisepolynomialkernel": 113, "plainkernelfactori": 271, "plot": [433, 450, 451, 489], "point": [487, 497], "polar": [478, 486, 487], "polynomialkernel": 114, "posterior": 485, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 258, "power": 497, "powertransform": 324, "practic": 497, "pre": 453, "precis": 487, "predict": 485, "preset": [273, 274, 276, 277, 279], "pretrain": 453, "pretty_print_df": 390, "print": [444, 445, 447], "prior": [168, 169, 170, 171], "probabilityofimprov": 7, "probabl": 451, "problem": [433, 450, 462, 474, 478], "product": [447, 493], "productkernel": 120, "pull": 480, "pure": [192, 193, 195, 196, 198, 200, 201, 203, 208, 483, 492], "purerecommend": 194, "pycharm": 478, "qexpectedhypervolumeimprov": 9, "qexpectedimprov": 10, "qknowledgegradi": 11, "qlogexpectedhypervolumeimprov": 12, "qlogexpectedimprov": 13, "qlognoisyexpectedhypervolumeimprov": 15, "qlognoisyexpectedimprov": 16, "qlognparego": 14, "qnegintegratedposteriorvari": 17, "qnoisyexpectedhypervolumeimprov": 18, "qnoisyexpectedimprov": 19, "qposteriorstandarddevi": 20, "qprobabilityofimprov": 21, "qsimpleregret": 22, "qthompsonsampl": 23, "quick": 477, "qupperconfidencebound": 24, "ramp": 497, "random": [411, 412, 413], "random_forest": 287, "randomforestsurrog": 288, "randomrecommend": 211, "rbfkernel": 115, "recommend": [179, 180, 182, 183, 185, 190, 192, 193, 195, 196, 198, 200, 201, 203, 208, 438, 439, 453, 454, 461, 465, 466, 468, 484, 485, 488, 492], "recommenderprotocol": 181, "reduct": 483, "refers_to": 356, "regist": 449, "register_custom_architectur": 265, "register_hook": 357, "relat": 478, "remov": 479, "replic": 496, "represent": [456, 457, 489, 493], "reproduc": 501, "request": 480, "restrict": 493, "result": [433, 450, 451, 474, 484], "rffkernel": 116, "role": 498, "row": 487, "rqkernel": 117, "run": [433, 441, 442, 459, 487], "sampl": [208, 483, 487, 492], "sample_numerical_df": 417, "sampling_algorithm": [414, 416, 417], "scalar": 131, "scale": 418, "scalekernel": 121, "scenario": [249, 250, 474, 487, 495], "scope": 499, "search": [456, 457, 461, 464, 477, 483, 493, 501], "searchspac": [212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 434, 436, 439, 441, 442, 444, 445, 446, 447, 463, 465, 466, 472], "searchspacematchwarn": 91, "searchspacetyp": 217, "see": 498, "select_constructor_hook": 237, "semaphor": 478, "sequenti": [185, 485], "sequentialmetarecommend": 187, "serial": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 467, 468, 485, 494, 499], "serializ": 486, "serialize_datafram": 243, "serialmixin": 240, "set": [433, 450, 451, 462, 464, 472, 474, 497], "set_random_se": 412, "setup": [438, 444, 445, 446, 447, 453, 454, 456, 457, 459, 462, 468], "shap": [96, 97, 98, 100, 101, 102, 103, 489], "shap_explain": 100, "shap_plot": 101, "shapinsight": 99, "sigmoid": 497, "sigmoidtransform": [325, 499], "signatur": 449, "simplex": [456, 493], "simul": [244, 245, 246, 247, 248, 249, 250, 251, 252, 433, 434, 435, 436, 450, 459, 472, 474, 487, 495], "simulate_experi": 246, "simulate_scenario": 250, "simulate_transfer_learn": 252, "singl": [134, 462, 495], "singletargetobject": [135, 490], "sklearnclusteringrecommend": 207, "slot": [456, 457], "smile": 157, "smiles_to_fingerprint_featur": 367, "smoothedboxprior": 178, "some": [441, 442], "sort_paramet": 163, "space": [456, 457, 461, 464, 466, 477, 483, 485, 493, 501], "span": 456, "stage": 453, "start": 477, "statist": 485, "stop": 450, "str_to_acqf": 32, "strategi": [439, 477], "streamingsequentialmetarecommend": 188, "string": [469, 494], "strtobool": 362, "studi": 496, "sub": 483, "subselectioncondit": [44, 486], "subspac": 493, "subspacecontinu": 214, "subspacediscret": 222, "substanc": [156, 157, 456, 477], "substanceencod": 152, "substanceparamet": [158, 491], "suggest": 478, "suitabl": 439, "sum": 447, "support": [478, 484], "surrog": [253, 254, 256, 258, 259, 261, 263, 265, 266, 267, 269, 272, 273, 274, 276, 277, 279, 281, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 439, 452, 453, 454, 486, 489, 496], "surrogateprotocol": 260, "synchron": 480, "synthet": [465, 466], "tabl": [434, 435, 436, 472, 477], "target": [297, 298, 299, 300, 302, 303, 305, 306, 308, 309, 310, 449, 460, 461, 462, 490, 497, 501], "task": 472, "taskparamet": [145, 491, 498], "technologi": 498, "telemetri": 477, "temporary_se": 413, "terminologi": [456, 494, 495, 498], "test": [441, 442, 465, 466], "theoret": 456, "thi": [434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 465, 466, 489], "third_parti": [369, 370], "thresholdcondit": [45, 486], "through": 498, "to_kernel_factori": 272, "to_metadata": 404, "to_object": 125, "to_searchspac": 218, "to_str": 375, "to_tensor": 391, "to_tupl": 358, "toggl": 488, "toler": 485, "tool": 480, "torch": [420, 421, 422, 478], "tradit": 457, "train": 453, "trajectori": 488, "transfer": [471, 472, 495, 498], "transfer_learn": [251, 252], "transform": [308, 311, 312, 314, 315, 328, 332, 333, 334, 335, 473, 497, 499], "transform_target_column": 392, "treasur": 498, "triangular": 497, "triangulartransform": [326, 499], "trigger": [449, 451], "two": 470, "twophasemetarecommend": 189, "twosidedaffinetransform": [327, 499], "type": 494, "type_validation_convert": 295, "uncertainbool": 343, "uncertainti": 483, "unidentifiedsubclasserror": 92, "uninterrupt": 450, "unlock": 498, "unmatchedattributeerror": 93, "unreleas": 479, "unspecifi": 342, "unspecifiedtyp": 344, "unstructure_with_typ": 238, "unsupport": 486, "unusedobjectwarn": 94, "upperconfidencebound": 8, "us": [434, 435, 436, 438, 439, 444, 445, 446, 447, 453, 454, 459, 465, 466, 493, 494, 495, 496], "usag": 489, "use_fallback_constructor_hook": 397, "user": 500, "util": [29, 30, 31, 32, 62, 63, 159, 160, 161, 162, 163, 241, 242, 243, 289, 290, 291, 292, 309, 310, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 501], "v": [449, 456, 462, 478, 485, 488], "valid": [64, 65, 66, 67, 136, 137, 164, 165, 166, 167, 226, 227, 228, 229, 293, 294, 295, 296, 423, 424, 425, 426, 427, 428, 429, 430, 431, 454, 470], "validate_cardinality_constraint_parameter_bound": 65, "validate_cardinality_constraints_are_nonoverlap": 66, "validate_constraint": 67, "validate_custom_architecture_cl": 296, "validate_decorrel": 165, "validate_is_finit": 166, "validate_not_nan": 427, "validate_object_nam": 428, "validate_objective_input": 429, "validate_paramet": 229, "validate_parameter_input": 430, "validate_parameter_nam": 228, "validate_searchspace_from_config": 219, "validate_simplex_subspace_from_config": 225, "validate_target_input": 431, "validate_target_nam": 137, "validate_unique_valu": 167, "valu": [461, 485, 491, 493, 494, 495], "variabl": 487, "varname_numpy_use_single_precis": 408, "varname_torch_use_single_precis": 422, "verif": [444, 445, 446, 447, 456, 457, 470], "verifi": 442, "via": [486, 489], "visual": 462, "wavelength": 474, "we": 495, "what": 495, "window": 478, "within": 493, "without": 478, "workflow": [480, 484], "wrap": [441, 442, 466, 499], "write": 480}})