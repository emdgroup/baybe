Search.setIndex({"alltitles": {"Acquisition function": [[405, "acquisition-function"]], "AcquisitionFunction": [[24, null]], "Active Learning": [[448, null]], "Added": [[444, "added"], [444, "id6"], [444, "id16"], [444, "id20"], [444, "id26"], [444, "id33"], [444, "id42"], [444, "id48"], [444, "id52"], [444, "id59"], [444, "id64"], [444, "id70"], [444, "id76"], [444, "id80"], [444, "id84"], [444, "id88"], [444, "id93"], [444, "id97"], [444, "id100"], [444, "id104"], [444, "id108"], [444, "id112"], [444, "id115"], [444, "id119"], [444, "id123"], [444, "id127"], [444, "id131"], [444, "id137"], [444, "id140"]], "Addendum: Description of transformation functions": [[427, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[465, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[463, null]], "Adding Measurements": [[450, "adding-measurements"]], "Adding Partial Results": [[449, "adding-partial-results"]], "AdditiveKernel": [[114, null]], "Advanced Example: Chemical Substances": [[442, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[425, "an-imaginary-use-case"]], "Array-Based Callables": [[460, null]], "Asynchronous Workflows": [[449, null]], "Auto-Replication": [[461, null]], "Automatic field conversion": [[459, "automatic-field-conversion"]], "Available Models": [[461, "available-models"]], "Available recommenders suitable for initial recommendation": [[405, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[405, "available-surrogate-models"]], "Backtesting": [[398, null], [438, null]], "BaseSequentialMetaRecommender": [[184, null]], "Basic Creation": [[450, "basic-creation"]], "Basic Instructions": [[452, "basic-instructions"]], "Basic Usage": [[454, "basic-usage"]], "Basic example for using BayBE": [[404, null]], "Basic string assembly": [[459, "basic-string-assembly"]], "BasicKernel": [[101, null]], "Basics": [[403, null], [450, "basics"]], "Batch Optimization": [[450, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[442, null]], "Bayesian Recommenders": [[457, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[280, null]], "BayesianRecommender": [[195, null]], "Bernoulli Multi Armed Bandit": [[425, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[253, null]], "BetaPrior": [[170, null]], "BinaryTarget": [[298, null]], "BotorchRecommender": [[197, null]], "Bound methods": [[415, "bound-methods"]], "Breaking Changes": [[444, "breaking-changes"], [444, "id25"], [444, "id32"]], "Building from the Product of Parameter Values": [[458, "building-from-the-product-of-parameter-values"], [458, "id2"]], "Building the Model": [[425, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[443, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[450, "caching-of-recommendations"]], "Campaign": [[31, null]], "Campaign Setup": [[428, "campaign-setup"]], "Campaign Stopping": [[416, null]], "Campaigns": [[450, null]], "Candidate Control in Discrete Spaces": [[450, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[453, null]], "CardinalityConstraint": [[34, null]], "CategoricalEncoding": [[147, null]], "CategoricalParameter": [[142, null], [456, "categoricalparameter"]], "Caution": [[453, null]], "Changed": [[444, "changed"], [444, "id2"], [444, "id4"], [444, "id7"], [444, "id11"], [444, "id17"], [444, "id21"], [444, "id27"], [444, "id34"], [444, "id39"], [444, "id43"], [444, "id49"], [444, "id53"], [444, "id56"], [444, "id60"], [444, "id65"], [444, "id71"], [444, "id77"], [444, "id81"], [444, "id85"], [444, "id89"], [444, "id94"], [444, "id98"], [444, "id101"], [444, "id105"], [444, "id109"], [444, "id113"], [444, "id116"], [444, "id120"], [444, "id124"], [444, "id128"], [444, "id132"]], "Changelog": [[444, null]], "Clustering Recommenders": [[457, "clustering-recommenders"]], "Code Design": [[445, "code-design"]], "ColumnTransformer": [[387, null]], "Comparing recommendations in both objects": [[434, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[461, "composite-surrogates"]], "CompositeKernel": [[102, null]], "CompositeSurrogate": [[260, null]], "Computational Challenges": [[451, null]], "Condition": [[40, null]], "Conditions": [[451, "conditions"]], "Constraint": [[35, null]], "Constraint Setup": [[422, "constraint-setup"]], "Constraints": [[451, null]], "Constraints Continuous": [[406, null]], "Constraints Discrete": [[409, null]], "Constraints Setup": [[423, "constraints-setup"]], "Construct the campaign and run some iterations": [[407, "construct-the-campaign-and-run-some-iterations"], [408, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[458, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[400, "constructing-campaigns-for-the-simulation-loop"], [401, "constructing-campaigns-for-the-simulation-loop"], [402, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[458, "constructing-from-a-dataframe"], [458, "id1"], [458, "id3"]], "Constructing hybrid recommenders": [[432, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[431, "constructing-the-campaign-and-performing-a-recommendation"], [432, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[432, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[451, "continuous-constraints"]], "Continuous Parameters": [[456, "continuous-parameters"]], "Continuous Subspaces": [[458, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[44, null], [451, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[36, null]], "ContinuousLinearConstraint": [[45, null], [451, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[37, null]], "ContinuousParameter": [[138, null]], "Contributing to BayBE": [[445, null]], "Contributors": [[446, null], [446, "id1"]], "Convenience construction and implicit conversion": [[455, null]], "Conventions for attrs classes": [[445, "conventions-for-attrs-classes"]], "Convert model to onnx": [[419, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[419, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[420, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[419, "create-campaign"]], "Creating Continuous Search Spaces": [[430, null]], "Creating a Campaign": [[450, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[458, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[435, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[410, "creating-and-printing-the-campaign"], [411, "creating-and-printing-the-campaign"], [413, "creating-and-printing-the-campaign"], [427, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[399, "creating-the-campaigns"]], "Creating the Objective": [[401, "creating-the-objective"]], "Creating the Optimization Objective": [[438, "creating-the-optimization-objective"], [439, "creating-the-optimization-objective"]], "Creating the Search Space": [[438, "creating-the-search-space"]], "Creating the Searchspace": [[439, "creating-the-searchspace"]], "Creating the campaign": [[405, "creating-the-campaign"], [420, "creating-the-campaign"], [434, "creating-the-campaign"]], "Creating the constraint": [[410, "creating-the-constraint"], [412, "creating-the-constraint"]], "Creating the constraints": [[411, "creating-the-constraints"], [413, "creating-the-constraints"]], "Creating the objective": [[427, "creating-the-objective"]], "Creating the recommender object": [[405, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[400, "creating-the-searchspace-and-the-objective"], [402, "creating-the-searchspace-and-the-objective"], [407, "creating-the-searchspace-and-the-objective"], [408, "creating-the-searchspace-and-the-objective"], [410, "creating-the-searchspace-and-the-objective"], [411, "creating-the-searchspace-and-the-objective"], [412, "creating-the-searchspace-and-the-objective"], [413, "creating-the-searchspace-and-the-objective"], [431, "creating-the-searchspace-and-the-objective"]], "Creation From a JSON Config": [[450, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[461, null]], "Custom Hooks": [[414, null]], "Custom Surrogates": [[418, null]], "CustomDiscreteParameter": [[145, null], [456, "customdiscreteparameter"]], "CustomEncoding": [[148, null]], "CustomONNXSurrogate": [[262, null]], "Dataframe deserialization": [[459, "dataframe-deserialization"]], "DefaultKernelFactory": [[276, null]], "Defining config dictionaries": [[436, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[416, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[417, "defining-the-hook"]], "Defining the Hooks": [[415, "defining-the-hooks"]], "Defining the Optimization Objective": [[442, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[399, "defining-the-optimization-problem"], [428, "defining-the-optimization-problem"]], "Defining the Search Space": [[442, "defining-the-search-space"]], "Defining the Tasks": [[438, "defining-the-tasks"], [439, "defining-the-tasks"]], "Defining the targets": [[427, "defining-the-targets"]], "Defining the test function": [[407, "defining-the-test-function"], [408, "defining-the-test-function"], [431, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[432, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[444, "deprecations"], [444, "id23"], [444, "id30"], [444, "id37"], [444, "id46"], [444, "id62"], [444, "id68"], [444, "id74"], [444, "id91"]], "Deserialization from configuration strings": [[459, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[126, null], [455, "desirabilityobjective"]], "Developer Tools": [[445, "developer-tools"]], "Discrete Constraints": [[451, "discrete-constraints"]], "Discrete Parameters": [[456, "discrete-parameters"]], "Discrete Subspaces": [[458, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[422, null]], "DiscreteCardinalityConstraint": [[51, null], [451, "discretecardinalityconstraint"]], "DiscreteConstraint": [[38, null]], "DiscreteCustomConstraint": [[52, null], [451, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[53, null], [451, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[54, null], [451, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[55, null], [451, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[56, null], [451, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[139, null]], "DiscretePermutationInvarianceConstraint": [[57, null], [451, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[58, null]], "DiscreteSamplingMethod": [[383, null]], "DiscreteSumConstraint": [[59, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[451, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[425, "discussion"]], "Disk Caching": [[452, "disk-caching"]], "Dummy": [[319, null]], "Duplicate Substances": [[422, "duplicate-substances"]], "Dynamic Exclusion": [[453, "dynamic-exclusion"]], "EDBOKernelFactory": [[278, null]], "EXPERIMENTAL: Floating Point Precision": [[452, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[465, null]], "Environment Variables": [[452, null]], "Equivalent copies": [[459, null]], "Estimation with Constraints": [[465, null]], "Example Searchspace and objective parameters": [[405, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[407, null]], "Example for creating campaigns from configs": [[435, null]], "Example for custom parameter passing in surrogate models": [[420, null]], "Example for full simulation loop using a table-based lookup mechanism": [[401, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[402, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[400, null]], "Example for linear constraints in a continuous searchspace": [[408, null]], "Example for surrogate model with a custom pretrained model": [[419, null]], "Example for the serialization of a campaign": [[434, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[431, null]], "Example for using custom constraints in discrete searchspaces": [[410, null]], "Example for using dependency constraints in discrete searchspaces": [[411, null]], "Example for using different strategies": [[405, null]], "Example for using exclusion constraints in discrete searchspaces": [[412, null]], "Example for using exclusion constraints incorporating sums and products": [[413, null]], "Example for using synthetic test functions in hybrid spaces": [[432, null]], "Example for using the multi target mode for the objective": [[427, null]], "Example for validation of a config file": [[436, null]], "Examples": [[440, null]], "Examples On This Page": [[454, null]], "Excluding Configurations": [[453, "excluding-configurations"]], "Expectations": [[463, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[419, "experiment-setup"], [420, "experiment-setup"]], "Experiment setup": [[410, "experiment-setup"], [411, "experiment-setup"], [412, "experiment-setup"], [413, "experiment-setup"], [434, "experiment-setup"]], "Experiment setup and creating the searchspace": [[427, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[452, null]], "Experimental Representation Limits": [[454, null]], "Experimental and Computational Representations": [[454, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.6.*)": [[444, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[444, "expired-deprecations-from-0-7"]], "Explainers": [[454, "explainers"]], "Extending BayBE\u2019s Functionality": [[445, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[461, "extracting-the-model-for-advanced-study"]], "FAQ": [[441, null]], "FPSRecommender": [[209, null]], "Fixed": [[444, "fixed"], [444, "id8"], [444, "id12"], [444, "id14"], [444, "id18"], [444, "id22"], [444, "id28"], [444, "id36"], [444, "id40"], [444, "id45"], [444, "id50"], [444, "id54"], [444, "id61"], [444, "id66"], [444, "id72"], [444, "id78"], [444, "id86"], [444, "id90"], [444, "id95"], [444, "id102"], [444, "id106"], [444, "id110"], [444, "id117"], [444, "id121"], [444, "id125"], [444, "id129"], [444, "id133"], [444, "id135"], [444, "id138"]], "For Label-Like Parameters: Values and Active Values": [[456, "label-like"]], "From GitHub": [[442, "from-github"]], "From Local Clone": [[442, "from-local-clone"]], "From Package Index": [[442, "from-package-index"]], "From the Default Constructor": [[458, "from-the-default-constructor"]], "Further Information": [[450, "further-information"]], "GammaPrior": [[171, null]], "GaussianMixtureClusteringRecommender": [[204, null]], "GaussianProcessPreset": [[273, null]], "GaussianProcessSurrogate": [[266, null]], "General Information": [[457, "general-information"]], "General Workflow": [[445, "general-workflow"]], "Generating Lookup Tables": [[438, "generating-lookup-tables"], [439, "generating-lookup-tables"]], "Getting Recommendations": [[450, "getting-recommendations"], [453, null]], "Getting a recommendation and adding measurements": [[404, "getting-a-recommendation-and-adding-measurements"]], "Global Uncertainty Reduction": [[448, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[172, null]], "HalfNormalPrior": [[173, null]], "Hook instance vs. target instance": [[415, null]], "Hybrid constraints": [[451, null]], "Imports": [[399, "imports"], [415, "imports"], [417, "imports"], [422, "imports"], [423, "imports"], [425, "imports"], [428, "imports"], [430, "imports"], [438, "imports"], [439, "imports"]], "Inclusion of initial data": [[400, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[255, null]], "Indices and Tables": [[442, "indices-and-tables"]], "Influence of Continuous Parameters": [[465, null]], "Insights": [[454, null]], "Installation Related Issues": [[443, "installation-related-issues"]], "Interval": [[363, null]], "Invoking alternative constructors": [[459, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[419, "iterate-with-recommendations-and-measurements"], [420, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[459, "json-de-serialization"]], "KMeansClusteringRecommender": [[205, null]], "Kernel": [[103, null]], "KernelFactory": [[268, null]], "Known Issues": [[443, null]], "License": [[447, null]], "Limitations": [[462, "limitations"]], "LinearKernel": [[105, null]], "Links for documentation": [[420, "links-for-documentation"]], "Local Uncertainty Reduction": [[448, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[174, null]], "Lookup functionality and data creation": [[400, "lookup-functionality-and-data-creation"], [401, "lookup-functionality-and-data-creation"], [402, "lookup-functionality-and-data-creation"]], "MATCH mode": [[462, "match-mode"]], "MIN and MAX mode": [[462, "min-and-max-mode"]], "Maintainers": [[446, "maintainers"]], "Mandatory target bounds": [[455, null]], "Manual verification of the constraint": [[410, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[411, "manual-verification-of-the-constraints"], [412, "manual-verification-of-the-constraints"], [413, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[449, "marking-experiments-as-pending"]], "MaternKernel": [[106, null]], "MeanPredictionSurrogate": [[282, null]], "Memory During Optimization": [[465, null]], "MemorySize": [[220, null]], "Meta Recommenders": [[453, null], [457, "meta-recommenders"]], "MetaRecommender": [[182, null]], "Method overrides": [[445, "method-overrides"]], "Missing Lookup Values": [[460, null]], "Mixtures": [[421, null]], "Model Interpretation in BO": [[454, null]], "Model Outputs": [[419, "model-outputs"], [420, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[422, null]], "Modeling a Mixture in Traditional Representation": [[423, null]], "Monitoring the Probability of Improvement": [[417, null]], "Monkeypatching": [[415, "monkeypatching"], [416, null], [417, "monkeypatching"]], "Multi Target": [[426, null]], "Multi-Armed Bandit": [[424, null]], "Multi-output Modeling": [[461, "multi-output-modeling"]], "NGBoostSurrogate": [[284, null]], "NaiveHybridSpaceRecommender": [[189, null]], "Necessary imports": [[419, "necessary-imports"], [420, "necessary-imports"], [434, "necessary-imports"], [435, "necessary-imports"], [436, "necessary-imports"]], "Necessary imports for this example": [[400, "necessary-imports-for-this-example"], [401, "necessary-imports-for-this-example"], [402, "necessary-imports-for-this-example"], [404, "necessary-imports-for-this-example"], [405, "necessary-imports-for-this-example"], [407, "necessary-imports-for-this-example"], [408, "necessary-imports-for-this-example"], [410, "necessary-imports-for-this-example"], [411, "necessary-imports-for-this-example"], [412, "necessary-imports-for-this-example"], [413, "necessary-imports-for-this-example"], [427, "necessary-imports-for-this-example"], [431, "necessary-imports-for-this-example"], [432, "necessary-imports-for-this-example"]], "Nesting objects": [[459, "nesting-objects"]], "Non-dominated Configurations": [[455, null]], "NonPredictiveRecommender": [[202, null]], "NormalPrior": [[175, null]], "NumericalContinuousParameter": [[152, null], [456, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[153, null], [456, "numericaldiscreteparameter"]], "NumericalTarget": [[304, null], [462, "numericaltarget"]], "Objective": [[121, null], [455, null]], "Optimizing a Custom Black-Box Function": [[399, null]], "Optional Dependencies": [[442, "optional-dependencies"]], "Optional Dependency": [[456, null]], "Optional: Defining the Optimization Strategy": [[442, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[422, null]], "PAMClusteringRecommender": [[206, null]], "Parameter": [[140, null]], "Parameter Encoding": [[456, null]], "Parameter Importance via SHAP": [[454, "parameter-importance-via-shap"]], "Parameter Names": [[456, null]], "Parameter Setup": [[422, "parameter-setup"], [423, "parameter-setup"]], "Parameter tolerances": [[450, null]], "ParameterEncoding": [[149, null]], "Parameters": [[456, null]], "Parameters for a full simulation loop": [[400, "parameters-for-a-full-simulation-loop"], [401, "parameters-for-a-full-simulation-loop"], [402, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[131, null], [455, "paretoobjective"]], "PartialAcquisitionFunction": [[26, null]], "Performing some iterations": [[427, "performing-some-iterations"]], "Performing the simulation loop": [[400, "performing-the-simulation-loop"]], "PeriodicKernel": [[107, null]], "Permanent Exclusion": [[453, "permanent-exclusion"]], "Permutation Invariance": [[422, "permutation-invariance"]], "PiecewisePolynomialKernel": [[108, null]], "PlainKernelFactory": [[269, null]], "Plots": [[454, "plots"]], "Plotting the Results": [[399, "plotting-the-results"], [416, "plotting-the-results"], [417, "plotting-the-results"]], "Polars": [[452, "polars"]], "PolynomialKernel": [[109, null]], "Posterior Statistics with Desirability Objectives": [[450, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Predictive Statistics": [[450, "predictive-statistics"]], "Prior": [[168, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[416, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[115, null]], "Pure Recommenders": [[457, "pure-recommenders"]], "PureRecommender": [[192, null]], "Purely Continuous Search Spaces": [[448, null]], "PyCharm vs. exceptiongroup": [[443, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[110, null]], "RFFKernel": [[111, null]], "RQKernel": [[112, null]], "RandomForestSurrogate": [[286, null]], "RandomRecommender": [[210, null]], "RecommenderProtocol": [[179, null]], "Recommenders": [[457, null]], "Registering Custom Hooks": [[415, null]], "Removed": [[444, "removed"], [444, "id9"], [444, "id29"], [444, "id35"], [444, "id44"], [444, "id57"], [444, "id67"], [444, "id73"], [444, "id82"]], "Representation of Data within Discrete Subspaces": [[458, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[465, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[458, "restricting-search-spaces-using-constraints"]], "Row Order": [[452, null]], "Running the Simulation": [[425, "running-the-simulation"]], "Running the Simulation Loop": [[399, "running-the-simulation-loop"]], "SHAPInsight": [[94, null]], "SKLearnClusteringRecommender": [[207, null]], "Sampling Recommenders": [[457, "sampling-recommenders"]], "Scalarizer": [[129, null]], "ScaleKernel": [[116, null]], "Search Space Creation": [[422, "search-space-creation"], [423, "search-space-creation"]], "Search Space Memory Estimation": [[465, "search-space-memory-estimation"]], "Search Spaces": [[458, null]], "SearchSpace": [[215, null]], "SearchSpaceType": [[216, null]], "Searchspaces": [[429, null]], "Seeing Transfer Learning in Action": [[463, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[450, null]], "SequentialMetaRecommender": [[185, null]], "SerialMixin": [[238, null]], "Serialization": [[433, null], [450, "serialization"], [459, null]], "Serialization and de-serialization": [[434, "serialization-and-de-serialization"]], "Settings": [[399, "settings"], [416, "settings"], [417, "settings"], [428, "settings"], [430, "settings"], [438, "settings"], [439, "settings"]], "Setup": [[404, "setup"], [425, "setup"]], "Signature components": [[415, null]], "Simplex Construction": [[422, null]], "Simulating Multiple Scenarios": [[460, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[460, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[460, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[416, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[416, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[460, null]], "Simulation Loop": [[438, "simulation-loop"], [439, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[428, null]], "SingleTargetObjective": [[133, null], [455, "singletargetobjective"]], "Slot-based Representation": [[423, null]], "SmoothedBoxPrior": [[176, null]], "StreamingSequentialMetaRecommender": [[186, null]], "Sub-Sampling Method": [[448, null]], "SubSelectionCondition": [[41, null], [451, "subselectioncondition"]], "SubspaceContinuous": [[213, null]], "SubspaceDiscrete": [[221, null]], "Substance Amounts": [[422, "substance-amounts"]], "SubstanceEncoding": [[150, null]], "SubstanceParameter": [[156, null], [456, "substanceparameter"]], "Suggested Fix": [[443, null], [443, null], [443, null], [443, null]], "Supported Acquisition Functions": [[449, null]], "Supported Recommenders": [[449, null]], "Surrogate": [[257, null]], "Surrogate Replication": [[461, "surrogate-replication"]], "SurrogateProtocol": [[258, null]], "Surrogates": [[461, null]], "Synchronizing Pull Requests": [[445, "synchronizing-pull-requests"]], "Target": [[296, null]], "TargetMode": [[301, null]], "TargetTransformation": [[302, null]], "Targets": [[462, null]], "TaskParameter": [[143, null], [456, "taskparameter"]], "Technology": [[463, null]], "Telemetry": [[452, "telemetry"]], "Telemetry Scope": [[452, null]], "Terminology": [[422, "terminology"], [459, null], [463, null]], "Terminology Continued": [[463, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[460, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[425, "the-black-box-model"]], "The Lookup Mechanism": [[460, "the-lookup-mechanism"]], "The Optimization Loop": [[442, "the-optimization-loop"]], "The Role of the TaskParameter": [[463, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[435, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[453, "the-recommend-call"]], "The type field": [[459, "the-type-field"]], "Theoretical Span": [[422, null]], "ThresholdCondition": [[42, null], [451, "thresholdcondition"]], "Trajectory-Based Control": [[453, null]], "Transfer Learning": [[437, null], [439, null], [463, null]], "Triggering the Hook": [[417, "triggering-the-hook"]], "Triggering the Hooks": [[415, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[187, null]], "Uninstalling Internet Packages": [[452, null]], "Unlocking Data Treasures Through Transfer Learning": [[463, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[321, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[464, null]], "Using Custom Models": [[461, "using-custom-models"]], "Using Explicit Bounds": [[458, "using-explicit-bounds"]], "Using None": [[460, "using-none"]], "Using a Callable": [[460, "using-a-callable"]], "Using a Dataframe": [[460, "using-a-dataframe"]], "Using abbreviations": [[459, "using-abbreviations"]], "Using configuration instead": [[419, "using-configuration-instead"], [420, "using-configuration-instead"]], "Using default values": [[459, "using-default-values"]], "Utilities": [[465, null]], "Validation of model parameters": [[420, "validation-of-model-parameters"]], "Verification of Constraints": [[422, "verification-of-constraints"], [423, "verification-of-constraints"]], "Verification of Span": [[422, "verification-of-span"]], "Verification of the two dictionaries": [[436, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[408, "verify-the-constraints"]], "Visualization": [[428, "visualization"]], "Windows \u2013 Torch Problems": [[443, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[407, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [408, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [432, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[445, "writing-docstrings"]], "Writing classes": [[445, "writing-classes"]], "[0.1.0] - 2022-10-01": [[444, "id139"]], "[0.10.0] - 2024-08-02": [[444, "id31"]], "[0.11.0] - 2024-09-09": [[444, "id24"]], "[0.11.1] - 2024-10-01": [[444, "id19"]], "[0.11.2] - 2024-10-11": [[444, "id15"]], "[0.11.3] - 2024-11-06": [[444, "id13"]], "[0.11.4] - 2025-01-27": [[444, "id10"]], "[0.12.0] - 2025-01-28": [[444, "id5"]], "[0.12.1] - 2025-01-29": [[444, "id3"]], "[0.12.2] - 2025-01-31": [[444, "id1"]], "[0.2.0] - 2022-11-10": [[444, "id136"]], "[0.2.1] - 2022-12-01": [[444, "id134"]], "[0.2.2] - 2023-01-13": [[444, "id130"]], "[0.2.3] - 2023-03-14": [[444, "id126"]], "[0.2.4] - 2023-03-24": [[444, "id122"]], "[0.3.0] - 2023-06-27": [[444, "id118"]], "[0.3.1] - 2023-07-17": [[444, "id114"]], "[0.3.2] - 2023-07-24": [[444, "id111"]], "[0.4.0] - 2023-08-16": [[444, "id107"]], "[0.4.1] - 2023-08-23": [[444, "id103"]], "[0.4.2] - 2023-08-29": [[444, "id99"]], "[0.5.0] - 2023-09-15": [[444, "id96"]], "[0.5.1] - 2023-10-19": [[444, "id92"]], "[0.6.0] - 2023-11-17": [[444, "id87"]], "[0.6.1] - 2023-11-27": [[444, "id83"]], "[0.7.0] - 2023-12-04": [[444, "id79"]], "[0.7.1] - 2023-12-07": [[444, "id75"]], "[0.7.2] - 2024-01-24": [[444, "id69"]], "[0.7.3] - 2024-02-09": [[444, "id63"]], "[0.7.4] - 2024-02-28": [[444, "id58"]], "[0.8.0] - 2024-02-29": [[444, "id55"]], "[0.8.1] - 2024-03-11": [[444, "id51"]], "[0.8.2] - 2024-03-27": [[444, "id47"]], "[0.9.0] - 2024-05-21": [[444, "id41"]], "[0.9.1] - 2024-06-04": [[444, "id38"]], "[Unreleased]": [[444, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[23, null]], "baybe.acquisition.partial": [[25, null]], "baybe.acquisition.utils": [[27, null]], "baybe.acquisition.utils.convert_acqf": [[28, null]], "baybe.acquisition.utils.str_to_acqf": [[29, null]], "baybe.campaign": [[30, null]], "baybe.constraints": [[32, null]], "baybe.constraints.base": [[33, null]], "baybe.constraints.conditions": [[39, null]], "baybe.constraints.continuous": [[43, null]], "baybe.constraints.deprecation": [[46, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[47, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[48, null]], "baybe.constraints.deprecation.structure_constraints": [[49, null]], "baybe.constraints.discrete": [[50, null]], "baybe.constraints.utils": [[60, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[61, null]], "baybe.constraints.validation": [[62, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[63, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[64, null]], "baybe.constraints.validation.validate_constraints": [[65, null]], "baybe.exceptions": [[66, null]], "baybe.exceptions.DeprecationError": [[67, null]], "baybe.exceptions.EmptySearchSpaceError": [[68, null]], "baybe.exceptions.IncompatibilityError": [[69, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, null]], "baybe.exceptions.IncompatibleArgumentError": [[71, null]], "baybe.exceptions.IncompatibleExplainerError": [[72, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, null]], "baybe.exceptions.IncompatibleSurrogateError": [[74, null]], "baybe.exceptions.InfeasibilityError": [[75, null]], "baybe.exceptions.InvalidSurrogateModelError": [[76, null]], "baybe.exceptions.InvalidTargetValueError": [[77, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[78, null]], "baybe.exceptions.ModelNotTrainedError": [[79, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[80, null]], "baybe.exceptions.NoRecommendersLeftError": [[81, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[82, null]], "baybe.exceptions.NothingToSimulateError": [[83, null]], "baybe.exceptions.NumericalUnderflowError": [[84, null]], "baybe.exceptions.OptionalImportError": [[85, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[86, null]], "baybe.exceptions.UnidentifiedSubclassError": [[87, null]], "baybe.exceptions.UnmatchedAttributeError": [[88, null]], "baybe.exceptions.UnusedObjectWarning": [[89, null]], "baybe.insights": [[90, null]], "baybe.insights.shap": [[91, null]], "baybe.insights.shap.EXPLAINERS": [[92, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[93, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[95, null]], "baybe.insights.shap.SHAP_PLOTS": [[96, null]], "baybe.insights.shap.is_shap_explainer": [[97, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[98, null]], "baybe.kernels": [[99, null]], "baybe.kernels.base": [[100, null]], "baybe.kernels.basic": [[104, null]], "baybe.kernels.composite": [[113, null]], "baybe.objective": [[117, null]], "baybe.objective.Objective": [[118, null]], "baybe.objectives": [[119, null]], "baybe.objectives.base": [[120, null]], "baybe.objectives.base.to_objective": [[122, null]], "baybe.objectives.deprecation": [[123, null]], "baybe.objectives.deprecation.structure_objective": [[124, null]], "baybe.objectives.desirability": [[125, null]], "baybe.objectives.desirability.scalarize": [[127, null]], "baybe.objectives.enum": [[128, null]], "baybe.objectives.pareto": [[130, null]], "baybe.objectives.single": [[132, null]], "baybe.objectives.validation": [[134, null]], "baybe.objectives.validation.validate_target_names": [[135, null]], "baybe.parameters": [[136, null]], "baybe.parameters.base": [[137, null]], "baybe.parameters.categorical": [[141, null]], "baybe.parameters.custom": [[144, null]], "baybe.parameters.enum": [[146, null]], "baybe.parameters.numerical": [[151, null]], "baybe.parameters.substance": [[154, null]], "baybe.parameters.substance.Smiles": [[155, null]], "baybe.parameters.utils": [[157, null]], "baybe.parameters.utils.activate_parameter": [[158, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[159, null]], "baybe.parameters.utils.is_inactive": [[160, null]], "baybe.parameters.utils.sort_parameters": [[161, null]], "baybe.parameters.validation": [[162, null]], "baybe.parameters.validation.validate_decorrelation": [[163, null]], "baybe.parameters.validation.validate_is_finite": [[164, null]], "baybe.parameters.validation.validate_unique_values": [[165, null]], "baybe.priors": [[166, null]], "baybe.priors.base": [[167, null]], "baybe.priors.basic": [[169, null]], "baybe.recommenders": [[177, null]], "baybe.recommenders.base": [[178, null]], "baybe.recommenders.meta": [[180, null]], "baybe.recommenders.meta.base": [[181, null]], "baybe.recommenders.meta.sequential": [[183, null]], "baybe.recommenders.naive": [[188, null]], "baybe.recommenders.pure": [[190, null]], "baybe.recommenders.pure.base": [[191, null]], "baybe.recommenders.pure.bayesian": [[193, null]], "baybe.recommenders.pure.bayesian.base": [[194, null]], "baybe.recommenders.pure.bayesian.botorch": [[196, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[198, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[199, null]], "baybe.recommenders.pure.nonpredictive": [[200, null]], "baybe.recommenders.pure.nonpredictive.base": [[201, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[203, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[208, null]], "baybe.searchspace": [[211, null]], "baybe.searchspace.continuous": [[212, null]], "baybe.searchspace.core": [[214, null]], "baybe.searchspace.core.to_searchspace": [[217, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[218, null]], "baybe.searchspace.discrete": [[219, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[222, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[223, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[224, null]], "baybe.searchspace.validation": [[225, null]], "baybe.searchspace.validation.get_transform_parameters": [[226, null]], "baybe.searchspace.validation.validate_parameter_names": [[227, null]], "baybe.searchspace.validation.validate_parameters": [[228, null]], "baybe.serialization": [[229, null]], "baybe.serialization.core": [[230, null]], "baybe.serialization.core.block_deserialization_hook": [[231, null]], "baybe.serialization.core.block_serialization_hook": [[232, null]], "baybe.serialization.core.converter": [[233, null]], "baybe.serialization.core.get_base_structure_hook": [[234, null]], "baybe.serialization.core.select_constructor_hook": [[235, null]], "baybe.serialization.core.unstructure_base": [[236, null]], "baybe.serialization.mixin": [[237, null]], "baybe.serialization.utils": [[239, null]], "baybe.serialization.utils.deserialize_dataframe": [[240, null]], "baybe.serialization.utils.serialize_dataframe": [[241, null]], "baybe.simulation": [[242, null]], "baybe.simulation.core": [[243, null]], "baybe.simulation.core.simulate_experiment": [[244, null]], "baybe.simulation.lookup": [[245, null]], "baybe.simulation.lookup.look_up_targets": [[246, null]], "baybe.simulation.scenarios": [[247, null]], "baybe.simulation.scenarios.simulate_scenarios": [[248, null]], "baybe.simulation.transfer_learning": [[249, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[250, null]], "baybe.surrogates": [[251, null]], "baybe.surrogates.bandit": [[252, null]], "baybe.surrogates.base": [[254, null]], "baybe.surrogates.base.PosteriorStatistic": [[256, null]], "baybe.surrogates.composite": [[259, null]], "baybe.surrogates.custom": [[261, null]], "baybe.surrogates.custom.register_custom_architecture": [[263, null]], "baybe.surrogates.gaussian_process": [[264, null]], "baybe.surrogates.gaussian_process.core": [[265, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[267, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[270, null]], "baybe.surrogates.gaussian_process.presets": [[271, null]], "baybe.surrogates.gaussian_process.presets.core": [[272, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[274, null]], "baybe.surrogates.gaussian_process.presets.default": [[275, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[277, null]], "baybe.surrogates.linear": [[279, null]], "baybe.surrogates.naive": [[281, null]], "baybe.surrogates.ngboost": [[283, null]], "baybe.surrogates.random_forest": [[285, null]], "baybe.surrogates.utils": [[287, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[288, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[289, null]], "baybe.surrogates.utils.catch_constant_targets": [[290, null]], "baybe.surrogates.validation": [[291, null]], "baybe.surrogates.validation.get_model_params_validator": [[292, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[293, null]], "baybe.targets": [[294, null]], "baybe.targets.base": [[295, null]], "baybe.targets.binary": [[297, null]], "baybe.targets.binary.ChoiceValue": [[299, null]], "baybe.targets.enum": [[300, null]], "baybe.targets.numerical": [[303, null]], "baybe.targets.transforms": [[305, null]], "baybe.targets.transforms.bell_transform": [[306, null]], "baybe.targets.transforms.linear_transform": [[307, null]], "baybe.targets.transforms.triangular_transform": [[308, null]], "baybe.telemetry": [[309, null]], "baybe.telemetry.get_user_details": [[310, null]], "baybe.telemetry.is_enabled": [[311, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[312, null]], "baybe.telemetry.telemetry_record_value": [[313, null]], "baybe.utils": [[314, null]], "baybe.utils.augmentation": [[315, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[316, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[317, null]], "baybe.utils.basic": [[318, null]], "baybe.utils.basic.UNSPECIFIED": [[320, null]], "baybe.utils.basic.convert_to_float": [[323, null]], "baybe.utils.basic.find_subclass": [[324, null]], "baybe.utils.basic.get_baseclasses": [[325, null]], "baybe.utils.basic.get_subclasses": [[326, null]], "baybe.utils.basic.group_duplicate_values": [[327, null]], "baybe.utils.basic.hilberts_factory": [[328, null]], "baybe.utils.basic.is_all_instance": [[329, null]], "baybe.utils.basic.match_attributes": [[330, null]], "baybe.utils.basic.refers_to": [[331, null]], "baybe.utils.basic.register_hooks": [[332, null]], "baybe.utils.basic.to_tuple": [[333, null]], "baybe.utils.boolean": [[334, null]], "baybe.utils.boolean.check_if_in": [[335, null]], "baybe.utils.boolean.is_abstract": [[336, null]], "baybe.utils.boolean.strtobool": [[337, null]], "baybe.utils.chemistry": [[338, null]], "baybe.utils.chemistry.get_canonical_smiles": [[339, null]], "baybe.utils.chemistry.get_fingerprint_class": [[340, null]], "baybe.utils.chemistry.name_to_smiles": [[341, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[342, null]], "baybe.utils.conversion": [[343, null]], "baybe.utils.conversion.fraction_to_float": [[344, null]], "baybe.utils.conversion.nonstring_to_tuple": [[345, null]], "baybe.utils.dataframe": [[346, null]], "baybe.utils.dataframe.add_fake_measurements": [[347, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[348, null]], "baybe.utils.dataframe.add_parameter_noise": [[349, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[350, null]], "baybe.utils.dataframe.create_fake_input": [[351, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[352, null]], "baybe.utils.dataframe.df_drop_string_columns": [[353, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[354, null]], "baybe.utils.dataframe.filter_df": [[355, null]], "baybe.utils.dataframe.fuzzy_row_match": [[356, null]], "baybe.utils.dataframe.get_transform_objects": [[357, null]], "baybe.utils.dataframe.pretty_print_df": [[358, null]], "baybe.utils.dataframe.to_tensor": [[359, null]], "baybe.utils.dataframe.transform_target_columns": [[360, null]], "baybe.utils.interval": [[361, null]], "baybe.utils.interval.InfiniteIntervalError": [[362, null]], "baybe.utils.interval.convert_bounds": [[364, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[365, null]], "baybe.utils.memory": [[366, null]], "baybe.utils.memory.bytes_to_human_readable": [[367, null]], "baybe.utils.numerical": [[368, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[369, null]], "baybe.utils.numerical.DTypeFloatONNX": [[370, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[371, null]], "baybe.utils.numerical.closer_element": [[372, null]], "baybe.utils.numerical.closest_element": [[373, null]], "baybe.utils.numerical.geom_mean": [[374, null]], "baybe.utils.plotting": [[375, null]], "baybe.utils.plotting.create_example_plots": [[376, null]], "baybe.utils.plotting.indent": [[377, null]], "baybe.utils.plotting.to_string": [[378, null]], "baybe.utils.random": [[379, null]], "baybe.utils.random.set_random_seed": [[380, null]], "baybe.utils.random.temporary_seed": [[381, null]], "baybe.utils.sampling_algorithms": [[382, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[384, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[385, null]], "baybe.utils.scaling": [[386, null]], "baybe.utils.torch": [[388, null]], "baybe.utils.torch.DTypeFloatTorch": [[389, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[390, null]], "baybe.utils.validation": [[391, null]], "baybe.utils.validation.finite_float": [[392, null]], "baybe.utils.validation.non_inf_float": [[393, null]], "baybe.utils.validation.non_nan_float": [[394, null]], "baybe.utils.validation.validate_not_nan": [[395, null]], "baybe.utils.validation.validate_parameter_input": [[396, null]], "baybe.utils.validation.validate_target_input": [[397, null]], "classproperty": [[322, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[443, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNParEGO": [[12, null]], "qLogNoisyExpectedHypervolumeImprovement": [[13, null]], "qLogNoisyExpectedImprovement": [[14, null]], "qNegIntegratedPosteriorVariance": [[15, null]], "qNoisyExpectedHypervolumeImprovement": [[16, null]], "qNoisyExpectedImprovement": [[17, null]], "qPosteriorStandardDeviation": [[18, null]], "qProbabilityOfImprovement": [[19, null]], "qSimpleRegret": [[20, null]], "qThompsonSampling": [[21, null]], "qUpperConfidenceBound": [[22, null]], "\u201cPre-training\u201d stage": [[419, "pre-training-stage"]], "\u26a1 Quick Start": [[442, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[442, "maintainers"]], "\ud83d\udcbb Installation": [[442, "installation"]], "\ud83d\udcc4 License": [[442, "license"]], "\ud83d\udce1 Telemetry": [[442, "telemetry"]], "\ud83d\udd0b Batteries Included": [[442, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[442, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[75, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[76, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[77, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[78, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[79, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[80, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[81, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[82, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[83, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[84, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[85, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[86, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[87, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[88, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[89, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[94, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[101, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[102, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[103, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[105, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[106, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[107, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[109, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[110, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[111, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[112, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[114, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[115, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[116, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[126, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[131, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[133, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[140, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[168, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[170, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[171, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[172, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[173, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[174, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[175, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[176, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[179, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[192, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[220, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[258, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[276, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[278, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[296, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[298, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[304, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[322, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[319, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[362, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[387, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[75, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[76, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[77, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[78, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[79, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[80, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[81, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[82, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[83, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[84, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[85, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[86, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[87, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[88, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[89, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[147, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[148, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[150, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[362, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[176, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[24, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[158, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[139, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[142, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[143, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[156, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[347, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[348, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[349, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[114, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[192, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[192, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[192, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[170, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[350, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[176, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[94, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[116, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[114, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[115, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[101, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[288, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[289, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[273, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[23, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[25, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[27, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[30, "module-baybe.campaign", false]], "baybe.constraints": [[32, "module-baybe.constraints", false]], "baybe.constraints.base": [[33, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[39, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[43, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[46, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[50, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[60, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[62, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[66, "module-baybe.exceptions", false]], "baybe.insights": [[90, "module-baybe.insights", false]], "baybe.insights.shap": [[91, "module-baybe.insights.shap", false]], "baybe.kernels": [[99, "module-baybe.kernels", false]], "baybe.kernels.base": [[100, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[104, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[113, "module-baybe.kernels.composite", false]], "baybe.objective": [[117, "module-baybe.objective", false]], "baybe.objectives": [[119, "module-baybe.objectives", false]], "baybe.objectives.base": [[120, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[123, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[125, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[128, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[130, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[132, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[134, "module-baybe.objectives.validation", false]], "baybe.parameters": [[136, "module-baybe.parameters", false]], "baybe.parameters.base": [[137, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[141, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[144, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[146, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[151, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[154, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[157, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[162, "module-baybe.parameters.validation", false]], "baybe.priors": [[166, "module-baybe.priors", false]], "baybe.priors.base": [[167, "module-baybe.priors.base", false]], "baybe.priors.basic": [[169, "module-baybe.priors.basic", false]], "baybe.recommenders": [[177, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[178, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[180, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[181, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[183, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[188, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[190, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[191, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[193, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[194, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[196, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[198, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[200, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[201, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[203, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[208, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[211, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[212, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[214, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[219, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[225, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[229, "module-baybe.serialization", false]], "baybe.serialization.core": [[230, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[237, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[239, "module-baybe.serialization.utils", false]], "baybe.simulation": [[242, "module-baybe.simulation", false]], "baybe.simulation.core": [[243, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[245, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[247, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[249, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[251, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[252, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[254, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[259, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[261, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[264, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[265, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[267, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[271, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[272, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[275, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[277, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[279, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[281, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[283, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[285, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[287, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[291, "module-baybe.surrogates.validation", false]], "baybe.targets": [[294, "module-baybe.targets", false]], "baybe.targets.base": [[295, "module-baybe.targets.base", false]], "baybe.targets.binary": [[297, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[300, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[303, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[305, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[309, "module-baybe.telemetry", false]], "baybe.utils": [[314, "module-baybe.utils", false]], "baybe.utils.augmentation": [[315, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[318, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[334, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[338, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[343, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[346, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[361, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[366, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[368, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[375, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[379, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[382, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[386, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[388, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[391, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[302, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[306, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[170, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[170, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[298, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[231, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[232, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[304, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[367, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[31, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[290, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[147, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[142, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[335, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[299, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[322, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[372, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[373, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[387, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[139, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[142, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[143, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[156, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[138, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[139, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[140, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[142, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[143, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[156, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[220, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[192, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[102, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[260, "baybe.surrogates.composite.CompositeSurrogate", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[171, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[40, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[215, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[36, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[47, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[48, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[138, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[28, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[364, "baybe.utils.interval.convert_bounds", false]], "convert_to_float() (in module baybe.utils.basic)": [[323, "baybe.utils.basic.convert_to_float", false]], "converter (in module baybe.serialization.core)": [[233, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[363, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[376, "baybe.utils.plotting.create_example_plots", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[351, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[148, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[145, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[148, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[276, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[67, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[240, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[126, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[316, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[317, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[352, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[353, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[354, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[215, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[139, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[383, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[369, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[370, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[389, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[319, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[278, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[68, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[139, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[142, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[143, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[215, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[220, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[94, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[94, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[92, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[298, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[384, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[355, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[324, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[392, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[258, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[387, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[383, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[344, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[94, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[101, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[102, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[103, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[105, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[106, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[107, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[109, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[110, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[111, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[112, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[114, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[115, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[116, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[121, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[126, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[131, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[133, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[138, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[139, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[140, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[142, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[143, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[156, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[168, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[170, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[171, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[172, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[173, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[174, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[175, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[176, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[238, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[257, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[296, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[298, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[304, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[363, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[101, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[102, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[103, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[105, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[106, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[107, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[109, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[110, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[111, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[112, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[114, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[115, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[116, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[121, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[126, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[131, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[133, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[138, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[139, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[140, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[142, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[143, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[156, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[168, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[170, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[171, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[172, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[173, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[174, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[175, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[176, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[238, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[257, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[296, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[298, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[304, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[363, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[94, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[94, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[356, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[171, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[273, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[129, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[374, "baybe.utils.numerical.geom_mean", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[234, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[325, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[339, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[340, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[292, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[159, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[326, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[357, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[226, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[310, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[327, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[172, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[328, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[69, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[71, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[72, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[73, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[74, "baybe.exceptions.IncompatibleSurrogateError", false]], "indent() (in module baybe.utils.plotting)": [[377, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infeasibilityerror": [[75, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[362, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[147, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[363, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[76, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[77, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[336, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[329, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[61, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[138, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[139, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[140, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[142, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[143, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[156, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[138, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[139, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[140, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[142, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[143, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[156, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[311, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[140, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[160, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[121, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[126, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[131, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[133, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[138, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[139, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[140, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[142, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[143, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[363, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[97, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[182, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[103, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[106, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[107, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[110, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[111, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[112, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[106, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[107, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[110, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[111, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[112, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[302, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[307, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[105, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[174, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[175, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[246, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[363, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[98, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[274, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[387, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[301, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[330, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[106, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[301, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[129, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[220, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[182, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[301, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimumcardinalityviolatedwarning": [[78, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[304, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[79, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [23, "module-baybe.acquisition.base", false], [25, "module-baybe.acquisition.partial", false], [27, "module-baybe.acquisition.utils", false], [30, "module-baybe.campaign", false], [32, "module-baybe.constraints", false], [33, "module-baybe.constraints.base", false], [39, "module-baybe.constraints.conditions", false], [43, "module-baybe.constraints.continuous", false], [46, "module-baybe.constraints.deprecation", false], [50, "module-baybe.constraints.discrete", false], [60, "module-baybe.constraints.utils", false], [62, "module-baybe.constraints.validation", false], [66, "module-baybe.exceptions", false], [90, "module-baybe.insights", false], [91, "module-baybe.insights.shap", false], [99, "module-baybe.kernels", false], [100, "module-baybe.kernels.base", false], [104, "module-baybe.kernels.basic", false], [113, "module-baybe.kernels.composite", false], [117, "module-baybe.objective", false], [119, "module-baybe.objectives", false], [120, "module-baybe.objectives.base", false], [123, "module-baybe.objectives.deprecation", false], [125, "module-baybe.objectives.desirability", false], [128, "module-baybe.objectives.enum", false], [130, "module-baybe.objectives.pareto", false], [132, "module-baybe.objectives.single", false], [134, "module-baybe.objectives.validation", false], [136, "module-baybe.parameters", false], [137, "module-baybe.parameters.base", false], [141, "module-baybe.parameters.categorical", false], [144, "module-baybe.parameters.custom", false], [146, "module-baybe.parameters.enum", false], [151, "module-baybe.parameters.numerical", false], [154, "module-baybe.parameters.substance", false], [157, "module-baybe.parameters.utils", false], [162, "module-baybe.parameters.validation", false], [166, "module-baybe.priors", false], [167, "module-baybe.priors.base", false], [169, "module-baybe.priors.basic", false], [177, "module-baybe.recommenders", false], [178, "module-baybe.recommenders.base", false], [180, "module-baybe.recommenders.meta", false], [181, "module-baybe.recommenders.meta.base", false], [183, "module-baybe.recommenders.meta.sequential", false], [188, "module-baybe.recommenders.naive", false], [190, "module-baybe.recommenders.pure", false], [191, "module-baybe.recommenders.pure.base", false], [193, "module-baybe.recommenders.pure.bayesian", false], [194, "module-baybe.recommenders.pure.bayesian.base", false], [196, "module-baybe.recommenders.pure.bayesian.botorch", false], [198, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [200, "module-baybe.recommenders.pure.nonpredictive", false], [201, "module-baybe.recommenders.pure.nonpredictive.base", false], [203, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [208, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [211, "module-baybe.searchspace", false], [212, "module-baybe.searchspace.continuous", false], [214, "module-baybe.searchspace.core", false], [219, "module-baybe.searchspace.discrete", false], [225, "module-baybe.searchspace.validation", false], [229, "module-baybe.serialization", false], [230, "module-baybe.serialization.core", false], [237, "module-baybe.serialization.mixin", false], [239, "module-baybe.serialization.utils", false], [242, "module-baybe.simulation", false], [243, "module-baybe.simulation.core", false], [245, "module-baybe.simulation.lookup", false], [247, "module-baybe.simulation.scenarios", false], [249, "module-baybe.simulation.transfer_learning", false], [251, "module-baybe.surrogates", false], [252, "module-baybe.surrogates.bandit", false], [254, "module-baybe.surrogates.base", false], [259, "module-baybe.surrogates.composite", false], [261, "module-baybe.surrogates.custom", false], [264, "module-baybe.surrogates.gaussian_process", false], [265, "module-baybe.surrogates.gaussian_process.core", false], [267, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [271, "module-baybe.surrogates.gaussian_process.presets", false], [272, "module-baybe.surrogates.gaussian_process.presets.core", false], [275, "module-baybe.surrogates.gaussian_process.presets.default", false], [277, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [279, "module-baybe.surrogates.linear", false], [281, "module-baybe.surrogates.naive", false], [283, "module-baybe.surrogates.ngboost", false], [285, "module-baybe.surrogates.random_forest", false], [287, "module-baybe.surrogates.utils", false], [291, "module-baybe.surrogates.validation", false], [294, "module-baybe.targets", false], [295, "module-baybe.targets.base", false], [297, "module-baybe.targets.binary", false], [300, "module-baybe.targets.enum", false], [303, "module-baybe.targets.numerical", false], [305, "module-baybe.targets.transforms", false], [309, "module-baybe.telemetry", false], [314, "module-baybe.utils", false], [315, "module-baybe.utils.augmentation", false], [318, "module-baybe.utils.basic", false], [334, "module-baybe.utils.boolean", false], [338, "module-baybe.utils.chemistry", false], [343, "module-baybe.utils.conversion", false], [346, "module-baybe.utils.dataframe", false], [361, "module-baybe.utils.interval", false], [366, "module-baybe.utils.memory", false], [368, "module-baybe.utils.numerical", false], [375, "module-baybe.utils.plotting", false], [379, "module-baybe.utils.random", false], [382, "module-baybe.utils.sampling_algorithms", false], [386, "module-baybe.utils.scaling", false], [388, "module-baybe.utils.torch", false], [391, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[121, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[126, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[131, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[133, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[138, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[139, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[140, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[142, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[143, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[156, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[296, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[298, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[304, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[341, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[80, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[393, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[394, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[93, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[345, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[81, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[175, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[82, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[83, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[106, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[111, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[304, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[84, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[121, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[118, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[109, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[109, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[147, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[85, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[116, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[116, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[140, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[222, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[223, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[149, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[131, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[107, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[107, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[107, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[94, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[109, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[256, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[109, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[358, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[168, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[115, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[192, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[383, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[171, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[110, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[179, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[189, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[192, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[179, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[331, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[263, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[332, "baybe.utils.basic.register_hooks", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "rffkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[385, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[127, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[126, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[129, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[172, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[173, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[174, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[175, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[116, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[215, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[86, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[216, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[235, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[41, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[199, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[241, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[238, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[380, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[95, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[96, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[94, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[176, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[244, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[248, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[250, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[133, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[155, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[342, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[176, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[161, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[29, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[337, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[49, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[124, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[41, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[213, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[150, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[156, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[298, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[140, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[296, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[298, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[304, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[257, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[257, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[257, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[195, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[197, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[258, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[260, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[296, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[301, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[121, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[126, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[131, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[133, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[302, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[143, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[312, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[313, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[381, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[42, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[258, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[101, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[102, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[103, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[105, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[106, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[107, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[109, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[110, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[111, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[112, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[114, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[115, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[116, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[126, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[131, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[133, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[140, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[168, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[170, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[171, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[172, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[173, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[174, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[175, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[176, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[238, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[296, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[298, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[304, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[101, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[102, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[103, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[105, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[106, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[107, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[109, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[110, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[111, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[112, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[114, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[115, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[116, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[101, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[102, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[103, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[105, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[106, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[107, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[109, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[110, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[111, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[112, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[114, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[115, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[116, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[168, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[170, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[171, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[172, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[173, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[174, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[175, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[176, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[101, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[102, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[103, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[105, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[106, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[107, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[108, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[109, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[110, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[111, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[112, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[114, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[115, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[116, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[126, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[131, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[133, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[140, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[168, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[170, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[171, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[172, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[173, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[174, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[175, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[176, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[182, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[238, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[296, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[298, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[304, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[296, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[298, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[304, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[122, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[140, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[217, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[378, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[138, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[152, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[359, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[363, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[333, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[121, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[126, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[131, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[133, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[139, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[142, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[143, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[156, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[296, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[298, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[304, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[387, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[360, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[304, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[302, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[308, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[187, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[87, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[88, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[320, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[321, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[236, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[89, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[363, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[365, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[94, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[63, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[64, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[65, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[293, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[163, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[164, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[395, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[396, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[227, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[228, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[218, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[224, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[397, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[135, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[165, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[139, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[142, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[143, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[145, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[153, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[156, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[105, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[105, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[371, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[390, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[126, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[150, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [30, 0, 0, "-", "campaign"], [32, 0, 0, "-", "constraints"], [66, 0, 0, "-", "exceptions"], [90, 0, 0, "-", "insights"], [99, 0, 0, "-", "kernels"], [117, 0, 0, "-", "objective"], [119, 0, 0, "-", "objectives"], [136, 0, 0, "-", "parameters"], [166, 0, 0, "-", "priors"], [177, 0, 0, "-", "recommenders"], [211, 0, 0, "-", "searchspace"], [229, 0, 0, "-", "serialization"], [242, 0, 0, "-", "simulation"], [251, 0, 0, "-", "surrogates"], [294, 0, 0, "-", "targets"], [309, 0, 0, "-", "telemetry"], [314, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [23, 0, 0, "-", "base"], [25, 0, 0, "-", "partial"], [27, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNParEGO"], [13, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [14, 1, 1, "", "qLogNoisyExpectedImprovement"], [15, 1, 1, "", "qNegIntegratedPosteriorVariance"], [16, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [17, 1, 1, "", "qNoisyExpectedImprovement"], [18, 1, 1, "", "qPosteriorStandardDeviation"], [19, 1, 1, "", "qProbabilityOfImprovement"], [20, 1, 1, "", "qSimpleRegret"], [21, 1, 1, "", "qThompsonSampling"], [22, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNParEGO": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "compute_ref_point"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "prune_baseline"], [13, 3, 1, "", "reference_point"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[13, 4, 1, "", "array"], [13, 4, 1, "", "factor"], [13, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "get_integration_points"], [15, 3, 1, "", "sampling_fraction"], [15, 3, 1, "", "sampling_method"], [15, 3, 1, "", "sampling_n_points"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[15, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "compute_ref_point"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "reference_point"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[16, 4, 1, "", "array"], [16, 4, 1, "", "factor"], [16, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "prune_baseline"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "n_mc_samples"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 3, 1, "", "beta"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[22, 4, 1, "", "string"]], "baybe.acquisition.base": [[24, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[24, 4, 1, "", "string"]], "baybe.acquisition.partial": [[26, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "botorch_acqf"], [26, 3, 1, "", "pin_discrete"], [26, 3, 1, "", "pinned_part"], [26, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[26, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[28, 5, 1, "", "convert_acqf"], [29, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[31, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "add_measurements"], [31, 3, 1, "", "allow_recommending_already_measured"], [31, 3, 1, "", "allow_recommending_already_recommended"], [31, 3, 1, "", "allow_recommending_pending_experiments"], [31, 2, 1, "", "from_config"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 2, 1, "", "get_surrogate"], [31, 6, 1, "", "measurements"], [31, 3, 1, "", "n_batches_done"], [31, 3, 1, "", "n_fits_done"], [31, 3, 1, "", "objective"], [31, 6, 1, "", "parameters"], [31, 2, 1, "", "posterior"], [31, 2, 1, "", "posterior_stats"], [31, 2, 1, "", "recommend"], [31, 3, 1, "", "recommender"], [31, 3, 1, "", "searchspace"], [31, 6, 1, "", "targets"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"], [31, 2, 1, "", "toggle_discrete_candidates"], [31, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[31, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[31, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_surrogate.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[31, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[31, 4, 1, "", "candidates"], [31, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[31, 4, 1, "", "complement"], [31, 4, 1, "", "constraints"], [31, 4, 1, "", "dry_run"], [31, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[31, 4, 1, "", "config_json"]], "baybe.constraints": [[33, 0, 0, "-", "base"], [39, 0, 0, "-", "conditions"], [43, 0, 0, "-", "continuous"], [46, 0, 0, "-", "deprecation"], [50, 0, 0, "-", "discrete"], [60, 0, 0, "-", "utils"], [62, 0, 0, "-", "validation"]], "baybe.constraints.base": [[34, 1, 1, "", "CardinalityConstraint"], [35, 1, 1, "", "Constraint"], [36, 1, 1, "", "ContinuousConstraint"], [37, 1, 1, "", "ContinuousNonlinearConstraint"], [38, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "max_cardinality"], [34, 3, 1, "", "min_cardinality"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "eval_during_augmentation"], [36, 3, 1, "", "eval_during_creation"], [36, 3, 1, "", "eval_during_modeling"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 6, 1, "", "is_continuous"], [36, 6, 1, "", "is_discrete"], [36, 3, 1, "", "numerical_only"], [36, 3, 1, "", "parameters"], [36, 2, 1, "", "summary"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 2, 1, "", "get_invalid"], [38, 2, 1, "", "get_invalid_polars"], [38, 2, 1, "", "get_valid"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[38, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[38, 4, 1, "", "df"]], "baybe.constraints.conditions": [[40, 1, 1, "", "Condition"], [41, 1, 1, "", "SubSelectionCondition"], [42, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[40, 2, 1, "", "evaluate"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"], [40, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[40, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[40, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "selection"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"], [41, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[41, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[41, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "evaluate"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 3, 1, "", "operator"], [42, 3, 1, "", "threshold"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"], [42, 2, 1, "", "to_polars"], [42, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[42, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[42, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[44, 1, 1, "", "ContinuousCardinalityConstraint"], [45, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "eval_during_augmentation"], [44, 3, 1, "", "eval_during_creation"], [44, 3, 1, "", "eval_during_modeling"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 2, 1, "", "get_absolute_thresholds"], [44, 2, 1, "", "inactive_parameter_combinations"], [44, 6, 1, "", "is_continuous"], [44, 6, 1, "", "is_discrete"], [44, 3, 1, "", "max_cardinality"], [44, 3, 1, "", "min_cardinality"], [44, 6, 1, "", "n_inactive_parameter_combinations"], [44, 3, 1, "", "numerical_only"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "relative_threshold"], [44, 2, 1, "", "sample_inactive_parameters"], [44, 2, 1, "", "summary"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[44, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[44, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[44, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[45, 2, 1, "", "__init__"], [45, 3, 1, "", "coefficients"], [45, 3, 1, "", "eval_during_augmentation"], [45, 3, 1, "", "eval_during_creation"], [45, 3, 1, "", "eval_during_modeling"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 6, 1, "", "is_continuous"], [45, 6, 1, "", "is_discrete"], [45, 6, 1, "", "is_eq"], [45, 3, 1, "", "numerical_only"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "rhs"], [45, 2, 1, "", "summary"], [45, 2, 1, "", "to_botorch"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[45, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[45, 4, 1, "", "idx_offset"], [45, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[47, 5, 1, "", "ContinuousLinearEqualityConstraint"], [48, 5, 1, "", "ContinuousLinearInequalityConstraint"], [49, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[51, 1, 1, "", "DiscreteCardinalityConstraint"], [52, 1, 1, "", "DiscreteCustomConstraint"], [53, 1, 1, "", "DiscreteDependenciesConstraint"], [54, 1, 1, "", "DiscreteExcludeConstraint"], [55, 1, 1, "", "DiscreteLinkedParametersConstraint"], [56, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [57, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [58, 1, 1, "", "DiscreteProductConstraint"], [59, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "max_cardinality"], [51, 3, 1, "", "min_cardinality"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"], [52, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "affected_parameters"], [53, 3, 1, "", "conditions"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 3, 1, "", "permutation_invariant"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "combiner"], [54, 3, 1, "", "conditions"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "dependencies"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "condition"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[58, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[59, 2, 1, "", "__init__"], [59, 3, 1, "", "condition"], [59, 3, 1, "", "eval_during_augmentation"], [59, 3, 1, "", "eval_during_creation"], [59, 3, 1, "", "eval_during_modeling"], [59, 2, 1, "", "from_dict"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_invalid"], [59, 2, 1, "", "get_invalid_polars"], [59, 2, 1, "", "get_valid"], [59, 6, 1, "", "is_continuous"], [59, 6, 1, "", "is_discrete"], [59, 3, 1, "", "numerical_only"], [59, 3, 1, "", "parameters"], [59, 2, 1, "", "summary"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[59, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[59, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[59, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[59, 4, 1, "", "df"]], "baybe.constraints.utils": [[61, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[61, 4, 1, "", "check_maximum"], [61, 4, 1, "", "check_minimum"], [61, 4, 1, "", "df"], [61, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[63, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [64, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [65, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[63, 4, 1, "", "constraint"], [63, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[64, 4, 1, "", "constraints"]], "baybe.exceptions": [[67, 7, 1, "", "DeprecationError"], [68, 7, 1, "", "EmptySearchSpaceError"], [69, 7, 1, "", "IncompatibilityError"], [70, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [71, 7, 1, "", "IncompatibleArgumentError"], [72, 7, 1, "", "IncompatibleExplainerError"], [73, 7, 1, "", "IncompatibleSearchSpaceError"], [74, 7, 1, "", "IncompatibleSurrogateError"], [75, 7, 1, "", "InfeasibilityError"], [76, 7, 1, "", "InvalidSurrogateModelError"], [77, 7, 1, "", "InvalidTargetValueError"], [78, 7, 1, "", "MinimumCardinalityViolatedWarning"], [79, 7, 1, "", "ModelNotTrainedError"], [80, 7, 1, "", "NoMCAcquisitionFunctionError"], [81, 7, 1, "", "NoRecommendersLeftError"], [82, 7, 1, "", "NotEnoughPointsLeftError"], [83, 7, 1, "", "NothingToSimulateError"], [84, 7, 1, "", "NumericalUnderflowError"], [85, 7, 1, "", "OptionalImportError"], [86, 7, 1, "", "SearchSpaceMatchWarning"], [87, 7, 1, "", "UnidentifiedSubclassError"], [88, 7, 1, "", "UnmatchedAttributeError"], [89, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.insights": [[91, 0, 0, "-", "shap"]], "baybe.insights.shap": [[92, 8, 1, "", "EXPLAINERS"], [93, 8, 1, "", "NON_SHAP_EXPLAINERS"], [94, 1, 1, "", "SHAPInsight"], [95, 8, 1, "", "SHAP_EXPLAINERS"], [96, 8, 1, "", "SHAP_PLOTS"], [97, 5, 1, "", "is_shap_explainer"], [98, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[94, 2, 1, "", "__init__"], [94, 3, 1, "", "background_data"], [94, 2, 1, "", "explain"], [94, 3, 1, "", "explainer"], [94, 2, 1, "", "from_campaign"], [94, 2, 1, "", "from_recommender"], [94, 2, 1, "", "from_surrogate"], [94, 2, 1, "", "plot"], [94, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[94, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[94, 4, 1, "", "campaign"], [94, 4, 1, "", "explainer_cls"], [94, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[94, 4, 1, "", "explainer_cls"], [94, 4, 1, "", "measurements"], [94, 4, 1, "", "objective"], [94, 4, 1, "", "recommender"], [94, 4, 1, "", "searchspace"], [94, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[94, 4, 1, "", "**kwargs"], [94, 4, 1, "", "data"], [94, 4, 1, "", "explanation_index"], [94, 4, 1, "", "plot_type"], [94, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[98, 4, 1, "", "data"], [98, 4, 1, "", "explainer_cls"], [98, 4, 1, "", "surrogate"], [98, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[100, 0, 0, "-", "base"], [104, 0, 0, "-", "basic"], [113, 0, 0, "-", "composite"]], "baybe.kernels.base": [[101, 1, 1, "", "BasicKernel"], [102, 1, 1, "", "CompositeKernel"], [103, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "from_dict"], [101, 2, 1, "", "from_json"], [101, 2, 1, "", "to_dict"], [101, 2, 1, "", "to_factory"], [101, 2, 1, "", "to_gpytorch"], [101, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[101, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[101, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "from_dict"], [102, 2, 1, "", "from_json"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "to_factory"], [102, 2, 1, "", "to_gpytorch"], [102, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[102, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[102, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "from_dict"], [103, 2, 1, "", "from_json"], [103, 2, 1, "", "to_dict"], [103, 2, 1, "", "to_factory"], [103, 2, 1, "", "to_gpytorch"], [103, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[103, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[103, 4, 1, "", "string"]], "baybe.kernels.basic": [[105, 1, 1, "", "LinearKernel"], [106, 1, 1, "", "MaternKernel"], [107, 1, 1, "", "PeriodicKernel"], [108, 1, 1, "", "PiecewisePolynomialKernel"], [109, 1, 1, "", "PolynomialKernel"], [110, 1, 1, "", "RBFKernel"], [111, 1, 1, "", "RFFKernel"], [112, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"], [105, 3, 1, "", "variance_initial_value"], [105, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 3, 1, "", "lengthscale_initial_value"], [106, 3, 1, "", "lengthscale_prior"], [106, 3, 1, "", "nu"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[106, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 3, 1, "", "lengthscale_initial_value"], [107, 3, 1, "", "lengthscale_prior"], [107, 3, 1, "", "period_length_initial_value"], [107, 3, 1, "", "period_length_prior"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[107, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 3, 1, "", "lengthscale_initial_value"], [108, 3, 1, "", "lengthscale_prior"], [108, 3, 1, "", "q"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 3, 1, "", "offset_initial_value"], [109, 3, 1, "", "offset_prior"], [109, 3, 1, "", "power"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 3, 1, "", "lengthscale_initial_value"], [110, 3, 1, "", "lengthscale_prior"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_factory"], [110, 2, 1, "", "to_gpytorch"], [110, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[110, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 3, 1, "", "lengthscale_initial_value"], [111, 3, 1, "", "lengthscale_prior"], [111, 3, 1, "", "num_samples"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[111, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "lengthscale_initial_value"], [112, 3, 1, "", "lengthscale_prior"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[112, 4, 1, "", "string"]], "baybe.kernels.composite": [[114, 1, 1, "", "AdditiveKernel"], [115, 1, 1, "", "ProductKernel"], [116, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[114, 2, 1, "", "__init__"], [114, 3, 1, "", "base_kernels"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_factory"], [114, 2, 1, "", "to_gpytorch"], [114, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[114, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[115, 2, 1, "", "__init__"], [115, 3, 1, "", "base_kernels"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_factory"], [115, 2, 1, "", "to_gpytorch"], [115, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[115, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[116, 2, 1, "", "__init__"], [116, 3, 1, "", "base_kernel"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 3, 1, "", "outputscale_initial_value"], [116, 3, 1, "", "outputscale_prior"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_factory"], [116, 2, 1, "", "to_gpytorch"], [116, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[116, 4, 1, "", "string"]], "baybe.objective": [[118, 5, 1, "", "Objective"]], "baybe.objectives": [[120, 0, 0, "-", "base"], [123, 0, 0, "-", "deprecation"], [125, 0, 0, "-", "desirability"], [128, 0, 0, "-", "enum"], [130, 0, 0, "-", "pareto"], [132, 0, 0, "-", "single"], [134, 0, 0, "-", "validation"]], "baybe.objectives.base": [[121, 1, 1, "", "Objective"], [122, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "from_dict"], [121, 2, 1, "", "from_json"], [121, 3, 1, "", "is_multi_output"], [121, 6, 1, "", "n_outputs"], [121, 6, 1, "", "targets"], [121, 2, 1, "", "to_dict"], [121, 2, 1, "", "to_json"], [121, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[121, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[121, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[121, 4, 1, "", "allow_extra"], [121, 4, 1, "", "allow_missing"], [121, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[124, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[126, 1, 1, "", "DesirabilityObjective"], [127, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "from_dict"], [126, 2, 1, "", "from_json"], [126, 3, 1, "", "is_multi_output"], [126, 6, 1, "", "n_outputs"], [126, 3, 1, "", "scalarizer"], [126, 6, 1, "", "targets"], [126, 2, 1, "", "to_dict"], [126, 2, 1, "", "to_json"], [126, 2, 1, "", "transform"], [126, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[126, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[126, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[126, 4, 1, "", "allow_extra"], [126, 4, 1, "", "allow_missing"], [126, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[127, 4, 1, "", "scalarizer"], [127, 4, 1, "", "values"], [127, 4, 1, "", "weights"]], "baybe.objectives.enum": [[129, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[129, 3, 1, "", "GEOM_MEAN"], [129, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[131, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "from_dict"], [131, 2, 1, "", "from_json"], [131, 3, 1, "", "is_multi_output"], [131, 6, 1, "", "n_outputs"], [131, 6, 1, "", "targets"], [131, 2, 1, "", "to_dict"], [131, 2, 1, "", "to_json"], [131, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[131, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[131, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[131, 4, 1, "", "allow_extra"], [131, 4, 1, "", "allow_missing"], [131, 4, 1, "", "df"]], "baybe.objectives.single": [[133, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "from_dict"], [133, 2, 1, "", "from_json"], [133, 3, 1, "", "is_multi_output"], [133, 6, 1, "", "n_outputs"], [133, 6, 1, "", "targets"], [133, 2, 1, "", "to_dict"], [133, 2, 1, "", "to_json"], [133, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[133, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[133, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[133, 4, 1, "", "allow_extra"], [133, 4, 1, "", "allow_missing"], [133, 4, 1, "", "df"]], "baybe.objectives.validation": [[135, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[137, 0, 0, "-", "base"], [141, 0, 0, "-", "categorical"], [144, 0, 0, "-", "custom"], [146, 0, 0, "-", "enum"], [151, 0, 0, "-", "numerical"], [154, 0, 0, "-", "substance"], [157, 0, 0, "-", "utils"], [162, 0, 0, "-", "validation"]], "baybe.parameters.base": [[138, 1, 1, "", "ContinuousParameter"], [139, 1, 1, "", "DiscreteParameter"], [140, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[138, 2, 1, "", "__init__"], [138, 6, 1, "", "comp_rep_columns"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 6, 1, "", "is_continuous"], [138, 6, 1, "", "is_discrete"], [138, 2, 1, "", "is_in_range"], [138, 3, 1, "", "is_numerical"], [138, 3, 1, "", "name"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_json"], [138, 2, 1, "", "to_searchspace"], [138, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[138, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[138, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[138, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[139, 2, 1, "", "__init__"], [139, 6, 1, "", "active_values"], [139, 6, 1, "", "comp_df"], [139, 6, 1, "", "comp_rep_columns"], [139, 3, 1, "", "encoding"], [139, 2, 1, "", "from_dict"], [139, 2, 1, "", "from_json"], [139, 6, 1, "", "is_continuous"], [139, 6, 1, "", "is_discrete"], [139, 2, 1, "", "is_in_range"], [139, 3, 1, "", "is_numerical"], [139, 3, 1, "", "name"], [139, 2, 1, "", "summary"], [139, 2, 1, "", "to_dict"], [139, 2, 1, "", "to_json"], [139, 2, 1, "", "to_searchspace"], [139, 2, 1, "", "to_subspace"], [139, 2, 1, "", "transform"], [139, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[139, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[139, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[139, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[139, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[140, 2, 1, "", "__init__"], [140, 6, 1, "", "comp_rep_columns"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 6, 1, "", "is_continuous"], [140, 6, 1, "", "is_discrete"], [140, 2, 1, "", "is_in_range"], [140, 3, 1, "", "is_numerical"], [140, 3, 1, "", "name"], [140, 2, 1, "", "summary"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_json"], [140, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[140, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[140, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[140, 4, 1, "", "item"]], "baybe.parameters.categorical": [[142, 1, 1, "", "CategoricalParameter"], [143, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "active_values"], [142, 6, 1, "", "comp_df"], [142, 6, 1, "", "comp_rep_columns"], [142, 3, 1, "", "encoding"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 2, 1, "", "to_subspace"], [142, 2, 1, "", "transform"], [142, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[142, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[142, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[143, 2, 1, "", "__init__"], [143, 6, 1, "", "active_values"], [143, 6, 1, "", "comp_df"], [143, 6, 1, "", "comp_rep_columns"], [143, 3, 1, "", "encoding"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_json"], [143, 6, 1, "", "is_continuous"], [143, 6, 1, "", "is_discrete"], [143, 2, 1, "", "is_in_range"], [143, 3, 1, "", "is_numerical"], [143, 3, 1, "", "name"], [143, 2, 1, "", "summary"], [143, 2, 1, "", "to_dict"], [143, 2, 1, "", "to_json"], [143, 2, 1, "", "to_searchspace"], [143, 2, 1, "", "to_subspace"], [143, 2, 1, "", "transform"], [143, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[143, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[143, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[143, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[143, 4, 1, "", "series"]], "baybe.parameters.custom": [[145, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[145, 2, 1, "", "__init__"], [145, 6, 1, "", "active_values"], [145, 6, 1, "", "comp_df"], [145, 6, 1, "", "comp_rep_columns"], [145, 3, 1, "", "data"], [145, 3, 1, "", "decorrelate"], [145, 3, 1, "", "encoding"], [145, 2, 1, "", "from_dict"], [145, 2, 1, "", "from_json"], [145, 6, 1, "", "is_continuous"], [145, 6, 1, "", "is_discrete"], [145, 2, 1, "", "is_in_range"], [145, 3, 1, "", "is_numerical"], [145, 3, 1, "", "name"], [145, 2, 1, "", "summary"], [145, 2, 1, "", "to_dict"], [145, 2, 1, "", "to_json"], [145, 2, 1, "", "to_searchspace"], [145, 2, 1, "", "to_subspace"], [145, 2, 1, "", "transform"], [145, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[145, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[145, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[145, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[145, 4, 1, "", "series"]], "baybe.parameters.enum": [[147, 1, 1, "", "CategoricalEncoding"], [148, 1, 1, "", "CustomEncoding"], [149, 1, 1, "", "ParameterEncoding"], [150, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[147, 3, 1, "", "INT"], [147, 3, 1, "", "OHE"], [147, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[148, 3, 1, "", "CUSTOM"], [148, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[150, 3, 1, "", "ATOMPAIR"], [150, 3, 1, "", "AUTOCORR"], [150, 3, 1, "", "AVALON"], [150, 3, 1, "", "BCUT2D"], [150, 3, 1, "", "E3FP"], [150, 3, 1, "", "ECFP"], [150, 3, 1, "", "ELECTROSHAPE"], [150, 3, 1, "", "ERG"], [150, 3, 1, "", "ESTATE"], [150, 3, 1, "", "FUNCTIONALGROUPS"], [150, 3, 1, "", "GETAWAY"], [150, 3, 1, "", "GHOSECRIPPEN"], [150, 3, 1, "", "KLEKOTAROTH"], [150, 3, 1, "", "LAGGNER"], [150, 3, 1, "", "LAYERED"], [150, 3, 1, "", "LINGO"], [150, 3, 1, "", "MACCS"], [150, 3, 1, "", "MAP"], [150, 3, 1, "", "MHFP"], [150, 3, 1, "", "MORDRED"], [150, 3, 1, "", "MORGAN_FP"], [150, 3, 1, "", "MORSE"], [150, 3, 1, "", "MQNS"], [150, 3, 1, "", "PATTERN"], [150, 3, 1, "", "PHARMACOPHORE"], [150, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [150, 3, 1, "", "PUBCHEM"], [150, 3, 1, "", "RDF"], [150, 3, 1, "", "RDKIT"], [150, 3, 1, "", "RDKIT2DDESCRIPTORS"], [150, 3, 1, "", "RDKITFINGERPRINT"], [150, 3, 1, "", "SECFP"], [150, 3, 1, "", "TOPOLOGICALTORSION"], [150, 3, 1, "", "USR"], [150, 3, 1, "", "USRCAT"], [150, 3, 1, "", "VSA"], [150, 3, 1, "", "WHIM"], [150, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[152, 1, 1, "", "NumericalContinuousParameter"], [153, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[152, 2, 1, "", "__init__"], [152, 3, 1, "", "bounds"], [152, 6, 1, "", "comp_rep_columns"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 6, 1, "", "is_continuous"], [152, 6, 1, "", "is_discrete"], [152, 2, 1, "", "is_in_range"], [152, 3, 1, "", "is_numerical"], [152, 3, 1, "", "name"], [152, 2, 1, "", "summary"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_json"], [152, 2, 1, "", "to_searchspace"], [152, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[152, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[152, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[152, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[153, 2, 1, "", "__init__"], [153, 6, 1, "", "active_values"], [153, 6, 1, "", "comp_df"], [153, 6, 1, "", "comp_rep_columns"], [153, 3, 1, "", "encoding"], [153, 2, 1, "", "from_dict"], [153, 2, 1, "", "from_json"], [153, 6, 1, "", "is_continuous"], [153, 6, 1, "", "is_discrete"], [153, 2, 1, "", "is_in_range"], [153, 3, 1, "", "is_numerical"], [153, 3, 1, "", "name"], [153, 2, 1, "", "summary"], [153, 2, 1, "", "to_dict"], [153, 2, 1, "", "to_json"], [153, 2, 1, "", "to_searchspace"], [153, 2, 1, "", "to_subspace"], [153, 3, 1, "", "tolerance"], [153, 2, 1, "", "transform"], [153, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[153, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[153, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[153, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[153, 4, 1, "", "series"]], "baybe.parameters.substance": [[155, 3, 1, "", "Smiles"], [156, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[156, 2, 1, "", "__init__"], [156, 6, 1, "", "active_values"], [156, 6, 1, "", "comp_df"], [156, 6, 1, "", "comp_rep_columns"], [156, 3, 1, "", "data"], [156, 3, 1, "", "decorrelate"], [156, 3, 1, "", "encoding"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 6, 1, "", "is_continuous"], [156, 6, 1, "", "is_discrete"], [156, 2, 1, "", "is_in_range"], [156, 3, 1, "", "is_numerical"], [156, 3, 1, "", "kwargs_conformer"], [156, 3, 1, "", "kwargs_fingerprint"], [156, 3, 1, "", "name"], [156, 2, 1, "", "summary"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_json"], [156, 2, 1, "", "to_searchspace"], [156, 2, 1, "", "to_subspace"], [156, 2, 1, "", "transform"], [156, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[156, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[156, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[156, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[156, 4, 1, "", "series"]], "baybe.parameters.utils": [[158, 5, 1, "", "activate_parameter"], [159, 5, 1, "", "get_parameters_from_dataframe"], [160, 5, 1, "", "is_inactive"], [161, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[158, 4, 1, "", "parameter"], [158, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[159, 4, 1, "", "df"], [159, 4, 1, "", "factory"], [159, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[160, 4, 1, "", "lower_threshold"], [160, 4, 1, "", "upper_threshold"], [160, 4, 1, "", "x"]], "baybe.parameters.validation": [[163, 5, 1, "", "validate_decorrelation"], [164, 5, 1, "", "validate_is_finite"], [165, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[167, 0, 0, "-", "base"], [169, 0, 0, "-", "basic"]], "baybe.priors.base": [[168, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "from_dict"], [168, 2, 1, "", "from_json"], [168, 2, 1, "", "to_dict"], [168, 2, 1, "", "to_gpytorch"], [168, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[168, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[168, 4, 1, "", "string"]], "baybe.priors.basic": [[170, 1, 1, "", "BetaPrior"], [171, 1, 1, "", "GammaPrior"], [172, 1, 1, "", "HalfCauchyPrior"], [173, 1, 1, "", "HalfNormalPrior"], [174, 1, 1, "", "LogNormalPrior"], [175, 1, 1, "", "NormalPrior"], [176, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[170, 2, 1, "", "__init__"], [170, 3, 1, "", "alpha"], [170, 3, 1, "", "beta"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_gpytorch"], [170, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[170, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[171, 2, 1, "", "__init__"], [171, 3, 1, "", "concentration"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 3, 1, "", "rate"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_gpytorch"], [171, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[171, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 3, 1, "", "scale"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_gpytorch"], [172, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[172, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 3, 1, "", "scale"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[173, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "loc"], [174, 3, 1, "", "scale"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[174, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "from_json"], [175, 3, 1, "", "loc"], [175, 3, 1, "", "scale"], [175, 2, 1, "", "to_dict"], [175, 2, 1, "", "to_gpytorch"], [175, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[175, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[175, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[176, 2, 1, "", "__init__"], [176, 3, 1, "", "a"], [176, 3, 1, "", "b"], [176, 2, 1, "", "from_dict"], [176, 2, 1, "", "from_json"], [176, 3, 1, "", "sigma"], [176, 2, 1, "", "to_dict"], [176, 2, 1, "", "to_gpytorch"], [176, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[176, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[176, 4, 1, "", "string"]], "baybe.recommenders": [[178, 0, 0, "-", "base"], [180, 0, 0, "-", "meta"], [188, 0, 0, "-", "naive"], [190, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[179, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[179, 2, 1, "", "__init__"], [179, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[179, 4, 1, "", "batch_size"], [179, 4, 1, "", "measurements"], [179, 4, 1, "", "objective"], [179, 4, 1, "", "pending_experiments"], [179, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[181, 0, 0, "-", "base"], [183, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[182, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "from_dict"], [182, 2, 1, "", "from_json"], [182, 2, 1, "", "get_current_recommender"], [182, 2, 1, "", "get_next_recommender"], [182, 2, 1, "", "get_non_meta_recommender"], [182, 6, 1, "", "is_stateful"], [182, 2, 1, "", "recommend"], [182, 2, 1, "", "select_recommender"], [182, 2, 1, "", "to_dict"], [182, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[182, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[182, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[184, 1, 1, "", "BaseSequentialMetaRecommender"], [185, 1, 1, "", "SequentialMetaRecommender"], [186, 1, 1, "", "StreamingSequentialMetaRecommender"], [187, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "get_current_recommender"], [184, 2, 1, "", "get_next_recommender"], [184, 2, 1, "", "get_non_meta_recommender"], [184, 6, 1, "", "is_stateful"], [184, 2, 1, "", "recommend"], [184, 2, 1, "", "select_recommender"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[184, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[184, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "get_current_recommender"], [185, 2, 1, "", "get_next_recommender"], [185, 2, 1, "", "get_non_meta_recommender"], [185, 6, 1, "", "is_stateful"], [185, 3, 1, "", "mode"], [185, 2, 1, "", "recommend"], [185, 3, 1, "", "recommenders"], [185, 2, 1, "", "select_recommender"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[185, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[185, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "from_dict"], [186, 2, 1, "", "from_json"], [186, 2, 1, "", "get_current_recommender"], [186, 2, 1, "", "get_next_recommender"], [186, 2, 1, "", "get_non_meta_recommender"], [186, 6, 1, "", "is_stateful"], [186, 2, 1, "", "recommend"], [186, 3, 1, "", "recommenders"], [186, 2, 1, "", "select_recommender"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[186, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[186, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "from_dict"], [187, 2, 1, "", "from_json"], [187, 2, 1, "", "get_current_recommender"], [187, 2, 1, "", "get_next_recommender"], [187, 2, 1, "", "get_non_meta_recommender"], [187, 3, 1, "", "initial_recommender"], [187, 6, 1, "", "is_stateful"], [187, 2, 1, "", "recommend"], [187, 3, 1, "", "recommender"], [187, 3, 1, "", "remain_switched"], [187, 2, 1, "", "select_recommender"], [187, 3, 1, "", "switch_after"], [187, 2, 1, "", "to_dict"], [187, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[187, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[187, 4, 1, "", "string"]], "baybe.recommenders.naive": [[189, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[189, 2, 1, "", "__init__"], [189, 6, 1, "", "allow_recommending_already_measured"], [189, 6, 1, "", "allow_recommending_pending_experiments"], [189, 6, 1, "", "allow_repeated_recommendations"], [189, 3, 1, "", "compatibility"], [189, 3, 1, "", "cont_recommender"], [189, 3, 1, "", "disc_recommender"], [189, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[189, 4, 1, "", "batch_size"], [189, 4, 1, "", "measurements"], [189, 4, 1, "", "objective"], [189, 4, 1, "", "pending_experiments"], [189, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[191, 0, 0, "-", "base"], [193, 0, 0, "-", "bayesian"], [200, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[192, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[192, 2, 1, "", "__init__"], [192, 6, 1, "", "allow_recommending_already_measured"], [192, 6, 1, "", "allow_recommending_pending_experiments"], [192, 6, 1, "", "allow_repeated_recommendations"], [192, 3, 1, "", "compatibility"], [192, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[192, 4, 1, "", "batch_size"], [192, 4, 1, "", "measurements"], [192, 4, 1, "", "objective"], [192, 4, 1, "", "pending_experiments"], [192, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[194, 0, 0, "-", "base"], [196, 0, 0, "-", "botorch"], [198, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[195, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[195, 2, 1, "", "__init__"], [195, 3, 1, "", "acquisition_function"], [195, 3, 1, "", "acquisition_function_cls"], [195, 6, 1, "", "allow_recommending_already_measured"], [195, 6, 1, "", "allow_recommending_pending_experiments"], [195, 6, 1, "", "allow_repeated_recommendations"], [195, 3, 1, "", "compatibility"], [195, 2, 1, "", "get_surrogate"], [195, 2, 1, "", "recommend"], [195, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[195, 4, 1, "", "batch_size"], [195, 4, 1, "", "measurements"], [195, 4, 1, "", "objective"], [195, 4, 1, "", "pending_experiments"], [195, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[197, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[197, 2, 1, "", "__init__"], [197, 3, 1, "", "acquisition_function"], [197, 3, 1, "", "acquisition_function_cls"], [197, 6, 1, "", "allow_recommending_already_measured"], [197, 6, 1, "", "allow_recommending_pending_experiments"], [197, 6, 1, "", "allow_repeated_recommendations"], [197, 3, 1, "", "compatibility"], [197, 2, 1, "", "get_surrogate"], [197, 3, 1, "", "hybrid_sampler"], [197, 3, 1, "", "max_n_subspaces"], [197, 3, 1, "", "n_raw_samples"], [197, 3, 1, "", "n_restarts"], [197, 2, 1, "", "recommend"], [197, 3, 1, "", "sampling_percentage"], [197, 3, 1, "", "sequential_continuous"], [197, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[197, 4, 1, "", "batch_size"], [197, 4, 1, "", "measurements"], [197, 4, 1, "", "objective"], [197, 4, 1, "", "pending_experiments"], [197, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[199, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[201, 0, 0, "-", "base"], [203, 0, 0, "-", "clustering"], [208, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[202, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[202, 2, 1, "", "__init__"], [202, 6, 1, "", "allow_recommending_already_measured"], [202, 6, 1, "", "allow_recommending_pending_experiments"], [202, 6, 1, "", "allow_repeated_recommendations"], [202, 3, 1, "", "compatibility"], [202, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[202, 4, 1, "", "batch_size"], [202, 4, 1, "", "measurements"], [202, 4, 1, "", "objective"], [202, 4, 1, "", "pending_experiments"], [202, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[204, 1, 1, "", "GaussianMixtureClusteringRecommender"], [205, 1, 1, "", "KMeansClusteringRecommender"], [206, 1, 1, "", "PAMClusteringRecommender"], [207, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[204, 2, 1, "", "__init__"], [204, 6, 1, "", "allow_recommending_already_measured"], [204, 6, 1, "", "allow_recommending_pending_experiments"], [204, 6, 1, "", "allow_repeated_recommendations"], [204, 3, 1, "", "compatibility"], [204, 3, 1, "", "model_cluster_num_parameter_name"], [204, 3, 1, "", "model_params"], [204, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[204, 4, 1, "", "batch_size"], [204, 4, 1, "", "measurements"], [204, 4, 1, "", "objective"], [204, 4, 1, "", "pending_experiments"], [204, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[205, 2, 1, "", "__init__"], [205, 6, 1, "", "allow_recommending_already_measured"], [205, 6, 1, "", "allow_recommending_pending_experiments"], [205, 6, 1, "", "allow_repeated_recommendations"], [205, 3, 1, "", "compatibility"], [205, 3, 1, "", "model_cluster_num_parameter_name"], [205, 3, 1, "", "model_params"], [205, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[205, 4, 1, "", "batch_size"], [205, 4, 1, "", "measurements"], [205, 4, 1, "", "objective"], [205, 4, 1, "", "pending_experiments"], [205, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[206, 2, 1, "", "__init__"], [206, 6, 1, "", "allow_recommending_already_measured"], [206, 6, 1, "", "allow_recommending_pending_experiments"], [206, 6, 1, "", "allow_repeated_recommendations"], [206, 3, 1, "", "compatibility"], [206, 3, 1, "", "model_cluster_num_parameter_name"], [206, 3, 1, "", "model_params"], [206, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[206, 4, 1, "", "batch_size"], [206, 4, 1, "", "measurements"], [206, 4, 1, "", "objective"], [206, 4, 1, "", "pending_experiments"], [206, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[207, 2, 1, "", "__init__"], [207, 6, 1, "", "allow_recommending_already_measured"], [207, 6, 1, "", "allow_recommending_pending_experiments"], [207, 6, 1, "", "allow_repeated_recommendations"], [207, 3, 1, "", "compatibility"], [207, 3, 1, "", "model_cluster_num_parameter_name"], [207, 3, 1, "", "model_params"], [207, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[207, 4, 1, "", "batch_size"], [207, 4, 1, "", "measurements"], [207, 4, 1, "", "objective"], [207, 4, 1, "", "pending_experiments"], [207, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[209, 1, 1, "", "FPSRecommender"], [210, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[209, 2, 1, "", "__init__"], [209, 6, 1, "", "allow_recommending_already_measured"], [209, 6, 1, "", "allow_recommending_pending_experiments"], [209, 6, 1, "", "allow_repeated_recommendations"], [209, 3, 1, "", "compatibility"], [209, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[209, 4, 1, "", "batch_size"], [209, 4, 1, "", "measurements"], [209, 4, 1, "", "objective"], [209, 4, 1, "", "pending_experiments"], [209, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[210, 2, 1, "", "__init__"], [210, 6, 1, "", "allow_recommending_already_measured"], [210, 6, 1, "", "allow_recommending_pending_experiments"], [210, 6, 1, "", "allow_repeated_recommendations"], [210, 3, 1, "", "compatibility"], [210, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[210, 4, 1, "", "batch_size"], [210, 4, 1, "", "measurements"], [210, 4, 1, "", "objective"], [210, 4, 1, "", "pending_experiments"], [210, 4, 1, "", "searchspace"]], "baybe.searchspace": [[212, 0, 0, "-", "continuous"], [214, 0, 0, "-", "core"], [219, 0, 0, "-", "discrete"], [225, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[213, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[213, 2, 1, "", "__init__"], [213, 6, 1, "", "comp_rep_bounds"], [213, 6, 1, "", "comp_rep_columns"], [213, 6, 1, "", "constraints_cardinality"], [213, 3, 1, "", "constraints_lin_eq"], [213, 3, 1, "", "constraints_lin_ineq"], [213, 3, 1, "", "constraints_nonlin"], [213, 2, 1, "", "empty"], [213, 2, 1, "", "from_bounds"], [213, 2, 1, "", "from_dataframe"], [213, 2, 1, "", "from_dict"], [213, 2, 1, "", "from_json"], [213, 2, 1, "", "from_parameter"], [213, 2, 1, "", "from_product"], [213, 6, 1, "", "full_factorial"], [213, 2, 1, "", "get_parameters_by_name"], [213, 2, 1, "", "inactive_parameter_combinations"], [213, 6, 1, "", "is_empty"], [213, 6, 1, "", "n_inactive_parameter_combinations"], [213, 6, 1, "", "parameter_names"], [213, 6, 1, "", "parameter_names_in_cardinality_constraints"], [213, 3, 1, "", "parameters"], [213, 2, 1, "", "sample_from_full_factorial"], [213, 2, 1, "", "sample_uniform"], [213, 2, 1, "", "samples_full_factorial"], [213, 2, 1, "", "samples_random"], [213, 6, 1, "", "scaling_bounds"], [213, 2, 1, "", "to_dict"], [213, 2, 1, "", "to_json"], [213, 2, 1, "", "to_searchspace"], [213, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[213, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[213, 4, 1, "", "df"], [213, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[213, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[213, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[213, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[213, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[213, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[213, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[215, 1, 1, "", "SearchSpace"], [216, 1, 1, "", "SearchSpaceType"], [217, 5, 1, "", "to_searchspace"], [218, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[215, 2, 1, "", "__init__"], [215, 6, 1, "", "comp_rep_bounds"], [215, 6, 1, "", "comp_rep_columns"], [215, 6, 1, "", "constraints"], [215, 6, 1, "", "constraints_augmentable"], [215, 3, 1, "", "continuous"], [215, 3, 1, "", "discrete"], [215, 2, 1, "", "estimate_product_space_size"], [215, 2, 1, "", "from_dataframe"], [215, 2, 1, "", "from_dict"], [215, 2, 1, "", "from_json"], [215, 2, 1, "", "from_parameter"], [215, 2, 1, "", "from_product"], [215, 2, 1, "", "get_comp_rep_parameter_indices"], [215, 2, 1, "", "get_parameters_by_name"], [215, 6, 1, "", "n_tasks"], [215, 6, 1, "", "parameter_names"], [215, 6, 1, "", "parameters"], [215, 6, 1, "", "scaling_bounds"], [215, 6, 1, "", "task_idx"], [215, 2, 1, "", "to_dict"], [215, 2, 1, "", "to_json"], [215, 2, 1, "", "transform"], [215, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[215, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[215, 4, 1, "", "df"], [215, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[215, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[215, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[215, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[215, 4, 1, "", "constraints"], [215, 4, 1, "", "empty_encoding"], [215, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[215, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[215, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[215, 4, 1, "", "allow_extra"], [215, 4, 1, "", "allow_missing"], [215, 4, 1, "", "data"], [215, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[216, 3, 1, "", "CONTINUOUS"], [216, 3, 1, "", "DISCRETE"], [216, 3, 1, "", "EITHER"], [216, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[220, 1, 1, "", "MemorySize"], [221, 1, 1, "", "SubspaceDiscrete"], [222, 5, 1, "", "parameter_cartesian_prod_pandas"], [223, 5, 1, "", "parameter_cartesian_prod_polars"], [224, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[220, 2, 1, "", "__init__"], [220, 3, 1, "", "comp_rep_bytes"], [220, 6, 1, "", "comp_rep_human_readable"], [220, 3, 1, "", "comp_rep_shape"], [220, 3, 1, "", "exp_rep_bytes"], [220, 6, 1, "", "exp_rep_human_readable"], [220, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[221, 2, 1, "", "__init__"], [221, 3, 1, "", "comp_rep"], [221, 6, 1, "", "comp_rep_bounds"], [221, 6, 1, "", "comp_rep_columns"], [221, 3, 1, "", "constraints"], [221, 2, 1, "", "empty"], [221, 3, 1, "", "empty_encoding"], [221, 2, 1, "", "estimate_product_space_size"], [221, 3, 1, "", "exp_rep"], [221, 2, 1, "", "from_dataframe"], [221, 2, 1, "", "from_dict"], [221, 2, 1, "", "from_json"], [221, 2, 1, "", "from_parameter"], [221, 2, 1, "", "from_product"], [221, 2, 1, "", "from_simplex"], [221, 2, 1, "", "get_candidates"], [221, 2, 1, "", "get_parameters_by_name"], [221, 6, 1, "", "is_empty"], [221, 6, 1, "", "metadata"], [221, 6, 1, "", "parameter_names"], [221, 3, 1, "", "parameters"], [221, 6, 1, "", "scaling_bounds"], [221, 2, 1, "", "to_dict"], [221, 2, 1, "", "to_json"], [221, 2, 1, "", "to_searchspace"], [221, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[221, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[221, 4, 1, "", "df"], [221, 4, 1, "", "empty_encoding"], [221, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[221, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[221, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[221, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[221, 4, 1, "", "boundary_only"], [221, 4, 1, "", "constraints"], [221, 4, 1, "", "max_nonzero"], [221, 4, 1, "", "max_sum"], [221, 4, 1, "", "min_nonzero"], [221, 4, 1, "", "product_parameters"], [221, 4, 1, "", "simplex_parameters"], [221, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[221, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[222, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[223, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[226, 5, 1, "", "get_transform_parameters"], [227, 5, 1, "", "validate_parameter_names"], [228, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[230, 0, 0, "-", "core"], [237, 0, 0, "-", "mixin"], [239, 0, 0, "-", "utils"]], "baybe.serialization.core": [[231, 5, 1, "", "block_deserialization_hook"], [232, 5, 1, "", "block_serialization_hook"], [233, 8, 1, "", "converter"], [234, 5, 1, "", "get_base_structure_hook"], [235, 5, 1, "", "select_constructor_hook"], [236, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[234, 4, 1, "", "base"], [234, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[236, 4, 1, "", "base"], [236, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[238, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[238, 2, 1, "", "from_dict"], [238, 2, 1, "", "from_json"], [238, 2, 1, "", "to_dict"], [238, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[238, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[238, 4, 1, "", "string"]], "baybe.serialization.utils": [[240, 5, 1, "", "deserialize_dataframe"], [241, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[243, 0, 0, "-", "core"], [245, 0, 0, "-", "lookup"], [247, 0, 0, "-", "scenarios"], [249, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[244, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[244, 4, 1, "", "batch_size"], [244, 4, 1, "", "campaign"], [244, 4, 1, "", "impute_mode"], [244, 4, 1, "", "initial_data"], [244, 4, 1, "", "lookup"], [244, 4, 1, "", "n_doe_iterations"], [244, 4, 1, "", "noise_percent"], [244, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[246, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[246, 4, 1, "", "impute_mode"], [246, 4, 1, "", "lookup"], [246, 4, 1, "", "queries"], [246, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[248, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[248, 4, 1, "", "batch_size"], [248, 4, 1, "", "groupby"], [248, 4, 1, "", "impute_mode"], [248, 4, 1, "", "initial_data"], [248, 4, 1, "", "lookup"], [248, 4, 1, "", "n_doe_iterations"], [248, 4, 1, "", "n_mc_iterations"], [248, 4, 1, "", "noise_percent"], [248, 4, 1, "", "random_seed"], [248, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[250, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[250, 4, 1, "", "batch_size"], [250, 4, 1, "", "campaign"], [250, 4, 1, "", "groupby"], [250, 4, 1, "", "lookup"], [250, 4, 1, "", "n_doe_iterations"], [250, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[252, 0, 0, "-", "bandit"], [254, 0, 0, "-", "base"], [259, 0, 0, "-", "composite"], [261, 0, 0, "-", "custom"], [264, 0, 0, "-", "gaussian_process"], [279, 0, 0, "-", "linear"], [281, 0, 0, "-", "naive"], [283, 0, 0, "-", "ngboost"], [285, 0, 0, "-", "random_forest"], [287, 0, 0, "-", "utils"], [291, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[253, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[253, 2, 1, "", "__init__"], [253, 2, 1, "", "fit"], [253, 2, 1, "", "from_dict"], [253, 2, 1, "", "from_json"], [253, 2, 1, "", "posterior"], [253, 2, 1, "", "posterior_means"], [253, 2, 1, "", "posterior_modes"], [253, 2, 1, "", "posterior_stats"], [253, 3, 1, "", "prior"], [253, 2, 1, "", "replicate"], [253, 3, 1, "", "supports_multi_output"], [253, 3, 1, "", "supports_transfer_learning"], [253, 2, 1, "", "to_botorch"], [253, 2, 1, "", "to_dict"], [253, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[253, 4, 1, "", "measurements"], [253, 4, 1, "", "objective"], [253, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[253, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[253, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[253, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[253, 4, 1, "", "candidates"], [253, 4, 1, "", "stats"]], "baybe.surrogates.base": [[255, 1, 1, "", "IndependentGaussianSurrogate"], [256, 8, 1, "", "PosteriorStatistic"], [257, 1, 1, "", "Surrogate"], [258, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[255, 2, 1, "", "__init__"], [255, 2, 1, "", "fit"], [255, 2, 1, "", "from_dict"], [255, 2, 1, "", "from_json"], [255, 2, 1, "", "posterior"], [255, 2, 1, "", "posterior_stats"], [255, 2, 1, "", "replicate"], [255, 3, 1, "", "supports_multi_output"], [255, 3, 1, "", "supports_transfer_learning"], [255, 2, 1, "", "to_botorch"], [255, 2, 1, "", "to_dict"], [255, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[255, 4, 1, "", "measurements"], [255, 4, 1, "", "objective"], [255, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[255, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[255, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[255, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[255, 4, 1, "", "candidates"], [255, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate": [[257, 2, 1, "", "__init__"], [257, 2, 1, "", "fit"], [257, 2, 1, "", "from_dict"], [257, 2, 1, "", "from_json"], [257, 2, 1, "", "posterior"], [257, 2, 1, "", "posterior_stats"], [257, 2, 1, "", "replicate"], [257, 3, 1, "", "supports_multi_output"], [257, 3, 1, "", "supports_transfer_learning"], [257, 2, 1, "", "to_botorch"], [257, 2, 1, "", "to_dict"], [257, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[257, 4, 1, "", "measurements"], [257, 4, 1, "", "objective"], [257, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[257, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[257, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[257, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[257, 4, 1, "", "candidates"], [257, 4, 1, "", "stats"]], "baybe.surrogates.base.SurrogateProtocol": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "fit"], [258, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[260, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "fit"], [260, 2, 1, "", "from_dict"], [260, 2, 1, "", "from_json"], [260, 2, 1, "", "from_replication"], [260, 2, 1, "", "posterior"], [260, 2, 1, "", "posterior_stats"], [260, 3, 1, "", "surrogates"], [260, 2, 1, "", "to_botorch"], [260, 2, 1, "", "to_dict"], [260, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[260, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[260, 4, 1, "", "string"]], "baybe.surrogates.custom": [[262, 1, 1, "", "CustomONNXSurrogate"], [263, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "default_model"], [262, 2, 1, "", "fit"], [262, 2, 1, "", "from_dict"], [262, 2, 1, "", "from_json"], [262, 3, 1, "", "onnx_input_name"], [262, 3, 1, "", "onnx_str"], [262, 2, 1, "", "posterior"], [262, 2, 1, "", "posterior_stats"], [262, 2, 1, "", "replicate"], [262, 3, 1, "", "supports_multi_output"], [262, 3, 1, "", "supports_transfer_learning"], [262, 2, 1, "", "to_botorch"], [262, 2, 1, "", "to_dict"], [262, 2, 1, "", "to_json"], [262, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[262, 4, 1, "", "measurements"], [262, 4, 1, "", "objective"], [262, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[262, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[262, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[262, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[262, 4, 1, "", "candidates"], [262, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[262, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[265, 0, 0, "-", "core"], [267, 0, 0, "-", "kernel_factory"], [271, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[266, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[266, 2, 1, "", "__init__"], [266, 2, 1, "", "fit"], [266, 2, 1, "", "from_dict"], [266, 2, 1, "", "from_json"], [266, 2, 1, "", "from_preset"], [266, 3, 1, "", "kernel_factory"], [266, 2, 1, "", "posterior"], [266, 2, 1, "", "posterior_stats"], [266, 2, 1, "", "replicate"], [266, 3, 1, "", "supports_multi_output"], [266, 3, 1, "", "supports_transfer_learning"], [266, 2, 1, "", "to_botorch"], [266, 2, 1, "", "to_dict"], [266, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[266, 4, 1, "", "measurements"], [266, 4, 1, "", "objective"], [266, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[266, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[266, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[266, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[266, 4, 1, "", "candidates"], [266, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.kernel_factory": [[268, 1, 1, "", "KernelFactory"], [269, 1, 1, "", "PlainKernelFactory"], [270, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[268, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[269, 2, 1, "", "__init__"], [269, 2, 1, "", "from_dict"], [269, 2, 1, "", "from_json"], [269, 3, 1, "", "kernel"], [269, 2, 1, "", "to_dict"], [269, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[269, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[269, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[272, 0, 0, "-", "core"], [275, 0, 0, "-", "default"], [277, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[273, 1, 1, "", "GaussianProcessPreset"], [274, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[273, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[276, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[276, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[278, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[278, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[280, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[280, 2, 1, "", "__init__"], [280, 2, 1, "", "fit"], [280, 2, 1, "", "from_dict"], [280, 2, 1, "", "from_json"], [280, 3, 1, "", "model_params"], [280, 2, 1, "", "posterior"], [280, 2, 1, "", "posterior_stats"], [280, 2, 1, "", "replicate"], [280, 3, 1, "", "supports_multi_output"], [280, 3, 1, "", "supports_transfer_learning"], [280, 2, 1, "", "to_botorch"], [280, 2, 1, "", "to_dict"], [280, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[280, 4, 1, "", "measurements"], [280, 4, 1, "", "objective"], [280, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[280, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[280, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[280, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[280, 4, 1, "", "candidates"], [280, 4, 1, "", "stats"]], "baybe.surrogates.naive": [[282, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[282, 2, 1, "", "__init__"], [282, 2, 1, "", "fit"], [282, 2, 1, "", "from_dict"], [282, 2, 1, "", "from_json"], [282, 2, 1, "", "posterior"], [282, 2, 1, "", "posterior_stats"], [282, 2, 1, "", "replicate"], [282, 3, 1, "", "supports_multi_output"], [282, 3, 1, "", "supports_transfer_learning"], [282, 2, 1, "", "to_botorch"], [282, 2, 1, "", "to_dict"], [282, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[282, 4, 1, "", "measurements"], [282, 4, 1, "", "objective"], [282, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[282, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[282, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[282, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[282, 4, 1, "", "candidates"], [282, 4, 1, "", "stats"]], "baybe.surrogates.ngboost": [[284, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[284, 2, 1, "", "__init__"], [284, 2, 1, "", "fit"], [284, 2, 1, "", "from_dict"], [284, 2, 1, "", "from_json"], [284, 3, 1, "", "model_params"], [284, 2, 1, "", "posterior"], [284, 2, 1, "", "posterior_stats"], [284, 2, 1, "", "replicate"], [284, 3, 1, "", "supports_multi_output"], [284, 3, 1, "", "supports_transfer_learning"], [284, 2, 1, "", "to_botorch"], [284, 2, 1, "", "to_dict"], [284, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[284, 4, 1, "", "measurements"], [284, 4, 1, "", "objective"], [284, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[284, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[284, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[284, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[284, 4, 1, "", "candidates"], [284, 4, 1, "", "stats"]], "baybe.surrogates.random_forest": [[286, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[286, 2, 1, "", "__init__"], [286, 2, 1, "", "fit"], [286, 2, 1, "", "from_dict"], [286, 2, 1, "", "from_json"], [286, 3, 1, "", "model_params"], [286, 2, 1, "", "posterior"], [286, 2, 1, "", "posterior_stats"], [286, 2, 1, "", "replicate"], [286, 3, 1, "", "supports_multi_output"], [286, 3, 1, "", "supports_transfer_learning"], [286, 2, 1, "", "to_botorch"], [286, 2, 1, "", "to_dict"], [286, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[286, 4, 1, "", "measurements"], [286, 4, 1, "", "objective"], [286, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[286, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[286, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[286, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[286, 4, 1, "", "candidates"], [286, 4, 1, "", "stats"]], "baybe.surrogates.utils": [[288, 5, 1, "", "batchify_ensemble_predictor"], [289, 5, 1, "", "batchify_mean_var_prediction"], [290, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[288, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[290, 4, 1, "", "cls"], [290, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[292, 5, 1, "", "get_model_params_validator"], [293, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[292, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[293, 4, 1, "", "model_cls"]], "baybe.targets": [[295, 0, 0, "-", "base"], [297, 0, 0, "-", "binary"], [300, 0, 0, "-", "enum"], [303, 0, 0, "-", "numerical"], [305, 0, 0, "-", "transforms"]], "baybe.targets.base": [[296, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[296, 2, 1, "", "__init__"], [296, 2, 1, "", "from_dict"], [296, 2, 1, "", "from_json"], [296, 3, 1, "", "name"], [296, 2, 1, "", "summary"], [296, 2, 1, "", "to_dict"], [296, 2, 1, "", "to_json"], [296, 2, 1, "", "to_objective"], [296, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[296, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[296, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[296, 4, 1, "", "series"]], "baybe.targets.binary": [[298, 1, 1, "", "BinaryTarget"], [299, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[298, 2, 1, "", "__init__"], [298, 3, 1, "", "failure_value"], [298, 2, 1, "", "from_dict"], [298, 2, 1, "", "from_json"], [298, 3, 1, "", "name"], [298, 3, 1, "", "success_value"], [298, 2, 1, "", "summary"], [298, 2, 1, "", "to_dict"], [298, 2, 1, "", "to_json"], [298, 2, 1, "", "to_objective"], [298, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[298, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[298, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[298, 4, 1, "", "series"]], "baybe.targets.enum": [[301, 1, 1, "", "TargetMode"], [302, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[301, 3, 1, "", "MATCH"], [301, 3, 1, "", "MAX"], [301, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[302, 3, 1, "", "BELL"], [302, 3, 1, "", "LINEAR"], [302, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[304, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[304, 2, 1, "", "__init__"], [304, 3, 1, "", "bounds"], [304, 2, 1, "", "from_dict"], [304, 2, 1, "", "from_json"], [304, 3, 1, "", "mode"], [304, 3, 1, "", "name"], [304, 2, 1, "", "summary"], [304, 2, 1, "", "to_dict"], [304, 2, 1, "", "to_json"], [304, 2, 1, "", "to_objective"], [304, 2, 1, "", "transform"], [304, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[304, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[304, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[304, 4, 1, "", "series"]], "baybe.targets.transforms": [[306, 5, 1, "", "bell_transform"], [307, 5, 1, "", "linear_transform"], [308, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[306, 4, 1, "", "arr"], [306, 4, 1, "", "lower"], [306, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[307, 4, 1, "", "arr"], [307, 4, 1, "", "descending"], [307, 4, 1, "", "lower"], [307, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[308, 4, 1, "", "arr"], [308, 4, 1, "", "lower"], [308, 4, 1, "", "upper"]], "baybe.telemetry": [[310, 5, 1, "", "get_user_details"], [311, 5, 1, "", "is_enabled"], [312, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [313, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[312, 4, 1, "", "cached_recommendation"], [312, 4, 1, "", "measurements"], [312, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[313, 4, 1, "", "instrument_name"], [313, 4, 1, "", "value"]], "baybe.utils": [[315, 0, 0, "-", "augmentation"], [318, 0, 0, "-", "basic"], [334, 0, 0, "-", "boolean"], [338, 0, 0, "-", "chemistry"], [343, 0, 0, "-", "conversion"], [346, 0, 0, "-", "dataframe"], [361, 0, 0, "-", "interval"], [366, 0, 0, "-", "memory"], [368, 0, 0, "-", "numerical"], [375, 0, 0, "-", "plotting"], [379, 0, 0, "-", "random"], [382, 0, 0, "-", "sampling_algorithms"], [386, 0, 0, "-", "scaling"], [388, 0, 0, "-", "torch"], [391, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[316, 5, 1, "", "df_apply_dependency_augmentation"], [317, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[316, 4, 1, "", "affected"], [316, 4, 1, "", "causing"], [316, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[317, 4, 1, "", "column_groups"], [317, 4, 1, "", "df"]], "baybe.utils.basic": [[319, 1, 1, "", "Dummy"], [320, 8, 1, "", "UNSPECIFIED"], [321, 1, 1, "", "UnspecifiedType"], [322, 1, 1, "", "classproperty"], [323, 5, 1, "", "convert_to_float"], [324, 5, 1, "", "find_subclass"], [325, 5, 1, "", "get_baseclasses"], [326, 5, 1, "", "get_subclasses"], [327, 5, 1, "", "group_duplicate_values"], [328, 5, 1, "", "hilberts_factory"], [329, 5, 1, "", "is_all_instance"], [330, 5, 1, "", "match_attributes"], [331, 5, 1, "", "refers_to"], [332, 5, 1, "", "register_hooks"], [333, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[319, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[322, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[325, 4, 1, "", "abstract"], [325, 4, 1, "", "cls"], [325, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[326, 4, 1, "", "abstract"], [326, 4, 1, "", "cls"], [326, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[327, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[330, 4, 1, "", "callable_"], [330, 4, 1, "", "ignore"], [330, 4, 1, "", "object"], [330, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[332, 4, 1, "", "post_hooks"], [332, 4, 1, "", "pre_hooks"], [332, 4, 1, "", "target"]], "baybe.utils.boolean": [[335, 5, 1, "", "check_if_in"], [336, 5, 1, "", "is_abstract"], [337, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[335, 4, 1, "", "allowed"], [335, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[336, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[337, 4, 1, "", "val"]], "baybe.utils.chemistry": [[339, 5, 1, "", "get_canonical_smiles"], [340, 5, 1, "", "get_fingerprint_class"], [341, 5, 1, "", "name_to_smiles"], [342, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[340, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[341, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[342, 4, 1, "", "encoding"], [342, 4, 1, "", "kwargs_conformer"], [342, 4, 1, "", "kwargs_fingerprint"], [342, 4, 1, "", "prefix"], [342, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[344, 5, 1, "", "fraction_to_float"], [345, 5, 1, "", "nonstring_to_tuple"]], "baybe.utils.conversion.fraction_to_float.params": [[344, 4, 1, "", "value"]], "baybe.utils.dataframe": [[347, 5, 1, "", "add_fake_measurements"], [348, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [349, 5, 1, "", "add_parameter_noise"], [350, 5, 1, "", "arrays_to_dataframes"], [351, 5, 1, "", "create_fake_input"], [352, 5, 1, "", "df_drop_single_value_columns"], [353, 5, 1, "", "df_drop_string_columns"], [354, 5, 1, "", "df_uncorrelated_features"], [355, 5, 1, "", "filter_df"], [356, 5, 1, "", "fuzzy_row_match"], [357, 5, 1, "", "get_transform_objects"], [358, 5, 1, "", "pretty_print_df"], [359, 5, 1, "", "to_tensor"], [360, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[347, 4, 1, "", "bad_intervals"], [347, 4, 1, "", "data"], [347, 4, 1, "", "good_intervals"], [347, 4, 1, "", "good_reference_values"], [347, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[348, 4, 1, "", "df"], [348, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[349, 4, 1, "", "data"], [349, 4, 1, "", "noise_level"], [349, 4, 1, "", "noise_type"], [349, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[350, 4, 1, "", "input_labels"], [350, 4, 1, "", "output_labels"], [350, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[351, 4, 1, "", "**kwargs"], [351, 4, 1, "", "n_rows"], [351, 4, 1, "", "parameters"], [351, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[352, 4, 1, "", "df"], [352, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[353, 4, 1, "", "df"], [353, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[354, 4, 1, "", "df"], [354, 4, 1, "", "exclude_list"], [354, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[355, 4, 1, "", "complement"], [355, 4, 1, "", "df"], [355, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[356, 4, 1, "", "left_df"], [356, 4, 1, "", "parameters"], [356, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[357, 4, 1, "", "allow_extra"], [357, 4, 1, "", "allow_missing"], [357, 4, 1, "", "df"], [357, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[358, 4, 1, "", "df"], [358, 4, 1, "", "max_columns"], [358, 4, 1, "", "max_colwidth"], [358, 4, 1, "", "max_rows"], [358, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[359, 4, 1, "", "*x"]], "baybe.utils.interval": [[362, 7, 1, "", "InfiniteIntervalError"], [363, 1, 1, "", "Interval"], [364, 5, 1, "", "convert_bounds"], [365, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[362, 2, 1, "", "__init__"], [362, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[363, 2, 1, "", "__init__"], [363, 6, 1, "", "center"], [363, 2, 1, "", "contains"], [363, 2, 1, "", "create"], [363, 2, 1, "", "from_dict"], [363, 2, 1, "", "from_json"], [363, 6, 1, "", "is_bounded"], [363, 6, 1, "", "is_degenerate"], [363, 6, 1, "", "is_fully_unbounded"], [363, 6, 1, "", "is_half_bounded"], [363, 6, 1, "", "is_left_bounded"], [363, 6, 1, "", "is_right_bounded"], [363, 3, 1, "", "lower"], [363, 2, 1, "", "to_dict"], [363, 2, 1, "", "to_json"], [363, 2, 1, "", "to_ndarray"], [363, 2, 1, "", "to_tensor"], [363, 2, 1, "", "to_tuple"], [363, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[363, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[363, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[363, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[364, 4, 1, "", "bounds"]], "baybe.utils.memory": [[367, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[367, 4, 1, "", "num"]], "baybe.utils.numerical": [[369, 3, 1, "", "DTypeFloatNumpy"], [370, 3, 1, "", "DTypeFloatONNX"], [371, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [372, 5, 1, "", "closer_element"], [373, 5, 1, "", "closest_element"], [374, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[372, 4, 1, "", "target"], [372, 4, 1, "", "x"], [372, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[373, 4, 1, "", "array"], [373, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[374, 4, 1, "", "arr"], [374, 4, 1, "", "weights"]], "baybe.utils.plotting": [[376, 5, 1, "", "create_example_plots"], [377, 5, 1, "", "indent"], [378, 5, 1, "", "to_string"]], "baybe.utils.plotting.create_example_plots.params": [[376, 4, 1, "", "ax"], [376, 4, 1, "", "base_name"], [376, 4, 1, "", "path"]], "baybe.utils.plotting.to_string.params": [[378, 4, 1, "", "*fields"], [378, 4, 1, "", "header"], [378, 4, 1, "", "single_line"]], "baybe.utils.random": [[380, 5, 1, "", "set_random_seed"], [381, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[380, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[381, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[383, 1, 1, "", "DiscreteSamplingMethod"], [384, 5, 1, "", "farthest_point_sampling"], [385, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[383, 3, 1, "", "FPS"], [383, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[384, 4, 1, "", "initialization"], [384, 4, 1, "", "n_samples"], [384, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[385, 4, 1, "", "df"], [385, 4, 1, "", "method"], [385, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[387, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[387, 2, 1, "", "__init__"], [387, 2, 1, "", "fit"], [387, 3, 1, "", "mapping"], [387, 2, 1, "", "transform"]], "baybe.utils.torch": [[389, 8, 1, "", "DTypeFloatTorch"], [390, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[392, 5, 1, "", "finite_float"], [393, 5, 1, "", "non_inf_float"], [394, 5, 1, "", "non_nan_float"], [395, 5, 1, "", "validate_not_nan"], [396, 5, 1, "", "validate_parameter_input"], [397, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[396, 4, 1, "", "data"], [396, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [396, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[397, 4, 1, "", "data"], [397, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 197, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 328, 359, 363, 398, 401, 408, 412, 415, 416, 419, 420, 422, 423, 424, 425, 426, 428, 433, 437, 438, 439, 442, 443, 444, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 463], "0": [8, 13, 16, 22, 31, 34, 44, 45, 51, 106, 145, 153, 156, 176, 184, 185, 186, 197, 221, 244, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 306, 307, 308, 316, 317, 337, 348, 349, 354, 355, 370, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 423, 425, 427, 428, 430, 431, 432, 434, 435, 436, 438, 439, 442, 447, 448, 450, 451, 455, 456, 458, 459, 460, 462, 465], "00": [432, 458], "000": [412, 434], "001": [44, 348, 451], "0010227639999129678": 415, "004803": 423, "005": [400, 401, 402, 404, 405], "01": [176, 407, 408, 413, 416, 431, 432, 439], "02": 439, "021": [278, 354], "022764": 423, "026407": 423, "03213": [278, 354], "040306": 430, "042208": 427, "05": 439, "051144": 427, "051477": 430, "053246": 431, "057": [400, 401, 402, 404, 405, 415], "06": [221, 290], "061643": 427, "063139": 430, "064731": 423, "069389": 427, "076712": 427, "079487": 423, "08": 439, "088255": 423, "089287": 430, "089434": 427, "09653736976391157": 425, "0f": 416, "1": [13, 16, 26, 31, 44, 106, 127, 145, 156, 187, 197, 213, 244, 246, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 306, 307, 308, 313, 316, 317, 327, 337, 349, 351, 355, 370, 374, 384, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 423, 425, 427, 428, 430, 431, 432, 434, 435, 436, 438, 439, 442, 443, 447, 450, 451, 455, 456, 458, 459, 460, 462, 465], "10": [13, 16, 197, 246, 278, 354, 399, 401, 410, 411, 412, 413, 416, 419, 420, 422, 423, 425, 427, 428, 430, 434, 435, 436, 438, 439, 442, 449, 450, 456, 460, 465], "100": [404, 405, 410, 411, 412, 413, 416, 419, 420, 422, 423, 427, 428, 434, 439, 454, 455, 456, 460, 462, 465], "1000": [428, 460], "100888": 423, "1024": [150, 444, 456], "1038": [278, 354], "104": 432, "105": [400, 401, 402, 404, 405, 415, 427, 458], "106": 432, "11": [322, 422, 423, 427, 432, 443], "110932": 430, "111": 434, "111160": 405, "114": 427, "1147": 412, "1148": 412, "1149": 412, "115": [427, 431], "1150": 412, "117731": 423, "118754": 430, "12": [422, 423, 431, 432, 445, 450, 458], "120": [400, 401, 402, 404, 405, 410, 412, 415, 427, 456], "120000": 431, "121369": 423, "122": [427, 434], "124774": 423, "125591": 430, "126": [410, 412, 413, 443], "1268824": [400, 401, 402], "128": 10, "13": [405, 422, 423, 438, 458], "1337": [416, 417, 465], "136": 427, "14": [422, 432, 458], "141209": 432, "14448993259018328": 425, "1454": 444, "147": 431, "15": [246, 412, 422, 423, 438, 439, 442, 450, 458], "150": [410, 413, 451], "1500": 456, "151": 412, "153": [400, 401, 402, 404, 405, 415], "155967": 430, "156417": 430, "158590": 405, "16": [358, 370, 422, 423, 427], "165968": 405, "166342": 430, "17": [422, 423, 432], "176075": 423, "177": 434, "18": [422, 423, 450], "180": 410, "185725": 430, "188": 434, "189405": 423, "19": [422, 423], "190": 427, "192": 412, "197683": 432, "1e": [221, 290], "2": [8, 13, 16, 22, 106, 108, 127, 246, 316, 317, 327, 347, 355, 374, 384, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 416, 417, 419, 420, 422, 423, 425, 427, 428, 430, 431, 432, 434, 435, 436, 438, 439, 442, 447, 450, 451, 455, 456, 458, 459, 460, 462], "20": [13, 16, 156, 246, 399, 400, 401, 402, 416, 417, 422, 423, 427, 444, 456, 463, 465], "200": [401, 410, 412, 419, 420, 425, 434], "2004": 447, "2007": 463, "201982": 430, "2021": 401, "2022": 442, "2025": 442, "205880": 430, "21": [422, 435], "210032": 423, "215544": 423, "215917": 423, "22": [13, 16, 422, 423, 427, 450], "221": 444, "222": 434, "223809": 430, "226177": 430, "229408": 430, "23": [422, 423, 450, 460], "24": [411, 422, 423, 458], "241": 456, "243248": 427, "244623": 427, "247475": 430, "25": [416, 422, 423, 438, 458], "250": 448, "251407": 430, "252471": 423, "252598": 423, "255": 427, "257896": 430, "26": [422, 423, 458], "269214": 423, "27": [422, 423, 427, 458], "276213": 423, "277": 427, "278": 427, "279": 427, "279013": 430, "28": [422, 427], "280": 427, "285140": 427, "29": [405, 419, 422, 427, 442], "291870": 423, "296": 404, "297218": 423, "3": [246, 316, 317, 322, 327, 355, 358, 377, 400, 401, 402, 405, 408, 410, 411, 412, 413, 415, 417, 420, 422, 423, 425, 427, 428, 430, 431, 432, 434, 435, 438, 439, 442, 443, 445, 447, 450, 451, 454, 456, 458, 459, 460, 462, 463], "30": [399, 413, 417, 422, 456], "305145": 423, "3078f3": 444, "31": [422, 435], "312095": 427, "318829": 430, "32": [411, 422, 450, 456], "322": 405, "33": [411, 422, 423, 427], "333906": 423, "335597": 423, "338751": 432, "34": [411, 450], "340400": 423, "347834": 427, "349087": 423, "35": [411, 422, 427], "353069": 423, "357432": 423, "36": 427, "37": [423, 427], "38": 450, "384993": 430, "385661": 430, "389395": 423, "39": 456, "393899": 423, "394275": 423, "397468": 423, "397864": 423, "3d": 417, "4": [13, 16, 150, 316, 317, 358, 405, 407, 408, 410, 411, 412, 413, 417, 422, 423, 425, 427, 430, 431, 432, 442, 447, 450, 451, 456, 458], "40": [422, 455, 456], "403258": 432, "403370": 423, "40x": 444, "412711": 427, "413688": 423, "415328": 423, "415583": 427, "417566": 423, "42": [425, 427, 428, 450], "425701": 430, "43": [404, 423], "437497": 423, "440252": 423, "447": 410, "448": 410, "449": 410, "45": [422, 423, 427, 462], "450": 410, "451020": 423, "452819": 430, "466675": 430, "468": 444, "469294": 427, "471371": 427, "477231": 432, "477650": 423, "49": 423, "490930": 423, "499144": 427, "4x": 444, "5": [106, 156, 316, 317, 400, 402, 407, 410, 411, 412, 413, 416, 419, 420, 422, 423, 427, 428, 430, 431, 432, 434, 435, 436, 438, 439, 442, 447, 448, 449, 450, 451, 456, 458, 460, 463, 465], "50": [413, 420, 422, 425, 438, 439, 447, 448, 456, 458, 462], "500": [417, 456], "502492": 430, "5066666666666667": 425, "51": [423, 427], "52": [423, 427], "521101": 423, "525623": 423, "53": 427, "5313": 333, "535967": 423, "536851": 427, "538234": 427, "54": [427, 442, 450], "55": [427, 462], "554412": 423, "558818": 430, "56": [423, 427, 450, 460], "563215": 427, "563325": 427, "564131": 427, "564551": 427, "567441": 423, "575860": 423, "576815": 423, "58": 427, "581417": 423, "59": [423, 434, 442, 450], "590": 401, "591708": 427, "595907": 423, "599486": 427, "6": [316, 317, 358, 400, 401, 402, 410, 411, 412, 413, 422, 423, 425, 427, 430, 432, 434, 447, 451, 458], "60": [427, 455], "606991": 423, "608546": 427, "61": 423, "611139": 427, "612299": 423, "62": [425, 450], "627615": 423, "64": [197, 423, 427], "642192": 427, "643357": 427, "65": 425, "652172": 430, "657033": 427, "657701": 423, "66368270ffd51418ec58bd793f2d9b1b": 463, "663776": 423, "669737": 430, "67": [405, 423], "676100": 423, "676925": 423, "686014": 430, "686540": 423, "69": [400, 401, 402, 427], "698855": 431, "7": [156, 316, 317, 354, 411, 413, 417, 422, 423, 427, 428, 430, 438, 447, 450, 456, 458], "70": 422, "706667": 431, "71": [432, 456], "713709": 423, "72": 450, "726293": 427, "736605": 432, "739932": 404, "741465": 423, "743693": 423, "745": 465, "747924": 427, "748681": 423, "75": [422, 458], "753888": 423, "755471": 427, "765834": 430, "766758": 423, "770947": 427, "771136": 432, "775088": 423, "775898": 430, "778": 434, "79": [427, 442], "795827": 432, "797566": 432, "7gz": 456, "7hf": 456, "8": [317, 400, 402, 404, 410, 412, 413, 422, 423, 425, 427, 430, 442, 447, 451], "80": [423, 427, 431, 451], "808453": 423, "809018": 423, "812321": 430, "813192": 423, "817020": 423, "822336": 430, "823278": 432, "828698": 430, "83": 450, "833184": 423, "835510": 423, "8389": 333, "8417": 333, "842169": 423, "848276": 427, "851391": 432, "854022": 423, "857": 412, "858836": 423, "859462": 423, "86": 427, "860426": 423, "861": 413, "862": 413, "863": 413, "864": 413, "868320": 430, "87": [434, 450], "870179": 404, "88": 434, "8859": 419, "889": 434, "89": [401, 431, 434], "896227": 430, "8jq": 456, "9": [13, 16, 413, 417, 422, 423, 427, 430, 447, 450, 458, 459], "90": [400, 401, 402, 404, 405, 415, 434, 458], "900242": 423, "905487": 427, "907346": 427, "91": 450, "914742": 423, "921198": 432, "926915": 423, "93": 427, "95": 427, "96": [401, 405], "965348": 430, "965984": 430, "999": 451, "A": [0, 13, 16, 26, 31, 38, 40, 41, 42, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 73, 77, 79, 80, 81, 84, 87, 89, 94, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 124, 126, 127, 131, 133, 139, 142, 143, 145, 153, 156, 158, 159, 160, 169, 170, 171, 172, 173, 174, 175, 176, 179, 185, 186, 187, 189, 192, 195, 197, 199, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 222, 223, 238, 239, 244, 246, 248, 250, 253, 255, 257, 260, 262, 266, 268, 269, 276, 278, 280, 282, 284, 286, 292, 296, 298, 304, 306, 307, 308, 316, 322, 325, 326, 327, 330, 340, 347, 354, 355, 357, 367, 374, 382, 384, 387, 399, 411, 420, 422, 423, 425, 427, 435, 436, 441, 443, 444, 445, 447, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463], "AND": [54, 412, 447, 451], "AS": [442, 447], "And": 419, "As": [400, 401, 402, 417, 425, 427, 438, 439, 442, 443, 444, 450, 451, 454, 457, 458, 460], "But": 462, "By": [94, 126, 159, 221, 336, 355, 423, 445, 449, 452, 453, 455, 457, 458], "FOR": 447, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 166, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 244, 250, 253, 255, 257, 258, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 296, 298, 304, 309, 332, 356, 360, 363, 376, 387, 400, 401, 402, 404, 405, 411, 415, 416, 417, 422, 423, 425, 427, 432, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465], "If": [6, 13, 15, 16, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 94, 98, 121, 126, 127, 131, 133, 135, 158, 159, 164, 165, 185, 186, 189, 197, 213, 215, 221, 227, 228, 244, 246, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 307, 312, 317, 325, 326, 330, 332, 335, 337, 340, 344, 347, 348, 349, 351, 354, 355, 356, 357, 376, 378, 384, 385, 396, 397, 405, 407, 416, 422, 431, 432, 435, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 465], "In": [31, 45, 57, 158, 197, 215, 242, 244, 330, 358, 400, 401, 402, 404, 416, 417, 419, 422, 423, 425, 427, 428, 431, 432, 435, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465], "It": [26, 179, 186, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 261, 282, 347, 400, 404, 405, 411, 420, 422, 425, 427, 432, 434, 435, 436, 438, 449, 450, 451, 452, 456, 457, 458, 460, 465], "Its": [246, 419], "No": [356, 430, 441, 444], "Not": [447, 451], "OF": [442, 447], "OR": [442, 447], "Of": [405, 414, 440, 459], "On": [419, 425], "One": [147, 400, 402, 428, 442], "Or": 452, "Such": [405, 451, 454, 460], "That": [44, 215, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 307, 405, 410, 422, 445, 458, 460, 463], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 94, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 127, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 160, 166, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 233, 234, 236, 238, 242, 244, 246, 248, 253, 255, 257, 258, 260, 262, 266, 269, 280, 282, 284, 286, 288, 290, 292, 293, 296, 298, 301, 304, 306, 307, 308, 310, 312, 313, 316, 317, 322, 325, 326, 327, 330, 332, 335, 336, 337, 340, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 367, 372, 373, 374, 376, 378, 380, 381, 384, 385, 396, 397, 400, 401, 402, 405, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 427, 431, 432, 436, 438, 439, 441, 443, 444, 445, 447, 450, 451, 452, 454, 455, 456, 457, 458, 461, 462, 464, 465], "Then": 417, "There": [83, 290, 370, 422, 430, 442, 443, 445, 449, 453, 458, 461], "These": [310, 398, 401, 402, 403, 406, 409, 414, 418, 421, 424, 426, 429, 433, 437, 442, 445, 449, 451, 452, 456, 458], "To": [400, 405, 416, 417, 423, 425, 428, 434, 438, 439, 442, 443, 445, 449, 450, 451, 452, 453, 455, 456, 460, 461], "Will": 448, "With": [347, 416, 417, 422, 425, 428, 438, 439, 442, 449, 451, 456, 459], "_": [135, 164, 165, 218, 224, 231, 376, 407, 416, 439], "__": 135, "__class__": [415, 425], "__excepthook__": 443, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 253, 255, 257, 258, 260, 262, 266, 268, 269, 276, 278, 280, 282, 284, 286, 296, 298, 304, 319, 322, 362, 363, 387, 458, 459], "__name__": [415, 425], "__new__": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 147, 148, 150, 362], "__str__": 444, "__version__": 444, "_amount": 422, "_arraylik": 350, "_c": 326, "_cumbest": 244, "_default_my_attribut": 445, "_discretelabellikeparamet": [142, 145, 156], "_expectedhypervolumeimprov": [13, 16], "_fit": 293, "_has_switch": 187, "_iterbest": 244, "_label": 422, "_measur": 244, "_n_last_measur": [184, 185, 186], "_nbase": 342, "_nestedsequ": [13, 16, 127, 160, 306, 307, 308, 373], "_no_tl": 438, "_option": 444, "_posterior": 293, "_step": [184, 185, 186], "_supportsarrai": [13, 16, 127, 160, 306, 307, 308, 373], "_surrogate_model": [416, 417], "_surrogategett": 260, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 226, 234, 235, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 327, 328, 329, 345, 357, 363], "_target": 444, "_tparamet": 159, "_tsurrog": 289, "_u": 327, "_validate_my_attribut": 445, "_was_us": [184, 185, 186], "a1": 317, "a2": 317, "ab": [413, 422], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 324, 331, 444, 464], "abc": [24, 34, 35, 36, 37, 38, 40, 101, 102, 103, 121, 139, 140, 168, 182, 192, 195, 202, 207, 255, 257, 296, 336], "abil": [448, 453, 463], "abl": [417, 443, 449, 451, 456, 459, 465], "about": [8, 26, 31, 140, 156, 296, 313, 400, 401, 402, 422, 431, 432, 442, 444, 445, 450, 454, 456, 458, 461], "abov": [290, 308, 336, 354, 399, 405, 412, 413, 415, 416, 423, 430, 442, 445, 447, 448, 449, 450, 451, 452, 453, 456, 459, 460, 461, 463], "absenc": 455, "absolut": [44, 153, 349, 442], "abstract": [24, 34, 35, 36, 37, 38, 40, 101, 102, 103, 121, 138, 139, 140, 168, 182, 192, 195, 202, 257, 296, 325, 326, 336, 444, 451, 463], "abstractli": 425, "acceler": [442, 444, 446, 463], "accept": [31, 185, 253, 255, 257, 262, 266, 280, 282, 284, 286, 350, 416, 417, 444, 447, 452, 455, 456, 460, 462], "access": [213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 400, 401, 402, 410, 415, 439, 444, 451, 456, 459], "accord": [44, 180, 423, 448, 451, 452, 457, 465], "accordingli": [197, 450, 453, 455, 459], "account": 449, "accumul": [170, 425, 463], "accur": 450, "acet": [400, 401, 402, 404, 405], "aceton": 422, "achiev": [21, 221, 417, 422, 425, 428, 442, 445, 448, 450, 451, 453, 461], "ack": 442, "acq_funct": 405, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 416, 417, 425], "acqf1": 459, "acqf2": 459, "acqf_valu": 416, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 70, 80, 195, 197, 410, 411, 412, 413, 416, 417, 425, 427, 434, 442, 444, 448, 455, 457, 459, 461], "acquisition_funct": [195, 197, 405, 425, 435, 436, 444], "acquisition_function_cl": [195, 197, 444], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 195, 197, 425, 444, 459], "across": [422, 425, 438, 449, 457, 463], "act": [422, 444, 447, 451, 460], "action": [21, 415, 425, 441, 444, 464], "activ": [15, 34, 158, 187, 197, 416, 417, 425, 442, 443, 444, 445, 451, 452, 453, 454, 457, 463, 464, 465], "activate_paramet": 444, "active_dim": [101, 102, 103, 106, 108, 110, 111, 112], "active_valu": [139, 142, 143, 145, 153, 156, 438, 439, 444, 453, 456, 463], "actual": [185, 215, 242, 431, 444, 454, 458, 460, 463, 465], "ad": [31, 221, 312, 316, 347, 384, 422, 423, 441, 445, 448, 452, 453, 461, 462, 464], "adapt": [186, 278, 337, 354], "add": [31, 236, 246, 347, 348, 405, 419, 420, 422, 427, 438, 442, 447, 449, 450, 451, 454, 458, 463, 465], "add_collection3d": 417, "add_fake_measur": [351, 404, 405, 410, 411, 412, 413, 419, 420, 427, 444, 449, 460, 465], "add_fake_result": 444, "add_measur": [31, 351, 404, 405, 407, 408, 410, 411, 412, 413, 417, 419, 420, 425, 427, 428, 431, 432, 442, 444, 449, 450, 452, 453], "add_noise_to_perturb_degenerate_row": 444, "add_parameter_nois": [351, 444, 465], "add_subplot": 417, "addendum": 447, "addit": [31, 94, 121, 126, 131, 133, 185, 197, 215, 236, 244, 246, 248, 349, 351, 400, 401, 402, 423, 431, 439, 442, 444, 446, 447, 450, 451, 452, 454, 455, 456, 458, 459, 460, 463, 465], "addition": [415, 423, 442, 454], "additiveexplain": [92, 95], "additivekernel": 444, "address": 460, "adher": [444, 445], "adjust": [158, 186, 401, 405, 431, 444, 453, 455], "adopt": 405, "adrian": [442, 446], "advanc": [186, 425, 443, 444, 452, 455, 459, 463, 464], "advantag": [422, 445], "advic": 445, "advis": [447, 460], "affect": [31, 53, 63, 65, 197, 213, 316, 415, 434, 441, 443, 451], "affected_paramet": [53, 410, 411, 412, 413, 422, 451], "affili": [442, 452], "afford": 450, "aforement": [215, 452], "after": [187, 332, 404, 405, 410, 411, 412, 413, 417, 427, 434, 442, 450, 454, 455, 456, 459], "afterward": 459, "again": [416, 449, 450, 451, 463], "against": [88, 312, 330, 422, 447, 453, 463], "agent": 423, "aggreg": 455, "agraw": 446, "agre": [442, 447, 454], "agreement": 447, "ai": [99, 166, 370], "aim": [450, 454], "akin": 449, "al": [401, 442, 456], "aldrich": 446, "alex": 446, "alexand": [442, 446], "algorithm": [190, 197, 347, 382, 384, 399, 422, 427, 442, 444, 449, 454, 457], "alia": [155, 199, 256, 456], "alias": 444, "align": [158, 213, 332, 416, 458, 463], "all": [23, 24, 33, 35, 40, 44, 53, 55, 61, 63, 94, 100, 101, 102, 103, 120, 121, 126, 137, 140, 145, 149, 156, 167, 168, 178, 181, 182, 185, 191, 192, 194, 197, 201, 202, 213, 215, 222, 223, 246, 253, 254, 257, 295, 296, 316, 329, 330, 347, 400, 401, 402, 405, 407, 408, 410, 411, 415, 416, 417, 422, 423, 425, 427, 430, 431, 438, 439, 442, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465], "allclos": [407, 408, 423], "alleg": 447, "allow": [21, 31, 34, 44, 51, 55, 121, 126, 131, 133, 153, 159, 186, 215, 221, 248, 313, 335, 356, 357, 396, 397, 400, 401, 402, 405, 422, 423, 438, 439, 442, 444, 448, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 465], "allow_": [444, 453], "allow_extra": [121, 126, 131, 133, 213, 215, 221, 226, 357, 360, 427, 444], "allow_miss": [121, 126, 131, 133, 213, 215, 221, 226, 357, 360, 444], "allow_recommending_already_measur": [31, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 425, 435, 436, 441, 444, 450], "allow_recommending_already_recommend": [31, 425, 435, 436, 441, 444, 450], "allow_recommending_pending_experi": [31, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 444, 450], "allow_repeated_recommend": [189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 444], "almost": 401, "alon": [444, 447], "along": [374, 447, 456, 463], "alongsid": 447, "alpha": [170, 417, 428], "alphabet": [161, 444], "alreadi": [31, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 422, 432, 442, 444, 448, 449, 450, 453, 458, 460, 461, 463, 465], "also": [31, 44, 57, 94, 159, 253, 255, 257, 262, 266, 280, 282, 284, 286, 313, 330, 332, 347, 348, 349, 400, 407, 408, 416, 417, 419, 420, 422, 427, 428, 431, 432, 434, 438, 439, 442, 444, 445, 448, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465], "alter": [422, 444, 450, 453], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 290, 374, 415, 422, 423, 430, 442, 444, 453, 461, 464, 465], "although": [422, 432, 435, 458, 460], "alwai": [15, 31, 40, 231, 232, 419, 422, 423, 442, 448, 450, 451, 460, 461, 463, 465], "ambigu": [153, 320, 321, 458], "amend": 451, "among": [34, 422, 442, 455, 463], "amount": [317, 377, 385, 423, 438, 439, 449, 454, 456, 465], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 70, 71, 72, 74, 75, 76, 80, 85, 88, 89, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 122, 124, 126, 131, 133, 135, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 160, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 234, 236, 238, 242, 244, 246, 248, 253, 255, 257, 260, 262, 263, 266, 269, 280, 282, 284, 286, 288, 289, 296, 298, 304, 316, 320, 321, 328, 330, 332, 335, 341, 345, 354, 355, 356, 358, 362, 363, 364, 373, 376, 378, 384, 385, 400, 402, 403, 405, 412, 413, 415, 416, 419, 420, 423, 427, 430, 434, 435, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463], "analog": [215, 347, 451, 458, 459], "analogi": [180, 457], "analysi": [442, 454, 461], "analyt": [3, 4, 7, 8, 80, 460, 463], "analyz": [442, 445, 454], "angl": 417, "ani": [13, 16, 64, 65, 94, 127, 138, 139, 140, 142, 143, 145, 156, 159, 160, 163, 164, 165, 231, 232, 236, 240, 241, 248, 280, 284, 286, 306, 307, 308, 313, 316, 329, 330, 332, 333, 335, 336, 351, 356, 363, 365, 373, 378, 392, 393, 394, 395, 397, 415, 422, 438, 439, 441, 442, 443, 444, 445, 447, 450, 452, 453, 456, 459, 460, 463], "annot": [332, 415, 447], "anonym": [442, 452], "anoth": [53, 364, 401, 411, 412, 419, 420, 422, 432, 445, 451, 463], "ansatz": 444, "answer": 450, "anti": 355, "anymor": [444, 463], "anyth": 337, "anywai": 461, "anywher": 407, "apach": [442, 447], "apart": [445, 450], "api": [442, 443, 459], "aplei": 454, "appar": 459, "appdata": 443, "appear": [330, 443, 444, 447, 459], "append": [417, 439], "appendix": 447, "appli": [31, 40, 41, 42, 57, 197, 215, 242, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 330, 341, 349, 351, 387, 405, 406, 409, 410, 412, 413, 415, 416, 422, 438, 443, 444, 447, 451, 454, 455, 457, 458, 459, 460, 461, 462, 463], "applic": [378, 442, 445, 447, 456, 457, 460], "approach": [221, 416, 425, 442, 445, 448, 450, 453, 455, 457, 459, 461, 463], "appropri": [47, 48, 118, 221, 425, 445, 447, 453, 458], "approxim": [10, 21, 451, 454], "ar": [6, 12, 13, 14, 16, 17, 31, 34, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 69, 78, 81, 82, 83, 94, 121, 126, 127, 131, 133, 139, 142, 143, 145, 153, 156, 158, 159, 160, 165, 179, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 244, 246, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 308, 310, 312, 313, 316, 317, 325, 326, 327, 329, 330, 332, 336, 337, 347, 348, 350, 351, 352, 356, 357, 376, 384, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 417, 420, 422, 423, 425, 427, 430, 431, 434, 435, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465], "arang": [407, 417, 456], "arbitrari": [186, 215, 365, 444, 451, 456, 457, 460, 463, 465], "arbitrarili": [455, 459], "architectur": [253, 255, 257, 262, 266, 280, 282, 284, 286, 293, 444, 461, 463], "ard_num_dim": [101, 102, 103, 106, 108, 110, 111, 112], "area": 417, "arg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 105, 107, 109, 114, 115, 116, 168, 170, 171, 172, 173, 174, 175, 176, 179, 199, 258, 263, 268, 362, 445], "argu": 422, "argument": [71, 89, 94, 99, 156, 159, 166, 182, 184, 185, 186, 187, 213, 221, 258, 260, 332, 351, 355, 405, 420, 427, 444, 451, 454, 456, 457, 458, 459, 460, 463], "aris": [56, 422, 444, 447, 451, 459, 465], "arithmet": [129, 455], "arizona": 446, "arm": [252, 253, 440, 446], "arm_index": 425, "around": [13, 16, 44, 206, 248, 250, 427, 444, 457, 459, 465], "arr": [306, 307, 308, 374, 428], "arrai": [13, 16, 127, 160, 306, 307, 308, 319, 350, 359, 369, 373, 374, 384, 417, 444, 457, 461], "arrays_to_datafram": [407, 408, 417, 428, 431, 432, 438, 439, 444, 460], "arriv": [442, 453], "artifici": 465, "aryl": [400, 401, 402, 404, 442, 456], "ascend": 427, "ask": [422, 442, 444, 445, 450, 453], "aspect": [403, 407, 408, 432, 449, 452], "assembl": [422, 459, 461], "assembli": [461, 464], "assert": [65, 135, 356, 410, 411, 412, 413, 419, 420, 422, 423, 430, 434, 444, 447, 450, 451, 459, 461], "assess": 460, "assign": [347, 416, 423, 430, 456], "associ": [215, 425, 447, 450, 452, 455, 463], "assum": [26, 45, 261, 332, 356, 357, 400, 401, 402, 405, 407, 408, 410, 411, 412, 413, 419, 420, 422, 425, 427, 431, 432, 434, 442, 447, 451, 453, 456, 459, 461, 462, 465], "assumpt": 460, "assur": 451, "asymmetr": 44, "asynchron": [442, 450, 464], "atol": [407, 408], "atompair": 150, "atompairfingerprint": 150, "attach": [26, 332, 415, 416, 417, 447], "attempt": [79, 85, 261, 376, 425, 443, 444, 449, 451, 454, 457], "attent": 187, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 135, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 253, 255, 257, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 296, 298, 304, 330, 333, 363, 387, 395, 444], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 88, 91, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 129, 131, 133, 138, 139, 140, 142, 143, 145, 147, 148, 150, 152, 153, 154, 156, 159, 163, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 220, 221, 230, 234, 236, 253, 254, 255, 257, 260, 262, 266, 269, 273, 276, 278, 280, 282, 284, 286, 293, 296, 297, 298, 301, 302, 304, 318, 321, 330, 345, 357, 363, 368, 383, 387, 388, 391, 392, 393, 394, 395, 430, 444, 445, 447, 451, 457, 459, 461, 462], "audit": [442, 444, 445], "augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 215, 288, 289, 290, 444, 450], "author": 447, "authorship": 447, "auto": [12, 13, 14, 16, 17, 444, 446], "auto_tutori": 370, "autocorr": 150, "autocorrfingerprint": 150, "autodoc": 444, "automat": [31, 124, 197, 266, 399, 417, 431, 443, 444, 445, 454, 455, 457, 458, 461, 463, 464], "avail": [2, 129, 145, 147, 148, 150, 156, 185, 186, 244, 246, 273, 301, 302, 313, 383, 384, 385, 402, 404, 407, 408, 422, 427, 431, 432, 442, 443, 444, 445, 447, 449, 450, 452, 454, 456, 457, 458, 459, 460, 463, 464], "available_acq_funct": 405, "avalon": 150, "avalonfingerprint": 150, "averag": [282, 416, 417, 439, 456, 460], "avoid": [215, 333, 374, 444, 445, 449, 450, 456, 458], "awai": [13, 16, 158, 462], "awar": [422, 438, 439, 444, 448, 453, 459], "ax": [94, 376, 399, 401, 416, 417, 428, 438, 439], "axes3d": [376, 417], "axi": [213, 244, 374, 399, 407, 408, 413, 416, 417, 422, 423, 425, 427, 428, 431, 432, 438, 439, 458], "azim": 417, "azur": 444, "b": [44, 56, 176, 278, 316, 327, 354, 355, 401, 411, 420, 425, 435, 436, 441, 442, 445, 447, 450, 453, 456, 459], "b1": 317, "b2": 317, "back": [0, 434, 441, 444, 445, 453], "backend": 313, "background": [94, 98, 444, 454], "background_data": 94, "backport": 443, "backtest": [242, 243, 249, 400, 401, 402, 416, 437, 440, 442, 444, 457, 460], "backtick": 445, "backward": [117, 123, 198, 199, 215, 444], "bad": [427, 450, 452, 462], "bad_interv": 347, "badg": 444, "bai": 442, "baird": 446, "balanc": [126, 425, 442], "banana": 445, "bandit": [253, 405, 440, 442, 444, 446], "banner": 444, "bar": [94, 96, 419, 420, 422, 434, 435, 436, 442, 444, 454, 461], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 129, 131, 133, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 183, 184, 185, 186, 187, 189, 192, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 220, 221, 234, 236, 238, 253, 255, 257, 258, 260, 261, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 290, 292, 296, 298, 301, 302, 304, 319, 321, 322, 324, 325, 326, 350, 355, 363, 376, 383, 384, 387, 399, 404, 405, 416, 417, 419, 421, 425, 440, 442, 444, 447, 448, 450, 451, 452, 454, 456, 457, 458, 459, 461], "base1": 423, "base2": 423, "base_data": 416, "base_kernel": [114, 115, 116], "base_nam": [376, 399, 401, 416, 417, 438, 439], "base_predictor": 288, "base_smil": 416, "basefingerprinttransform": 340, "baselin": [399, 401, 438, 442, 456], "basesequentialmetarecommend": [185, 186], "bashrc": 452, "basi": [110, 442, 447, 454], "basic": [101, 105, 106, 107, 108, 109, 110, 111, 112, 170, 171, 172, 173, 174, 175, 176, 244, 319, 321, 322, 400, 401, 402, 405, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 427, 431, 432, 433, 434, 437, 440, 444, 445, 453, 455, 456, 460, 464], "basic_transfer_learn": 439, "basickernel": [105, 106, 107, 108, 109, 110, 111, 112, 444], "batch": [31, 179, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 247, 288, 289, 405, 410, 411, 412, 413, 417, 427, 431, 432, 434, 438, 439, 444, 449, 453, 457, 460], "batch_quant": 444, "batch_shap": [101, 102, 103, 106, 108, 110, 111, 112], "batch_siz": [31, 44, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 244, 248, 250, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 417, 419, 420, 423, 425, 427, 428, 431, 432, 434, 435, 438, 439, 442, 444, 449, 450, 452, 453, 460], "batchnr": 427, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 129, 131, 133, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 296, 298, 301, 302, 304, 319, 321, 322, 363, 383, 387, 398, 399, 400, 401, 402, 403, 405, 407, 408, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 443, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465], "baybe_cach": 452, "baybe_cache_dir": [444, 452], "baybe_deactivate_polar": [444, 452], "baybe_debug_fake_hosthash": 444, "baybe_debug_fake_userhash": 444, "baybe_numpy_use_single_precis": [371, 444, 452], "baybe_telemetry_en": [442, 452], "baybe_telemetry_endpoint": [444, 452], "baybe_telemetry_host": 444, "baybe_telemetry_hostnam": [444, 452], "baybe_telemetry_usernam": [444, 452], "baybe_telemetry_vpn_check": [444, 452], "baybe_telemetry_vpn_check_timeout": [444, 452], "baybe_torch_use_single_precis": [390, 444, 452], "bayesian": [0, 189, 195, 197, 242, 244, 248, 250, 261, 280, 425, 444, 448, 450, 454, 461, 464], "bayesian_recommend": 417, "bayesianlinearmodel": 420, "bayesianlinearsurrog": [405, 461], "bayesianrecommend": [189, 197, 261, 444, 457], "bayesianridg": 419, "bcut2d": [150, 444], "bcut2dfingerprint": 150, "bcw07": 463, "becaus": [44, 83, 153, 158, 215, 221, 250, 336, 415, 416, 422, 439, 445, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 463], "becom": [215, 422, 444, 448, 450, 451, 459, 462, 465], "been": [26, 79, 80, 185, 253, 255, 257, 262, 266, 280, 282, 284, 286, 356, 400, 401, 442, 443, 444, 447, 449, 450, 455, 457, 463], "beeswarm": [94, 96, 454], "befor": [79, 187, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 332, 399, 402, 405, 411, 416, 442, 444, 445, 452, 453, 456, 458], "begin": [185, 410, 412, 430, 434, 457, 461], "behalf": 447, "behav": [417, 434, 459], "behavior": [158, 197, 442, 444, 452, 455, 457, 458, 463], "behind": [455, 459, 460, 461, 462], "being": [13, 16, 116, 347, 376, 425, 443, 444, 451, 452, 456, 458], "bell": [302, 306, 427, 462], "belong": [415, 459], "below": [187, 290, 308, 412, 415, 416, 422, 445, 447, 448, 450, 451, 455, 459, 461, 462, 463], "benchmark": [442, 444, 446], "benefici": [447, 448, 452], "benefit": [451, 463], "benzo": 463, "bernoulli": [253, 424, 440, 446], "besid": [442, 455, 462], "best": [12, 13, 14, 16, 17, 244, 246, 248, 402, 425, 442, 452, 457], "bet": 450, "beta": [8, 22, 170, 253, 405, 444, 448], "betabernoullimultiarmedbanditsurrog": [405, 425, 444], "betaprior": [253, 444], "better": [10, 347, 401, 444, 450, 451, 453, 455, 456], "between": [13, 16, 34, 53, 153, 186, 213, 221, 276, 355, 415, 417, 422, 425, 427, 428, 432, 438, 439, 442, 444, 445, 449, 450, 451, 452, 455, 456, 457, 458, 459, 462, 463], "beyond": [158, 442, 454], "bias": 456, "bin": 422, "binar": 444, "binari": [298, 397, 434, 442, 443, 444, 459], "binarytarget": [299, 425, 444], "bind": [415, 417, 447], "bit": [444, 456], "black": [242, 460, 463], "blackbox": [398, 399, 440], "blank": 445, "blob": 278, "block": [416, 422, 442, 443, 444, 452, 459], "blue": 428, "bodi": 415, "bonilla": 463, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 94, 97, 98, 121, 126, 127, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 160, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 226, 253, 255, 257, 262, 266, 280, 282, 284, 286, 298, 299, 306, 307, 308, 311, 325, 326, 330, 331, 336, 337, 350, 355, 357, 360, 363, 373, 378, 396, 425], "boolean": [13, 16, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 98, 138, 139, 140, 142, 143, 145, 152, 153, 156, 160, 182, 184, 185, 186, 187, 357, 450, 452], "boost": [284, 439], "both": [10, 13, 16, 158, 159, 215, 221, 250, 308, 332, 399, 411, 416, 419, 422, 423, 425, 427, 428, 438, 439, 442, 444, 445, 448, 451, 454, 456, 458, 459, 461, 462, 465], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 189, 197, 199, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 407, 408, 417, 432, 438, 439, 444, 452, 457], "botorch_acqf": [26, 416, 417], "botorch_function_wrapp": 444, "botorchrecommend": [189, 199, 405, 410, 411, 412, 413, 416, 417, 419, 420, 425, 427, 432, 434, 435, 436, 442, 444, 449, 450, 451, 453, 457], "bottom": 450, "bound": [8, 22, 34, 44, 152, 158, 159, 176, 213, 215, 221, 226, 289, 304, 305, 326, 332, 357, 363, 364, 399, 405, 407, 408, 417, 423, 427, 428, 430, 431, 432, 438, 439, 444, 456, 459, 462, 464, 465], "boundari": [44, 221, 306, 307, 427], "boundary_onli": [221, 422], "bounded": 444, "bounds_transform_func": 444, "box": [176, 242, 460, 463], "brain": [460, 463], "branch": [442, 445], "break": [261, 459], "brettpho": [400, 401, 402, 404, 405], "briefli": [460, 463], "bring": [442, 444], "bro": 278, "broad": 459, "broadcast": 160, "brute": [197, 457], "bu": [400, 401, 402, 404, 405], "bucket": 422, "budget": 450, "bug": [444, 445], "build": [213, 221, 261, 416, 422, 443, 444, 445, 451, 454, 459, 461, 463, 464, 465], "built": [221, 419, 442, 445, 450, 457, 461], "builtin": 322, "bump": 444, "button": 444, "butyl": [400, 401, 402, 404, 405], "butylphenylphosphin": [400, 401, 402, 404, 405], "butyornitril": [400, 401, 402, 404, 405], "bypass": [159, 416, 461], "byte": [13, 16, 127, 160, 220, 262, 306, 307, 308, 367, 373, 444, 465], "c": [56, 316, 327, 400, 401, 402, 404, 405, 410, 411, 412, 413, 420, 422, 435, 436, 442, 443, 447, 450, 453, 456, 458, 459], "c1": [400, 401, 402, 404, 405, 410, 411, 412, 413, 456], "c1c2": [400, 401, 402, 404, 405], "c1ccccc1": [400, 401, 402, 410, 412], "c1ccoc1": 451, "c2": [400, 401, 402, 404, 405, 410, 412, 413], "c2ccccc2": [400, 401, 402], "c2oc": [400, 401, 402, 404, 405], "c2p": [400, 401, 402, 404, 405], "c3": [400, 401, 402, 404, 405, 410, 412], "c3c": [400, 401, 402], "c3ccccc3": [400, 401, 402, 404, 405], "c4": [400, 401, 402, 410, 412], "c4ccccc4": [400, 401, 402, 404, 405], "c5": [410, 412], "c6": [410, 412], "c_": 428, "c_g2_min": 423, "c_g3_max": 423, "c_i": 451, "c_total_sum": 423, "cach": [312, 444, 459, 464], "cached_recommend": 312, "calcul": [31, 312, 374, 407, 417, 438, 450, 452, 456, 458], "calibr": 463, "call": [45, 89, 182, 184, 185, 186, 187, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 312, 313, 332, 350, 400, 401, 402, 415, 420, 422, 423, 435, 436, 442, 443, 444, 448, 450, 451, 452, 456, 459, 460, 461, 463, 464], "callabl": [52, 71, 88, 159, 234, 242, 244, 246, 248, 250, 288, 289, 292, 293, 322, 328, 330, 332, 350, 399, 415, 428, 444, 464], "callable_": 330, "campaign": [94, 244, 247, 248, 250, 347, 349, 351, 403, 404, 412, 414, 417, 425, 436, 438, 439, 440, 441, 442, 444, 448, 449, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465], "campaign1": 460, "campaign2": 460, "campaign_json": 450, "campaign_oh": 401, "campaign_par": 428, "campaign_rand": [400, 401, 402], "campaign_recr": 434, "campaign_stop": 416, "campaign_with_hook": 416, "campaign_y0": 428, "campaign_y1": 428, "campaignstoppedexcept": 416, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 56, 94, 139, 145, 153, 156, 160, 179, 186, 189, 190, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 242, 246, 253, 255, 257, 258, 260, 261, 262, 266, 280, 282, 284, 286, 290, 299, 311, 313, 330, 332, 336, 347, 349, 350, 370, 399, 400, 401, 402, 405, 406, 409, 410, 411, 412, 415, 416, 417, 419, 420, 422, 423, 425, 427, 428, 430, 431, 432, 435, 438, 439, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465], "canada": 446, "candid": [12, 13, 14, 16, 17, 31, 207, 209, 213, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 416, 439, 444, 448, 457, 458, 464], "candidates_comp_rep": 416, "cannot": [15, 87, 88, 158, 261, 262, 290, 337, 376, 425, 444, 447, 449, 451, 452, 456, 457, 459, 461, 463], "canon": [339, 459], "capabl": [398, 424, 426, 433, 437, 439, 444, 446, 450, 455, 461, 463], "captur": 456, "cardin": [34, 44, 51, 61, 63, 64, 65, 78, 197, 213, 442, 444, 446, 451], "cardinalityconstraint": [44, 51, 444], "care": [49, 422, 445, 451, 454, 455, 461], "carefulli": 452, "carlo": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 80, 248, 399, 401, 402, 416, 425, 438, 439, 444, 449, 460], "carri": [332, 415, 447, 455], "cartesian": [215, 221, 222, 223, 442, 444, 453, 458], "case": [158, 186, 250, 290, 332, 347, 358, 416, 421, 422, 431, 432, 435, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 456, 459, 460, 461, 462, 463, 465], "cast": [45, 444], "cat": 355, "cat_1": 427, "cat_1_22": 427, "cat_1_33": 427, "cat_2": 427, "catch_constant_target": 444, "categor": [31, 142, 143, 147, 221, 228, 356, 442, 444, 456, 458, 462], "categori": [401, 416, 442, 444, 459, 462], "categorical_1": [427, 450], "categorical_2": [427, 450], "categorical_paramet": 459, "categorical_parameter_json": 459, "categorical_parameter_reconstruct": 459, "categoricalencod": [142, 143, 410, 411, 412, 413, 427, 434], "categoricalparamet": [143, 221, 401, 410, 411, 412, 413, 420, 425, 427, 434, 435, 436, 442, 444, 453, 454, 458, 459, 464], "cattr": [233, 234, 236, 436, 443, 444, 445], "cauchi": 172, "caus": [153, 316, 322, 444, 447], "caution": 463, "cc": [400, 401, 402, 404, 405, 410, 412, 413, 422, 456, 463], "cc1": [400, 401, 402, 404, 405, 456], "ccc": [410, 412, 420, 442], "cccc": [400, 401, 402, 404, 405, 410, 412], "ccccc": [410, 412, 435, 436], "cccccc": [410, 412], "cccccccco": [451, 456], "ccccoc": [400, 401, 402, 404, 405], "cco": 422, "ccoccoccn": [435, 436], "cdot": [451, 455], "ceil": 416, "cell": [419, 456, 460, 463], "cell_lin": 463, "center": [306, 308, 363, 427, 428, 450], "center_y0": 428, "center_y1": 428, "central": [444, 450], "certain": [31, 53, 88, 187, 234, 236, 242, 313, 329, 347, 377, 411, 416, 425, 442, 445, 451, 453, 454, 457, 459, 463, 465], "cesium": [400, 401, 402, 404, 405], "ch": 377, "chai": 463, "chain": [38, 182, 184, 185, 186, 187, 322, 451], "challeng": [445, 459], "chanc": 443, "chang": [53, 185, 347, 348, 349, 405, 422, 431, 442, 443, 445, 447, 450, 452, 454, 456, 458, 463], "charact": 447, "characterist": 322, "charg": 447, "chebyshev": 12, "check": [31, 61, 138, 139, 140, 142, 143, 145, 152, 153, 156, 160, 312, 329, 331, 334, 335, 336, 337, 356, 363, 372, 431, 432, 434, 442, 444, 445, 452, 454, 458, 459], "check_maximum": 61, "check_minimum": 61, "checker": 444, "checkout": 445, "chem": [442, 444, 456], "chemic": [341, 401, 404, 422, 444, 446, 451, 454, 456, 463], "cheminformat": [156, 442, 444], "chemistri": [145, 410, 412, 413], "child": [204, 205, 206, 207, 445], "chocol": 445, "choic": [244, 246, 384, 415, 422, 425, 432, 444, 451, 453, 455, 456, 457, 458, 459, 462], "choos": [180, 422, 423, 425, 427, 430, 431, 432, 441, 442, 447, 448, 450, 457, 461, 462], "chose": [431, 459], "chosen": [76, 189, 244, 246, 250, 380, 381, 405, 425, 444, 448, 451, 456, 458], "christoph": 463, "ci": [408, 438, 439, 444, 445], "circular": 456, "circumv": [443, 459], "cl": [49, 124, 231, 235, 290, 325, 326, 331, 336, 365], "claim": 447, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 87, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 125, 126, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 219, 220, 221, 234, 236, 237, 238, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 318, 319, 321, 322, 324, 325, 326, 331, 336, 340, 361, 363, 378, 382, 383, 386, 387, 405, 415, 416, 419, 425, 435, 444, 450, 451, 454, 455, 456, 457, 458, 459, 461], "classic": [425, 455], "classifi": 456, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 322, 363, 444], "classvalidationerror": [436, 443], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 253, 255, 257, 262, 266, 280, 282, 284, 286], "clean": [352, 353, 354, 443, 444, 445], "clear": [370, 463], "click": [425, 456], "clone": 445, "close": [244, 250, 301, 399, 416, 438, 439, 460], "closer": [13, 16, 372, 456], "closest": 373, "closest_el": 444, "closur": [242, 460], "cluster": [204, 205, 206, 207, 405, 444, 446, 464], "clustering_x": 444, "cmap": 417, "cn": [400, 401, 402, 404, 405], "co": 422, "co1": [400, 401, 402], "co2": [400, 401, 402], "co3": [400, 401, 402], "coars": [420, 434, 435, 436, 442], "coc": [420, 435, 436, 442], "cococ": [435, 436], "code": [261, 401, 420, 425, 431, 435, 436, 442, 443, 444, 447, 451, 452, 456, 460, 463, 465], "coeffici": [45, 47, 48, 407, 408, 423, 451], "coerc": 444, "collect": [31, 63, 64, 65, 104, 114, 115, 135, 159, 161, 169, 185, 187, 213, 221, 227, 228, 239, 246, 260, 314, 316, 318, 329, 330, 357, 382, 384, 399, 405, 417, 422, 425, 428, 438, 439, 442, 444, 450, 452], "color": [417, 428], "column": [40, 41, 42, 94, 121, 126, 127, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 159, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 244, 246, 248, 250, 316, 317, 348, 350, 352, 353, 354, 355, 356, 357, 358, 360, 387, 396, 397, 401, 404, 410, 411, 412, 413, 416, 422, 427, 428, 434, 438, 439, 444, 450, 458, 459, 460], "column_group": 317, "com": [278, 333, 354, 442, 444], "comb": 422, "combin": [44, 54, 159, 197, 213, 215, 221, 222, 223, 322, 341, 400, 401, 402, 410, 412, 415, 416, 422, 427, 442, 443, 447, 451, 453, 454, 455, 456, 457, 458, 460, 463, 465], "combinatori": [197, 465], "combine_func": 118, "come": [13, 16, 425, 442, 450, 451, 454, 459, 463, 465], "command": 443, "comment": 444, "commerci": 447, "commit": [442, 444, 445], "common": [169, 419, 423, 444, 445, 447, 450, 451, 456, 459], "commonli": 455, "commun": [447, 455, 463], "comp_df": [139, 142, 143, 145, 153, 156, 444], "comp_rep": [221, 417, 419, 444, 458], "comp_rep_bound": [213, 215, 221, 444], "comp_rep_byt": [220, 465], "comp_rep_column": [138, 139, 140, 142, 143, 145, 152, 153, 156, 213, 215, 221, 444], "comp_rep_human_read": [220, 465], "comp_rep_shap": [220, 465], "comp_rep_tensor": [416, 417], "compar": [159, 185, 399, 422, 423, 425, 428, 438, 442, 444, 445, 451, 453, 456, 462], "comparison": [416, 428, 438, 439, 457, 459], "compat": [117, 123, 135, 159, 189, 192, 195, 197, 198, 199, 202, 204, 205, 206, 207, 209, 210, 215, 216, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 332, 357, 395, 405, 410, 411, 412, 413, 415, 417, 427, 434, 444, 457, 461], "compens": 444, "compil": [443, 447], "complain": 445, "complaint": 445, "complement": [31, 355, 453], "complementari": 44, "complet": [417, 422, 449, 451, 453, 455, 459], "complex": [13, 16, 127, 160, 306, 307, 308, 373, 422, 434, 438, 439, 445, 448, 449, 451, 453, 460, 463], "compli": 447, "complianc": 442, "complic": [422, 463], "compon": [69, 422, 423, 445, 448, 450, 451, 452, 453, 459, 461, 463], "compos": [113, 260, 444, 459], "composit": [102, 114, 115, 116, 260, 464], "composite_a": 461, "composite_b": 461, "compositekernel": [114, 115, 116, 444], "compositesurrog": [253, 255, 257, 262, 266, 280, 282, 284, 286, 444, 461], "compound": 341, "comprehens": [442, 461], "compress": 459, "comput": [13, 16, 26, 31, 84, 94, 98, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 213, 215, 220, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 290, 296, 298, 304, 342, 374, 410, 411, 412, 413, 415, 422, 423, 427, 428, 434, 444, 447, 448, 450, 452, 456, 458, 459, 460, 464, 465], "computation": 197, "compute_ref_point": [13, 16], "concat": [407, 408, 416, 417, 427, 428, 431, 432, 438, 439], "concentr": [170, 171, 400, 401, 402, 404, 405, 410, 415, 416, 451], "concentrati": 410, "concentration_valu": 416, "concept": [316, 422, 455, 456, 459], "concis": 444, "concret": [444, 459], "conda": 444, "condit": [34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 347, 355, 401, 407, 411, 412, 413, 422, 428, 442, 444, 447, 463, 464], "conduct": [31, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 400, 401, 402, 442, 445, 450, 463], "confid": [8, 22, 405], "config": [419, 420, 433, 440, 444, 464], "config_json": 31, "configur": [13, 16, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 82, 83, 179, 186, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 242, 244, 250, 253, 255, 257, 258, 260, 262, 266, 272, 280, 282, 284, 286, 347, 376, 384, 403, 404, 422, 429, 432, 436, 442, 443, 444, 447, 448, 449, 450, 451, 452, 456, 457, 458, 460, 462, 463, 464, 465], "confirm": 417, "conflict": [442, 445, 455], "conform": [156, 342, 456], "confront": [425, 442, 453], "conjunct": 461, "connect": [57, 347, 444, 452, 456, 462], "consequ": [402, 443, 451, 452, 457, 458, 460, 461], "consequenti": 447, "consid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 126, 139, 142, 143, 145, 153, 156, 158, 160, 185, 197, 215, 248, 347, 356, 357, 399, 422, 425, 427, 438, 439, 442, 444, 445, 449, 451, 453, 454, 455, 456, 459, 465], "consider": [215, 449], "consist": [180, 220, 417, 445, 447, 454], "consol": 443, "consolid": [444, 457], "consortium": 446, "conspicu": 447, "constant": [282, 290, 307, 427, 444, 445, 456, 458], "constitut": 447, "constrain": [444, 451, 462, 463], "constraint": [31, 34, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 140, 197, 213, 215, 221, 319, 419, 420, 427, 434, 435, 436, 440, 442, 444, 446, 452, 456, 464], "constraint_1": 412, "constraint_2": 412, "constraint_3": 412, "constraints_augment": 215, "constraints_cardin": 213, "constraints_lin_eq": 213, "constraints_lin_ineq": 213, "constraints_nonlin": 213, "constru": 447, "construct": [31, 213, 215, 221, 262, 292, 399, 428, 430, 438, 439, 442, 444, 448, 451, 454, 459, 461, 464], "constructor": [204, 205, 206, 207, 215, 235, 280, 284, 286, 422, 430, 435, 436, 444, 448, 450, 453, 455, 456, 461, 464, 465], "consult": 442, "consum": [185, 415], "consumpt": 452, "cont_ind": 432, "cont_indic": [431, 432], "cont_paramet": 432, "cont_recommend": [189, 432], "contact": [442, 446], "contain": [13, 16, 31, 34, 40, 41, 42, 44, 65, 68, 73, 94, 121, 126, 127, 131, 133, 135, 139, 142, 143, 145, 153, 156, 158, 159, 160, 164, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 222, 223, 227, 242, 244, 246, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 296, 298, 304, 306, 307, 308, 316, 317, 332, 342, 347, 349, 355, 356, 363, 374, 376, 378, 384, 396, 397, 401, 402, 416, 417, 423, 425, 432, 438, 439, 443, 444, 445, 447, 450, 451, 453, 454, 457, 458, 459, 460, 465], "content": [159, 185, 215, 246, 348, 385, 444, 447, 459], "context": [158, 182, 184, 185, 186, 187, 242, 258, 260, 381, 415, 425, 430, 438, 439, 444, 450, 453, 454, 456, 459, 460, 461, 463, 465], "contextu": 463, "continu": [10, 15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 73, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 189, 197, 213, 215, 216, 221, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 405, 407, 410, 411, 412, 413, 423, 427, 428, 429, 432, 434, 440, 442, 444, 450, 452, 453, 457, 459, 460, 464], "continuous_subspac": 458, "continuouscardinalityconstraint": [63, 64, 213, 444, 464], "continuousconstraint": [37, 45, 213, 444, 451, 453], "continuouslinearconstraint": [213, 407, 408, 423, 444, 464], "continuouslinearequalityconstraint": 444, "continuouslinearinequalityconstraint": 444, "continuousnonlinearconstraint": [44, 213, 444], "continuousparamet": [152, 213, 444], "contour": 428, "contract": 447, "contrast": [221, 336, 423, 425, 449, 453, 455], "contribut": [442, 444, 447, 465], "contributor": [442, 447], "contributori": 447, "control": [13, 15, 16, 21, 159, 170, 197, 213, 221, 357, 427, 431, 442, 444, 447, 448, 451, 452, 455, 456, 457, 462, 464], "convei": 459, "conveni": [444, 458, 459, 461], "convent": 215, "converg": 454, "convers": [31, 186, 419, 430, 444, 447, 454, 461, 464], "convert": [28, 122, 217, 230, 323, 333, 337, 341, 344, 345, 358, 359, 364, 367, 370, 420, 435, 436, 444, 450, 452, 459, 460], "convert_sklearn": 419, "convert_sklearn_bayesian_ridg": 419, "convertibletofloat": [13, 16, 323], "cooki": 445, "coordin": [13, 16, 384], "copi": [158, 253, 255, 257, 262, 266, 280, 282, 284, 286, 416, 442, 444, 447, 465], "copyright": [442, 447], "core": [31, 213, 215, 216, 221, 248, 250, 253, 255, 257, 258, 260, 262, 266, 273, 280, 282, 284, 286, 405, 442, 444, 453, 462], "coregion": 463, "coretest": [444, 445], "corpu": 456, "correct": [31, 293, 417, 442, 444, 445, 459], "correctli": [422, 432, 444], "correl": [145, 156, 354, 456, 463], "correspond": [26, 31, 44, 121, 126, 131, 133, 158, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 234, 242, 244, 246, 253, 255, 256, 257, 262, 266, 280, 282, 284, 286, 306, 312, 332, 335, 337, 340, 341, 347, 350, 351, 357, 358, 360, 396, 397, 399, 404, 405, 422, 425, 428, 432, 438, 439, 442, 444, 445, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463], "correspondingli": 31, "corrupt": 349, "cost": [401, 425], "costli": [215, 218, 224, 450], "could": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 153, 344, 405, 415, 416, 422, 423, 439, 444, 449, 451, 456, 460, 462, 463], "count": [313, 416, 422, 451], "counterclaim": 447, "counterpart": [332, 458], "coupl": 417, "cours": [438, 439, 445, 459, 463], "cousin": 451, "cov": [444, 445], "cover": [336, 347, 451, 453], "coverag": [444, 445], "cp": [400, 401, 402], "craft": 460, "crash": [443, 444], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 94, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 159, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 222, 223, 238, 246, 253, 255, 257, 258, 260, 262, 266, 269, 274, 280, 282, 284, 286, 296, 298, 304, 347, 350, 351, 363, 376, 378, 384, 404, 415, 416, 417, 422, 423, 428, 432, 433, 440, 441, 442, 443, 444, 445, 451, 452, 453, 454, 456, 459, 460, 461, 462, 464, 465], "create_example_plot": [399, 401, 416, 417, 438, 439], "create_from_config": [419, 420], "create_pi_plot": 417, "creation": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 159, 218, 221, 224, 411, 413, 419, 420, 458, 459, 464], "criteria": 417, "criterion": [416, 448], "critic": 444, "cross": [438, 447], "crucial": [442, 462], "cube": 451, "cuda": 443, "cultur": [456, 463], "curran": 463, "current": [10, 31, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 248, 250, 261, 311, 370, 416, 417, 422, 448, 450, 451, 452, 453, 456, 460, 462, 463, 465], "curv": [306, 417, 427, 451, 462], "custom": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 138, 139, 140, 142, 143, 145, 148, 152, 153, 156, 159, 262, 293, 296, 298, 304, 332, 358, 398, 405, 409, 416, 425, 432, 440, 442, 444, 451, 456, 457, 460, 463, 464, 465], "custom_blackbox": 399, "custom_conversion_funct": 419, "custom_filt": 451, "custom_funct": 410, "customari": 447, "customconstraint": 410, "customdiscreteparamet": [444, 454, 464], "customdisreteparamet": 444, "customencod": 145, "customonnxsurrog": [405, 419, 444], "cycl": [185, 442, 444, 453], "cyclic": 185, "d": [13, 16, 26, 56, 127, 316, 327, 374, 384, 417, 420, 435, 436, 438, 439, 442, 447, 458, 463], "d401": 410, "damag": 447, "daniel": 446, "darmstadt": [442, 446, 452], "dashboard": 444, "data": [13, 15, 16, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 72, 86, 94, 98, 126, 131, 133, 145, 153, 156, 179, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 244, 248, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 298, 304, 313, 315, 319, 347, 349, 356, 369, 370, 385, 389, 396, 397, 398, 399, 404, 405, 407, 408, 410, 411, 412, 413, 416, 420, 422, 427, 428, 431, 434, 435, 436, 438, 439, 440, 441, 442, 444, 448, 449, 450, 451, 452, 454, 456, 457, 459, 460, 461, 464, 465], "data_typ": 419, "databas": [31, 427, 442, 459], "dataclass": [415, 425], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 86, 94, 98, 121, 126, 131, 133, 139, 142, 143, 145, 153, 156, 159, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 222, 223, 226, 240, 241, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 298, 304, 312, 316, 317, 341, 342, 385, 396, 397, 399, 400, 404, 405, 410, 411, 412, 413, 416, 417, 419, 420, 422, 423, 427, 428, 431, 434, 438, 439, 444, 449, 450, 451, 453, 456, 464, 465], "datapoint": 444, "dataset": [185, 242, 460], "datatyp": 444, "date": 447, "dditiv": 454, "de": [233, 433, 442, 443, 444, 445, 450, 451, 457, 464], "deactiv": [442, 444, 452], "deal": [402, 449, 456, 460], "debug": 444, "decid": [153, 422, 425, 432, 448], "declar": [53, 57, 65, 207, 411, 445, 451], "decod": 419, "decor": [116, 290, 322, 350, 415, 444, 445, 460], "decorrel": [145, 156, 163, 435, 436, 456], "decreas": [185, 307, 427, 459, 463], "deduc": [407, 408, 431], "dedupl": 444, "deep": 416, "deepcopi": 444, "deeper": 454, "deepli": 461, "def": [399, 410, 415, 416, 417, 422, 425, 428, 438, 445, 451, 460], "default": [13, 16, 42, 94, 126, 145, 156, 159, 189, 195, 197, 204, 205, 206, 207, 213, 215, 221, 233, 253, 273, 276, 355, 399, 400, 402, 405, 420, 427, 432, 442, 444, 445, 450, 451, 452, 454, 455, 456, 464], "default_campaign": 399, "default_model": 262, "defaultkernelfactori": [405, 410, 411, 412, 413, 427, 434], "defaultscal": 444, "defend": 447, "defin": [26, 31, 41, 44, 45, 52, 148, 158, 179, 185, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 221, 242, 266, 268, 269, 293, 349, 354, 355, 387, 400, 401, 402, 404, 410, 411, 412, 413, 419, 420, 425, 430, 444, 445, 447, 450, 451, 453, 456, 459, 460, 462], "definit": [213, 221, 336, 423, 428, 442, 444, 447, 455, 458], "degener": [348, 363, 444], "degr": 434, "degre": 459, "degree_c": [419, 420, 434], "deliber": 447, "delici": 445, "deliveri": 456, "demand": [31, 439], "demo": 444, "demonstr": [398, 399, 400, 403, 406, 409, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 429, 433, 434, 437, 438, 439, 444, 455, 458, 459, 463], "denot": 26, "densiti": 417, "depend": [53, 57, 85, 118, 215, 221, 242, 307, 316, 401, 405, 409, 422, 423, 430, 440, 441, 443, 444, 445, 451, 452, 453, 454, 458, 460, 461, 462, 463, 465], "dependenciesconstraint": 444, "deprec": [67, 150, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 221, 226, 263, 322, 410, 412, 413], "deprecationwarn": [410, 412, 413, 416], "depth": 458, "deriv": [204, 205, 206, 207, 221, 336, 447, 451, 458], "descend": 307, "describ": [204, 205, 206, 207, 253, 255, 257, 262, 266, 280, 282, 284, 286, 405, 410, 415, 416, 423, 425, 427, 428, 445, 447, 449, 450, 451, 455, 456, 459, 460], "descript": 445, "descriptor": [156, 342, 444, 454, 456, 463], "deseri": [231, 235, 240, 434, 443, 444, 450, 464], "deserialize_datafram": 459, "design": [0, 21, 26, 244, 350, 415, 419, 422, 425, 447, 448, 451, 453, 454, 455, 457, 459], "desir": [118, 126, 129, 351, 426, 427, 440, 442, 444, 448, 452, 454, 455, 457, 459, 462, 465], "desirabilityobject": [31, 427, 442, 444, 450, 459, 461, 464], "desktop": 444, "despit": 444, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 166, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 244, 248, 253, 255, 257, 258, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 296, 298, 304, 309, 310, 355, 360, 363, 387, 400, 402, 407, 408, 427, 432, 441, 442, 443, 444, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 463], "detect": [319, 356, 443, 445], "determin": [13, 16, 31, 44, 94, 124, 187, 221, 336, 355, 367, 372, 384, 400, 422, 425, 444, 447, 452, 457], "determinist": 384, "detriment": 456, "dev": [442, 444, 445], "develop": [442, 444, 449, 456, 460], "deviat": [6, 18, 290, 356, 419, 444, 450], "df": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 121, 126, 131, 133, 159, 213, 215, 221, 226, 241, 246, 316, 317, 341, 348, 352, 353, 354, 355, 357, 358, 360, 385, 399, 410, 425, 442, 451, 458, 459, 460], "df_y": 428, "dfa": [316, 317], "di": [400, 401, 402, 404, 405, 446], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 124, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 204, 205, 206, 207, 213, 215, 218, 221, 224, 234, 235, 236, 238, 248, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 310, 327, 330, 342, 347, 363, 387, 416, 419, 438, 439, 444], "dict_bas": [400, 401, 402, 404, 405], "dict_ligand": [400, 401, 402, 404, 405], "dict_solv": [400, 401, 402, 404, 405, 410, 411, 412, 413, 422, 451], "dictat": [121, 126, 131, 133, 197, 215, 438, 439], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 234, 236, 238, 248, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 290, 296, 298, 304, 327, 330, 347, 363, 400, 401, 402, 404, 456, 460], "diff": 445, "differ": [13, 16, 55, 126, 197, 213, 215, 216, 221, 242, 250, 312, 317, 347, 349, 387, 401, 410, 415, 422, 425, 427, 428, 431, 432, 438, 439, 442, 444, 445, 447, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463], "differenti": [460, 463], "difficult": 463, "digit": 358, "dilemma": 425, "dim": [26, 407, 408, 417, 419, 431, 432, 438, 439], "dimens": [26, 384, 399, 407, 408, 417, 419, 430, 431, 438, 439, 444, 456, 458, 461, 463], "dimension": [13, 16, 127, 138, 139, 140, 142, 143, 145, 152, 153, 156, 276, 350, 384, 399, 438, 439, 444], "dimethylisoxazol": 463, "direct": [13, 16, 400, 401, 402, 404, 442, 444, 447, 453, 456, 465], "directli": [13, 16, 336, 439, 442, 444, 451, 455, 459, 461], "directori": [376, 432, 444], "disabl": [253, 255, 257, 262, 266, 280, 282, 284, 286, 311, 410, 412, 413, 444, 450, 453], "disadvantag": 459, "disappear": 444, "disc_ind": 432, "disc_indic": [431, 432], "disc_paramet": 432, "disc_recommend": [189, 432], "discard": [8, 422], "disclaim": 447, "discourag": 450, "discret": [15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 73, 138, 139, 140, 142, 143, 145, 152, 153, 156, 189, 197, 204, 205, 206, 207, 209, 213, 215, 216, 220, 221, 250, 383, 404, 407, 413, 416, 417, 419, 427, 429, 432, 434, 439, 440, 442, 444, 448, 453, 454, 457, 459, 460, 464, 465], "discrete_param": [417, 438, 439], "discrete_spac": [407, 408, 432], "discrete_subspac": 458, "discretecardinalityconstraint": [444, 464], "discreteconstraint": [31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 221, 444, 451, 453], "discretecust": 410, "discretecustomconstraint": [410, 444, 464], "discretedep": 411, "discretedependenciesconstraint": [57, 65, 411, 422, 464], "discreteexcl": 412, "discreteexcludeconstraint": [412, 444, 453, 464], "discretelinkedparametersconstraint": [444, 464], "discretenolabelduplicatesconstraint": [57, 422, 444, 464], "discreteparamet": [153, 221, 222, 223, 444], "discretepermutationinvarianceconstraint": [422, 464], "discreteprod": 413, "discreteproductconstraint": [413, 444, 464], "discretesamplingmethod": [15, 197, 385, 444, 448], "discretesumc": 413, "discretesumconstraint": [407, 413, 422, 444, 464], "discuss": [427, 447, 451, 458, 460], "disjoint": 221, "disk": [444, 464], "dispatch": 117, "displai": [358, 416, 447], "distanc": [153, 384], "distinct": [415, 450, 457], "distinguish": [348, 422, 444, 451, 456, 463], "distribut": [31, 166, 169, 253, 255, 257, 262, 266, 280, 282, 284, 286, 422, 427, 432, 442, 444, 447, 448, 449, 461], "distutil": 337, "div": 419, "divers": 461, "divid": 423, "divis": 374, "dll": 443, "dmac": [400, 401, 402, 404, 405], "dmf": 451, "do": [63, 215, 221, 261, 415, 419, 420, 422, 425, 432, 434, 435, 436, 438, 441, 442, 443, 447, 449, 451, 452, 453, 454, 456, 457, 459, 463, 464, 465], "do_baybe_work": 452, "doc": [99, 166, 322, 410, 412, 413, 442, 444], "doc101": 445, "doc103": 445, "docstr": 444, "doctest": 444, "document": [31, 370, 419, 442, 444, 445, 446, 447, 450, 454, 460], "doe": [30, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 94, 158, 197, 242, 244, 246, 248, 253, 255, 257, 261, 262, 266, 280, 282, 284, 286, 293, 332, 341, 356, 370, 402, 405, 416, 419, 420, 422, 435, 436, 438, 439, 444, 445, 447, 451, 455, 457, 460, 461, 463, 465], "doi": [278, 354], "domain": [253, 255, 257, 262, 266, 280, 282, 284, 286, 399, 442, 444, 458, 460], "don": [441, 453], "done": [31, 355, 356, 402, 404, 410, 411, 412, 413, 419, 420, 427, 434, 444, 448, 450, 451, 452, 453], "doubl": [370, 445, 452], "down": [459, 465], "downsid": 186, "draft": 444, "dramat": 463, "drastic": 456, "draw": [10, 111, 213, 423, 425, 430], "draw_arm": 425, "drawback": 455, "drawn": [21, 197], "drive": [417, 463], "driven": [347, 448], "driver": 443, "drop": [352, 353, 354, 416, 444, 451], "dry_run": 31, "dtype": [13, 16, 127, 160, 306, 307, 308, 373], "due": [158, 313, 439, 442, 444, 448, 451, 452, 456, 457, 458, 459, 462], "duplic": [57, 165, 319, 327, 444, 451], "dure": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 215, 221, 242, 330, 384, 422, 425, 438, 439, 442, 443, 444, 445, 446, 450, 451, 452, 453, 454, 458, 459, 460, 461], "dynam": [425, 444, 459, 464], "d\u00fcbendorf": 446, "e": [8, 21, 26, 31, 34, 44, 53, 55, 56, 73, 94, 97, 145, 159, 160, 187, 215, 221, 242, 313, 319, 325, 326, 342, 347, 355, 356, 363, 392, 400, 401, 402, 420, 422, 423, 425, 442, 443, 444, 445, 448, 449, 451, 452, 454, 456, 457, 458, 459, 460, 463, 465], "e3fp": 150, "e3fpfingerprint": 150, "each": [13, 16, 21, 31, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 121, 126, 131, 133, 159, 179, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 215, 244, 246, 248, 250, 253, 255, 257, 261, 262, 266, 280, 282, 284, 286, 317, 342, 347, 348, 356, 376, 399, 401, 402, 405, 417, 422, 423, 425, 427, 428, 432, 438, 439, 445, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465], "eagerli": 444, "earli": [416, 444], "earlier": [31, 441, 443], "earn": 425, "earned_reward": 425, "easi": [341, 445, 459], "easier": [445, 465], "easiest": [442, 445], "easili": [416, 442, 445, 450, 453, 456, 458, 459, 463], "ecfp": [150, 401, 444, 456], "ecfpfingerprint": 150, "ecosystem": 459, "edbo": [276, 278, 354, 444], "edbokernelfactori": [276, 444], "edg": 158, "edit": [442, 445], "editor": 463, "editori": 447, "edwin": 463, "effect": [55, 182, 184, 185, 186, 187, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 415, 416, 425, 439, 444, 448, 451, 456, 457, 460, 463, 465], "effici": [221, 422, 442, 444, 458], "effortlessli": 460, "ei": [3, 405], "either": [26, 31, 216, 244, 250, 266, 290, 356, 401, 412, 427, 432, 442, 447, 455, 456, 457, 458, 460, 461], "elabor": 447, "elaps": 415, "elapsedtimeprint": 415, "electron": [446, 447], "electroshap": 150, "electroshapefingerprint": 150, "eleg": [438, 459], "element": [40, 41, 42, 52, 160, 250, 319, 329, 335, 372, 373, 378, 422, 438, 439, 444, 451, 460], "elev": 417, "elif": [431, 432], "elimin": [445, 448], "els": [336, 337, 399, 400, 401, 402, 407, 408, 410, 411, 413, 416, 417, 425, 428, 431, 432, 438, 439], "elsewher": 419, "emd": 446, "emdgroup": [309, 442], "emelin": 446, "emerg": 450, "empir": 425, "emploi": [31, 425, 457], "employe": [442, 452], "empow": 461, "empti": [98, 213, 215, 221, 228, 317, 332, 341, 355, 358, 396, 397, 422, 427, 432, 434, 444, 458], "empty_encod": [215, 221], "emptysearchspaceerror": 228, "emul": [21, 443, 444], "en": [99, 166], "enabl": [186, 311, 312, 400, 401, 402, 422, 438, 442, 443, 444, 450, 451, 452, 453, 454, 455, 457, 459, 460, 462, 463], "encod": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 152, 153, 156, 215, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 340, 342, 400, 401, 402, 404, 405, 410, 411, 412, 413, 416, 420, 422, 425, 427, 434, 435, 436, 438, 439, 442, 444, 451, 458, 459, 463], "encompass": 450, "encount": [158, 182, 184, 185, 186, 187, 384, 443, 444, 445, 455], "end": [0, 308, 363, 416, 420, 425, 427, 434, 447, 451, 459], "endeavor": 448, "endpoint": [444, 452], "enforc": [371, 390, 444, 445, 456], "engin": [443, 457, 459, 460, 465], "enhanc": [26, 442], "enlarg": 456, "enough": [213, 459], "ensembl": 288, "ensur": [158, 159, 400, 401, 402, 422, 423, 442, 451, 459, 460], "enter": [77, 221, 458], "entir": [312, 363, 385, 444, 445, 448, 452, 465], "entiti": 447, "entri": [38, 41, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 236, 253, 255, 257, 262, 266, 280, 282, 284, 286, 317, 347, 356, 385, 402, 410, 411, 412, 413, 422, 441, 444, 451, 452, 453, 454, 462, 465], "enum": [129, 147, 148, 149, 150, 216, 273, 301, 302, 321, 383, 444, 459], "enumer": [128, 146, 300, 417, 438, 439, 455], "env": [444, 445], "envar_nam": 452, "environ": [311, 371, 390, 399, 400, 401, 402, 408, 410, 411, 413, 416, 417, 419, 425, 428, 438, 439, 442, 443, 444, 445, 464], "envvar": 309, "envvar_nam": 452, "eq": [410, 422], "equal": [45, 126, 187, 213, 425, 427, 434, 444, 451, 455, 458, 459, 462], "equat": [45, 451, 460], "equidist": 456, "equip": 451, "equival": [21, 34, 57, 408, 430, 448, 451, 460], "erg": 150, "ergfingerprint": 150, "erron": 444, "error": [185, 195, 197, 244, 246, 248, 263, 330, 374, 402, 420, 425, 443, 444, 451, 455, 457], "esian": 442, "especi": 445, "essenti": [450, 457], "establish": [416, 438, 439, 463], "estat": 150, "estatefingerprint": 150, "ester": [400, 401, 402, 404, 405], "estim": [215, 220, 221, 253, 425, 444, 461, 464], "estimate_product_space_s": [215, 221, 465], "estimated_win_r": 425, "estimation_bia": 425, "estimation_vari": 425, "et": [401, 442, 456], "etc": [40, 41, 42, 140, 215, 296, 463], "ethanol": [422, 451], "euclidean": 384, "eval_during_augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_cr": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_model": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "evalu": [26, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 288, 289, 337, 431, 432, 444, 450, 452, 457, 460, 463], "even": [187, 290, 353, 438, 439, 447, 449, 450, 452, 456, 460, 461, 463, 465], "event": [31, 312, 416, 447], "everi": [449, 465], "everyth": [445, 451], "evolv": [417, 445], "ex": 454, "exabyt": 465, "exact": [31, 356, 415, 443, 444, 451, 455, 456, 461], "exactexplain": [92, 95, 454], "exactli": [13, 16, 44, 121, 126, 131, 133, 215, 422, 444, 449, 450, 458, 459], "exampl": [13, 16, 158, 159, 246, 316, 317, 327, 336, 355, 398, 399, 403, 406, 409, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 437, 438, 439, 443, 444, 445, 446, 447, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465], "example_input_nam": 419, "exceed": 416, "exceedingli": 460, "except": [31, 332, 341, 345, 361, 362, 400, 401, 402, 416, 420, 435, 436, 442, 443, 444, 447, 453, 461], "excepthook": 443, "exceptiongroup": [63, 444], "excess": 465, "exclud": [31, 56, 352, 410, 411, 412, 413, 427, 434, 444, 447, 451, 464], "exclude_list": 354, "exclus": [54, 409, 440, 444, 447, 451, 460, 464], "execut": [31, 67, 244, 332, 399, 401, 443, 444, 445, 447, 452, 459, 460, 463], "exemplari": 450, "exercis": 447, "exhaust": [185, 197, 454, 457], "exist": [31, 116, 215, 312, 322, 332, 422, 443, 444, 445, 448, 450, 451, 453, 459, 461, 463], "exp_rep": [221, 410, 411, 412, 413, 422, 458], "exp_rep_byt": [220, 465], "exp_rep_human_read": [220, 465], "exp_rep_shap": [220, 465], "expect": [3, 4, 9, 11, 13, 14, 16, 17, 52, 258, 260, 268, 332, 350, 405, 411, 417, 419, 422, 423, 425, 436, 444, 445, 450, 451, 454, 455, 456, 459, 460, 462, 465], "expens": [10, 197, 407, 460], "experi": [0, 31, 179, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 400, 401, 402, 404, 405, 431, 432, 444, 448, 450, 451, 453, 455, 456, 457, 462, 463, 464], "experiment": [31, 98, 121, 126, 131, 133, 139, 142, 143, 145, 153, 156, 179, 182, 183, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 215, 220, 221, 242, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 296, 298, 304, 347, 349, 410, 411, 412, 413, 417, 427, 434, 442, 444, 448, 449, 451, 453, 455, 456, 458, 459, 460, 462, 463, 464, 465], "experimentalist": 441, "explain": [72, 93, 94, 95, 97, 98, 417, 444, 446, 461, 464], "explainer_cl": [94, 98, 454], "explan": [94, 98, 444, 450, 461], "explanation_index": [94, 454], "explicit": [159, 186, 415, 416, 420, 422, 430, 435, 436, 444, 445, 455, 459, 461, 463, 464], "explicitli": [213, 221, 415, 432, 439, 447, 453, 458, 463], "exploit": [8, 21, 425, 444], "explor": [8, 31, 425, 448, 457, 458, 463], "exploratori": 448, "exponenti": 221, "expos": [31, 415, 444], "exposur": 444, "expr": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "express": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 442, 444, 447, 451], "extend": [158, 453, 456, 463], "extens": [444, 457], "extra": [401, 443, 444], "extract": [31, 182, 184, 185, 186, 187, 357, 417, 438, 454, 464], "extract_pi": 417, "f": [337, 399, 400, 401, 402, 407, 408, 410, 411, 412, 413, 415, 416, 417, 422, 423, 427, 430, 431, 432, 438, 439, 465], "f1": 460, "f2": 460, "fabian": 446, "face": [253, 255, 257, 262, 266, 280, 282, 284, 286, 423, 425], "facilit": 457, "fact": [21, 417, 422, 441, 451, 455], "factor": [13, 16, 159, 442, 450, 451, 465], "factori": [159, 213, 266, 267, 268, 269, 270, 276, 278, 328, 405, 410, 411, 412, 413, 427, 434, 444], "fail": [432, 436, 443, 444, 461], "failur": [298, 447], "failure_valu": 298, "fairli": 455, "fake": [246, 347, 351, 404, 405, 419, 420, 427, 444, 449, 460, 464], "fall": [158, 187, 416, 450, 462], "fallback": [124, 221, 365, 376, 419, 444, 458], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 94, 98, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 184, 185, 186, 187, 213, 215, 221, 226, 253, 255, 257, 262, 266, 280, 282, 284, 286, 298, 307, 325, 326, 330, 336, 337, 350, 355, 357, 360, 378, 396, 405, 410, 411, 412, 413, 427, 434, 435, 436, 442, 444, 452], "famili": 451, "familiar": [400, 401, 402, 405, 407, 408, 410, 411, 412, 413, 419, 420, 427, 431, 432, 434], "fang": 446, "fantasi": 10, "far": 450, "farthest": [209, 383, 384, 405, 442, 444, 446, 448, 457], "farthest_point_sampl": 444, "fashion": [306, 308], "fast": [410, 412, 413, 458, 462], "faster": 221, "fault": 89, "faulti": 443, "favicon": 444, "favor": 444, "fc": [400, 401, 402], "feasibl": [75, 450, 454], "featur": [94, 111, 156, 354, 442, 443, 445, 451, 454, 461, 463], "fed": [442, 454], "feder": 446, "fee": 447, "feed": [428, 441, 442, 453, 463], "feedback": 446, "feel": 416, "few": [399, 425, 444, 445, 448, 456, 459, 461, 463, 465], "field": [235, 345, 378, 444, 463, 464], "fifti": 447, "fig": [417, 428], "figsiz": 428, "figur": [376, 417], "file": [376, 400, 401, 402, 419, 420, 432, 442, 444, 447, 452, 459, 463], "filenotfounderror": [400, 401, 402, 416], "fill": [31, 246, 417], "filler": 451, "filter": [31, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 215, 221, 352, 355, 410, 422, 444, 451, 453, 458, 463, 465], "filter_attribut": 444, "filter_df": [31, 444], "filterwarn": 416, "final": [399, 401, 404, 416, 422, 439], "find": [215, 330, 373, 376, 442, 448, 450, 451, 455, 463], "fine": [420, 434, 435, 436, 442], "finer": [159, 442], "fingerprint": [150, 156, 340, 342, 442, 444, 446, 456], "finish": 449, "finit": [185, 242, 250, 362, 392, 425, 456, 460], "first": [215, 248, 372, 384, 399, 401, 404, 405, 410, 415, 416, 419, 420, 422, 427, 428, 432, 436, 438, 439, 442, 443, 444, 450, 451, 455, 456, 457, 458, 463, 465], "fit": [31, 207, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 385, 387, 400, 401, 402, 410, 411, 412, 413, 419, 427, 434, 444, 447, 451, 456, 461], "fit_gpytorch_ml": 444, "fit_gpytorch_mll_torch": 444, "fitnr": 427, "fitzner": [442, 446], "fix": [242, 269, 416, 417, 422, 425, 428, 431, 432, 445, 450, 456, 460, 463, 465], "flag": [26, 31, 53, 94, 98, 121, 126, 131, 133, 197, 215, 216, 221, 350, 357, 441, 444, 450, 452, 453, 454, 457], "flake8": 444, "flexibl": [415, 430, 444, 459, 460], "flexibli": [455, 457], "float": [8, 13, 15, 16, 22, 31, 42, 44, 45, 47, 48, 105, 106, 107, 108, 109, 110, 111, 112, 116, 118, 126, 127, 145, 152, 153, 156, 160, 163, 164, 170, 171, 172, 173, 174, 175, 176, 197, 220, 221, 244, 248, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 290, 298, 299, 306, 307, 308, 313, 323, 344, 347, 348, 349, 354, 363, 367, 369, 370, 372, 373, 374, 389, 392, 393, 394, 415, 417, 419, 425, 427, 444, 445, 450, 464], "float64": 389, "floattensortyp": 419, "fly": [186, 459, 461], "fn": 322, "focu": 450, "focus": [133, 428, 432, 442], "folder": [401, 442, 445, 452, 461], "follow": [160, 182, 184, 185, 186, 187, 215, 244, 246, 248, 400, 401, 402, 405, 407, 408, 410, 411, 412, 413, 415, 416, 420, 425, 427, 432, 435, 436, 438, 439, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463], "footprint": [10, 215], "forbid": 395, "forc": [94, 96, 158, 197, 444, 445, 454, 457], "forest": [285, 286], "forgiv": 462, "fork": 445, "form": [221, 242, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 347, 441, 442, 447, 448, 450, 455, 456, 457, 458, 459, 460, 465], "formal": [423, 441], "format": [45, 310, 358, 364, 367, 419, 420, 434, 435, 442, 443, 444, 445, 450, 452, 459, 460], "format_except": 443, "former": [422, 444], "formul": 463, "formula": 422, "forrest": 444, "found": [87, 159, 213, 221, 330, 340, 370, 373, 376, 416, 422, 427, 442, 443, 445, 450, 451, 457, 463], "foundat": 457, "four": 422, "fourier": 111, "fourth": 451, "fp": [383, 444, 448], "fp_size": [150, 456], "fpsrecommend": [405, 419, 420, 434, 435, 436, 442, 449, 457], "frac": [439, 455], "frac1": 411, "fraction": [15, 106, 344, 416, 448, 451, 452], "fraction1": 411, "fraction_1": 451, "fraction_2": 451, "fraction_3": 451, "fractur": 451, "frame": [349, 454, 465], "frame1": 411, "frame2": 411, "frame_1": 451, "frame_2": 451, "framea": 411, "framea_a": 411, "frameb": 411, "framework": [450, 456], "free": [445, 447, 452], "freedom": 459, "freeli": 422, "frequenc": 111, "frequent": 425, "fresh": 416, "frictionless": 459, "friendli": 444, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 150, 152, 153, 156, 158, 159, 166, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 238, 246, 248, 250, 253, 255, 257, 260, 262, 266, 269, 274, 278, 280, 282, 284, 286, 290, 296, 298, 304, 307, 308, 332, 336, 337, 341, 349, 350, 352, 354, 363, 374, 376, 385, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 423, 425, 427, 428, 430, 431, 432, 433, 434, 436, 438, 439, 440, 441, 443, 445, 447, 448, 449, 451, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465], "from_bound": [213, 444, 458], "from_campaign": [94, 454], "from_config": [31, 435, 436, 450], "from_datafram": [213, 215, 221, 444, 453, 458, 459, 465], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 363, 419], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 363, 419, 420, 434, 450, 459], "from_paramet": [213, 215, 221, 444], "from_preset": 266, "from_product": [213, 215, 221, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 423, 427, 428, 430, 431, 432, 434, 435, 436, 438, 439, 442, 444, 451, 453, 458, 459, 460], "from_recommend": [94, 454], "from_record": [459, 460], "from_repl": [260, 461], "from_simplex": [221, 422, 444, 453, 458, 465], "from_surrog": [94, 454], "front": 455, "frontier": 428, "frozenset": [44, 213, 422], "fsspec": 444, "fulfil": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 416, 422, 423], "full": [26, 213, 370, 398, 440, 444, 450, 453, 454, 456, 463, 464], "full_factori": 213, "full_lik": 417, "full_lookup": [400, 401, 402], "fulli": [422, 442, 444, 452, 453, 460], "fulltest": 445, "func": 445, "func_nam": 438, "funci": 444, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 39, 45, 46, 52, 60, 62, 70, 80, 89, 91, 94, 110, 117, 120, 123, 125, 130, 132, 134, 157, 158, 162, 195, 197, 198, 214, 219, 225, 229, 230, 238, 239, 242, 243, 245, 247, 248, 249, 254, 261, 267, 272, 287, 291, 292, 295, 302, 305, 306, 307, 308, 309, 312, 313, 315, 318, 334, 338, 343, 346, 349, 351, 356, 357, 358, 361, 366, 368, 375, 376, 379, 382, 391, 404, 410, 411, 412, 413, 415, 417, 422, 425, 428, 434, 438, 439, 442, 443, 444, 448, 450, 451, 453, 455, 457, 458, 460, 461, 462, 463, 465], "function_nam": [438, 439], "functionalgroup": 150, "functionalgroupsfingerprint": 150, "fundament": [456, 459], "furo": 444, "further": [13, 16, 356, 422, 423, 434, 442, 449, 453, 457, 458, 461, 463, 464], "furthermor": 427, "furyl": [400, 401, 402], "futur": [57, 215, 261, 410, 412, 413, 416, 438, 454, 462], "fuzzi": 312, "fuzzy_row_match": [312, 444], "g": [53, 55, 56, 73, 94, 97, 145, 159, 215, 221, 319, 342, 356, 425, 442, 443, 444, 445, 448, 449, 451, 452, 454, 456, 457, 458, 460, 465], "g1": 423, "g2": 423, "g3": 423, "gain": [221, 450, 454], "gamma": 171, "gammaprior": 444, "garbag": 444, "gather": [187, 438, 439, 448, 463], "gaussian": [99, 204, 255, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 306, 405, 427, 444, 451, 457, 463], "gaussian_kd": 417, "gaussian_process": [101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 266, 268, 269, 273, 276, 278, 405, 444], "gaussianmixtureclusteringrecommend": 457, "gaussianprocesspreset": [266, 274], "gaussianprocesssurrog": [274, 405, 410, 411, 412, 413, 417, 427, 434, 435, 436, 444, 461], "gcf": [400, 402], "ge": 408, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 149, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 253, 255, 257, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 296, 298, 304, 310, 336, 342, 348, 363, 379, 387, 399, 405, 415, 422, 428, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 459, 460, 461, 462, 463, 464, 465], "geom_mean": [118, 126, 129, 427, 455], "geometr": [129, 374, 427, 455], "germani": [442, 446, 452], "get": [31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 195, 197, 213, 266, 347, 405, 416, 422, 431, 432, 441, 442, 444, 449, 464, 465], "get_absolute_threshold": [44, 444], "get_candid": [221, 416], "get_cmap": 417, "get_comp_rep_parameter_indic": [215, 444], "get_current_recommend": [182, 184, 185, 186, 187, 444], "get_integration_point": 15, "get_invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_invalid_polar": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_lin": 416, "get_next_recommend": [182, 184, 185, 186, 187, 444], "get_non_meta_recommend": [182, 184, 185, 186, 187, 444], "get_parameters_by_nam": [213, 215, 221], "get_parameters_from_datafram": [213, 221], "get_subclass": 405, "get_surrog": [31, 94, 195, 197, 444, 454, 461], "get_transform_object": [360, 444], "get_transform_paramet": 444, "get_valid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 444], "getawai": 150, "getawayfingerprint": 150, "ghosecrippen": 150, "ghosecrippenfingerprint": 150, "git": [442, 445], "github": [278, 309, 333, 354, 419, 444, 445, 446], "give": [419, 420, 422, 439, 447, 450, 451, 455, 459], "given": [13, 16, 29, 31, 34, 40, 41, 42, 44, 65, 87, 94, 97, 98, 121, 126, 131, 133, 135, 156, 158, 159, 160, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 227, 242, 246, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 290, 301, 313, 317, 325, 326, 330, 331, 332, 335, 336, 339, 340, 344, 347, 350, 357, 363, 364, 372, 374, 377, 378, 384, 387, 410, 411, 412, 413, 416, 422, 425, 427, 432, 438, 439, 444, 450, 458, 460, 461], "glass_transition_tempc": 456, "global": [15, 380, 444, 464, 465], "gmean": 374, "gmm": 204, "go": [316, 422, 442], "goal": [399, 425, 455, 463], "goe": 461, "good": [347, 416, 427, 450, 452, 462], "good_interv": 347, "good_reference_valu": 347, "goodwil": 447, "googl": [444, 445], "govern": 442, "gp": [253, 255, 257, 262, 266, 280, 282, 284, 286, 444], "gpytorch": [99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 166, 168, 170, 171, 172, 173, 174, 175, 176, 444], "grab": 441, "gradient": [10, 197, 284, 444, 452, 457], "grant": [444, 447], "granular": [420, 434, 435, 436, 442], "granularity_coar": 434, "granularity_fin": 434, "great": [425, 459], "greater": [187, 197], "greatli": 445, "greedi": [197, 444, 457], "grid": [428, 438, 439], "grid_d": [438, 439], "grossli": 447, "ground": 444, "group": [197, 317, 327, 387, 423, 442, 444, 450, 454], "groupbi": [248, 250], "grow": 465, "gt": [413, 422], "gu16": 456, "guarante": [444, 451, 452, 457], "guid": [404, 442, 443, 444, 445, 448, 450, 453, 455, 458, 460, 463], "guidelin": [444, 445, 448], "ha": [53, 75, 79, 80, 94, 185, 213, 215, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 316, 330, 332, 336, 348, 384, 385, 401, 405, 410, 411, 412, 413, 422, 427, 432, 434, 442, 444, 445, 447, 449, 450, 451, 454, 456, 458, 459, 460, 462, 463], "had": [242, 451, 456, 460], "half": [153, 172, 173, 363, 432, 449], "halfcauchyprior": 444, "halfnormalprior": 444, "hamster": 463, "hand": [45, 156, 423, 425, 428, 438, 439, 442, 450, 459, 461], "handi": 451, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 94, 131, 140, 244, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 361, 410, 411, 425, 427, 444, 450, 455, 465], "happen": [86, 185, 427, 432, 439, 443, 444, 445, 458, 459, 463], "happili": 455, "hard": [444, 463, 465], "harmless": 447, "hartmann": [417, 438, 439], "hasattr": [407, 408, 431, 432], "hash": [310, 442, 452, 456], "hashabledict": 444, "have": [26, 31, 38, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 121, 126, 131, 133, 156, 158, 207, 215, 242, 261, 293, 317, 327, 330, 347, 356, 357, 370, 400, 401, 404, 405, 410, 411, 415, 417, 422, 423, 425, 427, 431, 432, 438, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 455, 456, 457, 459, 460, 461, 463, 465], "head": 444, "header": 378, "heart": 463, "heatmap": [94, 96], "help": [425, 459, 460, 463], "helper": [415, 417, 419, 422, 459], "henc": [341, 422, 425, 434, 451, 456, 465], "here": [56, 370, 400, 402, 404, 407, 408, 415, 416, 420, 422, 423, 431, 432, 434, 438, 439, 441, 442, 443, 449, 451, 453, 455, 456, 457, 458, 459, 460, 462, 463], "herebi": 447, "herein": [447, 450], "heurist": 197, "hierarch": 459, "hierarchi": [87, 444, 445, 450, 459], "high": [276, 399, 425, 444, 445, 448, 450, 451, 456, 459], "higher": [156, 425, 443, 451, 454, 457], "highest": [448, 459], "highlight": 463, "hint": 445, "histogram": 313, "histor": 456, "histori": 445, "hoc": 455, "hold": [44, 327, 447, 459], "home": [410, 412, 413], "homepag": [442, 444], "hood": 456, "hook": [49, 124, 221, 230, 234, 332, 440, 443, 444, 445], "hopp": [442, 446], "host": [442, 444, 452], "hostnam": [310, 452], "hot": [147, 401, 425, 442, 444, 456], "how": [54, 244, 246, 356, 384, 399, 400, 402, 403, 404, 405, 406, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 432, 434, 435, 436, 439, 442, 450, 451, 452, 455, 460, 461, 462, 463], "howev": [159, 221, 261, 332, 415, 422, 425, 431, 432, 441, 443, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 461, 463, 465], "hrovatin": 446, "html": [99, 166, 309, 322, 370, 419, 444], "http": [99, 166, 278, 309, 322, 333, 354, 370, 442, 444, 447, 463], "hue": [399, 400, 401, 402, 416, 438, 439], "human": [220, 367, 434, 444, 446, 459], "hybrid": [25, 26, 73, 188, 189, 197, 210, 215, 216, 405, 406, 410, 411, 412, 413, 427, 429, 434, 440, 442, 444, 457, 458], "hybrid_recommend": 432, "hybrid_sampl": [197, 457], "hyperrectangl": [213, 458], "hypervolum": [13, 16], "hypothesi": [442, 444, 445], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 72, 73, 77, 79, 80, 81, 83, 94, 97, 98, 113, 116, 127, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 160, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 228, 242, 244, 246, 248, 250, 253, 255, 257, 258, 260, 261, 262, 266, 276, 280, 282, 284, 286, 290, 293, 301, 306, 307, 308, 311, 312, 313, 317, 320, 321, 322, 325, 326, 330, 332, 333, 335, 336, 337, 340, 341, 347, 348, 349, 350, 351, 355, 356, 357, 358, 362, 363, 370, 372, 373, 376, 378, 384, 385, 392, 396, 397, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 423, 425, 427, 431, 432, 434, 435, 436, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465], "ideal": [449, 451, 460], "ident": [159, 316, 317, 453, 456, 459, 463], "identif": 425, "identifi": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 248, 327, 341, 356, 357, 416, 444, 451, 454, 455, 456, 458, 459, 460, 463], "idx_offset": 45, "ignor": [121, 126, 131, 133, 185, 197, 215, 244, 246, 248, 330, 354, 402, 416, 432, 444, 451, 459, 465], "ignore_exampl": 444, "ignore_list": 353, "ii": 447, "iii": 447, "illustr": [428, 430, 453], "iloc": 449, "imag": [425, 444], "imagin": [422, 425], "immedi": [376, 415, 450], "immut": 444, "impact": [401, 439, 452], "imperfect": 349, "implement": [21, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 127, 179, 190, 250, 258, 334, 410, 416, 422, 438, 444, 445, 446, 448, 454, 457, 458, 460, 463], "impli": [422, 442, 447, 451, 456], "implicitli": 459, "import": [13, 16, 85, 94, 126, 246, 416, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "impos": [422, 423, 451], "imposs": [442, 452, 453, 459], "improv": [3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 405, 408, 414, 416, 440, 442, 444, 447, 452], "imput": [244, 246, 398, 402, 440, 442], "impute_mod": [244, 246, 248, 402, 460], "inabl": [442, 447], "inaccuraci": 442, "inact": [44, 158, 160, 197, 213, 444], "inactive_parameter_combin": [44, 213, 444], "inc": 463, "incident": 447, "includ": [63, 65, 121, 126, 131, 133, 158, 187, 244, 325, 326, 353, 400, 411, 420, 422, 435, 436, 439, 444, 445, 447, 448, 449, 451, 453, 465], "inclus": 447, "incom": 459, "incompat": [69, 70, 71, 72, 73, 74, 98, 262, 412, 451], "incompatibilityerror": 31, "incompatibleacquisitionfunctionerror": 449, "incompatibleexplainererror": 454, "incomplet": 444, "inconsist": 444, "incorpor": [447, 449, 461, 465], "incorrect": 444, "incorrectli": 444, "increas": [10, 185, 248, 307, 308, 427, 438, 439, 444, 448, 456, 463], "increment": 221, "incur": 447, "inde": 450, "indefinit": [185, 244], "indemn": 447, "indemnifi": 447, "indent": 378, "independ": [189, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 419, 444, 457, 460, 461], "independentgaussiansurrog": [262, 280, 282, 284, 444], "index": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 215, 248, 260, 316, 317, 355, 356, 419, 420, 427, 432, 434, 444, 454, 456, 458, 460], "indexkernel": 444, "indic": [13, 16, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 94, 97, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 160, 182, 184, 185, 186, 187, 215, 253, 255, 257, 262, 266, 280, 282, 284, 286, 316, 317, 320, 321, 350, 384, 422, 432, 444, 447, 453, 457, 460, 461], "indirect": [325, 326, 447], "indistinguish": 422, "individu": [53, 54, 114, 115, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 244, 260, 358, 416, 423, 428, 447, 450, 453, 455, 457, 463], "induc": [44, 425], "industri": 463, "ineffici": 221, "inequ": [45, 213, 458], "inf": [8, 410, 411, 412, 413, 434], "infeas": [451, 453], "infer": [159, 262, 438, 439, 444, 458], "inferencesess": 262, "infin": 164, "infinit": [185, 186, 328, 362, 392, 393, 444, 456], "influenti": 463, "info": [313, 444], "inform": [26, 140, 296, 357, 400, 401, 402, 417, 422, 431, 432, 439, 442, 444, 445, 447, 449, 452, 453, 456, 458, 463, 464], "infring": 447, "ingest": [221, 244, 456, 457], "ingredi": [422, 423, 451], "inher": [21, 158, 253, 255, 257, 262, 266, 280, 282, 284, 286, 422, 461], "inherit": 445, "init": 292, "initi": [105, 106, 107, 108, 109, 110, 111, 112, 116, 187, 189, 197, 204, 205, 206, 207, 209, 221, 244, 248, 312, 384, 398, 410, 411, 412, 413, 416, 417, 427, 434, 439, 440, 444, 446, 450, 452, 456, 457, 459, 460, 463], "initial_data": [244, 248, 400, 439, 460], "initial_recommend": [187, 405, 416, 417, 419, 420, 425, 434, 435, 436, 442, 457], "initial_recommender_cl": 444, "initial_strategi": 444, "initial_typ": 419, "inject": 459, "inner": [180, 355, 454, 457, 459], "inplac": [401, 438, 439, 465], "input": [40, 41, 42, 127, 139, 142, 143, 145, 153, 156, 213, 215, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 296, 298, 304, 306, 327, 344, 345, 349, 350, 351, 355, 363, 365, 372, 384, 396, 397, 399, 419, 427, 428, 438, 439, 444, 455, 459, 460, 463], "input_dim": 419, "input_label": 350, "inputtransform": 387, "insid": [416, 419, 420, 443, 459], "insight": [94, 416, 442, 444, 446, 464], "inspect": [336, 415, 422], "instabl": [444, 451], "instal": [444, 445, 452, 454, 456, 465], "instanc": [40, 41, 42, 53, 56, 94, 187, 215, 347, 411, 416, 422, 423, 442, 443, 445, 449, 450, 451, 452, 454, 456, 458, 459, 460, 465], "instanti": [262, 416, 450], "instead": [182, 184, 185, 186, 187, 312, 341, 350, 410, 412, 413, 442, 443, 444, 450, 451, 455, 456, 459, 460, 462, 463, 465], "institut": [446, 447], "instruct": [442, 444, 462, 464], "instrument_nam": 313, "int": [10, 13, 15, 16, 21, 31, 34, 44, 45, 51, 94, 101, 102, 103, 106, 108, 109, 110, 111, 112, 121, 126, 127, 131, 133, 147, 160, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 244, 248, 250, 298, 299, 306, 307, 308, 313, 351, 358, 373, 377, 380, 381, 384, 385, 387, 410, 412, 413, 422, 425, 427, 439, 445, 456], "integ": [34, 147, 215, 248, 432, 444, 445, 456], "integr": [15, 444, 445, 448, 450], "intend": [404, 415, 438, 445, 457], "intens": 456, "intention": 447, "interact": [30, 31, 404, 442, 443, 450, 453, 459], "interchang": 422, "interconnect": 450, "interest": [450, 454, 455, 456, 465], "interfac": [179, 258, 268, 415, 417, 444, 447, 450, 453, 454], "intermedi": [207, 384], "intern": [31, 45, 57, 185, 399, 416, 427, 444, 451, 452, 456, 457, 458, 459], "internet": 442, "internship": 446, "interplai": 444, "interpol": [106, 276, 444], "interpret": [13, 16, 215, 242, 344, 420, 422, 435, 436, 439, 452, 458, 460], "interrupt": 67, "intersect": 432, "interv": [31, 44, 152, 158, 160, 253, 255, 257, 262, 266, 280, 282, 284, 286, 304, 306, 307, 308, 427, 444, 450, 456, 459, 462], "intrins": 463, "introduc": [443, 444, 451, 456, 457, 460], "intuit": [450, 454], "invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 76, 221, 341, 385, 420, 435, 443, 450, 451, 458], "invalid_config": 436, "invalid_surrogate_model": 420, "invalid_typ": 436, "invari": [53, 56, 57, 316, 317, 451], "invers": [234, 459], "invert": [31, 355], "investig": [242, 460, 461], "invok": [460, 464, 465], "involv": [31, 221, 260, 415, 422, 442, 452, 454, 455, 456, 459, 463], "io": 309, "irrelev": [422, 444, 451], "irrevoc": 447, "is_bound": [363, 444], "is_cardinality_fulfil": 444, "is_continu": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 139, 140, 142, 143, 145, 152, 153, 156], "is_degener": 363, "is_discret": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 139, 140, 142, 143, 145, 152, 153, 156], "is_empti": [213, 221, 444], "is_eq": 45, "is_finit": 444, "is_fully_unbound": 363, "is_half_bound": 363, "is_in_rang": [138, 139, 140, 142, 143, 145, 152, 153, 156], "is_inact": 444, "is_left_bound": 363, "is_mc": 444, "is_multi_output": [121, 126, 131, 133, 444], "is_numer": [138, 139, 140, 142, 143, 145, 152, 153, 156, 444], "is_right_bound": 363, "is_stat": [182, 184, 185, 186, 187, 444, 453], "iso": 419, "isoxazol": 463, "issu": [261, 322, 333, 444, 447, 460, 465], "item": [41, 138, 139, 140, 142, 143, 145, 152, 153, 156, 422, 425, 438, 439, 456], "iter": [13, 16, 31, 44, 152, 185, 186, 213, 215, 244, 261, 304, 323, 328, 347, 349, 351, 364, 396, 397, 400, 410, 411, 412, 413, 416, 417, 425, 438, 439, 442, 444, 448, 450, 456, 457, 460, 461, 465], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 213, 215, 221, 238, 250, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 313, 316, 324, 332, 336, 347, 363, 367, 399, 405, 415, 417, 422, 423, 425, 439, 442, 443, 445, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 463, 465], "itself": [253, 255, 257, 262, 266, 280, 282, 284, 286, 415, 438, 443, 463], "j": [401, 442, 456, 463], "jackiepho": [400, 401, 402], "januari": 447, "javadi": 446, "jin": 446, "join": [355, 443], "joint": [260, 450, 461], "jointli": [428, 450], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 363, 376, 419, 420, 434, 435, 444, 464], "json_str": 459, "juli": 446, "julian": 446, "jump": [444, 463], "jupyt": 419, "just": [425, 441, 445, 459], "k": [153, 205, 384, 399, 400, 401, 402, 404, 405, 407, 408, 416, 422, 428, 430, 431, 432, 444, 453, 457, 465], "karin": 446, "kde": 417, "keep": [52, 156, 213, 221, 416, 444, 445], "kei": [327, 347, 401, 445, 454], "kept": [355, 456, 461], "kernel": [101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 266, 267, 268, 269, 270, 276, 278, 405, 410, 411, 412, 413, 427, 434, 444, 451, 463], "kernel_factori": [101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 266, 268, 269], "kernel_or_factori": 266, "kernelexplain": [92, 94, 95, 98, 454], "kernelfactori": [266, 269, 270, 276, 278, 444], "keyword": [94, 156, 402, 405, 432, 439, 444, 449, 451, 458, 460], "kgaa": [442, 446, 452], "kian": 463, "kickstart": 459, "kind": [197, 442, 444, 447, 451, 456, 457], "kiter": [410, 411, 412, 413, 427], "klekotaroth": 150, "klekotarothfingerprint": 150, "kmean": 405, "kmeansclusteringrecommend": [405, 457], "knob": 442, "know": [425, 435, 442, 443, 455, 459, 463], "knowledg": [8, 10, 442, 444, 463], "known": [451, 453, 461, 463], "koller": 463, "kwarg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 105, 107, 109, 114, 115, 116, 168, 170, 171, 172, 173, 174, 175, 176, 179, 199, 258, 263, 268, 342, 351, 362], "kwargs_conform": [156, 342, 456], "kwargs_fingerprint": [156, 342, 456], "l0": 34, "l1": 456, "l664": 278, "label": [56, 57, 145, 156, 313, 350, 422, 423, 428, 442, 444, 451, 453, 458, 460], "labelpad": 417, "laboratori": 428, "laggner": 150, "laggnerfingerprint": 150, "lambda": [410, 412, 413, 416, 422, 438, 461], "lanat": 454, "land": 444, "languag": [322, 423, 442], "larg": [156, 221, 407, 408, 423, 444, 452, 456, 460, 465], "larger": [106, 153, 385, 405, 412, 450, 451, 459, 463], "largest": [384, 425, 448], "last": [185, 425, 445, 450, 457], "last_call_tim": 415, "lastli": 417, "latent": 456, "later": [153, 443, 450, 459], "latest": [186, 442, 445, 450], "latter": [21, 31, 316, 336, 416, 422, 450, 455, 463], "law": [442, 447], "lawsuit": 447, "layer": 150, "layeredfingerprint": 150, "layout": 444, "lazi": [223, 388, 444], "lazili": [444, 452], "lazyfram": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 223], "le": 408, "le_method": 445, "lead": [84, 427, 444, 459], "lean": 445, "learn": [15, 249, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 405, 410, 411, 412, 413, 425, 427, 434, 438, 440, 442, 444, 451, 454, 456, 461, 462, 464], "least": [160, 185, 423, 442, 447, 449, 450], "leav": 459, "lee": 446, "left": [81, 82, 176, 244, 348, 356, 363, 411, 428, 444, 455], "left_df": 356, "leftov": 444, "legal": 447, "legend": [400, 402, 428], "len": [411, 416, 417, 422, 423, 425], "length": [107, 185, 186, 253], "lengthi": 450, "lengthscal": [106, 107, 108, 110, 111, 112], "lengthscale_initial_valu": [106, 107, 108, 110, 111, 112], "lengthscale_prior": [106, 107, 108, 110, 111, 112], "leq": 34, "less": [8, 317, 351, 416, 417, 425, 450, 465], "let": [399, 401, 415, 416, 417, 419, 420, 422, 423, 428, 430, 439, 442, 451, 455, 459], "level": [349, 444, 445, 449, 450, 451, 457, 459], "leverag": [416, 450, 457], "li": [160, 456], "liabil": 447, "liabl": 447, "lib": [410, 412, 413, 443], "librari": 443, "licensor": 447, "lie": [31, 253, 255, 257, 262, 266, 280, 282, 284, 286, 347], "liebig": 446, "life": [442, 445, 446, 465], "lifecycl": 450, "ligand": [400, 401, 402, 404, 405, 416, 442, 454, 456], "ligand_data": 416, "ligand_smil": 416, "like": [13, 16, 160, 207, 248, 319, 417, 422, 425, 442, 443, 444, 445, 449, 450, 451, 453, 459, 460, 463, 465], "likelihood": 253, "lime": [94, 97, 454], "limetabular": [92, 93, 454], "limit": [8, 276, 313, 417, 442, 446, 447, 451, 458, 464], "line": [363, 378, 400, 402, 416, 425, 444, 445, 448, 450, 456, 460, 463], "linear": [45, 105, 213, 280, 302, 307, 405, 406, 427, 440, 444, 445, 454, 458, 462], "linear_model": 419, "linear_regressor": 419, "linearkernel": 444, "linearli": [276, 307, 308, 427, 444], "lineplot": [399, 400, 401, 402, 416, 438, 439], "lingo": 150, "lingofingerprint": 150, "link": [55, 443, 444, 447, 456], "linspac": [410, 411, 412, 413, 417, 419, 420, 422, 428, 431, 432, 434, 438, 439, 465], "lint": [442, 444, 445], "linter": [444, 445], "list": [34, 35, 36, 37, 38, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 118, 159, 165, 185, 186, 213, 215, 221, 222, 223, 226, 227, 228, 244, 248, 250, 312, 325, 326, 327, 335, 342, 347, 352, 353, 354, 357, 384, 400, 405, 410, 411, 412, 413, 417, 422, 423, 425, 427, 431, 432, 439, 442, 444, 445, 447, 451, 455, 456, 457, 458, 460], "liter": [31, 94, 118, 185, 244, 246, 248, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 349, 384, 445], "literatur": 444, "litig": 447, "littl": 443, "live": 461, "liver": [460, 463], "ll": 453, "load": [376, 388, 416, 419, 435, 436, 443, 444], "loc": [174, 175, 400, 402, 428], "local": [443, 445, 452, 454, 464], "locat": [13, 16, 174, 175, 449, 452, 463], "lockfil": 444, "log": [174, 313, 405, 442, 452], "logarithm": [4, 11, 13, 14, 374], "logei": [4, 444], "logic": [180, 260, 347, 350, 399, 444, 451, 457, 460, 465], "lognormalprior": 444, "logo": 444, "long": [450, 459, 460], "longer": [158, 444], "look": [246, 405, 422, 425, 443, 448, 450, 451, 453, 454, 459, 460, 462], "look_up_target": 244, "lookup": [242, 244, 248, 250, 350, 356, 398, 399, 417, 428, 431, 440, 444, 454, 464], "lookup_df": 246, "lookup_test_task": 439, "lookup_training_task": 439, "lookup_valu": [407, 408, 417, 431, 432], "lookup_withmiss": 402, "loop": [242, 244, 250, 410, 411, 412, 413, 416, 427, 444, 449, 454, 460, 465], "loss": 447, "lost": 459, "lot": 430, "low": [276, 425, 443, 444, 454, 456, 459], "lower": [160, 176, 306, 307, 308, 363, 400, 402, 417, 427, 438, 439, 451, 456, 462], "lower_bound": 458, "lower_threshold": 160, "lst_exclud": 352, "lt": 443, "luxuri": 450, "m": 422, "m1": 443, "mac": 443, "macc": 150, "maccsfingerprint": 150, "machin": [425, 442, 443, 445, 448, 452, 456, 462, 463], "machineri": [21, 197, 443, 445, 453, 463, 465], "made": [85, 244, 384, 402, 442, 443, 447, 451, 452, 460], "magic": 463, "magnitud": [348, 349, 465], "mai": [31, 44, 121, 126, 131, 133, 215, 332, 441, 442, 447, 450, 453, 459, 460, 461], "mail": 447, "main": [30, 31, 442, 444], "maintain": [290, 445, 453, 455], "major": [444, 460], "make": [57, 197, 253, 255, 257, 262, 266, 280, 282, 284, 286, 288, 289, 290, 322, 348, 350, 400, 402, 405, 407, 422, 423, 442, 443, 444, 445, 447, 449, 450, 451, 453, 454, 456, 459, 461, 463, 465], "make_explainer_for_surrog": 94, "malfunct": 447, "manag": [30, 213, 214, 215, 221, 381, 444, 447, 460], "mandatori": [441, 444, 462], "mani": [197, 385, 422, 431, 432, 442, 450, 456, 459, 462, 463], "manipul": [444, 452], "manner": 452, "manual": [432, 443, 444, 459, 461], "map": [145, 150, 156, 246, 248, 260, 306, 307, 308, 330, 350, 387, 400, 401, 402, 427, 460, 462], "mapfingerprint": 150, "mapl": [92, 93, 94, 97, 454], "margin": 444, "mark": [447, 450, 463, 464], "markdown": [420, 435, 436, 444], "marker": [399, 400, 401, 402, 416, 438, 439, 444], "markers": [399, 401, 416, 428, 438, 439], "market": 425, "marketplac": 444, "martin": [442, 446], "mask_bad1": 410, "mask_bad2": 410, "mask_bad3": 410, "mask_good": [410, 451], "mass": 170, "master": 278, "match": [31, 86, 88, 139, 142, 143, 145, 153, 156, 159, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 296, 298, 301, 304, 312, 330, 332, 356, 357, 396, 415, 417, 427, 432, 442, 444, 449, 450, 453, 455, 459, 460, 464], "match_attribut": 444, "match_targeta": 462, "match_targetb": 462, "materi": [425, 446, 463], "matern": 106, "maternkernel": 444, "math": [416, 422], "mathemat": 444, "matmin": 443, "matplotlib": [400, 402, 417, 428, 444], "matter": [422, 430, 445, 455], "max": [246, 301, 348, 400, 401, 402, 404, 405, 410, 411, 412, 413, 416, 417, 419, 420, 425, 427, 428, 434, 435, 436, 442, 444, 455, 459, 460, 464], "max_cardin": [34, 44, 51, 451], "max_column": [358, 422], "max_colwidth": 358, "max_n_subspac": [197, 444, 451], "max_nonzero": 221, "max_row": [358, 422], "max_sum": [221, 422, 458], "max_target": 462, "max_yield": [400, 402], "maxim": [6, 13, 16, 301, 404, 417, 425, 427, 442, 444, 454, 462], "maximum": [6, 34, 44, 51, 61, 156, 197, 213, 215, 221, 306, 358, 422, 423, 427, 444, 451, 456, 458], "mc": [425, 449], "md": 444, "me2pph": [400, 401, 402], "mean": [5, 8, 21, 31, 57, 118, 129, 205, 242, 244, 246, 248, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 290, 374, 402, 405, 419, 425, 427, 428, 444, 445, 447, 448, 449, 450, 451, 453, 455, 456, 457, 459, 461, 464], "meaning": 455, "meaningless": [422, 448], "meanpredictionsurrog": [290, 405, 461], "meantim": [445, 451], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 94, 158, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 244, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 296, 298, 304, 312, 347, 351, 356, 400, 401, 402, 405, 407, 408, 410, 411, 412, 413, 415, 416, 417, 427, 431, 432, 434, 441, 442, 444, 445, 448, 449, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464], "mechan": [31, 67, 126, 127, 129, 242, 245, 246, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 332, 355, 365, 384, 399, 415, 416, 417, 438, 439, 444, 447, 453, 454, 456, 458, 459, 461, 463, 464], "mechanist": 442, "media": [447, 456, 463], "mediocr": 462, "medium": [420, 434, 442, 447, 456], "medoid": [206, 444, 457], "meet": [347, 447], "mem_estim": 465, "member": [336, 451, 456], "memori": [10, 215, 220, 221, 444, 452, 464], "memorys": [215, 221, 465], "mention": 448, "merchant": 447, "merck": [442, 446, 452], "mere": [447, 455], "merg": 445, "meshgrid": [428, 438, 439], "messag": [86, 416], "meta": [31, 81, 182, 184, 185, 186, 187, 190, 410, 411, 412, 413, 427, 434, 442, 444, 464], "metadata": [31, 213, 221, 310, 444], "metarecommend": [184, 185, 186, 187, 444, 453], "methanol": 422, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 89, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 268, 269, 276, 278, 280, 282, 284, 286, 289, 292, 293, 296, 298, 304, 319, 322, 332, 336, 363, 376, 383, 384, 385, 387, 417, 420, 435, 436, 441, 444, 446, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463], "methodtyp": [415, 416, 417], "methyldiphenylphosphin": [400, 401, 402], "methylisoxazol": 463, "metric": [425, 442, 452, 456], "mhfp": 150, "mhfpfingerprint": 150, "micromamba": 444, "middl": 453, "midpoint": 462, "might": [53, 57, 156, 215, 401, 405, 407, 411, 432, 439, 443, 449, 450, 451, 452, 454, 458, 460, 463, 465], "mimic": [99, 166, 451], "min": [301, 348, 399, 407, 408, 417, 427, 428, 431, 432, 438, 439, 442, 444, 455, 459, 464], "min_cardin": [34, 44, 51, 451], "min_nonzero": 221, "min_target": 462, "mind": [425, 461], "miniconda": 444, "minim": [6, 301, 427, 438, 439, 444, 451, 458, 462], "minimum": [34, 44, 51, 61, 78, 153, 213, 215, 221, 444, 451], "minimumcardinalityviolatedwarn": [444, 451], "minor": 444, "mirror": [13, 16, 450, 459], "miss": [244, 246, 402, 444, 445], "mistak": 445, "mix": [250, 422, 423, 442, 451, 456, 459, 463], "mixin": 238, "mixtur": [204, 440, 444, 451, 456, 457, 463, 465], "mobil": 444, "mode": [31, 118, 145, 156, 185, 244, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 301, 304, 307, 330, 347, 398, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 416, 417, 419, 420, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 450, 455, 457, 459, 464], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 76, 79, 94, 98, 99, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 253, 255, 257, 258, 259, 260, 261, 262, 266, 280, 282, 284, 286, 290, 292, 293, 370, 407, 408, 418, 428, 438, 439, 442, 444, 446, 448, 449, 450, 451, 455, 456, 457, 459, 460, 462, 463, 464], "model_cl": 293, "model_cluster_num_parameter_nam": [204, 205, 206, 207], "model_from_config": 419, "model_from_python": 419, "model_init": 292, "model_json": 419, "model_param": [204, 205, 206, 207, 280, 284, 286, 420, 444], "modellist": 260, "modelnottrainederror": [253, 255, 257, 262, 266, 280, 282, 284, 286], "modif": [443, 447], "modifi": [186, 246, 290, 347, 348, 349, 444, 447, 465], "modul": [0, 1, 32, 90, 91, 99, 119, 136, 154, 166, 177, 180, 190, 193, 200, 211, 229, 230, 242, 251, 254, 264, 271, 294, 297, 314, 318, 368, 388, 391, 442, 443, 444, 445], "modular": 445, "molecul": [55, 156, 341, 422, 456], "molecular": [342, 456], "moment": [250, 276, 445], "monitor": [444, 452], "monkeypatch": 443, "mont": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 80, 248, 399, 401, 402, 416, 425, 438, 439, 444, 449, 460], "monte_carlo_run": [248, 416], "mordr": [150, 156, 400, 401, 402, 404, 405, 411, 416, 420, 422, 435, 436, 442, 444, 451, 456], "mordredcommun": 444, "mordredfingerprint": [150, 456], "more": [8, 10, 57, 65, 82, 156, 185, 186, 213, 215, 221, 228, 244, 290, 309, 312, 336, 360, 378, 402, 405, 417, 422, 423, 438, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 465], "morgan": 456, "morgan_fp": [150, 444], "mors": 150, "morsefingerprint": 150, "most": [221, 244, 403, 425, 442, 445, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465], "motiv": 444, "move": [13, 16, 158, 444, 459], "mpl_toolkit": 417, "mplot3d": 417, "mqn": 150, "mqnsfingerprint": 150, "mse": 425, "mu": [174, 175], "much": [401, 455, 456], "multi": [130, 252, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 428, 440, 442, 444, 446, 449, 463, 464], "multiarmedbandit": 425, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 40, 121, 126, 131, 133, 247, 248, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 349, 400, 401, 402, 411, 422, 425, 442, 444, 449, 451, 455, 461, 462, 463, 464], "multipli": 115, "multitask": 444, "must": [53, 121, 126, 131, 133, 215, 221, 246, 250, 332, 349, 396, 405, 415, 416, 422, 425, 427, 444, 445, 447, 448, 451, 452, 453, 455, 456, 460], "mutual": 460, "my_attribut": 445, "my_valu": 452, "mypi": [322, 333, 442, 444, 445], "mystr": 445, "n": [26, 253, 317, 337, 384, 400, 401, 402, 404, 405, 410, 411, 412, 413, 420, 422, 425, 427, 431, 432, 434], "n_arm": 425, "n_batches_don": 31, "n_cluster": [205, 206], "n_combin": 422, "n_combinations_actu": 422, "n_combinations_expect": 422, "n_compon": 204, "n_doe_iter": [244, 248, 250, 399, 400, 401, 402, 416, 417, 438, 439, 460], "n_duplic": 422, "n_estim": 420, "n_fits_don": 31, "n_grid_point": 428, "n_inactive_parameter_combin": [44, 213, 444], "n_interrupted_campaign": 416, "n_iter": [407, 408, 410, 411, 412, 413, 425, 427], "n_mc_iter": [248, 250, 399, 401, 402, 416, 438, 439, 460], "n_mc_run": 425, "n_mc_sampl": 21, "n_output": [121, 126, 131, 133, 444], "n_permut": 422, "n_pis_ov": 416, "n_pis_over_requir": 416, "n_point": [213, 385], "n_raw_sampl": [197, 444, 457], "n_restart": [197, 444, 457], "n_row": 351, "n_sampl": 384, "n_task": 215, "n_task_param": 444, "n_training_data": 428, "n_wrong_sum": 422, "nactivevalu": [410, 411, 412, 413, 427, 434], "naiv": [189, 282, 290, 405, 444, 458], "naivehybridrecommend": 444, "naivehybridspacerecommend": [432, 444, 457], "nake": [312, 452], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 44, 65, 135, 138, 139, 140, 142, 143, 145, 152, 153, 156, 159, 161, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 227, 236, 248, 260, 262, 296, 298, 304, 316, 324, 330, 331, 332, 341, 342, 347, 352, 356, 357, 371, 376, 378, 390, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 423, 425, 427, 428, 430, 431, 432, 434, 435, 436, 438, 439, 442, 444, 445, 447, 449, 450, 451, 452, 455, 458, 459, 460, 461, 462, 463, 465], "name_or_abbr": [324, 331], "namedtupl": 425, "namespac": [198, 444, 445], "nan": [164, 253, 392, 394, 395, 396, 397, 410, 411, 412, 413, 427, 434], "nativ": [419, 444, 461], "natur": [284, 401, 445, 451, 457, 459, 462], "navig": [442, 450], "nbase": 342, "nbviewer": 419, "nd": 442, "ndarrai": [13, 16, 127, 160, 306, 307, 308, 350, 359, 363, 374, 384, 417, 425, 428, 444, 460], "ne": 422, "nearli": 462, "necessari": [357, 415, 444, 445, 450, 451, 455, 456, 458, 460, 461], "necessarili": [447, 450, 451, 458, 463], "need": [26, 31, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 332, 356, 357, 400, 401, 402, 405, 410, 413, 415, 417, 419, 422, 425, 427, 438, 439, 441, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 465], "neg": [15, 428, 444, 451], "negat": [6, 45, 439, 444, 463], "neglig": 447, "neither": [8, 250, 349], "neq": 34, "nest": [378, 450, 464], "neural": 463, "neurip": 463, "neutral": 8, "never": 412, "nevertheless": [336, 443], "new": [31, 47, 48, 118, 185, 187, 213, 246, 261, 306, 307, 308, 316, 354, 355, 404, 416, 417, 434, 442, 444, 445, 450, 451, 461, 463], "new_measur": 454, "new_rec": 450, "newli": [442, 445, 452, 453, 463], "next": [31, 399, 415, 417, 422, 423, 428, 434, 438, 439, 442, 448, 449, 450, 457, 459], "ngboost": [284, 405, 444], "ngboostmodel": 420, "ngboostsurrog": [405, 420, 461], "nice": [417, 443], "nicknam": 341, "nintern": 427, "no_duplicates_constraint": 422, "no_grad": 417, "no_tl": 438, "nois": [244, 348, 349, 439, 444, 464], "noise_level": 349, "noise_perc": [244, 248, 460], "noise_ratio": 348, "noise_std": [438, 439], "noise_typ": 349, "noisi": [13, 14, 16, 17, 351, 438, 442, 444, 463], "non": [64, 65, 93, 121, 126, 131, 133, 182, 184, 185, 186, 187, 189, 215, 244, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 330, 332, 336, 348, 385, 392, 393, 394, 396, 397, 422, 438, 442, 444, 447, 449, 451, 453, 454, 458, 459], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 42, 47, 48, 57, 63, 64, 65, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 116, 118, 126, 131, 133, 135, 139, 142, 143, 145, 152, 153, 156, 159, 163, 164, 165, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 218, 221, 224, 227, 228, 231, 232, 234, 236, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 292, 293, 298, 304, 312, 313, 320, 321, 332, 342, 347, 352, 353, 354, 358, 363, 364, 376, 387, 392, 393, 394, 395, 396, 397, 405, 410, 411, 412, 413, 415, 416, 417, 419, 420, 427, 434, 458, 462, 464], "nonetheless": 463, "nonlinear": [37, 213], "nonpredict": [202, 204, 205, 206, 207, 209, 210], "nonpredictiverecommend": [207, 209, 210, 444], "nonzero": [34, 44, 221, 444], "noqa": [410, 445], "nor": [8, 349, 441], "norecommenderslefterror": [185, 186], "noreturn": [189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 263], "normal": [173, 174, 175, 410, 412, 413, 427, 443, 447, 455, 458], "normaliz": 455, "normalprior": 444, "not_a_param": 420, "notabl": [444, 453, 461], "note": [34, 44, 57, 215, 244, 248, 250, 261, 262, 347, 348, 349, 400, 401, 402, 405, 411, 415, 419, 420, 422, 427, 431, 432, 434, 435, 436, 441, 442, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 463], "notebook": 419, "noteworthi": 450, "noth": [15, 31, 34, 42, 44, 45, 51, 83, 126, 156, 187, 189, 195, 197, 204, 205, 206, 207, 213, 215, 221, 253, 266, 280, 284, 286, 304, 447, 456], "notic": [415, 445, 447, 459, 461], "notimplementederror": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 127, 158, 228, 231, 232, 250, 253, 255, 257, 261, 262, 266, 280, 282, 284, 286], "notwithstand": 447, "now": [399, 400, 401, 402, 404, 405, 410, 412, 415, 416, 417, 422, 423, 425, 427, 428, 430, 434, 435, 438, 439, 441, 442, 444, 463, 465], "np": [127, 407, 408, 410, 411, 412, 413, 417, 419, 420, 422, 423, 425, 428, 430, 431, 432, 434, 438, 439, 451, 456, 460, 465], "nrecommend": [404, 405, 427, 431, 432], "nu": 106, "num": [355, 367], "num_disc_1": [427, 450], "num_disc_2": 427, "num_experi": [244, 399, 400, 401, 402, 416, 438, 439], "num_fantasi": 10, "num_parameter_1": 413, "num_parameter_2": 413, "num_parameter_3": 413, "num_parameter_4": 413, "num_parameter_5": 413, "num_parameter_6": 413, "num_sampl": 111, "num_valu": 458, "number": [10, 15, 21, 31, 44, 111, 121, 126, 131, 133, 156, 179, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 244, 248, 250, 253, 351, 358, 363, 367, 379, 384, 385, 400, 401, 402, 407, 408, 410, 411, 412, 413, 417, 422, 425, 431, 438, 439, 442, 443, 444, 448, 450, 451, 452, 455, 456, 458, 459, 460, 465], "numer": [13, 16, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 84, 138, 139, 140, 142, 143, 145, 152, 153, 156, 160, 213, 221, 246, 304, 348, 349, 356, 385, 396, 397, 399, 404, 407, 422, 423, 442, 444, 451, 452, 454, 455, 456, 458, 460, 462], "numerical_measurements_must_be_within_toler": [31, 396, 444, 450], "numerical_onli": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "numericalcontinuousparamet": [45, 63, 158, 213, 399, 407, 408, 423, 428, 430, 432, 439, 458, 460, 464], "numericaldiscreteparamet": [221, 400, 401, 402, 404, 405, 407, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 427, 431, 432, 434, 435, 436, 438, 439, 442, 458, 459, 460, 464, 465], "numericaltarget": [246, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 416, 417, 419, 420, 427, 428, 431, 432, 434, 435, 436, 438, 439, 442, 444, 455, 459, 460, 464], "numericcontinu": 432, "numparam1": 413, "numparam2": 413, "numparam3": 413, "numparam4": 413, "numparam5": 413, "numparam6": 413, "numpi": [160, 350, 359, 363, 369, 371, 407, 408, 410, 411, 412, 413, 417, 419, 420, 422, 423, 425, 428, 430, 431, 432, 434, 438, 439, 444, 451, 460, 465], "nuniqu": 422, "nyou": [431, 432], "o": [399, 400, 401, 402, 404, 405, 408, 410, 411, 412, 413, 416, 417, 420, 422, 425, 428, 438, 439, 442, 451, 452, 456], "o2": [400, 401, 402], "obj": [163, 164, 165, 232], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 94, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 126, 129, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 159, 160, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 222, 223, 232, 233, 236, 238, 253, 255, 257, 258, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 319, 322, 330, 332, 349, 356, 357, 360, 363, 376, 387, 399, 404, 415, 416, 417, 419, 420, 425, 428, 430, 432, 435, 436, 443, 444, 445, 447, 451, 453, 454, 457, 458, 460, 461, 462, 464, 465], "objective_json": 459, "oblig": 447, "observ": [242, 253, 255, 257, 262, 266, 280, 282, 284, 286, 425, 460, 462], "obsolet": 444, "obtain": [244, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 401, 417, 425, 428, 439, 442, 444, 450, 454, 455, 459, 463], "oc": [400, 401, 402, 404, 405], "oc1": [400, 401, 402], "occur": [56, 445], "occurr": 451, "octanol": [451, 456], "off": [8, 250, 337, 411, 442, 444, 451, 452, 455, 462], "offer": [332, 417, 422, 425, 431, 441, 442, 443, 447, 448, 453, 456, 457, 459, 460, 461, 463, 465], "offset": [45, 109], "offset_initial_valu": 109, "offset_prior": 109, "often": [423, 425, 443, 448, 451, 452, 453, 454, 456, 459, 465], "oftentim": [459, 460], "oh": [142, 147, 401, 411, 420, 425, 427, 434, 435, 436, 442, 458, 459], "ok": 427, "old": 463, "omit": [13, 16, 195, 197, 248, 332, 415, 442, 458, 459], "onc": [248, 416, 456, 460], "one": [13, 16, 21, 63, 65, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 160, 170, 179, 180, 185, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 215, 228, 246, 266, 290, 316, 317, 351, 378, 400, 401, 402, 405, 407, 422, 425, 427, 436, 438, 439, 441, 442, 443, 444, 445, 447, 449, 450, 451, 453, 455, 456, 458, 459, 460, 461, 462, 463], "onehot": 401, "ones": [215, 312, 356, 401, 432, 444, 449, 463], "ongo": [416, 463], "onli": [10, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 94, 106, 121, 126, 131, 133, 156, 215, 221, 246, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 312, 313, 332, 333, 336, 347, 356, 363, 378, 384, 385, 400, 405, 410, 411, 416, 417, 419, 420, 422, 431, 432, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 465], "onlin": 425, "onnx": [261, 262, 370, 418, 442, 444, 461], "onnx_input_nam": [262, 419], "onnx_str": [262, 419], "onto": [13, 16, 445], "open": [31, 44, 158, 160, 253, 255, 257, 262, 266, 280, 282, 284, 286, 442, 445], "opentelemetri": [442, 444, 452], "oper": [42, 45, 54, 234, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 350, 368, 407, 408, 412, 413, 422, 423, 443, 444, 449, 451, 452, 453, 454, 457, 459], "operator_convert": 419, "opposit": 451, "opt": [442, 452], "optim": [12, 21, 31, 44, 45, 75, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 244, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 347, 401, 403, 404, 407, 408, 416, 417, 422, 425, 427, 432, 444, 446, 448, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463], "optimize_acqf": [45, 197], "optimize_acqf_": 45, "optimize_acqf_discret": 197, "optimize_acqf_mix": 197, "option": [31, 85, 90, 94, 105, 106, 107, 108, 109, 110, 111, 112, 116, 126, 131, 133, 139, 142, 143, 145, 153, 156, 159, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 234, 236, 244, 248, 250, 280, 284, 286, 292, 298, 304, 332, 342, 347, 352, 353, 354, 376, 402, 405, 419, 420, 425, 443, 444, 445, 448, 450, 451, 453, 454, 455, 458, 459, 460, 461, 462, 465], "oracl": 460, "orchestr": [445, 450], "order": [215, 221, 416, 425, 441, 442, 444, 445, 450, 451, 456, 459, 463], "ordin": 462, "org": [278, 322, 354, 419, 442, 447], "organ": 445, "origin": [26, 31, 158, 316, 317, 327, 350, 434, 441, 444, 445, 447, 457, 459, 461], "orthogon": 445, "oserror": 443, "other": [53, 113, 158, 213, 317, 400, 402, 404, 405, 407, 408, 416, 423, 425, 432, 438, 439, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 465], "otherwis": [45, 61, 138, 139, 140, 142, 143, 145, 152, 153, 156, 447, 448, 453, 455, 463], "our": [399, 410, 412, 415, 416, 417, 420, 422, 423, 425, 428, 430, 431, 432, 435, 436, 438, 439, 442, 445, 448, 450, 451, 453, 459, 460], "out": [221, 427, 439, 442, 447, 452, 455, 460, 463], "out_par": 428, "out_y0": 428, "out_y1": 428, "outcom": [179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 401, 442, 456, 462], "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 116, 121, 126, 131, 133, 253, 255, 257, 262, 266, 280, 282, 284, 286, 349, 350, 351, 376, 399, 428, 438, 439, 443, 444, 446, 460, 464], "output_label": 350, "outputscal": 116, "outputscale_initial_valu": 116, "outputscale_prior": 116, "outsid": [31, 158, 186, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 307, 308, 347, 427, 444, 459], "outstand": 447, "over": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 213, 422, 441, 444, 448, 450, 453, 463], "overal": [215, 419, 420, 422, 423, 425, 444, 445, 450, 455, 463], "overlap": [64, 65, 158, 407, 408, 451], "overrid": [234, 236, 415, 444], "overridden": [415, 445], "overview": [442, 459], "overwritten": 432, "own": [189, 399, 423, 442, 443, 444, 445, 447, 451, 456], "owner": 447, "ownership": 447, "p": [399, 400, 401, 402, 404, 405, 407, 408, 415, 417, 431, 438, 439, 445, 453, 454, 461, 465], "p1": [458, 459, 460], "p1_json": 459, "p1_via_json": 459, "p2": [458, 459, 460], "p2_json": 459, "p2_via_json": 459, "p3c4": [400, 401, 402], "p_cont": 458, "p_disc": 458, "p_g1_amount": 423, "p_g2_amount": 423, "p_g3_amount": 423, "p_i": 34, "pack": 459, "packag": [94, 150, 310, 410, 412, 413, 443, 444, 445, 456, 460, 461, 465], "page": [419, 442, 444, 445, 453], "pair": [316, 428, 442, 456], "pam": 206, "pamclusteringrecommend": 457, "panda": [52, 222, 240, 241, 246, 341, 359, 399, 400, 401, 402, 407, 408, 410, 416, 417, 422, 423, 427, 428, 431, 432, 438, 439, 444, 451, 452, 456, 458, 459, 460], "panic": 441, "paper": 463, "paper_fil": 463, "parallel": 445, "param": [418, 420, 440], "param1": [458, 460], "param2": [458, 460], "param_bounds_comp": 444, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 68, 82, 86, 94, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 127, 131, 133, 138, 139, 142, 143, 145, 147, 148, 149, 150, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 217, 220, 221, 222, 223, 226, 227, 228, 234, 236, 238, 242, 244, 246, 248, 250, 253, 255, 257, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 288, 290, 292, 293, 296, 298, 304, 306, 307, 308, 312, 313, 316, 317, 325, 326, 327, 330, 332, 335, 336, 337, 340, 341, 342, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 367, 372, 373, 374, 376, 378, 380, 381, 384, 385, 387, 396, 397, 399, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 419, 425, 427, 428, 430, 431, 432, 434, 435, 436, 438, 439, 442, 444, 445, 451, 452, 453, 455, 459, 460, 461, 463, 464], "parameter": [170, 171, 172, 173, 174, 175, 176], "parameter_json": 459, "parameter_nam": [213, 215, 221, 432], "parameter_names_in_cardinality_constraint": 213, "parameterencod": [139, 147, 148, 150, 153], "parametr": 451, "parent": 445, "pareto": [12, 131, 426, 440, 442, 444, 455], "paretoobject": [428, 442, 444, 464], "pars": [365, 444], "parser": 444, "part": [15, 26, 31, 40, 73, 190, 213, 215, 221, 347, 397, 420, 432, 435, 436, 438, 439, 444, 445, 447, 448, 449, 450, 451, 456, 457, 458, 459, 465], "parti": [447, 460], "partial": [26, 416, 464], "particl": 463, "particular": [31, 221, 242, 415, 428, 432, 441, 442, 443, 445, 447, 450, 455, 456, 458, 459, 460], "particularli": [332, 450], "partit": [206, 248, 250, 444, 457, 460], "partitionexplain": [92, 95], "pass": [31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 94, 156, 204, 205, 206, 207, 215, 221, 232, 266, 280, 284, 286, 351, 357, 422, 434, 439, 444, 445, 449, 453, 454, 455, 456, 459], "passthrough": [28, 122, 217, 270], "patch": 416, "patent": 447, "path": [376, 401, 422, 444, 445, 452, 465], "pattern": [150, 445, 463], "patternfingerprint": 150, "pd": [3, 31, 246, 260, 316, 317, 355, 399, 400, 401, 402, 407, 408, 410, 416, 417, 422, 423, 427, 428, 431, 432, 438, 439, 444, 451, 453, 456, 458, 459, 460], "pdf": 463, "peek": 459, "pend": [26, 31, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 442, 444, 464], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 444, 449, 450], "per": [244, 260, 400, 401, 402, 405, 422, 427, 431, 438, 439, 444, 456, 458, 460], "percent": [244, 447], "percentag": [197, 312, 349, 405, 410, 411, 412, 413, 422, 427, 434, 439, 457], "perf_count": 415, "perfectli": 459, "perform": [197, 244, 312, 356, 401, 410, 411, 412, 413, 417, 422, 435, 438, 439, 441, 442, 444, 445, 447, 448, 450, 452, 454, 456, 457, 460, 461, 463], "period": 107, "period_length_initial_valu": 107, "period_length_prior": 107, "periodickernel": 444, "perm_inv_constraint": 422, "perman": 464, "permiss": [442, 447], "permut": [53, 56, 57, 317, 444, 451], "permutation_invari": 53, "permutationexplain": [92, 95], "perpetu": 447, "persist": [444, 446, 450, 452, 459, 461], "perspect": 459, "pertain": 447, "pharmacophor": 150, "pharmacophorefingerprint": 150, "phase": [187, 423], "phaseagent1": 423, "phaseagent2": 423, "phcpho": [400, 401, 402, 404, 405], "phenomenon": 450, "philosophi": 459, "physic": [454, 460], "physiochemicalproperti": 150, "physiochemicalpropertiesfingerprint": 150, "pi": [7, 405, 416, 417], "pi_max": 417, "pi_per_iter": 417, "pi_required_fract": 416, "pi_threshold": 416, "pickl": 444, "pictur": 442, "piec": [425, 442, 450, 451], "piecewis": 108, "piecewisepolynomialkernel": 444, "pin": [26, 444], "pin_discret": 26, "pinned_part": 26, "pip": [442, 444, 445, 454, 465], "pipelin": [438, 439, 444, 445], "pival": [400, 401, 402, 404, 405], "pl": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "place": [13, 16, 34, 246, 347, 348, 349, 419, 420, 422, 425, 443, 444, 445, 447, 450, 453, 456, 459, 463], "placehold": 319, "plai": [450, 454, 462], "plain": 270, "plainkernelfactori": [101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 266], "plan": [261, 453, 456], "platt": 463, "pleas": [419, 420, 442, 448, 454, 457], "plenti": 454, "plot": [94, 96, 244, 400, 401, 402, 428, 438, 439, 444, 461, 463, 464], "plot_abegin_convert_pipelin": 370, "plot_ebegin_float_doubl": 370, "plot_typ": 94, "plotting_them": 376, "plt": [400, 402, 417, 428], "plu": [246, 442], "plugin": 444, "pm": [5, 405], "png": [400, 402], "po16": 456, "poetri": 444, "point": [6, 13, 15, 16, 21, 26, 30, 31, 94, 153, 158, 179, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 356, 369, 370, 382, 383, 384, 385, 389, 400, 404, 405, 416, 423, 428, 431, 432, 438, 439, 441, 442, 444, 446, 448, 449, 450, 453, 454, 455, 457, 458, 464, 465], "points_per_dim": [417, 431, 432, 438, 439], "polar": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 223, 442, 444, 446, 464, 465], "poli": 417, "polici": 425, "polycollect": 417, "polym": 456, "polynomi": [108, 109], "polynomialkernel": 444, "polytop": 444, "popul": 422, "popular": [454, 456, 461], "posit": [13, 16, 94, 332, 384, 444, 451, 454, 455], "posixpath": 376, "possibl": [31, 44, 159, 213, 221, 222, 223, 242, 332, 347, 402, 416, 417, 422, 427, 442, 444, 447, 450, 451, 452, 453, 456, 457, 458, 459, 460, 462, 463, 465], "possibli": 450, "post": [455, 456], "post_hook": [332, 415, 416, 417], "posterior": [5, 6, 15, 18, 21, 31, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 289, 405, 444, 448, 461], "posterior_mean": [253, 425], "posterior_mod": 253, "posterior_stat": [31, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 444, 450], "posteriorlist": 260, "posteriorstandarddevi": [425, 448], "postprocess": 341, "potassium": [400, 401, 402, 404, 405], "potenti": [215, 442, 443, 444, 445, 450, 451, 454, 455, 458, 465], "power": [109, 447, 451, 457], "pph3": [400, 401, 402], "pr": [444, 445], "practic": [448, 454, 457], "pre": [159, 185, 269, 418, 443, 444, 445], "pre_hook": [332, 415], "precis": [57, 185, 213, 312, 358, 370, 371, 390, 444, 464], "precomput": 145, "predefin": [376, 450, 457], "predict": [31, 79, 207, 253, 255, 257, 262, 266, 280, 282, 284, 286, 442, 444, 448, 449, 455, 460, 461, 463, 464], "predictor": 288, "prefer": [31, 447, 453, 455, 459], "prefix": 342, "preliminari": 463, "prepar": [417, 445, 447, 465], "preprocess": 444, "presenc": [197, 443, 444], "present": [72, 94, 121, 126, 131, 133, 215, 316, 317, 332, 404, 425, 444, 451, 460, 465], "preset": [266, 273, 276, 278, 444], "pressur": [412, 419, 420, 434, 435, 436, 442, 451], "pretrain": [262, 418, 440], "pretti": 358, "pretty_print_df": [422, 444], "prevent": [158, 231, 232, 332, 443, 444, 445], "previou": [185, 416, 417, 444, 450, 452, 463], "previous": [312, 400, 401, 402, 404, 412, 449, 450], "price": 456, "primari": 450, "primarili": 448, "principl": [422, 425, 461], "print": [246, 358, 378, 400, 401, 402, 404, 405, 407, 408, 412, 415, 419, 420, 422, 423, 425, 430, 431, 432, 434, 435, 436, 442, 444, 458, 465], "print_parameter_names_hook": 415, "printer_inst": 415, "prior": [105, 106, 107, 108, 109, 110, 111, 112, 116, 170, 171, 172, 173, 174, 175, 176, 253, 276, 413, 442, 443, 444], "priori": [451, 459, 463], "privat": [444, 446], "probabilist": 448, "probability_of_improv": 417, "probabilityofimprov": [416, 417], "probabl": [7, 19, 21, 405, 414, 416, 440, 444], "problem": [75, 422, 423, 425, 438, 439, 444, 445, 450, 455, 459], "problemat": [336, 443, 456], "proce": [244, 404, 452], "procedur": [448, 463], "proceed": 463, "process": [31, 99, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 355, 384, 405, 415, 422, 425, 438, 439, 444, 445, 448, 449, 450, 451, 452, 453, 455, 456, 459, 463], "prod": 413, "prod_constraint": 413, "prod_i": 455, "produc": [121, 126, 127, 131, 133, 246, 442, 444, 445, 452, 460], "product": [58, 115, 215, 221, 222, 223, 328, 409, 440, 442, 444, 447, 451, 453, 464, 465], "product_paramet": [221, 422, 458], "productkernel": 444, "programmat": 422, "progress": [31, 183, 417, 444, 453], "prohibit": 448, "project": [417, 442, 444, 452], "promin": 447, "promis": [416, 449], "proper": 444, "properli": [26, 427, 443, 458], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 129, 131, 133, 138, 139, 140, 142, 143, 145, 147, 148, 150, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 220, 221, 253, 255, 257, 260, 262, 266, 269, 273, 276, 278, 280, 282, 284, 286, 296, 298, 301, 302, 304, 321, 322, 363, 383, 387, 444, 445, 451, 453, 456], "proport": 439, "propos": 450, "protobuf": 444, "protocol": [178, 179, 258, 268, 336, 444], "prototyp": 446, "provid": [13, 15, 16, 31, 45, 94, 98, 127, 145, 156, 159, 179, 185, 186, 189, 190, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 234, 238, 242, 244, 246, 248, 250, 253, 255, 257, 262, 266, 276, 278, 280, 282, 284, 286, 316, 328, 332, 344, 348, 349, 354, 357, 359, 384, 385, 399, 400, 401, 402, 415, 422, 428, 430, 431, 432, 435, 438, 439, 442, 444, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463], "prune": [12, 13, 14, 16, 17], "prune_baselin": [12, 13, 14, 16, 17], "pstd": [6, 444, 448], "pubchem": 150, "pubchemfingerprint": 150, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 129, 131, 133, 138, 139, 140, 142, 143, 145, 147, 148, 150, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 296, 298, 301, 302, 304, 319, 321, 322, 363, 383, 387, 444, 445], "publicli": 447, "publish": 444, "pull": [425, 444], "punish": 8, "pure": [8, 10, 15, 180, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 215, 250, 261, 385, 431, 444, 464], "purerecommend": [182, 184, 185, 186, 187, 189, 195, 202, 444], "purpl": 428, "purpos": [15, 415, 416, 419, 425, 442, 443, 445, 447, 453, 459, 465], "push": [44, 445], "put": [422, 425, 452, 456], "puzzl": 442, "py": [278, 410, 412, 413, 444, 452], "py310": [410, 412, 413], "py312": 445, "pyarrow": 444, "pydant": 444, "pydoclint": [444, 445], "pydocstyl": 445, "pylint": 444, "pymatgen": 443, "pypi": [442, 444], "pyplot": [400, 402, 417, 428], "pyproject": 444, "pytest": [444, 445], "python": [30, 322, 333, 401, 420, 435, 436, 442, 443, 444, 445, 450, 452, 459], "python3": [410, 412, 413], "python310": 443, "pytorch": 444, "pyupgrad": 444, "q": [108, 288, 289, 405, 449], "qei": [9, 405, 435, 436, 444], "qkg": [10, 444], "qlogei": [11, 405, 444], "qlogexpectedimprov": 405, "qlognehvi": [13, 16], "qlognei": [14, 444], "qlognoisyexpectedhypervolumeimprov": [444, 455], "qlognparego": 444, "qnegintegratedposteriorvari": 448, "qnehvi": 16, "qnei": [17, 444], "qnipv": [15, 444, 448], "qnoisyexpectedhypervolumeimprov": 444, "qpi": [19, 405], "qposteriorstandarddevi": 448, "qpstd": [18, 444, 448], "qsimpleregret": 21, "qsr": [20, 444], "qt": 21, "qthompsonsampl": [425, 444], "quadrat": [112, 399, 428], "qualiti": 445, "quantif": 463, "quantifi": [425, 448, 463], "quantil": [31, 253, 255, 256, 257, 262, 266, 280, 282, 284, 286, 450], "quantiti": [31, 55, 450, 452, 454, 455, 461, 465], "quantum": 145, "qucb": [22, 405, 444, 448], "queri": [180, 190, 242, 244, 246, 428, 442, 450, 452, 453, 460], "question": [445, 450, 463], "quickli": 451, "qupperconfidencebound": 448, "qvarucb": 444, "r": [44, 400, 401, 402, 404, 405], "radial": 110, "radiu": [150, 444, 456], "rais": [13, 15, 16, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 94, 98, 127, 135, 158, 159, 164, 165, 185, 186, 195, 197, 213, 215, 221, 227, 228, 231, 232, 244, 246, 250, 253, 255, 257, 261, 262, 263, 266, 280, 282, 284, 286, 293, 317, 330, 332, 335, 337, 340, 344, 345, 347, 348, 349, 351, 356, 357, 378, 384, 385, 396, 397, 415, 416, 417, 432, 443, 444, 445, 449, 457], "rand": 419, "random": [15, 111, 213, 215, 244, 246, 248, 285, 286, 347, 383, 384, 385, 399, 400, 401, 402, 405, 416, 417, 419, 423, 425, 428, 439, 442, 444, 448, 456, 457, 460, 465], "random_campaign": 399, "random_forest": [286, 405], "random_se": [244, 248, 416, 460], "randomforestmodel": 420, "randomforestsurrog": [405, 444, 461], "randomli": [197, 210, 399, 401, 428, 448, 454, 457], "randomrecommend": [399, 400, 401, 402, 405, 410, 411, 412, 413, 415, 416, 417, 423, 425, 427, 444, 449, 457], "rang": [44, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 296, 347, 348, 399, 407, 408, 410, 411, 412, 413, 417, 422, 425, 427, 430, 431, 432, 439, 442, 444, 451, 458, 459, 460, 462, 465], "rank": 462, "rare": 444, "rastrigin": [407, 408, 431, 432], "rate": [171, 253, 425], "rather": [434, 443, 448, 459], "ration": 112, "ravel": [428, 438, 439], "raw": [197, 459], "rbf": 110, "rbfkernel": 444, "rdf": 150, "rdffingerprint": 150, "rdkit": [150, 410, 412, 413, 444, 451, 456], "rdkit2ddescriptor": [150, 401, 410, 412, 413, 444], "rdkit2ddescriptorsfingerprint": 150, "rdkitfingerprint": 150, "re": [416, 431, 432, 445, 457], "reach": [306, 308, 427], "reachabl": 452, "reactant": [454, 456], "reaction": [401, 404, 442, 451, 454, 456, 463], "reactor": [449, 463], "reactora": 463, "reactorb": 463, "reactorc": 463, "read": [145, 215, 376, 401, 404, 442, 444, 445], "read_excel": [400, 401, 402, 416], "readabl": [220, 358, 367, 434, 444, 446, 447, 459], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 244, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 445, 449], "readm": [444, 445], "reagent": [451, 456], "real": [363, 442, 450, 462], "realist": 460, "realiz": [242, 460], "reason": [42, 204, 205, 206, 207, 401, 431, 444, 447, 448, 449, 451, 452, 456, 460], "reassembl": 459, "rebas": 445, "rec": [410, 411, 412, 413, 427, 449, 450], "rec_finish": 449, "rec_next": 449, "rec_par": 428, "rec_pend": 449, "rec_y0": 428, "rec_y1": 428, "receiv": [447, 452, 459], "recip": 445, "recipi": 447, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 73, 81, 82, 94, 139, 142, 143, 145, 153, 156, 158, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 244, 258, 260, 261, 312, 347, 349, 351, 399, 400, 401, 402, 403, 407, 408, 410, 411, 412, 413, 415, 416, 417, 423, 425, 427, 428, 435, 436, 438, 439, 440, 441, 442, 444, 445, 448, 452, 454, 456, 460, 461, 463, 464, 465], "recommendation_orig": 434, "recommendation_recr": 434, "recommended_arm_idx": 425, "recommender_with_hook": 416, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 94, 182, 184, 185, 186, 187, 192, 258, 260, 415, 417, 441, 444, 449], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 363, 442, 450, 452, 459], "record": [31, 312, 313, 442, 452, 463], "recreat": [273, 434, 459], "recreate_model": 420, "recurs": [182, 184, 185, 186, 187, 325, 326], "red": 428, "redesign": 444, "redistribut": 447, "reduc": [156, 417, 425, 438, 439, 453, 456], "reduct": 464, "ref": 442, "refactor": 444, "refer": [13, 16, 242, 278, 331, 347, 356, 370, 400, 401, 402, 405, 407, 408, 410, 411, 412, 413, 415, 417, 419, 420, 422, 427, 431, 432, 434, 443, 444, 450, 454, 455, 456, 457, 458, 459, 460, 461, 463], "referenc": 445, "reference_point": [13, 16], "refin": [416, 442, 444, 450, 453], "reflect": [189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 417, 444, 445, 448, 451, 456], "regard": [34, 40, 407, 408, 445, 447], "regardless": 461, "regim": [444, 454], "region": 160, "regist": [332, 414, 416], "register_custom_architectur": 444, "register_hook": [414, 415, 416, 417, 444], "registr": 444, "regress": 280, "regressor": 419, "regret": [20, 21], "regroup": 444, "regular": [21, 158, 290, 430, 443, 444, 449, 463], "reinstal": 442, "rel": [13, 16, 44, 244, 348, 451, 455], "relat": [55, 121, 126, 128, 131, 133, 146, 215, 233, 300, 315, 432, 438, 439, 441, 442, 444, 450, 451, 452, 463], "relationship": [438, 439, 442, 445, 455, 463], "relative_perc": 349, "relative_threshold": [44, 444, 451], "releas": [442, 444], "relev": [53, 94, 246, 356, 357, 411, 422, 444, 445, 450, 451, 453, 463, 465], "reli": [443, 444, 455], "reliabl": 456, "remain": [56, 158, 187, 250, 307, 399, 405, 410, 411, 412, 413, 422, 425, 427, 432, 434, 438, 439, 447, 456, 459, 460], "remain_switch": [187, 444], "remaind": 385, "remind": 444, "remot": 445, "remov": [52, 55, 56, 215, 221, 422, 445, 451, 458], "renam": [401, 438, 439, 444, 445], "render": [94, 419], "reoccur": 463, "reorder": 444, "reorgan": 444, "repeat": [425, 444, 445, 449, 450], "repetit": [248, 405, 416], "rephras": 451, "replac": [431, 432, 444, 445], "replic": [253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 444, 459, 464], "repo": 444, "report": [179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 425, 443], "repositori": [401, 442, 445], "repr": 419, "repres": [13, 16, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 114, 115, 145, 215, 250, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 344, 359, 363, 367, 384, 399, 422, 423, 425, 428, 435, 436, 442, 444, 447, 450, 455, 456, 458, 460, 465], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 337, 339, 344, 347, 358, 363, 378, 410, 411, 412, 413, 419, 421, 427, 434, 444, 449, 450, 456, 459, 460, 464, 465], "reproduc": [416, 425, 428, 444, 447, 464], "reproduct": 447, "request": [31, 81, 82, 127, 185, 186, 187, 228, 253, 255, 256, 257, 262, 266, 269, 280, 282, 284, 286, 310, 351, 384, 385, 428, 441, 444, 449, 450, 453], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 45, 51, 80, 187, 221, 293, 332, 404, 415, 416, 419, 423, 425, 427, 431, 435, 441, 442, 443, 444, 445, 447, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465], "rerun": 419, "reserv": [442, 445], "reset_index": 438, "reshap": 428, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 411, 413, 422, 459], "resolv": 341, "resort": [290, 445, 459, 465], "resource_track": 443, "resp": [216, 402, 432], "respect": [31, 197, 216, 244, 248, 311, 316, 347, 422, 423, 445, 450, 451, 453, 454, 455, 459, 460, 461, 462, 465], "respond": 441, "respons": [182, 184, 185, 186, 187, 447, 450, 457], "restart": [185, 197], "restor": 459, "restr": 21, "restrain": 456, "restrict": [215, 221, 242, 248, 250, 410, 423, 444, 453, 460, 463, 464], "result": [10, 13, 16, 31, 156, 158, 221, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 347, 355, 400, 401, 402, 404, 419, 420, 422, 423, 425, 427, 428, 430, 438, 439, 442, 444, 446, 447, 448, 450, 451, 452, 454, 456, 457, 459, 460, 463, 464, 465], "result_baselin": [438, 439], "result_fract": 439, "results_interrupt": 416, "results_uninterrupt": 416, "retain": [447, 451], "retrain": [261, 262, 461], "retriev": [215, 242, 324, 325, 326, 340, 445, 460], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 94, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 121, 122, 124, 126, 127, 131, 133, 135, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 160, 161, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 199, 202, 204, 205, 206, 207, 209, 210, 213, 215, 217, 218, 221, 222, 223, 224, 226, 227, 228, 231, 232, 234, 235, 236, 238, 240, 241, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 263, 266, 269, 270, 274, 280, 282, 284, 286, 288, 289, 290, 292, 293, 296, 298, 304, 306, 307, 308, 310, 311, 312, 313, 316, 317, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 339, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 367, 372, 373, 374, 376, 377, 378, 384, 385, 387, 392, 393, 394, 395, 396, 397, 399, 410, 416, 417, 419, 422, 425, 428, 438, 444, 450, 451, 460, 461, 465], "return_std": 419, "reus": [187, 444], "reuse_last": 185, "reveal": [417, 423, 439], "review": 445, "revis": [444, 447], "reward": [8, 425], "rework": 444, "rewrit": 444, "rff": 111, "rffkernel": 444, "rh": [45, 47, 48, 407, 408, 423, 451], "right": [45, 176, 356, 363, 400, 402, 411, 425, 442, 443, 445, 447, 451, 453, 455, 456, 462], "right_df": 356, "rihana": 446, "rim": 446, "risk": [8, 443, 447, 450], "roam": 443, "robust": [442, 444, 463], "robustli": 290, "role": [444, 445, 450, 454, 455, 460, 462, 464], "room": [417, 450], "root": [401, 442, 445, 451], "round": [358, 407, 419, 420, 451], "roundtrip": [444, 459], "rout": 459, "routin": 44, "row": [13, 16, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 127, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 246, 312, 316, 317, 348, 351, 355, 356, 358, 374, 400, 402, 410, 411, 412, 413, 422, 423, 427, 434, 444, 450, 453, 458, 460], "rowei": 463, "roya": 446, "royalti": 447, "rq": 112, "rqkernel": 444, "ruff": [444, 445], "rule": [415, 444], "run": [244, 248, 400, 401, 402, 416, 417, 438, 439, 442, 443, 444, 445, 450, 453, 456, 459, 460, 465], "run_full_initial_data": 400, "run_impute_mod": 402, "runner": [410, 412, 413], "runtim": [370, 443], "runtimeerror": [31, 185, 415], "rv": 425, "s3": 444, "s41586": [278, 354], "safe": [444, 445, 450], "safeti": 332, "sai": 451, "said": 445, "sake": 422, "same": [55, 135, 187, 221, 227, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 327, 405, 416, 419, 420, 422, 425, 428, 434, 443, 444, 451, 452, 453, 459, 460, 461, 463], "sampl": [10, 15, 21, 44, 197, 209, 210, 213, 313, 382, 383, 384, 385, 400, 405, 410, 411, 412, 413, 425, 427, 428, 430, 434, 439, 442, 444, 446, 454, 464], "sample_from_full_factori": [213, 444], "sample_inactive_paramet": 44, "sample_uniform": [213, 428, 430, 444, 460], "sampler": [405, 410, 411, 412, 413, 427, 434], "samples_full_factori": [213, 444], "samples_random": [213, 444], "sampling_algorithm": [383, 448], "sampling_fract": [15, 448], "sampling_method": [15, 448], "sampling_n_point": [15, 448], "sampling_percentag": [197, 457], "satisfi": [40, 41, 42, 221, 407, 408, 422], "save": [376, 400, 402, 419, 444, 460], "savefig": [400, 402, 428], "sca": 428, "scalar": [12, 126, 427, 442, 444, 450, 455, 459], "scale": [116, 172, 173, 174, 175, 176, 213, 215, 221, 387, 427, 428, 438, 444, 448, 455], "scalekernel": 444, "scaler": 444, "scaling_bound": [213, 215, 221], "scatter": [94, 96], "scenario": [250, 399, 400, 401, 402, 416, 422, 438, 439, 449, 451, 455, 463, 464, 465], "scene": [455, 460, 461], "schema": 450, "schembl15068049": [400, 401, 402], "scheme": [444, 451], "scienc": [442, 446], "scientif": [444, 463], "scikit": [150, 442, 444, 446, 456], "scipi": [374, 417, 425, 444], "scm": 444, "scope": 399, "screen": [327, 463], "script": [341, 443, 444, 452, 465], "seaborn": [399, 400, 401, 402, 416, 438, 439], "seamlessli": 459, "search": [15, 26, 31, 38, 52, 55, 68, 73, 82, 86, 138, 139, 140, 142, 143, 145, 152, 153, 156, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 221, 225, 244, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 312, 356, 357, 399, 402, 404, 406, 409, 410, 411, 412, 413, 415, 416, 417, 425, 427, 429, 434, 439, 444, 446, 449, 450, 451, 452, 453, 454, 457, 459, 460, 464], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 94, 138, 139, 140, 142, 143, 145, 152, 153, 156, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 216, 220, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 399, 401, 404, 415, 416, 417, 419, 420, 422, 423, 425, 428, 430, 434, 435, 436, 438, 440, 442, 444, 450, 451, 452, 453, 454, 456, 458, 459, 460, 465], "searchspace1": 430, "searchspace2": 430, "searchspace3": 430, "searchspace_ful": 453, "searchspace_json": 459, "searchspace_reduc": 453, "searchspacetyp": [189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 215, 405, 410, 411, 412, 413, 416, 417, 427, 434, 458], "secfp": 150, "secfpfingerprint": 150, "second": [355, 372, 374, 419, 420, 427, 428, 436, 438, 451, 452, 454], "secondari": [442, 452], "section": [442, 444, 445, 447, 459], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 166, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 220, 221, 244, 248, 250, 253, 255, 257, 258, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 296, 298, 304, 309, 330, 336, 349, 355, 360, 363, 387, 400, 401, 402, 407, 408, 415, 416, 420, 423, 432, 441, 442, 445, 450, 452, 453, 454, 455, 456, 459, 460, 464], "seed": [244, 248, 380, 381, 416, 417, 425, 428, 442, 444, 465], "seek": [427, 455], "seem": [370, 436, 443], "seen": 448, "select": [6, 40, 41, 42, 70, 74, 80, 182, 184, 185, 186, 187, 190, 197, 207, 209, 253, 255, 257, 262, 266, 280, 282, 284, 286, 307, 355, 384, 405, 411, 412, 422, 423, 425, 432, 442, 444, 448, 450, 451, 454, 456, 457, 459, 461], "select_recommend": [182, 184, 185, 186, 187, 444], "selectivity_mean": 450, "selectivity_mod": 450, "selectivity_q_0": 450, "selectivity_std": 450, "self": [332, 345, 392, 393, 394, 395, 415, 416, 417, 425, 445], "sell": 447, "semant": [444, 459], "sens": [57, 131, 332, 336, 355, 451, 456, 461], "sent": 447, "sentinel": [320, 321], "separ": [248, 250, 290, 330, 387, 388, 417, 441, 444, 445, 447, 459], "sequenc": [31, 41, 45, 114, 115, 126, 131, 142, 143, 145, 156, 164, 185, 186, 213, 215, 221, 222, 223, 226, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 312, 316, 317, 332, 333, 342, 345, 350, 356, 357, 360, 374, 450, 455, 457], "sequenti": [184, 185, 186, 187, 197, 405, 410, 411, 412, 413, 427, 434, 444, 457], "sequential_continu": [197, 444, 457], "sequential_greedy_x": 444, "sequentialgreedyrecommend": 444, "sequentialmetarecommend": [186, 457], "sequentialstrategi": 444, "seri": [31, 40, 41, 42, 52, 139, 142, 143, 145, 153, 156, 296, 298, 304, 410, 422, 444, 451, 453], "serial": [186, 221, 238, 313, 419, 440, 443, 444, 445, 451, 457, 464], "serializ": [442, 451, 457], "serialize_datafram": 459, "serialized_df": 240, "serializetostr": 419, "serialmixin": [24, 31, 35, 40, 103, 121, 140, 168, 182, 213, 215, 221, 257, 260, 269, 296, 298, 304, 363, 444], "serv": [250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 356, 438, 439, 450, 451, 456], "servic": 447, "session": [262, 452, 459], "set": [13, 16, 31, 34, 42, 44, 55, 57, 64, 65, 94, 98, 156, 179, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 244, 248, 273, 311, 347, 354, 355, 376, 380, 381, 400, 401, 402, 403, 405, 410, 412, 415, 420, 421, 422, 423, 425, 427, 432, 441, 442, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465], "set_box_aspect": 417, "set_dash": 416, "set_random_se": [417, 425, 428, 465], "set_size_inch": [400, 402], "set_x_pend": 26, "set_xlabel": 417, "set_xtick": 417, "set_xticklabel": 417, "set_ylabel": 417, "set_ylim": 417, "set_zlabel": 417, "setpoint": 153, "setup": [244, 416, 451, 460, 465], "sever": [63, 159, 180, 399, 401, 405, 416, 419, 425, 427, 430, 439, 442, 444, 445, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463, 465], "sh": 454, "shall": [185, 349, 447, 455], "shap": [94, 442, 444, 446, 461, 464], "shap_valu": 461, "shape": [21, 213, 220, 302, 306, 308, 384, 428, 458, 465], "shapinsight": [92, 93, 95, 96, 444, 454], "shaplei": 94, "share": [253, 255, 257, 262, 266, 280, 282, 284, 286, 444, 447, 463], "shield": [278, 354, 401, 442, 456], "shift": 438, "shifted_hartmann": 438, "ship": [388, 452, 459], "shm": 443, "short": 445, "shortcut": [221, 458, 459], "shorten": [444, 445], "shot": 463, "should": [31, 44, 53, 94, 156, 187, 236, 248, 301, 316, 317, 347, 349, 353, 354, 358, 362, 363, 364, 372, 376, 410, 412, 416, 419, 422, 423, 432, 436, 442, 444, 445, 449, 450, 451, 458, 460, 461, 463, 465], "show": [94, 400, 401, 402, 404, 405, 410, 411, 412, 419, 420, 422, 425, 432, 434, 435, 436, 438, 439, 451, 454], "showcas": 457, "shown": [416, 425, 439, 444, 450], "shrink": 417, "shutdown": 443, "side": [45, 158, 307, 444], "sigma": [173, 174, 175, 176, 306, 427, 446], "signal": [67, 455], "signatur": [88, 293, 330, 332, 417, 444, 445, 451, 459], "significantli": [221, 425, 438, 439, 451], "silenc": 445, "silent": [444, 451], "similar": [186, 443, 451, 452, 454, 456, 457, 458, 459, 463, 465], "similarli": [428, 456], "simpl": [20, 21, 322, 401, 415, 416, 423, 442, 444, 450, 457, 460, 462, 463], "simpler": [445, 459], "simplest": [458, 461], "simplex": [221, 464], "simplex_paramet": [221, 422, 458], "simpli": [336, 415, 416, 445, 451, 453, 455, 456, 457, 458, 459, 462, 463], "simplic": 332, "simplifi": 445, "simul": [83, 349, 412, 417, 442, 444, 463, 464], "simulate_experi": [248, 250, 460], "simulate_scenario": [250, 399, 400, 401, 402, 416, 438, 439, 460], "simulate_transfer_learn": [438, 460], "simulationresult": 425, "simultan": [455, 461], "sinc": [57, 158, 215, 261, 332, 400, 407, 408, 420, 431, 434, 435, 436, 438, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 459, 460, 461, 463], "singer": 463, "singl": [21, 31, 40, 53, 94, 118, 133, 158, 213, 215, 221, 244, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 296, 298, 304, 363, 371, 378, 384, 390, 400, 401, 402, 411, 416, 422, 427, 438, 439, 442, 444, 450, 451, 452, 453, 454, 455, 456, 458, 461, 463, 464], "single_lin": 378, "single_y0": 428, "single_y1": 428, "singledispatch": 365, "singletargetobject": [31, 296, 298, 304, 400, 401, 402, 404, 405, 410, 411, 412, 413, 416, 419, 420, 434, 435, 436, 442, 444, 461, 464], "site": [410, 412, 413, 443], "situat": [158, 410, 412, 422, 443, 445, 449, 451, 455, 456, 459, 460, 463], "six": [422, 423], "size": [21, 101, 102, 103, 106, 108, 110, 111, 112, 185, 187, 215, 220, 221, 313, 367, 417, 419, 425, 431, 432, 438, 439, 450, 459, 460, 463, 465], "sk": 419, "skeleton": 444, "skfp": 150, "skicit": 444, "skin": 460, "skip": [218, 224, 444, 450], "skl2onnx": 419, "sklearn": [207, 370, 419, 443], "sklearnclusteringrecommend": [204, 205, 206, 444, 449], "slightli": [242, 401, 422, 460], "slot": [421, 425, 440, 444, 451], "slot1_amount": 422, "slot1_label": 422, "slot2_amount": 422, "slot2_label": 422, "slot3_amount": 422, "slot3_label": 422, "slow": [410, 412, 413, 458], "slowest": 444, "small": [314, 318, 407, 422, 438, 439, 444, 448, 456], "smaller": [31, 425, 450, 463], "smallest": [213, 356, 458], "smart": 442, "smartli": 422, "smile": [156, 339, 341, 342, 442, 456], "smoke": 444, "smoke_test": [376, 399, 400, 401, 402, 408, 410, 411, 413, 416, 417, 425, 428, 438, 439], "smooth": [106, 108, 176], "smoothedboxprior": 444, "smoother": 106, "sn": [399, 400, 401, 402, 416, 438, 439], "snippet": 452, "so": [31, 244, 261, 355, 402, 416, 422, 425, 431, 432, 442, 443, 450, 451, 452, 453, 455, 456, 457, 459, 462], "softwar": [442, 447], "sola": 446, "sole": 447, "solut": [75, 450, 451, 455, 458, 459, 463], "solv": [261, 411, 412, 422, 425], "solv_rdkit2ddesc": 412, "solvent": [400, 401, 402, 404, 405, 410, 411, 412, 413, 416, 420, 422, 423, 435, 436, 442, 451, 456], "solvent1": [422, 423], "solvent2": [422, 423], "solvent3": 422, "solvent4": 422, "solvent5": 422, "solvent8": 422, "solvent9": 422, "solvent_1": 451, "solvent_2": 451, "solvent_3": 451, "solvent_data": 416, "solvent_encoding1": 451, "solvent_encoding2": 451, "solvent_mordred_enc": 451, "solvent_rdkit2dd": [410, 413], "solvent_rdkit_enc": 451, "solvent_smil": 416, "solver": 460, "some": [53, 370, 400, 401, 402, 405, 410, 411, 412, 413, 416, 417, 419, 420, 422, 423, 428, 430, 431, 432, 434, 439, 449, 451, 452, 456, 457, 459, 460, 461, 465], "someth": [86, 436], "sometim": [451, 460], "somewhat": 452, "somewher": 450, "soon": [442, 450, 457], "sophist": [444, 453, 459], "sort": 161, "sourabh": 446, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 121, 122, 124, 126, 127, 129, 131, 133, 135, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 152, 153, 156, 158, 159, 160, 161, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 199, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 234, 235, 236, 238, 240, 241, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 263, 266, 268, 269, 270, 273, 274, 276, 278, 280, 282, 284, 286, 288, 289, 290, 292, 293, 296, 298, 301, 302, 304, 306, 307, 308, 310, 311, 312, 313, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 387, 395, 396, 397, 442, 443, 444, 445, 447], "space": [10, 15, 25, 26, 31, 38, 45, 52, 55, 68, 73, 77, 82, 86, 138, 139, 140, 142, 143, 145, 152, 153, 156, 179, 188, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 221, 224, 225, 244, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 312, 356, 384, 399, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 425, 427, 428, 429, 431, 434, 439, 440, 444, 446, 449, 451, 452, 453, 454, 456, 457, 459, 460, 464], "span": [61, 138, 139, 140, 142, 143, 145, 152, 153, 156, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 312, 415, 425, 430, 454], "speak": 463, "spec": [218, 224, 235], "special": [187, 442, 443, 447, 448, 453, 463, 465], "specif": [99, 159, 166, 207, 215, 218, 231, 248, 290, 324, 396, 415, 416, 431, 442, 445, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 463], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 53, 87, 98, 145, 156, 158, 159, 160, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 234, 235, 244, 246, 248, 258, 306, 307, 308, 316, 331, 340, 347, 350, 356, 357, 384, 385, 401, 405, 407, 419, 420, 425, 427, 438, 442, 443, 444, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463], "speed": [221, 410, 412, 413, 438, 439, 452, 458], "speed_fast": 458, "speed_norm": 458, "speed_slow": 458, "speedup": [444, 463], "spell": 445, "spellcheck": 444, "sphinx": [444, 445], "split": [189, 449], "sporad": 444, "spread": 462, "sqrt": 451, "squar": [425, 428, 451], "squash": 445, "stabil": [444, 452], "stabl": [99, 166, 309], "stage": [450, 451, 459], "stand": 444, "standard": [6, 18, 290, 419, 444, 450, 456], "star": 422, "start": [244, 399, 415, 416, 417, 423, 425, 428, 443, 444, 449, 456, 457, 459, 460, 463], "startup": 444, "stat": [31, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 310, 417, 423, 425, 450], "state": [182, 184, 185, 186, 187, 416, 422, 441, 444, 447, 450, 453], "stateless": [425, 441, 444, 453], "statement": [358, 431, 442, 447], "static": [13, 16, 215, 221, 266, 442, 445, 463], "statist": [31, 253, 255, 256, 257, 262, 266, 280, 282, 284, 286, 313, 439, 442, 444, 452, 464], "statu": 450, "std": [31, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286], "std_threshold": 290, "stem": [443, 463], "step": [218, 224, 244, 422, 425, 441, 442, 445, 450, 455, 459, 461], "sterl": 446, "steven": 401, "still": [159, 347, 416, 425, 449, 451, 452, 454, 456, 461, 463, 465], "stop": [414, 440, 444, 445], "stop_on_pi": 416, "stoppag": 447, "storag": [450, 452, 459], "store": [26, 140, 290, 296, 417, 422, 425, 442, 444, 450, 465], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 94, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 127, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 159, 160, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 195, 197, 204, 205, 206, 207, 213, 215, 220, 221, 234, 238, 248, 250, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 299, 304, 306, 307, 308, 310, 313, 316, 317, 324, 330, 331, 337, 339, 341, 342, 344, 347, 350, 353, 354, 358, 363, 367, 373, 376, 377, 378, 420, 425, 435, 436, 438, 439], "straightforward": [462, 463], "strategi": [15, 197, 215, 242, 399, 425, 444], "stream": [328, 444, 452], "streamingsequentialmetarecommend": [185, 457], "streamingsequentialstrategi": 444, "streamlin": 445, "streamlit": [442, 444], "streibel": 446, "strict": 330, "strictli": [420, 435, 436], "stride": 407, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 155, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 337, 341, 342, 344, 345, 353, 363, 378, 419, 434, 444, 450, 451, 456, 462, 464], "strip": [244, 402], "strong": 444, "strongli": 450, "strtobool": [444, 452], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 49, 124, 234, 442, 443, 444, 445, 446, 450, 456, 459], "studi": [180, 442, 454, 457, 464], "style": [118, 438, 444, 445], "sub": [207, 444, 454, 459], "subclass": [87, 234, 324, 326, 336, 405, 444, 445, 457, 459], "subfold": 452, "subgraph": 456, "subgroup": 423, "subject": 447, "sublicens": 447, "submiss": [444, 447], "submit": [26, 310, 312, 442, 445, 447], "subpackag": [444, 445, 460], "subplot": 428, "subselectioncondit": [411, 412, 444, 453, 464], "subsequ": [187, 215, 221, 248, 341, 441, 447, 450, 459, 461], "subset": [31, 121, 126, 131, 133, 156, 215, 327, 357, 384, 450, 451, 453, 456], "subspac": [26, 61, 189, 197, 212, 213, 215, 217, 219, 221, 407, 410, 411, 412, 413, 427, 430, 432, 434, 444, 451, 457, 459, 464, 465], "subspace_continu": 61, "subspace_json": 459, "subspacecontinu": [31, 61, 138, 152, 215, 217, 430, 444, 458], "subspacediscret": [31, 139, 142, 143, 145, 153, 156, 215, 217, 220, 410, 411, 412, 413, 422, 427, 434, 444, 458, 459, 465], "substanc": [150, 156, 340, 401, 404, 410, 412, 413, 423, 444, 451, 454, 456, 463], "substance_12": 451, "substance_3": 451, "substance_43": 451, "substance_data": 444, "substance_encod": 401, "substanceencod": [156, 340, 342, 410, 411, 412, 413, 444, 456], "substanceparamet": [400, 401, 402, 404, 405, 410, 411, 412, 413, 416, 420, 422, 435, 436, 442, 444, 451, 452, 454, 458, 464], "substanti": [156, 465], "substrat": 463, "subtyp": 459, "success": [298, 384, 425, 459], "success_valu": 298, "suffic": 445, "suffici": [416, 458, 459], "suggest": [454, 460], "suit": 445, "suitabl": [207, 221, 244, 337, 445, 448, 450, 456, 460, 461, 463], "sum": [59, 114, 221, 399, 409, 410, 411, 412, 416, 422, 423, 425, 428, 440, 451, 455, 458], "sum_": [451, 455], "sum_constraint": 422, "sum_constraint_1": 413, "sum_constraint_2": 413, "sum_toler": 422, "summar": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 139, 140, 142, 143, 145, 152, 153, 156, 296, 298, 304], "summari": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 139, 140, 142, 143, 145, 152, 153, 156, 296, 298, 304, 444, 445], "superior": 448, "supersed": 447, "support": [10, 31, 92, 93, 94, 95, 96, 186, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 370, 405, 410, 411, 412, 413, 416, 417, 419, 422, 427, 434, 442, 444, 445, 446, 447, 451, 454, 456, 457, 458, 460, 461], "supports_batch": 444, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 253, 255, 257, 262, 266, 280, 282, 284, 286, 444, 461], "supports_pending_experi": 444, "supports_transfer_learn": [253, 255, 257, 262, 266, 280, 282, 284, 286, 461], "suppos": [312, 451], "sure": [422, 430, 442, 445], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 74, 76, 94, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 195, 197, 204, 205, 206, 207, 213, 215, 221, 253, 255, 258, 260, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 410, 411, 412, 413, 417, 425, 427, 434, 440, 442, 444, 446, 450, 451, 454, 456, 457, 463, 464], "surrogate_model": [195, 197, 405, 417, 419, 420, 425, 435, 436, 444], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 94, 195, 197, 257, 260, 444], "svg": [376, 428], "sw": 411, "swiss": 446, "switch": [53, 183, 186, 187, 290, 405, 410, 411, 412, 413, 425, 427, 434, 442, 444, 451, 457], "switch1": 411, "switch2": 411, "switch2_left": 411, "switch2_right": 411, "switch_1": 451, "switch_2": 451, "switch_aft": [187, 435, 436, 457], "switzerland": 446, "sy": 443, "symmetri": 451, "syntax": [442, 444], "synthet": [407, 408, 417, 428, 438, 439], "system": [401, 425, 442, 443, 447, 452, 460, 463], "t": [288, 289, 329, 337, 400, 401, 402, 404, 405, 412, 417, 428, 438, 439, 441, 453, 456, 459, 460], "t1": [459, 460], "t2": 459, "t3": 459, "t_1": 455, "t_2": 455, "t_3": 455, "t_i": 455, "tab": 428, "tabl": [358, 444, 450, 451, 454], "tabular": 460, "tag": [442, 444, 459], "tailor": 450, "take": [8, 49, 106, 139, 153, 158, 159, 253, 255, 257, 262, 266, 276, 280, 282, 284, 286, 299, 415, 422, 444, 449, 450, 451, 455, 456, 457, 463], "taken": [185, 416, 444, 450, 453, 455], "tantamount": 448, "target": [12, 13, 16, 31, 77, 118, 121, 122, 126, 130, 131, 132, 133, 135, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 244, 245, 246, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 290, 298, 301, 302, 304, 332, 347, 350, 351, 357, 360, 372, 373, 379, 397, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 416, 417, 419, 420, 425, 431, 432, 434, 435, 436, 438, 439, 440, 442, 444, 449, 450, 452, 454, 459, 460, 461, 464], "target_1": [411, 412, 413, 427, 455, 462], "target_2": [427, 455, 462], "target_3": [427, 455], "target_3a": 462, "target_3b": 462, "target_a": 461, "target_b": 461, "target_cumbest": [399, 438, 439], "target_max": 450, "target_transform": 427, "targetmod": [304, 459, 462], "targetnam": 244, "targettransform": [304, 444, 462], "task": [143, 215, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 296, 298, 304, 425, 444, 450, 457, 459, 460, 463], "task_idx": [215, 444], "task_param": [438, 439, 460], "task_paramet": 459, "task_parameter_json": 459, "task_parameter_reconstruct": 459, "taskparamet": [228, 438, 439, 444, 453, 459, 460, 464], "tb": 465, "technic": [221, 449, 460, 463], "techniqu": [207, 457], "technologi": 446, "telemetri": [444, 446, 464], "tell": 311, "temp": [410, 412, 446], "temp_c": [400, 401, 402, 416], "temperatur": [400, 402, 404, 405, 410, 412, 415, 419, 420, 434, 451, 456, 458, 463], "temperature_resolut": 410, "temperature_valu": 416, "temporari": [117, 123, 198, 215, 381, 416, 444, 452, 459], "temporarili": [444, 465], "temporary_se": 465, "tempt": 463, "tenac": 444, "tend": 417, "tensor": [26, 45, 253, 288, 289, 350, 359, 363, 387, 389, 438, 444], "term": [109, 242, 416, 425, 445, 447, 450, 454, 458, 459, 460, 463], "termin": [416, 417, 443, 447], "terminologi": 464, "tert": [400, 401, 402, 404, 405], "test": [221, 244, 262, 347, 425, 438, 439, 442, 443, 444, 445, 450, 454, 460, 465], "test_funct": [407, 408, 417, 431, 432, 438, 439], "test_scenario": [400, 402], "testabl": [83, 244], "testfunct": [407, 408, 431, 432], "testfunctionclass": [407, 408, 431, 432], "text": [34, 377, 419, 428, 447, 451, 452, 455], "th": [317, 451], "than": [31, 65, 82, 153, 185, 186, 187, 197, 213, 215, 228, 317, 336, 351, 378, 385, 401, 412, 416, 423, 448, 451, 452, 454, 456, 459, 461], "thei": [159, 180, 190, 307, 353, 357, 405, 413, 416, 422, 425, 430, 444, 445, 449, 450, 451, 454, 456, 457, 458, 459, 462, 463, 465], "them": [38, 276, 348, 376, 405, 442, 443, 444, 445, 449, 451, 452, 453, 454, 456, 457, 459, 463], "theme": [376, 444], "theori": 447, "therebi": 221, "therefor": [44, 187, 253, 255, 257, 262, 266, 280, 282, 284, 286, 405, 443, 450, 459, 461, 463], "therein": 444, "thereof": 447, "thf": 451, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 159, 182, 184, 185, 186, 187, 189, 197, 204, 205, 206, 207, 213, 215, 221, 242, 246, 248, 250, 253, 255, 257, 258, 260, 261, 262, 266, 276, 280, 282, 284, 286, 290, 313, 316, 332, 333, 336, 341, 347, 349, 351, 352, 354, 356, 358, 376, 399, 415, 416, 417, 419, 420, 422, 423, 425, 428, 430, 434, 435, 436, 438, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465], "think": [425, 456], "third": [427, 447, 460], "thompson": [21, 446], "thomson": 21, "those": [63, 159, 187, 189, 242, 384, 405, 443, 447, 451, 460], "though": 463, "three": [401, 422, 423, 427, 428, 442, 450, 451, 454, 455, 457, 458, 463], "threshold": [42, 44, 145, 156, 158, 160, 187, 197, 290, 354, 407, 412, 413, 416, 422, 444, 451, 456], "thresholdcondit": [58, 59, 407, 412, 413, 422, 464], "through": [31, 215, 306, 316, 347, 357, 420, 422, 425, 427, 442, 444, 445, 447, 451, 455, 459, 460, 464], "throughout": 187, "throw": [341, 451], "thrown": [246, 402, 416, 435, 443, 455], "thu": [197, 332, 357, 400, 401, 407, 408, 410, 411, 412, 413, 419, 420, 422, 425, 427, 431, 432, 434, 443, 445, 450, 452, 453, 456, 457, 459, 460, 463, 465], "tick": 417, "tight_layout": 428, "time": [10, 197, 313, 385, 408, 415, 422, 425, 442, 444, 449, 450, 451, 453, 456, 459, 460, 461, 465], "timeout": [444, 452], "timer": 415, "titl": [428, 447], "tl": 438, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 416, 417, 444], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 363], "to_factori": [101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116], "to_fram": 399, "to_gpytorch": [101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 168, 170, 171, 172, 173, 174, 175, 176, 444], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 296, 298, 304, 363, 419, 420, 434, 450, 459], "to_keep": 355, "to_ndarrai": 363, "to_numpi": 428, "to_object": [296, 298, 304, 399, 407, 408, 417, 425, 428, 431, 432, 438, 439, 455, 460], "to_polar": [40, 41, 42], "to_searchspac": [138, 139, 140, 142, 143, 145, 152, 153, 156, 213, 221, 425, 430, 444, 453], "to_subspac": [138, 139, 142, 143, 145, 152, 153, 156, 444], "to_tensor": [363, 416, 417, 419, 444], "to_tupl": [363, 428], "togeth": [38, 69, 317, 405, 425, 432, 442, 444, 451], "toggl": 31, "toggle_discrete_candid": [31, 444, 453], "toler": [31, 42, 153, 221, 396, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 416, 419, 420, 422, 427, 431, 432, 434, 435, 436, 442, 444, 451], "tolist": 407, "toluen": 456, "toml": 444, "too": [407, 460, 463], "tool": [338, 444, 451, 459], "toolbox": 442, "top": [444, 445], "topic": 450, "topolog": 456, "topologicaltors": 150, "topologicaltorsionfingerprint": 150, "torch": [350, 363, 416, 417, 419, 438, 444], "toronto": 446, "tort": 447, "total": [186, 187, 384, 422, 423, 425, 458], "total_bas": 423, "total_phase_ag": 423, "toward": [170, 347, 451], "towel": 441, "tox": [410, 412, 413, 442, 444, 445], "tracebackexcept": 443, "track": [179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 221, 416, 447, 453], "trade": [8, 447, 455], "trademark": 447, "tradit": [401, 421, 422, 440, 442, 444], "train": [79, 94, 179, 185, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 250, 253, 255, 257, 258, 260, 261, 262, 266, 280, 282, 284, 286, 290, 418, 428, 438, 439, 444, 460], "train_i": 419, "train_x": 419, "training_funct": 439, "trajectori": [242, 399, 416, 425, 450, 460], "transfer": [249, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 405, 410, 411, 412, 413, 427, 434, 438, 440, 442, 444, 447, 456, 461, 464], "transform": [31, 79, 121, 126, 131, 133, 139, 140, 142, 143, 145, 153, 156, 213, 215, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 296, 298, 302, 304, 342, 350, 357, 360, 363, 364, 387, 410, 411, 412, 413, 434, 444, 447, 452, 456, 461, 462], "transform_rep_exp2comp": 444, "transit": 444, "translat": [38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 444, 447, 453, 456], "transmiss": 459, "transmit": 313, "travers": 444, "treasur": 464, "treat": [156, 160, 253, 255, 257, 262, 266, 280, 282, 284, 286, 401, 442, 451, 456, 462, 465], "tree": 444, "tremend": 401, "trend": 463, "tri": 458, "triangl": 308, "triangular": [302, 308, 427, 462], "tricki": 454, "tricyclohexylphosphin": [400, 401, 402], "trigger": [185, 316, 416, 420, 425, 444, 445, 449, 455, 459], "trivial": [269, 282, 455, 456, 461], "true": [6, 12, 13, 14, 16, 17, 31, 34, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 94, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 160, 197, 215, 266, 298, 307, 325, 326, 330, 336, 337, 355, 378, 396, 401, 405, 407, 408, 410, 411, 412, 413, 417, 419, 420, 422, 425, 427, 431, 432, 434, 435, 436, 438, 439, 444, 450, 451, 452, 453, 454, 456, 459], "truncat": [442, 452], "trust": [419, 452], "truth": 337, "truthi": 452, "try": [86, 347, 400, 401, 402, 416, 419, 420, 436, 443, 444, 465], "tune": 442, "tupl": [13, 16, 31, 41, 45, 101, 102, 103, 106, 108, 110, 111, 112, 114, 115, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 161, 213, 215, 220, 221, 289, 316, 323, 330, 333, 345, 347, 359, 363, 367, 387], "turn": [44, 213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 367, 430, 442, 443, 444, 451, 452], "turnaround": 460, "twice": [453, 455], "two": [13, 16, 34, 55, 64, 65, 127, 187, 197, 242, 317, 322, 350, 372, 384, 399, 400, 402, 415, 422, 425, 427, 428, 432, 438, 439, 441, 442, 444, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462], "twofold": 425, "twophasemetarecommend": [400, 402, 405, 410, 411, 412, 413, 416, 417, 419, 420, 425, 427, 432, 434, 435, 436, 442, 444, 457], "twophasestrategi": 444, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 122, 124, 126, 127, 131, 133, 135, 138, 139, 140, 142, 143, 145, 152, 153, 155, 156, 158, 159, 160, 161, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 199, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 221, 222, 223, 224, 226, 227, 228, 231, 232, 234, 235, 236, 238, 240, 241, 244, 246, 248, 250, 253, 255, 256, 257, 258, 260, 262, 263, 266, 269, 270, 274, 280, 282, 284, 286, 288, 289, 290, 292, 293, 296, 298, 299, 304, 306, 307, 308, 310, 311, 312, 313, 316, 317, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 339, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 363, 364, 365, 367, 369, 370, 372, 373, 374, 376, 377, 378, 384, 385, 387, 389, 392, 393, 394, 395, 396, 397, 401, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 423, 425, 427, 434, 435, 436, 442, 444, 445, 447, 448, 451, 454, 455, 456, 457, 458, 461, 463, 464], "typealia": 299, "typeerror": [31, 94, 98, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 332, 347, 348, 385, 396, 397, 416, 417], "typeguard": 329, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 159, 168, 170, 171, 172, 173, 174, 175, 176, 182, 184, 185, 186, 187, 213, 215, 221, 226, 234, 235, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 289, 296, 298, 304, 326, 327, 328, 329, 345, 350, 357, 363], "typic": [15, 332, 378, 401, 442, 449, 450, 454, 456, 459, 465], "typing_extens": 445, "typo": [444, 445], "u": [21, 399, 400, 401, 402, 415, 417, 422, 423, 425, 430, 439, 442, 448, 451, 455], "ucb": [8, 405, 444, 448, 459], "ultim": 445, "ultra": [435, 436], "un": 444, "unabl": 419, "unavail": 444, "unawar": 449, "unbound": [363, 415], "uncaught": 444, "uncertainti": [8, 15, 405, 464], "unchang": 158, "uncharacter": 463, "uncorrel": [354, 463], "undefin": [253, 453], "under": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 313, 357, 413, 417, 425, 428, 442, 443, 447, 449, 456], "underflow": 84, "underli": [31, 55, 416, 425, 442, 450, 454, 457, 459], "underscor": 444, "understand": [442, 463], "undesir": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 451, 453, 456, 465], "undo": 443, "unequ": 413, "unevenli": 456, "unexpect": 86, "unfinish": 449, "unfortun": 463, "unhandl": 444, "uniform": [213, 253, 348, 349, 444], "uniformli": 384, "uniniti": 336, "uninstal": [85, 442], "unintend": [89, 332, 444, 445], "unintention": 465, "union": [13, 16, 31, 127, 160, 244, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 306, 307, 308, 373, 432, 447, 458], "uniqu": [56, 135, 159, 422, 444, 456], "unit": [220, 367], "unknown": [186, 384, 399, 425, 444, 461, 463], "unlabel": 350, "unless": [442, 445, 447, 452, 456, 459], "unlik": [12, 13, 14, 16, 17, 422, 455, 465], "unlock": 464, "unmaintain": 444, "unmatch": 330, "unmatchedattributeerror": 330, "unmeasur": [244, 402], "unnecessari": [444, 450], "unpromis": 416, "unreach": 444, "unrealist": 460, "unrecogn": 347, "unrestrict": 332, "unsaf": 444, "unspecifi": [321, 444, 459], "unspecifiedtyp": 31, "unsqueez": [416, 417], "unstructur": [236, 459], "unstructure_bas": 234, "unsupport": [213, 246], "until": [182, 184, 185, 186, 187, 244, 425, 442, 460], "untouch": 348, "untransform": [31, 461], "unusedobjectwarn": [416, 444, 449], "unveil": 439, "unwant": 38, "up": [31, 221, 244, 246, 399, 400, 401, 402, 403, 410, 412, 415, 417, 421, 422, 423, 428, 432, 438, 439, 442, 443, 444, 448, 451, 455, 465], "updat": [31, 401, 404, 444, 445, 449], "upgrad": 444, "upon": [189, 269, 443, 444, 445, 451, 458, 461, 463], "upper": [8, 22, 160, 176, 215, 221, 306, 307, 308, 363, 405, 417, 427, 428, 438, 439, 444, 451, 462, 465], "upper_bound": [410, 411, 412, 413, 434, 458], "upper_threshold": 160, "upperconfidencebound": [22, 448, 459], "upstream": 445, "urg": 454, "url": [452, 463], "us": [15, 21, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 69, 73, 94, 106, 126, 127, 145, 150, 153, 156, 159, 179, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 221, 222, 223, 235, 244, 246, 248, 253, 255, 257, 262, 263, 266, 280, 282, 284, 286, 302, 312, 313, 319, 332, 333, 341, 342, 347, 349, 350, 356, 365, 369, 370, 376, 384, 389, 399, 407, 408, 414, 415, 416, 417, 418, 421, 422, 423, 430, 434, 435, 436, 438, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 462, 463, 464, 465], "usa": 446, "usabl": [336, 443, 444, 456, 459], "usag": [366, 442, 444, 451, 452, 457, 464], "use_comp_rep": [94, 98, 454], "use_torch": [350, 407, 408, 417, 431, 432, 438, 439], "user": [52, 53, 67, 80, 89, 145, 148, 253, 255, 257, 262, 266, 280, 282, 284, 286, 293, 310, 349, 404, 405, 410, 427, 436, 442, 443, 444, 445, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463], "userguid": 309, "usernam": [310, 444, 452], "userwarn": 443, "uses_shap_explain": 94, "usort": 444, "usr": 150, "usrcat": 150, "usrcatfingerprint": 150, "usrfingerprint": 150, "usual": [244, 400, 401, 402, 435, 443, 454, 456], "util": [31, 197, 213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 312, 319, 321, 322, 363, 383, 387, 399, 401, 404, 405, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 425, 427, 428, 431, 432, 438, 439, 442, 444, 448, 449, 454, 455, 456, 457, 459, 460, 461, 463, 464], "uv": 444, "v": 463, "val": [49, 124, 337, 438], "val_from_param1": 57, "val_from_param2": 57, "valid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 158, 159, 215, 218, 221, 224, 262, 351, 356, 410, 433, 435, 440, 443, 444, 445, 450, 451, 460], "validate_compat": 262, "validate_config": [31, 436, 444, 450], "validate_parameter_input": 31, "validate_target_input": 31, "valu": [6, 13, 16, 26, 31, 34, 40, 41, 42, 44, 45, 53, 55, 77, 94, 105, 106, 107, 108, 109, 110, 111, 112, 116, 121, 126, 127, 131, 133, 139, 142, 143, 145, 147, 148, 150, 153, 156, 158, 159, 160, 163, 164, 165, 187, 204, 205, 206, 207, 213, 215, 221, 222, 223, 242, 244, 246, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 298, 299, 301, 306, 307, 308, 313, 316, 320, 321, 327, 330, 337, 344, 347, 348, 349, 351, 353, 356, 357, 358, 363, 365, 372, 373, 374, 392, 393, 394, 395, 396, 397, 400, 401, 402, 404, 405, 407, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 425, 427, 428, 431, 432, 434, 435, 436, 438, 439, 442, 444, 445, 448, 450, 451, 452, 453, 454, 455, 462, 463, 464, 465], "valuabl": [457, 460], "valueerror": [13, 15, 16, 31, 44, 63, 64, 65, 94, 98, 127, 135, 158, 159, 164, 165, 213, 215, 221, 227, 244, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 293, 317, 330, 335, 337, 340, 344, 347, 349, 351, 356, 357, 378, 384, 385, 396, 397, 420, 432, 443], "var": [31, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 425, 464], "vari": [31, 221, 401, 455], "variabl": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 121, 126, 131, 133, 138, 139, 140, 142, 143, 145, 152, 153, 156, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 253, 255, 257, 262, 266, 280, 282, 284, 286, 296, 311, 313, 371, 376, 390, 431, 442, 444, 445, 451, 456, 457, 459, 461], "varianc": [8, 15, 105, 282, 352, 444, 448], "variance_initial_valu": 105, "variance_prior": 105, "variant": [405, 438, 454, 463], "variat": 428, "varieti": [431, 445, 459, 460], "variou": [363, 422, 429, 444, 449, 454, 457, 460], "varucb": 444, "vector": [34, 419, 444, 446, 455], "vendor": 456, "verbal": 447, "verbos": [420, 444], "veri": [410, 412, 427, 449, 452, 454, 456, 461, 465], "verifi": [336, 407, 410, 411, 412, 413, 422, 423, 430, 432, 434, 442, 445], "versa": [438, 463], "versatil": 457, "version": [215, 310, 370, 410, 412, 413, 422, 425, 430, 438, 439, 442, 443, 444, 445, 447, 459], "vert": 417, "via": [12, 15, 21, 30, 31, 44, 94, 187, 197, 209, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 312, 324, 332, 347, 355, 402, 408, 415, 416, 419, 430, 442, 444, 445, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 462, 463, 464], "via_init": 459, "via_json": 459, "viabl": [82, 427], "vice": [438, 463], "view": [213, 221, 417, 458], "view_init": 417, "violat": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 444], "viridi": 417, "virtual": 445, "visibl": 444, "visual": [401, 438, 439, 454, 462], "volum": 463, "vpn": [442, 452], "vsa": 150, "vsafingerprint": 150, "vulner": [444, 445], "w_i": 455, "wa": [15, 70, 71, 74, 76, 77, 85, 89, 159, 187, 253, 255, 257, 262, 266, 280, 282, 284, 286, 344, 347, 351, 385, 401, 443, 444, 445, 447, 452, 454, 456, 459, 463], "wai": [215, 415, 422, 423, 429, 430, 438, 441, 442, 452, 453, 454, 456, 458, 459, 460, 461, 462, 463, 465], "wall": 10, "want": [52, 405, 410, 422, 425, 432, 439, 442, 445, 451, 452, 453, 454, 456, 457, 459, 461, 462], "warn": [66, 333, 410, 412, 413, 416, 431, 432, 444, 445], "warranti": [442, 447], "watch": 415, "water": [410, 411, 412, 413, 422, 451, 456], "waterfal": [94, 96, 444], "we": [26, 242, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 417, 419, 420, 422, 423, 425, 427, 428, 430, 431, 432, 434, 435, 436, 438, 439, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 461, 462, 463, 464, 465], "web": 445, "weber": 446, "weight": [118, 126, 127, 374, 427, 455, 459], "weight_kdalton": 456, "welcom": 445, "well": [310, 376, 405, 416, 421, 441, 445, 450, 451, 454, 456, 460], "were": [31, 347, 402, 439, 443, 444, 449, 451, 452, 456, 458], "what": [159, 185, 215, 242, 347, 387, 399, 419, 427, 436, 441, 445, 448, 450, 454, 456, 463, 464], "whatsnew": 322, "when": [13, 16, 31, 44, 53, 86, 153, 158, 160, 185, 186, 187, 195, 197, 215, 253, 255, 257, 262, 263, 266, 280, 282, 284, 286, 293, 320, 321, 330, 332, 336, 347, 350, 378, 385, 410, 411, 413, 415, 420, 422, 423, 425, 427, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465], "whenev": [26, 185, 347, 459], "where": [13, 16, 21, 26, 34, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 179, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 242, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 316, 347, 384, 400, 401, 402, 405, 410, 412, 422, 425, 442, 443, 444, 445, 447, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463], "wherea": 459, "wherev": [447, 449], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 98, 138, 139, 140, 142, 143, 145, 152, 153, 156, 197, 213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 311, 349, 363, 422, 444, 447, 450, 452, 453, 462], "which": [13, 15, 16, 31, 40, 41, 42, 44, 89, 94, 121, 126, 131, 133, 159, 160, 179, 180, 182, 184, 185, 186, 187, 189, 192, 195, 197, 202, 204, 205, 206, 207, 209, 210, 215, 221, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 312, 313, 332, 336, 347, 349, 354, 356, 358, 372, 373, 376, 387, 399, 401, 405, 408, 415, 416, 422, 423, 425, 430, 431, 432, 436, 438, 439, 442, 443, 444, 445, 447, 448, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465], "while": [215, 218, 224, 416, 425, 427, 439, 443, 444, 447, 448, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463], "whilst": 347, "whim": 150, "whimfingerprint": 150, "whole": 447, "whom": 447, "whose": [127, 158, 159, 215, 246, 327, 330, 350, 399, 415, 422, 449, 460], "wide": 460, "wider": 462, "width": 358, "wieczorek": 446, "william": 463, "willing": 450, "win": [253, 425], "win_rat": 425, "window": [444, 452], "winerror": 443, "wise": 374, "wish": 459, "within": [31, 138, 139, 140, 142, 143, 145, 152, 153, 156, 158, 396, 430, 447, 451, 452, 456, 461, 463, 464, 465], "without": [186, 438, 439, 442, 444, 447, 449, 450, 451, 452, 456, 460, 463, 465], "won": 456, "work": [26, 287, 316, 350, 410, 412, 413, 416, 427, 434, 436, 442, 444, 445, 446, 447, 451, 452, 457, 459, 460], "workaround": [443, 444], "workflow": [419, 442, 450, 459, 464], "world": [442, 450], "worldwid": 447, "worst": [13, 16, 244, 246, 248, 402], "would": [56, 84, 158, 159, 242, 244, 250, 261, 415, 422, 425, 442, 445, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 463, 465], "wrap": [101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 266, 270, 288, 289, 332, 442, 444, 455], "wrapper": [1, 25, 248, 250, 262, 333, 438, 439, 442, 457], "write": [442, 443, 447, 459], "written": [431, 432, 445, 447], "wrong": [436, 444], "wrongli": 443, "www": [442, 447], "x": [26, 122, 160, 217, 244, 246, 270, 323, 329, 333, 345, 359, 372, 387, 399, 400, 401, 402, 410, 411, 412, 413, 416, 417, 422, 427, 434, 438, 439, 442, 444, 458, 461], "x0": [428, 458], "x0_mesh": 428, "x1": [428, 458], "x1_mesh": 428, "x2": 458, "x_": [399, 407, 408, 430, 431, 432], "x_1": [407, 408, 430, 431, 432, 451], "x_2": [407, 408, 430, 431, 432, 451], "x_3": [407, 408, 430, 431, 432, 451], "x_4": [407, 408, 430, 431, 432], "x_5": 432, "x_6": 432, "x_i": 451, "x_pend": 26, "xlabel": 428, "xlsx": [400, 401, 402, 416], "xpho": [400, 401, 402], "xxxx": 443, "xylen": [400, 401, 402, 404, 405], "y": [278, 337, 354, 372, 399, 400, 401, 402, 416, 417, 419, 422, 438, 439, 442, 463], "y0": 428, "y0_mesh": 428, "y1": 428, "y1_mesh": 428, "ye": 337, "year": 463, "yet": [26, 444, 449, 457], "yield": [6, 106, 256, 400, 401, 402, 404, 405, 410, 416, 419, 420, 422, 432, 434, 435, 436, 442, 444, 448, 454, 455, 459], "yield_cumbest": [400, 401, 402, 416], "yield_mean": 450, "yield_mod": 450, "yield_q_0": 450, "yield_std": 450, "ylabel": 428, "yml": 444, "you": [31, 52, 401, 405, 407, 415, 420, 422, 425, 431, 432, 435, 441, 442, 443, 445, 447, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465], "your": [401, 415, 422, 425, 432, 441, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 456, 459, 460, 461, 462, 463, 465], "your_branch_nam": 445, "yourself": 425, "z": [417, 442], "zdir": 417, "zero": [44, 63, 65, 158, 160, 170, 352, 422, 425, 451, 463], "zip": [416, 417], "\u00b5fmt": 444, "\u0161o\u0161i\u0107": [442, 446]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 445, "0": 444, "01": 444, "02": 444, "03": 444, "04": 444, "05": 444, "06": 444, "07": 444, "08": 444, "09": 444, "1": 444, "10": 444, "11": 444, "12": 444, "13": 444, "14": 444, "15": 444, "16": 444, "17": 444, "19": 444, "2": 444, "2022": 444, "2023": 444, "2024": 444, "2025": 444, "21": 444, "23": 444, "24": 444, "27": 444, "28": 444, "29": 444, "3": 444, "31": 444, "4": 444, "5": 444, "6": 444, "7": 444, "8": 444, "9": 444, "A": 442, "For": 456, "On": 454, "The": [425, 435, 442, 453, 459, 460, 463], "abbrevi": 459, "acqf": 2, "acquisit": [1, 2, 23, 25, 27, 28, 29, 405, 449], "acquisitionfunct": 24, "action": 463, "activ": [448, 456], "activate_paramet": 158, "ad": [404, 444, 449, 450, 463, 465], "add_fake_measur": 347, "add_noise_to_perturb_degenerate_row": 348, "add_parameter_nois": 349, "addendum": 427, "addit": 422, "additivekernel": 114, "advanc": [442, 461], "altern": 459, "amount": 422, "an": 425, "appli": 453, "arm": [424, 425], "arm64": 443, "arrai": 460, "arrays_to_datafram": 350, "assembli": 459, "asynchron": 449, "attr": 445, "augment": [315, 316, 317], "auto": 461, "automat": 459, "avail": [405, 461], "avx": 443, "back": 442, "backtest": [398, 438], "bandit": [252, 424, 425], "base": [23, 33, 100, 120, 122, 137, 167, 178, 181, 191, 194, 201, 254, 256, 295, 400, 401, 402, 407, 408, 422, 423, 432, 453, 460], "basesequentialmetarecommend": 184, "basic": [104, 169, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 403, 404, 450, 452, 454, 459], "basickernel": 101, "batch": 450, "batchify_ensemble_predictor": 288, "batchify_mean_var_predict": 289, "batteri": 442, "bayb": [0, 1, 2, 23, 25, 27, 28, 29, 30, 32, 33, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 104, 113, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 130, 132, 134, 135, 136, 137, 141, 144, 146, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 177, 178, 180, 181, 183, 188, 190, 191, 193, 194, 196, 198, 199, 200, 201, 203, 208, 211, 212, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259, 261, 263, 264, 265, 267, 270, 271, 272, 274, 275, 277, 279, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 404, 442, 445], "bayesian": [193, 194, 196, 198, 199, 442, 457], "bayesianlinearsurrog": 280, "bayesianrecommend": 195, "bell_transform": 306, "bernoulli": 425, "betabernoullimultiarmedbanditsurrog": 253, "betaprior": 170, "binari": [297, 299], "binarytarget": 298, "black": [399, 425], "block_deserialization_hook": 231, "block_serialization_hook": 232, "bo": 454, "boolean": [334, 335, 336, 337], "both": 434, "botorch": [196, 431], "botorchrecommend": 197, "bound": [415, 455, 458], "box": [399, 425], "break": 444, "build": [425, 458], "bytes_to_human_read": 367, "cach": [450, 452], "call": 453, "callabl": [407, 408, 432, 460], "campaign": [30, 31, 399, 400, 401, 402, 405, 407, 408, 410, 411, 413, 416, 419, 420, 427, 428, 431, 432, 434, 435, 450], "candid": [450, 453], "cardinalityconstraint": 34, "case": 425, "catch_constant_target": 290, "categor": 141, "categoricalencod": 147, "categoricalparamet": [142, 456], "caution": 453, "challeng": 451, "chang": 444, "changelog": 444, "check_if_in": 335, "chemic": 442, "chemistri": [338, 339, 340, 341, 342], "choicevalu": 299, "class": 445, "classproperti": 322, "clone": 442, "closer_el": 372, "closest_el": 373, "cluster": [203, 457], "code": 445, "columntransform": 387, "compar": 434, "compon": 415, "composit": [113, 259, 461], "compositekernel": 102, "compositesurrog": 260, "comput": [451, 454], "condit": [39, 40, 451], "config": [435, 436, 450], "configur": [419, 420, 435, 453, 455, 459], "constraint": [32, 33, 35, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 406, 407, 408, 409, 410, 411, 412, 413, 422, 423, 451, 453, 458, 465], "construct": [400, 401, 402, 407, 408, 422, 431, 432, 455, 458], "constructor": [458, 459], "continu": [43, 212, 406, 408, 422, 430, 448, 451, 456, 458, 463, 465], "continuouscardinalityconstraint": [44, 451], "continuousconstraint": 36, "continuouslinearconstraint": [45, 451], "continuouslinearequalityconstraint": 47, "continuouslinearinequalityconstraint": 48, "continuousnonlinearconstraint": 37, "continuousparamet": 138, "contribut": 445, "contributor": 446, "control": [450, 453], "conveni": 455, "convent": 445, "convers": [343, 344, 345, 455, 459], "convert": [233, 419], "convert_acqf": 28, "convert_bound": 364, "convert_to_float": 323, "copi": 459, "core": [214, 217, 218, 230, 231, 232, 233, 234, 235, 236, 243, 244, 265, 272, 274], "cpu": 443, "creat": [399, 400, 401, 402, 405, 407, 408, 410, 411, 412, 413, 419, 420, 427, 430, 431, 434, 435, 438, 439, 450, 458], "create_example_plot": 376, "create_fake_input": 351, "creation": [400, 401, 402, 422, 423, 450, 465], "current": 461, "custom": [144, 261, 263, 399, 410, 414, 415, 418, 419, 420, 461], "customdiscreteparamet": [145, 456], "customencod": 148, "customonnxsurrog": 262, "data": [400, 401, 402, 458, 463], "datafram": [346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 407, 408, 432, 458, 459, 460], "de": [434, 459], "default": [275, 458, 459], "defaultkernelfactori": 276, "defin": [399, 407, 408, 415, 416, 417, 427, 428, 431, 432, 436, 438, 439, 442], "definit": 416, "depend": [411, 442, 456], "deprec": [46, 47, 48, 49, 123, 124, 444], "deprecationerror": 67, "descript": 427, "deseri": 459, "deserialize_datafram": 240, "design": [442, 445], "desir": [125, 127, 450], "desirabilityobject": [126, 455], "develop": 445, "df_apply_dependency_augment": 316, "df_apply_permutation_augment": 317, "df_drop_single_value_column": 352, "df_drop_string_column": 353, "df_uncorrelated_featur": 354, "dictionari": [435, 436], "differ": 405, "dimens": 432, "discret": [50, 219, 222, 223, 224, 409, 410, 411, 412, 422, 431, 450, 451, 456, 458], "discretecardinalityconstraint": [51, 451], "discreteconstraint": 38, "discretecustomconstraint": [52, 451], "discretedependenciesconstraint": [53, 451], "discreteexcludeconstraint": [54, 451], "discretelinkedparametersconstraint": [55, 451], "discretenolabelduplicatesconstraint": [56, 451], "discreteparamet": 139, "discretepermutationinvarianceconstraint": [57, 451], "discreteproductconstraint": [58, 451], "discretesamplingmethod": 383, "discretesumconstraint": [59, 451], "discuss": 425, "disk": 452, "do": 460, "docstr": 445, "document": 420, "domin": 455, "dtypefloatnumpi": 369, "dtypefloatonnx": 370, "dtypefloattorch": 389, "dummi": 319, "duplic": 422, "dure": 465, "dynam": 453, "edbo": 277, "edbokernelfactori": 278, "effici": 465, "emptysearchspaceerror": 68, "encod": 456, "end": 442, "enum": [128, 146, 300], "environ": 452, "equival": 459, "estim": 465, "exampl": [400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 419, 420, 427, 431, 432, 434, 435, 436, 440, 442, 454], "except": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "exceptiongroup": 443, "exclud": 453, "exclus": [412, 413, 453], "expect": 463, "expectedimprov": 3, "experi": [410, 411, 412, 413, 419, 420, 427, 434, 442, 449, 460], "experiment": [450, 452, 454], "expir": 444, "explain": [92, 454], "explicit": 458, "extend": 445, "extract": 461, "fake": 465, "faq": 441, "farthest_point_sampl": 384, "featur": 452, "field": 459, "file": [435, 436], "filter_df": 355, "find_subclass": 324, "finite_float": 392, "fix": [443, 444], "float": 452, "fpsrecommend": 209, "fraction_to_float": 344, "from": [435, 442, 444, 450, 458, 459], "full": [400, 401, 402, 458], "function": [399, 400, 401, 402, 405, 407, 408, 416, 427, 431, 432, 445, 449], "further": 450, "fuzzy_row_match": 356, "gammaprior": 171, "gaussian_process": [264, 265, 267, 270, 271, 272, 274, 275, 277], "gaussianmixtureclusteringrecommend": 204, "gaussianprocesspreset": 273, "gaussianprocesssurrog": 266, "gener": [438, 439, 445, 457], "geom_mean": 374, "get": [404, 450, 453], "get_base_structure_hook": 234, "get_baseclass": 325, "get_canonical_smil": 339, "get_fingerprint_class": 340, "get_model_params_valid": 292, "get_parameters_from_datafram": 159, "get_subclass": 326, "get_transform_object": 357, "get_transform_paramet": 226, "get_user_detail": 310, "github": 442, "global": 448, "group_duplicate_valu": 327, "guid": 464, "halfcauchyprior": 172, "halfnormalprior": 173, "hilberts_factori": 328, "hook": [414, 415, 416, 417], "hybrid": [407, 432, 451], "imaginari": 425, "implicit": 455, "import": [399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 415, 417, 419, 420, 422, 423, 425, 427, 428, 430, 431, 432, 434, 435, 436, 438, 439, 454], "improv": 417, "includ": 442, "inclus": 400, "incompatibilityerror": 69, "incompatibleacquisitionfunctionerror": 70, "incompatibleargumenterror": 71, "incompatibleexplainererror": 72, "incompatiblesearchspaceerror": 73, "incompatiblesurrogateerror": 74, "incomplet": 402, "incorpor": 413, "indent": 377, "independentgaussiansurrog": 255, "index": 442, "indic": 442, "infeasibilityerror": 75, "infiniteintervalerror": 362, "influenc": 465, "inform": [450, 457], "initi": [400, 405], "insight": [90, 91, 92, 93, 95, 96, 97, 98, 454], "instal": [442, 443], "instanc": 415, "instead": [419, 420], "instruct": 452, "internet": 452, "interpret": 454, "interrupt": 416, "interv": [361, 362, 363, 364, 365], "invalidsurrogatemodelerror": 76, "invalidtargetvalueerror": 77, "invari": 422, "invok": 459, "irrelev": 463, "is_abstract": 336, "is_all_inst": 329, "is_cardinality_fulfil": 61, "is_en": 311, "is_inact": 160, "is_shap_explain": 97, "issu": [442, 443], "iter": [407, 408, 419, 420, 427], "json": [450, 459], "kernel": [99, 100, 103, 104, 113], "kernel_factori": [267, 270], "kernelfactori": 268, "kmeansclusteringrecommend": 205, "known": [442, 443], "label": 456, "leak": 443, "learn": [437, 439, 448, 460, 463], "licens": [442, 447], "like": 456, "limit": [454, 461, 462], "linear": [279, 408], "linear_transform": 307, "linearkernel": 105, "link": 420, "local": [442, 448], "logexpectedimprov": 4, "lognormalprior": 174, "look_up_target": 246, "lookup": [245, 246, 400, 401, 402, 407, 408, 416, 432, 438, 439, 460], "loop": [399, 400, 401, 402, 438, 439, 442], "maco": 443, "maintain": [442, 446], "make_explainer_for_surrog": 98, "make_gp_from_preset": 274, "mandatori": 455, "manual": [410, 411, 412, 413], "mark": 449, "match": 462, "match_attribut": 330, "maternkernel": 106, "max": 462, "mean": 460, "meanpredictionsurrog": 282, "measur": [404, 419, 420, 450, 465], "mechan": [400, 401, 402, 460], "memori": [366, 367, 465], "memorys": 220, "meta": [180, 181, 183, 453, 457], "metarecommend": 182, "method": [415, 445, 448], "min": 462, "minimumcardinalityviolatedwarn": 78, "miss": 460, "mixin": 237, "mixtur": [421, 422, 423], "mode": [427, 462], "model": [405, 419, 420, 422, 423, 425, 454, 461], "modelnottrainederror": 79, "monitor": 417, "monkeypatch": [415, 416, 417], "multi": [424, 425, 426, 427, 461], "multipl": 460, "naiv": [188, 281], "naivehybridspacerecommend": 189, "name": 456, "name_to_smil": 341, "necessari": [400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 419, 420, 427, 431, 432, 434, 435, 436], "nest": 459, "ngboost": 283, "ngboostsurrog": 284, "nois": 465, "nomcacquisitionfunctionerror": 80, "non": 455, "non_inf_float": 393, "non_nan_float": 394, "non_shap_explain": 93, "none": 460, "nonpredict": [200, 201, 203, 208], "nonpredictiverecommend": 202, "nonstring_to_tupl": 345, "norecommenderslefterror": 81, "normalprior": 175, "notenoughpointslefterror": 82, "nothingtosimulateerror": 83, "numer": [151, 303, 368, 369, 370, 371, 372, 373, 374], "numericalcontinuousparamet": [152, 456], "numericaldiscreteparamet": [153, 456], "numericaltarget": [304, 462], "numericalunderflowerror": 84, "object": [117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 132, 134, 135, 400, 401, 402, 405, 407, 408, 410, 411, 412, 413, 427, 431, 434, 438, 439, 442, 450, 455, 459], "onnx": 419, "optim": [399, 428, 438, 439, 442, 450, 465], "option": [442, 456], "optionalimporterror": 85, "order": [422, 452], "output": [419, 420, 461], "overrid": 445, "packag": [442, 452], "page": 454, "pamclusteringrecommend": 206, "parallel": 450, "paramet": [136, 137, 140, 141, 144, 146, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 400, 401, 402, 405, 420, 422, 423, 450, 454, 456, 458, 465], "parameter_cartesian_prod_panda": 222, "parameter_cartesian_prod_polar": 223, "parameterencod": 149, "pareto": [130, 428], "paretoobject": [131, 455], "partial": [25, 449], "partialacquisitionfunct": 26, "pass": 420, "pend": 449, "perform": [400, 427, 431, 432], "periodickernel": 107, "perman": 453, "permut": 422, "piecewisepolynomialkernel": 108, "plainkernelfactori": 269, "plot": [375, 376, 377, 378, 399, 416, 417, 454], "point": 452, "polar": [443, 452], "polynomialkernel": 109, "posterior": 450, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 256, "pre": 419, "precis": 452, "predict": 450, "preset": [271, 272, 274, 275, 277], "pretrain": 419, "pretty_print_df": 358, "print": [410, 411, 413, 427], "prior": [166, 167, 168, 169], "probabilityofimprov": 7, "probabl": 417, "problem": [399, 416, 428, 443], "product": [413, 458], "productkernel": 115, "pull": 445, "pure": [190, 191, 193, 194, 196, 198, 199, 200, 201, 203, 208, 448, 457], "purerecommend": 192, "pycharm": 443, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedhypervolumeimprov": 13, "qlognoisyexpectedimprov": 14, "qlognparego": 12, "qnegintegratedposteriorvari": 15, "qnoisyexpectedhypervolumeimprov": 16, "qnoisyexpectedimprov": 17, "qposteriorstandarddevi": 18, "qprobabilityofimprov": 19, "qsimpleregret": 20, "qthompsonsampl": 21, "quick": 442, "qupperconfidencebound": 22, "random": [379, 380, 381], "random_forest": 285, "randomforestsurrog": 286, "randomrecommend": 210, "rbfkernel": 110, "recommend": [177, 178, 180, 181, 183, 188, 190, 191, 193, 194, 196, 198, 199, 200, 201, 203, 208, 404, 405, 419, 420, 431, 432, 434, 449, 450, 453, 457], "recommenderprotocol": 179, "reduct": 448, "refers_to": 331, "regist": 415, "register_custom_architectur": 263, "register_hook": 332, "relat": 443, "remov": 444, "replic": 461, "represent": [422, 423, 454, 458], "reproduc": 465, "request": 445, "restrict": 458, "result": [399, 416, 417, 449], "rffkernel": 111, "role": 463, "row": 452, "rqkernel": 112, "run": [399, 407, 408, 425], "sampl": [208, 448, 457], "sample_numerical_df": 385, "sampling_algorithm": [382, 384, 385], "scalar": [127, 129, 461], "scale": 386, "scalekernel": 116, "scenario": [247, 248, 460], "scope": 452, "search": [422, 423, 430, 438, 442, 448, 458, 465], "searchspac": [211, 212, 214, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 400, 402, 405, 407, 408, 410, 411, 412, 413, 427, 429, 431, 432, 439], "searchspacematchwarn": 86, "searchspacetyp": 216, "see": 463, "select_constructor_hook": 235, "semaphor": 443, "sequenti": [183, 450], "sequential_greedi": [198, 199], "sequentialgreedyrecommend": 199, "sequentialmetarecommend": 185, "serial": [229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 433, 434, 450, 459], "serialize_datafram": 241, "serialmixin": 238, "set": [399, 416, 417, 428, 430, 438, 439], "set_random_se": 380, "setup": [404, 410, 411, 412, 413, 419, 420, 422, 423, 425, 427, 428, 434], "shap": [91, 92, 93, 95, 96, 97, 98, 454], "shap_explain": 95, "shap_plot": 96, "shapinsight": 94, "signatur": 415, "simplex": [422, 458], "simul": [242, 243, 244, 245, 246, 247, 248, 249, 250, 399, 400, 401, 402, 416, 425, 438, 439, 460], "simulate_experi": 244, "simulate_scenario": 248, "simulate_transfer_learn": 250, "singl": [132, 428, 460], "singletargetobject": [133, 455], "sklearnclusteringrecommend": 207, "slot": [422, 423], "smile": 155, "smiles_to_fingerprint_featur": 342, "smoothedboxprior": 176, "some": [407, 408, 427], "sort_paramet": 161, "space": [422, 423, 430, 432, 438, 442, 448, 450, 458, 465], "span": 422, "stage": 419, "start": 442, "statist": 450, "stop": 416, "str_to_acqf": 29, "strategi": [405, 442], "streamingsequentialmetarecommend": 186, "string": [435, 459], "strtobool": 337, "structure_constraint": 49, "structure_object": 124, "studi": 461, "sub": 448, "subselectioncondit": [41, 451], "subspac": 458, "subspacecontinu": 213, "subspacediscret": 221, "substanc": [154, 155, 422, 442], "substanceencod": 150, "substanceparamet": [156, 456], "suggest": 443, "suitabl": 405, "sum": 413, "support": [443, 449], "surrog": [251, 252, 254, 256, 257, 259, 261, 263, 264, 265, 267, 270, 271, 272, 274, 275, 277, 279, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 405, 418, 419, 420, 461], "surrogateprotocol": 258, "synchron": 445, "synthet": [431, 432], "tabl": [400, 401, 402, 438, 439, 442], "target": [294, 295, 296, 297, 299, 300, 303, 305, 306, 307, 308, 415, 426, 427, 428, 455, 462, 465], "targetmod": 301, "targettransform": 302, "task": [438, 439], "taskparamet": [143, 456, 463], "technologi": 463, "telemetri": [309, 310, 311, 312, 313, 442, 452], "telemetry_record_recommended_measurement_percentag": 312, "telemetry_record_valu": 313, "temporary_se": 381, "terminologi": [422, 459, 460, 463], "test": [407, 408, 431, 432], "theoret": 422, "thi": [400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 427, 431, 432, 454], "thresholdcondit": [42, 451], "through": 463, "to_kernel_factori": 270, "to_object": 122, "to_searchspac": 217, "to_str": 378, "to_tensor": 359, "to_tupl": 333, "toggl": 453, "toler": 450, "tool": 445, "torch": [388, 389, 390, 443], "tradit": 423, "train": 419, "trajectori": 453, "transfer": [437, 439, 460, 463], "transfer_learn": [249, 250], "transform": [305, 306, 307, 308, 427], "transform_target_column": 360, "treasur": 463, "triangular_transform": 308, "trigger": [415, 417], "two": 436, "twophasemetarecommend": 187, "type": 459, "uncertainti": 448, "unidentifiedsubclasserror": 87, "uninstal": 452, "uninterrupt": 416, "unlock": 463, "unmatchedattributeerror": 88, "unreleas": 444, "unspecifi": 320, "unspecifiedtyp": 321, "unstructure_bas": 236, "unusedobjectwarn": 89, "upperconfidencebound": 8, "us": [400, 401, 402, 404, 405, 410, 411, 412, 413, 419, 420, 425, 427, 431, 432, 458, 459, 460, 461], "usag": 454, "use_fallback_constructor_hook": 365, "user": 464, "util": [27, 28, 29, 60, 61, 157, 158, 159, 160, 161, 239, 240, 241, 287, 288, 289, 290, 314, 315, 316, 317, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 465], "v": [415, 422, 428, 443, 450, 453], "valid": [62, 63, 64, 65, 134, 135, 162, 163, 164, 165, 225, 226, 227, 228, 291, 292, 293, 391, 392, 393, 394, 395, 396, 397, 420, 436], "validate_cardinality_constraint_parameter_bound": 63, "validate_cardinality_constraints_are_nonoverlap": 64, "validate_constraint": 65, "validate_custom_architecture_cl": 293, "validate_decorrel": 163, "validate_is_finit": 164, "validate_not_nan": 395, "validate_paramet": 228, "validate_parameter_input": 396, "validate_parameter_nam": 227, "validate_searchspace_from_config": 218, "validate_simplex_subspace_from_config": 224, "validate_target_input": 397, "validate_target_nam": 135, "validate_unique_valu": 165, "valu": [456, 458, 459, 460], "variabl": 452, "varname_numpy_use_single_precis": 371, "varname_torch_use_single_precis": 390, "verif": [410, 411, 412, 413, 422, 423, 436], "verifi": 408, "via": 454, "visual": 428, "we": 460, "what": 460, "window": 443, "within": 458, "without": 443, "workflow": [445, 449], "wrap": [407, 408, 432], "write": 445}})