Search.setIndex({"alltitles": {"Acquisition Function Values": [[444, "acquisition-function-values"]], "Acquisition function": [[399, "acquisition-function"]], "AcquisitionFunction": [[24, null]], "Active Learning": [[442, null]], "Added": [[438, "added"], [438, "id6"], [438, "id16"], [438, "id20"], [438, "id26"], [438, "id33"], [438, "id42"], [438, "id48"], [438, "id52"], [438, "id59"], [438, "id64"], [438, "id70"], [438, "id76"], [438, "id80"], [438, "id84"], [438, "id88"], [438, "id93"], [438, "id97"], [438, "id100"], [438, "id104"], [438, "id108"], [438, "id112"], [438, "id115"], [438, "id119"], [438, "id123"], [438, "id127"], [438, "id131"], [438, "id137"], [438, "id140"]], "Addendum: Description of transformation functions": [[421, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[459, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[457, null]], "Adding Measurements": [[444, "adding-measurements"]], "Adding Partial Results": [[443, "adding-partial-results"]], "AdditiveKernel": [[115, null]], "Advanced Example: Chemical Substances": [[436, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[419, "an-imaginary-use-case"]], "Array-Based Callables": [[454, null]], "Asynchronous Workflows": [[443, null]], "Auto-Replication": [[455, null]], "Automatic field conversion": [[453, "automatic-field-conversion"]], "Available Models": [[455, "available-models"]], "Available recommenders suitable for initial recommendation": [[399, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[399, "available-surrogate-models"]], "Backtesting": [[392, null], [432, null]], "BaseSequentialMetaRecommender": [[181, null]], "Basic Creation": [[444, "basic-creation"]], "Basic Instructions": [[446, "basic-instructions"]], "Basic Usage": [[448, "basic-usage"]], "Basic example for using BayBE": [[398, null]], "Basic string assembly": [[453, "basic-string-assembly"]], "BasicKernel": [[102, null]], "Basics": [[397, null], [444, "basics"]], "Batch Optimization": [[444, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[436, null]], "Bayesian Recommenders": [[451, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[277, null]], "BayesianRecommender": [[192, null]], "Bernoulli Multi Armed Bandit": [[419, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[250, null]], "BetaPrior": [[167, null]], "BinaryTarget": [[295, null]], "BotorchRecommender": [[194, null]], "Bound methods": [[409, "bound-methods"]], "Breaking Changes": [[438, "breaking-changes"], [438, "id25"], [438, "id32"]], "Building from the Product of Parameter Values": [[452, "building-from-the-product-of-parameter-values"], [452, "id2"]], "Building the Model": [[419, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[437, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[444, "caching-of-recommendations"]], "Campaign": [[31, null]], "Campaign Setup": [[422, "campaign-setup"]], "Campaign Stopping": [[410, null]], "Campaigns": [[444, null]], "Candidate Control in Discrete Spaces": [[444, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[447, null]], "CardinalityConstraint": [[34, null]], "CategoricalEncoding": [[144, null]], "CategoricalParameter": [[139, null], [450, "categoricalparameter"]], "Caution": [[447, null]], "Changed": [[438, "changed"], [438, "id2"], [438, "id4"], [438, "id7"], [438, "id11"], [438, "id17"], [438, "id21"], [438, "id27"], [438, "id34"], [438, "id39"], [438, "id43"], [438, "id49"], [438, "id53"], [438, "id56"], [438, "id60"], [438, "id65"], [438, "id71"], [438, "id77"], [438, "id81"], [438, "id85"], [438, "id89"], [438, "id94"], [438, "id98"], [438, "id101"], [438, "id105"], [438, "id109"], [438, "id113"], [438, "id116"], [438, "id120"], [438, "id124"], [438, "id128"], [438, "id132"]], "Changelog": [[438, null]], "Clustering Recommenders": [[451, "clustering-recommenders"]], "Code Design": [[439, "code-design"]], "ColumnTransformer": [[381, null]], "Comparing recommendations in both objects": [[428, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[455, "composite-surrogates"]], "CompositeKernel": [[103, null]], "CompositeSurrogate": [[257, null]], "Computational Challenges": [[445, null]], "Condition": [[40, null]], "Conditions": [[445, "conditions"]], "Constraint": [[35, null]], "Constraint Setup": [[416, "constraint-setup"]], "Constraints": [[445, null]], "Constraints Continuous": [[400, null]], "Constraints Discrete": [[403, null]], "Constraints Setup": [[417, "constraints-setup"]], "Construct the campaign and run some iterations": [[401, "construct-the-campaign-and-run-some-iterations"], [402, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[452, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[394, "constructing-campaigns-for-the-simulation-loop"], [395, "constructing-campaigns-for-the-simulation-loop"], [396, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[452, "constructing-from-a-dataframe"], [452, "id1"], [452, "id3"]], "Constructing hybrid recommenders": [[426, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[425, "constructing-the-campaign-and-performing-a-recommendation"], [426, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[426, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[445, "continuous-constraints"]], "Continuous Parameters": [[450, "continuous-parameters"]], "Continuous Subspaces": [[452, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[44, null], [445, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[36, null]], "ContinuousLinearConstraint": [[45, null], [445, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[37, null]], "ContinuousParameter": [[135, null]], "Contributing to BayBE": [[439, null]], "Contributors": [[440, null], [440, "id1"]], "Convenience construction and implicit conversion": [[449, null]], "Conventions for attrs classes": [[439, "conventions-for-attrs-classes"]], "Convert model to onnx": [[413, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[413, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[414, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[413, "create-campaign"]], "Creating Continuous Search Spaces": [[424, null]], "Creating a Campaign": [[444, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[452, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[429, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[404, "creating-and-printing-the-campaign"], [405, "creating-and-printing-the-campaign"], [407, "creating-and-printing-the-campaign"], [421, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[393, "creating-the-campaigns"]], "Creating the Objective": [[395, "creating-the-objective"]], "Creating the Optimization Objective": [[432, "creating-the-optimization-objective"], [433, "creating-the-optimization-objective"]], "Creating the Search Space": [[432, "creating-the-search-space"]], "Creating the Searchspace": [[433, "creating-the-searchspace"]], "Creating the campaign": [[399, "creating-the-campaign"], [414, "creating-the-campaign"], [428, "creating-the-campaign"]], "Creating the constraint": [[404, "creating-the-constraint"], [406, "creating-the-constraint"]], "Creating the constraints": [[405, "creating-the-constraints"], [407, "creating-the-constraints"]], "Creating the objective": [[421, "creating-the-objective"]], "Creating the recommender object": [[399, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[394, "creating-the-searchspace-and-the-objective"], [396, "creating-the-searchspace-and-the-objective"], [401, "creating-the-searchspace-and-the-objective"], [402, "creating-the-searchspace-and-the-objective"], [404, "creating-the-searchspace-and-the-objective"], [405, "creating-the-searchspace-and-the-objective"], [406, "creating-the-searchspace-and-the-objective"], [407, "creating-the-searchspace-and-the-objective"], [425, "creating-the-searchspace-and-the-objective"]], "Creation From a JSON Config": [[444, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[455, null]], "Custom Hooks": [[408, null]], "Custom Surrogates": [[412, null]], "CustomDiscreteParameter": [[142, null], [450, "customdiscreteparameter"]], "CustomEncoding": [[145, null]], "CustomONNXSurrogate": [[259, null]], "Dataframe deserialization": [[453, "dataframe-deserialization"]], "DefaultKernelFactory": [[273, null]], "Defining config dictionaries": [[430, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[410, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[411, "defining-the-hook"]], "Defining the Hooks": [[409, "defining-the-hooks"]], "Defining the Optimization Objective": [[436, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[393, "defining-the-optimization-problem"], [422, "defining-the-optimization-problem"]], "Defining the Search Space": [[436, "defining-the-search-space"]], "Defining the Tasks": [[432, "defining-the-tasks"], [433, "defining-the-tasks"]], "Defining the targets": [[421, "defining-the-targets"]], "Defining the test function": [[401, "defining-the-test-function"], [402, "defining-the-test-function"], [425, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[426, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[438, "deprecations"], [438, "id23"], [438, "id30"], [438, "id37"], [438, "id46"], [438, "id62"], [438, "id68"], [438, "id74"], [438, "id91"]], "Deserialization from configuration strings": [[453, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[123, null], [449, "desirabilityobjective"]], "Developer Tools": [[439, "developer-tools"]], "Discrete Constraints": [[445, "discrete-constraints"]], "Discrete Parameters": [[450, "discrete-parameters"]], "Discrete Subspaces": [[452, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[416, null]], "DiscreteCardinalityConstraint": [[51, null], [445, "discretecardinalityconstraint"]], "DiscreteConstraint": [[38, null]], "DiscreteCustomConstraint": [[52, null], [445, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[53, null], [445, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[54, null], [445, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[55, null], [445, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[56, null], [445, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[136, null]], "DiscretePermutationInvarianceConstraint": [[57, null], [445, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[58, null]], "DiscreteSamplingMethod": [[377, null]], "DiscreteSumConstraint": [[59, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[445, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[419, "discussion"]], "Disk Caching": [[446, "disk-caching"]], "Dummy": [[316, null]], "Duplicate Substances": [[416, "duplicate-substances"]], "Dynamic Exclusion": [[447, "dynamic-exclusion"]], "EDBOKernelFactory": [[275, null]], "EXPERIMENTAL: Floating Point Precision": [[446, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[459, null]], "Environment Variables": [[446, null]], "Equivalent copies": [[453, null]], "Estimation with Constraints": [[459, null]], "Example Searchspace and objective parameters": [[399, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[401, null]], "Example for creating campaigns from configs": [[429, null]], "Example for custom parameter passing in surrogate models": [[414, null]], "Example for full simulation loop using a table-based lookup mechanism": [[395, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[396, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[394, null]], "Example for linear constraints in a continuous searchspace": [[402, null]], "Example for surrogate model with a custom pretrained model": [[413, null]], "Example for the serialization of a campaign": [[428, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[425, null]], "Example for using custom constraints in discrete searchspaces": [[404, null]], "Example for using dependency constraints in discrete searchspaces": [[405, null]], "Example for using different strategies": [[399, null]], "Example for using exclusion constraints in discrete searchspaces": [[406, null]], "Example for using exclusion constraints incorporating sums and products": [[407, null]], "Example for using synthetic test functions in hybrid spaces": [[426, null]], "Example for using the multi target mode for the objective": [[421, null]], "Example for validation of a config file": [[430, null]], "Examples": [[434, null]], "Examples On This Page": [[448, null]], "Excluding Configurations": [[447, "excluding-configurations"]], "Expectations": [[457, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[413, "experiment-setup"], [414, "experiment-setup"]], "Experiment setup": [[404, "experiment-setup"], [405, "experiment-setup"], [406, "experiment-setup"], [407, "experiment-setup"], [428, "experiment-setup"]], "Experiment setup and creating the searchspace": [[421, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[446, null]], "Experimental Representation Limits": [[448, null]], "Experimental and Computational Representations": [[448, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.6.*)": [[438, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[438, "expired-deprecations-from-0-7"]], "Expired Deprecations (from 0.9.*)": [[438, "expired-deprecations-from-0-9"]], "Explainers": [[448, "explainers"]], "Extending BayBE\u2019s Functionality": [[439, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[455, "extracting-the-model-for-advanced-study"]], "FAQ": [[435, null]], "FPSRecommender": [[206, null]], "Fixed": [[438, "fixed"], [438, "id8"], [438, "id12"], [438, "id14"], [438, "id18"], [438, "id22"], [438, "id28"], [438, "id36"], [438, "id40"], [438, "id45"], [438, "id50"], [438, "id54"], [438, "id61"], [438, "id66"], [438, "id72"], [438, "id78"], [438, "id86"], [438, "id90"], [438, "id95"], [438, "id102"], [438, "id106"], [438, "id110"], [438, "id117"], [438, "id121"], [438, "id125"], [438, "id129"], [438, "id133"], [438, "id135"], [438, "id138"]], "For Label-Like Parameters: Values and Active Values": [[450, "label-like"]], "From GitHub": [[436, "from-github"]], "From Local Clone": [[436, "from-local-clone"]], "From Package Index": [[436, "from-package-index"]], "From the Default Constructor": [[452, "from-the-default-constructor"]], "Further Information": [[444, "further-information"]], "GammaPrior": [[168, null]], "GaussianMixtureClusteringRecommender": [[201, null]], "GaussianProcessPreset": [[270, null]], "GaussianProcessSurrogate": [[263, null]], "General Information": [[451, "general-information"]], "General Workflow": [[439, "general-workflow"]], "Generating Lookup Tables": [[432, "generating-lookup-tables"], [433, "generating-lookup-tables"]], "Getting Recommendations": [[444, "getting-recommendations"], [447, null]], "Getting a recommendation and adding measurements": [[398, "getting-a-recommendation-and-adding-measurements"]], "Global Uncertainty Reduction": [[442, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[169, null]], "HalfNormalPrior": [[170, null]], "Hook instance vs. target instance": [[409, null]], "Hybrid constraints": [[445, null]], "Imports": [[393, "imports"], [409, "imports"], [411, "imports"], [416, "imports"], [417, "imports"], [419, "imports"], [422, "imports"], [424, "imports"], [432, "imports"], [433, "imports"]], "Inclusion of initial data": [[394, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[252, null]], "Indices and Tables": [[436, "indices-and-tables"]], "Influence of Continuous Parameters": [[459, null]], "Insights": [[448, null]], "Installation Related Issues": [[437, "installation-related-issues"]], "Interval": [[361, null]], "Invoking alternative constructors": [[453, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[413, "iterate-with-recommendations-and-measurements"], [414, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[453, "json-de-serialization"]], "KMeansClusteringRecommender": [[202, null]], "Kernel": [[104, null]], "KernelFactory": [[265, null]], "Known Issues": [[437, null]], "License": [[441, null]], "Limitations": [[456, "limitations"]], "LinearKernel": [[106, null]], "Links for documentation": [[414, "links-for-documentation"]], "Local Uncertainty Reduction": [[442, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[171, null]], "Lookup functionality and data creation": [[394, "lookup-functionality-and-data-creation"], [395, "lookup-functionality-and-data-creation"], [396, "lookup-functionality-and-data-creation"]], "MATCH mode": [[456, "match-mode"]], "MIN and MAX mode": [[456, "min-and-max-mode"]], "Maintainers": [[440, "maintainers"]], "Mandatory target bounds": [[449, null]], "Manual verification of the constraint": [[404, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[405, "manual-verification-of-the-constraints"], [406, "manual-verification-of-the-constraints"], [407, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[443, "marking-experiments-as-pending"]], "MaternKernel": [[107, null]], "MeanPredictionSurrogate": [[279, null]], "Memory During Optimization": [[459, null]], "MemorySize": [[217, null]], "Meta Recommenders": [[447, null], [451, "meta-recommenders"]], "MetaRecommender": [[179, null]], "Method overrides": [[439, "method-overrides"]], "Missing Lookup Values": [[454, null]], "Mixtures": [[415, null]], "Model Interpretation in BO": [[448, null]], "Model Outputs": [[413, "model-outputs"], [414, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[416, null]], "Modeling a Mixture in Traditional Representation": [[417, null]], "Monitoring the Probability of Improvement": [[411, null]], "Monkeypatching": [[409, "monkeypatching"], [410, null], [411, "monkeypatching"]], "Multi Target": [[420, null]], "Multi-Armed Bandit": [[418, null]], "Multi-output Modeling": [[455, "multi-output-modeling"]], "NGBoostSurrogate": [[281, null]], "NaiveHybridSpaceRecommender": [[186, null]], "Necessary imports": [[413, "necessary-imports"], [414, "necessary-imports"], [428, "necessary-imports"], [429, "necessary-imports"], [430, "necessary-imports"]], "Necessary imports for this example": [[394, "necessary-imports-for-this-example"], [395, "necessary-imports-for-this-example"], [396, "necessary-imports-for-this-example"], [398, "necessary-imports-for-this-example"], [399, "necessary-imports-for-this-example"], [401, "necessary-imports-for-this-example"], [402, "necessary-imports-for-this-example"], [404, "necessary-imports-for-this-example"], [405, "necessary-imports-for-this-example"], [406, "necessary-imports-for-this-example"], [407, "necessary-imports-for-this-example"], [421, "necessary-imports-for-this-example"], [425, "necessary-imports-for-this-example"], [426, "necessary-imports-for-this-example"]], "Nesting objects": [[453, "nesting-objects"]], "Non-dominated Configurations": [[449, null]], "NonPredictiveRecommender": [[199, null]], "NormalPrior": [[172, null]], "NumericalContinuousParameter": [[149, null], [450, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[150, null], [450, "numericaldiscreteparameter"]], "NumericalTarget": [[301, null], [456, "numericaltarget"]], "Objective": [[120, null], [449, null]], "Optimizing a Custom Black-Box Function": [[393, null]], "Optional Dependencies": [[436, "optional-dependencies"]], "Optional Dependency": [[450, null]], "Optional: Defining the Optimization Strategy": [[436, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[416, null]], "PAMClusteringRecommender": [[203, null]], "Parameter": [[137, null]], "Parameter Encoding": [[450, null]], "Parameter Importance via SHAP": [[448, "parameter-importance-via-shap"]], "Parameter Names": [[450, null]], "Parameter Setup": [[416, "parameter-setup"], [417, "parameter-setup"]], "Parameter tolerances": [[444, null]], "ParameterEncoding": [[146, null]], "Parameters": [[450, null]], "Parameters for a full simulation loop": [[394, "parameters-for-a-full-simulation-loop"], [395, "parameters-for-a-full-simulation-loop"], [396, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[128, null], [449, "paretoobjective"]], "PartialAcquisitionFunction": [[26, null]], "Performing some iterations": [[421, "performing-some-iterations"]], "Performing the simulation loop": [[394, "performing-the-simulation-loop"]], "PeriodicKernel": [[108, null]], "Permanent Exclusion": [[447, "permanent-exclusion"]], "Permutation Invariance": [[416, "permutation-invariance"]], "PiecewisePolynomialKernel": [[109, null]], "PlainKernelFactory": [[266, null]], "Plots": [[448, "plots"]], "Plotting the Results": [[393, "plotting-the-results"], [410, "plotting-the-results"], [411, "plotting-the-results"]], "Polars": [[446, "polars"]], "PolynomialKernel": [[110, null]], "Posterior Statistics with Desirability Objectives": [[444, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Predictive Statistics": [[444, "predictive-statistics"]], "Prior": [[165, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[410, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[116, null]], "Pure Recommenders": [[451, "pure-recommenders"]], "PureRecommender": [[189, null]], "Purely Continuous Search Spaces": [[442, null]], "PyCharm vs. exceptiongroup": [[437, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[111, null]], "RFFKernel": [[112, null]], "RQKernel": [[113, null]], "RandomForestSurrogate": [[283, null]], "RandomRecommender": [[207, null]], "RecommenderProtocol": [[176, null]], "Recommenders": [[451, null]], "Registering Custom Hooks": [[409, null]], "Removed": [[438, "removed"], [438, "id9"], [438, "id29"], [438, "id35"], [438, "id44"], [438, "id57"], [438, "id67"], [438, "id73"], [438, "id82"]], "Representation of Data within Discrete Subspaces": [[452, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[459, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[452, "restricting-search-spaces-using-constraints"]], "Row Order": [[446, null]], "Running the Simulation": [[419, "running-the-simulation"]], "Running the Simulation Loop": [[393, "running-the-simulation-loop"]], "SHAPInsight": [[95, null]], "SKLearnClusteringRecommender": [[204, null]], "Sampling Recommenders": [[451, "sampling-recommenders"]], "Scalarizer": [[126, null]], "ScaleKernel": [[117, null]], "Search Space Creation": [[416, "search-space-creation"], [417, "search-space-creation"]], "Search Space Memory Estimation": [[459, "search-space-memory-estimation"]], "Search Spaces": [[452, null]], "SearchSpace": [[212, null]], "SearchSpaceType": [[213, null]], "Searchspaces": [[423, null]], "Seeing Transfer Learning in Action": [[457, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[444, null]], "SequentialMetaRecommender": [[182, null]], "SerialMixin": [[235, null]], "Serialization": [[427, null], [444, "serialization"], [453, null]], "Serialization and de-serialization": [[428, "serialization-and-de-serialization"]], "Settings": [[393, "settings"], [410, "settings"], [411, "settings"], [422, "settings"], [424, "settings"], [432, "settings"], [433, "settings"]], "Setup": [[398, "setup"], [419, "setup"]], "Signature components": [[409, null]], "Simplex Construction": [[416, null]], "Simulating Multiple Scenarios": [[454, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[454, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[454, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[410, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[410, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[454, null]], "Simulation Loop": [[432, "simulation-loop"], [433, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[422, null]], "SingleTargetObjective": [[130, null], [449, "singletargetobjective"]], "Slot-based Representation": [[417, null]], "SmoothedBoxPrior": [[173, null]], "StreamingSequentialMetaRecommender": [[183, null]], "Sub-Sampling Method": [[442, null]], "SubSelectionCondition": [[41, null], [445, "subselectioncondition"]], "SubspaceContinuous": [[210, null]], "SubspaceDiscrete": [[218, null]], "Substance Amounts": [[416, "substance-amounts"]], "SubstanceEncoding": [[147, null]], "SubstanceParameter": [[153, null], [450, "substanceparameter"]], "Suggested Fix": [[437, null], [437, null], [437, null], [437, null]], "Supported Acquisition Functions": [[443, null]], "Supported Recommenders": [[443, null]], "Surrogate": [[254, null]], "Surrogate Replication": [[455, "surrogate-replication"]], "SurrogateProtocol": [[255, null]], "Surrogates": [[455, null]], "Synchronizing Pull Requests": [[439, "synchronizing-pull-requests"]], "Target": [[293, null]], "TargetMode": [[298, null]], "TargetTransformation": [[299, null]], "Targets": [[456, null]], "TaskParameter": [[140, null], [450, "taskparameter"]], "Technology": [[457, null]], "Telemetry": [[446, "telemetry"]], "Telemetry Scope": [[446, null]], "Terminology": [[416, "terminology"], [453, null], [457, null]], "Terminology Continued": [[457, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[454, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[419, "the-black-box-model"]], "The Lookup Mechanism": [[454, "the-lookup-mechanism"]], "The Optimization Loop": [[436, "the-optimization-loop"]], "The Role of the TaskParameter": [[457, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[429, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[447, "the-recommend-call"]], "The type field": [[453, "the-type-field"]], "Theoretical Span": [[416, null]], "ThresholdCondition": [[42, null], [445, "thresholdcondition"]], "Trajectory-Based Control": [[447, null]], "Transfer Learning": [[431, null], [433, null], [457, null]], "Triggering the Hook": [[411, "triggering-the-hook"]], "Triggering the Hooks": [[409, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[184, null]], "Uninstalling Internet Packages": [[446, null]], "Unlocking Data Treasures Through Transfer Learning": [[457, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[318, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[458, null]], "Using Custom Models": [[455, "using-custom-models"]], "Using Explicit Bounds": [[452, "using-explicit-bounds"]], "Using None": [[454, "using-none"]], "Using a Callable": [[454, "using-a-callable"]], "Using a Dataframe": [[454, "using-a-dataframe"]], "Using abbreviations": [[453, "using-abbreviations"]], "Using configuration instead": [[413, "using-configuration-instead"], [414, "using-configuration-instead"]], "Using default values": [[453, "using-default-values"]], "Utilities": [[459, null]], "Validation of model parameters": [[414, "validation-of-model-parameters"]], "Verification of Constraints": [[416, "verification-of-constraints"], [417, "verification-of-constraints"]], "Verification of Span": [[416, "verification-of-span"]], "Verification of the two dictionaries": [[430, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[402, "verify-the-constraints"]], "Visualization": [[422, "visualization"]], "Windows \u2013 Torch Problems": [[437, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[401, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [402, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [426, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[439, "writing-docstrings"]], "Writing classes": [[439, "writing-classes"]], "[0.1.0] - 2022-10-01": [[438, "id139"]], "[0.10.0] - 2024-08-02": [[438, "id31"]], "[0.11.0] - 2024-09-09": [[438, "id24"]], "[0.11.1] - 2024-10-01": [[438, "id19"]], "[0.11.2] - 2024-10-11": [[438, "id15"]], "[0.11.3] - 2024-11-06": [[438, "id13"]], "[0.11.4] - 2025-01-27": [[438, "id10"]], "[0.12.0] - 2025-01-28": [[438, "id5"]], "[0.12.1] - 2025-01-29": [[438, "id3"]], "[0.12.2] - 2025-01-31": [[438, "id1"]], "[0.2.0] - 2022-11-10": [[438, "id136"]], "[0.2.1] - 2022-12-01": [[438, "id134"]], "[0.2.2] - 2023-01-13": [[438, "id130"]], "[0.2.3] - 2023-03-14": [[438, "id126"]], "[0.2.4] - 2023-03-24": [[438, "id122"]], "[0.3.0] - 2023-06-27": [[438, "id118"]], "[0.3.1] - 2023-07-17": [[438, "id114"]], "[0.3.2] - 2023-07-24": [[438, "id111"]], "[0.4.0] - 2023-08-16": [[438, "id107"]], "[0.4.1] - 2023-08-23": [[438, "id103"]], "[0.4.2] - 2023-08-29": [[438, "id99"]], "[0.5.0] - 2023-09-15": [[438, "id96"]], "[0.5.1] - 2023-10-19": [[438, "id92"]], "[0.6.0] - 2023-11-17": [[438, "id87"]], "[0.6.1] - 2023-11-27": [[438, "id83"]], "[0.7.0] - 2023-12-04": [[438, "id79"]], "[0.7.1] - 2023-12-07": [[438, "id75"]], "[0.7.2] - 2024-01-24": [[438, "id69"]], "[0.7.3] - 2024-02-09": [[438, "id63"]], "[0.7.4] - 2024-02-28": [[438, "id58"]], "[0.8.0] - 2024-02-29": [[438, "id55"]], "[0.8.1] - 2024-03-11": [[438, "id51"]], "[0.8.2] - 2024-03-27": [[438, "id47"]], "[0.9.0] - 2024-05-21": [[438, "id41"]], "[0.9.1] - 2024-06-04": [[438, "id38"]], "[Unreleased]": [[438, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[23, null]], "baybe.acquisition.partial": [[25, null]], "baybe.acquisition.utils": [[27, null]], "baybe.acquisition.utils.convert_acqf": [[28, null]], "baybe.acquisition.utils.str_to_acqf": [[29, null]], "baybe.campaign": [[30, null]], "baybe.constraints": [[32, null]], "baybe.constraints.base": [[33, null]], "baybe.constraints.conditions": [[39, null]], "baybe.constraints.continuous": [[43, null]], "baybe.constraints.deprecation": [[46, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[47, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[48, null]], "baybe.constraints.deprecation.structure_constraints": [[49, null]], "baybe.constraints.discrete": [[50, null]], "baybe.constraints.utils": [[60, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[61, null]], "baybe.constraints.validation": [[62, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[63, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[64, null]], "baybe.constraints.validation.validate_constraints": [[65, null]], "baybe.exceptions": [[66, null]], "baybe.exceptions.DeprecationError": [[67, null]], "baybe.exceptions.EmptySearchSpaceError": [[68, null]], "baybe.exceptions.IncompatibilityError": [[69, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, null]], "baybe.exceptions.IncompatibleArgumentError": [[71, null]], "baybe.exceptions.IncompatibleExplainerError": [[72, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, null]], "baybe.exceptions.IncompatibleSurrogateError": [[74, null]], "baybe.exceptions.InfeasibilityError": [[75, null]], "baybe.exceptions.InvalidSurrogateModelError": [[76, null]], "baybe.exceptions.InvalidTargetValueError": [[77, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[78, null]], "baybe.exceptions.ModelNotTrainedError": [[79, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[80, null]], "baybe.exceptions.NoMeasurementsError": [[81, null]], "baybe.exceptions.NoRecommendersLeftError": [[82, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[83, null]], "baybe.exceptions.NothingToSimulateError": [[84, null]], "baybe.exceptions.NumericalUnderflowError": [[85, null]], "baybe.exceptions.OptionalImportError": [[86, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[87, null]], "baybe.exceptions.UnidentifiedSubclassError": [[88, null]], "baybe.exceptions.UnmatchedAttributeError": [[89, null]], "baybe.exceptions.UnusedObjectWarning": [[90, null]], "baybe.insights": [[91, null]], "baybe.insights.shap": [[92, null]], "baybe.insights.shap.EXPLAINERS": [[93, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[94, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[96, null]], "baybe.insights.shap.SHAP_PLOTS": [[97, null]], "baybe.insights.shap.is_shap_explainer": [[98, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[99, null]], "baybe.kernels": [[100, null]], "baybe.kernels.base": [[101, null]], "baybe.kernels.basic": [[105, null]], "baybe.kernels.composite": [[114, null]], "baybe.objectives": [[118, null]], "baybe.objectives.base": [[119, null]], "baybe.objectives.base.to_objective": [[121, null]], "baybe.objectives.desirability": [[122, null]], "baybe.objectives.desirability.scalarize": [[124, null]], "baybe.objectives.enum": [[125, null]], "baybe.objectives.pareto": [[127, null]], "baybe.objectives.single": [[129, null]], "baybe.objectives.validation": [[131, null]], "baybe.objectives.validation.validate_target_names": [[132, null]], "baybe.parameters": [[133, null]], "baybe.parameters.base": [[134, null]], "baybe.parameters.categorical": [[138, null]], "baybe.parameters.custom": [[141, null]], "baybe.parameters.enum": [[143, null]], "baybe.parameters.numerical": [[148, null]], "baybe.parameters.substance": [[151, null]], "baybe.parameters.substance.Smiles": [[152, null]], "baybe.parameters.utils": [[154, null]], "baybe.parameters.utils.activate_parameter": [[155, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[156, null]], "baybe.parameters.utils.is_inactive": [[157, null]], "baybe.parameters.utils.sort_parameters": [[158, null]], "baybe.parameters.validation": [[159, null]], "baybe.parameters.validation.validate_decorrelation": [[160, null]], "baybe.parameters.validation.validate_is_finite": [[161, null]], "baybe.parameters.validation.validate_unique_values": [[162, null]], "baybe.priors": [[163, null]], "baybe.priors.base": [[164, null]], "baybe.priors.basic": [[166, null]], "baybe.recommenders": [[174, null]], "baybe.recommenders.base": [[175, null]], "baybe.recommenders.meta": [[177, null]], "baybe.recommenders.meta.base": [[178, null]], "baybe.recommenders.meta.sequential": [[180, null]], "baybe.recommenders.naive": [[185, null]], "baybe.recommenders.pure": [[187, null]], "baybe.recommenders.pure.base": [[188, null]], "baybe.recommenders.pure.bayesian": [[190, null]], "baybe.recommenders.pure.bayesian.base": [[191, null]], "baybe.recommenders.pure.bayesian.botorch": [[193, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[195, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[196, null]], "baybe.recommenders.pure.nonpredictive": [[197, null]], "baybe.recommenders.pure.nonpredictive.base": [[198, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[200, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[205, null]], "baybe.searchspace": [[208, null]], "baybe.searchspace.continuous": [[209, null]], "baybe.searchspace.core": [[211, null]], "baybe.searchspace.core.to_searchspace": [[214, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[215, null]], "baybe.searchspace.discrete": [[216, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[219, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[220, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[221, null]], "baybe.searchspace.validation": [[222, null]], "baybe.searchspace.validation.get_transform_parameters": [[223, null]], "baybe.searchspace.validation.validate_parameter_names": [[224, null]], "baybe.searchspace.validation.validate_parameters": [[225, null]], "baybe.serialization": [[226, null]], "baybe.serialization.core": [[227, null]], "baybe.serialization.core.block_deserialization_hook": [[228, null]], "baybe.serialization.core.block_serialization_hook": [[229, null]], "baybe.serialization.core.converter": [[230, null]], "baybe.serialization.core.get_base_structure_hook": [[231, null]], "baybe.serialization.core.select_constructor_hook": [[232, null]], "baybe.serialization.core.unstructure_base": [[233, null]], "baybe.serialization.mixin": [[234, null]], "baybe.serialization.utils": [[236, null]], "baybe.serialization.utils.deserialize_dataframe": [[237, null]], "baybe.serialization.utils.serialize_dataframe": [[238, null]], "baybe.simulation": [[239, null]], "baybe.simulation.core": [[240, null]], "baybe.simulation.core.simulate_experiment": [[241, null]], "baybe.simulation.lookup": [[242, null]], "baybe.simulation.lookup.look_up_targets": [[243, null]], "baybe.simulation.scenarios": [[244, null]], "baybe.simulation.scenarios.simulate_scenarios": [[245, null]], "baybe.simulation.transfer_learning": [[246, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[247, null]], "baybe.surrogates": [[248, null]], "baybe.surrogates.bandit": [[249, null]], "baybe.surrogates.base": [[251, null]], "baybe.surrogates.base.PosteriorStatistic": [[253, null]], "baybe.surrogates.composite": [[256, null]], "baybe.surrogates.custom": [[258, null]], "baybe.surrogates.custom.register_custom_architecture": [[260, null]], "baybe.surrogates.gaussian_process": [[261, null]], "baybe.surrogates.gaussian_process.core": [[262, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[264, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[267, null]], "baybe.surrogates.gaussian_process.presets": [[268, null]], "baybe.surrogates.gaussian_process.presets.core": [[269, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[271, null]], "baybe.surrogates.gaussian_process.presets.default": [[272, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[274, null]], "baybe.surrogates.linear": [[276, null]], "baybe.surrogates.naive": [[278, null]], "baybe.surrogates.ngboost": [[280, null]], "baybe.surrogates.random_forest": [[282, null]], "baybe.surrogates.utils": [[284, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[285, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[286, null]], "baybe.surrogates.utils.catch_constant_targets": [[287, null]], "baybe.surrogates.validation": [[288, null]], "baybe.surrogates.validation.get_model_params_validator": [[289, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[290, null]], "baybe.targets": [[291, null]], "baybe.targets.base": [[292, null]], "baybe.targets.binary": [[294, null]], "baybe.targets.binary.ChoiceValue": [[296, null]], "baybe.targets.enum": [[297, null]], "baybe.targets.numerical": [[300, null]], "baybe.targets.transforms": [[302, null]], "baybe.targets.transforms.bell_transform": [[303, null]], "baybe.targets.transforms.linear_transform": [[304, null]], "baybe.targets.transforms.triangular_transform": [[305, null]], "baybe.telemetry": [[306, null]], "baybe.telemetry.get_user_details": [[307, null]], "baybe.telemetry.is_enabled": [[308, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[309, null]], "baybe.telemetry.telemetry_record_value": [[310, null]], "baybe.utils": [[311, null]], "baybe.utils.augmentation": [[312, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[313, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[314, null]], "baybe.utils.basic": [[315, null]], "baybe.utils.basic.UNSPECIFIED": [[317, null]], "baybe.utils.basic.convert_to_float": [[320, null]], "baybe.utils.basic.find_subclass": [[321, null]], "baybe.utils.basic.get_baseclasses": [[322, null]], "baybe.utils.basic.get_subclasses": [[323, null]], "baybe.utils.basic.group_duplicate_values": [[324, null]], "baybe.utils.basic.hilberts_factory": [[325, null]], "baybe.utils.basic.is_all_instance": [[326, null]], "baybe.utils.basic.match_attributes": [[327, null]], "baybe.utils.basic.refers_to": [[328, null]], "baybe.utils.basic.register_hooks": [[329, null]], "baybe.utils.basic.to_tuple": [[330, null]], "baybe.utils.boolean": [[331, null]], "baybe.utils.boolean.check_if_in": [[332, null]], "baybe.utils.boolean.is_abstract": [[333, null]], "baybe.utils.boolean.strtobool": [[334, null]], "baybe.utils.chemistry": [[335, null]], "baybe.utils.chemistry.get_canonical_smiles": [[336, null]], "baybe.utils.chemistry.get_fingerprint_class": [[337, null]], "baybe.utils.chemistry.name_to_smiles": [[338, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[339, null]], "baybe.utils.conversion": [[340, null]], "baybe.utils.conversion.fraction_to_float": [[341, null]], "baybe.utils.conversion.nonstring_to_tuple": [[342, null]], "baybe.utils.conversion.to_string": [[343, null]], "baybe.utils.dataframe": [[344, null]], "baybe.utils.dataframe.add_fake_measurements": [[345, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[346, null]], "baybe.utils.dataframe.add_parameter_noise": [[347, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[348, null]], "baybe.utils.dataframe.create_fake_input": [[349, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[350, null]], "baybe.utils.dataframe.df_drop_string_columns": [[351, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[352, null]], "baybe.utils.dataframe.filter_df": [[353, null]], "baybe.utils.dataframe.fuzzy_row_match": [[354, null]], "baybe.utils.dataframe.get_transform_objects": [[355, null]], "baybe.utils.dataframe.pretty_print_df": [[356, null]], "baybe.utils.dataframe.to_tensor": [[357, null]], "baybe.utils.dataframe.transform_target_columns": [[358, null]], "baybe.utils.interval": [[359, null]], "baybe.utils.interval.InfiniteIntervalError": [[360, null]], "baybe.utils.interval.convert_bounds": [[362, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[363, null]], "baybe.utils.memory": [[364, null]], "baybe.utils.memory.bytes_to_human_readable": [[365, null]], "baybe.utils.numerical": [[366, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[367, null]], "baybe.utils.numerical.DTypeFloatONNX": [[368, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[369, null]], "baybe.utils.numerical.closer_element": [[370, null]], "baybe.utils.numerical.closest_element": [[371, null]], "baybe.utils.numerical.geom_mean": [[372, null]], "baybe.utils.random": [[373, null]], "baybe.utils.random.set_random_seed": [[374, null]], "baybe.utils.random.temporary_seed": [[375, null]], "baybe.utils.sampling_algorithms": [[376, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[378, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[379, null]], "baybe.utils.scaling": [[380, null]], "baybe.utils.torch": [[382, null]], "baybe.utils.torch.DTypeFloatTorch": [[383, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[384, null]], "baybe.utils.validation": [[385, null]], "baybe.utils.validation.finite_float": [[386, null]], "baybe.utils.validation.non_inf_float": [[387, null]], "baybe.utils.validation.non_nan_float": [[388, null]], "baybe.utils.validation.validate_not_nan": [[389, null]], "baybe.utils.validation.validate_parameter_input": [[390, null]], "baybe.utils.validation.validate_target_input": [[391, null]], "classproperty": [[319, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[437, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNParEGO": [[12, null]], "qLogNoisyExpectedHypervolumeImprovement": [[13, null]], "qLogNoisyExpectedImprovement": [[14, null]], "qNegIntegratedPosteriorVariance": [[15, null]], "qNoisyExpectedHypervolumeImprovement": [[16, null]], "qNoisyExpectedImprovement": [[17, null]], "qPosteriorStandardDeviation": [[18, null]], "qProbabilityOfImprovement": [[19, null]], "qSimpleRegret": [[20, null]], "qThompsonSampling": [[21, null]], "qUpperConfidenceBound": [[22, null]], "\u201cPre-training\u201d stage": [[413, "pre-training-stage"]], "\u26a1 Quick Start": [[436, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[436, "maintainers"]], "\ud83d\udcbb Installation": [[436, "installation"]], "\ud83d\udcc4 License": [[436, "license"]], "\ud83d\udce1 Telemetry": [[436, "telemetry"]], "\ud83d\udd0b Batteries Included": [[436, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[436, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoMeasurementsError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.conversion.to_string", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoMeasurementsError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.conversion.to_string.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[75, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[76, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[77, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[78, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[79, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[80, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.nomeasurementserror method)": [[81, "baybe.exceptions.NoMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[82, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[83, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[84, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[85, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[86, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[87, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[88, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[89, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[90, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[95, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[102, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[103, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[104, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[106, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[107, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[108, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[110, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[111, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[112, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[113, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[115, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[116, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[117, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[120, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[123, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[128, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[130, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[135, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[136, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[137, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[139, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[140, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[153, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[165, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[167, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[168, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[169, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[170, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[171, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[172, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[173, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[176, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[179, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[181, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[186, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[189, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[212, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[217, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[254, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[255, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[257, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[265, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[273, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[275, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[293, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[295, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[301, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[319, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[316, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[360, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[361, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[381, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[75, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[76, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[77, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[78, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[79, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[80, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.nomeasurementserror method)": [[81, "baybe.exceptions.NoMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[82, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[83, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[84, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[85, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[86, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[87, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[88, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[89, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[90, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[144, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[145, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[147, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[360, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[173, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_values() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[24, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[155, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[136, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[139, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[140, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[153, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[345, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[346, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[347, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[115, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[186, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[189, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[186, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[189, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[186, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[189, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[167, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[348, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[173, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[95, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[117, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[115, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[116, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[181, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[102, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[285, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[286, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[270, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[23, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[25, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[27, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[30, "module-baybe.campaign", false]], "baybe.constraints": [[32, "module-baybe.constraints", false]], "baybe.constraints.base": [[33, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[39, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[43, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[46, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[50, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[60, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[62, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[66, "module-baybe.exceptions", false]], "baybe.insights": [[91, "module-baybe.insights", false]], "baybe.insights.shap": [[92, "module-baybe.insights.shap", false]], "baybe.kernels": [[100, "module-baybe.kernels", false]], "baybe.kernels.base": [[101, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[105, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[114, "module-baybe.kernels.composite", false]], "baybe.objectives": [[118, "module-baybe.objectives", false]], "baybe.objectives.base": [[119, "module-baybe.objectives.base", false]], "baybe.objectives.desirability": [[122, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[125, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[127, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[129, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[131, "module-baybe.objectives.validation", false]], "baybe.parameters": [[133, "module-baybe.parameters", false]], "baybe.parameters.base": [[134, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[138, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[141, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[143, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[148, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[151, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[154, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[159, "module-baybe.parameters.validation", false]], "baybe.priors": [[163, "module-baybe.priors", false]], "baybe.priors.base": [[164, "module-baybe.priors.base", false]], "baybe.priors.basic": [[166, "module-baybe.priors.basic", false]], "baybe.recommenders": [[174, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[175, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[177, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[178, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[180, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[185, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[187, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[188, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[190, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[191, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[193, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[195, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[197, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[198, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[200, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[205, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[208, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[209, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[211, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[216, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[222, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[226, "module-baybe.serialization", false]], "baybe.serialization.core": [[227, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[234, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[236, "module-baybe.serialization.utils", false]], "baybe.simulation": [[239, "module-baybe.simulation", false]], "baybe.simulation.core": [[240, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[242, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[244, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[246, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[248, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[249, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[251, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[256, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[258, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[261, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[262, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[264, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[268, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[269, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[272, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[274, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[276, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[278, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[280, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[282, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[284, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[288, "module-baybe.surrogates.validation", false]], "baybe.targets": [[291, "module-baybe.targets", false]], "baybe.targets.base": [[292, "module-baybe.targets.base", false]], "baybe.targets.binary": [[294, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[297, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[300, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[302, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[306, "module-baybe.telemetry", false]], "baybe.utils": [[311, "module-baybe.utils", false]], "baybe.utils.augmentation": [[312, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[315, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[331, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[335, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[340, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[344, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[359, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[364, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[366, "module-baybe.utils.numerical", false]], "baybe.utils.random": [[373, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[376, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[380, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[382, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[385, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[299, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[303, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[167, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[167, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[295, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[228, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[229, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[301, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[365, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[31, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[287, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[144, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[139, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[361, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[332, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[296, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[319, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[370, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[371, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[381, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[136, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[139, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[140, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[153, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[217, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[135, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[136, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[137, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[139, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[140, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[153, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[217, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[217, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[186, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[189, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[103, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[257, "baybe.surrogates.composite.CompositeSurrogate", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[168, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[40, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[186, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[361, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[212, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[213, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[36, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[47, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[48, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[135, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[28, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[362, "baybe.utils.interval.convert_bounds", false]], "convert_to_float() (in module baybe.utils.basic)": [[320, "baybe.utils.basic.convert_to_float", false]], "converter (in module baybe.serialization.core)": [[230, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[361, "baybe.utils.interval.Interval.create", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[349, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[145, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[142, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[145, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[153, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[153, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[273, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[67, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[237, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[123, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[313, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[314, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[350, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[351, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[352, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[186, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[212, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[213, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[136, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[377, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[367, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[368, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[383, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[316, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[275, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[213, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[68, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[136, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[139, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[140, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[153, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[212, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.evaluate", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[217, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[217, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[217, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[95, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[95, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[93, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[295, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[378, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[353, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[321, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[386, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[254, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[255, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[257, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[381, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[377, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[341, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[95, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[212, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[102, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[103, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[104, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[106, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[107, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[108, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[110, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[111, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[112, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[113, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[115, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[116, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[117, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[120, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[123, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[128, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[130, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[135, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[136, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[137, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[139, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[140, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[153, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[165, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[167, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[168, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[169, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[170, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[171, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[172, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[173, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[179, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[181, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[212, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[235, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[254, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[257, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[293, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[295, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[301, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[361, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[102, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[103, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[104, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[106, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[107, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[108, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[110, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[111, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[112, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[113, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[115, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[116, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[117, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[120, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[123, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[128, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[130, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[135, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[136, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[137, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[139, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[140, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[153, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[165, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[167, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[168, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[169, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[170, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[171, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[172, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[173, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[179, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[181, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[212, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[235, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[254, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[257, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[293, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[295, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[301, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[361, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[212, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[212, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[95, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[257, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[95, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[354, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[168, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[270, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[126, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[372, "baybe.utils.numerical.geom_mean", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_acquisition_function() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_acquisition_function", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[231, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[322, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[336, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[212, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[179, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[181, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[337, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[289, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[179, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[181, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[179, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[181, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[212, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[156, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[323, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[355, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[223, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[307, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[324, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[169, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[170, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[325, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[213, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[69, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[71, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[72, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[73, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[74, "baybe.exceptions.IncompatibleSurrogateError", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infeasibilityerror": [[75, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[360, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[144, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[361, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[76, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[77, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[333, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[326, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[361, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[61, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[135, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[136, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[137, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[139, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[140, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[153, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[361, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[135, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[136, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[137, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[139, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[140, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[153, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[308, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[361, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[361, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[135, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[136, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[137, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[139, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[140, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[153, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[157, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[361, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[120, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[123, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[128, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[130, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[135, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[136, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[137, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[139, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[140, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[153, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[361, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[98, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[179, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[181, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "joint_acquisition_value() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.joint_acquisition_value", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[104, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[265, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[153, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[153, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[107, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[108, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[111, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[112, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[113, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[107, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[108, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[111, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[112, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[113, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[299, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[304, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[106, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[171, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[172, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[171, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[243, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[361, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[99, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[271, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[381, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[298, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[327, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[107, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[298, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[126, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[217, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[179, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[298, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimumcardinalityviolatedwarning": [[78, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[301, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[79, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [23, "module-baybe.acquisition.base", false], [25, "module-baybe.acquisition.partial", false], [27, "module-baybe.acquisition.utils", false], [30, "module-baybe.campaign", false], [32, "module-baybe.constraints", false], [33, "module-baybe.constraints.base", false], [39, "module-baybe.constraints.conditions", false], [43, "module-baybe.constraints.continuous", false], [46, "module-baybe.constraints.deprecation", false], [50, "module-baybe.constraints.discrete", false], [60, "module-baybe.constraints.utils", false], [62, "module-baybe.constraints.validation", false], [66, "module-baybe.exceptions", false], [91, "module-baybe.insights", false], [92, "module-baybe.insights.shap", false], [100, "module-baybe.kernels", false], [101, "module-baybe.kernels.base", false], [105, "module-baybe.kernels.basic", false], [114, "module-baybe.kernels.composite", false], [118, "module-baybe.objectives", false], [119, "module-baybe.objectives.base", false], [122, "module-baybe.objectives.desirability", false], [125, "module-baybe.objectives.enum", false], [127, "module-baybe.objectives.pareto", false], [129, "module-baybe.objectives.single", false], [131, "module-baybe.objectives.validation", false], [133, "module-baybe.parameters", false], [134, "module-baybe.parameters.base", false], [138, "module-baybe.parameters.categorical", false], [141, "module-baybe.parameters.custom", false], [143, "module-baybe.parameters.enum", false], [148, "module-baybe.parameters.numerical", false], [151, "module-baybe.parameters.substance", false], [154, "module-baybe.parameters.utils", false], [159, "module-baybe.parameters.validation", false], [163, "module-baybe.priors", false], [164, "module-baybe.priors.base", false], [166, "module-baybe.priors.basic", false], [174, "module-baybe.recommenders", false], [175, "module-baybe.recommenders.base", false], [177, "module-baybe.recommenders.meta", false], [178, "module-baybe.recommenders.meta.base", false], [180, "module-baybe.recommenders.meta.sequential", false], [185, "module-baybe.recommenders.naive", false], [187, "module-baybe.recommenders.pure", false], [188, "module-baybe.recommenders.pure.base", false], [190, "module-baybe.recommenders.pure.bayesian", false], [191, "module-baybe.recommenders.pure.bayesian.base", false], [193, "module-baybe.recommenders.pure.bayesian.botorch", false], [195, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [197, "module-baybe.recommenders.pure.nonpredictive", false], [198, "module-baybe.recommenders.pure.nonpredictive.base", false], [200, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [205, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [208, "module-baybe.searchspace", false], [209, "module-baybe.searchspace.continuous", false], [211, "module-baybe.searchspace.core", false], [216, "module-baybe.searchspace.discrete", false], [222, "module-baybe.searchspace.validation", false], [226, "module-baybe.serialization", false], [227, "module-baybe.serialization.core", false], [234, "module-baybe.serialization.mixin", false], [236, "module-baybe.serialization.utils", false], [239, "module-baybe.simulation", false], [240, "module-baybe.simulation.core", false], [242, "module-baybe.simulation.lookup", false], [244, "module-baybe.simulation.scenarios", false], [246, "module-baybe.simulation.transfer_learning", false], [248, "module-baybe.surrogates", false], [249, "module-baybe.surrogates.bandit", false], [251, "module-baybe.surrogates.base", false], [256, "module-baybe.surrogates.composite", false], [258, "module-baybe.surrogates.custom", false], [261, "module-baybe.surrogates.gaussian_process", false], [262, "module-baybe.surrogates.gaussian_process.core", false], [264, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [268, "module-baybe.surrogates.gaussian_process.presets", false], [269, "module-baybe.surrogates.gaussian_process.presets.core", false], [272, "module-baybe.surrogates.gaussian_process.presets.default", false], [274, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [276, "module-baybe.surrogates.linear", false], [278, "module-baybe.surrogates.naive", false], [280, "module-baybe.surrogates.ngboost", false], [282, "module-baybe.surrogates.random_forest", false], [284, "module-baybe.surrogates.utils", false], [288, "module-baybe.surrogates.validation", false], [291, "module-baybe.targets", false], [292, "module-baybe.targets.base", false], [294, "module-baybe.targets.binary", false], [297, "module-baybe.targets.enum", false], [300, "module-baybe.targets.numerical", false], [302, "module-baybe.targets.transforms", false], [306, "module-baybe.telemetry", false], [311, "module-baybe.utils", false], [312, "module-baybe.utils.augmentation", false], [315, "module-baybe.utils.basic", false], [331, "module-baybe.utils.boolean", false], [335, "module-baybe.utils.chemistry", false], [340, "module-baybe.utils.conversion", false], [344, "module-baybe.utils.dataframe", false], [359, "module-baybe.utils.interval", false], [364, "module-baybe.utils.memory", false], [366, "module-baybe.utils.numerical", false], [373, "module-baybe.utils.random", false], [376, "module-baybe.utils.sampling_algorithms", false], [380, "module-baybe.utils.scaling", false], [382, "module-baybe.utils.torch", false], [385, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[120, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[123, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[128, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[130, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[186, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[135, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[136, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[137, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[139, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[140, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[153, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[293, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[295, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[301, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[338, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[80, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "nomeasurementserror": [[81, "baybe.exceptions.NoMeasurementsError", false]], "non_inf_float() (in module baybe.utils.validation)": [[387, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[388, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[94, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[342, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[82, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[172, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[83, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[84, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[107, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[112, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[301, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[85, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[120, "baybe.objectives.base.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[110, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[110, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[144, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[86, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[117, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[117, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[137, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[219, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[220, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[146, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[128, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[108, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[108, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[108, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[95, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[110, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[254, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[257, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[254, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[257, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[253, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[110, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[356, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[165, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[116, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[189, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[377, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[168, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[176, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[179, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[181, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[186, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[189, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[199, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[176, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[328, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[260, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[329, "baybe.utils.basic.register_hooks", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[254, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "rffkernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[113, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[379, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[124, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[123, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[126, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[169, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[170, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[171, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[172, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[117, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[212, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[87, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[213, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[232, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[179, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[181, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[41, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[196, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[238, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[235, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[374, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[96, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[97, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[95, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[173, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[241, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[245, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[247, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[130, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[152, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[339, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[158, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[29, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[334, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[49, "baybe.constraints.deprecation.structure_constraints", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[41, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[210, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[147, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[153, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[295, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[135, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[136, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[137, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[139, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[140, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[153, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[293, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[295, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[301, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[254, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[254, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[254, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[192, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[194, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[255, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[257, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[293, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[298, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[120, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[123, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[128, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[130, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[299, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[140, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[309, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[310, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[375, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[42, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[254, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[255, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[257, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[102, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[103, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[104, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[106, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[107, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[108, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[110, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[111, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[112, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[113, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[115, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[116, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[117, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[120, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[123, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[128, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[130, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[135, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[136, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[137, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[139, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[140, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[153, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[165, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[167, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[168, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[169, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[170, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[171, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[172, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[173, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[179, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[181, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[212, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[235, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[254, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[257, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[293, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[295, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[301, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[361, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[102, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[103, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[104, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[106, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[107, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[108, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[110, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[111, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[112, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[113, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[115, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[116, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[117, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[102, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[103, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[104, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[106, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[107, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[108, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[110, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[111, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[112, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[113, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[115, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[116, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[117, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[165, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[167, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[168, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[169, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[170, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[171, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[172, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[173, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[102, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[103, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[104, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[106, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[107, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[108, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[110, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[111, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[112, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[113, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[115, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[116, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[117, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[120, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[123, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[128, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[130, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[135, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[136, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[137, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[139, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[140, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[153, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[165, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[167, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[168, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[169, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[170, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[171, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[172, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[173, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[179, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[181, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[182, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[212, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[235, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[250, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[252, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[254, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[257, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[263, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[266, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[277, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[279, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[281, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[283, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[293, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[295, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[301, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[361, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[267, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[361, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[293, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[295, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[301, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[121, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[135, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[136, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[137, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[139, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[140, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[153, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[214, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.conversion)": [[343, "baybe.utils.conversion.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[135, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[136, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[139, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[140, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[149, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[153, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[361, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[357, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[361, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[330, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[120, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[123, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[128, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[130, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[136, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[139, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[140, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[153, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[210, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[212, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[218, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[293, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[295, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[301, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[381, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[358, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[301, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[299, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[305, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[184, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[212, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[88, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[89, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[317, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[318, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[233, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[90, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[361, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[363, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[95, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[63, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[64, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[259, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[65, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[290, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[160, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[161, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[389, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[390, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[224, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[225, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[215, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[221, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[391, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[132, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[162, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[136, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[139, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[140, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[142, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[150, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[153, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[106, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[106, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[369, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[384, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[123, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[147, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [30, 0, 0, "-", "campaign"], [32, 0, 0, "-", "constraints"], [66, 0, 0, "-", "exceptions"], [91, 0, 0, "-", "insights"], [100, 0, 0, "-", "kernels"], [118, 0, 0, "-", "objectives"], [133, 0, 0, "-", "parameters"], [163, 0, 0, "-", "priors"], [174, 0, 0, "-", "recommenders"], [208, 0, 0, "-", "searchspace"], [226, 0, 0, "-", "serialization"], [239, 0, 0, "-", "simulation"], [248, 0, 0, "-", "surrogates"], [291, 0, 0, "-", "targets"], [306, 0, 0, "-", "telemetry"], [311, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [23, 0, 0, "-", "base"], [25, 0, 0, "-", "partial"], [27, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNParEGO"], [13, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [14, 1, 1, "", "qLogNoisyExpectedImprovement"], [15, 1, 1, "", "qNegIntegratedPosteriorVariance"], [16, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [17, 1, 1, "", "qNoisyExpectedImprovement"], [18, 1, 1, "", "qPosteriorStandardDeviation"], [19, 1, 1, "", "qProbabilityOfImprovement"], [20, 1, 1, "", "qSimpleRegret"], [21, 1, 1, "", "qThompsonSampling"], [22, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.evaluate.params": [[3, 4, 1, "", "candidates"], [3, 4, 1, "", "jointly"], [3, 4, 1, "", "measurements"], [3, 4, 1, "", "objective"], [3, 4, 1, "", "pending_experiments"], [3, 4, 1, "", "searchspace"], [3, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate.params": [[4, 4, 1, "", "candidates"], [4, 4, 1, "", "jointly"], [4, 4, 1, "", "measurements"], [4, 4, 1, "", "objective"], [4, 4, 1, "", "pending_experiments"], [4, 4, 1, "", "searchspace"], [4, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "evaluate"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.evaluate.params": [[5, 4, 1, "", "candidates"], [5, 4, 1, "", "jointly"], [5, 4, 1, "", "measurements"], [5, 4, 1, "", "objective"], [5, 4, 1, "", "pending_experiments"], [5, 4, 1, "", "searchspace"], [5, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "evaluate"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate.params": [[6, 4, 1, "", "candidates"], [6, 4, 1, "", "jointly"], [6, 4, 1, "", "measurements"], [6, 4, 1, "", "objective"], [6, 4, 1, "", "pending_experiments"], [6, 4, 1, "", "searchspace"], [6, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "evaluate"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate.params": [[7, 4, 1, "", "candidates"], [7, 4, 1, "", "jointly"], [7, 4, 1, "", "measurements"], [7, 4, 1, "", "objective"], [7, 4, 1, "", "pending_experiments"], [7, 4, 1, "", "searchspace"], [7, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate.params": [[8, 4, 1, "", "candidates"], [8, 4, 1, "", "jointly"], [8, 4, 1, "", "measurements"], [8, 4, 1, "", "objective"], [8, 4, 1, "", "pending_experiments"], [8, 4, 1, "", "searchspace"], [8, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "evaluate"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.evaluate.params": [[9, 4, 1, "", "candidates"], [9, 4, 1, "", "jointly"], [9, 4, 1, "", "measurements"], [9, 4, 1, "", "objective"], [9, 4, 1, "", "pending_experiments"], [9, 4, 1, "", "searchspace"], [9, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "evaluate"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate.params": [[10, 4, 1, "", "candidates"], [10, 4, 1, "", "jointly"], [10, 4, 1, "", "measurements"], [10, 4, 1, "", "objective"], [10, 4, 1, "", "pending_experiments"], [10, 4, 1, "", "searchspace"], [10, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "evaluate"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate.params": [[11, 4, 1, "", "candidates"], [11, 4, 1, "", "jointly"], [11, 4, 1, "", "measurements"], [11, 4, 1, "", "objective"], [11, 4, 1, "", "pending_experiments"], [11, 4, 1, "", "searchspace"], [11, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNParEGO": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "evaluate"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.evaluate.params": [[12, 4, 1, "", "candidates"], [12, 4, 1, "", "jointly"], [12, 4, 1, "", "measurements"], [12, 4, 1, "", "objective"], [12, 4, 1, "", "pending_experiments"], [12, 4, 1, "", "searchspace"], [12, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "compute_ref_point"], [13, 2, 1, "", "evaluate"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "prune_baseline"], [13, 3, 1, "", "reference_point"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[13, 4, 1, "", "array"], [13, 4, 1, "", "factor"], [13, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate.params": [[13, 4, 1, "", "candidates"], [13, 4, 1, "", "jointly"], [13, 4, 1, "", "measurements"], [13, 4, 1, "", "objective"], [13, 4, 1, "", "pending_experiments"], [13, 4, 1, "", "searchspace"], [13, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "evaluate"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate.params": [[14, 4, 1, "", "candidates"], [14, 4, 1, "", "jointly"], [14, 4, 1, "", "measurements"], [14, 4, 1, "", "objective"], [14, 4, 1, "", "pending_experiments"], [14, 4, 1, "", "searchspace"], [14, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "evaluate"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "get_integration_points"], [15, 3, 1, "", "sampling_fraction"], [15, 3, 1, "", "sampling_method"], [15, 3, 1, "", "sampling_n_points"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate.params": [[15, 4, 1, "", "candidates"], [15, 4, 1, "", "jointly"], [15, 4, 1, "", "measurements"], [15, 4, 1, "", "objective"], [15, 4, 1, "", "pending_experiments"], [15, 4, 1, "", "searchspace"], [15, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[15, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "compute_ref_point"], [16, 2, 1, "", "evaluate"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "reference_point"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[16, 4, 1, "", "array"], [16, 4, 1, "", "factor"], [16, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate.params": [[16, 4, 1, "", "candidates"], [16, 4, 1, "", "jointly"], [16, 4, 1, "", "measurements"], [16, 4, 1, "", "objective"], [16, 4, 1, "", "pending_experiments"], [16, 4, 1, "", "searchspace"], [16, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "evaluate"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "prune_baseline"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate.params": [[17, 4, 1, "", "candidates"], [17, 4, 1, "", "jointly"], [17, 4, 1, "", "measurements"], [17, 4, 1, "", "objective"], [17, 4, 1, "", "pending_experiments"], [17, 4, 1, "", "searchspace"], [17, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "evaluate"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate.params": [[18, 4, 1, "", "candidates"], [18, 4, 1, "", "jointly"], [18, 4, 1, "", "measurements"], [18, 4, 1, "", "objective"], [18, 4, 1, "", "pending_experiments"], [18, 4, 1, "", "searchspace"], [18, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "evaluate"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate.params": [[19, 4, 1, "", "candidates"], [19, 4, 1, "", "jointly"], [19, 4, 1, "", "measurements"], [19, 4, 1, "", "objective"], [19, 4, 1, "", "pending_experiments"], [19, 4, 1, "", "searchspace"], [19, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "evaluate"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.evaluate.params": [[20, 4, 1, "", "candidates"], [20, 4, 1, "", "jointly"], [20, 4, 1, "", "measurements"], [20, 4, 1, "", "objective"], [20, 4, 1, "", "pending_experiments"], [20, 4, 1, "", "searchspace"], [20, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "evaluate"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "n_mc_samples"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.evaluate.params": [[21, 4, 1, "", "candidates"], [21, 4, 1, "", "jointly"], [21, 4, 1, "", "measurements"], [21, 4, 1, "", "objective"], [21, 4, 1, "", "pending_experiments"], [21, 4, 1, "", "searchspace"], [21, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 3, 1, "", "beta"], [22, 2, 1, "", "evaluate"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate.params": [[22, 4, 1, "", "candidates"], [22, 4, 1, "", "jointly"], [22, 4, 1, "", "measurements"], [22, 4, 1, "", "objective"], [22, 4, 1, "", "pending_experiments"], [22, 4, 1, "", "searchspace"], [22, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[22, 4, 1, "", "string"]], "baybe.acquisition.base": [[24, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 2, 1, "", "evaluate"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.evaluate.params": [[24, 4, 1, "", "candidates"], [24, 4, 1, "", "jointly"], [24, 4, 1, "", "measurements"], [24, 4, 1, "", "objective"], [24, 4, 1, "", "pending_experiments"], [24, 4, 1, "", "searchspace"], [24, 4, 1, "", "surrogate"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[24, 4, 1, "", "string"]], "baybe.acquisition.partial": [[26, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "botorch_acqf"], [26, 3, 1, "", "pin_discrete"], [26, 3, 1, "", "pinned_part"], [26, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[26, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[28, 5, 1, "", "convert_acqf"], [29, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[31, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "acquisition_values"], [31, 2, 1, "", "add_measurements"], [31, 3, 1, "", "allow_recommending_already_measured"], [31, 3, 1, "", "allow_recommending_already_recommended"], [31, 3, 1, "", "allow_recommending_pending_experiments"], [31, 2, 1, "", "from_config"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 2, 1, "", "get_acquisition_function"], [31, 2, 1, "", "get_surrogate"], [31, 2, 1, "", "joint_acquisition_value"], [31, 6, 1, "", "measurements"], [31, 3, 1, "", "n_batches_done"], [31, 3, 1, "", "n_fits_done"], [31, 3, 1, "", "objective"], [31, 6, 1, "", "parameters"], [31, 2, 1, "", "posterior"], [31, 2, 1, "", "posterior_stats"], [31, 2, 1, "", "recommend"], [31, 3, 1, "", "recommender"], [31, 3, 1, "", "searchspace"], [31, 6, 1, "", "targets"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"], [31, 2, 1, "", "toggle_discrete_candidates"], [31, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.acquisition_values.params": [[31, 4, 1, "", "acquisition_function"], [31, 4, 1, "", "batch_size"], [31, 4, 1, "", "candidates"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.add_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[31, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[31, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_acquisition_function.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.get_surrogate.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[31, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[31, 4, 1, "", "candidates"], [31, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[31, 4, 1, "", "complement"], [31, 4, 1, "", "constraints"], [31, 4, 1, "", "dry_run"], [31, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[31, 4, 1, "", "config_json"]], "baybe.constraints": [[33, 0, 0, "-", "base"], [39, 0, 0, "-", "conditions"], [43, 0, 0, "-", "continuous"], [46, 0, 0, "-", "deprecation"], [50, 0, 0, "-", "discrete"], [60, 0, 0, "-", "utils"], [62, 0, 0, "-", "validation"]], "baybe.constraints.base": [[34, 1, 1, "", "CardinalityConstraint"], [35, 1, 1, "", "Constraint"], [36, 1, 1, "", "ContinuousConstraint"], [37, 1, 1, "", "ContinuousNonlinearConstraint"], [38, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "max_cardinality"], [34, 3, 1, "", "min_cardinality"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "eval_during_augmentation"], [36, 3, 1, "", "eval_during_creation"], [36, 3, 1, "", "eval_during_modeling"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 6, 1, "", "is_continuous"], [36, 6, 1, "", "is_discrete"], [36, 3, 1, "", "numerical_only"], [36, 3, 1, "", "parameters"], [36, 2, 1, "", "summary"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 2, 1, "", "get_invalid"], [38, 2, 1, "", "get_invalid_polars"], [38, 2, 1, "", "get_valid"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[38, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[38, 4, 1, "", "df"]], "baybe.constraints.conditions": [[40, 1, 1, "", "Condition"], [41, 1, 1, "", "SubSelectionCondition"], [42, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[40, 2, 1, "", "evaluate"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"], [40, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[40, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[40, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "selection"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"], [41, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[41, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[41, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "evaluate"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 3, 1, "", "operator"], [42, 3, 1, "", "threshold"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"], [42, 2, 1, "", "to_polars"], [42, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[42, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[42, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[44, 1, 1, "", "ContinuousCardinalityConstraint"], [45, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "eval_during_augmentation"], [44, 3, 1, "", "eval_during_creation"], [44, 3, 1, "", "eval_during_modeling"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 2, 1, "", "get_absolute_thresholds"], [44, 2, 1, "", "inactive_parameter_combinations"], [44, 6, 1, "", "is_continuous"], [44, 6, 1, "", "is_discrete"], [44, 3, 1, "", "max_cardinality"], [44, 3, 1, "", "min_cardinality"], [44, 6, 1, "", "n_inactive_parameter_combinations"], [44, 3, 1, "", "numerical_only"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "relative_threshold"], [44, 2, 1, "", "sample_inactive_parameters"], [44, 2, 1, "", "summary"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[44, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[44, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[44, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[45, 2, 1, "", "__init__"], [45, 3, 1, "", "coefficients"], [45, 3, 1, "", "eval_during_augmentation"], [45, 3, 1, "", "eval_during_creation"], [45, 3, 1, "", "eval_during_modeling"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 6, 1, "", "is_continuous"], [45, 6, 1, "", "is_discrete"], [45, 6, 1, "", "is_eq"], [45, 3, 1, "", "numerical_only"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "rhs"], [45, 2, 1, "", "summary"], [45, 2, 1, "", "to_botorch"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[45, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[45, 4, 1, "", "idx_offset"], [45, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[47, 5, 1, "", "ContinuousLinearEqualityConstraint"], [48, 5, 1, "", "ContinuousLinearInequalityConstraint"], [49, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[51, 1, 1, "", "DiscreteCardinalityConstraint"], [52, 1, 1, "", "DiscreteCustomConstraint"], [53, 1, 1, "", "DiscreteDependenciesConstraint"], [54, 1, 1, "", "DiscreteExcludeConstraint"], [55, 1, 1, "", "DiscreteLinkedParametersConstraint"], [56, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [57, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [58, 1, 1, "", "DiscreteProductConstraint"], [59, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "max_cardinality"], [51, 3, 1, "", "min_cardinality"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"], [52, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "affected_parameters"], [53, 3, 1, "", "conditions"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 3, 1, "", "permutation_invariant"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "combiner"], [54, 3, 1, "", "conditions"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "dependencies"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "condition"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[58, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[59, 2, 1, "", "__init__"], [59, 3, 1, "", "condition"], [59, 3, 1, "", "eval_during_augmentation"], [59, 3, 1, "", "eval_during_creation"], [59, 3, 1, "", "eval_during_modeling"], [59, 2, 1, "", "from_dict"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_invalid"], [59, 2, 1, "", "get_invalid_polars"], [59, 2, 1, "", "get_valid"], [59, 6, 1, "", "is_continuous"], [59, 6, 1, "", "is_discrete"], [59, 3, 1, "", "numerical_only"], [59, 3, 1, "", "parameters"], [59, 2, 1, "", "summary"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[59, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[59, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[59, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[59, 4, 1, "", "df"]], "baybe.constraints.utils": [[61, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[61, 4, 1, "", "check_maximum"], [61, 4, 1, "", "check_minimum"], [61, 4, 1, "", "df"], [61, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[63, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [64, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [65, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[63, 4, 1, "", "constraint"], [63, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[64, 4, 1, "", "constraints"]], "baybe.exceptions": [[67, 7, 1, "", "DeprecationError"], [68, 7, 1, "", "EmptySearchSpaceError"], [69, 7, 1, "", "IncompatibilityError"], [70, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [71, 7, 1, "", "IncompatibleArgumentError"], [72, 7, 1, "", "IncompatibleExplainerError"], [73, 7, 1, "", "IncompatibleSearchSpaceError"], [74, 7, 1, "", "IncompatibleSurrogateError"], [75, 7, 1, "", "InfeasibilityError"], [76, 7, 1, "", "InvalidSurrogateModelError"], [77, 7, 1, "", "InvalidTargetValueError"], [78, 7, 1, "", "MinimumCardinalityViolatedWarning"], [79, 7, 1, "", "ModelNotTrainedError"], [80, 7, 1, "", "NoMCAcquisitionFunctionError"], [81, 7, 1, "", "NoMeasurementsError"], [82, 7, 1, "", "NoRecommendersLeftError"], [83, 7, 1, "", "NotEnoughPointsLeftError"], [84, 7, 1, "", "NothingToSimulateError"], [85, 7, 1, "", "NumericalUnderflowError"], [86, 7, 1, "", "OptionalImportError"], [87, 7, 1, "", "SearchSpaceMatchWarning"], [88, 7, 1, "", "UnidentifiedSubclassError"], [89, 7, 1, "", "UnmatchedAttributeError"], [90, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.NoMeasurementsError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__new__"]], "baybe.insights": [[92, 0, 0, "-", "shap"]], "baybe.insights.shap": [[93, 8, 1, "", "EXPLAINERS"], [94, 8, 1, "", "NON_SHAP_EXPLAINERS"], [95, 1, 1, "", "SHAPInsight"], [96, 8, 1, "", "SHAP_EXPLAINERS"], [97, 8, 1, "", "SHAP_PLOTS"], [98, 5, 1, "", "is_shap_explainer"], [99, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[95, 2, 1, "", "__init__"], [95, 3, 1, "", "background_data"], [95, 2, 1, "", "explain"], [95, 3, 1, "", "explainer"], [95, 2, 1, "", "from_campaign"], [95, 2, 1, "", "from_recommender"], [95, 2, 1, "", "from_surrogate"], [95, 2, 1, "", "plot"], [95, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[95, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[95, 4, 1, "", "campaign"], [95, 4, 1, "", "explainer_cls"], [95, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[95, 4, 1, "", "explainer_cls"], [95, 4, 1, "", "measurements"], [95, 4, 1, "", "objective"], [95, 4, 1, "", "recommender"], [95, 4, 1, "", "searchspace"], [95, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[95, 4, 1, "", "**kwargs"], [95, 4, 1, "", "data"], [95, 4, 1, "", "explanation_index"], [95, 4, 1, "", "plot_type"], [95, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[99, 4, 1, "", "data"], [99, 4, 1, "", "explainer_cls"], [99, 4, 1, "", "surrogate"], [99, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[101, 0, 0, "-", "base"], [105, 0, 0, "-", "basic"], [114, 0, 0, "-", "composite"]], "baybe.kernels.base": [[102, 1, 1, "", "BasicKernel"], [103, 1, 1, "", "CompositeKernel"], [104, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "from_dict"], [102, 2, 1, "", "from_json"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "to_factory"], [102, 2, 1, "", "to_gpytorch"], [102, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[102, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[102, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "from_dict"], [103, 2, 1, "", "from_json"], [103, 2, 1, "", "to_dict"], [103, 2, 1, "", "to_factory"], [103, 2, 1, "", "to_gpytorch"], [103, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[103, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[103, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.kernels.basic": [[106, 1, 1, "", "LinearKernel"], [107, 1, 1, "", "MaternKernel"], [108, 1, 1, "", "PeriodicKernel"], [109, 1, 1, "", "PiecewisePolynomialKernel"], [110, 1, 1, "", "PolynomialKernel"], [111, 1, 1, "", "RBFKernel"], [112, 1, 1, "", "RFFKernel"], [113, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"], [106, 3, 1, "", "variance_initial_value"], [106, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[106, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 3, 1, "", "lengthscale_initial_value"], [107, 3, 1, "", "lengthscale_prior"], [107, 3, 1, "", "nu"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[107, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 3, 1, "", "lengthscale_initial_value"], [108, 3, 1, "", "lengthscale_prior"], [108, 3, 1, "", "period_length_initial_value"], [108, 3, 1, "", "period_length_prior"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 3, 1, "", "lengthscale_initial_value"], [109, 3, 1, "", "lengthscale_prior"], [109, 3, 1, "", "q"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 3, 1, "", "offset_initial_value"], [110, 3, 1, "", "offset_prior"], [110, 3, 1, "", "power"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_factory"], [110, 2, 1, "", "to_gpytorch"], [110, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[110, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 3, 1, "", "lengthscale_initial_value"], [111, 3, 1, "", "lengthscale_prior"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[111, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "lengthscale_initial_value"], [112, 3, 1, "", "lengthscale_prior"], [112, 3, 1, "", "num_samples"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[112, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 3, 1, "", "lengthscale_initial_value"], [113, 3, 1, "", "lengthscale_prior"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_factory"], [113, 2, 1, "", "to_gpytorch"], [113, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[113, 4, 1, "", "string"]], "baybe.kernels.composite": [[115, 1, 1, "", "AdditiveKernel"], [116, 1, 1, "", "ProductKernel"], [117, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[115, 2, 1, "", "__init__"], [115, 3, 1, "", "base_kernels"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_factory"], [115, 2, 1, "", "to_gpytorch"], [115, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[115, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[116, 2, 1, "", "__init__"], [116, 3, 1, "", "base_kernels"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_factory"], [116, 2, 1, "", "to_gpytorch"], [116, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[116, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "base_kernel"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 3, 1, "", "outputscale_initial_value"], [117, 3, 1, "", "outputscale_prior"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_factory"], [117, 2, 1, "", "to_gpytorch"], [117, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[117, 4, 1, "", "string"]], "baybe.objectives": [[119, 0, 0, "-", "base"], [122, 0, 0, "-", "desirability"], [125, 0, 0, "-", "enum"], [127, 0, 0, "-", "pareto"], [129, 0, 0, "-", "single"], [131, 0, 0, "-", "validation"]], "baybe.objectives.base": [[120, 1, 1, "", "Objective"], [121, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "from_dict"], [120, 2, 1, "", "from_json"], [120, 3, 1, "", "is_multi_output"], [120, 6, 1, "", "n_outputs"], [120, 6, 1, "", "targets"], [120, 2, 1, "", "to_dict"], [120, 2, 1, "", "to_json"], [120, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[120, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[120, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[120, 4, 1, "", "allow_extra"], [120, 4, 1, "", "allow_missing"], [120, 4, 1, "", "df"]], "baybe.objectives.desirability": [[123, 1, 1, "", "DesirabilityObjective"], [124, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "from_dict"], [123, 2, 1, "", "from_json"], [123, 3, 1, "", "is_multi_output"], [123, 6, 1, "", "n_outputs"], [123, 3, 1, "", "scalarizer"], [123, 6, 1, "", "targets"], [123, 2, 1, "", "to_dict"], [123, 2, 1, "", "to_json"], [123, 2, 1, "", "transform"], [123, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[123, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[123, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[123, 4, 1, "", "allow_extra"], [123, 4, 1, "", "allow_missing"], [123, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[124, 4, 1, "", "scalarizer"], [124, 4, 1, "", "values"], [124, 4, 1, "", "weights"]], "baybe.objectives.enum": [[126, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[126, 3, 1, "", "GEOM_MEAN"], [126, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[128, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "from_dict"], [128, 2, 1, "", "from_json"], [128, 3, 1, "", "is_multi_output"], [128, 6, 1, "", "n_outputs"], [128, 6, 1, "", "targets"], [128, 2, 1, "", "to_dict"], [128, 2, 1, "", "to_json"], [128, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[128, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[128, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[128, 4, 1, "", "allow_extra"], [128, 4, 1, "", "allow_missing"], [128, 4, 1, "", "df"]], "baybe.objectives.single": [[130, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "from_dict"], [130, 2, 1, "", "from_json"], [130, 3, 1, "", "is_multi_output"], [130, 6, 1, "", "n_outputs"], [130, 6, 1, "", "targets"], [130, 2, 1, "", "to_dict"], [130, 2, 1, "", "to_json"], [130, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[130, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[130, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[130, 4, 1, "", "allow_extra"], [130, 4, 1, "", "allow_missing"], [130, 4, 1, "", "df"]], "baybe.objectives.validation": [[132, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[134, 0, 0, "-", "base"], [138, 0, 0, "-", "categorical"], [141, 0, 0, "-", "custom"], [143, 0, 0, "-", "enum"], [148, 0, 0, "-", "numerical"], [151, 0, 0, "-", "substance"], [154, 0, 0, "-", "utils"], [159, 0, 0, "-", "validation"]], "baybe.parameters.base": [[135, 1, 1, "", "ContinuousParameter"], [136, 1, 1, "", "DiscreteParameter"], [137, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[135, 2, 1, "", "__init__"], [135, 6, 1, "", "comp_rep_columns"], [135, 2, 1, "", "from_dict"], [135, 2, 1, "", "from_json"], [135, 6, 1, "", "is_continuous"], [135, 6, 1, "", "is_discrete"], [135, 2, 1, "", "is_in_range"], [135, 3, 1, "", "is_numerical"], [135, 3, 1, "", "name"], [135, 2, 1, "", "summary"], [135, 2, 1, "", "to_dict"], [135, 2, 1, "", "to_json"], [135, 2, 1, "", "to_searchspace"], [135, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[135, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[135, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[135, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[136, 2, 1, "", "__init__"], [136, 6, 1, "", "active_values"], [136, 6, 1, "", "comp_df"], [136, 6, 1, "", "comp_rep_columns"], [136, 3, 1, "", "encoding"], [136, 2, 1, "", "from_dict"], [136, 2, 1, "", "from_json"], [136, 6, 1, "", "is_continuous"], [136, 6, 1, "", "is_discrete"], [136, 2, 1, "", "is_in_range"], [136, 3, 1, "", "is_numerical"], [136, 3, 1, "", "name"], [136, 2, 1, "", "summary"], [136, 2, 1, "", "to_dict"], [136, 2, 1, "", "to_json"], [136, 2, 1, "", "to_searchspace"], [136, 2, 1, "", "to_subspace"], [136, 2, 1, "", "transform"], [136, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[136, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[136, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[136, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[136, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[137, 2, 1, "", "__init__"], [137, 6, 1, "", "comp_rep_columns"], [137, 2, 1, "", "from_dict"], [137, 2, 1, "", "from_json"], [137, 6, 1, "", "is_continuous"], [137, 6, 1, "", "is_discrete"], [137, 2, 1, "", "is_in_range"], [137, 3, 1, "", "is_numerical"], [137, 3, 1, "", "name"], [137, 2, 1, "", "summary"], [137, 2, 1, "", "to_dict"], [137, 2, 1, "", "to_json"], [137, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[137, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[137, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[137, 4, 1, "", "item"]], "baybe.parameters.categorical": [[139, 1, 1, "", "CategoricalParameter"], [140, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[139, 2, 1, "", "__init__"], [139, 6, 1, "", "active_values"], [139, 6, 1, "", "comp_df"], [139, 6, 1, "", "comp_rep_columns"], [139, 3, 1, "", "encoding"], [139, 2, 1, "", "from_dict"], [139, 2, 1, "", "from_json"], [139, 6, 1, "", "is_continuous"], [139, 6, 1, "", "is_discrete"], [139, 2, 1, "", "is_in_range"], [139, 3, 1, "", "is_numerical"], [139, 3, 1, "", "name"], [139, 2, 1, "", "summary"], [139, 2, 1, "", "to_dict"], [139, 2, 1, "", "to_json"], [139, 2, 1, "", "to_searchspace"], [139, 2, 1, "", "to_subspace"], [139, 2, 1, "", "transform"], [139, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[139, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[139, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[139, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[139, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[140, 2, 1, "", "__init__"], [140, 6, 1, "", "active_values"], [140, 6, 1, "", "comp_df"], [140, 6, 1, "", "comp_rep_columns"], [140, 3, 1, "", "encoding"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 6, 1, "", "is_continuous"], [140, 6, 1, "", "is_discrete"], [140, 2, 1, "", "is_in_range"], [140, 3, 1, "", "is_numerical"], [140, 3, 1, "", "name"], [140, 2, 1, "", "summary"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_json"], [140, 2, 1, "", "to_searchspace"], [140, 2, 1, "", "to_subspace"], [140, 2, 1, "", "transform"], [140, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[140, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[140, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[140, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[140, 4, 1, "", "series"]], "baybe.parameters.custom": [[142, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "active_values"], [142, 6, 1, "", "comp_df"], [142, 6, 1, "", "comp_rep_columns"], [142, 3, 1, "", "data"], [142, 3, 1, "", "decorrelate"], [142, 3, 1, "", "encoding"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 2, 1, "", "to_subspace"], [142, 2, 1, "", "transform"], [142, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[142, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[142, 4, 1, "", "series"]], "baybe.parameters.enum": [[144, 1, 1, "", "CategoricalEncoding"], [145, 1, 1, "", "CustomEncoding"], [146, 1, 1, "", "ParameterEncoding"], [147, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[144, 3, 1, "", "INT"], [144, 3, 1, "", "OHE"], [144, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[145, 3, 1, "", "CUSTOM"], [145, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[147, 3, 1, "", "ATOMPAIR"], [147, 3, 1, "", "AUTOCORR"], [147, 3, 1, "", "AVALON"], [147, 3, 1, "", "BCUT2D"], [147, 3, 1, "", "E3FP"], [147, 3, 1, "", "ECFP"], [147, 3, 1, "", "ELECTROSHAPE"], [147, 3, 1, "", "ERG"], [147, 3, 1, "", "ESTATE"], [147, 3, 1, "", "FUNCTIONALGROUPS"], [147, 3, 1, "", "GETAWAY"], [147, 3, 1, "", "GHOSECRIPPEN"], [147, 3, 1, "", "KLEKOTAROTH"], [147, 3, 1, "", "LAGGNER"], [147, 3, 1, "", "LAYERED"], [147, 3, 1, "", "LINGO"], [147, 3, 1, "", "MACCS"], [147, 3, 1, "", "MAP"], [147, 3, 1, "", "MHFP"], [147, 3, 1, "", "MORDRED"], [147, 3, 1, "", "MORGAN_FP"], [147, 3, 1, "", "MORSE"], [147, 3, 1, "", "MQNS"], [147, 3, 1, "", "PATTERN"], [147, 3, 1, "", "PHARMACOPHORE"], [147, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [147, 3, 1, "", "PUBCHEM"], [147, 3, 1, "", "RDF"], [147, 3, 1, "", "RDKIT"], [147, 3, 1, "", "RDKIT2DDESCRIPTORS"], [147, 3, 1, "", "RDKITFINGERPRINT"], [147, 3, 1, "", "SECFP"], [147, 3, 1, "", "TOPOLOGICALTORSION"], [147, 3, 1, "", "USR"], [147, 3, 1, "", "USRCAT"], [147, 3, 1, "", "VSA"], [147, 3, 1, "", "WHIM"], [147, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[149, 1, 1, "", "NumericalContinuousParameter"], [150, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[149, 2, 1, "", "__init__"], [149, 3, 1, "", "bounds"], [149, 6, 1, "", "comp_rep_columns"], [149, 2, 1, "", "from_dict"], [149, 2, 1, "", "from_json"], [149, 6, 1, "", "is_continuous"], [149, 6, 1, "", "is_discrete"], [149, 2, 1, "", "is_in_range"], [149, 3, 1, "", "is_numerical"], [149, 3, 1, "", "name"], [149, 2, 1, "", "summary"], [149, 2, 1, "", "to_dict"], [149, 2, 1, "", "to_json"], [149, 2, 1, "", "to_searchspace"], [149, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[149, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[149, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[149, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[150, 2, 1, "", "__init__"], [150, 6, 1, "", "active_values"], [150, 6, 1, "", "comp_df"], [150, 6, 1, "", "comp_rep_columns"], [150, 3, 1, "", "encoding"], [150, 2, 1, "", "from_dict"], [150, 2, 1, "", "from_json"], [150, 6, 1, "", "is_continuous"], [150, 6, 1, "", "is_discrete"], [150, 2, 1, "", "is_in_range"], [150, 3, 1, "", "is_numerical"], [150, 3, 1, "", "name"], [150, 2, 1, "", "summary"], [150, 2, 1, "", "to_dict"], [150, 2, 1, "", "to_json"], [150, 2, 1, "", "to_searchspace"], [150, 2, 1, "", "to_subspace"], [150, 3, 1, "", "tolerance"], [150, 2, 1, "", "transform"], [150, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[150, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[150, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[150, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[150, 4, 1, "", "series"]], "baybe.parameters.substance": [[152, 3, 1, "", "Smiles"], [153, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[153, 2, 1, "", "__init__"], [153, 6, 1, "", "active_values"], [153, 6, 1, "", "comp_df"], [153, 6, 1, "", "comp_rep_columns"], [153, 3, 1, "", "data"], [153, 3, 1, "", "decorrelate"], [153, 3, 1, "", "encoding"], [153, 2, 1, "", "from_dict"], [153, 2, 1, "", "from_json"], [153, 6, 1, "", "is_continuous"], [153, 6, 1, "", "is_discrete"], [153, 2, 1, "", "is_in_range"], [153, 3, 1, "", "is_numerical"], [153, 3, 1, "", "kwargs_conformer"], [153, 3, 1, "", "kwargs_fingerprint"], [153, 3, 1, "", "name"], [153, 2, 1, "", "summary"], [153, 2, 1, "", "to_dict"], [153, 2, 1, "", "to_json"], [153, 2, 1, "", "to_searchspace"], [153, 2, 1, "", "to_subspace"], [153, 2, 1, "", "transform"], [153, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[153, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[153, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[153, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[153, 4, 1, "", "series"]], "baybe.parameters.utils": [[155, 5, 1, "", "activate_parameter"], [156, 5, 1, "", "get_parameters_from_dataframe"], [157, 5, 1, "", "is_inactive"], [158, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[155, 4, 1, "", "parameter"], [155, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[156, 4, 1, "", "df"], [156, 4, 1, "", "factory"], [156, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[157, 4, 1, "", "lower_threshold"], [157, 4, 1, "", "upper_threshold"], [157, 4, 1, "", "x"]], "baybe.parameters.validation": [[160, 5, 1, "", "validate_decorrelation"], [161, 5, 1, "", "validate_is_finite"], [162, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[164, 0, 0, "-", "base"], [166, 0, 0, "-", "basic"]], "baybe.priors.base": [[165, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "from_dict"], [165, 2, 1, "", "from_json"], [165, 2, 1, "", "to_dict"], [165, 2, 1, "", "to_gpytorch"], [165, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[165, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[165, 4, 1, "", "string"]], "baybe.priors.basic": [[167, 1, 1, "", "BetaPrior"], [168, 1, 1, "", "GammaPrior"], [169, 1, 1, "", "HalfCauchyPrior"], [170, 1, 1, "", "HalfNormalPrior"], [171, 1, 1, "", "LogNormalPrior"], [172, 1, 1, "", "NormalPrior"], [173, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[167, 2, 1, "", "__init__"], [167, 3, 1, "", "alpha"], [167, 3, 1, "", "beta"], [167, 2, 1, "", "from_dict"], [167, 2, 1, "", "from_json"], [167, 2, 1, "", "to_dict"], [167, 2, 1, "", "to_gpytorch"], [167, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[167, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[167, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[168, 2, 1, "", "__init__"], [168, 3, 1, "", "concentration"], [168, 2, 1, "", "from_dict"], [168, 2, 1, "", "from_json"], [168, 3, 1, "", "rate"], [168, 2, 1, "", "to_dict"], [168, 2, 1, "", "to_gpytorch"], [168, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[168, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[168, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 3, 1, "", "scale"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_gpytorch"], [169, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[169, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 3, 1, "", "scale"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_gpytorch"], [170, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[170, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 3, 1, "", "loc"], [171, 3, 1, "", "scale"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_gpytorch"], [171, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[171, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 3, 1, "", "loc"], [172, 3, 1, "", "scale"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_gpytorch"], [172, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[172, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "a"], [173, 3, 1, "", "b"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 3, 1, "", "sigma"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[173, 4, 1, "", "string"]], "baybe.recommenders": [[175, 0, 0, "-", "base"], [177, 0, 0, "-", "meta"], [185, 0, 0, "-", "naive"], [187, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[176, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[176, 4, 1, "", "batch_size"], [176, 4, 1, "", "measurements"], [176, 4, 1, "", "objective"], [176, 4, 1, "", "pending_experiments"], [176, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[178, 0, 0, "-", "base"], [180, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[179, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[179, 2, 1, "", "__init__"], [179, 2, 1, "", "from_dict"], [179, 2, 1, "", "from_json"], [179, 2, 1, "", "get_current_recommender"], [179, 2, 1, "", "get_next_recommender"], [179, 2, 1, "", "get_non_meta_recommender"], [179, 6, 1, "", "is_stateful"], [179, 2, 1, "", "recommend"], [179, 2, 1, "", "select_recommender"], [179, 2, 1, "", "to_dict"], [179, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[179, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[179, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[181, 1, 1, "", "BaseSequentialMetaRecommender"], [182, 1, 1, "", "SequentialMetaRecommender"], [183, 1, 1, "", "StreamingSequentialMetaRecommender"], [184, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "from_dict"], [181, 2, 1, "", "from_json"], [181, 2, 1, "", "get_current_recommender"], [181, 2, 1, "", "get_next_recommender"], [181, 2, 1, "", "get_non_meta_recommender"], [181, 6, 1, "", "is_stateful"], [181, 2, 1, "", "recommend"], [181, 2, 1, "", "select_recommender"], [181, 2, 1, "", "to_dict"], [181, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[181, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[181, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "from_dict"], [182, 2, 1, "", "from_json"], [182, 2, 1, "", "get_current_recommender"], [182, 2, 1, "", "get_next_recommender"], [182, 2, 1, "", "get_non_meta_recommender"], [182, 6, 1, "", "is_stateful"], [182, 3, 1, "", "mode"], [182, 2, 1, "", "recommend"], [182, 3, 1, "", "recommenders"], [182, 2, 1, "", "select_recommender"], [182, 2, 1, "", "to_dict"], [182, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[182, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[182, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "from_dict"], [183, 2, 1, "", "from_json"], [183, 2, 1, "", "get_current_recommender"], [183, 2, 1, "", "get_next_recommender"], [183, 2, 1, "", "get_non_meta_recommender"], [183, 6, 1, "", "is_stateful"], [183, 2, 1, "", "recommend"], [183, 3, 1, "", "recommenders"], [183, 2, 1, "", "select_recommender"], [183, 2, 1, "", "to_dict"], [183, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[183, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[183, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "get_current_recommender"], [184, 2, 1, "", "get_next_recommender"], [184, 2, 1, "", "get_non_meta_recommender"], [184, 3, 1, "", "initial_recommender"], [184, 6, 1, "", "is_stateful"], [184, 2, 1, "", "recommend"], [184, 3, 1, "", "recommender"], [184, 3, 1, "", "remain_switched"], [184, 2, 1, "", "select_recommender"], [184, 3, 1, "", "switch_after"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[184, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[184, 4, 1, "", "string"]], "baybe.recommenders.naive": [[186, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[186, 2, 1, "", "__init__"], [186, 6, 1, "", "allow_recommending_already_measured"], [186, 6, 1, "", "allow_recommending_pending_experiments"], [186, 6, 1, "", "allow_repeated_recommendations"], [186, 3, 1, "", "compatibility"], [186, 3, 1, "", "cont_recommender"], [186, 3, 1, "", "disc_recommender"], [186, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[186, 4, 1, "", "batch_size"], [186, 4, 1, "", "measurements"], [186, 4, 1, "", "objective"], [186, 4, 1, "", "pending_experiments"], [186, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[188, 0, 0, "-", "base"], [190, 0, 0, "-", "bayesian"], [197, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[189, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[189, 2, 1, "", "__init__"], [189, 6, 1, "", "allow_recommending_already_measured"], [189, 6, 1, "", "allow_recommending_pending_experiments"], [189, 6, 1, "", "allow_repeated_recommendations"], [189, 3, 1, "", "compatibility"], [189, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[189, 4, 1, "", "batch_size"], [189, 4, 1, "", "measurements"], [189, 4, 1, "", "objective"], [189, 4, 1, "", "pending_experiments"], [189, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[191, 0, 0, "-", "base"], [193, 0, 0, "-", "botorch"], [195, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[192, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[192, 2, 1, "", "__init__"], [192, 3, 1, "", "acquisition_function"], [192, 2, 1, "", "acquisition_values"], [192, 6, 1, "", "allow_recommending_already_measured"], [192, 6, 1, "", "allow_recommending_pending_experiments"], [192, 6, 1, "", "allow_repeated_recommendations"], [192, 3, 1, "", "compatibility"], [192, 2, 1, "", "get_acquisition_function"], [192, 2, 1, "", "get_surrogate"], [192, 2, 1, "", "joint_acquisition_value"], [192, 2, 1, "", "recommend"], [192, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values.params": [[192, 4, 1, "", "acquisition_function"], [192, 4, 1, "", "candidates"], [192, 4, 1, "", "measurements"], [192, 4, 1, "", "objective"], [192, 4, 1, "", "pending_experiments"], [192, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[192, 4, 1, "", "batch_size"], [192, 4, 1, "", "measurements"], [192, 4, 1, "", "objective"], [192, 4, 1, "", "pending_experiments"], [192, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[194, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[194, 2, 1, "", "__init__"], [194, 3, 1, "", "acquisition_function"], [194, 2, 1, "", "acquisition_values"], [194, 6, 1, "", "allow_recommending_already_measured"], [194, 6, 1, "", "allow_recommending_pending_experiments"], [194, 6, 1, "", "allow_repeated_recommendations"], [194, 3, 1, "", "compatibility"], [194, 2, 1, "", "get_acquisition_function"], [194, 2, 1, "", "get_surrogate"], [194, 3, 1, "", "hybrid_sampler"], [194, 2, 1, "", "joint_acquisition_value"], [194, 3, 1, "", "max_n_subspaces"], [194, 3, 1, "", "n_raw_samples"], [194, 3, 1, "", "n_restarts"], [194, 2, 1, "", "recommend"], [194, 3, 1, "", "sampling_percentage"], [194, 3, 1, "", "sequential_continuous"], [194, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values.params": [[194, 4, 1, "", "acquisition_function"], [194, 4, 1, "", "candidates"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[194, 4, 1, "", "batch_size"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[196, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[198, 0, 0, "-", "base"], [200, 0, 0, "-", "clustering"], [205, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[199, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[199, 2, 1, "", "__init__"], [199, 6, 1, "", "allow_recommending_already_measured"], [199, 6, 1, "", "allow_recommending_pending_experiments"], [199, 6, 1, "", "allow_repeated_recommendations"], [199, 3, 1, "", "compatibility"], [199, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[199, 4, 1, "", "batch_size"], [199, 4, 1, "", "measurements"], [199, 4, 1, "", "objective"], [199, 4, 1, "", "pending_experiments"], [199, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[201, 1, 1, "", "GaussianMixtureClusteringRecommender"], [202, 1, 1, "", "KMeansClusteringRecommender"], [203, 1, 1, "", "PAMClusteringRecommender"], [204, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[201, 2, 1, "", "__init__"], [201, 6, 1, "", "allow_recommending_already_measured"], [201, 6, 1, "", "allow_recommending_pending_experiments"], [201, 6, 1, "", "allow_repeated_recommendations"], [201, 3, 1, "", "compatibility"], [201, 3, 1, "", "model_cluster_num_parameter_name"], [201, 3, 1, "", "model_params"], [201, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[201, 4, 1, "", "batch_size"], [201, 4, 1, "", "measurements"], [201, 4, 1, "", "objective"], [201, 4, 1, "", "pending_experiments"], [201, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[202, 2, 1, "", "__init__"], [202, 6, 1, "", "allow_recommending_already_measured"], [202, 6, 1, "", "allow_recommending_pending_experiments"], [202, 6, 1, "", "allow_repeated_recommendations"], [202, 3, 1, "", "compatibility"], [202, 3, 1, "", "model_cluster_num_parameter_name"], [202, 3, 1, "", "model_params"], [202, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[202, 4, 1, "", "batch_size"], [202, 4, 1, "", "measurements"], [202, 4, 1, "", "objective"], [202, 4, 1, "", "pending_experiments"], [202, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[203, 2, 1, "", "__init__"], [203, 6, 1, "", "allow_recommending_already_measured"], [203, 6, 1, "", "allow_recommending_pending_experiments"], [203, 6, 1, "", "allow_repeated_recommendations"], [203, 3, 1, "", "compatibility"], [203, 3, 1, "", "model_cluster_num_parameter_name"], [203, 3, 1, "", "model_params"], [203, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[203, 4, 1, "", "batch_size"], [203, 4, 1, "", "measurements"], [203, 4, 1, "", "objective"], [203, 4, 1, "", "pending_experiments"], [203, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[204, 2, 1, "", "__init__"], [204, 6, 1, "", "allow_recommending_already_measured"], [204, 6, 1, "", "allow_recommending_pending_experiments"], [204, 6, 1, "", "allow_repeated_recommendations"], [204, 3, 1, "", "compatibility"], [204, 3, 1, "", "model_cluster_num_parameter_name"], [204, 3, 1, "", "model_params"], [204, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[204, 4, 1, "", "batch_size"], [204, 4, 1, "", "measurements"], [204, 4, 1, "", "objective"], [204, 4, 1, "", "pending_experiments"], [204, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[206, 1, 1, "", "FPSRecommender"], [207, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[206, 2, 1, "", "__init__"], [206, 6, 1, "", "allow_recommending_already_measured"], [206, 6, 1, "", "allow_recommending_pending_experiments"], [206, 6, 1, "", "allow_repeated_recommendations"], [206, 3, 1, "", "compatibility"], [206, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[206, 4, 1, "", "batch_size"], [206, 4, 1, "", "measurements"], [206, 4, 1, "", "objective"], [206, 4, 1, "", "pending_experiments"], [206, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[207, 2, 1, "", "__init__"], [207, 6, 1, "", "allow_recommending_already_measured"], [207, 6, 1, "", "allow_recommending_pending_experiments"], [207, 6, 1, "", "allow_repeated_recommendations"], [207, 3, 1, "", "compatibility"], [207, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[207, 4, 1, "", "batch_size"], [207, 4, 1, "", "measurements"], [207, 4, 1, "", "objective"], [207, 4, 1, "", "pending_experiments"], [207, 4, 1, "", "searchspace"]], "baybe.searchspace": [[209, 0, 0, "-", "continuous"], [211, 0, 0, "-", "core"], [216, 0, 0, "-", "discrete"], [222, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[210, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[210, 2, 1, "", "__init__"], [210, 6, 1, "", "comp_rep_bounds"], [210, 6, 1, "", "comp_rep_columns"], [210, 6, 1, "", "constraints_cardinality"], [210, 3, 1, "", "constraints_lin_eq"], [210, 3, 1, "", "constraints_lin_ineq"], [210, 3, 1, "", "constraints_nonlin"], [210, 2, 1, "", "empty"], [210, 2, 1, "", "from_bounds"], [210, 2, 1, "", "from_dataframe"], [210, 2, 1, "", "from_dict"], [210, 2, 1, "", "from_json"], [210, 2, 1, "", "from_parameter"], [210, 2, 1, "", "from_product"], [210, 6, 1, "", "full_factorial"], [210, 2, 1, "", "get_parameters_by_name"], [210, 2, 1, "", "inactive_parameter_combinations"], [210, 6, 1, "", "is_empty"], [210, 6, 1, "", "n_inactive_parameter_combinations"], [210, 6, 1, "", "parameter_names"], [210, 6, 1, "", "parameter_names_in_cardinality_constraints"], [210, 3, 1, "", "parameters"], [210, 2, 1, "", "sample_from_full_factorial"], [210, 2, 1, "", "sample_uniform"], [210, 2, 1, "", "samples_full_factorial"], [210, 2, 1, "", "samples_random"], [210, 6, 1, "", "scaling_bounds"], [210, 2, 1, "", "to_dict"], [210, 2, 1, "", "to_json"], [210, 2, 1, "", "to_searchspace"], [210, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[210, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[210, 4, 1, "", "df"], [210, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[210, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[210, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[210, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[210, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[210, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[210, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[212, 1, 1, "", "SearchSpace"], [213, 1, 1, "", "SearchSpaceType"], [214, 5, 1, "", "to_searchspace"], [215, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[212, 2, 1, "", "__init__"], [212, 6, 1, "", "comp_rep_bounds"], [212, 6, 1, "", "comp_rep_columns"], [212, 6, 1, "", "constraints"], [212, 6, 1, "", "constraints_augmentable"], [212, 3, 1, "", "continuous"], [212, 3, 1, "", "discrete"], [212, 2, 1, "", "estimate_product_space_size"], [212, 2, 1, "", "from_dataframe"], [212, 2, 1, "", "from_dict"], [212, 2, 1, "", "from_json"], [212, 2, 1, "", "from_parameter"], [212, 2, 1, "", "from_product"], [212, 2, 1, "", "get_comp_rep_parameter_indices"], [212, 2, 1, "", "get_parameters_by_name"], [212, 6, 1, "", "n_tasks"], [212, 6, 1, "", "parameter_names"], [212, 6, 1, "", "parameters"], [212, 6, 1, "", "scaling_bounds"], [212, 6, 1, "", "task_idx"], [212, 2, 1, "", "to_dict"], [212, 2, 1, "", "to_json"], [212, 2, 1, "", "transform"], [212, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[212, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[212, 4, 1, "", "df"], [212, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[212, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[212, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[212, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[212, 4, 1, "", "constraints"], [212, 4, 1, "", "empty_encoding"], [212, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[212, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[212, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[212, 4, 1, "", "allow_extra"], [212, 4, 1, "", "allow_missing"], [212, 4, 1, "", "data"], [212, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[213, 3, 1, "", "CONTINUOUS"], [213, 3, 1, "", "DISCRETE"], [213, 3, 1, "", "EITHER"], [213, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[217, 1, 1, "", "MemorySize"], [218, 1, 1, "", "SubspaceDiscrete"], [219, 5, 1, "", "parameter_cartesian_prod_pandas"], [220, 5, 1, "", "parameter_cartesian_prod_polars"], [221, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[217, 2, 1, "", "__init__"], [217, 3, 1, "", "comp_rep_bytes"], [217, 6, 1, "", "comp_rep_human_readable"], [217, 3, 1, "", "comp_rep_shape"], [217, 3, 1, "", "exp_rep_bytes"], [217, 6, 1, "", "exp_rep_human_readable"], [217, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[218, 2, 1, "", "__init__"], [218, 3, 1, "", "comp_rep"], [218, 6, 1, "", "comp_rep_bounds"], [218, 6, 1, "", "comp_rep_columns"], [218, 3, 1, "", "constraints"], [218, 2, 1, "", "empty"], [218, 3, 1, "", "empty_encoding"], [218, 2, 1, "", "estimate_product_space_size"], [218, 3, 1, "", "exp_rep"], [218, 2, 1, "", "from_dataframe"], [218, 2, 1, "", "from_dict"], [218, 2, 1, "", "from_json"], [218, 2, 1, "", "from_parameter"], [218, 2, 1, "", "from_product"], [218, 2, 1, "", "from_simplex"], [218, 2, 1, "", "get_candidates"], [218, 2, 1, "", "get_parameters_by_name"], [218, 6, 1, "", "is_empty"], [218, 6, 1, "", "metadata"], [218, 6, 1, "", "parameter_names"], [218, 3, 1, "", "parameters"], [218, 6, 1, "", "scaling_bounds"], [218, 2, 1, "", "to_dict"], [218, 2, 1, "", "to_json"], [218, 2, 1, "", "to_searchspace"], [218, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[218, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[218, 4, 1, "", "df"], [218, 4, 1, "", "empty_encoding"], [218, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[218, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[218, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[218, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[218, 4, 1, "", "boundary_only"], [218, 4, 1, "", "constraints"], [218, 4, 1, "", "max_nonzero"], [218, 4, 1, "", "max_sum"], [218, 4, 1, "", "min_nonzero"], [218, 4, 1, "", "product_parameters"], [218, 4, 1, "", "simplex_parameters"], [218, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[218, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[219, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[220, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[223, 5, 1, "", "get_transform_parameters"], [224, 5, 1, "", "validate_parameter_names"], [225, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[227, 0, 0, "-", "core"], [234, 0, 0, "-", "mixin"], [236, 0, 0, "-", "utils"]], "baybe.serialization.core": [[228, 5, 1, "", "block_deserialization_hook"], [229, 5, 1, "", "block_serialization_hook"], [230, 8, 1, "", "converter"], [231, 5, 1, "", "get_base_structure_hook"], [232, 5, 1, "", "select_constructor_hook"], [233, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[231, 4, 1, "", "base"], [231, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[233, 4, 1, "", "base"], [233, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[235, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[235, 2, 1, "", "from_dict"], [235, 2, 1, "", "from_json"], [235, 2, 1, "", "to_dict"], [235, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[235, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[235, 4, 1, "", "string"]], "baybe.serialization.utils": [[237, 5, 1, "", "deserialize_dataframe"], [238, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[240, 0, 0, "-", "core"], [242, 0, 0, "-", "lookup"], [244, 0, 0, "-", "scenarios"], [246, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[241, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[241, 4, 1, "", "batch_size"], [241, 4, 1, "", "campaign"], [241, 4, 1, "", "impute_mode"], [241, 4, 1, "", "initial_data"], [241, 4, 1, "", "lookup"], [241, 4, 1, "", "n_doe_iterations"], [241, 4, 1, "", "noise_percent"], [241, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[243, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[243, 4, 1, "", "impute_mode"], [243, 4, 1, "", "lookup"], [243, 4, 1, "", "queries"], [243, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[245, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[245, 4, 1, "", "batch_size"], [245, 4, 1, "", "groupby"], [245, 4, 1, "", "impute_mode"], [245, 4, 1, "", "initial_data"], [245, 4, 1, "", "lookup"], [245, 4, 1, "", "n_doe_iterations"], [245, 4, 1, "", "n_mc_iterations"], [245, 4, 1, "", "noise_percent"], [245, 4, 1, "", "random_seed"], [245, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[247, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[247, 4, 1, "", "batch_size"], [247, 4, 1, "", "campaign"], [247, 4, 1, "", "groupby"], [247, 4, 1, "", "lookup"], [247, 4, 1, "", "n_doe_iterations"], [247, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[249, 0, 0, "-", "bandit"], [251, 0, 0, "-", "base"], [256, 0, 0, "-", "composite"], [258, 0, 0, "-", "custom"], [261, 0, 0, "-", "gaussian_process"], [276, 0, 0, "-", "linear"], [278, 0, 0, "-", "naive"], [280, 0, 0, "-", "ngboost"], [282, 0, 0, "-", "random_forest"], [284, 0, 0, "-", "utils"], [288, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[250, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[250, 2, 1, "", "__init__"], [250, 2, 1, "", "fit"], [250, 2, 1, "", "from_dict"], [250, 2, 1, "", "from_json"], [250, 2, 1, "", "posterior"], [250, 2, 1, "", "posterior_means"], [250, 2, 1, "", "posterior_modes"], [250, 2, 1, "", "posterior_stats"], [250, 3, 1, "", "prior"], [250, 2, 1, "", "replicate"], [250, 3, 1, "", "supports_multi_output"], [250, 3, 1, "", "supports_transfer_learning"], [250, 2, 1, "", "to_botorch"], [250, 2, 1, "", "to_dict"], [250, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[250, 4, 1, "", "measurements"], [250, 4, 1, "", "objective"], [250, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[250, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[250, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[250, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[250, 4, 1, "", "candidates"], [250, 4, 1, "", "stats"]], "baybe.surrogates.base": [[252, 1, 1, "", "IndependentGaussianSurrogate"], [253, 8, 1, "", "PosteriorStatistic"], [254, 1, 1, "", "Surrogate"], [255, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[252, 2, 1, "", "__init__"], [252, 2, 1, "", "fit"], [252, 2, 1, "", "from_dict"], [252, 2, 1, "", "from_json"], [252, 2, 1, "", "posterior"], [252, 2, 1, "", "posterior_stats"], [252, 2, 1, "", "replicate"], [252, 3, 1, "", "supports_multi_output"], [252, 3, 1, "", "supports_transfer_learning"], [252, 2, 1, "", "to_botorch"], [252, 2, 1, "", "to_dict"], [252, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[252, 4, 1, "", "measurements"], [252, 4, 1, "", "objective"], [252, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[252, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[252, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[252, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[252, 4, 1, "", "candidates"], [252, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate": [[254, 2, 1, "", "__init__"], [254, 2, 1, "", "fit"], [254, 2, 1, "", "from_dict"], [254, 2, 1, "", "from_json"], [254, 2, 1, "", "posterior"], [254, 2, 1, "", "posterior_stats"], [254, 2, 1, "", "replicate"], [254, 3, 1, "", "supports_multi_output"], [254, 3, 1, "", "supports_transfer_learning"], [254, 2, 1, "", "to_botorch"], [254, 2, 1, "", "to_dict"], [254, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[254, 4, 1, "", "measurements"], [254, 4, 1, "", "objective"], [254, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[254, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[254, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[254, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[254, 4, 1, "", "candidates"], [254, 4, 1, "", "stats"]], "baybe.surrogates.base.SurrogateProtocol": [[255, 2, 1, "", "__init__"], [255, 2, 1, "", "fit"], [255, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[257, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[257, 2, 1, "", "__init__"], [257, 2, 1, "", "fit"], [257, 2, 1, "", "from_dict"], [257, 2, 1, "", "from_json"], [257, 2, 1, "", "from_replication"], [257, 2, 1, "", "posterior"], [257, 2, 1, "", "posterior_stats"], [257, 3, 1, "", "surrogates"], [257, 2, 1, "", "to_botorch"], [257, 2, 1, "", "to_dict"], [257, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[257, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[257, 4, 1, "", "string"]], "baybe.surrogates.custom": [[259, 1, 1, "", "CustomONNXSurrogate"], [260, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[259, 2, 1, "", "__init__"], [259, 2, 1, "", "default_model"], [259, 2, 1, "", "fit"], [259, 2, 1, "", "from_dict"], [259, 2, 1, "", "from_json"], [259, 3, 1, "", "onnx_input_name"], [259, 3, 1, "", "onnx_str"], [259, 2, 1, "", "posterior"], [259, 2, 1, "", "posterior_stats"], [259, 2, 1, "", "replicate"], [259, 3, 1, "", "supports_multi_output"], [259, 3, 1, "", "supports_transfer_learning"], [259, 2, 1, "", "to_botorch"], [259, 2, 1, "", "to_dict"], [259, 2, 1, "", "to_json"], [259, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[259, 4, 1, "", "measurements"], [259, 4, 1, "", "objective"], [259, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[259, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[259, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[259, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[259, 4, 1, "", "candidates"], [259, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[259, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[262, 0, 0, "-", "core"], [264, 0, 0, "-", "kernel_factory"], [268, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[263, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[263, 2, 1, "", "__init__"], [263, 2, 1, "", "fit"], [263, 2, 1, "", "from_dict"], [263, 2, 1, "", "from_json"], [263, 2, 1, "", "from_preset"], [263, 3, 1, "", "kernel_factory"], [263, 2, 1, "", "posterior"], [263, 2, 1, "", "posterior_stats"], [263, 2, 1, "", "replicate"], [263, 3, 1, "", "supports_multi_output"], [263, 3, 1, "", "supports_transfer_learning"], [263, 2, 1, "", "to_botorch"], [263, 2, 1, "", "to_dict"], [263, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[263, 4, 1, "", "measurements"], [263, 4, 1, "", "objective"], [263, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[263, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[263, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[263, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[263, 4, 1, "", "candidates"], [263, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.kernel_factory": [[265, 1, 1, "", "KernelFactory"], [266, 1, 1, "", "PlainKernelFactory"], [267, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[265, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[266, 2, 1, "", "__init__"], [266, 2, 1, "", "from_dict"], [266, 2, 1, "", "from_json"], [266, 3, 1, "", "kernel"], [266, 2, 1, "", "to_dict"], [266, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[266, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[266, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[269, 0, 0, "-", "core"], [272, 0, 0, "-", "default"], [274, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[270, 1, 1, "", "GaussianProcessPreset"], [271, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[270, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[273, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[273, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[275, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[275, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[277, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[277, 2, 1, "", "__init__"], [277, 2, 1, "", "fit"], [277, 2, 1, "", "from_dict"], [277, 2, 1, "", "from_json"], [277, 3, 1, "", "model_params"], [277, 2, 1, "", "posterior"], [277, 2, 1, "", "posterior_stats"], [277, 2, 1, "", "replicate"], [277, 3, 1, "", "supports_multi_output"], [277, 3, 1, "", "supports_transfer_learning"], [277, 2, 1, "", "to_botorch"], [277, 2, 1, "", "to_dict"], [277, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[277, 4, 1, "", "measurements"], [277, 4, 1, "", "objective"], [277, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[277, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[277, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[277, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[277, 4, 1, "", "candidates"], [277, 4, 1, "", "stats"]], "baybe.surrogates.naive": [[279, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[279, 2, 1, "", "__init__"], [279, 2, 1, "", "fit"], [279, 2, 1, "", "from_dict"], [279, 2, 1, "", "from_json"], [279, 2, 1, "", "posterior"], [279, 2, 1, "", "posterior_stats"], [279, 2, 1, "", "replicate"], [279, 3, 1, "", "supports_multi_output"], [279, 3, 1, "", "supports_transfer_learning"], [279, 2, 1, "", "to_botorch"], [279, 2, 1, "", "to_dict"], [279, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[279, 4, 1, "", "measurements"], [279, 4, 1, "", "objective"], [279, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[279, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[279, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[279, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[279, 4, 1, "", "candidates"], [279, 4, 1, "", "stats"]], "baybe.surrogates.ngboost": [[281, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[281, 2, 1, "", "__init__"], [281, 2, 1, "", "fit"], [281, 2, 1, "", "from_dict"], [281, 2, 1, "", "from_json"], [281, 3, 1, "", "model_params"], [281, 2, 1, "", "posterior"], [281, 2, 1, "", "posterior_stats"], [281, 2, 1, "", "replicate"], [281, 3, 1, "", "supports_multi_output"], [281, 3, 1, "", "supports_transfer_learning"], [281, 2, 1, "", "to_botorch"], [281, 2, 1, "", "to_dict"], [281, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[281, 4, 1, "", "measurements"], [281, 4, 1, "", "objective"], [281, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[281, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[281, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[281, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[281, 4, 1, "", "candidates"], [281, 4, 1, "", "stats"]], "baybe.surrogates.random_forest": [[283, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[283, 2, 1, "", "__init__"], [283, 2, 1, "", "fit"], [283, 2, 1, "", "from_dict"], [283, 2, 1, "", "from_json"], [283, 3, 1, "", "model_params"], [283, 2, 1, "", "posterior"], [283, 2, 1, "", "posterior_stats"], [283, 2, 1, "", "replicate"], [283, 3, 1, "", "supports_multi_output"], [283, 3, 1, "", "supports_transfer_learning"], [283, 2, 1, "", "to_botorch"], [283, 2, 1, "", "to_dict"], [283, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[283, 4, 1, "", "measurements"], [283, 4, 1, "", "objective"], [283, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[283, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[283, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[283, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[283, 4, 1, "", "candidates"], [283, 4, 1, "", "stats"]], "baybe.surrogates.utils": [[285, 5, 1, "", "batchify_ensemble_predictor"], [286, 5, 1, "", "batchify_mean_var_prediction"], [287, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[285, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[287, 4, 1, "", "cls"], [287, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[289, 5, 1, "", "get_model_params_validator"], [290, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[289, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[290, 4, 1, "", "model_cls"]], "baybe.targets": [[292, 0, 0, "-", "base"], [294, 0, 0, "-", "binary"], [297, 0, 0, "-", "enum"], [300, 0, 0, "-", "numerical"], [302, 0, 0, "-", "transforms"]], "baybe.targets.base": [[293, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[293, 2, 1, "", "__init__"], [293, 2, 1, "", "from_dict"], [293, 2, 1, "", "from_json"], [293, 3, 1, "", "name"], [293, 2, 1, "", "summary"], [293, 2, 1, "", "to_dict"], [293, 2, 1, "", "to_json"], [293, 2, 1, "", "to_objective"], [293, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[293, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[293, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[293, 4, 1, "", "series"]], "baybe.targets.binary": [[295, 1, 1, "", "BinaryTarget"], [296, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[295, 2, 1, "", "__init__"], [295, 3, 1, "", "failure_value"], [295, 2, 1, "", "from_dict"], [295, 2, 1, "", "from_json"], [295, 3, 1, "", "name"], [295, 3, 1, "", "success_value"], [295, 2, 1, "", "summary"], [295, 2, 1, "", "to_dict"], [295, 2, 1, "", "to_json"], [295, 2, 1, "", "to_objective"], [295, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[295, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[295, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[295, 4, 1, "", "series"]], "baybe.targets.enum": [[298, 1, 1, "", "TargetMode"], [299, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[298, 3, 1, "", "MATCH"], [298, 3, 1, "", "MAX"], [298, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[299, 3, 1, "", "BELL"], [299, 3, 1, "", "LINEAR"], [299, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[301, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[301, 2, 1, "", "__init__"], [301, 3, 1, "", "bounds"], [301, 2, 1, "", "from_dict"], [301, 2, 1, "", "from_json"], [301, 3, 1, "", "mode"], [301, 3, 1, "", "name"], [301, 2, 1, "", "summary"], [301, 2, 1, "", "to_dict"], [301, 2, 1, "", "to_json"], [301, 2, 1, "", "to_objective"], [301, 2, 1, "", "transform"], [301, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[301, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[301, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[301, 4, 1, "", "series"]], "baybe.targets.transforms": [[303, 5, 1, "", "bell_transform"], [304, 5, 1, "", "linear_transform"], [305, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[303, 4, 1, "", "arr"], [303, 4, 1, "", "lower"], [303, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[304, 4, 1, "", "arr"], [304, 4, 1, "", "descending"], [304, 4, 1, "", "lower"], [304, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[305, 4, 1, "", "arr"], [305, 4, 1, "", "lower"], [305, 4, 1, "", "upper"]], "baybe.telemetry": [[307, 5, 1, "", "get_user_details"], [308, 5, 1, "", "is_enabled"], [309, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [310, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[309, 4, 1, "", "cached_recommendation"], [309, 4, 1, "", "measurements"], [309, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[310, 4, 1, "", "instrument_name"], [310, 4, 1, "", "value"]], "baybe.utils": [[312, 0, 0, "-", "augmentation"], [315, 0, 0, "-", "basic"], [331, 0, 0, "-", "boolean"], [335, 0, 0, "-", "chemistry"], [340, 0, 0, "-", "conversion"], [344, 0, 0, "-", "dataframe"], [359, 0, 0, "-", "interval"], [364, 0, 0, "-", "memory"], [366, 0, 0, "-", "numerical"], [373, 0, 0, "-", "random"], [376, 0, 0, "-", "sampling_algorithms"], [380, 0, 0, "-", "scaling"], [382, 0, 0, "-", "torch"], [385, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[313, 5, 1, "", "df_apply_dependency_augmentation"], [314, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[313, 4, 1, "", "affected"], [313, 4, 1, "", "causing"], [313, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[314, 4, 1, "", "column_groups"], [314, 4, 1, "", "df"]], "baybe.utils.basic": [[316, 1, 1, "", "Dummy"], [317, 8, 1, "", "UNSPECIFIED"], [318, 1, 1, "", "UnspecifiedType"], [319, 1, 1, "", "classproperty"], [320, 5, 1, "", "convert_to_float"], [321, 5, 1, "", "find_subclass"], [322, 5, 1, "", "get_baseclasses"], [323, 5, 1, "", "get_subclasses"], [324, 5, 1, "", "group_duplicate_values"], [325, 5, 1, "", "hilberts_factory"], [326, 5, 1, "", "is_all_instance"], [327, 5, 1, "", "match_attributes"], [328, 5, 1, "", "refers_to"], [329, 5, 1, "", "register_hooks"], [330, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[316, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[319, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[322, 4, 1, "", "abstract"], [322, 4, 1, "", "cls"], [322, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[323, 4, 1, "", "abstract"], [323, 4, 1, "", "cls"], [323, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[324, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[327, 4, 1, "", "callable_"], [327, 4, 1, "", "ignore"], [327, 4, 1, "", "object"], [327, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[329, 4, 1, "", "post_hooks"], [329, 4, 1, "", "pre_hooks"], [329, 4, 1, "", "target"]], "baybe.utils.boolean": [[332, 5, 1, "", "check_if_in"], [333, 5, 1, "", "is_abstract"], [334, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[332, 4, 1, "", "allowed"], [332, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[333, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[334, 4, 1, "", "val"]], "baybe.utils.chemistry": [[336, 5, 1, "", "get_canonical_smiles"], [337, 5, 1, "", "get_fingerprint_class"], [338, 5, 1, "", "name_to_smiles"], [339, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[337, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[338, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[339, 4, 1, "", "encoding"], [339, 4, 1, "", "kwargs_conformer"], [339, 4, 1, "", "kwargs_fingerprint"], [339, 4, 1, "", "prefix"], [339, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[341, 5, 1, "", "fraction_to_float"], [342, 5, 1, "", "nonstring_to_tuple"], [343, 5, 1, "", "to_string"]], "baybe.utils.conversion.fraction_to_float.params": [[341, 4, 1, "", "value"]], "baybe.utils.conversion.to_string.params": [[343, 4, 1, "", "*fields"], [343, 4, 1, "", "header"], [343, 4, 1, "", "single_line"]], "baybe.utils.dataframe": [[345, 5, 1, "", "add_fake_measurements"], [346, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [347, 5, 1, "", "add_parameter_noise"], [348, 5, 1, "", "arrays_to_dataframes"], [349, 5, 1, "", "create_fake_input"], [350, 5, 1, "", "df_drop_single_value_columns"], [351, 5, 1, "", "df_drop_string_columns"], [352, 5, 1, "", "df_uncorrelated_features"], [353, 5, 1, "", "filter_df"], [354, 5, 1, "", "fuzzy_row_match"], [355, 5, 1, "", "get_transform_objects"], [356, 5, 1, "", "pretty_print_df"], [357, 5, 1, "", "to_tensor"], [358, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[345, 4, 1, "", "bad_intervals"], [345, 4, 1, "", "data"], [345, 4, 1, "", "good_intervals"], [345, 4, 1, "", "good_reference_values"], [345, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[346, 4, 1, "", "df"], [346, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[347, 4, 1, "", "data"], [347, 4, 1, "", "noise_level"], [347, 4, 1, "", "noise_type"], [347, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[348, 4, 1, "", "input_labels"], [348, 4, 1, "", "output_labels"], [348, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[349, 4, 1, "", "**kwargs"], [349, 4, 1, "", "n_rows"], [349, 4, 1, "", "parameters"], [349, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[350, 4, 1, "", "df"], [350, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[351, 4, 1, "", "df"], [351, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[352, 4, 1, "", "df"], [352, 4, 1, "", "exclude_list"], [352, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[353, 4, 1, "", "complement"], [353, 4, 1, "", "df"], [353, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[354, 4, 1, "", "left_df"], [354, 4, 1, "", "parameters"], [354, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[355, 4, 1, "", "allow_extra"], [355, 4, 1, "", "allow_missing"], [355, 4, 1, "", "df"], [355, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[356, 4, 1, "", "df"], [356, 4, 1, "", "max_columns"], [356, 4, 1, "", "max_colwidth"], [356, 4, 1, "", "max_rows"], [356, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[357, 4, 1, "", "*x"]], "baybe.utils.interval": [[360, 7, 1, "", "InfiniteIntervalError"], [361, 1, 1, "", "Interval"], [362, 5, 1, "", "convert_bounds"], [363, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[360, 2, 1, "", "__init__"], [360, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[361, 2, 1, "", "__init__"], [361, 6, 1, "", "center"], [361, 2, 1, "", "contains"], [361, 2, 1, "", "create"], [361, 2, 1, "", "from_dict"], [361, 2, 1, "", "from_json"], [361, 6, 1, "", "is_bounded"], [361, 6, 1, "", "is_degenerate"], [361, 6, 1, "", "is_fully_unbounded"], [361, 6, 1, "", "is_half_bounded"], [361, 6, 1, "", "is_left_bounded"], [361, 6, 1, "", "is_right_bounded"], [361, 3, 1, "", "lower"], [361, 2, 1, "", "to_dict"], [361, 2, 1, "", "to_json"], [361, 2, 1, "", "to_ndarray"], [361, 2, 1, "", "to_tensor"], [361, 2, 1, "", "to_tuple"], [361, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[361, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[361, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[361, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[362, 4, 1, "", "bounds"]], "baybe.utils.memory": [[365, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[365, 4, 1, "", "num"]], "baybe.utils.numerical": [[367, 3, 1, "", "DTypeFloatNumpy"], [368, 3, 1, "", "DTypeFloatONNX"], [369, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [370, 5, 1, "", "closer_element"], [371, 5, 1, "", "closest_element"], [372, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[370, 4, 1, "", "target"], [370, 4, 1, "", "x"], [370, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[371, 4, 1, "", "array"], [371, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[372, 4, 1, "", "arr"], [372, 4, 1, "", "weights"]], "baybe.utils.random": [[374, 5, 1, "", "set_random_seed"], [375, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[374, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[375, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[377, 1, 1, "", "DiscreteSamplingMethod"], [378, 5, 1, "", "farthest_point_sampling"], [379, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[377, 3, 1, "", "FPS"], [377, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[378, 4, 1, "", "initialization"], [378, 4, 1, "", "n_samples"], [378, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[379, 4, 1, "", "df"], [379, 4, 1, "", "method"], [379, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[381, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[381, 2, 1, "", "__init__"], [381, 2, 1, "", "fit"], [381, 3, 1, "", "mapping"], [381, 2, 1, "", "transform"]], "baybe.utils.torch": [[383, 8, 1, "", "DTypeFloatTorch"], [384, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[386, 5, 1, "", "finite_float"], [387, 5, 1, "", "non_inf_float"], [388, 5, 1, "", "non_nan_float"], [389, 5, 1, "", "validate_not_nan"], [390, 5, 1, "", "validate_parameter_input"], [391, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[390, 4, 1, "", "data"], [390, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [390, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[391, 4, 1, "", "data"], [391, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 194, 210, 212, 218, 235, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 325, 357, 361, 392, 395, 402, 406, 409, 410, 413, 414, 416, 417, 418, 419, 420, 422, 427, 431, 432, 433, 436, 437, 438, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 457], "0": [8, 13, 16, 22, 31, 34, 44, 45, 51, 107, 142, 150, 153, 173, 181, 182, 183, 194, 218, 241, 243, 250, 252, 254, 259, 263, 277, 279, 281, 283, 303, 304, 305, 313, 314, 334, 346, 347, 352, 353, 368, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 419, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 436, 441, 442, 444, 445, 449, 450, 452, 453, 454, 456, 459], "00": [426, 452], "000": [406, 428], "0007823230000667536": 409, "001": [44, 346, 445], "001157": 424, "005": [394, 395, 396, 398, 399], "006510": 421, "009251": 417, "01": [173, 401, 402, 407, 410, 425, 426, 433], "013945": 424, "02": 433, "021": [275, 352], "022600": 421, "027100": 417, "03213": [275, 352], "035349": 417, "038701": 421, "046256": 417, "05": 433, "053246": 425, "053642": 424, "057": [394, 395, 396, 398, 399, 409], "06": [218, 287], "075331": 424, "078041": 417, "08": 433, "081023": 426, "084086": 421, "09653736976391157": 419, "0f": 410, "1": [13, 16, 26, 31, 44, 107, 124, 142, 153, 184, 194, 210, 241, 243, 245, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 303, 304, 305, 310, 313, 314, 324, 334, 347, 349, 353, 368, 372, 378, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 419, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 436, 437, 441, 444, 445, 449, 450, 452, 453, 454, 456, 459], "10": [13, 16, 194, 243, 275, 352, 393, 395, 404, 405, 406, 410, 413, 414, 416, 417, 419, 421, 422, 424, 428, 429, 430, 432, 433, 436, 443, 444, 450, 454, 459], "100": [399, 404, 405, 406, 407, 410, 413, 414, 416, 417, 421, 422, 426, 428, 433, 448, 449, 450, 454, 456, 459], "1000": [422, 454], "100243": 424, "100292": 417, "102": 425, "1024": [147, 438, 450], "1038": [275, 352], "105": [394, 395, 396, 398, 399, 409, 421, 452], "106": 421, "11": [319, 416, 417, 426, 437], "111": 428, "1147": 406, "1148": 406, "1149": 406, "1150": 406, "12": [398, 416, 417, 426, 439, 444, 452], "120": [394, 395, 396, 398, 399, 404, 406, 409, 450], "120000": 425, "122": 428, "123500": 398, "126": [404, 406, 407, 437], "126129": 417, "1268824": [394, 395, 396], "127992": 424, "128": 10, "129740": 417, "13": [416, 432, 452], "1337": [410, 411, 459], "135": 426, "135771": 421, "138970": 424, "139473": 417, "14": [416, 452], "142641": 426, "14448993259018328": 419, "1454": 438, "146920": 417, "15": [243, 398, 406, 416, 417, 432, 433, 436, 444, 452], "150": [404, 407, 445], "1500": 450, "151": 406, "153": [394, 395, 396, 398, 399, 409], "16": [356, 368, 399, 416, 417], "162441": 421, "166605": 417, "17": [416, 426], "176": 426, "177": 428, "177040": 424, "179361": 417, "18": [416, 417, 421, 444], "180": 404, "181": 421, "186": 425, "188": 428, "19": [416, 417], "192": 406, "199708": 424, "1e": [218, 287], "2": [8, 13, 16, 22, 107, 109, 124, 243, 313, 314, 324, 345, 353, 372, 378, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 410, 411, 413, 414, 416, 417, 419, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 436, 441, 444, 445, 449, 450, 452, 453, 454, 456], "20": [13, 16, 153, 243, 393, 394, 395, 396, 410, 411, 416, 417, 421, 438, 450, 457, 459], "200": [395, 404, 406, 413, 414, 419, 428], "2004": 441, "2007": 457, "2021": 395, "2022": 436, "2025": 436, "203359": 424, "204331": 417, "206": 425, "207188": 424, "209": 421, "21": [416, 417, 429], "210853": 417, "213": 421, "22": [13, 16, 416, 417, 421, 444], "221": [421, 438], "221750": 424, "222": 428, "224347": 424, "228440": 417, "23": [416, 417, 444, 454], "230032": 417, "232741": 424, "233": 421, "235": 425, "24": [399, 405, 416, 417, 421, 452], "241": 450, "25": [410, 416, 421, 432, 452], "250": 442, "250126": 398, "252": 399, "259332": 417, "259437": 424, "26": [416, 452], "263": 398, "266547": 417, "268340": 424, "27": [416, 417, 452], "270": 421, "273": 421, "277": 421, "278": 421, "279": 421, "279579": 421, "28": [416, 417], "280": 421, "281389": 417, "282689": 417, "284": 399, "287995": 417, "289229": 417, "29": [413, 416, 421, 436], "293045": 424, "298": 399, "3": [243, 313, 314, 319, 324, 353, 356, 394, 395, 396, 399, 402, 404, 405, 406, 407, 409, 411, 414, 416, 417, 419, 421, 422, 424, 425, 426, 428, 429, 432, 433, 436, 437, 439, 441, 444, 445, 448, 450, 452, 453, 454, 456, 457], "30": [393, 407, 411, 416, 417, 450], "302642": 417, "306": 398, "3078f3": 438, "31": [416, 421, 429], "315528": 426, "318352": 424, "319160": 417, "32": [405, 416, 444, 450], "323383": 421, "33": [405, 416, 421], "337776": 421, "338586": 421, "34": [405, 444], "35": [405, 416, 417], "355675": 421, "356164": 417, "356688": 424, "37": 421, "374604": 417, "376050": 425, "377837": 421, "38": 444, "389923": 417, "39": [421, 450], "393982": 417, "3d": 411, "4": [13, 16, 147, 313, 314, 356, 401, 402, 404, 405, 406, 407, 411, 416, 417, 419, 421, 424, 425, 426, 436, 441, 444, 445, 450, 452], "40": [416, 421, 449, 450], "40x": 438, "413391": 417, "416852": 417, "42": [419, 422, 444], "422162": 417, "424199": 417, "427679": 417, "43": 421, "430165": 421, "433423": 426, "434354": 417, "439933": 421, "441023": 417, "447": 404, "448": 404, "448283": 424, "449": 404, "45": [416, 421, 456], "450": 404, "459438": 417, "462129": 417, "468": 438, "468877": 424, "473152": 421, "48": 417, "487272": 421, "494051": 421, "497832": 424, "4x": 438, "5": [107, 153, 313, 314, 394, 396, 401, 404, 405, 406, 407, 410, 413, 414, 416, 417, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 436, 441, 442, 443, 444, 445, 450, 452, 454, 457, 459], "50": [407, 414, 416, 419, 432, 433, 441, 442, 450, 452, 456], "500": [411, 450], "502473": 417, "5066666666666667": 419, "508662": 417, "509578": 417, "51": 421, "510305": 421, "515890": 417, "518627": 424, "518829": 417, "519507": 417, "52": 421, "53": [417, 421], "5313": 330, "534671": 417, "536208": 417, "54": [436, 444], "544889": 417, "545620": 421, "546352": 417, "55": [421, 456], "56": [421, 444, 454], "563541": 417, "566517": 417, "57": 417, "575992": 417, "576702": 426, "580970": 417, "581019": 399, "583273": 426, "59": [428, 436, 444], "590": 395, "593928": 399, "6": [313, 314, 356, 394, 395, 396, 404, 405, 406, 407, 416, 417, 419, 421, 424, 426, 428, 441, 445, 452], "60": [421, 449], "611704": 421, "612844": 417, "616415": 424, "617855": 417, "618152": 421, "62": [419, 444], "629999": 424, "64": 194, "645354": 417, "646461": 421, "65": [417, 419, 421], "650723": 421, "652189": 421, "662759": 426, "66368270ffd51418ec58bd793f2d9b1b": 457, "676444": 417, "69": [394, 395, 396, 417, 421], "690746": 417, "692848": 424, "693307": 421, "7": [153, 313, 314, 352, 399, 405, 407, 411, 416, 417, 421, 422, 424, 432, 441, 444, 450, 452], "70": 416, "701337": 421, "706667": 425, "71": [417, 450], "711093": 424, "711607": 417, "714251": 424, "716920": 421, "717848": 417, "72": 444, "721638": 426, "722760": 421, "724612": 426, "73": 417, "730442": 425, "732008": 421, "732707": 417, "735224": 417, "745": 459, "745987": 424, "748667": 417, "75": [416, 425, 452], "750980": 424, "751235": 417, "756997": 417, "758084": 417, "772277": 426, "778": 428, "78": 417, "789618": 417, "79": 436, "791007": 421, "793674": 421, "797463": 417, "7gz": 450, "7hf": 450, "8": [314, 394, 396, 404, 406, 407, 416, 417, 419, 421, 424, 436, 441, 445], "80": [417, 445], "803019": 424, "807265": 417, "814939": 424, "820104": 421, "826891": 424, "83": 444, "833627": 417, "836125": 417, "8389": 330, "8417": 330, "855386": 417, "857": 406, "858781": 426, "861": 407, "862": 407, "863": 407, "864": 407, "867102": 421, "87": [428, 444], "88": 428, "885893": 421, "8859": 413, "886137": 417, "889": 428, "89": [395, 425, 428], "8jq": 450, "9": [13, 16, 407, 411, 416, 417, 421, 424, 441, 444, 452, 453], "90": [394, 395, 396, 398, 399, 409, 428, 452], "902824": 424, "905427": 417, "906502": 424, "906762": 399, "91": 444, "911110": 424, "915353": 417, "915747": 417, "918353": 417, "919494": 417, "921565": 426, "922017": 424, "93": 421, "930196": 421, "938538": 417, "95": 421, "96": 395, "963204": 417, "965271": 417, "969026": 417, "969210": 424, "97": 421, "980046": 424, "989369": 421, "997977": 424, "999": 445, "A": [0, 13, 16, 26, 31, 38, 40, 41, 42, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 73, 77, 79, 80, 81, 82, 85, 88, 90, 95, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 124, 128, 130, 136, 139, 140, 142, 150, 153, 155, 156, 157, 166, 167, 168, 169, 170, 171, 172, 173, 176, 182, 183, 184, 186, 189, 192, 194, 196, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 219, 220, 235, 236, 241, 243, 245, 247, 250, 252, 254, 257, 259, 263, 265, 266, 273, 275, 277, 279, 281, 283, 289, 293, 295, 301, 303, 304, 305, 313, 319, 322, 323, 324, 327, 337, 345, 352, 353, 355, 365, 372, 376, 378, 381, 393, 405, 414, 416, 417, 419, 421, 429, 430, 435, 437, 438, 439, 441, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457], "AND": [54, 406, 441, 445], "AS": [436, 441], "And": 413, "As": [394, 395, 396, 411, 419, 421, 432, 433, 436, 437, 438, 444, 445, 448, 451, 452, 454], "But": 456, "By": [95, 123, 156, 218, 333, 353, 417, 439, 443, 444, 446, 447, 449, 451, 452], "FOR": 441, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 155, 163, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 218, 241, 247, 250, 252, 254, 255, 257, 259, 263, 266, 273, 275, 277, 279, 281, 283, 293, 295, 301, 306, 329, 354, 358, 361, 381, 394, 395, 396, 398, 399, 405, 409, 410, 411, 416, 417, 419, 421, 426, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459], "If": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 95, 99, 120, 123, 124, 128, 130, 132, 155, 156, 161, 162, 182, 183, 186, 192, 194, 210, 212, 218, 224, 225, 241, 243, 245, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 304, 309, 314, 322, 323, 327, 329, 332, 334, 337, 341, 343, 345, 346, 347, 349, 352, 353, 354, 355, 378, 379, 390, 391, 399, 401, 410, 416, 425, 426, 429, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 455, 456, 457, 459], "In": [31, 45, 57, 155, 194, 212, 239, 241, 327, 356, 394, 395, 396, 398, 410, 411, 413, 416, 417, 419, 421, 422, 425, 426, 429, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "It": [26, 176, 183, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 239, 258, 279, 345, 394, 398, 399, 405, 414, 416, 419, 421, 426, 428, 429, 430, 432, 443, 444, 445, 446, 450, 451, 452, 454, 459], "Its": [243, 413], "No": [354, 424, 435, 438], "Not": [441, 445], "OF": [436, 441], "OR": [436, 441], "Of": [399, 408, 434, 453], "On": [413, 419], "One": [144, 394, 396, 422, 436], "Or": 446, "Such": [399, 445, 448, 454], "That": [44, 212, 243, 250, 252, 254, 259, 263, 277, 279, 281, 283, 304, 399, 404, 416, 439, 452, 454, 457], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 95, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 124, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 155, 156, 157, 163, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 218, 230, 231, 233, 235, 239, 241, 243, 245, 250, 252, 254, 255, 257, 259, 263, 266, 277, 279, 281, 283, 285, 287, 289, 290, 293, 295, 298, 301, 303, 304, 305, 307, 309, 310, 313, 314, 319, 322, 323, 324, 327, 329, 332, 333, 334, 337, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 365, 370, 371, 372, 374, 375, 378, 379, 390, 391, 394, 395, 396, 399, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 421, 425, 426, 430, 432, 433, 435, 437, 438, 439, 441, 444, 445, 446, 448, 449, 450, 451, 452, 455, 456, 458, 459], "Then": 411, "There": [84, 287, 368, 416, 424, 436, 437, 439, 443, 447, 452, 455], "These": [307, 392, 395, 396, 397, 400, 403, 408, 412, 415, 418, 420, 423, 427, 431, 436, 439, 443, 445, 446, 450, 452], "To": [394, 399, 410, 411, 417, 419, 422, 428, 432, 433, 436, 437, 439, 443, 444, 445, 446, 447, 449, 450, 454, 455], "Will": 442, "With": [345, 410, 411, 416, 419, 422, 432, 433, 436, 443, 445, 450, 453], "_": [132, 161, 162, 215, 221, 228, 401, 410, 411, 433], "__": 132, "__class__": [409, 419], "__excepthook__": 437, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 218, 250, 252, 254, 255, 257, 259, 263, 265, 266, 273, 275, 277, 279, 281, 283, 293, 295, 301, 316, 319, 360, 361, 381, 452, 453], "__name__": [409, 419], "__new__": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 144, 145, 147, 360], "__str__": 438, "__version__": 438, "_amount": 416, "_arraylik": 348, "_c": 323, "_cumbest": 241, "_default_my_attribut": 439, "_discretelabellikeparamet": [139, 142, 153], "_expectedhypervolumeimprov": [13, 16], "_fit": 290, "_has_switch": 184, "_iterbest": 241, "_label": 416, "_measur": 241, "_n_last_measur": [181, 182, 183], "_nbase": 339, "_nestedsequ": [13, 16, 124, 157, 303, 304, 305, 371], "_no_tl": 432, "_option": 438, "_posterior": 290, "_step": [181, 182, 183], "_supportsarrai": [13, 16, 124, 157, 303, 304, 305, 371], "_surrogategett": 257, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 210, 212, 218, 223, 231, 232, 235, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 324, 325, 326, 342, 355, 361], "_target": 438, "_tparamet": 156, "_tsurrog": 286, "_u": 324, "_validate_my_attribut": 439, "_was_us": [181, 182, 183], "a1": 314, "a2": 314, "ab": [407, 416], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 321, 328, 438, 458], "abc": [24, 34, 35, 36, 37, 38, 40, 102, 103, 104, 120, 136, 137, 165, 179, 189, 192, 199, 204, 252, 254, 293, 333], "abil": [442, 447, 457], "abl": [411, 437, 443, 445, 450, 453, 459], "about": [8, 26, 31, 137, 153, 293, 310, 394, 395, 396, 416, 425, 426, 436, 438, 439, 444, 448, 450, 452, 455], "abov": [287, 305, 333, 352, 393, 399, 406, 407, 409, 410, 417, 424, 436, 439, 441, 442, 443, 444, 445, 446, 447, 450, 453, 454, 455, 457], "absenc": 449, "absolut": [44, 150, 347, 436], "abstract": [24, 34, 35, 36, 37, 38, 40, 102, 103, 104, 120, 135, 136, 137, 165, 179, 189, 192, 199, 254, 293, 322, 323, 333, 438, 445, 457], "abstractli": 419, "acceler": [436, 438, 440, 457], "accept": [31, 182, 250, 252, 254, 259, 263, 277, 279, 281, 283, 348, 410, 411, 438, 441, 446, 449, 450, 454, 456], "access": [210, 218, 250, 252, 254, 259, 263, 277, 279, 281, 283, 394, 395, 396, 404, 409, 433, 438, 445, 450, 453], "accord": [44, 177, 417, 442, 445, 446, 451, 459], "accordingli": [194, 444, 447, 449, 453], "account": 443, "accumul": [167, 419, 457], "accur": 444, "acet": [394, 395, 396, 398, 399], "aceton": 416, "achiev": [21, 218, 411, 416, 419, 422, 436, 439, 442, 444, 445, 447, 455], "ack": 436, "acq_funct": 399, "acq_valu": 444, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 410, 411, 419], "acqf1": 453, "acqf2": 453, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 70, 80, 192, 194, 404, 405, 406, 407, 410, 411, 419, 421, 428, 436, 438, 442, 449, 451, 453, 455, 458], "acquisition_funct": [31, 192, 194, 399, 410, 411, 419, 429, 430, 438], "acquisition_function_cl": 438, "acquisition_valu": [31, 192, 194, 410, 411, 438, 444], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 31, 192, 194, 419, 438, 453], "across": [416, 419, 432, 443, 451, 457], "act": [416, 438, 441, 445, 454], "action": [21, 409, 419, 435, 438, 458], "activ": [15, 34, 155, 184, 194, 410, 411, 419, 436, 437, 438, 439, 445, 446, 447, 448, 451, 457, 458, 459], "activate_paramet": 438, "active_dim": [102, 103, 104, 107, 109, 111, 112, 113], "active_valu": [136, 139, 140, 142, 150, 153, 432, 433, 438, 447, 450, 457], "actual": [182, 212, 239, 425, 438, 448, 452, 454, 457, 459], "ad": [31, 218, 309, 313, 345, 378, 416, 417, 435, 439, 442, 446, 447, 455, 456, 458], "adapt": [183, 275, 334, 352], "add": [31, 233, 243, 345, 346, 399, 413, 414, 416, 421, 432, 436, 441, 443, 444, 445, 448, 452, 457, 459], "add_collection3d": 411, "add_fake_measur": [349, 398, 399, 404, 405, 406, 407, 413, 414, 421, 438, 443, 454, 459], "add_fake_result": 438, "add_measur": [31, 349, 398, 399, 401, 402, 404, 405, 406, 407, 411, 413, 414, 419, 421, 422, 425, 426, 436, 438, 443, 444, 446, 447], "add_noise_to_perturb_degenerate_row": 438, "add_parameter_nois": [349, 438, 459], "add_subplot": 411, "addendum": 441, "addit": [31, 95, 120, 123, 128, 130, 182, 194, 212, 233, 241, 243, 245, 347, 349, 394, 395, 396, 417, 425, 433, 436, 438, 440, 441, 444, 445, 446, 448, 449, 450, 452, 453, 454, 457, 459], "addition": [409, 417, 436, 448], "additiveexplain": [93, 96], "additivekernel": 438, "address": 454, "adher": [438, 439], "adjust": [155, 183, 395, 399, 425, 438, 447, 449], "adopt": 399, "adrian": [436, 440], "advanc": [183, 419, 437, 438, 446, 449, 453, 457, 458], "advantag": [416, 439], "advic": 439, "advis": [441, 454], "affect": [31, 53, 63, 65, 194, 210, 313, 409, 428, 435, 437, 445], "affected_paramet": [53, 404, 405, 406, 407, 416, 445], "affili": [436, 446], "afford": 444, "aforement": [212, 446], "after": [184, 329, 398, 399, 404, 405, 406, 407, 411, 421, 428, 436, 444, 448, 449, 450, 453], "afterward": 453, "again": [410, 443, 444, 445, 457], "against": [89, 309, 327, 416, 441, 447, 457], "agent": 417, "aggreg": 449, "agraw": 440, "agre": [436, 441, 448], "agreement": 441, "ai": [100, 163, 368], "aim": [444, 448], "akin": 443, "al": [395, 436, 450], "aldrich": 440, "alex": 440, "alexand": [436, 440], "algorithm": [187, 194, 345, 376, 378, 393, 416, 421, 436, 438, 443, 448, 451], "alia": [152, 196, 253, 450], "alias": 438, "align": [155, 210, 329, 410, 452, 457], "all": [23, 24, 33, 35, 40, 44, 53, 55, 61, 63, 95, 101, 102, 103, 104, 119, 120, 123, 134, 137, 142, 146, 153, 164, 165, 175, 178, 179, 182, 188, 189, 191, 194, 198, 199, 210, 212, 219, 220, 243, 250, 251, 254, 292, 293, 313, 326, 327, 345, 394, 395, 396, 399, 401, 402, 404, 405, 409, 410, 411, 416, 417, 419, 421, 424, 425, 432, 433, 436, 438, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "allclos": [401, 402, 417], "alleg": 441, "allow": [21, 31, 34, 44, 51, 55, 120, 123, 128, 130, 150, 156, 183, 212, 218, 245, 310, 332, 354, 355, 390, 391, 394, 395, 396, 399, 416, 417, 432, 433, 436, 438, 442, 444, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 459], "allow_": [438, 447], "allow_extra": [120, 123, 128, 130, 210, 212, 218, 223, 355, 358, 421, 438], "allow_miss": [120, 123, 128, 130, 210, 212, 218, 223, 355, 358, 438], "allow_recommending_already_measur": [31, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 419, 429, 430, 435, 438, 444], "allow_recommending_already_recommend": [31, 411, 419, 429, 430, 435, 438, 444], "allow_recommending_pending_experi": [31, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 438, 444], "allow_repeated_recommend": [186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 438], "almost": 395, "alon": [438, 441], "along": [372, 441, 450, 457], "alongsid": 441, "alpha": [167, 411, 422], "alphabet": [158, 438], "alreadi": [31, 218, 250, 252, 254, 259, 263, 277, 279, 281, 283, 416, 426, 436, 438, 442, 443, 444, 447, 452, 454, 455, 457, 459], "also": [31, 44, 57, 95, 156, 250, 252, 254, 259, 263, 277, 279, 281, 283, 310, 327, 329, 345, 346, 347, 394, 401, 402, 410, 411, 413, 414, 416, 421, 422, 425, 426, 428, 432, 433, 436, 438, 439, 442, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "alter": [416, 438, 444, 447], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 287, 372, 409, 416, 417, 424, 436, 438, 447, 455, 458, 459], "although": [416, 426, 429, 452, 454], "alwai": [15, 31, 40, 228, 229, 413, 416, 417, 436, 442, 444, 445, 454, 455, 457, 459], "ambigu": [150, 317, 318, 452], "amend": 445, "among": [34, 416, 436, 449, 457], "amount": [314, 379, 417, 432, 433, 443, 448, 450, 459], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 70, 71, 72, 74, 75, 76, 80, 86, 89, 90, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 121, 123, 128, 130, 132, 135, 136, 137, 139, 140, 142, 149, 150, 153, 155, 156, 157, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 231, 233, 235, 239, 241, 243, 245, 250, 252, 254, 257, 259, 260, 263, 266, 277, 279, 281, 283, 285, 286, 293, 295, 301, 313, 317, 318, 325, 327, 329, 332, 338, 342, 343, 352, 353, 354, 356, 360, 361, 362, 371, 378, 379, 394, 396, 397, 399, 406, 407, 409, 410, 413, 414, 417, 421, 424, 428, 429, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "analog": [212, 345, 445, 452, 453], "analogi": [177, 451], "analysi": [436, 448, 455], "analyt": [3, 4, 7, 8, 80, 454, 457], "analyz": [436, 439, 448], "angl": 411, "ani": [13, 16, 64, 65, 86, 95, 124, 135, 136, 137, 139, 140, 142, 153, 156, 157, 160, 161, 162, 228, 229, 233, 237, 238, 245, 277, 281, 283, 303, 304, 305, 310, 313, 326, 327, 329, 330, 332, 333, 343, 349, 354, 361, 363, 371, 386, 387, 388, 389, 391, 409, 416, 432, 433, 435, 436, 437, 438, 439, 441, 444, 446, 447, 450, 453, 454, 457], "annot": [329, 409, 441], "anonym": [436, 446], "anoth": [53, 362, 395, 405, 406, 413, 414, 416, 426, 439, 445, 457], "ansatz": 438, "answer": 444, "anti": 353, "anymor": [438, 457], "anyth": 334, "anywai": 455, "anywher": 401, "apach": [436, 441], "apart": [439, 444], "api": [436, 437, 453], "aplei": 448, "appar": 453, "appdata": 437, "appear": [327, 437, 438, 441, 453], "append": [411, 433], "appendix": 441, "appli": [31, 40, 41, 42, 57, 194, 212, 239, 241, 250, 252, 254, 259, 263, 277, 279, 281, 283, 327, 338, 347, 349, 381, 399, 400, 403, 404, 406, 407, 409, 410, 416, 432, 437, 438, 441, 445, 448, 449, 451, 452, 453, 454, 455, 456, 457], "applic": [343, 436, 439, 441, 450, 451, 454], "approach": [218, 410, 419, 436, 439, 442, 444, 447, 449, 451, 453, 455, 457], "appropri": [47, 48, 218, 419, 439, 441, 447, 452], "approxim": [10, 21, 445, 448], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 69, 78, 82, 83, 84, 95, 120, 123, 124, 128, 130, 136, 139, 140, 142, 150, 153, 155, 156, 157, 162, 176, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 241, 243, 245, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 305, 307, 309, 310, 313, 314, 322, 323, 324, 326, 327, 329, 333, 334, 345, 346, 348, 349, 350, 354, 355, 378, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 414, 416, 417, 419, 421, 424, 425, 428, 429, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "arang": [401, 411, 450], "arbitrari": [183, 212, 363, 438, 445, 450, 451, 454, 457, 459], "arbitrarili": [449, 453], "architectur": [250, 252, 254, 259, 263, 277, 279, 281, 283, 290, 438, 455, 457], "ard_num_dim": [102, 103, 104, 107, 109, 111, 112, 113], "area": 411, "arg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 106, 108, 110, 115, 116, 117, 165, 167, 168, 169, 170, 171, 172, 173, 176, 196, 255, 260, 265, 360, 439], "argu": 416, "argument": [31, 71, 90, 95, 100, 153, 156, 163, 179, 181, 182, 183, 184, 192, 194, 210, 218, 255, 257, 329, 349, 353, 399, 414, 421, 438, 445, 448, 450, 451, 452, 453, 454, 457], "aris": [56, 416, 438, 441, 445, 453, 459], "arithmet": [126, 449], "arizona": 440, "arm": [249, 250, 434, 440], "arm_index": 419, "around": [13, 16, 44, 203, 245, 247, 421, 438, 451, 453, 459], "arr": [303, 304, 305, 372, 422], "arrai": [13, 16, 124, 157, 303, 304, 305, 316, 348, 357, 367, 371, 372, 378, 411, 438, 451, 455], "arrays_to_datafram": [401, 402, 411, 422, 425, 426, 432, 433, 438, 454], "arriv": [436, 447], "artifici": 459, "aryl": [394, 395, 396, 398, 436, 450], "ascend": 421, "ask": [416, 436, 438, 439, 444, 447], "aspect": [397, 401, 402, 426, 443, 446], "assembl": [416, 453, 455], "assembli": [455, 458], "assert": [65, 132, 354, 404, 405, 406, 407, 413, 414, 416, 417, 424, 428, 438, 441, 444, 445, 453, 455], "assess": 454, "assign": [345, 410, 417, 424, 450], "associ": [212, 419, 441, 444, 446, 449, 457], "assum": [26, 45, 258, 329, 354, 355, 394, 395, 396, 399, 401, 402, 404, 405, 406, 407, 413, 414, 416, 419, 421, 425, 426, 428, 436, 441, 445, 447, 450, 453, 455, 456, 459], "assumpt": 454, "assur": 445, "asymmetr": 44, "asynchron": [436, 444, 458], "atol": [401, 402], "atompair": 147, "atompairfingerprint": 147, "attach": [26, 329, 409, 410, 411, 441], "attempt": [79, 86, 258, 419, 437, 438, 443, 445, 448, 451], "attent": 184, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 132, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 218, 250, 252, 254, 257, 259, 263, 266, 273, 275, 277, 279, 281, 283, 293, 295, 301, 327, 330, 361, 381, 389, 438], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 89, 92, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 126, 128, 130, 135, 136, 137, 139, 140, 142, 144, 145, 147, 149, 150, 151, 153, 156, 160, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 213, 217, 218, 227, 231, 233, 250, 251, 252, 254, 257, 259, 263, 266, 270, 273, 275, 277, 279, 281, 283, 290, 293, 294, 295, 298, 299, 301, 315, 318, 327, 342, 355, 361, 366, 377, 381, 382, 385, 386, 387, 388, 389, 424, 438, 439, 441, 445, 451, 453, 455, 456], "audit": [438, 439], "augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 212, 285, 286, 287, 438, 444], "author": 441, "authorship": 441, "auto": [12, 13, 14, 16, 17, 438, 440], "auto_tutori": 368, "autocorr": 147, "autocorrfingerprint": 147, "autodoc": 438, "automat": [31, 194, 263, 393, 411, 425, 437, 438, 439, 448, 449, 451, 452, 455, 457, 458], "avail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 81, 126, 142, 144, 145, 147, 153, 182, 183, 241, 243, 270, 298, 299, 310, 377, 378, 379, 396, 398, 401, 402, 416, 421, 425, 426, 436, 437, 438, 439, 441, 443, 444, 446, 448, 450, 451, 452, 453, 454, 457, 458], "available_acq_funct": 399, "avalon": 147, "avalonfingerprint": 147, "averag": [279, 410, 411, 433, 450, 454], "avoid": [212, 330, 372, 438, 439, 443, 444, 450, 452], "awai": [13, 16, 155, 456], "awar": [416, 432, 433, 438, 442, 447, 453], "ax": [95, 393, 395, 410, 411, 422, 432, 433], "axes3d": 411, "axi": [210, 241, 372, 393, 401, 402, 407, 410, 411, 416, 417, 419, 421, 422, 425, 426, 432, 433, 452], "azim": 411, "azur": 438, "b": [44, 56, 173, 275, 313, 324, 352, 353, 395, 405, 414, 419, 429, 430, 435, 436, 439, 441, 444, 447, 450, 453], "b1": 314, "b2": 314, "back": [0, 428, 435, 438, 439, 447], "backend": 310, "background": [95, 99, 438, 448], "background_data": 95, "backport": 437, "backtest": [239, 240, 246, 394, 395, 396, 410, 431, 434, 436, 438, 451, 454], "backtick": 439, "backward": [195, 196, 212, 438], "bad": [421, 444, 446, 456], "bad_interv": 345, "badg": 438, "bai": 436, "baird": 440, "balanc": [123, 419, 436], "banana": 439, "bandit": [250, 399, 434, 436, 438, 440], "banner": 438, "bar": [95, 97, 413, 414, 416, 428, 429, 430, 436, 438, 448, 455], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 126, 128, 130, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 180, 181, 182, 183, 184, 186, 189, 192, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 217, 218, 231, 233, 235, 250, 252, 254, 255, 257, 258, 259, 263, 265, 266, 270, 273, 275, 277, 279, 281, 283, 287, 289, 293, 295, 298, 299, 301, 316, 318, 319, 321, 322, 323, 348, 353, 361, 377, 378, 381, 393, 398, 399, 410, 411, 413, 415, 419, 434, 436, 438, 441, 442, 444, 445, 446, 448, 450, 451, 452, 453, 455], "base1": 417, "base2": 417, "base_data": 410, "base_kernel": [115, 116, 117], "base_nam": [393, 395, 410, 411, 432, 433], "base_predictor": 285, "base_smil": 410, "basefingerprinttransform": 337, "baselin": [393, 395, 432, 436, 450], "basesequentialmetarecommend": [182, 183], "bashrc": 446, "basi": [111, 436, 441, 448], "basic": [102, 106, 107, 108, 109, 110, 111, 112, 113, 167, 168, 169, 170, 171, 172, 173, 241, 316, 318, 319, 394, 395, 396, 399, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 421, 425, 426, 427, 428, 431, 434, 438, 439, 447, 449, 450, 454, 458], "basic_transfer_learn": 433, "basickernel": [106, 107, 108, 109, 110, 111, 112, 113, 438], "batch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 176, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 244, 285, 286, 399, 404, 405, 406, 407, 411, 421, 425, 426, 428, 432, 433, 438, 443, 447, 451, 454], "batch_quant": 438, "batch_shap": [102, 103, 104, 107, 109, 111, 112, 113], "batch_siz": [31, 44, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 241, 245, 247, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 417, 419, 421, 422, 425, 426, 428, 429, 432, 433, 436, 438, 443, 444, 446, 447, 454], "batchnr": 421, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 126, 128, 130, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 213, 217, 218, 235, 250, 252, 254, 255, 257, 259, 263, 265, 266, 270, 273, 275, 277, 279, 281, 283, 293, 295, 298, 299, 301, 316, 318, 319, 361, 377, 381, 392, 393, 394, 395, 396, 397, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "baybe_cach": 446, "baybe_cache_dir": [438, 446], "baybe_deactivate_polar": [438, 446], "baybe_debug_fake_hosthash": 438, "baybe_debug_fake_userhash": 438, "baybe_numpy_use_single_precis": [369, 438, 446], "baybe_telemetry_en": [436, 446], "baybe_telemetry_endpoint": [438, 446], "baybe_telemetry_host": 438, "baybe_telemetry_hostnam": [438, 446], "baybe_telemetry_usernam": [438, 446], "baybe_telemetry_vpn_check": [438, 446], "baybe_telemetry_vpn_check_timeout": [438, 446], "baybe_torch_use_single_precis": [384, 438, 446], "bayesian": [0, 186, 192, 194, 239, 241, 245, 247, 258, 277, 419, 438, 442, 444, 448, 455, 458], "bayesian_recommend": 411, "bayesianlinearmodel": 414, "bayesianlinearsurrog": [399, 455], "bayesianrecommend": [186, 194, 258, 438, 451], "bayesianridg": 413, "bcut2d": [147, 438], "bcut2dfingerprint": 147, "bcw07": 457, "becaus": [44, 84, 150, 155, 212, 218, 247, 333, 409, 410, 416, 433, 439, 442, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 457], "becom": [212, 416, 438, 442, 444, 445, 453, 456, 459], "been": [26, 31, 79, 80, 182, 250, 252, 254, 259, 263, 277, 279, 281, 283, 354, 394, 395, 436, 437, 438, 441, 443, 444, 449, 451, 457], "beeswarm": [95, 97, 448], "befor": [79, 184, 241, 250, 252, 254, 259, 263, 277, 279, 281, 283, 329, 393, 396, 399, 405, 410, 436, 438, 439, 446, 447, 450, 452], "begin": [182, 404, 406, 424, 428, 451, 455], "behalf": 441, "behav": [411, 428, 453], "behavior": [155, 194, 436, 438, 446, 449, 451, 452, 457], "behind": [449, 453, 454, 455, 456], "being": [13, 16, 117, 345, 419, 437, 438, 445, 446, 450, 452], "bell": [299, 303, 421, 456], "belong": [409, 453], "below": [184, 287, 305, 406, 409, 410, 416, 439, 441, 442, 444, 445, 449, 453, 455, 456, 457], "benchmark": [436, 438, 440], "benefici": [441, 442, 446], "benefit": [445, 457], "benzo": 457, "bernoulli": [250, 418, 434, 440], "besid": [436, 449, 456], "best": [12, 13, 14, 16, 17, 241, 243, 245, 396, 419, 436, 446, 451], "bet": 444, "beta": [8, 22, 167, 250, 399, 438, 442], "betabernoullimultiarmedbanditsurrog": [399, 419, 438], "betaprior": [250, 438], "better": [10, 345, 395, 438, 444, 445, 447, 449, 450], "between": [13, 16, 34, 53, 150, 183, 210, 218, 273, 353, 409, 411, 416, 419, 421, 422, 426, 432, 433, 436, 438, 439, 443, 444, 445, 446, 449, 450, 451, 452, 453, 456, 457], "beyond": [155, 436, 448], "bias": 450, "bin": 416, "binar": 438, "binari": [295, 391, 428, 436, 437, 438, 453], "binarytarget": [296, 419, 438], "bind": [409, 411, 441], "bit": [438, 450], "black": [239, 454, 457], "blackbox": [392, 393, 434], "blank": 439, "blob": 275, "block": [410, 416, 436, 437, 438, 446, 453], "blue": 422, "boacquisitionfunct": [192, 194], "bodi": 409, "bonilla": 457, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 95, 98, 99, 120, 123, 124, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 157, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 223, 250, 252, 254, 259, 263, 277, 279, 281, 283, 295, 296, 303, 304, 305, 308, 322, 323, 327, 328, 333, 334, 343, 348, 353, 355, 358, 361, 371, 390, 419], "boolean": [13, 16, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 99, 135, 136, 137, 139, 140, 142, 149, 150, 153, 157, 179, 181, 182, 183, 184, 355, 444, 446], "boost": [281, 433], "both": [10, 13, 16, 155, 156, 212, 218, 247, 305, 329, 393, 405, 410, 413, 416, 417, 419, 421, 422, 432, 433, 436, 438, 439, 442, 444, 445, 448, 450, 452, 453, 455, 456, 459], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 186, 194, 196, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 401, 402, 411, 426, 432, 433, 438, 446, 451], "botorch_acqf": 26, "botorch_function_wrapp": 438, "botorchrecommend": [186, 196, 399, 404, 405, 406, 407, 410, 411, 413, 414, 419, 421, 426, 428, 429, 430, 436, 438, 443, 444, 445, 447, 451], "bottom": 444, "bound": [8, 22, 34, 44, 149, 155, 156, 173, 210, 212, 218, 223, 286, 301, 302, 323, 329, 355, 361, 362, 393, 399, 401, 402, 411, 417, 421, 422, 424, 425, 426, 432, 433, 438, 450, 453, 456, 458, 459], "boundari": [44, 218, 303, 304, 421], "boundary_onli": [218, 416], "bounded": 438, "bounds_transform_func": 438, "box": [173, 239, 454, 457], "brain": [454, 457], "branch": [436, 439], "break": [258, 453], "brettpho": [394, 395, 396, 398, 399], "briefli": [454, 457], "bring": [436, 438], "bro": 275, "broad": 453, "broadcast": 157, "brute": [194, 451], "bu": [394, 395, 396, 398, 399], "bucket": 416, "budget": 444, "bug": [438, 439], "build": [210, 218, 258, 410, 416, 437, 438, 439, 445, 448, 453, 455, 457, 458, 459], "built": [218, 413, 436, 439, 444, 451, 455], "builtin": 319, "bump": 438, "button": 438, "butyl": [394, 395, 396, 398, 399], "butylphenylphosphin": [394, 395, 396, 398, 399], "butyornitril": [394, 395, 396, 398, 399], "bypass": [156, 410, 455], "byte": [13, 16, 124, 157, 217, 259, 303, 304, 305, 365, 371, 438, 459], "c": [56, 313, 324, 394, 395, 396, 398, 399, 404, 405, 406, 407, 414, 416, 429, 430, 436, 437, 441, 444, 447, 450, 452, 453], "c1": [394, 395, 396, 398, 399, 404, 405, 406, 407, 450], "c1c2": [394, 395, 396, 398, 399], "c1ccccc1": [394, 395, 396, 404, 406], "c1ccoc1": 445, "c2": [394, 395, 396, 398, 399, 404, 406, 407], "c2ccccc2": [394, 395, 396], "c2oc": [394, 395, 396, 398, 399], "c2p": [394, 395, 396, 398, 399], "c3": [394, 395, 396, 398, 399, 404, 406], "c3c": [394, 395, 396], "c3ccccc3": [394, 395, 396, 398, 399], "c4": [394, 395, 396, 404, 406], "c4ccccc4": [394, 395, 396, 398, 399], "c5": [404, 406], "c6": [404, 406], "c_": 422, "c_g2_min": 417, "c_g3_max": 417, "c_i": 445, "c_total_sum": 417, "cach": [309, 438, 453, 458], "cached_recommend": 309, "calcul": [31, 309, 372, 401, 411, 432, 444, 446, 450, 452], "calibr": 457, "call": [45, 90, 179, 181, 182, 183, 184, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 309, 310, 329, 348, 394, 395, 396, 409, 414, 416, 417, 429, 430, 436, 437, 438, 442, 444, 445, 446, 450, 453, 454, 455, 457, 458], "callabl": [52, 71, 89, 156, 231, 239, 241, 243, 245, 247, 285, 286, 289, 290, 319, 325, 327, 329, 348, 393, 409, 422, 438, 458], "callable_": 327, "campaign": [95, 241, 244, 245, 247, 345, 347, 349, 397, 398, 406, 408, 411, 419, 430, 432, 433, 434, 435, 436, 438, 442, 443, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459], "campaign1": 454, "campaign2": 454, "campaign_json": 444, "campaign_oh": 395, "campaign_par": 422, "campaign_rand": [394, 395, 396], "campaign_recr": 428, "campaign_stop": 410, "campaign_with_hook": 410, "campaign_y0": 422, "campaign_y1": 422, "campaignstoppedexcept": 410, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 56, 95, 136, 142, 150, 153, 157, 176, 183, 186, 187, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 239, 243, 250, 252, 254, 255, 257, 258, 259, 263, 277, 279, 281, 283, 287, 296, 308, 310, 327, 329, 333, 345, 347, 348, 368, 393, 394, 395, 396, 399, 400, 403, 404, 405, 406, 409, 410, 411, 413, 414, 416, 417, 419, 421, 422, 424, 425, 426, 429, 432, 433, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "canada": 440, "candid": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 192, 194, 204, 206, 210, 218, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 410, 411, 433, 438, 442, 451, 452, 458], "cannot": [15, 88, 89, 155, 258, 259, 287, 334, 419, 438, 441, 443, 445, 446, 450, 451, 453, 455, 457], "canon": [336, 453], "capabl": [392, 418, 420, 427, 431, 433, 438, 440, 444, 449, 455, 457], "captur": 450, "cardin": [34, 44, 51, 61, 63, 64, 65, 78, 194, 210, 436, 438, 440, 445], "cardinalityconstraint": [44, 51, 438], "care": [49, 416, 439, 445, 448, 449, 455], "carefulli": 446, "carlo": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 80, 245, 393, 395, 396, 410, 419, 432, 433, 438, 443, 454], "carri": [329, 409, 441, 449], "cartesian": [212, 218, 219, 220, 436, 438, 447, 452], "case": [155, 183, 247, 287, 329, 345, 356, 410, 415, 416, 425, 426, 429, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 450, 453, 454, 455, 456, 457, 459], "cast": [45, 438], "cat": 353, "cat_1": 421, "cat_1_22": 421, "cat_1_33": 421, "cat_2": 421, "catch_constant_target": 438, "categor": [31, 139, 140, 144, 218, 225, 354, 436, 438, 450, 452, 456], "categori": [395, 410, 436, 438, 453, 456], "categorical_1": [421, 444], "categorical_2": [421, 444], "categorical_paramet": 453, "categorical_parameter_json": 453, "categorical_parameter_reconstruct": 453, "categoricalencod": [139, 140, 404, 405, 406, 407, 421, 428], "categoricalparamet": [140, 218, 395, 404, 405, 406, 407, 414, 419, 421, 428, 429, 430, 436, 438, 447, 448, 452, 453, 458], "cattr": [230, 231, 233, 430, 437, 438, 439], "cauchi": 169, "caus": [150, 313, 319, 438, 441], "caution": 457, "cc": [394, 395, 396, 398, 399, 404, 406, 407, 416, 450, 457], "cc1": [394, 395, 396, 398, 399, 450], "ccc": [404, 406, 414, 436], "cccc": [394, 395, 396, 398, 399, 404, 406], "ccccc": [404, 406, 429, 430], "cccccc": [404, 406], "cccccccco": [445, 450], "ccccoc": [394, 395, 396, 398, 399], "cco": 416, "ccoccoccn": [429, 430], "cdot": [445, 449], "ceil": 410, "cell": [413, 450, 454, 457], "cell_lin": 457, "center": [303, 305, 361, 421, 422, 444], "center_y0": 422, "center_y1": 422, "central": [438, 444], "certain": [31, 53, 89, 184, 231, 233, 239, 310, 326, 345, 405, 410, 419, 436, 439, 445, 447, 448, 451, 453, 457, 459], "cesium": [394, 395, 396, 398, 399], "chai": 457, "chain": [38, 179, 181, 182, 183, 184, 319, 445], "challeng": [439, 453], "chanc": 437, "chang": [53, 182, 345, 346, 347, 399, 416, 425, 436, 437, 439, 441, 444, 446, 448, 450, 452, 457], "charact": 441, "characterist": 319, "charg": 441, "chebyshev": 12, "check": [31, 61, 135, 136, 137, 139, 140, 142, 149, 150, 153, 157, 309, 326, 328, 331, 332, 333, 334, 354, 361, 370, 425, 426, 428, 436, 438, 439, 446, 448, 452, 453], "check_maximum": 61, "check_minimum": 61, "checker": 438, "checkout": 439, "chem": [436, 438, 450], "chemic": [338, 395, 398, 416, 438, 440, 445, 448, 450, 457], "cheminformat": [153, 436, 438], "chemistri": [142, 404, 406, 407], "child": [201, 202, 203, 204, 439], "chocol": 439, "choic": [241, 243, 378, 409, 416, 419, 426, 438, 445, 447, 449, 450, 451, 452, 453, 456], "choos": [177, 416, 417, 419, 421, 424, 425, 426, 435, 436, 441, 442, 444, 451, 455, 456], "chose": [425, 453], "chosen": [76, 186, 241, 243, 247, 374, 375, 399, 419, 438, 442, 445, 450, 452], "christoph": 457, "ci": [402, 432, 433, 438, 439], "circular": 450, "circumv": [437, 453], "cl": [49, 228, 232, 287, 322, 323, 328, 333, 363], "claim": 441, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 88, 92, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 231, 233, 234, 235, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 315, 316, 318, 319, 321, 322, 323, 328, 333, 337, 343, 359, 361, 376, 377, 380, 381, 399, 409, 410, 413, 419, 429, 438, 444, 445, 448, 449, 450, 451, 452, 453, 455], "classic": [419, 449], "classifi": 450, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 210, 212, 218, 235, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 319, 361, 438], "classvalidationerror": [430, 437], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 250, 252, 254, 259, 263, 277, 279, 281, 283], "clean": [350, 351, 352, 437, 438, 439], "clear": [368, 457], "click": [419, 450], "clone": 439, "close": [241, 247, 298, 393, 410, 432, 433, 454], "closer": [13, 16, 370, 450], "closest": 371, "closest_el": 438, "closur": [239, 454], "cluster": [201, 202, 203, 204, 399, 438, 440, 458], "clustering_x": 438, "cmap": 411, "cn": [394, 395, 396, 398, 399], "co": 416, "co1": [394, 395, 396], "co2": [394, 395, 396], "co3": [394, 395, 396], "coars": [414, 428, 429, 430, 436], "coc": [414, 429, 430, 436], "cococ": [429, 430], "code": [258, 395, 414, 419, 425, 429, 430, 436, 437, 438, 441, 445, 446, 450, 454, 457, 459], "coeffici": [45, 47, 48, 401, 402, 417, 445], "coerc": 438, "collect": [31, 63, 64, 65, 105, 115, 116, 132, 156, 158, 166, 182, 184, 210, 218, 224, 225, 236, 243, 257, 311, 313, 315, 326, 327, 355, 376, 378, 393, 399, 411, 416, 419, 422, 432, 433, 436, 438, 444, 446], "color": [411, 422], "column": [40, 41, 42, 95, 120, 123, 124, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 156, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 241, 243, 245, 247, 313, 314, 346, 348, 350, 351, 352, 353, 354, 355, 356, 358, 381, 390, 391, 395, 398, 404, 405, 406, 407, 410, 416, 421, 422, 428, 432, 433, 438, 444, 452, 453, 454], "column_group": 314, "com": [275, 330, 352, 436, 438], "comb": 416, "combin": [44, 54, 156, 194, 210, 212, 218, 219, 220, 319, 338, 394, 395, 396, 404, 406, 409, 410, 416, 421, 436, 437, 441, 445, 447, 448, 449, 450, 451, 452, 454, 457, 459], "combinatori": [194, 459], "come": [13, 16, 419, 436, 444, 445, 448, 453, 457, 459], "command": 437, "comment": 438, "commerci": 441, "commit": [436, 438, 439], "common": [166, 413, 417, 438, 439, 441, 444, 445, 450, 453], "commonli": 449, "commun": [441, 449, 457], "comp_df": [136, 139, 140, 142, 150, 153, 438], "comp_rep": [218, 413, 438, 452], "comp_rep_bound": [210, 212, 218, 438], "comp_rep_byt": [217, 459], "comp_rep_column": [135, 136, 137, 139, 140, 142, 149, 150, 153, 210, 212, 218, 438], "comp_rep_human_read": [217, 459], "comp_rep_shap": [217, 459], "compar": [156, 182, 393, 416, 417, 419, 422, 432, 436, 438, 439, 445, 447, 450, 456], "comparison": [410, 422, 432, 433, 451, 453], "compat": [132, 156, 186, 189, 192, 194, 195, 196, 199, 201, 202, 203, 204, 206, 207, 212, 213, 243, 250, 252, 254, 259, 263, 277, 279, 281, 283, 329, 355, 389, 399, 404, 405, 406, 407, 409, 411, 421, 428, 438, 451, 455], "compens": 438, "compil": [437, 441], "complain": 439, "complaint": 439, "complement": [31, 353, 447], "complementari": 44, "complet": [411, 416, 443, 445, 447, 449, 453], "complex": [13, 16, 124, 157, 303, 304, 305, 371, 416, 428, 432, 433, 439, 442, 443, 445, 447, 454, 457], "compli": 441, "complianc": 436, "complic": [416, 457], "compon": [69, 416, 417, 439, 442, 444, 445, 446, 447, 453, 455, 457], "compos": [114, 257, 438, 453], "composit": [103, 115, 116, 117, 257, 458], "composite_a": 455, "composite_b": 455, "compositekernel": [115, 116, 117, 438], "compositesurrog": [250, 252, 254, 259, 263, 277, 279, 281, 283, 438, 455], "compound": 338, "comprehens": [436, 455], "compress": 453, "comput": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 85, 95, 99, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 192, 194, 210, 212, 217, 218, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 287, 293, 295, 301, 339, 372, 404, 405, 406, 407, 409, 416, 417, 421, 422, 428, 438, 441, 442, 444, 446, 450, 452, 453, 454, 458, 459], "computation": 194, "compute_ref_point": [13, 16], "concat": [401, 402, 410, 411, 421, 422, 425, 426, 432, 433], "concentr": [167, 168, 394, 395, 396, 398, 399, 404, 409, 410, 445], "concentrati": 404, "concentration_valu": 410, "concept": [313, 416, 449, 450, 453], "concis": 438, "concret": [438, 453], "conda": 438, "condit": [34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 345, 353, 395, 401, 405, 406, 407, 416, 422, 436, 438, 441, 457, 458], "conduct": [31, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 245, 250, 252, 254, 259, 263, 277, 279, 281, 283, 394, 395, 396, 436, 439, 444, 457], "confid": [8, 22, 399], "config": [413, 414, 427, 434, 438, 458], "config_json": 31, "configur": [13, 16, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 83, 84, 176, 183, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 239, 241, 247, 250, 252, 254, 255, 257, 259, 263, 269, 277, 279, 281, 283, 345, 378, 397, 398, 416, 423, 426, 430, 436, 437, 438, 441, 442, 443, 444, 445, 446, 450, 451, 452, 454, 456, 457, 458, 459], "confirm": 411, "conflict": [436, 439, 449], "conform": [153, 339, 450], "confront": [419, 436, 447], "conjunct": 455, "connect": [57, 345, 438, 446, 450, 456], "consequ": [396, 437, 445, 446, 451, 452, 454, 455], "consequenti": 441, "consid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 123, 136, 139, 140, 142, 150, 153, 155, 157, 182, 194, 212, 245, 345, 354, 355, 393, 416, 419, 421, 432, 433, 436, 438, 439, 443, 445, 447, 448, 449, 450, 453, 459], "consider": [212, 443], "consist": [177, 217, 411, 439, 441, 448], "consol": 437, "consolid": [438, 451], "consortium": 440, "conspicu": 441, "constant": [279, 287, 304, 421, 438, 439, 450, 452], "constitut": 441, "constrain": [438, 445, 456, 457], "constraint": [31, 34, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 137, 194, 210, 212, 218, 316, 413, 414, 421, 428, 429, 430, 434, 436, 438, 440, 446, 450, 458], "constraint_1": 406, "constraint_2": 406, "constraint_3": 406, "constraints_augment": 212, "constraints_cardin": 210, "constraints_lin_eq": 210, "constraints_lin_ineq": 210, "constraints_nonlin": 210, "constru": 441, "construct": [31, 210, 212, 218, 259, 289, 393, 422, 424, 432, 433, 436, 438, 442, 445, 448, 453, 455, 458], "constructor": [201, 202, 203, 204, 212, 232, 277, 281, 283, 416, 424, 429, 430, 438, 442, 444, 447, 449, 450, 455, 458, 459], "consult": 436, "consum": [182, 409], "consumpt": 446, "cont_ind": 426, "cont_indic": [425, 426], "cont_paramet": 426, "cont_recommend": [186, 426], "contact": [436, 440], "contain": [13, 16, 31, 34, 40, 41, 42, 44, 65, 68, 73, 95, 120, 123, 124, 128, 130, 132, 136, 139, 140, 142, 150, 153, 155, 156, 157, 161, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 219, 220, 224, 239, 241, 243, 245, 250, 252, 254, 259, 263, 277, 279, 281, 283, 293, 295, 301, 303, 304, 305, 313, 314, 329, 339, 343, 345, 347, 353, 354, 361, 372, 378, 390, 391, 395, 396, 410, 411, 417, 419, 426, 432, 433, 437, 438, 439, 441, 444, 445, 447, 448, 451, 452, 453, 454, 459], "content": [156, 182, 212, 243, 346, 379, 438, 441, 453], "context": [81, 155, 179, 181, 182, 183, 184, 192, 194, 239, 255, 257, 375, 409, 419, 424, 432, 433, 438, 444, 447, 448, 450, 453, 454, 455, 457, 459], "contextu": 457, "continu": [10, 15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 73, 135, 136, 137, 139, 140, 142, 149, 150, 153, 155, 186, 194, 210, 212, 213, 218, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 399, 401, 404, 405, 406, 407, 417, 421, 422, 423, 426, 428, 434, 436, 438, 444, 446, 447, 451, 453, 454, 458], "continuous_subspac": 452, "continuouscardinalityconstraint": [63, 64, 210, 438, 458], "continuousconstraint": [37, 45, 210, 438, 445, 447], "continuouslinearconstraint": [210, 401, 402, 417, 438, 458], "continuouslinearequalityconstraint": 438, "continuouslinearinequalityconstraint": 438, "continuousnonlinearconstraint": [44, 210, 438], "continuousparamet": [149, 210, 438], "contour": 422, "contract": 441, "contrast": [218, 333, 417, 419, 443, 447, 449], "contribut": [436, 438, 441, 459], "contributor": [436, 441], "contributori": 441, "control": [13, 15, 16, 21, 156, 167, 194, 210, 218, 355, 421, 425, 436, 438, 441, 442, 445, 446, 449, 450, 451, 456, 458], "convei": 453, "conveni": [438, 452, 453, 455], "convent": 212, "converg": 448, "convers": [31, 183, 413, 424, 438, 441, 448, 455, 458], "convert": [28, 121, 214, 227, 320, 330, 334, 338, 341, 342, 356, 357, 362, 365, 368, 414, 429, 430, 438, 444, 446, 453, 454], "convert_sklearn": 413, "convert_sklearn_bayesian_ridg": 413, "convertibletofloat": [13, 16, 320], "cooki": 439, "coordin": [13, 16, 378], "copi": [155, 250, 252, 254, 259, 263, 277, 279, 281, 283, 410, 436, 438, 441, 459], "copyright": [436, 441], "core": [31, 210, 212, 213, 218, 245, 247, 250, 252, 254, 255, 257, 259, 263, 270, 277, 279, 281, 283, 399, 436, 438, 447, 456], "coregion": 457, "coretest": [438, 439], "corpu": 450, "correct": [31, 290, 411, 436, 438, 439, 453], "correctli": [416, 426, 438], "correl": [142, 153, 352, 450, 457], "correspond": [26, 31, 44, 120, 123, 128, 130, 155, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 231, 239, 241, 243, 250, 252, 253, 254, 259, 263, 277, 279, 281, 283, 303, 309, 329, 332, 334, 337, 338, 345, 348, 349, 355, 356, 358, 390, 391, 393, 398, 399, 416, 419, 422, 426, 432, 433, 436, 438, 439, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "correspondingli": 31, "corrupt": 347, "cost": [395, 419], "costli": [212, 215, 221, 444], "could": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 150, 341, 399, 409, 410, 416, 417, 433, 438, 443, 445, 450, 454, 456, 457], "count": [310, 410, 416, 445], "counterclaim": 441, "counterpart": [329, 452], "coupl": 411, "cours": [432, 433, 439, 453, 457], "cousin": 445, "cov": [438, 439], "cover": [333, 345, 445, 447], "coverag": [438, 439], "cp": [394, 395, 396], "craft": 454, "crash": [437, 438], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 95, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 156, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 210, 212, 218, 219, 220, 235, 243, 250, 252, 254, 255, 257, 259, 263, 266, 271, 277, 279, 281, 283, 293, 295, 301, 343, 345, 348, 349, 361, 378, 398, 409, 410, 411, 416, 417, 422, 426, 427, 434, 435, 436, 437, 438, 439, 445, 446, 447, 448, 450, 453, 454, 455, 456, 458, 459], "create_example_plot": [393, 395, 410, 411, 432, 433, 438], "create_from_config": [413, 414], "create_pi_plot": 411, "creation": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 156, 215, 218, 221, 405, 407, 413, 414, 452, 453, 458], "criteria": 411, "criterion": [410, 442], "critic": 438, "cross": [432, 441], "crucial": [436, 456], "cube": 445, "cuda": 437, "cultur": [450, 457], "curran": 457, "current": [10, 31, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 245, 247, 258, 308, 368, 410, 411, 416, 442, 444, 445, 446, 447, 450, 454, 456, 457, 459], "curv": [303, 411, 421, 445, 456], "custom": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 135, 136, 137, 139, 140, 142, 145, 149, 150, 153, 156, 259, 290, 293, 295, 301, 329, 356, 392, 399, 403, 410, 419, 426, 434, 436, 438, 444, 445, 450, 451, 454, 457, 458, 459], "custom_blackbox": 393, "custom_conversion_funct": 413, "custom_filt": 445, "custom_funct": 404, "customari": 441, "customconstraint": 404, "customdiscreteparamet": [438, 448, 458], "customdisreteparamet": 438, "customencod": 142, "customonnxsurrog": [399, 413, 438], "cycl": [182, 436, 438, 447], "cyclic": 182, "d": [13, 16, 26, 56, 124, 313, 324, 372, 378, 411, 414, 429, 430, 432, 433, 436, 441, 452, 457], "d401": 404, "damag": 441, "daniel": 440, "darmstadt": [436, 440, 446], "dashboard": 438, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 72, 87, 95, 99, 123, 128, 130, 142, 150, 153, 176, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 241, 245, 247, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 295, 301, 310, 312, 316, 345, 347, 354, 367, 368, 379, 383, 390, 391, 392, 393, 398, 399, 401, 402, 404, 405, 406, 407, 410, 414, 416, 421, 422, 425, 428, 429, 430, 432, 433, 434, 435, 436, 438, 442, 443, 444, 445, 446, 448, 450, 451, 453, 454, 455, 458, 459], "data_typ": 413, "databas": [31, 421, 436, 453], "dataclass": [409, 419], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 87, 95, 99, 120, 123, 128, 130, 136, 139, 140, 142, 150, 153, 156, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 218, 219, 220, 223, 237, 238, 241, 243, 245, 247, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 295, 301, 309, 313, 314, 338, 339, 379, 390, 391, 393, 394, 398, 399, 404, 405, 406, 407, 410, 411, 413, 414, 416, 417, 421, 422, 425, 428, 432, 433, 438, 443, 444, 445, 447, 450, 458, 459], "datapoint": 438, "dataset": [182, 239, 454], "datatyp": 438, "date": 441, "dditiv": 448, "de": [230, 427, 436, 437, 438, 439, 444, 445, 451, 458], "deactiv": [436, 438, 446], "deal": [396, 443, 450, 454], "debug": 438, "decid": [150, 416, 419, 426, 442], "declar": [53, 57, 65, 204, 405, 439, 445], "decod": 413, "decor": [117, 287, 319, 348, 409, 438, 439, 454], "decorrel": [142, 153, 160, 429, 430, 450], "decreas": [182, 304, 421, 453, 457], "deduc": [401, 402, 425], "dedupl": 438, "deep": 410, "deepcopi": 438, "deeper": 448, "deepli": 455, "def": [393, 404, 409, 410, 411, 416, 419, 422, 432, 439, 445, 454], "default": [13, 16, 42, 95, 123, 142, 153, 156, 186, 192, 194, 201, 202, 203, 204, 210, 212, 218, 230, 250, 270, 273, 353, 393, 394, 396, 399, 414, 421, 426, 436, 438, 439, 444, 445, 446, 448, 449, 450, 458], "default_campaign": 393, "default_model": 259, "defaultkernelfactori": [399, 404, 405, 406, 407, 421, 428], "defaultscal": 438, "defend": 441, "defin": [26, 31, 41, 44, 45, 52, 145, 155, 176, 182, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 218, 239, 263, 265, 266, 290, 347, 352, 353, 381, 394, 395, 396, 398, 404, 405, 406, 407, 413, 414, 419, 424, 438, 439, 441, 444, 445, 447, 450, 453, 454, 456], "definit": [210, 218, 333, 417, 422, 436, 438, 441, 449, 452], "degener": [346, 361, 438], "degr": 428, "degre": 453, "degree_c": [413, 414, 428], "deliber": 441, "delici": 439, "deliveri": 450, "demand": [31, 433], "demo": 438, "demonstr": [392, 393, 394, 397, 400, 403, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 423, 427, 428, 431, 432, 433, 438, 449, 452, 453, 457], "denot": 26, "densiti": 411, "depend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 53, 57, 86, 212, 218, 239, 304, 313, 395, 399, 403, 416, 417, 424, 434, 435, 437, 438, 439, 445, 446, 447, 448, 452, 454, 455, 456, 457, 459], "dependenciesconstraint": 438, "deprec": [67, 147, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 218, 223, 260, 319, 404, 406, 407], "deprecationwarn": [404, 406, 407, 410], "depth": 452, "deriv": [201, 202, 203, 204, 218, 333, 441, 445, 452], "descend": 304, "describ": [201, 202, 203, 204, 250, 252, 254, 259, 263, 277, 279, 281, 283, 399, 404, 409, 410, 417, 419, 421, 422, 439, 441, 443, 444, 445, 449, 450, 453, 454], "descript": 439, "descriptor": [153, 339, 438, 448, 450, 457], "deseri": [228, 232, 237, 428, 437, 438, 444, 458], "deserialize_datafram": 453, "design": [0, 21, 26, 241, 348, 409, 413, 416, 419, 441, 442, 445, 447, 448, 449, 451, 453], "desir": [123, 126, 349, 420, 421, 434, 436, 438, 442, 446, 448, 449, 451, 453, 456, 459], "desirabilityobject": [31, 421, 436, 438, 444, 453, 455, 458], "desktop": 438, "despit": 438, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 163, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 218, 241, 245, 250, 252, 254, 255, 257, 259, 263, 266, 273, 275, 277, 279, 281, 283, 293, 295, 301, 306, 307, 353, 358, 361, 381, 394, 396, 401, 402, 421, 426, 435, 436, 437, 438, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457], "detect": [316, 354, 437, 439], "determin": [13, 16, 31, 44, 95, 184, 218, 333, 353, 365, 370, 378, 394, 416, 419, 438, 441, 446, 451], "determinist": 378, "detriment": 450, "dev": [436, 438, 439], "develop": [436, 438, 443, 450, 454], "deviat": [6, 18, 287, 354, 413, 438, 444], "df": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 120, 123, 128, 130, 156, 210, 212, 218, 223, 238, 243, 313, 314, 338, 346, 350, 351, 352, 353, 355, 356, 358, 379, 393, 404, 419, 436, 445, 452, 453, 454], "df_y": 422, "dfa": [313, 314], "di": [394, 395, 396, 398, 399, 440], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 201, 202, 203, 204, 210, 212, 215, 218, 221, 231, 232, 233, 235, 245, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 307, 324, 327, 339, 345, 361, 381, 410, 413, 432, 433, 438], "dict_bas": [394, 395, 396, 398, 399], "dict_ligand": [394, 395, 396, 398, 399], "dict_solv": [394, 395, 396, 398, 399, 404, 405, 406, 407, 416, 445], "dictat": [120, 123, 128, 130, 194, 212, 432, 433], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 210, 212, 218, 231, 233, 235, 245, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 287, 293, 295, 301, 324, 327, 345, 361, 394, 395, 396, 398, 450, 454], "diff": 439, "differ": [13, 16, 55, 123, 194, 210, 212, 213, 218, 239, 247, 309, 314, 345, 347, 381, 395, 404, 409, 416, 419, 421, 422, 425, 426, 432, 433, 436, 438, 439, 441, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457], "differenti": [454, 457], "difficult": 457, "digit": 356, "dilemma": 419, "dim": [26, 401, 402, 411, 413, 425, 426, 432, 433], "dimens": [26, 378, 393, 401, 402, 411, 413, 424, 425, 432, 433, 438, 450, 452, 455, 457], "dimension": [13, 16, 124, 135, 136, 137, 139, 140, 142, 149, 150, 153, 273, 348, 378, 393, 432, 433, 438], "dimethylisoxazol": 457, "direct": [13, 16, 394, 395, 396, 398, 436, 438, 441, 447, 450, 459], "directli": [13, 16, 333, 433, 436, 438, 445, 449, 453, 455], "directori": [426, 438], "disabl": [250, 252, 254, 259, 263, 277, 279, 281, 283, 308, 404, 406, 407, 438, 444, 447], "disadvantag": 453, "disappear": 438, "disc_ind": 426, "disc_indic": [425, 426], "disc_paramet": 426, "disc_recommend": [186, 426], "discard": [8, 416], "disclaim": 441, "discourag": 444, "discret": [15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 73, 135, 136, 137, 139, 140, 142, 149, 150, 153, 186, 194, 201, 202, 203, 204, 206, 210, 212, 213, 217, 218, 247, 377, 398, 401, 407, 410, 411, 413, 421, 423, 426, 428, 433, 434, 436, 438, 442, 447, 448, 451, 453, 454, 458, 459], "discrete_param": [411, 432, 433], "discrete_spac": [401, 402, 426], "discrete_subspac": 452, "discretecardinalityconstraint": [438, 458], "discreteconstraint": [31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 218, 438, 445, 447], "discretecust": 404, "discretecustomconstraint": [404, 438, 458], "discretedep": 405, "discretedependenciesconstraint": [57, 65, 405, 416, 458], "discreteexcl": 406, "discreteexcludeconstraint": [406, 438, 447, 458], "discretelinkedparametersconstraint": [438, 458], "discretenolabelduplicatesconstraint": [57, 416, 438, 458], "discreteparamet": [150, 218, 219, 220, 438], "discretepermutationinvarianceconstraint": [416, 458], "discreteprod": 407, "discreteproductconstraint": [407, 438, 458], "discretesamplingmethod": [15, 194, 379, 438, 442], "discretesumc": 407, "discretesumconstraint": [401, 407, 416, 438, 458], "discuss": [421, 441, 445, 452, 454], "disjoint": 218, "disk": [438, 458], "displai": [356, 410, 441], "distanc": [150, 378], "distinct": [409, 444, 451], "distinguish": [346, 416, 438, 445, 450, 457], "distribut": [31, 163, 166, 250, 252, 254, 259, 263, 277, 279, 281, 283, 416, 421, 426, 436, 438, 441, 442, 443, 455], "distutil": 334, "div": 413, "divers": 455, "divid": 417, "divis": 372, "dll": 437, "dmac": [394, 395, 396, 398, 399], "dmf": 445, "do": [63, 212, 218, 258, 409, 413, 414, 416, 419, 426, 428, 429, 430, 432, 435, 436, 437, 441, 443, 445, 446, 447, 448, 450, 451, 453, 457, 458, 459], "do_baybe_work": 446, "doc": [100, 163, 319, 436, 438], "doc101": 439, "doc103": 439, "docstr": 438, "doctest": 438, "document": [31, 368, 413, 436, 438, 439, 440, 441, 444, 448, 454], "doe": [30, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 95, 155, 194, 239, 241, 243, 245, 250, 252, 254, 258, 259, 263, 277, 279, 281, 283, 290, 329, 338, 354, 368, 396, 399, 410, 413, 414, 416, 429, 430, 432, 433, 438, 439, 441, 445, 449, 451, 454, 455, 457, 459], "doi": [275, 352], "domain": [250, 252, 254, 259, 263, 277, 279, 281, 283, 393, 436, 438, 452, 454], "don": [435, 447], "done": [31, 353, 354, 396, 398, 404, 405, 406, 407, 413, 414, 421, 428, 438, 442, 444, 445, 446, 447], "doubl": [368, 439, 446], "down": [453, 459], "downsid": 183, "draft": 438, "dramat": 457, "drastic": 450, "draw": [10, 112, 210, 417, 419, 424], "draw_arm": 419, "drawback": 449, "drawn": [21, 194], "drive": [411, 457], "driven": [345, 442], "driver": 437, "drop": [350, 351, 352, 410, 438, 445], "dry_run": 31, "dtype": [13, 16, 124, 157, 303, 304, 305, 371], "due": [155, 310, 433, 436, 438, 442, 445, 446, 450, 451, 452, 453, 456], "duplic": [57, 162, 316, 324, 438, 445], "dure": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 212, 218, 239, 327, 378, 416, 419, 432, 433, 436, 437, 438, 439, 440, 444, 445, 446, 447, 448, 452, 453, 454, 455], "dynam": [419, 438, 453, 458], "d\u00fcbendorf": 440, "e": [8, 21, 26, 31, 34, 44, 53, 55, 56, 73, 95, 98, 142, 156, 157, 184, 212, 218, 239, 310, 316, 322, 323, 339, 345, 353, 354, 361, 386, 394, 395, 396, 414, 416, 417, 419, 436, 437, 438, 439, 442, 443, 445, 446, 448, 450, 451, 452, 453, 454, 457, 459], "e3fp": 147, "e3fpfingerprint": 147, "each": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 120, 123, 128, 130, 156, 176, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 212, 241, 243, 245, 247, 250, 252, 254, 258, 259, 263, 277, 279, 281, 283, 314, 339, 345, 346, 354, 393, 395, 396, 399, 411, 416, 417, 419, 421, 422, 426, 432, 433, 439, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459], "eagerli": 438, "earli": [410, 438], "earlier": [31, 435, 437], "earn": 419, "earned_reward": 419, "easi": [338, 439, 453], "easier": [439, 459], "easiest": [436, 439], "easili": [410, 436, 439, 444, 447, 450, 452, 453, 457], "ecfp": [147, 395, 438, 450], "ecfpfingerprint": 147, "ecosystem": 453, "edbo": [273, 275, 352, 438], "edbokernelfactori": [273, 438], "edg": 155, "edit": [436, 439], "editor": 457, "editori": 441, "edwin": 457, "effect": [55, 179, 181, 182, 183, 184, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 409, 410, 419, 433, 438, 442, 445, 450, 451, 454, 457, 459], "effici": [218, 416, 436, 438, 452], "effortlessli": 454, "ei": [3, 399], "either": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 213, 241, 247, 263, 287, 354, 395, 406, 421, 426, 436, 441, 449, 450, 451, 452, 454, 455], "elabor": 441, "elaps": 409, "elapsedtimeprint": 409, "electron": [440, 441], "electroshap": 147, "electroshapefingerprint": 147, "eleg": [432, 453], "element": [40, 41, 42, 52, 157, 247, 316, 326, 332, 343, 370, 371, 416, 432, 433, 438, 445, 454], "elev": 411, "elif": [425, 426], "elimin": [439, 442], "els": [333, 334, 393, 394, 395, 396, 401, 402, 404, 405, 407, 410, 411, 419, 422, 425, 426, 432, 433], "elsewher": 413, "emd": 440, "emdgroup": [306, 436], "emelin": 440, "emerg": 444, "empir": 419, "emploi": [31, 419, 451], "employe": [436, 446], "empow": 455, "empti": [99, 210, 212, 218, 225, 314, 329, 338, 353, 356, 390, 391, 416, 421, 426, 428, 438, 452], "empty_encod": [212, 218], "emptysearchspaceerror": 225, "emul": [21, 437, 438], "en": [100, 163], "enabl": [183, 308, 309, 394, 395, 396, 416, 432, 436, 437, 438, 444, 445, 446, 447, 448, 449, 451, 453, 454, 456, 457], "encod": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 149, 150, 153, 212, 218, 250, 252, 254, 259, 263, 277, 279, 281, 283, 337, 339, 394, 395, 396, 398, 399, 404, 405, 406, 407, 410, 414, 416, 419, 421, 428, 429, 430, 432, 433, 436, 438, 445, 452, 453, 457], "encompass": 444, "encount": [155, 179, 181, 182, 183, 184, 378, 437, 438, 439, 449], "end": [0, 305, 361, 410, 414, 419, 421, 428, 441, 445, 453], "endeavor": 442, "endpoint": [438, 446], "enforc": [369, 384, 438, 439, 450], "engin": [437, 451, 453, 454, 459], "enhanc": [26, 436], "enlarg": 450, "enough": [210, 453], "ensembl": 285, "ensur": [155, 156, 394, 395, 396, 416, 417, 436, 445, 453, 454], "enter": [77, 218, 452], "entir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 309, 361, 379, 438, 439, 442, 444, 446, 459], "entiti": 441, "entri": [38, 41, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 233, 250, 252, 254, 259, 263, 277, 279, 281, 283, 314, 345, 354, 379, 396, 404, 405, 406, 407, 416, 435, 438, 445, 446, 447, 448, 456, 459], "enum": [126, 144, 145, 146, 147, 213, 270, 298, 299, 318, 377, 438, 453], "enumer": [125, 143, 297, 411, 432, 433, 449], "env": [438, 439], "envar_nam": 446, "environ": [308, 369, 384, 393, 394, 395, 396, 402, 404, 405, 407, 410, 411, 413, 419, 422, 432, 433, 436, 437, 438, 439, 458], "envvar": 306, "envvar_nam": 446, "eq": [404, 416], "equal": [45, 123, 184, 210, 419, 421, 428, 438, 445, 449, 452, 453, 456], "equat": [45, 445, 454], "equidist": 450, "equip": 445, "equival": [21, 34, 57, 402, 424, 442, 445, 454], "erg": 147, "ergfingerprint": 147, "erron": 438, "error": [182, 241, 243, 245, 260, 327, 372, 396, 414, 419, 437, 438, 445, 449, 451], "esian": 436, "especi": 439, "essenti": [444, 451], "establish": [410, 432, 433, 457], "estat": 147, "estatefingerprint": 147, "ester": [394, 395, 396, 398, 399], "estim": [212, 217, 218, 250, 419, 438, 455, 458], "estimate_product_space_s": [212, 218, 459], "estimated_win_r": 419, "estimation_bia": 419, "estimation_vari": 419, "et": [395, 436, 450], "etc": [40, 41, 42, 137, 212, 293, 457], "ethanol": [416, 445], "euclidean": 378, "eval_during_augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_cr": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_model": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "evalu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 192, 194, 285, 286, 334, 425, 426, 438, 444, 446, 451, 454, 457], "even": [184, 287, 351, 432, 433, 441, 443, 444, 446, 450, 454, 455, 457, 459], "event": [31, 309, 410, 441], "everi": [443, 459], "everyth": [439, 445], "evolv": [411, 439], "ex": 448, "exabyt": 459, "exact": [31, 354, 409, 437, 438, 445, 449, 450, 455], "exactexplain": [93, 96, 448], "exactli": [13, 16, 44, 120, 123, 128, 130, 212, 416, 438, 443, 444, 452, 453], "examin": 444, "exampl": [13, 16, 155, 156, 243, 313, 314, 324, 333, 353, 392, 393, 397, 400, 403, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 422, 423, 424, 427, 431, 432, 433, 437, 438, 439, 440, 441, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "example_input_nam": 413, "exceed": 410, "exceedingli": 454, "except": [31, 329, 338, 342, 359, 360, 394, 395, 396, 410, 414, 429, 430, 436, 437, 438, 441, 447, 455], "excepthook": 437, "exceptiongroup": [63, 438], "excess": 459, "exclud": [31, 56, 350, 404, 405, 406, 407, 421, 428, 438, 441, 445, 458], "exclude_list": 352, "exclus": [54, 403, 434, 438, 441, 445, 454, 458], "execut": [31, 67, 241, 329, 393, 395, 437, 438, 439, 441, 446, 453, 454, 457], "exemplari": 444, "exercis": 441, "exhaust": [182, 194, 448, 451], "exist": [31, 117, 212, 309, 319, 329, 416, 437, 438, 439, 442, 444, 445, 447, 453, 455, 457], "exp_rep": [218, 404, 405, 406, 407, 416, 452], "exp_rep_byt": [217, 459], "exp_rep_human_read": [217, 459], "exp_rep_shap": [217, 459], "expect": [3, 4, 9, 11, 13, 14, 16, 17, 52, 81, 255, 257, 265, 329, 348, 399, 405, 411, 413, 416, 417, 419, 430, 438, 439, 444, 445, 448, 449, 450, 453, 454, 456, 459], "expens": [10, 194, 401, 454], "experi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 176, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 239, 241, 250, 252, 254, 259, 263, 277, 279, 281, 283, 394, 395, 396, 398, 399, 425, 426, 438, 442, 444, 445, 447, 449, 450, 451, 456, 457, 458], "experiment": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 99, 120, 123, 128, 130, 136, 139, 140, 142, 150, 153, 176, 179, 180, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 212, 217, 218, 239, 250, 252, 254, 257, 259, 263, 277, 279, 281, 283, 293, 295, 301, 345, 347, 404, 405, 406, 407, 411, 421, 428, 436, 438, 442, 443, 445, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459], "experimentalist": 435, "explain": [72, 94, 95, 96, 98, 99, 411, 438, 440, 455, 458], "explainer_cl": [95, 99, 448], "explan": [95, 99, 438, 444, 455], "explanation_index": [95, 448], "explicit": [156, 183, 409, 410, 414, 416, 424, 429, 430, 438, 439, 449, 453, 455, 457, 458], "explicitli": [210, 218, 409, 426, 433, 441, 447, 452, 457], "exploit": [8, 21, 419, 438], "explor": [8, 31, 419, 442, 451, 452, 457], "exploratori": 442, "exponenti": 218, "expos": [31, 409, 438], "exposur": 438, "expr": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "express": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 436, 438, 441, 445], "extend": [155, 447, 450, 457], "extens": [438, 451], "extra": [395, 436, 437, 438], "extract": [31, 179, 181, 182, 183, 184, 355, 411, 432, 448, 458], "extract_pi": 411, "f": [334, 393, 394, 395, 396, 401, 402, 404, 405, 406, 407, 409, 410, 411, 416, 417, 421, 424, 425, 426, 432, 433, 459], "f1": 454, "f2": 454, "fabian": 440, "face": [250, 252, 254, 259, 263, 277, 279, 281, 283, 417, 419], "facilit": 451, "fact": [21, 411, 416, 435, 445, 449], "factor": [13, 16, 156, 436, 444, 445, 459], "factori": [156, 210, 263, 264, 265, 266, 267, 273, 275, 325, 399, 404, 405, 406, 407, 421, 428, 438], "fail": [426, 430, 437, 438, 455], "failur": [295, 441], "failure_valu": 295, "fairli": 449, "fake": [243, 345, 349, 398, 399, 413, 414, 421, 438, 443, 454, 458], "fall": [155, 184, 410, 444, 456], "fallback": [218, 363, 413, 438, 452], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 95, 99, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 181, 182, 183, 184, 210, 212, 218, 223, 250, 252, 254, 259, 263, 277, 279, 281, 283, 295, 304, 322, 323, 327, 333, 334, 343, 348, 353, 355, 358, 390, 399, 404, 405, 406, 407, 421, 428, 429, 430, 436, 438, 446], "famili": 445, "familiar": [394, 395, 396, 399, 401, 402, 404, 405, 406, 407, 413, 414, 421, 425, 426, 428], "fang": 440, "fantasi": 10, "far": 444, "farthest": [206, 377, 378, 399, 436, 438, 440, 442, 451], "farthest_point_sampl": 438, "fashion": [303, 305], "fast": [404, 406, 407, 452, 456], "faster": 218, "fault": 90, "faulti": 437, "favicon": 438, "favor": 438, "fc": [394, 395, 396], "feasibl": [75, 444, 448], "featur": [95, 112, 153, 352, 436, 437, 438, 439, 445, 448, 455, 457], "fed": [436, 448], "feder": 440, "fee": 441, "feed": [422, 435, 436, 447, 457], "feedback": 440, "feel": 410, "few": [393, 419, 438, 439, 442, 450, 453, 455, 457, 459], "field": [232, 342, 343, 438, 457, 458], "fifti": 441, "fig": [411, 422], "figsiz": 422, "figur": 411, "file": [394, 395, 396, 413, 414, 426, 436, 438, 441, 446, 453, 457], "filenotfounderror": [394, 395, 396, 410], "fill": [31, 243, 411], "filler": 445, "filter": [31, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 212, 218, 350, 353, 404, 416, 438, 445, 447, 452, 457, 459], "filter_attribut": 438, "filter_df": [31, 438], "filterwarn": 410, "final": [393, 395, 398, 410, 416, 433], "find": [212, 327, 371, 436, 442, 444, 445, 449, 457], "fine": [414, 428, 429, 430, 436], "finer": [156, 436], "fingerprint": [147, 153, 337, 339, 436, 438, 440, 450], "finish": 443, "finit": [182, 239, 247, 360, 386, 419, 450, 454], "first": [212, 245, 370, 378, 393, 395, 398, 399, 404, 409, 410, 413, 414, 416, 421, 422, 426, 430, 432, 433, 436, 437, 438, 444, 445, 449, 450, 451, 452, 457, 459], "fit": [31, 204, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 379, 381, 394, 395, 396, 404, 405, 406, 407, 413, 421, 428, 438, 441, 445, 450, 455], "fit_gpytorch_ml": 438, "fit_gpytorch_mll_torch": 438, "fitnr": 421, "fitzner": [436, 440], "fix": [239, 266, 410, 411, 416, 419, 422, 425, 426, 439, 444, 450, 454, 457, 459], "flag": [26, 31, 53, 95, 99, 120, 123, 128, 130, 194, 212, 213, 218, 348, 355, 435, 438, 444, 446, 447, 448, 451], "flake8": 438, "flexibl": [409, 424, 438, 453, 454], "flexibli": [449, 451], "float": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 42, 44, 45, 47, 48, 106, 107, 108, 109, 110, 111, 112, 113, 117, 123, 124, 142, 149, 150, 153, 157, 160, 161, 167, 168, 169, 170, 171, 172, 173, 192, 194, 217, 218, 241, 245, 250, 252, 253, 254, 257, 259, 263, 277, 279, 281, 283, 287, 295, 296, 303, 304, 305, 310, 320, 341, 345, 346, 347, 352, 361, 365, 367, 368, 370, 371, 372, 383, 386, 387, 388, 409, 411, 413, 419, 421, 438, 439, 444, 458], "float64": 383, "floattensortyp": 413, "fly": [183, 453, 455], "fn": 319, "focu": 444, "focus": [130, 422, 426, 436], "folder": [395, 436, 439, 446, 455], "follow": [157, 179, 181, 182, 183, 184, 212, 241, 243, 245, 394, 395, 396, 399, 401, 402, 404, 405, 406, 407, 409, 410, 414, 419, 421, 426, 429, 430, 432, 433, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "footprint": [10, 212], "forbid": 389, "forc": [95, 97, 155, 194, 438, 439, 448, 451], "forest": [282, 283], "forgiv": 456, "fork": 439, "form": [218, 239, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 345, 435, 436, 441, 442, 444, 449, 450, 451, 452, 453, 454, 459], "formal": [417, 435], "format": [45, 307, 356, 362, 365, 413, 414, 428, 429, 436, 437, 438, 439, 444, 446, 453, 454], "format_except": 437, "former": [416, 438], "formul": 457, "formula": 416, "forrest": 438, "found": [88, 156, 210, 218, 327, 337, 368, 371, 410, 416, 421, 436, 437, 439, 444, 445, 451, 457], "foundat": 451, "four": 416, "fourier": 112, "fourth": 445, "fp": [377, 438, 442], "fp_size": [147, 450], "fpsrecommend": [399, 413, 414, 428, 429, 430, 436, 443, 451], "frac": [433, 449], "frac1": 405, "fraction": [15, 107, 341, 410, 442, 445, 446], "fraction1": 405, "fraction_1": 445, "fraction_2": 445, "fraction_3": 445, "fractur": 445, "frame": [347, 448, 459], "frame1": 405, "frame2": 405, "frame_1": 445, "frame_2": 445, "framea": 405, "framea_a": 405, "frameb": 405, "framework": [444, 450], "free": [439, 441, 446], "freedom": 453, "freeli": 416, "frequenc": 112, "frequent": 419, "fresh": 410, "frictionless": 453, "friendli": 438, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 147, 149, 150, 153, 155, 156, 163, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 235, 243, 245, 247, 250, 252, 254, 257, 259, 263, 266, 271, 275, 277, 279, 281, 283, 287, 293, 295, 301, 304, 305, 329, 333, 334, 338, 347, 348, 350, 352, 361, 372, 379, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 419, 421, 422, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 437, 439, 441, 442, 443, 445, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459], "from_bound": [210, 438, 452], "from_campaign": [95, 448], "from_config": [31, 429, 430, 444], "from_datafram": [210, 212, 218, 438, 447, 452, 453, 459], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 210, 212, 218, 235, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 361, 413], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 210, 212, 218, 235, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 361, 413, 414, 428, 444, 453], "from_paramet": [210, 212, 218, 438], "from_preset": 263, "from_product": [210, 212, 218, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 436, 438, 445, 447, 452, 453, 454], "from_recommend": [95, 448], "from_record": [453, 454], "from_repl": [257, 455], "from_simplex": [218, 416, 438, 447, 452, 459], "from_surrog": [95, 448], "front": 449, "frontier": 422, "frozenset": [44, 210, 416], "fsspec": 438, "fulfil": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 410, 416, 417], "full": [26, 210, 368, 392, 434, 438, 444, 447, 448, 450, 457, 458], "full_factori": 210, "full_lik": 411, "full_lookup": [394, 395, 396], "fulli": [416, 436, 438, 446, 447, 454], "fulltest": 439, "func": 439, "func_nam": 432, "funci": 438, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 39, 45, 46, 52, 60, 62, 70, 80, 90, 92, 95, 111, 119, 122, 127, 129, 131, 154, 155, 159, 192, 194, 195, 211, 216, 222, 226, 227, 235, 236, 239, 240, 242, 244, 245, 246, 251, 258, 264, 269, 284, 288, 289, 292, 299, 302, 303, 304, 305, 306, 309, 310, 312, 315, 331, 335, 340, 344, 347, 349, 354, 355, 356, 359, 364, 366, 373, 376, 385, 398, 404, 405, 406, 407, 409, 411, 416, 419, 422, 428, 432, 433, 436, 437, 438, 442, 445, 447, 449, 451, 452, 454, 455, 456, 457, 458, 459], "function_nam": [432, 433], "functionalgroup": 147, "functionalgroupsfingerprint": 147, "fundament": [450, 453], "furo": 438, "further": [13, 16, 354, 416, 417, 428, 436, 443, 447, 451, 452, 455, 457, 458], "furthermor": 421, "furyl": [394, 395, 396], "futur": [57, 212, 258, 404, 406, 407, 410, 432, 448, 456], "fuzzi": 309, "fuzzy_row_match": [309, 438], "g": [53, 55, 56, 73, 95, 98, 142, 156, 212, 218, 316, 339, 354, 419, 436, 437, 438, 439, 442, 443, 445, 446, 448, 450, 451, 452, 454, 459], "g1": 417, "g2": 417, "g3": 417, "gain": [218, 444, 448], "gamma": 168, "gammaprior": 438, "garbag": 438, "gather": [184, 432, 433, 442, 457], "gaussian": [100, 201, 252, 261, 262, 263, 264, 268, 269, 270, 272, 273, 274, 275, 303, 399, 421, 438, 445, 451, 457], "gaussian_kd": 411, "gaussian_process": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 263, 265, 266, 270, 273, 275, 399, 438], "gaussianmixtureclusteringrecommend": 451, "gaussianprocesspreset": [263, 271], "gaussianprocesssurrog": [271, 399, 404, 405, 406, 407, 411, 421, 428, 429, 430, 438, 455], "gcf": [394, 396], "ge": 402, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 146, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 218, 250, 252, 254, 257, 259, 263, 266, 273, 275, 277, 279, 281, 283, 293, 295, 301, 307, 333, 339, 346, 361, 373, 381, 393, 399, 409, 416, 422, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 453, 454, 455, 456, 457, 458, 459], "geom_mean": [123, 126, 421, 449], "geometr": [126, 372, 421, 449], "germani": [436, 440, 446], "get": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 192, 194, 210, 263, 345, 399, 410, 416, 425, 426, 435, 436, 438, 443, 458, 459], "get_absolute_threshold": [44, 438], "get_acquisition_funct": [31, 192, 194, 438], "get_candid": [218, 410, 411], "get_cmap": 411, "get_comp_rep_parameter_indic": [212, 438], "get_current_recommend": [179, 181, 182, 183, 184, 438], "get_integration_point": 15, "get_invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_invalid_polar": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_lin": 410, "get_next_recommend": [179, 181, 182, 183, 184, 438], "get_non_meta_recommend": [179, 181, 182, 183, 184, 438], "get_parameters_by_nam": [210, 212, 218], "get_parameters_from_datafram": [210, 218], "get_subclass": 399, "get_surrog": [31, 95, 192, 194, 438, 448, 455], "get_transform_object": [358, 438], "get_transform_paramet": 438, "get_valid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 438], "getawai": 147, "getawayfingerprint": 147, "ghosecrippen": 147, "ghosecrippenfingerprint": 147, "git": [436, 439], "github": [275, 306, 330, 352, 413, 438, 439, 440], "give": [413, 414, 416, 433, 441, 444, 445, 449, 453], "given": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 40, 41, 42, 44, 65, 88, 95, 98, 99, 120, 123, 128, 130, 132, 153, 155, 156, 157, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 224, 239, 243, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 287, 298, 310, 314, 322, 323, 327, 328, 329, 332, 333, 336, 337, 341, 343, 345, 348, 355, 361, 362, 370, 372, 378, 381, 404, 405, 406, 407, 410, 416, 419, 421, 426, 432, 433, 438, 444, 452, 454, 455], "glass_transition_tempc": 450, "global": [15, 374, 438, 458, 459], "gmean": 372, "gmm": 201, "go": [313, 416, 436], "goal": [393, 419, 449, 457], "goe": 455, "good": [345, 410, 421, 444, 446, 456], "good_interv": 345, "good_reference_valu": 345, "goodwil": 441, "googl": [438, 439], "govern": 436, "gp": [250, 252, 254, 259, 263, 277, 279, 281, 283, 438], "gpytorch": [100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 163, 165, 167, 168, 169, 170, 171, 172, 173, 438], "grab": 435, "gradient": [10, 194, 281, 438, 446, 451], "grant": [438, 441], "granular": [414, 428, 429, 430, 436], "granularity_coar": 428, "granularity_fin": 428, "great": [419, 453], "greater": [184, 194], "greatli": 439, "greedi": [194, 438, 451], "grid": [422, 432, 433], "grid_d": [432, 433], "grossli": 441, "ground": 438, "group": [86, 194, 314, 324, 381, 417, 436, 438, 444, 448], "groupbi": [245, 247], "grow": 459, "gt": [407, 416], "gu16": 450, "guarante": [438, 445, 446, 451], "guid": [398, 436, 437, 438, 439, 442, 444, 447, 449, 452, 454, 457], "guidelin": [438, 439, 442], "ha": [31, 53, 75, 79, 80, 95, 182, 210, 212, 218, 250, 252, 254, 259, 263, 277, 279, 281, 283, 313, 327, 329, 333, 346, 378, 379, 395, 399, 404, 405, 406, 407, 416, 421, 426, 428, 436, 438, 439, 441, 443, 444, 445, 448, 450, 452, 453, 454, 456, 457], "had": [239, 445, 450, 454], "half": [150, 169, 170, 361, 426, 443], "halfcauchyprior": 438, "halfnormalprior": 438, "hamster": 457, "hand": [45, 153, 417, 419, 422, 432, 433, 436, 444, 453, 455], "handi": 445, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 95, 128, 137, 241, 243, 250, 252, 254, 259, 263, 277, 279, 281, 283, 287, 359, 404, 405, 419, 421, 438, 444, 449, 459], "happen": [87, 182, 421, 426, 433, 437, 438, 439, 452, 453, 457], "happili": 449, "hard": [438, 457, 459], "harmless": 441, "hartmann": [411, 432, 433], "hasattr": [401, 402, 425, 426], "hash": [307, 436, 446, 450], "hashabledict": 438, "have": [26, 31, 38, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 120, 123, 128, 130, 153, 155, 204, 212, 239, 258, 290, 314, 324, 327, 345, 354, 355, 368, 394, 395, 398, 399, 404, 405, 409, 411, 416, 417, 419, 421, 425, 426, 432, 433, 436, 437, 438, 439, 441, 442, 443, 444, 445, 447, 449, 450, 451, 453, 454, 455, 457, 459], "head": 438, "header": 343, "heart": 457, "heatmap": [95, 97], "help": [419, 453, 454, 457], "helper": [409, 411, 413, 416, 453], "henc": [338, 416, 419, 428, 445, 450, 459], "here": [56, 368, 394, 396, 398, 401, 402, 409, 410, 414, 416, 417, 425, 426, 428, 432, 433, 435, 436, 437, 443, 445, 447, 449, 450, 451, 452, 453, 454, 456, 457], "herebi": 441, "herein": [441, 444], "heurist": 194, "hierarch": 453, "hierarchi": [88, 438, 439, 444, 453], "high": [273, 393, 419, 438, 439, 442, 444, 445, 450, 453], "higher": [153, 419, 437, 445, 448, 451], "highest": [442, 453], "highlight": 457, "hint": 439, "histogram": 310, "histor": 450, "histori": 439, "hoc": 449, "hold": [44, 324, 441, 453], "home": [404, 406, 407], "homepag": [436, 438], "hood": 450, "hook": [49, 218, 227, 231, 329, 434, 437, 438, 439], "hopp": [436, 440], "host": [436, 438, 446], "hostnam": [307, 446], "hot": [144, 395, 419, 436, 438, 450], "how": [54, 241, 243, 354, 378, 393, 394, 396, 397, 398, 399, 400, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 419, 426, 428, 429, 430, 433, 436, 444, 445, 446, 449, 454, 455, 456, 457], "howev": [156, 218, 258, 329, 409, 416, 419, 425, 426, 435, 437, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 457, 459], "hrovatin": 440, "html": [100, 163, 306, 319, 368, 413, 438], "http": [100, 163, 275, 306, 319, 330, 352, 368, 436, 438, 441, 457], "hue": [393, 394, 395, 396, 410, 432, 433], "human": [217, 365, 428, 438, 440, 453], "hybrid": [25, 26, 73, 185, 186, 194, 207, 212, 213, 399, 400, 404, 405, 406, 407, 421, 423, 428, 434, 436, 438, 451, 452], "hybrid_recommend": 426, "hybrid_sampl": [194, 451], "hyperrectangl": [210, 452], "hypervolum": [13, 16], "hypothesi": [436, 438, 439], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 72, 73, 77, 79, 80, 82, 84, 95, 98, 99, 114, 117, 124, 135, 136, 137, 139, 140, 142, 149, 150, 153, 155, 156, 157, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 225, 239, 241, 243, 245, 247, 250, 252, 254, 255, 257, 258, 259, 263, 273, 277, 279, 281, 283, 287, 290, 298, 303, 304, 305, 308, 309, 310, 314, 317, 318, 319, 322, 323, 327, 329, 330, 332, 333, 334, 337, 338, 343, 345, 346, 347, 348, 349, 353, 354, 355, 356, 360, 361, 368, 370, 371, 378, 379, 386, 390, 391, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 419, 421, 425, 426, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "ideal": [443, 445, 454], "ident": [156, 313, 314, 447, 450, 453, 457], "identif": 419, "identifi": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 245, 324, 338, 354, 355, 410, 438, 445, 448, 449, 450, 452, 453, 454, 457], "idx_offset": 45, "ignor": [120, 123, 128, 130, 182, 194, 212, 241, 243, 245, 327, 352, 396, 410, 426, 438, 445, 453, 459], "ignore_exampl": 438, "ignore_list": 351, "ii": 441, "iii": 441, "illustr": [422, 424, 447], "iloc": 443, "imag": [419, 438], "imagin": [416, 419], "immedi": [409, 444], "immut": 438, "impact": [395, 433, 446], "imperfect": 347, "implement": [21, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 124, 176, 187, 247, 255, 331, 404, 410, 416, 432, 438, 439, 440, 442, 448, 451, 452, 454, 457], "impli": [416, 436, 441, 445, 450], "implicitli": 453, "import": [13, 16, 86, 95, 123, 243, 410, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "impos": [416, 417, 445], "imposs": [436, 446, 447, 453], "improv": [3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 399, 402, 408, 410, 434, 436, 438, 441, 446], "imput": [241, 243, 392, 396, 434, 436], "impute_mod": [241, 243, 245, 396, 454], "inabl": [436, 441], "inaccuraci": 436, "inact": [44, 155, 157, 194, 210, 438], "inactive_parameter_combin": [44, 210, 438], "inc": 457, "incident": 441, "includ": [63, 65, 120, 123, 128, 130, 155, 184, 241, 322, 323, 351, 394, 405, 414, 416, 429, 430, 433, 438, 439, 441, 442, 443, 445, 447, 459], "inclus": 441, "incom": 453, "incompat": [69, 70, 71, 72, 73, 74, 99, 259, 406, 445], "incompatibilityerror": 31, "incompatibleacquisitionfunctionerror": 443, "incompatibleexplainererror": 448, "incomplet": 438, "inconsist": 438, "incorpor": [441, 443, 455, 459], "incorrect": 438, "incorrectli": 438, "increas": [10, 182, 245, 304, 305, 421, 432, 433, 438, 442, 450, 457], "increment": 218, "incur": 441, "inde": 444, "indefinit": [182, 241], "indemn": 441, "indemnifi": 441, "indent": [343, 438], "independ": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 186, 250, 252, 254, 257, 259, 263, 277, 279, 281, 283, 413, 438, 451, 454, 455], "independentgaussiansurrog": [259, 277, 279, 281, 438], "index": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 212, 245, 257, 313, 314, 353, 354, 413, 414, 421, 426, 428, 438, 448, 450, 452, 454], "indexkernel": 438, "indic": [13, 16, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 90, 95, 98, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 157, 179, 181, 182, 183, 184, 212, 250, 252, 254, 259, 263, 277, 279, 281, 283, 313, 314, 317, 318, 348, 378, 416, 426, 438, 441, 447, 451, 454, 455], "indirect": [322, 323, 441], "indistinguish": 416, "individu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 53, 54, 115, 116, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 241, 257, 356, 410, 417, 422, 441, 444, 447, 449, 451, 457], "induc": [44, 419], "industri": 457, "ineffici": 218, "inequ": [45, 210, 452], "inf": [8, 404, 405, 406, 407, 428], "infeas": [445, 447], "infer": [156, 259, 432, 433, 438, 452], "inferencesess": 259, "infin": 161, "infinit": [182, 183, 325, 360, 386, 387, 438, 450], "influenti": 457, "info": [310, 438], "inform": [26, 137, 293, 355, 394, 395, 396, 411, 416, 425, 426, 433, 436, 438, 439, 441, 443, 446, 447, 450, 452, 457, 458], "infring": 441, "ingest": [218, 241, 450, 451], "ingredi": [416, 417, 445], "inher": [21, 155, 250, 252, 254, 259, 263, 277, 279, 281, 283, 416, 455], "inherit": 439, "init": 289, "initi": [106, 107, 108, 109, 110, 111, 112, 113, 117, 184, 186, 194, 201, 202, 203, 204, 206, 218, 241, 245, 309, 378, 392, 404, 405, 406, 407, 410, 411, 421, 428, 433, 434, 438, 440, 444, 446, 450, 451, 453, 454, 457], "initial_data": [241, 245, 394, 433, 454], "initial_recommend": [184, 399, 410, 411, 413, 414, 419, 428, 429, 430, 436, 451], "initial_recommender_cl": 438, "initial_strategi": 438, "initial_typ": 413, "inject": 453, "inner": [177, 353, 448, 451, 453], "inplac": [395, 432, 433, 459], "input": [40, 41, 42, 124, 136, 139, 140, 142, 150, 153, 210, 212, 218, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 293, 295, 301, 303, 324, 341, 342, 347, 348, 349, 353, 361, 363, 370, 378, 390, 391, 393, 413, 421, 422, 432, 433, 438, 449, 453, 454, 457], "input_dim": 413, "input_label": 348, "inputtransform": 381, "insid": [410, 413, 414, 437, 453], "insight": [95, 410, 436, 438, 440, 458], "inspect": [333, 409, 416], "instabl": [438, 445], "instal": [438, 439, 446, 448, 450, 459], "instanc": [40, 41, 42, 53, 56, 95, 184, 212, 345, 405, 410, 416, 417, 436, 437, 439, 443, 444, 445, 446, 448, 450, 452, 453, 454, 459], "instanti": [259, 410, 444], "instead": [179, 181, 182, 183, 184, 309, 338, 348, 404, 406, 407, 436, 437, 438, 444, 445, 449, 450, 453, 454, 456, 457, 459], "institut": [440, 441], "instruct": [436, 438, 456, 458], "instrument_nam": 310, "int": [10, 13, 15, 16, 21, 31, 34, 44, 45, 51, 95, 102, 103, 104, 107, 109, 110, 111, 112, 113, 120, 123, 124, 128, 130, 144, 157, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 218, 241, 245, 247, 295, 296, 303, 304, 305, 310, 349, 356, 371, 374, 375, 378, 379, 381, 404, 406, 407, 416, 419, 421, 433, 439, 450], "integ": [34, 144, 212, 245, 426, 438, 439, 450], "integr": [15, 438, 439, 442, 444], "intend": [398, 409, 432, 439, 451], "intens": 450, "intention": 441, "interact": [30, 31, 398, 436, 437, 444, 447, 453], "interchang": 416, "interconnect": 444, "interest": [444, 448, 449, 450, 459], "interfac": [176, 255, 265, 409, 411, 438, 441, 444, 447, 448], "intermedi": [204, 378], "intern": [31, 45, 57, 182, 393, 410, 421, 438, 445, 446, 450, 451, 452, 453], "internet": 436, "internship": 440, "interplai": 438, "interpol": [107, 273, 438], "interpret": [13, 16, 212, 239, 341, 414, 416, 429, 430, 433, 446, 452, 454], "interrupt": 67, "intersect": 426, "interv": [31, 44, 149, 155, 157, 250, 252, 254, 259, 263, 277, 279, 281, 283, 301, 303, 304, 305, 421, 438, 444, 450, 453, 456], "intrins": 457, "introduc": [437, 438, 445, 450, 451, 454], "intuit": [444, 448], "invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 76, 218, 338, 379, 414, 429, 437, 444, 445, 452], "invalid_config": 430, "invalid_surrogate_model": 414, "invalid_typ": 430, "invari": [53, 56, 57, 313, 314, 445], "invers": [231, 453], "invert": [31, 353], "investig": [239, 454, 455], "invok": [454, 458, 459], "involv": [31, 218, 257, 409, 416, 436, 446, 448, 449, 450, 453, 457], "io": 306, "irrelev": [416, 438, 445], "irrevoc": 441, "is_bound": [361, 438], "is_cardinality_fulfil": 438, "is_continu": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 135, 136, 137, 139, 140, 142, 149, 150, 153], "is_degener": 361, "is_discret": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 135, 136, 137, 139, 140, 142, 149, 150, 153], "is_empti": [210, 218, 438], "is_eq": 45, "is_finit": 438, "is_fully_unbound": 361, "is_half_bound": 361, "is_in_rang": [135, 136, 137, 139, 140, 142, 149, 150, 153], "is_inact": 438, "is_left_bound": 361, "is_mc": 438, "is_multi_output": [120, 123, 128, 130, 438], "is_numer": [135, 136, 137, 139, 140, 142, 149, 150, 153, 438], "is_right_bound": 361, "is_stat": [179, 181, 182, 183, 184, 438, 447], "iso": 413, "isol": 444, "isoxazol": 457, "issu": [258, 319, 330, 438, 441, 454, 459], "item": [41, 135, 136, 137, 139, 140, 142, 149, 150, 153, 416, 419, 432, 433, 450], "iter": [13, 16, 31, 44, 149, 182, 183, 210, 212, 241, 258, 301, 320, 325, 345, 347, 349, 362, 390, 391, 394, 404, 405, 406, 407, 410, 411, 419, 432, 433, 436, 438, 442, 444, 450, 451, 454, 455, 459], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 155, 156, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 186, 210, 212, 218, 235, 247, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 310, 313, 321, 329, 333, 345, 361, 365, 393, 399, 409, 411, 416, 417, 419, 433, 436, 437, 439, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 459], "itself": [250, 252, 254, 259, 263, 277, 279, 281, 283, 409, 432, 437, 457], "j": [395, 436, 450, 457], "jackiepho": [394, 395, 396], "januari": 441, "javadi": 440, "jin": 440, "join": [353, 437], "joint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 192, 194, 257, 444, 455], "joint_acq_valu": 444, "joint_acquisition_valu": [31, 192, 194, 438, 444], "jointli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 422, 444], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 210, 212, 218, 235, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 361, 413, 414, 428, 429, 438, 458], "json_str": 453, "juli": 440, "julian": 440, "jump": [438, 457], "jupyt": 413, "just": [419, 435, 439, 453], "k": [150, 202, 378, 393, 394, 395, 396, 398, 399, 401, 402, 410, 416, 422, 424, 425, 426, 438, 447, 451, 459], "karin": 440, "kde": 411, "keep": [52, 153, 210, 218, 410, 438, 439], "kei": [324, 345, 395, 439, 448], "kept": [353, 450, 455], "kernel": [102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 263, 264, 265, 266, 267, 273, 275, 399, 404, 405, 406, 407, 421, 428, 438, 445, 457], "kernel_factori": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 263, 265, 266], "kernel_or_factori": 263, "kernelexplain": [93, 95, 96, 99, 448], "kernelfactori": [263, 266, 267, 273, 275, 438], "keyword": [95, 153, 396, 399, 426, 433, 438, 443, 445, 452, 454], "kgaa": [436, 440, 446], "kian": 457, "kickstart": 453, "kind": [194, 436, 438, 441, 445, 450, 451], "kiter": [404, 405, 406, 407, 421], "klekotaroth": 147, "klekotarothfingerprint": 147, "kmean": 399, "kmeansclusteringrecommend": [399, 451], "knob": 436, "know": [419, 429, 436, 437, 449, 453, 457], "knowledg": [8, 10, 436, 438, 457], "known": [445, 447, 455, 457], "koller": 457, "kwarg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 106, 108, 110, 115, 116, 117, 165, 167, 168, 169, 170, 171, 172, 173, 176, 196, 255, 260, 265, 339, 349, 360], "kwargs_conform": [153, 339, 450], "kwargs_fingerprint": [153, 339, 450], "l0": 34, "l1": 450, "l664": 275, "label": [56, 57, 142, 153, 310, 348, 416, 417, 422, 436, 438, 445, 447, 452, 454], "labelpad": 411, "laboratori": 422, "laggner": 147, "laggnerfingerprint": 147, "lambda": [404, 406, 407, 410, 416, 432, 455], "lanat": 448, "land": 438, "languag": [319, 417, 436], "larg": [153, 218, 401, 402, 417, 438, 446, 450, 454, 459], "larger": [107, 150, 379, 399, 406, 444, 445, 453, 457], "largest": [378, 419, 442], "last": [182, 419, 439, 444, 451], "last_call_tim": 409, "lastli": 411, "latent": 450, "later": [150, 437, 444, 453], "latest": [183, 436, 439, 444], "latter": [21, 31, 313, 333, 410, 416, 444, 449, 457], "law": [436, 441], "lawsuit": 441, "layer": 147, "layeredfingerprint": 147, "layout": 438, "lazi": [220, 382, 438], "lazili": [438, 446], "lazyfram": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 220], "le": 402, "le_method": 439, "lead": [85, 421, 438, 453], "lean": 439, "learn": [15, 246, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 399, 404, 405, 406, 407, 419, 421, 428, 432, 434, 436, 438, 445, 448, 450, 455, 456, 458], "least": [157, 182, 417, 436, 441, 443, 444], "leav": 453, "lee": 440, "left": [82, 83, 173, 241, 346, 354, 361, 405, 422, 438, 449], "left_df": 354, "leftov": 438, "legal": 441, "legend": [394, 396, 422], "len": [405, 410, 411, 416, 417, 419], "length": [108, 182, 183, 250], "lengthi": 444, "lengthscal": [107, 108, 109, 111, 112, 113], "lengthscale_initial_valu": [107, 108, 109, 111, 112, 113], "lengthscale_prior": [107, 108, 109, 111, 112, 113], "leq": 34, "less": [8, 314, 349, 410, 411, 419, 444, 459], "let": [393, 395, 409, 410, 411, 413, 414, 416, 417, 422, 424, 433, 436, 445, 449, 453], "level": [347, 438, 439, 443, 444, 445, 451, 453], "leverag": [410, 444, 451], "li": [157, 450], "liabil": 441, "liabl": 441, "lib": 437, "librari": 437, "licensor": 441, "lie": [31, 250, 252, 254, 259, 263, 277, 279, 281, 283, 345], "liebig": 440, "life": [436, 439, 440, 459], "lifecycl": 444, "ligand": [394, 395, 396, 398, 399, 410, 436, 448, 450], "ligand_data": 410, "ligand_smil": 410, "like": [13, 16, 157, 204, 245, 316, 411, 416, 419, 436, 437, 438, 439, 443, 444, 445, 447, 453, 454, 457, 459], "likelihood": 250, "lime": [95, 98, 448], "limetabular": [93, 94, 448], "limit": [8, 273, 310, 411, 436, 440, 441, 445, 452, 458], "line": [343, 361, 394, 396, 410, 419, 438, 439, 442, 444, 450, 454, 457], "linear": [45, 106, 210, 277, 299, 304, 399, 400, 421, 434, 438, 439, 448, 452, 456], "linear_model": 413, "linear_regressor": 413, "linearkernel": 438, "linearli": [273, 304, 305, 421, 438], "lineplot": [393, 394, 395, 396, 410, 432, 433], "lingo": 147, "lingofingerprint": 147, "link": [55, 437, 438, 441, 450], "linspac": [404, 405, 406, 407, 411, 413, 414, 416, 422, 425, 426, 428, 432, 433, 459], "lint": [436, 438, 439], "linter": [438, 439], "list": [34, 35, 36, 37, 38, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 156, 162, 182, 183, 210, 212, 218, 219, 220, 223, 224, 225, 241, 245, 247, 309, 322, 323, 324, 332, 339, 345, 350, 351, 352, 355, 378, 394, 399, 404, 405, 406, 407, 411, 416, 417, 419, 421, 425, 426, 433, 436, 438, 439, 441, 445, 449, 450, 451, 452, 454], "liter": [31, 95, 182, 241, 243, 245, 250, 252, 253, 254, 257, 259, 263, 277, 279, 281, 283, 347, 378, 439], "literatur": 438, "litig": 441, "littl": 437, "live": 455, "liver": [454, 457], "ll": 447, "load": [382, 410, 413, 429, 430, 437, 438], "loc": [171, 172, 394, 396, 422], "local": [437, 439, 446, 448, 458], "locat": [13, 16, 171, 172, 443, 446, 457], "lockfil": 438, "log": [171, 310, 399, 436, 446], "logarithm": [4, 11, 13, 14, 372], "logei": [4, 438], "logic": [177, 257, 345, 348, 393, 438, 445, 451, 454, 459], "lognormalprior": 438, "logo": 438, "long": [444, 453, 454], "longer": [155, 438], "look": [243, 399, 416, 419, 437, 442, 444, 445, 447, 448, 453, 454, 456], "look_up_target": 241, "lookup": [239, 241, 245, 247, 348, 354, 392, 393, 411, 422, 425, 434, 438, 448, 458], "lookup_df": 243, "lookup_test_task": 433, "lookup_training_task": 433, "lookup_valu": [401, 402, 411, 425, 426], "lookup_withmiss": 396, "loop": [239, 241, 247, 404, 405, 406, 407, 410, 421, 438, 443, 448, 454, 459], "loss": 441, "lost": 453, "lot": 424, "low": [273, 419, 437, 438, 448, 450, 453], "lower": [157, 173, 303, 304, 305, 361, 394, 396, 411, 421, 432, 433, 445, 450, 456], "lower_bound": 452, "lower_threshold": 157, "lst_exclud": 350, "lt": 437, "luxuri": 444, "m": 416, "m1": 437, "mac": 437, "macc": 147, "maccsfingerprint": 147, "machin": [419, 436, 437, 439, 442, 446, 450, 456, 457], "machineri": [21, 194, 437, 439, 447, 457, 459], "made": [86, 241, 378, 396, 436, 437, 441, 445, 446, 454], "magic": 457, "magnitud": [346, 347, 459], "mai": [31, 44, 120, 123, 128, 130, 212, 329, 435, 436, 441, 444, 447, 453, 454, 455], "mail": 441, "main": [30, 31, 436, 438], "maintain": [287, 439, 447, 449], "major": [438, 454], "make": [57, 194, 250, 252, 254, 259, 263, 277, 279, 281, 283, 285, 286, 287, 319, 346, 348, 394, 396, 399, 401, 416, 417, 436, 437, 438, 439, 441, 443, 444, 445, 447, 448, 450, 453, 455, 457, 459], "make_explainer_for_surrog": 95, "malfunct": 441, "manag": [30, 210, 211, 212, 218, 375, 438, 441, 454], "mandatori": [435, 438, 456], "mani": [194, 379, 416, 425, 426, 436, 444, 450, 453, 456, 457], "manipul": [438, 446], "manner": 446, "manual": [426, 437, 438, 453, 455], "map": [142, 147, 153, 243, 245, 257, 303, 304, 305, 327, 348, 381, 394, 395, 396, 421, 454, 456], "mapfingerprint": 147, "mapl": [93, 94, 95, 98, 448], "margin": 438, "mark": [441, 444, 457, 458], "markdown": [414, 429, 430, 438], "marker": [393, 394, 395, 396, 410, 432, 433, 438], "markers": [393, 395, 410, 422, 432, 433], "market": 419, "marketplac": 438, "martin": [436, 440], "mask_bad1": 404, "mask_bad2": 404, "mask_bad3": 404, "mask_good": [404, 445], "mass": 167, "master": 275, "match": [31, 87, 89, 136, 139, 140, 142, 150, 153, 156, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 293, 295, 298, 301, 309, 327, 329, 354, 355, 390, 409, 411, 421, 426, 436, 438, 443, 444, 447, 449, 453, 454, 458], "match_attribut": 438, "match_targeta": 456, "match_targetb": 456, "materi": [419, 440, 457], "matern": 107, "maternkernel": 438, "math": [410, 416], "mathemat": 438, "matmin": 437, "matplotlib": [394, 396, 411, 422, 438], "matter": [416, 424, 439, 449], "max": [243, 298, 346, 394, 395, 396, 398, 399, 404, 405, 406, 407, 410, 411, 413, 414, 419, 421, 422, 428, 429, 430, 436, 438, 449, 453, 454, 458], "max_cardin": [34, 44, 51, 445], "max_column": [356, 416], "max_colwidth": 356, "max_n_subspac": [194, 438, 445], "max_nonzero": 218, "max_row": [356, 416], "max_sum": [218, 416, 452], "max_target": 456, "max_yield": [394, 396], "maxim": [6, 13, 16, 298, 398, 411, 419, 421, 436, 438, 448, 456], "maximum": [6, 34, 44, 51, 61, 153, 194, 210, 212, 218, 303, 356, 416, 417, 421, 438, 445, 450, 452], "mc": [419, 443], "md": 438, "me2pph": [394, 395, 396], "mean": [5, 8, 21, 31, 57, 126, 202, 239, 241, 243, 245, 250, 252, 253, 254, 257, 259, 263, 277, 279, 281, 283, 287, 372, 396, 399, 413, 419, 421, 422, 438, 439, 441, 442, 443, 444, 445, 447, 449, 450, 451, 453, 455, 458], "meaning": 449, "meaningless": [416, 442], "meanpredictionsurrog": [287, 399, 455], "meantim": [439, 445], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 81, 95, 155, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 239, 241, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 293, 295, 301, 309, 345, 349, 354, 394, 395, 396, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 421, 425, 426, 428, 435, 436, 438, 439, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458], "mechan": [31, 67, 123, 124, 126, 239, 242, 243, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 329, 353, 363, 378, 393, 409, 410, 411, 432, 433, 438, 441, 447, 448, 450, 452, 453, 455, 457, 458], "mechanist": 436, "media": [441, 450, 457], "mediocr": 456, "medium": [414, 428, 436, 441, 450], "medoid": [203, 438, 451], "meet": [345, 441], "mem_estim": 459, "member": [333, 445, 450], "memori": [10, 212, 217, 218, 438, 446, 458], "memorys": [212, 218, 459], "mention": 442, "merchant": 441, "merck": [436, 440, 446], "mere": [441, 449], "merg": 439, "meshgrid": [422, 432, 433], "messag": [87, 410], "meta": [31, 82, 179, 181, 182, 183, 184, 187, 404, 405, 406, 407, 421, 428, 436, 438, 458], "metadata": [31, 210, 218, 307, 438], "metarecommend": [181, 182, 183, 184, 438, 447], "methanol": 416, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 90, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 218, 235, 250, 252, 254, 255, 257, 259, 263, 265, 266, 273, 275, 277, 279, 281, 283, 286, 289, 290, 293, 295, 301, 316, 319, 329, 333, 361, 377, 378, 379, 381, 411, 414, 429, 430, 435, 438, 440, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457], "methodtyp": [409, 410, 411], "methyldiphenylphosphin": [394, 395, 396], "methylisoxazol": 457, "metric": [419, 436, 446, 450], "mhfp": 147, "mhfpfingerprint": 147, "micromamba": 438, "middl": 447, "midpoint": 456, "might": [53, 57, 153, 212, 395, 399, 401, 405, 426, 433, 437, 443, 444, 445, 446, 448, 452, 454, 457, 459], "mimic": [100, 163, 445], "min": [298, 346, 393, 401, 402, 411, 421, 422, 425, 426, 432, 433, 436, 438, 449, 453, 458], "min_cardin": [34, 44, 51, 445], "min_nonzero": 218, "min_target": 456, "mind": [419, 455], "miniconda": 438, "minim": [6, 298, 421, 432, 433, 438, 445, 452, 456], "minimum": [34, 44, 51, 61, 78, 150, 210, 212, 218, 438, 445], "minimumcardinalityviolatedwarn": [438, 445], "minor": 438, "mirror": [13, 16, 444, 453], "miss": [241, 243, 396, 438, 439], "mistak": 439, "mix": [247, 416, 417, 436, 445, 450, 453, 457], "mixin": 235, "mixtur": [201, 434, 438, 445, 450, 451, 457, 459], "mobil": 438, "mode": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 142, 153, 182, 241, 250, 252, 253, 254, 257, 259, 263, 277, 279, 281, 283, 298, 301, 304, 327, 345, 392, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 410, 411, 413, 414, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 444, 449, 451, 453, 458], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 76, 79, 95, 99, 100, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 250, 252, 254, 255, 256, 257, 258, 259, 263, 277, 279, 281, 283, 287, 289, 290, 368, 401, 402, 412, 422, 432, 433, 436, 438, 440, 442, 443, 444, 445, 449, 450, 451, 453, 454, 456, 457, 458], "model_cl": 290, "model_cluster_num_parameter_nam": [201, 202, 203, 204], "model_from_config": 413, "model_from_python": 413, "model_init": 289, "model_json": 413, "model_param": [201, 202, 203, 204, 277, 281, 283, 414, 438], "modellist": 257, "modelnottrainederror": [250, 252, 254, 259, 263, 277, 279, 281, 283], "modif": [437, 441], "modifi": [183, 243, 287, 345, 346, 347, 438, 441, 459], "modul": [0, 1, 32, 91, 92, 100, 118, 133, 151, 163, 174, 177, 187, 190, 197, 208, 226, 227, 239, 248, 251, 261, 268, 291, 294, 311, 315, 366, 382, 385, 436, 437, 438, 439], "modular": 439, "molecul": [55, 153, 338, 416, 450], "molecular": [339, 450], "moment": [247, 273, 439], "monitor": [438, 446], "monkeypatch": 437, "mont": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 80, 245, 393, 395, 396, 410, 419, 432, 433, 438, 443, 454], "monte_carlo_run": [245, 410], "mordr": [147, 153, 394, 395, 396, 398, 399, 405, 410, 414, 416, 429, 430, 436, 438, 445, 450], "mordredcommun": 438, "mordredfingerprint": [147, 450], "more": [8, 10, 57, 65, 83, 153, 182, 183, 210, 212, 218, 225, 241, 287, 306, 309, 333, 343, 358, 396, 399, 411, 416, 417, 432, 435, 436, 437, 438, 439, 441, 443, 444, 445, 446, 447, 450, 452, 453, 454, 455, 456, 459], "morgan": 450, "morgan_fp": [147, 438], "mors": 147, "morsefingerprint": 147, "most": [218, 241, 397, 419, 436, 439, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459], "motiv": 438, "move": [13, 16, 155, 438, 453], "mpl_toolkit": 411, "mplot3d": 411, "mqn": 147, "mqnsfingerprint": 147, "mse": 419, "mu": [171, 172], "much": [395, 449, 450], "multi": [127, 249, 250, 252, 254, 257, 259, 263, 277, 279, 281, 283, 422, 434, 436, 438, 440, 443, 457, 458], "multiarmedbandit": 419, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 40, 120, 123, 128, 130, 244, 245, 250, 252, 254, 257, 259, 263, 277, 279, 281, 283, 347, 394, 395, 396, 405, 416, 419, 436, 438, 443, 445, 449, 455, 456, 457, 458], "multipli": 116, "multitask": 438, "must": [53, 120, 123, 128, 130, 212, 218, 243, 247, 329, 347, 390, 399, 409, 410, 416, 419, 421, 438, 439, 441, 442, 445, 446, 447, 449, 450, 454], "mutual": 454, "my_attribut": 439, "my_valu": 446, "mypi": [319, 330, 436, 438, 439], "mystr": 439, "n": [26, 250, 314, 334, 378, 394, 395, 396, 398, 399, 404, 405, 406, 407, 414, 416, 419, 421, 425, 426, 428], "n_arm": 419, "n_batches_don": 31, "n_cluster": [202, 203], "n_combin": 416, "n_combinations_actu": 416, "n_combinations_expect": 416, "n_compon": 201, "n_doe_iter": [241, 245, 247, 393, 394, 395, 396, 410, 411, 432, 433, 454], "n_duplic": 416, "n_estim": 414, "n_fits_don": 31, "n_grid_point": 422, "n_inactive_parameter_combin": [44, 210, 438], "n_interrupted_campaign": 410, "n_iter": [401, 402, 404, 405, 406, 407, 419, 421], "n_mc_iter": [245, 247, 393, 395, 396, 410, 432, 433, 454], "n_mc_run": 419, "n_mc_sampl": 21, "n_output": [120, 123, 128, 130, 438], "n_permut": 416, "n_pis_ov": 410, "n_pis_over_requir": 410, "n_point": [210, 379], "n_raw_sampl": [194, 438, 451], "n_restart": [194, 438, 451], "n_row": 349, "n_sampl": 378, "n_task": 212, "n_task_param": 438, "n_training_data": 422, "n_wrong_sum": 416, "nactivevalu": [404, 405, 406, 407, 421, 428], "naiv": [186, 279, 287, 399, 438, 452], "naivehybridrecommend": 438, "naivehybridspacerecommend": [426, 438, 451], "nake": [309, 446], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 44, 65, 86, 132, 135, 136, 137, 139, 140, 142, 149, 150, 153, 156, 158, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 224, 233, 245, 257, 259, 293, 295, 301, 313, 321, 327, 328, 329, 338, 339, 343, 345, 350, 354, 355, 369, 384, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 419, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 436, 438, 439, 441, 443, 444, 445, 446, 449, 452, 453, 454, 455, 456, 457, 459], "name_or_abbr": [321, 328], "namedtupl": 419, "namespac": [195, 438, 439], "nan": [161, 250, 386, 388, 389, 390, 391, 404, 405, 406, 407, 421, 428], "nativ": [413, 438, 455], "natur": [281, 395, 439, 445, 451, 453, 456], "navig": [436, 444], "nbase": 339, "nbviewer": 413, "nd": 436, "ndarrai": [13, 16, 124, 157, 303, 304, 305, 348, 357, 361, 372, 378, 411, 419, 422, 438, 454], "ne": 416, "nearli": 456, "necessari": [355, 409, 438, 439, 444, 445, 449, 450, 452, 454, 455], "necessarili": [441, 444, 445, 452, 457], "need": [26, 31, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 247, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 329, 354, 355, 394, 395, 396, 399, 404, 407, 409, 411, 413, 416, 419, 421, 432, 433, 435, 436, 437, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 459], "neg": [15, 422, 438, 445], "negat": [6, 45, 433, 438, 457], "neglig": 441, "neither": [8, 247, 347], "neq": 34, "nest": [343, 444, 458], "neural": 457, "neurip": 457, "neutral": 8, "never": 406, "nevertheless": [333, 437], "new": [31, 47, 48, 182, 184, 210, 243, 258, 303, 304, 305, 313, 352, 353, 398, 410, 411, 428, 436, 438, 439, 444, 445, 455, 457], "new_measur": 448, "new_rec": 444, "newli": [436, 439, 446, 447, 457], "next": [31, 393, 409, 411, 416, 417, 422, 428, 432, 433, 436, 442, 443, 444, 451, 453], "ngboost": [281, 399, 438], "ngboostmodel": 414, "ngboostsurrog": [399, 414, 455], "nice": [411, 437], "nicknam": 338, "nintern": 421, "no_duplicates_constraint": 416, "no_tl": 432, "nois": [241, 346, 347, 433, 438, 458], "noise_level": 347, "noise_perc": [241, 245, 454], "noise_ratio": 346, "noise_std": [432, 433], "noise_typ": 347, "noisi": [13, 14, 16, 17, 349, 432, 436, 438, 457], "non": [64, 65, 94, 120, 123, 128, 130, 179, 181, 182, 183, 184, 186, 212, 241, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 327, 329, 333, 346, 379, 386, 387, 388, 390, 391, 416, 432, 436, 438, 441, 443, 445, 447, 448, 452, 453], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 42, 47, 48, 57, 63, 64, 65, 81, 86, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 117, 123, 128, 130, 132, 136, 139, 140, 142, 149, 150, 153, 156, 160, 161, 162, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 215, 218, 221, 224, 225, 228, 229, 231, 233, 241, 243, 245, 247, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 289, 290, 295, 301, 309, 310, 317, 318, 329, 339, 345, 350, 351, 352, 356, 361, 362, 381, 386, 387, 388, 389, 390, 391, 399, 404, 405, 406, 407, 409, 410, 411, 413, 414, 421, 428, 452, 456, 458], "nonetheless": 457, "nonlinear": [37, 210], "nonpredict": [199, 201, 202, 203, 204, 206, 207], "nonpredictiverecommend": [204, 206, 207, 438], "nonzero": [34, 44, 218, 438], "noqa": [404, 439], "nor": [8, 347, 435], "norecommenderslefterror": [182, 183], "noreturn": [186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 260], "normal": [170, 171, 172, 404, 406, 407, 421, 437, 441, 449, 452], "normaliz": 449, "normalprior": 438, "not_a_param": 414, "notabl": [438, 447, 455], "note": [34, 44, 57, 212, 241, 245, 247, 258, 259, 345, 346, 347, 394, 395, 396, 399, 405, 409, 413, 414, 416, 421, 425, 426, 428, 429, 430, 435, 436, 444, 445, 446, 447, 449, 451, 452, 453, 454, 455, 457], "notebook": 413, "noteworthi": 444, "noth": [15, 31, 34, 42, 44, 45, 51, 84, 123, 153, 184, 186, 192, 194, 201, 202, 203, 204, 210, 212, 218, 250, 263, 277, 281, 283, 301, 441, 450], "notic": [409, 439, 441, 453, 455], "notimplementederror": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 124, 155, 225, 228, 229, 247, 250, 252, 254, 258, 259, 263, 277, 279, 281, 283], "notwithstand": 441, "now": [393, 394, 395, 396, 398, 399, 404, 406, 409, 410, 411, 416, 417, 419, 421, 422, 424, 428, 429, 432, 433, 435, 436, 438, 457, 459], "np": [124, 401, 402, 404, 405, 406, 407, 411, 413, 414, 416, 417, 419, 422, 424, 425, 426, 428, 432, 433, 445, 450, 454, 459], "nrecommend": [398, 399, 421, 425, 426], "nu": 107, "num": [353, 365], "num_disc_1": [421, 444], "num_disc_2": 421, "num_experi": [241, 393, 394, 395, 396, 410, 432, 433], "num_fantasi": 10, "num_parameter_1": 407, "num_parameter_2": 407, "num_parameter_3": 407, "num_parameter_4": 407, "num_parameter_5": 407, "num_parameter_6": 407, "num_sampl": 112, "num_valu": 452, "number": [10, 15, 21, 31, 44, 112, 120, 123, 128, 130, 153, 176, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 241, 245, 247, 250, 349, 356, 361, 365, 373, 378, 379, 394, 395, 396, 401, 402, 404, 405, 406, 407, 411, 416, 419, 425, 432, 433, 436, 437, 438, 442, 444, 445, 446, 449, 450, 452, 453, 454, 459], "numer": [13, 16, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 85, 135, 136, 137, 139, 140, 142, 149, 150, 153, 157, 210, 218, 243, 301, 346, 347, 354, 379, 390, 391, 393, 398, 401, 416, 417, 436, 438, 445, 446, 448, 449, 450, 452, 454, 456], "numerical_measurements_must_be_within_toler": [31, 390, 438, 444], "numerical_onli": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "numericalcontinuousparamet": [45, 63, 155, 210, 393, 401, 402, 417, 422, 424, 426, 433, 452, 454, 458], "numericaldiscreteparamet": [218, 394, 395, 396, 398, 399, 401, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 421, 425, 426, 428, 429, 430, 432, 433, 436, 452, 453, 454, 458, 459], "numericaltarget": [243, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 410, 411, 413, 414, 421, 422, 425, 426, 428, 429, 430, 432, 433, 436, 438, 449, 453, 454, 458], "numericcontinu": 426, "numparam1": 407, "numparam2": 407, "numparam3": 407, "numparam4": 407, "numparam5": 407, "numparam6": 407, "numpi": [157, 348, 357, 361, 367, 369, 401, 402, 404, 405, 406, 407, 411, 413, 414, 416, 417, 419, 422, 424, 425, 426, 428, 432, 433, 438, 445, 454, 459], "nuniqu": 416, "nyou": [425, 426], "o": [393, 394, 395, 396, 398, 399, 402, 404, 405, 406, 407, 410, 411, 414, 416, 419, 422, 432, 433, 436, 445, 446, 450], "o2": [394, 395, 396], "obj": [160, 161, 162, 229], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 123, 126, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 156, 157, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 218, 219, 220, 229, 230, 233, 235, 250, 252, 254, 255, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 316, 319, 327, 329, 347, 354, 355, 358, 361, 381, 393, 398, 409, 410, 411, 413, 414, 419, 422, 424, 426, 429, 430, 437, 438, 439, 441, 445, 447, 448, 451, 452, 454, 455, 456, 458, 459], "objective_json": 453, "oblig": 441, "observ": [239, 250, 252, 254, 259, 263, 277, 279, 281, 283, 419, 454, 456], "obsolet": 438, "obtain": [241, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 395, 411, 419, 422, 433, 436, 438, 444, 448, 449, 453, 457], "oc": [394, 395, 396, 398, 399], "oc1": [394, 395, 396], "occur": [56, 439], "occurr": 445, "octanol": [445, 450], "off": [8, 247, 334, 405, 436, 438, 445, 446, 449, 456], "offer": [329, 411, 416, 419, 425, 435, 436, 437, 441, 442, 447, 450, 451, 453, 454, 455, 457, 459], "offset": [45, 110], "offset_initial_valu": 110, "offset_prior": 110, "often": [417, 419, 437, 442, 445, 446, 447, 448, 450, 453, 459], "oftentim": [453, 454], "oh": [139, 144, 395, 405, 414, 419, 421, 428, 429, 430, 436, 452, 453], "ok": 421, "old": 457, "omit": [13, 16, 192, 194, 245, 329, 409, 436, 452, 453], "onc": [245, 410, 450, 454], "one": [13, 16, 21, 31, 63, 65, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 155, 156, 157, 167, 176, 177, 182, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 212, 225, 243, 263, 287, 313, 314, 343, 349, 394, 395, 396, 399, 401, 416, 419, 421, 430, 432, 433, 435, 436, 437, 438, 439, 441, 443, 444, 445, 447, 449, 450, 452, 453, 454, 455, 456, 457], "onehot": 395, "ones": [212, 309, 354, 395, 426, 438, 443, 457], "ongo": [410, 457], "onli": [10, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 95, 107, 120, 123, 128, 130, 153, 212, 218, 243, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 287, 309, 310, 329, 330, 333, 343, 345, 354, 361, 378, 379, 394, 399, 404, 405, 410, 411, 413, 414, 416, 425, 426, 433, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 459], "onlin": 419, "onnx": [258, 259, 368, 412, 436, 438, 455], "onnx_input_nam": [259, 413], "onnx_str": [259, 413], "onto": [13, 16, 439], "open": [31, 44, 155, 157, 250, 252, 254, 259, 263, 277, 279, 281, 283, 436, 439], "opentelemetri": [436, 438, 446], "oper": [42, 45, 54, 231, 250, 252, 254, 259, 263, 277, 279, 281, 283, 287, 348, 366, 401, 402, 406, 407, 416, 417, 437, 438, 443, 445, 446, 447, 448, 451, 453], "operator_convert": 413, "opposit": 445, "opt": [436, 446], "optim": [12, 21, 31, 44, 45, 75, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 239, 241, 245, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 345, 395, 397, 398, 401, 402, 410, 411, 416, 419, 421, 426, 438, 440, 442, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457], "optimize_acqf": [45, 194], "optimize_acqf_": 45, "optimize_acqf_discret": 194, "optimize_acqf_mix": 194, "option": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 86, 91, 95, 106, 107, 108, 109, 110, 111, 112, 113, 117, 123, 128, 130, 136, 139, 140, 142, 150, 153, 156, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 231, 233, 241, 245, 247, 277, 281, 283, 289, 295, 301, 329, 339, 345, 350, 351, 352, 396, 399, 413, 414, 419, 437, 438, 439, 442, 444, 445, 447, 448, 449, 452, 453, 454, 455, 456, 459], "oracl": 454, "orchestr": [439, 444], "order": [212, 218, 410, 419, 435, 436, 438, 439, 444, 445, 450, 453, 457], "ordin": 456, "org": [275, 319, 352, 413, 436, 441], "organ": 439, "origin": [26, 31, 155, 313, 314, 324, 348, 428, 435, 438, 439, 441, 451, 453, 455], "orthogon": 439, "oserror": 437, "other": [53, 114, 155, 210, 314, 394, 396, 398, 399, 401, 402, 410, 417, 419, 426, 432, 433, 435, 436, 437, 438, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 459], "otherwis": [45, 61, 135, 136, 137, 139, 140, 142, 149, 150, 153, 441, 442, 447, 449, 457], "our": [393, 404, 406, 409, 410, 411, 414, 416, 417, 419, 422, 424, 425, 426, 429, 430, 432, 433, 436, 439, 442, 444, 445, 447, 453, 454], "out": [218, 421, 433, 436, 441, 446, 449, 454, 457], "out_par": 422, "out_y0": 422, "out_y1": 422, "outcom": [176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 395, 436, 450, 456], "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 117, 120, 123, 128, 130, 250, 252, 254, 259, 263, 277, 279, 281, 283, 347, 348, 349, 393, 422, 432, 433, 437, 438, 440, 454, 458], "output_label": 348, "outputscal": 117, "outputscale_initial_valu": 117, "outputscale_prior": 117, "outsid": [31, 155, 183, 250, 252, 254, 259, 263, 277, 279, 281, 283, 287, 304, 305, 345, 421, 438, 453], "outstand": 441, "over": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 210, 416, 435, 438, 442, 444, 447, 457], "overal": [212, 413, 414, 416, 417, 419, 438, 439, 444, 449, 457], "overlap": [64, 65, 155, 401, 402, 445], "overrid": [231, 233, 409, 438], "overridden": [409, 439], "overview": [436, 453], "overwritten": 426, "own": [186, 393, 417, 436, 437, 438, 439, 441, 445, 450], "owner": 441, "ownership": 441, "p": [393, 394, 395, 396, 398, 399, 401, 402, 409, 411, 425, 432, 433, 439, 447, 448, 455, 459], "p1": [452, 453, 454], "p1_json": 453, "p1_via_json": 453, "p2": [452, 453, 454], "p2_json": 453, "p2_via_json": 453, "p3c4": [394, 395, 396], "p_cont": 452, "p_disc": 452, "p_g1_amount": 417, "p_g2_amount": 417, "p_g3_amount": 417, "p_i": 34, "pack": 453, "packag": [95, 147, 307, 437, 438, 439, 450, 454, 455, 459], "page": [413, 436, 438, 439, 447], "pair": [313, 422, 436, 450], "pam": 203, "pamclusteringrecommend": 451, "panda": [52, 219, 237, 238, 243, 338, 357, 393, 394, 395, 396, 401, 402, 404, 410, 411, 416, 417, 421, 422, 425, 426, 432, 433, 438, 445, 446, 450, 452, 453, 454], "panic": 435, "paper": 457, "paper_fil": 457, "parallel": 439, "param": [412, 414, 434], "param1": [452, 454], "param2": [452, 454], "param_bounds_comp": 438, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 68, 83, 87, 95, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 124, 128, 130, 135, 136, 139, 140, 142, 144, 145, 146, 147, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 214, 217, 218, 219, 220, 223, 224, 225, 231, 233, 235, 239, 241, 243, 245, 247, 250, 252, 254, 257, 259, 263, 266, 273, 275, 277, 279, 281, 283, 285, 287, 289, 290, 293, 295, 301, 303, 304, 305, 309, 310, 313, 314, 322, 323, 324, 327, 329, 332, 333, 334, 337, 338, 339, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 365, 370, 371, 372, 374, 375, 378, 379, 381, 390, 391, 393, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 419, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 436, 438, 439, 445, 446, 447, 449, 453, 454, 455, 457, 458], "parameter": [167, 168, 169, 170, 171, 172, 173], "parameter_json": 453, "parameter_nam": [210, 212, 218, 426], "parameter_names_in_cardinality_constraint": 210, "parameterencod": [136, 144, 145, 147, 150], "parametr": 445, "parent": 439, "pareto": [12, 128, 420, 434, 436, 438, 449], "paretoobject": [422, 436, 438, 458], "pars": [363, 438], "parser": 438, "part": [15, 26, 31, 40, 73, 187, 210, 212, 218, 345, 391, 414, 426, 429, 430, 432, 433, 438, 439, 441, 442, 443, 444, 445, 450, 451, 452, 453, 459], "parti": [441, 454], "partial": [26, 410, 458], "particl": 457, "particular": [31, 218, 239, 409, 422, 426, 435, 436, 437, 439, 441, 444, 449, 450, 452, 453, 454], "particularli": [329, 444], "partit": [203, 245, 247, 438, 451, 454], "partitionexplain": [93, 96], "pass": [31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 95, 153, 201, 202, 203, 204, 212, 218, 229, 263, 277, 281, 283, 349, 355, 416, 428, 433, 438, 439, 443, 447, 448, 449, 450, 453], "passthrough": [28, 121, 214, 267], "patch": 410, "patent": 441, "path": [86, 395, 416, 438, 439, 446, 459], "pattern": [147, 439, 457], "patternfingerprint": 147, "pd": [31, 192, 194, 243, 257, 313, 314, 353, 393, 394, 395, 396, 401, 402, 404, 410, 411, 416, 417, 421, 422, 425, 426, 432, 433, 438, 445, 447, 450, 452, 453, 454], "pdf": 457, "peek": 453, "pend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 436, 438, 458], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 438, 443, 444], "per": [241, 257, 394, 395, 396, 399, 416, 421, 425, 432, 433, 438, 450, 452, 454], "percent": [241, 441], "percentag": [194, 309, 347, 399, 404, 405, 406, 407, 416, 421, 428, 433, 451], "perf_count": 409, "perfectli": 453, "perform": [194, 241, 309, 354, 395, 404, 405, 406, 407, 411, 416, 429, 432, 433, 435, 436, 438, 439, 441, 442, 444, 446, 448, 450, 451, 454, 455, 457], "period": 108, "period_length_initial_valu": 108, "period_length_prior": 108, "periodickernel": 438, "perm_inv_constraint": 416, "perman": 458, "permiss": [436, 441], "permut": [53, 56, 57, 314, 438, 445], "permutation_invari": 53, "permutationexplain": [93, 96], "perpetu": 441, "persist": [438, 440, 444, 446, 453, 455], "perspect": 453, "pertain": 441, "pharmacophor": 147, "pharmacophorefingerprint": 147, "phase": [184, 417], "phaseagent1": 417, "phaseagent2": 417, "phcpho": [394, 395, 396, 398, 399], "phenomenon": 444, "philosophi": 453, "physic": [448, 454], "physiochemicalproperti": 147, "physiochemicalpropertiesfingerprint": 147, "pi": [7, 399, 410, 411], "pi_max": 411, "pi_per_iter": 411, "pi_required_fract": 410, "pi_threshold": 410, "pickl": 438, "pictur": 436, "piec": [419, 436, 444, 445], "piecewis": 109, "piecewisepolynomialkernel": 438, "pin": [26, 438], "pin_discret": 26, "pinned_part": 26, "pip": [436, 438, 439, 448, 459], "pipelin": [432, 433, 438, 439], "pival": [394, 395, 396, 398, 399], "pl": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "place": [13, 16, 34, 243, 345, 346, 347, 413, 414, 416, 419, 437, 438, 439, 441, 444, 447, 450, 453, 457], "placehold": 316, "plai": [444, 448, 456], "plain": 267, "plainkernelfactori": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 263], "plan": [258, 447, 450], "platt": 457, "pleas": [413, 414, 436, 442, 448, 451], "plenti": 448, "plot": [95, 97, 241, 394, 396, 422, 433, 438, 455, 457, 458], "plot_abegin_convert_pipelin": 368, "plot_ebegin_float_doubl": 368, "plot_typ": 95, "plt": [394, 396, 411, 422], "plu": [243, 436], "plugin": 438, "pm": [5, 399], "png": [394, 396], "po16": 450, "poetri": 438, "point": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 30, 31, 95, 150, 155, 176, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 354, 367, 368, 376, 377, 378, 379, 383, 394, 398, 399, 410, 417, 422, 425, 426, 432, 433, 435, 436, 438, 440, 442, 443, 444, 447, 448, 449, 451, 452, 458, 459], "points_per_dim": [411, 425, 426, 432, 433], "polar": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 220, 436, 438, 440, 458, 459], "poli": 411, "polici": 419, "polycollect": 411, "polym": 450, "polynomi": [109, 110], "polynomialkernel": 438, "polytop": 438, "popul": 416, "popular": [448, 450, 455], "posit": [13, 16, 95, 329, 378, 438, 445, 448, 449], "possibl": [31, 44, 156, 210, 218, 219, 220, 239, 329, 345, 396, 410, 411, 416, 421, 436, 438, 441, 444, 445, 446, 447, 450, 451, 452, 453, 454, 456, 457, 459], "possibli": 444, "post": [449, 450], "post_hook": [329, 409, 410, 411], "posterior": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 192, 194, 250, 252, 254, 257, 259, 263, 277, 279, 281, 283, 286, 399, 438, 442, 455], "posterior_mean": [250, 419], "posterior_mod": 250, "posterior_stat": [31, 250, 252, 254, 257, 259, 263, 277, 279, 281, 283, 438, 444], "posteriorlist": 257, "posteriorstandarddevi": [419, 442], "postprocess": 338, "potassium": [394, 395, 396, 398, 399], "potenti": [212, 436, 437, 438, 439, 444, 445, 448, 449, 452, 459], "power": [110, 441, 445, 451], "pph3": [394, 395, 396], "pr": [438, 439], "practic": [442, 448, 451], "pre": [156, 182, 266, 412, 437, 438, 439], "pre_hook": [329, 409], "precis": [57, 182, 210, 309, 356, 368, 369, 384, 438, 458], "precomput": 142, "predefin": [444, 451], "predict": [31, 79, 204, 250, 252, 254, 259, 263, 277, 279, 281, 283, 436, 438, 442, 443, 449, 454, 455, 457, 458], "predictor": 285, "prefer": [31, 441, 447, 449, 453], "prefix": 339, "preliminari": 457, "prepar": [411, 439, 441, 459], "preprocess": 438, "presenc": [194, 437, 438], "present": [72, 95, 120, 123, 128, 130, 212, 313, 314, 329, 398, 419, 438, 445, 454, 459], "preset": [263, 270, 273, 275, 438], "pressur": [406, 413, 414, 428, 429, 430, 436, 445], "pretrain": [259, 412, 434], "pretti": 356, "pretty_print_df": [416, 438], "prevent": [155, 228, 229, 329, 437, 438, 439], "previou": [182, 410, 411, 438, 444, 446, 457], "previous": [309, 394, 395, 396, 398, 406, 443, 444], "price": 450, "primari": 444, "primarili": 442, "principl": [416, 419, 455], "print": [243, 343, 356, 394, 395, 396, 398, 399, 401, 402, 406, 409, 413, 414, 416, 417, 419, 424, 425, 426, 428, 429, 430, 436, 438, 452, 459], "print_parameter_names_hook": 409, "printer_inst": 409, "prior": [106, 107, 108, 109, 110, 111, 112, 113, 117, 167, 168, 169, 170, 171, 172, 173, 250, 273, 407, 436, 437, 438], "priori": [445, 453, 457], "privat": [438, 440], "probabilist": 442, "probability_of_improv": 411, "probabilityofimprov": [410, 411], "probabl": [7, 19, 21, 399, 408, 410, 434, 438], "problem": [75, 416, 417, 419, 432, 433, 438, 439, 444, 449, 453], "problemat": [333, 437, 450], "proce": [241, 398, 446], "procedur": [442, 457], "proceed": 457, "process": [31, 100, 261, 262, 263, 264, 268, 269, 270, 272, 273, 274, 275, 353, 378, 399, 409, 416, 419, 432, 433, 438, 439, 442, 443, 444, 445, 446, 447, 449, 450, 453, 457], "prod": 407, "prod_constraint": 407, "prod_i": 449, "produc": [120, 123, 124, 128, 130, 243, 436, 438, 439, 446, 454], "product": [58, 116, 212, 218, 219, 220, 325, 403, 434, 436, 438, 441, 445, 447, 458, 459], "product_paramet": [218, 416, 452], "productkernel": 438, "programmat": 416, "progress": [31, 180, 411, 438, 447], "prohibit": 442, "project": [411, 436, 438, 446], "promin": 441, "promis": [410, 443], "proper": 438, "properli": [26, 421, 437, 452], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 126, 128, 130, 135, 136, 137, 139, 140, 142, 144, 145, 147, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 213, 217, 218, 250, 252, 254, 257, 259, 263, 266, 270, 273, 275, 277, 279, 281, 283, 293, 295, 298, 299, 301, 318, 319, 361, 377, 381, 438, 439, 445, 447, 450], "proport": 433, "propos": 444, "protobuf": 438, "protocol": [175, 176, 255, 265, 333, 438], "prototyp": 440, "provid": [13, 15, 16, 31, 45, 95, 99, 124, 142, 153, 156, 176, 182, 183, 186, 187, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 231, 235, 239, 241, 243, 245, 247, 250, 252, 254, 259, 263, 273, 275, 277, 279, 281, 283, 313, 325, 329, 341, 346, 347, 352, 355, 357, 378, 379, 393, 394, 395, 396, 409, 416, 422, 424, 425, 426, 429, 432, 433, 436, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "prune": [12, 13, 14, 16, 17], "prune_baselin": [12, 13, 14, 16, 17], "pstd": [6, 438, 442], "pubchem": 147, "pubchemfingerprint": 147, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 126, 128, 130, 135, 136, 137, 139, 140, 142, 144, 145, 147, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 213, 217, 218, 235, 250, 252, 254, 255, 257, 259, 263, 265, 266, 270, 273, 275, 277, 279, 281, 283, 293, 295, 298, 299, 301, 316, 318, 319, 361, 377, 381, 438, 439], "publicli": 441, "publish": 438, "pull": [419, 438], "punish": 8, "pure": [8, 10, 15, 177, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 212, 247, 258, 379, 425, 438, 458], "purerecommend": [179, 181, 182, 183, 184, 186, 192, 199, 438], "purpl": 422, "purpos": [15, 409, 410, 413, 419, 436, 437, 439, 441, 444, 447, 453, 459], "push": [44, 439], "put": [416, 419, 446, 450], "puzzl": 436, "py": [275, 404, 406, 407, 438, 446], "py312": 439, "pyarrow": 438, "pydant": 438, "pydoclint": [438, 439], "pydocstyl": 439, "pylint": 438, "pymatgen": 437, "pypi": [436, 438], "pyplot": [394, 396, 411, 422], "pyproject": 438, "pytest": [438, 439], "python": [30, 319, 330, 395, 414, 429, 430, 436, 437, 438, 439, 444, 446, 453], "python310": 437, "pytorch": 438, "pyupgrad": 438, "q": [109, 285, 286, 399, 443], "qei": [9, 399, 429, 430, 438], "qkg": [10, 438], "qlogei": [11, 399, 438], "qlogexpectedimprov": 399, "qlognehvi": [13, 16], "qlognei": [14, 438], "qlognoisyexpectedhypervolumeimprov": [438, 449], "qlognparego": 438, "qnegintegratedposteriorvari": 442, "qnehvi": 16, "qnei": [17, 438], "qnipv": [15, 438, 442], "qnoisyexpectedhypervolumeimprov": 438, "qpi": [19, 399], "qposteriorstandarddevi": 442, "qpstd": [18, 438, 442, 444], "qsimpleregret": 21, "qsr": [20, 438], "qt": 21, "qthompsonsampl": [419, 438], "quadrat": [113, 393, 422], "qualiti": 439, "quantif": 457, "quantifi": [419, 442, 457], "quantil": [31, 250, 252, 253, 254, 259, 263, 277, 279, 281, 283, 444], "quantiti": [31, 55, 444, 446, 448, 449, 455, 459], "quantum": 142, "qucb": [22, 399, 438, 442], "queri": [177, 187, 239, 241, 243, 422, 436, 444, 446, 447, 454], "question": [439, 444, 457], "quickli": 445, "qupperconfidencebound": 442, "qvarucb": 438, "r": [44, 394, 395, 396, 398, 399], "radial": 111, "radiu": [147, 438, 450], "rais": [13, 15, 16, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 95, 99, 124, 132, 155, 156, 161, 162, 182, 183, 210, 212, 218, 224, 225, 228, 229, 241, 243, 247, 250, 252, 254, 258, 259, 260, 263, 277, 279, 281, 283, 290, 314, 327, 329, 332, 334, 337, 341, 342, 343, 345, 346, 347, 349, 354, 355, 378, 379, 390, 391, 409, 410, 411, 426, 437, 438, 439, 443, 451], "rand": 413, "random": [15, 112, 210, 212, 241, 243, 245, 282, 283, 345, 377, 378, 379, 393, 394, 395, 396, 399, 410, 411, 413, 417, 419, 422, 433, 436, 438, 442, 450, 451, 454, 459], "random_campaign": 393, "random_forest": [283, 399], "random_se": [241, 245, 410, 454], "randomforestmodel": 414, "randomforestsurrog": [399, 438, 455], "randomli": [194, 207, 393, 395, 422, 442, 448, 451], "randomrecommend": [393, 394, 395, 396, 399, 404, 405, 406, 407, 409, 410, 411, 417, 419, 421, 438, 443, 451], "rang": [44, 135, 136, 137, 139, 140, 142, 149, 150, 153, 155, 293, 345, 346, 393, 401, 402, 404, 405, 406, 407, 411, 416, 419, 421, 424, 425, 426, 433, 436, 438, 445, 452, 453, 454, 456, 459], "rank": 456, "rare": 438, "rastrigin": [401, 402, 425, 426], "rate": [168, 250, 419], "rather": [428, 437, 442, 453], "ration": 113, "ravel": [422, 432, 433], "raw": [194, 453], "rbf": 111, "rbfkernel": 438, "rdf": 147, "rdffingerprint": 147, "rdkit": [147, 404, 406, 407, 438, 445, 450], "rdkit2ddescriptor": [147, 395, 404, 406, 407, 438], "rdkit2ddescriptorsfingerprint": 147, "rdkitfingerprint": 147, "re": [410, 425, 426, 439, 451], "reach": [303, 305, 421], "reachabl": 446, "reactant": [448, 450], "reaction": [395, 398, 436, 445, 448, 450, 457], "reactor": [443, 457], "reactora": 457, "reactorb": 457, "reactorc": 457, "read": [142, 212, 395, 398, 436, 438, 439], "read_excel": [394, 395, 396, 410], "readabl": [217, 356, 365, 428, 438, 440, 441, 453], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 241, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 439, 443], "readm": [438, 439], "reagent": [445, 450], "real": [361, 436, 444, 456], "realist": 454, "realiz": [239, 454], "reason": [42, 201, 202, 203, 204, 395, 425, 438, 441, 442, 443, 445, 446, 450, 454], "reassembl": 453, "rebas": 439, "rec": [404, 405, 406, 407, 421, 443, 444], "rec_finish": 443, "rec_next": 443, "rec_par": 422, "rec_pend": 443, "rec_y0": 422, "rec_y1": 422, "receiv": [441, 446, 453], "recip": 439, "recipi": 441, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 73, 82, 83, 95, 136, 139, 140, 142, 150, 153, 155, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 239, 241, 255, 257, 258, 309, 345, 347, 349, 393, 394, 395, 396, 397, 401, 402, 404, 405, 406, 407, 409, 410, 411, 417, 419, 421, 422, 429, 430, 432, 433, 434, 435, 436, 438, 439, 442, 446, 448, 450, 454, 455, 457, 458, 459], "recommendation_orig": 428, "recommendation_recr": 428, "recommended_arm_idx": 419, "recommender_with_hook": 410, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 95, 179, 181, 182, 183, 184, 189, 192, 194, 255, 257, 409, 411, 435, 438, 443], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 210, 212, 218, 235, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 361, 436, 444, 446, 453], "record": [31, 309, 310, 436, 446, 457], "recreat": [270, 428, 453], "recreate_model": 414, "recurs": [179, 181, 182, 183, 184, 322, 323], "red": 422, "redesign": 438, "redistribut": 441, "reduc": [153, 411, 419, 432, 433, 447, 450], "reduct": 458, "ref": 436, "refactor": 438, "refer": [13, 16, 239, 275, 328, 345, 354, 368, 394, 395, 396, 399, 401, 402, 404, 405, 406, 407, 409, 411, 413, 414, 416, 421, 425, 426, 428, 437, 438, 444, 448, 449, 450, 451, 452, 453, 454, 455, 457], "referenc": 439, "reference_point": [13, 16], "refin": [410, 436, 438, 444, 447], "reflect": [186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 411, 438, 439, 442, 445, 450], "regard": [34, 40, 401, 402, 439, 441], "regardless": 455, "regim": [438, 448], "region": 157, "regist": [329, 408, 410], "register_custom_architectur": 438, "register_hook": [408, 409, 410, 411, 438], "registr": 438, "regress": 277, "regressor": 413, "regret": [20, 21], "regroup": 438, "regular": [21, 155, 287, 424, 437, 438, 443, 457], "reinstal": 436, "rel": [13, 16, 44, 241, 346, 445, 449], "relat": [55, 120, 123, 125, 128, 130, 143, 212, 230, 297, 312, 426, 432, 433, 435, 436, 438, 444, 445, 446, 457], "relationship": [432, 433, 436, 439, 449, 457], "relative_perc": 347, "relative_threshold": [44, 438, 445], "releas": [436, 438], "relev": [53, 95, 243, 354, 355, 405, 416, 438, 439, 444, 445, 447, 457, 459], "reli": [437, 438, 449], "reliabl": 450, "reloc": 438, "remain": [56, 155, 184, 247, 304, 393, 399, 404, 405, 406, 407, 416, 419, 421, 426, 428, 432, 433, 441, 450, 453, 454], "remain_switch": [184, 438], "remaind": 379, "remind": 438, "remot": 439, "remov": [52, 55, 56, 212, 218, 416, 439, 445, 452], "renam": [395, 432, 433, 438, 439], "render": [95, 413], "reoccur": 457, "reorder": 438, "reorgan": 438, "repeat": [419, 438, 439, 443, 444], "repetit": [245, 399, 410], "rephras": 445, "replac": [425, 426, 438, 439], "replic": [250, 252, 254, 257, 259, 263, 277, 279, 281, 283, 438, 453, 458], "repo": 438, "report": [176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 419, 437], "repositori": [395, 436, 439], "repr": 413, "repres": [13, 16, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 115, 116, 142, 212, 247, 250, 252, 254, 257, 259, 263, 277, 279, 281, 283, 341, 357, 361, 365, 378, 393, 416, 417, 419, 422, 429, 430, 436, 438, 441, 444, 449, 450, 452, 454, 459], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 218, 235, 250, 252, 254, 255, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 334, 336, 341, 343, 345, 356, 361, 404, 405, 406, 407, 413, 415, 421, 428, 438, 443, 444, 450, 453, 454, 458, 459], "reproduc": [410, 419, 422, 438, 441, 458], "reproduct": 441, "request": [31, 82, 83, 124, 182, 183, 184, 225, 250, 252, 253, 254, 259, 263, 266, 277, 279, 281, 283, 307, 349, 378, 379, 422, 435, 438, 443, 444, 447], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 45, 51, 80, 184, 218, 290, 329, 398, 409, 410, 413, 417, 419, 421, 425, 429, 435, 436, 437, 438, 439, 441, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459], "rerun": 413, "reserv": [436, 439], "reset_index": 432, "reshap": 422, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 405, 407, 416, 453], "resolv": 338, "resort": [287, 439, 453, 459], "resource_track": 437, "resp": [213, 396, 426], "respect": [31, 194, 213, 241, 245, 308, 313, 345, 416, 417, 439, 444, 445, 447, 448, 449, 453, 454, 455, 456, 459], "respond": 435, "respons": [179, 181, 182, 183, 184, 441, 444, 451], "restart": [182, 194], "restor": 453, "restr": 21, "restrain": 450, "restrict": [212, 218, 239, 245, 247, 404, 417, 438, 447, 454, 457, 458], "result": [10, 13, 16, 31, 153, 155, 218, 241, 250, 252, 254, 259, 263, 277, 279, 281, 283, 345, 353, 394, 395, 396, 398, 413, 414, 416, 417, 419, 421, 422, 424, 432, 433, 436, 438, 440, 441, 442, 444, 445, 446, 448, 450, 451, 453, 454, 457, 458, 459], "result_baselin": [432, 433], "result_fract": 433, "results_interrupt": 410, "results_uninterrupt": 410, "retain": [441, 445], "retrain": [258, 259, 455], "retriev": [212, 239, 321, 322, 323, 337, 438, 439, 454], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 95, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 121, 123, 124, 128, 130, 132, 135, 136, 137, 139, 140, 142, 149, 150, 153, 155, 156, 157, 158, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 196, 199, 201, 202, 203, 204, 206, 207, 210, 212, 214, 215, 218, 219, 220, 221, 223, 224, 225, 228, 229, 231, 232, 233, 235, 237, 238, 241, 243, 245, 247, 250, 252, 254, 255, 257, 259, 260, 263, 266, 267, 271, 277, 279, 281, 283, 285, 286, 287, 289, 290, 293, 295, 301, 303, 304, 305, 307, 308, 309, 310, 313, 314, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 365, 370, 371, 372, 378, 379, 381, 386, 387, 388, 389, 390, 391, 393, 404, 410, 411, 413, 416, 419, 422, 432, 438, 444, 445, 454, 455, 459], "return_std": 413, "reus": [184, 438], "reuse_last": 182, "reveal": [411, 417, 433], "review": 439, "revis": [438, 441], "reward": [8, 419], "rework": 438, "rewrit": 438, "rff": 112, "rffkernel": 438, "rh": [45, 47, 48, 401, 402, 417, 445], "right": [45, 173, 354, 361, 394, 396, 405, 419, 436, 437, 439, 441, 445, 447, 449, 450, 456], "right_df": 354, "rihana": 440, "rim": 440, "risk": [8, 437, 441, 444], "roam": 437, "robust": [436, 438, 457], "robustli": 287, "role": [438, 439, 444, 448, 449, 454, 456, 458], "room": [411, 444], "root": [395, 436, 439, 445], "round": [356, 401, 413, 414, 445], "roundtrip": [438, 453], "rout": 453, "routin": 44, "row": [13, 16, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 124, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 243, 309, 313, 314, 346, 349, 353, 354, 356, 372, 394, 396, 404, 405, 406, 407, 416, 417, 421, 428, 438, 444, 447, 452, 454], "rowei": 457, "roya": 440, "royalti": 441, "rq": 113, "rqkernel": 438, "ruff": [438, 439], "rule": [409, 438], "run": [241, 245, 394, 395, 396, 410, 411, 432, 433, 436, 437, 438, 439, 444, 447, 450, 453, 454, 459], "run_full_initial_data": 394, "run_impute_mod": 396, "runner": [404, 406, 407], "runtim": [368, 437], "runtimeerror": [182, 409], "rv": 419, "s3": 438, "s41586": [275, 352], "safe": [438, 439, 444], "safeti": 329, "sai": 445, "said": 439, "sake": 416, "same": [55, 132, 184, 218, 224, 243, 250, 252, 254, 259, 263, 277, 279, 281, 283, 324, 399, 410, 413, 414, 416, 419, 422, 428, 437, 438, 445, 446, 447, 453, 454, 455, 457], "sampl": [10, 15, 21, 44, 194, 206, 207, 210, 310, 376, 377, 378, 379, 394, 399, 404, 405, 406, 407, 419, 421, 422, 424, 428, 433, 436, 438, 440, 448, 458], "sample_from_full_factori": [210, 438], "sample_inactive_paramet": 44, "sample_uniform": [210, 422, 424, 438, 454], "sampler": [399, 404, 405, 406, 407, 421, 428], "samples_full_factori": [210, 438], "samples_random": [210, 438], "sampling_algorithm": [377, 442], "sampling_fract": [15, 442], "sampling_method": [15, 442], "sampling_n_point": [15, 442], "sampling_percentag": [194, 451], "satisfi": [40, 41, 42, 218, 401, 402, 416], "save": [394, 396, 413, 438, 454], "savefig": [394, 396, 422], "sca": 422, "scalar": [12, 123, 421, 436, 438, 444, 449, 453], "scale": [117, 169, 170, 171, 172, 173, 210, 212, 218, 381, 421, 422, 432, 438, 442, 449], "scalekernel": 438, "scaler": 438, "scaling_bound": [210, 212, 218], "scatter": [95, 97], "scenario": [247, 393, 394, 395, 396, 410, 416, 432, 433, 443, 445, 449, 457, 458, 459], "scene": [449, 454, 455], "schema": 444, "schembl15068049": [394, 395, 396], "scheme": [438, 445], "scienc": [436, 440], "scientif": [438, 457], "scikit": [147, 436, 438, 440, 450], "scipi": [372, 411, 419, 438], "scm": 438, "scope": 393, "screen": [324, 457], "script": [338, 437, 438, 446, 459], "seaborn": [393, 394, 395, 396, 410, 432, 433], "seamlessli": 453, "search": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 38, 52, 55, 68, 73, 83, 87, 135, 136, 137, 139, 140, 142, 149, 150, 153, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 222, 241, 245, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 309, 354, 355, 393, 396, 398, 400, 403, 404, 405, 406, 407, 409, 410, 411, 419, 421, 423, 428, 433, 438, 440, 443, 444, 445, 446, 447, 448, 451, 453, 454, 458], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 95, 135, 136, 137, 139, 140, 142, 149, 150, 153, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 213, 217, 218, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 393, 395, 398, 409, 410, 411, 413, 414, 416, 417, 419, 422, 424, 428, 429, 430, 432, 434, 436, 438, 444, 445, 446, 447, 448, 450, 452, 453, 454, 459], "searchspace1": 424, "searchspace2": 424, "searchspace3": 424, "searchspace_ful": 447, "searchspace_json": 453, "searchspace_reduc": 447, "searchspacetyp": [186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 212, 399, 404, 405, 406, 407, 410, 411, 421, 428, 452], "secfp": 147, "secfpfingerprint": 147, "second": [353, 370, 372, 413, 414, 421, 422, 430, 432, 445, 446, 448], "secondari": [436, 446], "section": [436, 438, 439, 441, 453], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 163, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 217, 218, 241, 245, 247, 250, 252, 254, 255, 257, 259, 263, 266, 273, 275, 277, 279, 281, 283, 293, 295, 301, 306, 327, 333, 347, 353, 358, 361, 381, 394, 395, 396, 401, 402, 409, 410, 414, 417, 426, 435, 436, 439, 444, 446, 447, 448, 449, 450, 453, 454, 458], "seed": [241, 245, 374, 375, 410, 411, 419, 422, 436, 438, 459], "seek": [421, 449], "seem": [368, 430, 437], "seen": 442, "select": [6, 40, 41, 42, 70, 74, 80, 179, 181, 182, 183, 184, 187, 194, 204, 206, 250, 252, 254, 259, 263, 277, 279, 281, 283, 304, 353, 378, 399, 405, 406, 416, 417, 419, 426, 436, 438, 442, 444, 445, 448, 450, 451, 453, 455], "select_recommend": [179, 181, 182, 183, 184, 438], "selectivity_mean": 444, "selectivity_mod": 444, "selectivity_q_0": 444, "selectivity_std": 444, "self": [329, 342, 386, 387, 388, 389, 409, 410, 411, 419, 439], "sell": 441, "semant": [438, 453], "sens": [57, 128, 329, 333, 353, 445, 450, 455], "sent": 441, "sentinel": [317, 318], "separ": [245, 247, 287, 327, 381, 382, 411, 435, 438, 439, 441, 453], "sequenc": [31, 41, 45, 115, 116, 123, 128, 139, 140, 142, 153, 161, 182, 183, 210, 212, 218, 219, 220, 223, 250, 252, 254, 257, 259, 263, 277, 279, 281, 283, 309, 313, 314, 329, 330, 339, 342, 348, 354, 355, 358, 372, 444, 449, 451], "sequenti": [181, 182, 183, 184, 194, 399, 404, 405, 406, 407, 421, 428, 438, 451], "sequential_continu": [194, 438, 451], "sequential_greedy_x": 438, "sequentialgreedyrecommend": 438, "sequentialmetarecommend": [183, 451], "sequentialstrategi": 438, "seri": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 40, 41, 42, 52, 136, 139, 140, 142, 150, 153, 192, 194, 293, 295, 301, 404, 416, 438, 445, 447], "serial": [183, 218, 235, 310, 413, 434, 437, 438, 439, 445, 451, 458], "serializ": [436, 445, 451], "serialize_datafram": 453, "serialized_df": 237, "serializetostr": 413, "serialmixin": [24, 31, 35, 40, 104, 120, 137, 165, 179, 210, 212, 218, 254, 257, 266, 293, 295, 301, 361, 438], "serv": [247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 354, 432, 433, 444, 445, 450], "servic": 441, "session": [259, 446, 453], "set": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 42, 44, 55, 57, 64, 65, 95, 99, 153, 176, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 241, 245, 270, 308, 345, 352, 353, 374, 375, 394, 395, 396, 397, 399, 404, 406, 409, 414, 415, 416, 417, 419, 421, 426, 435, 436, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459], "set_box_aspect": 411, "set_dash": 410, "set_random_se": [411, 419, 422, 459], "set_size_inch": [394, 396], "set_x_pend": 26, "set_xlabel": 411, "set_xtick": 411, "set_xticklabel": 411, "set_ylabel": 411, "set_ylim": 411, "set_zlabel": 411, "setpoint": 150, "setup": [241, 410, 445, 454, 459], "setuptool": 438, "sever": [63, 156, 177, 393, 395, 399, 410, 413, 419, 421, 424, 433, 436, 438, 439, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 459], "sh": 448, "shall": [182, 347, 441, 449], "shap": [95, 436, 438, 440, 455, 458], "shap_valu": 455, "shape": [21, 210, 217, 299, 303, 305, 378, 422, 452, 459], "shapinsight": [93, 94, 96, 97, 438, 448], "shaplei": 95, "share": [250, 252, 254, 259, 263, 277, 279, 281, 283, 438, 441, 457], "shield": [275, 352, 395, 436, 450], "shift": 432, "shifted_hartmann": 432, "ship": [382, 446, 453], "shm": 437, "short": 439, "shortcut": [218, 452, 453], "shorten": [438, 439], "shot": 457, "should": [31, 44, 53, 95, 153, 184, 233, 245, 298, 313, 314, 345, 347, 351, 352, 356, 360, 361, 362, 370, 404, 406, 410, 413, 416, 417, 426, 430, 436, 438, 439, 443, 444, 445, 452, 454, 455, 457, 459], "show": [95, 394, 395, 396, 398, 399, 404, 405, 406, 413, 414, 416, 419, 426, 428, 429, 430, 432, 433, 445, 448], "showcas": 451, "shown": [410, 419, 433, 438, 444], "shrink": 411, "shutdown": 437, "side": [45, 155, 304, 438], "sigma": [170, 171, 172, 173, 303, 421, 440], "signal": [67, 449], "signatur": [89, 290, 327, 329, 411, 438, 439, 445, 453], "significantli": [218, 419, 432, 433, 445], "silenc": 439, "silent": [438, 445], "similar": [183, 437, 445, 446, 448, 450, 451, 452, 453, 457, 459], "similarli": [422, 450], "simpl": [20, 21, 319, 395, 409, 410, 417, 436, 438, 444, 451, 454, 456, 457], "simpler": [439, 453], "simplest": [452, 455], "simplex": [218, 458], "simplex_paramet": [218, 416, 452], "simpli": [333, 409, 410, 439, 445, 447, 449, 450, 451, 452, 453, 456, 457], "simplic": 329, "simplifi": 439, "simul": [84, 347, 406, 411, 436, 438, 457, 458], "simulate_experi": [245, 247, 454], "simulate_scenario": [247, 393, 394, 395, 396, 410, 432, 433, 454], "simulate_transfer_learn": [432, 454], "simulationresult": 419, "simultan": [449, 455], "sinc": [57, 155, 212, 258, 329, 394, 401, 402, 414, 425, 428, 429, 430, 432, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 453, 454, 455, 457], "singer": 457, "singl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 40, 53, 95, 130, 155, 210, 212, 218, 241, 250, 252, 254, 257, 259, 263, 277, 279, 281, 283, 293, 295, 301, 343, 361, 369, 378, 384, 394, 395, 396, 405, 410, 416, 421, 432, 433, 436, 438, 444, 445, 446, 447, 448, 449, 450, 452, 455, 457, 458], "single_lin": 343, "single_y0": 422, "single_y1": 422, "singledispatch": 363, "singletargetobject": [31, 293, 295, 301, 394, 395, 396, 398, 399, 404, 405, 406, 407, 410, 413, 414, 428, 429, 430, 436, 438, 455, 458], "site": 437, "situat": [155, 404, 406, 416, 437, 439, 443, 445, 449, 450, 453, 454, 457], "six": [416, 417], "size": [21, 102, 103, 104, 107, 109, 111, 112, 113, 182, 184, 212, 217, 218, 310, 365, 411, 413, 419, 425, 426, 432, 433, 444, 453, 454, 457, 459], "sk": 413, "skeleton": 438, "skfp": 147, "skicit": 438, "skin": 454, "skip": [215, 221, 438, 444], "skl2onnx": 413, "sklearn": [204, 368, 413, 437], "sklearnclusteringrecommend": [201, 202, 203, 438, 443], "slightli": [239, 395, 416, 454], "slot": [415, 419, 434, 438, 445], "slot1_amount": 416, "slot1_label": 416, "slot2_amount": 416, "slot2_label": 416, "slot3_amount": 416, "slot3_label": 416, "slow": [404, 406, 407, 452], "slowest": 438, "small": [311, 315, 401, 416, 432, 433, 438, 442, 450], "smaller": [31, 419, 444, 457], "smallest": [210, 354, 452], "smart": 436, "smartli": 416, "smile": [153, 336, 338, 339, 436, 450], "smoke": 438, "smoke_test": [393, 394, 395, 396, 402, 404, 405, 407, 410, 411, 419, 422, 432, 433], "smooth": [107, 109, 173], "smoothedboxprior": 438, "smoother": 107, "sn": [393, 394, 395, 396, 410, 432, 433], "snippet": 446, "so": [31, 241, 258, 353, 396, 410, 416, 419, 425, 426, 436, 437, 444, 445, 446, 447, 449, 450, 451, 453, 456], "softwar": [436, 441], "sola": 440, "sole": 441, "solut": [75, 444, 445, 449, 452, 453, 457], "solv": [258, 405, 406, 416, 419], "solv_rdkit2ddesc": 406, "solvent": [394, 395, 396, 398, 399, 404, 405, 406, 407, 410, 414, 416, 417, 429, 430, 436, 445, 450], "solvent1": [416, 417], "solvent2": [416, 417], "solvent3": 416, "solvent4": 416, "solvent5": 416, "solvent8": 416, "solvent9": 416, "solvent_1": 445, "solvent_2": 445, "solvent_3": 445, "solvent_data": 410, "solvent_encoding1": 445, "solvent_encoding2": 445, "solvent_mordred_enc": 445, "solvent_rdkit2dd": [404, 407], "solvent_rdkit_enc": 445, "solvent_smil": 410, "solver": 454, "some": [53, 368, 394, 395, 396, 399, 404, 405, 406, 407, 410, 411, 413, 414, 416, 417, 422, 424, 425, 426, 428, 433, 443, 444, 445, 446, 450, 451, 453, 454, 455, 459], "someth": [87, 430], "sometim": [445, 454], "somewhat": 446, "somewher": 444, "soon": [436, 444, 451], "sophist": [438, 447, 453], "sort": 158, "sourabh": 440, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 121, 123, 124, 126, 128, 130, 132, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 149, 150, 153, 155, 156, 157, 158, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 196, 199, 201, 202, 203, 204, 206, 207, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 228, 229, 231, 232, 233, 235, 237, 238, 241, 243, 245, 247, 250, 252, 254, 255, 257, 259, 260, 263, 265, 266, 267, 270, 271, 273, 275, 277, 279, 281, 283, 285, 286, 287, 289, 290, 293, 295, 298, 299, 301, 303, 304, 305, 307, 308, 309, 310, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 370, 371, 372, 374, 375, 377, 378, 379, 381, 389, 390, 391, 436, 437, 438, 439, 441], "space": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 31, 38, 45, 52, 55, 68, 73, 77, 83, 87, 135, 136, 137, 139, 140, 142, 149, 150, 153, 176, 185, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 221, 222, 241, 245, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 309, 354, 378, 393, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 419, 421, 422, 423, 425, 428, 433, 434, 438, 440, 443, 445, 446, 447, 448, 450, 451, 453, 454, 458], "span": [61, 135, 136, 137, 139, 140, 142, 149, 150, 153, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 309, 409, 419, 424, 448], "speak": 457, "spec": [215, 221, 232], "special": [184, 436, 437, 441, 442, 447, 457, 459], "specif": [100, 156, 163, 204, 212, 215, 228, 245, 287, 321, 390, 409, 410, 425, 436, 439, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 457], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 53, 88, 99, 142, 153, 155, 156, 157, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 231, 232, 241, 243, 245, 255, 303, 304, 305, 313, 328, 337, 345, 348, 354, 355, 378, 379, 395, 399, 401, 413, 414, 419, 421, 432, 436, 437, 438, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457], "speed": [218, 404, 406, 407, 432, 433, 446, 452], "speed_fast": 452, "speed_norm": 452, "speed_slow": 452, "speedup": [438, 457], "spell": 439, "spellcheck": 438, "sphinx": [438, 439], "split": [186, 443], "sporad": 438, "spread": 456, "sqrt": 445, "squar": [419, 422, 445], "squash": 439, "stabil": [438, 446], "stabl": [100, 163, 306], "stage": [444, 445, 453], "stand": 438, "standard": [6, 18, 287, 413, 438, 444, 450], "star": 416, "start": [241, 393, 409, 410, 411, 417, 419, 422, 437, 438, 443, 450, 451, 453, 454, 457], "startup": 438, "stat": [31, 250, 252, 254, 257, 259, 263, 277, 279, 281, 283, 307, 411, 417, 419, 444], "state": [179, 181, 182, 183, 184, 410, 416, 435, 438, 441, 444, 447], "stateless": [419, 435, 438, 447], "statement": [356, 425, 436, 441], "static": [13, 16, 212, 218, 263, 436, 439, 457], "statist": [31, 250, 252, 253, 254, 259, 263, 277, 279, 281, 283, 310, 433, 436, 438, 446, 458], "statu": 444, "std": [31, 250, 252, 253, 254, 257, 259, 263, 277, 279, 281, 283], "std_threshold": 287, "stem": [437, 457], "step": [215, 221, 241, 416, 419, 435, 436, 439, 444, 449, 453, 455], "sterl": 440, "steven": 395, "still": [156, 345, 410, 419, 443, 445, 446, 448, 450, 455, 457, 459], "stop": [408, 434, 438, 439], "stop_on_pi": 410, "stoppag": 441, "storag": [444, 446, 453], "store": [26, 137, 287, 293, 411, 416, 419, 436, 438, 444, 459], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 87, 95, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 124, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 156, 157, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 192, 194, 201, 202, 203, 204, 210, 212, 217, 218, 231, 235, 245, 247, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 296, 301, 303, 304, 305, 307, 310, 313, 314, 321, 327, 328, 334, 336, 338, 339, 341, 343, 345, 348, 351, 352, 356, 361, 365, 371, 414, 419, 429, 430, 432, 433], "straightforward": [444, 456, 457], "strategi": [15, 194, 212, 239, 393, 419, 438], "stream": [325, 438, 446], "streamingsequentialmetarecommend": [182, 451], "streamingsequentialstrategi": 438, "streamlin": 439, "streamlit": [436, 438], "streibel": 440, "strict": 327, "strictli": [414, 429, 430], "stride": 401, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 152, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 210, 212, 218, 235, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 334, 338, 339, 341, 342, 343, 351, 361, 413, 428, 438, 444, 445, 450, 456, 458], "strip": [241, 396], "strong": 438, "strongli": 444, "strtobool": [438, 446], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 49, 231, 436, 437, 438, 439, 440, 444, 450, 453], "studi": [177, 436, 448, 451, 458], "style": [432, 438, 439], "sub": [204, 438, 448, 453], "subclass": [88, 231, 321, 323, 333, 399, 438, 439, 451, 453], "subfold": 446, "subgraph": 450, "subgroup": 417, "subject": 441, "sublicens": 441, "submiss": [438, 441], "submit": [26, 307, 309, 436, 439, 441], "subpackag": [438, 439, 454], "subplot": 422, "subselectioncondit": [405, 406, 438, 447, 458], "subsequ": [184, 212, 218, 245, 338, 435, 441, 444, 453, 455], "subset": [31, 120, 123, 128, 130, 153, 212, 324, 355, 378, 444, 445, 447, 450], "subspac": [26, 61, 186, 194, 209, 210, 212, 214, 216, 218, 401, 404, 405, 406, 407, 421, 424, 426, 428, 438, 445, 451, 453, 458, 459], "subspace_continu": 61, "subspace_json": 453, "subspacecontinu": [31, 61, 135, 149, 212, 214, 424, 438, 452], "subspacediscret": [31, 136, 139, 140, 142, 150, 153, 212, 214, 217, 404, 405, 406, 407, 416, 421, 428, 438, 452, 453, 459], "substanc": [147, 153, 337, 395, 398, 404, 406, 407, 417, 438, 445, 448, 450, 457], "substance_12": 445, "substance_3": 445, "substance_43": 445, "substance_data": 438, "substance_encod": 395, "substanceencod": [153, 337, 339, 404, 405, 406, 407, 438, 450], "substanceparamet": [394, 395, 396, 398, 399, 404, 405, 406, 407, 410, 414, 416, 429, 430, 436, 438, 445, 446, 448, 452, 458], "substanti": [153, 459], "substrat": 457, "subtyp": 453, "success": [295, 378, 419, 453], "success_valu": 295, "suffic": 439, "suffici": [410, 452, 453], "suggest": [448, 454], "suit": 439, "suitabl": [204, 218, 241, 334, 439, 442, 444, 450, 454, 455, 457], "sum": [59, 115, 218, 393, 403, 404, 405, 406, 410, 416, 417, 419, 422, 434, 445, 449, 452], "sum_": [445, 449], "sum_constraint": 416, "sum_constraint_1": 407, "sum_constraint_2": 407, "sum_toler": 416, "summar": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 135, 136, 137, 139, 140, 142, 149, 150, 153, 293, 295, 301], "summari": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 135, 136, 137, 139, 140, 142, 149, 150, 153, 293, 295, 301, 438, 439], "superior": 442, "supersed": 441, "support": [10, 31, 93, 94, 95, 96, 97, 183, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 368, 399, 404, 405, 406, 407, 410, 411, 413, 416, 421, 428, 436, 438, 439, 440, 441, 445, 448, 450, 451, 452, 454, 455], "supports_batch": 438, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 250, 252, 254, 259, 263, 277, 279, 281, 283, 438, 455], "supports_pending_experi": 438, "supports_transfer_learn": [250, 252, 254, 259, 263, 277, 279, 281, 283, 455], "suppos": [309, 445], "sure": [416, 424, 436, 439], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 74, 76, 95, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 192, 194, 201, 202, 203, 204, 210, 212, 218, 250, 252, 255, 257, 259, 263, 265, 266, 270, 273, 275, 277, 279, 281, 283, 404, 405, 406, 407, 411, 419, 421, 428, 434, 436, 438, 440, 444, 445, 448, 450, 451, 457, 458], "surrogate_model": [192, 194, 399, 411, 413, 414, 419, 429, 430, 438], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 95, 192, 194, 254, 257, 438], "svg": 422, "sw": 405, "swiss": 440, "switch": [53, 180, 183, 184, 287, 399, 404, 405, 406, 407, 419, 421, 428, 436, 438, 445, 451], "switch1": 405, "switch2": 405, "switch2_left": 405, "switch2_right": 405, "switch_1": 445, "switch_2": 445, "switch_aft": [184, 429, 430, 451], "switzerland": 440, "sy": 437, "symmetri": 445, "syntax": [436, 438], "synthet": [401, 402, 411, 422, 432, 433], "system": [395, 419, 436, 437, 441, 446, 454, 457], "t": [285, 286, 326, 334, 394, 395, 396, 398, 399, 406, 411, 422, 432, 433, 435, 447, 450, 453, 454], "t1": [453, 454], "t2": 453, "t3": 453, "t_1": 449, "t_2": 449, "t_3": 449, "t_i": 449, "tab": 422, "tabl": [356, 438, 444, 445, 448], "tabular": 454, "tag": [436, 438, 453], "tailor": 444, "take": [8, 49, 107, 136, 150, 155, 156, 250, 252, 254, 259, 263, 273, 277, 279, 281, 283, 296, 409, 416, 438, 443, 444, 445, 449, 450, 451, 457], "taken": [182, 410, 438, 444, 447, 449], "tantamount": 442, "target": [12, 13, 16, 31, 77, 120, 121, 123, 127, 128, 129, 130, 132, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 239, 241, 242, 243, 250, 252, 254, 257, 259, 263, 277, 279, 281, 283, 287, 295, 298, 299, 301, 329, 345, 348, 349, 355, 358, 370, 371, 373, 391, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 410, 411, 413, 414, 419, 425, 426, 428, 429, 430, 432, 433, 434, 436, 438, 443, 444, 446, 448, 453, 454, 455, 458], "target_1": [405, 406, 407, 421, 449, 456], "target_2": [421, 449, 456], "target_3": [421, 449], "target_3a": 456, "target_3b": 456, "target_a": 455, "target_b": 455, "target_cumbest": [393, 432, 433], "target_max": 444, "target_transform": 421, "targetmod": [301, 453, 456], "targetnam": 241, "targettransform": [301, 438, 456], "task": [140, 212, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 293, 295, 301, 419, 438, 444, 451, 453, 454, 457], "task_idx": [212, 438], "task_param": [432, 433, 454], "task_paramet": 453, "task_parameter_json": 453, "task_parameter_reconstruct": 453, "taskparamet": [225, 432, 433, 438, 447, 453, 454, 458], "tb": 459, "technic": [218, 443, 454, 457], "techniqu": [204, 451], "technologi": 440, "telemetri": [438, 440, 458], "tell": 308, "temp": [404, 406, 440], "temp_c": [394, 395, 396, 410], "temperatur": [394, 396, 398, 399, 404, 406, 409, 413, 414, 428, 445, 450, 452, 457], "temperature_resolut": 404, "temperature_valu": 410, "temporari": [195, 212, 375, 410, 438, 446, 453], "temporarili": [438, 459], "temporary_se": 459, "tempt": 457, "tenac": 438, "tend": 411, "tensor": [26, 45, 250, 285, 286, 348, 357, 361, 381, 383, 432, 438], "term": [110, 239, 410, 419, 439, 441, 444, 448, 452, 453, 454, 457], "termin": [410, 411, 437, 441], "terminologi": 458, "tert": [394, 395, 396, 398, 399], "test": [218, 241, 259, 345, 419, 432, 433, 436, 437, 438, 439, 444, 448, 454, 459], "test_funct": [401, 402, 411, 425, 426, 432, 433], "test_scenario": [394, 396], "testabl": [84, 241], "testfunct": [401, 402, 425, 426], "testfunctionclass": [401, 402, 425, 426], "text": [34, 413, 422, 441, 445, 446, 449], "th": [314, 445], "than": [31, 65, 83, 150, 182, 183, 184, 194, 210, 212, 225, 314, 333, 343, 349, 379, 395, 406, 410, 417, 442, 445, 446, 448, 450, 453, 455], "thei": [156, 177, 187, 304, 351, 355, 399, 407, 410, 416, 419, 424, 438, 439, 443, 444, 445, 448, 450, 451, 452, 453, 456, 457, 459], "them": [38, 273, 346, 399, 436, 437, 438, 439, 443, 445, 446, 447, 448, 450, 451, 453, 457], "theme": 438, "theori": 441, "therebi": 218, "therefor": [44, 184, 250, 252, 254, 259, 263, 277, 279, 281, 283, 399, 437, 444, 453, 455, 457], "therein": 438, "thereof": 441, "thf": 445, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 135, 136, 137, 139, 140, 142, 149, 150, 153, 155, 156, 179, 181, 182, 183, 184, 186, 194, 201, 202, 203, 204, 210, 212, 218, 239, 243, 245, 247, 250, 252, 254, 255, 257, 258, 259, 263, 273, 277, 279, 281, 283, 287, 310, 313, 329, 330, 333, 338, 345, 347, 349, 350, 352, 354, 356, 393, 409, 410, 411, 413, 414, 416, 417, 419, 422, 424, 428, 429, 430, 432, 433, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "think": [419, 450], "third": [421, 441, 454], "thompson": [21, 440], "thomson": 21, "those": [63, 156, 184, 186, 239, 378, 399, 437, 441, 445, 454], "though": 457, "three": [395, 416, 417, 421, 422, 436, 444, 445, 448, 449, 451, 452, 457], "threshold": [42, 44, 142, 153, 155, 157, 184, 194, 287, 352, 401, 406, 407, 410, 416, 438, 445, 450], "thresholdcondit": [58, 59, 401, 406, 407, 416, 458], "through": [31, 212, 303, 313, 345, 355, 414, 416, 419, 421, 436, 438, 439, 441, 445, 449, 453, 454, 458], "throughout": 184, "throw": [338, 445], "thrown": [243, 396, 410, 429, 437, 449], "thu": [194, 329, 355, 394, 395, 401, 402, 404, 405, 406, 407, 413, 414, 416, 419, 421, 425, 426, 428, 437, 439, 444, 446, 447, 450, 451, 453, 454, 457, 459], "tick": 411, "tight_layout": 422, "time": [10, 194, 310, 379, 402, 409, 416, 419, 436, 438, 443, 444, 445, 447, 450, 453, 454, 455, 459], "timeout": [438, 446], "timer": 409, "titl": [422, 441], "tl": 432, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 438], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 210, 212, 218, 235, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 361], "to_factori": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117], "to_fram": 393, "to_gpytorch": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 165, 167, 168, 169, 170, 171, 172, 173, 438], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 210, 212, 218, 235, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 293, 295, 301, 361, 413, 414, 428, 444, 453], "to_keep": 353, "to_ndarrai": 361, "to_numpi": [411, 422], "to_object": [293, 295, 301, 393, 401, 402, 411, 419, 422, 425, 426, 432, 433, 449, 454], "to_polar": [40, 41, 42], "to_searchspac": [135, 136, 137, 139, 140, 142, 149, 150, 153, 210, 218, 419, 424, 438, 447], "to_str": 438, "to_subspac": [135, 136, 139, 140, 142, 149, 150, 153, 438], "to_tensor": [361, 413, 438], "to_tupl": [361, 422], "togeth": [38, 69, 314, 399, 419, 426, 436, 438, 445], "toggl": 31, "toggle_discrete_candid": [31, 438, 447], "toler": [31, 42, 150, 218, 390, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 410, 413, 414, 416, 421, 425, 426, 428, 429, 430, 436, 438, 445], "tolist": 401, "toluen": 450, "toml": 438, "too": [401, 454, 457], "tool": [335, 436, 438, 445, 453], "toolbox": 436, "top": [438, 439], "topic": 444, "topolog": 450, "topologicaltors": 147, "topologicaltorsionfingerprint": 147, "torch": [348, 361, 413, 432, 438], "toronto": 440, "tort": 441, "total": [183, 184, 378, 416, 417, 419, 452], "total_bas": 417, "total_phase_ag": 417, "toward": [167, 345, 445], "towel": 435, "tox": [438, 439], "tracebackexcept": 437, "track": [176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 218, 410, 441, 447], "trade": [8, 441, 449], "trademark": 441, "tradit": [395, 415, 416, 434, 436, 438], "train": [79, 95, 176, 182, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 247, 250, 252, 254, 255, 257, 258, 259, 263, 277, 279, 281, 283, 287, 412, 422, 432, 433, 438, 454], "train_i": 413, "train_x": 413, "training_funct": 433, "trajectori": [239, 393, 410, 419, 444, 454], "transfer": [246, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 399, 404, 405, 406, 407, 421, 428, 432, 434, 436, 438, 441, 450, 455, 458], "transform": [31, 79, 120, 123, 128, 130, 136, 137, 139, 140, 142, 150, 153, 210, 212, 218, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 293, 295, 299, 301, 339, 348, 355, 358, 361, 362, 381, 404, 405, 406, 407, 428, 438, 441, 446, 450, 455, 456], "transform_rep_exp2comp": 438, "transit": 438, "translat": [38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 438, 441, 447, 450], "transmiss": 453, "transmit": 310, "travers": 438, "treasur": 458, "treat": [153, 157, 250, 252, 254, 259, 263, 277, 279, 281, 283, 395, 436, 445, 450, 456, 459], "tree": 438, "tremend": 395, "trend": 457, "tri": 452, "triangl": 305, "triangular": [299, 305, 421, 456], "tricki": 448, "tricyclohexylphosphin": [394, 395, 396], "trigger": [182, 313, 410, 414, 419, 438, 439, 443, 449, 453], "trivial": [266, 279, 449, 450, 455], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 95, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 157, 194, 212, 263, 295, 304, 322, 323, 327, 333, 334, 343, 353, 390, 395, 399, 401, 402, 404, 405, 406, 407, 411, 413, 414, 416, 419, 421, 425, 426, 428, 429, 430, 432, 433, 438, 444, 445, 446, 447, 448, 450, 453], "truncat": [436, 446], "trust": [413, 446], "truth": 334, "truthi": 446, "try": [87, 345, 394, 395, 396, 410, 413, 414, 430, 437, 438, 459], "tune": 436, "tupl": [13, 16, 31, 41, 45, 102, 103, 104, 107, 109, 111, 112, 113, 115, 116, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 158, 210, 212, 217, 218, 286, 313, 320, 327, 330, 342, 345, 357, 361, 365, 381], "turn": [44, 210, 218, 250, 252, 254, 259, 263, 277, 279, 281, 283, 365, 424, 436, 437, 438, 445, 446], "turnaround": 454, "twice": [447, 449], "two": [13, 16, 34, 55, 64, 65, 124, 184, 194, 239, 314, 319, 348, 370, 378, 393, 394, 396, 409, 416, 419, 421, 422, 426, 432, 433, 435, 436, 438, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "twofold": 419, "twophasemetarecommend": [394, 396, 399, 404, 405, 406, 407, 410, 411, 413, 414, 419, 421, 426, 428, 429, 430, 436, 438, 451], "twophasestrategi": 438, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 121, 123, 124, 128, 130, 132, 135, 136, 137, 139, 140, 142, 149, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 196, 199, 201, 202, 203, 204, 206, 207, 210, 212, 213, 214, 215, 218, 219, 220, 221, 223, 224, 225, 228, 229, 231, 232, 233, 235, 237, 238, 241, 243, 245, 247, 250, 252, 253, 254, 255, 257, 259, 260, 263, 266, 267, 271, 277, 279, 281, 283, 285, 286, 287, 289, 290, 293, 295, 296, 301, 303, 304, 305, 307, 308, 309, 310, 313, 314, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 361, 362, 363, 365, 367, 368, 370, 371, 372, 378, 379, 381, 383, 386, 387, 388, 389, 390, 391, 395, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 419, 421, 428, 429, 430, 436, 438, 439, 441, 442, 445, 448, 449, 450, 451, 452, 455, 457, 458], "typealia": 296, "typeerror": [31, 95, 99, 241, 250, 252, 254, 259, 263, 277, 279, 281, 283, 329, 345, 346, 379, 390, 391, 410, 411], "typeguard": 326, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 156, 165, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182, 183, 184, 210, 212, 218, 223, 231, 232, 235, 250, 252, 254, 257, 259, 263, 266, 277, 279, 281, 283, 286, 293, 295, 301, 323, 324, 325, 326, 342, 348, 355, 361], "typic": [15, 329, 343, 395, 436, 443, 444, 448, 450, 453, 459], "typing_extens": 439, "typo": [438, 439], "u": [21, 393, 394, 395, 396, 409, 411, 416, 417, 419, 424, 433, 436, 442, 445, 449], "ucb": [8, 399, 438, 442, 444, 453], "ultim": 439, "ultra": [429, 430], "un": 438, "unabl": 413, "unavail": 438, "unawar": 443, "unbound": [361, 409], "uncaught": 438, "uncertainti": [8, 15, 399, 458], "unchang": 155, "uncharacter": 457, "uncorrel": [352, 457], "undefin": [250, 447], "under": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 310, 355, 407, 411, 419, 422, 436, 437, 441, 443, 450], "underflow": 85, "underli": [31, 55, 410, 419, 436, 438, 444, 448, 451, 453], "underscor": 438, "understand": [436, 457], "undesir": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 90, 445, 447, 450, 459], "undo": 437, "unequ": 407, "unevenli": 450, "unexpect": 87, "unfinish": 443, "unfortun": 457, "unhandl": 438, "uniform": [210, 250, 346, 347, 438], "uniformli": 378, "uniniti": 333, "uninstal": [86, 436], "unintend": [90, 329, 438, 439], "unintention": 459, "union": [13, 16, 31, 124, 157, 241, 245, 250, 252, 254, 259, 263, 277, 279, 281, 283, 303, 304, 305, 371, 426, 441, 452], "uniqu": [56, 132, 156, 416, 438, 450], "unit": [217, 365], "unknown": [183, 378, 393, 419, 438, 455, 457], "unlabel": 348, "unless": [436, 439, 441, 446, 450, 453], "unlik": [12, 13, 14, 16, 17, 416, 449, 459], "unlock": 458, "unmaintain": 438, "unmatch": 327, "unmatchedattributeerror": 327, "unmeasur": [241, 396], "unnecessari": [438, 444], "unpromis": 410, "unreach": 438, "unrealist": 454, "unrecogn": 345, "unrestrict": 329, "unsaf": 438, "unspecifi": [318, 438, 453], "unspecifiedtyp": 31, "unstructur": [233, 453], "unstructure_bas": 231, "unsupport": [210, 243], "until": [179, 181, 182, 183, 184, 241, 419, 436, 454], "untouch": 346, "untransform": [31, 455], "unusedobjectwarn": [410, 438, 443], "unveil": 433, "unwant": 38, "up": [31, 218, 241, 243, 393, 394, 395, 396, 397, 404, 406, 409, 411, 415, 416, 417, 422, 426, 432, 433, 436, 437, 438, 442, 445, 449, 459], "updat": [31, 395, 398, 438, 439, 443], "upgrad": 438, "upon": [186, 266, 437, 438, 439, 445, 452, 455, 457], "upper": [8, 22, 157, 173, 212, 218, 303, 304, 305, 361, 399, 411, 421, 422, 432, 433, 438, 445, 456, 459], "upper_bound": [404, 405, 406, 407, 428, 452], "upper_threshold": 157, "upperconfidencebound": [22, 442, 453], "upstream": 439, "urg": 448, "url": [446, 457], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 69, 73, 95, 107, 123, 124, 142, 147, 150, 153, 156, 176, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 218, 219, 220, 232, 241, 243, 245, 250, 252, 254, 259, 260, 263, 277, 279, 281, 283, 299, 309, 310, 316, 329, 330, 338, 339, 345, 347, 348, 354, 363, 367, 368, 378, 383, 393, 401, 402, 408, 409, 410, 411, 412, 415, 416, 417, 424, 428, 429, 430, 432, 433, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 456, 457, 458, 459], "usa": 440, "usabl": [333, 437, 438, 450, 453], "usag": [364, 436, 438, 445, 446, 451, 458], "use_comp_rep": [95, 99, 448], "use_torch": [348, 401, 402, 411, 425, 426, 432, 433], "user": [52, 53, 67, 80, 90, 142, 145, 250, 252, 254, 259, 263, 277, 279, 281, 283, 290, 307, 347, 398, 399, 404, 421, 430, 436, 437, 438, 439, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457], "userguid": 306, "usernam": [307, 438, 446], "userwarn": 437, "uses_shap_explain": 95, "usort": 438, "usr": 147, "usrcat": 147, "usrcatfingerprint": 147, "usrfingerprint": 147, "usual": [241, 394, 395, 396, 429, 437, 448, 450], "util": [31, 194, 210, 218, 250, 252, 254, 259, 263, 277, 279, 281, 283, 309, 316, 318, 319, 361, 377, 381, 393, 395, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 419, 421, 422, 425, 426, 432, 433, 436, 438, 442, 443, 444, 448, 449, 450, 451, 453, 454, 455, 457, 458], "uv": 438, "v": 457, "val": [49, 334, 432], "val_from_param1": 57, "val_from_param2": 57, "valid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 155, 156, 212, 215, 218, 221, 259, 349, 354, 404, 427, 429, 434, 437, 438, 439, 444, 445, 454], "validate_compat": 259, "validate_config": [31, 430, 438, 444], "validate_parameter_input": 31, "validate_target_input": 31, "valu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 44, 45, 53, 55, 77, 95, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 123, 124, 128, 130, 136, 139, 140, 142, 144, 145, 147, 150, 153, 155, 156, 157, 160, 161, 162, 184, 192, 194, 201, 202, 203, 204, 210, 212, 218, 219, 220, 239, 241, 243, 245, 250, 252, 254, 259, 263, 277, 279, 281, 283, 295, 296, 298, 303, 304, 305, 310, 313, 317, 318, 324, 327, 334, 341, 345, 346, 347, 349, 351, 354, 355, 356, 361, 363, 370, 371, 372, 386, 387, 388, 389, 390, 391, 394, 395, 396, 398, 399, 401, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 419, 421, 422, 425, 426, 428, 429, 430, 432, 433, 436, 438, 439, 442, 445, 446, 447, 448, 449, 456, 457, 458, 459], "valuabl": [451, 454], "valueerror": [13, 15, 16, 31, 44, 63, 64, 65, 95, 99, 124, 132, 155, 156, 161, 162, 210, 212, 218, 224, 241, 243, 250, 252, 254, 259, 263, 277, 279, 281, 283, 290, 314, 327, 332, 334, 337, 341, 343, 345, 347, 349, 354, 355, 378, 379, 390, 391, 414, 426, 437], "var": [31, 250, 252, 253, 254, 257, 259, 263, 277, 279, 281, 283, 419, 458], "vari": [31, 218, 395, 449], "variabl": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 120, 123, 128, 130, 135, 136, 137, 139, 140, 142, 149, 150, 153, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 250, 252, 254, 259, 263, 277, 279, 281, 283, 293, 308, 310, 369, 384, 425, 436, 438, 439, 445, 450, 451, 453, 455], "varianc": [8, 15, 106, 279, 350, 438, 442], "variance_initial_valu": 106, "variance_prior": 106, "variant": [399, 432, 448, 457], "variat": 422, "varieti": [425, 439, 453, 454], "variou": [361, 416, 423, 438, 443, 448, 451, 454], "varucb": 438, "vector": [34, 413, 438, 440, 449], "vendor": 450, "verbal": 441, "verbos": [414, 438], "veri": [404, 406, 421, 443, 446, 448, 450, 455, 459], "verifi": [333, 401, 404, 405, 406, 407, 416, 417, 424, 426, 428, 436, 439], "versa": [432, 457], "versatil": 451, "version": [212, 307, 368, 404, 406, 407, 416, 419, 424, 432, 433, 436, 437, 438, 439, 441, 453], "vert": 411, "via": [12, 15, 21, 30, 31, 44, 95, 184, 194, 206, 250, 252, 254, 255, 257, 259, 263, 277, 279, 281, 283, 309, 321, 329, 345, 353, 396, 402, 409, 410, 413, 424, 436, 438, 439, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 456, 457, 458], "via_init": 453, "via_json": 453, "viabl": [83, 421], "vice": [432, 457], "view": [210, 218, 411, 452], "view_init": 411, "violat": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 438], "viridi": 411, "virtual": 439, "visibl": 438, "visual": [395, 432, 433, 448, 456], "volum": 457, "vpn": [436, 446], "vsa": 147, "vsafingerprint": 147, "vulner": [438, 439], "w_i": 449, "wa": [15, 70, 71, 74, 76, 77, 86, 90, 156, 184, 250, 252, 254, 259, 263, 277, 279, 281, 283, 341, 345, 349, 379, 395, 437, 438, 439, 441, 446, 448, 450, 453, 457], "wai": [212, 409, 416, 417, 423, 424, 432, 435, 436, 446, 447, 448, 450, 452, 453, 454, 455, 456, 457, 459], "wall": 10, "want": [52, 399, 404, 416, 419, 426, 433, 436, 439, 444, 445, 446, 447, 448, 450, 451, 453, 455, 456], "warn": [66, 330, 404, 406, 407, 410, 425, 426, 438, 439], "warranti": [436, 441], "watch": 409, "water": [404, 405, 406, 407, 416, 445, 450], "waterfal": [95, 97, 438], "we": [26, 239, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 419, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 456, 457, 458, 459], "web": 439, "weber": 440, "weight": [123, 124, 372, 421, 449, 453], "weight_kdalton": 450, "welcom": 439, "well": [307, 399, 410, 415, 435, 439, 444, 445, 448, 450, 454], "were": [31, 81, 345, 396, 433, 437, 438, 443, 445, 446, 450, 452], "what": [156, 182, 212, 239, 345, 381, 393, 413, 421, 430, 435, 439, 442, 444, 448, 450, 457, 458], "whatsnew": 319, "when": [13, 16, 31, 44, 53, 87, 150, 155, 157, 182, 183, 184, 192, 194, 212, 250, 252, 254, 259, 260, 263, 277, 279, 281, 283, 290, 317, 318, 327, 329, 333, 343, 345, 348, 379, 404, 405, 407, 409, 414, 416, 417, 419, 421, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "whenev": [26, 182, 345, 453], "where": [13, 16, 21, 26, 34, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 176, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 239, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 313, 345, 378, 394, 395, 396, 399, 404, 406, 416, 419, 436, 437, 438, 439, 441, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457], "wherea": 453, "wherev": [441, 443], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 99, 135, 136, 137, 139, 140, 142, 149, 150, 153, 194, 210, 218, 250, 252, 254, 259, 263, 277, 279, 281, 283, 308, 347, 361, 416, 438, 441, 444, 446, 447, 456], "which": [13, 15, 16, 31, 40, 41, 42, 44, 90, 95, 120, 123, 128, 130, 156, 157, 176, 177, 179, 181, 182, 183, 184, 186, 189, 192, 194, 199, 201, 202, 203, 204, 206, 207, 212, 218, 245, 247, 250, 252, 254, 259, 263, 277, 279, 281, 283, 287, 309, 310, 329, 333, 345, 347, 352, 354, 356, 370, 371, 381, 393, 395, 399, 402, 409, 410, 416, 417, 419, 424, 425, 426, 430, 432, 433, 436, 437, 438, 439, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459], "while": [212, 215, 221, 410, 419, 421, 433, 437, 438, 441, 442, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457], "whilst": 345, "whim": 147, "whimfingerprint": 147, "whole": 441, "whom": 441, "whose": [124, 155, 156, 212, 243, 324, 327, 348, 393, 409, 416, 443, 454], "wide": 454, "wider": 456, "width": 356, "wieczorek": 440, "william": 457, "willing": 444, "win": [250, 419], "win_rat": 419, "window": [438, 446], "winerror": 437, "wise": 372, "wish": 453, "within": [31, 135, 136, 137, 139, 140, 142, 149, 150, 153, 155, 390, 424, 438, 441, 445, 446, 450, 455, 457, 458, 459], "without": [183, 432, 433, 436, 438, 441, 443, 444, 445, 446, 450, 454, 457, 459], "won": 450, "work": [26, 284, 313, 348, 404, 406, 407, 410, 421, 428, 430, 436, 438, 439, 440, 441, 445, 446, 451, 453, 454], "workaround": [437, 438], "workflow": [413, 436, 444, 453, 458], "world": [436, 444], "worldwid": 441, "worst": [13, 16, 241, 243, 245, 396], "would": [56, 85, 155, 156, 239, 241, 247, 258, 409, 416, 419, 436, 439, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 459], "wrap": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 263, 267, 285, 286, 329, 436, 438, 449], "wrapper": [1, 25, 245, 247, 259, 330, 432, 433, 436, 451], "write": [436, 437, 441, 453], "written": [425, 426, 439, 441], "wrong": [430, 438], "wrongli": 437, "www": [436, 441], "x": [26, 121, 157, 214, 241, 243, 267, 320, 326, 330, 342, 357, 370, 381, 393, 394, 395, 396, 404, 405, 406, 407, 410, 411, 416, 421, 428, 432, 433, 436, 438, 452, 455], "x0": [422, 452], "x0_mesh": 422, "x1": [422, 452], "x1_mesh": 422, "x2": 452, "x_": [393, 401, 402, 424, 425, 426], "x_1": [401, 402, 424, 425, 426, 445], "x_2": [401, 402, 424, 425, 426, 445], "x_3": [401, 402, 424, 425, 426, 445], "x_4": [401, 402, 424, 425, 426], "x_5": 426, "x_6": 426, "x_i": 445, "x_pend": 26, "xlabel": 422, "xlsx": [394, 395, 396, 410], "xpho": [394, 395, 396], "xxxx": 437, "xylen": [394, 395, 396, 398, 399], "y": [275, 334, 352, 370, 393, 394, 395, 396, 410, 411, 413, 416, 432, 433, 436, 457], "y0": 422, "y0_mesh": 422, "y1": 422, "y1_mesh": 422, "ye": 334, "year": 457, "yet": [26, 438, 443, 451], "yield": [6, 107, 253, 394, 395, 396, 398, 399, 404, 410, 413, 414, 416, 426, 428, 429, 430, 436, 438, 442, 448, 449, 453], "yield_cumbest": [394, 395, 396, 410], "yield_mean": 444, "yield_mod": 444, "yield_q_0": 444, "yield_std": 444, "ylabel": 422, "yml": 438, "you": [31, 52, 395, 399, 401, 409, 414, 416, 419, 425, 426, 429, 435, 436, 437, 439, 441, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 459], "your": [395, 409, 416, 419, 426, 435, 436, 437, 438, 439, 441, 444, 445, 446, 447, 448, 450, 453, 454, 455, 456, 457, 459], "your_branch_nam": 439, "yourself": 419, "z": [411, 436], "zdir": 411, "zero": [44, 63, 65, 155, 157, 167, 350, 416, 419, 445, 457], "zip": [410, 411], "\u00b5fmt": 438, "\u0161o\u0161i\u0107": [436, 440]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoMeasurementsError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.conversion.to_string", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 439, "0": 438, "01": 438, "02": 438, "03": 438, "04": 438, "05": 438, "06": 438, "07": 438, "08": 438, "09": 438, "1": 438, "10": 438, "11": 438, "12": 438, "13": 438, "14": 438, "15": 438, "16": 438, "17": 438, "19": 438, "2": 438, "2022": 438, "2023": 438, "2024": 438, "2025": 438, "21": 438, "23": 438, "24": 438, "27": 438, "28": 438, "29": 438, "3": 438, "31": 438, "4": 438, "5": 438, "6": 438, "7": 438, "8": 438, "9": 438, "A": 436, "For": 450, "On": 448, "The": [419, 429, 436, 447, 453, 454, 457], "abbrevi": 453, "acqf": 2, "acquisit": [1, 2, 23, 25, 27, 28, 29, 399, 443, 444], "acquisitionfunct": 24, "action": 457, "activ": [442, 450], "activate_paramet": 155, "ad": [398, 438, 443, 444, 457, 459], "add_fake_measur": 345, "add_noise_to_perturb_degenerate_row": 346, "add_parameter_nois": 347, "addendum": 421, "addit": 416, "additivekernel": 115, "advanc": [436, 455], "altern": 453, "amount": 416, "an": 419, "appli": 447, "arm": [418, 419], "arm64": 437, "arrai": 454, "arrays_to_datafram": 348, "assembli": 453, "asynchron": 443, "attr": 439, "augment": [312, 313, 314], "auto": 455, "automat": 453, "avail": [399, 455], "avx": 437, "back": 436, "backtest": [392, 432], "bandit": [249, 418, 419], "base": [23, 33, 101, 119, 121, 134, 164, 175, 178, 188, 191, 198, 251, 253, 292, 394, 395, 396, 401, 402, 416, 417, 426, 447, 454], "basesequentialmetarecommend": 181, "basic": [105, 166, 315, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 397, 398, 444, 446, 448, 453], "basickernel": 102, "batch": 444, "batchify_ensemble_predictor": 285, "batchify_mean_var_predict": 286, "batteri": 436, "bayb": [0, 1, 2, 23, 25, 27, 28, 29, 30, 32, 33, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 114, 118, 119, 121, 122, 124, 125, 127, 129, 131, 132, 133, 134, 138, 141, 143, 148, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 174, 175, 177, 178, 180, 185, 187, 188, 190, 191, 193, 195, 196, 197, 198, 200, 205, 208, 209, 211, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 258, 260, 261, 262, 264, 267, 268, 269, 271, 272, 274, 276, 278, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 398, 436, 439], "bayesian": [190, 191, 193, 195, 196, 436, 451], "bayesianlinearsurrog": 277, "bayesianrecommend": 192, "bell_transform": 303, "bernoulli": 419, "betabernoullimultiarmedbanditsurrog": 250, "betaprior": 167, "binari": [294, 296], "binarytarget": 295, "black": [393, 419], "block_deserialization_hook": 228, "block_serialization_hook": 229, "bo": 448, "boolean": [331, 332, 333, 334], "both": 428, "botorch": [193, 425], "botorchrecommend": 194, "bound": [409, 449, 452], "box": [393, 419], "break": 438, "build": [419, 452], "bytes_to_human_read": 365, "cach": [444, 446], "call": 447, "callabl": [401, 402, 426, 454], "campaign": [30, 31, 393, 394, 395, 396, 399, 401, 402, 404, 405, 407, 410, 413, 414, 421, 422, 425, 426, 428, 429, 444], "candid": [444, 447], "cardinalityconstraint": 34, "case": 419, "catch_constant_target": 287, "categor": 138, "categoricalencod": 144, "categoricalparamet": [139, 450], "caution": 447, "challeng": 445, "chang": 438, "changelog": 438, "check_if_in": 332, "chemic": 436, "chemistri": [335, 336, 337, 338, 339], "choicevalu": 296, "class": 439, "classproperti": 319, "clone": 436, "closer_el": 370, "closest_el": 371, "cluster": [200, 451], "code": 439, "columntransform": 381, "compar": 428, "compon": 409, "composit": [114, 256, 455], "compositekernel": 103, "compositesurrog": 257, "comput": [445, 448], "condit": [39, 40, 445], "config": [429, 430, 444], "configur": [413, 414, 429, 447, 449, 453], "constraint": [32, 33, 35, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 400, 401, 402, 403, 404, 405, 406, 407, 416, 417, 445, 447, 452, 459], "construct": [394, 395, 396, 401, 402, 416, 425, 426, 449, 452], "constructor": [452, 453], "continu": [43, 209, 400, 402, 416, 424, 442, 445, 450, 452, 457, 459], "continuouscardinalityconstraint": [44, 445], "continuousconstraint": 36, "continuouslinearconstraint": [45, 445], "continuouslinearequalityconstraint": 47, "continuouslinearinequalityconstraint": 48, "continuousnonlinearconstraint": 37, "continuousparamet": 135, "contribut": 439, "contributor": 440, "control": [444, 447], "conveni": 449, "convent": 439, "convers": [340, 341, 342, 343, 449, 453], "convert": [230, 413], "convert_acqf": 28, "convert_bound": 362, "convert_to_float": 320, "copi": 453, "core": [211, 214, 215, 227, 228, 229, 230, 231, 232, 233, 240, 241, 262, 269, 271], "cpu": 437, "creat": [393, 394, 395, 396, 399, 401, 402, 404, 405, 406, 407, 413, 414, 421, 424, 425, 428, 429, 432, 433, 444, 452], "create_fake_input": 349, "creation": [394, 395, 396, 416, 417, 444, 459], "current": 455, "custom": [141, 258, 260, 393, 404, 408, 409, 412, 413, 414, 455], "customdiscreteparamet": [142, 450], "customencod": 145, "customonnxsurrog": 259, "data": [394, 395, 396, 452, 457], "datafram": [344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 401, 402, 426, 452, 453, 454], "de": [428, 453], "default": [272, 452, 453], "defaultkernelfactori": 273, "defin": [393, 401, 402, 409, 410, 411, 421, 422, 425, 426, 430, 432, 433, 436], "definit": 410, "depend": [405, 436, 450], "deprec": [46, 47, 48, 49, 438], "deprecationerror": 67, "descript": 421, "deseri": 453, "deserialize_datafram": 237, "design": [436, 439], "desir": [122, 124, 444], "desirabilityobject": [123, 449], "develop": 439, "df_apply_dependency_augment": 313, "df_apply_permutation_augment": 314, "df_drop_single_value_column": 350, "df_drop_string_column": 351, "df_uncorrelated_featur": 352, "dictionari": [429, 430], "differ": 399, "dimens": 426, "discret": [50, 216, 219, 220, 221, 403, 404, 405, 406, 416, 425, 444, 445, 450, 452], "discretecardinalityconstraint": [51, 445], "discreteconstraint": 38, "discretecustomconstraint": [52, 445], "discretedependenciesconstraint": [53, 445], "discreteexcludeconstraint": [54, 445], "discretelinkedparametersconstraint": [55, 445], "discretenolabelduplicatesconstraint": [56, 445], "discreteparamet": 136, "discretepermutationinvarianceconstraint": [57, 445], "discreteproductconstraint": [58, 445], "discretesamplingmethod": 377, "discretesumconstraint": [59, 445], "discuss": 419, "disk": 446, "do": 454, "docstr": 439, "document": 414, "domin": 449, "dtypefloatnumpi": 367, "dtypefloatonnx": 368, "dtypefloattorch": 383, "dummi": 316, "duplic": 416, "dure": 459, "dynam": 447, "edbo": 274, "edbokernelfactori": 275, "effici": 459, "emptysearchspaceerror": 68, "encod": 450, "end": 436, "enum": [125, 143, 297], "environ": 446, "equival": 453, "estim": 459, "exampl": [394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 413, 414, 421, 425, 426, 428, 429, 430, 434, 436, 448], "except": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "exceptiongroup": 437, "exclud": 447, "exclus": [406, 407, 447], "expect": 457, "expectedimprov": 3, "experi": [404, 405, 406, 407, 413, 414, 421, 428, 436, 443, 454], "experiment": [444, 446, 448], "expir": 438, "explain": [93, 448], "explicit": 452, "extend": 439, "extract": 455, "fake": 459, "faq": 435, "farthest_point_sampl": 378, "featur": 446, "field": 453, "file": [429, 430], "filter_df": 353, "find_subclass": 321, "finite_float": 386, "fix": [437, 438], "float": 446, "fpsrecommend": 206, "fraction_to_float": 341, "from": [429, 436, 438, 444, 452, 453], "full": [394, 395, 396, 452], "function": [393, 394, 395, 396, 399, 401, 402, 410, 421, 425, 426, 439, 443, 444], "further": 444, "fuzzy_row_match": 354, "gammaprior": 168, "gaussian_process": [261, 262, 264, 267, 268, 269, 271, 272, 274], "gaussianmixtureclusteringrecommend": 201, "gaussianprocesspreset": 270, "gaussianprocesssurrog": 263, "gener": [432, 433, 439, 451], "geom_mean": 372, "get": [398, 444, 447], "get_base_structure_hook": 231, "get_baseclass": 322, "get_canonical_smil": 336, "get_fingerprint_class": 337, "get_model_params_valid": 289, "get_parameters_from_datafram": 156, "get_subclass": 323, "get_transform_object": 355, "get_transform_paramet": 223, "get_user_detail": 307, "github": 436, "global": 442, "group_duplicate_valu": 324, "guid": 458, "halfcauchyprior": 169, "halfnormalprior": 170, "hilberts_factori": 325, "hook": [408, 409, 410, 411], "hybrid": [401, 426, 445], "imaginari": 419, "implicit": 449, "import": [393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 409, 411, 413, 414, 416, 417, 419, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 448], "improv": 411, "includ": 436, "inclus": 394, "incompatibilityerror": 69, "incompatibleacquisitionfunctionerror": 70, "incompatibleargumenterror": 71, "incompatibleexplainererror": 72, "incompatiblesearchspaceerror": 73, "incompatiblesurrogateerror": 74, "incomplet": 396, "incorpor": 407, "independentgaussiansurrog": 252, "index": 436, "indic": 436, "infeasibilityerror": 75, "infiniteintervalerror": 360, "influenc": 459, "inform": [444, 451], "initi": [394, 399], "insight": [91, 92, 93, 94, 96, 97, 98, 99, 448], "instal": [436, 437], "instanc": 409, "instead": [413, 414], "instruct": 446, "internet": 446, "interpret": 448, "interrupt": 410, "interv": [359, 360, 361, 362, 363], "invalidsurrogatemodelerror": 76, "invalidtargetvalueerror": 77, "invari": 416, "invok": 453, "irrelev": 457, "is_abstract": 333, "is_all_inst": 326, "is_cardinality_fulfil": 61, "is_en": 308, "is_inact": 157, "is_shap_explain": 98, "issu": [436, 437], "iter": [401, 402, 413, 414, 421], "json": [444, 453], "kernel": [100, 101, 104, 105, 114], "kernel_factori": [264, 267], "kernelfactori": 265, "kmeansclusteringrecommend": 202, "known": [436, 437], "label": 450, "leak": 437, "learn": [431, 433, 442, 454, 457], "licens": [436, 441], "like": 450, "limit": [448, 455, 456], "linear": [276, 402], "linear_transform": 304, "linearkernel": 106, "link": 414, "local": [436, 442], "logexpectedimprov": 4, "lognormalprior": 171, "look_up_target": 243, "lookup": [242, 243, 394, 395, 396, 401, 402, 410, 426, 432, 433, 454], "loop": [393, 394, 395, 396, 432, 433, 436], "maco": 437, "maintain": [436, 440], "make_explainer_for_surrog": 99, "make_gp_from_preset": 271, "mandatori": 449, "manual": [404, 405, 406, 407], "mark": 443, "match": 456, "match_attribut": 327, "maternkernel": 107, "max": 456, "mean": 454, "meanpredictionsurrog": 279, "measur": [398, 413, 414, 444, 459], "mechan": [394, 395, 396, 454], "memori": [364, 365, 459], "memorys": 217, "meta": [177, 178, 180, 447, 451], "metarecommend": 179, "method": [409, 439, 442], "min": 456, "minimumcardinalityviolatedwarn": 78, "miss": 454, "mixin": 234, "mixtur": [415, 416, 417], "mode": [421, 456], "model": [399, 413, 414, 416, 417, 419, 448, 455], "modelnottrainederror": 79, "monitor": 411, "monkeypatch": [409, 410, 411], "multi": [418, 419, 420, 421, 455], "multipl": 454, "naiv": [185, 278], "naivehybridspacerecommend": 186, "name": 450, "name_to_smil": 338, "necessari": [394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 413, 414, 421, 425, 426, 428, 429, 430], "nest": 453, "ngboost": 280, "ngboostsurrog": 281, "nois": 459, "nomcacquisitionfunctionerror": 80, "nomeasurementserror": 81, "non": 449, "non_inf_float": 387, "non_nan_float": 388, "non_shap_explain": 94, "none": 454, "nonpredict": [197, 198, 200, 205], "nonpredictiverecommend": 199, "nonstring_to_tupl": 342, "norecommenderslefterror": 82, "normalprior": 172, "notenoughpointslefterror": 83, "nothingtosimulateerror": 84, "numer": [148, 300, 366, 367, 368, 369, 370, 371, 372], "numericalcontinuousparamet": [149, 450], "numericaldiscreteparamet": [150, 450], "numericaltarget": [301, 456], "numericalunderflowerror": 85, "object": [118, 119, 120, 121, 122, 124, 125, 127, 129, 131, 132, 394, 395, 396, 399, 401, 402, 404, 405, 406, 407, 421, 425, 428, 432, 433, 436, 444, 449, 453], "onnx": 413, "optim": [393, 422, 432, 433, 436, 444, 459], "option": [436, 450], "optionalimporterror": 86, "order": [416, 446], "output": [413, 414, 455], "overrid": 439, "packag": [436, 446], "page": 448, "pamclusteringrecommend": 203, "parallel": 444, "paramet": [133, 134, 137, 138, 141, 143, 148, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 394, 395, 396, 399, 414, 416, 417, 444, 448, 450, 452, 459], "parameter_cartesian_prod_panda": 219, "parameter_cartesian_prod_polar": 220, "parameterencod": 146, "pareto": [127, 422], "paretoobject": [128, 449], "partial": [25, 443], "partialacquisitionfunct": 26, "pass": 414, "pend": 443, "perform": [394, 421, 425, 426], "periodickernel": 108, "perman": 447, "permut": 416, "piecewisepolynomialkernel": 109, "plainkernelfactori": 266, "plot": [393, 410, 411, 448], "point": 446, "polar": [437, 446], "polynomialkernel": 110, "posterior": 444, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 253, "pre": 413, "precis": 446, "predict": 444, "preset": [268, 269, 271, 272, 274], "pretrain": 413, "pretty_print_df": 356, "print": [404, 405, 407, 421], "prior": [163, 164, 165, 166], "probabilityofimprov": 7, "probabl": 411, "problem": [393, 410, 422, 437], "product": [407, 452], "productkernel": 116, "pull": 439, "pure": [187, 188, 190, 191, 193, 195, 196, 197, 198, 200, 205, 442, 451], "purerecommend": 189, "pycharm": 437, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedhypervolumeimprov": 13, "qlognoisyexpectedimprov": 14, "qlognparego": 12, "qnegintegratedposteriorvari": 15, "qnoisyexpectedhypervolumeimprov": 16, "qnoisyexpectedimprov": 17, "qposteriorstandarddevi": 18, "qprobabilityofimprov": 19, "qsimpleregret": 20, "qthompsonsampl": 21, "quick": 436, "qupperconfidencebound": 22, "random": [373, 374, 375], "random_forest": 282, "randomforestsurrog": 283, "randomrecommend": 207, "rbfkernel": 111, "recommend": [174, 175, 177, 178, 180, 185, 187, 188, 190, 191, 193, 195, 196, 197, 198, 200, 205, 398, 399, 413, 414, 425, 426, 428, 443, 444, 447, 451], "recommenderprotocol": 176, "reduct": 442, "refers_to": 328, "regist": 409, "register_custom_architectur": 260, "register_hook": 329, "relat": 437, "remov": 438, "replic": 455, "represent": [416, 417, 448, 452], "reproduc": 459, "request": 439, "restrict": 452, "result": [393, 410, 411, 443], "rffkernel": 112, "role": 457, "row": 446, "rqkernel": 113, "run": [393, 401, 402, 419], "sampl": [205, 442, 451], "sample_numerical_df": 379, "sampling_algorithm": [376, 378, 379], "scalar": [124, 126, 455], "scale": 380, "scalekernel": 117, "scenario": [244, 245, 454], "scope": 446, "search": [416, 417, 424, 432, 436, 442, 452, 459], "searchspac": [208, 209, 211, 212, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 394, 396, 399, 401, 402, 404, 405, 406, 407, 421, 423, 425, 426, 433], "searchspacematchwarn": 87, "searchspacetyp": 213, "see": 457, "select_constructor_hook": 232, "semaphor": 437, "sequenti": [180, 444], "sequential_greedi": [195, 196], "sequentialgreedyrecommend": 196, "sequentialmetarecommend": 182, "serial": [226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 427, 428, 444, 453], "serialize_datafram": 238, "serialmixin": 235, "set": [393, 410, 411, 422, 424, 432, 433], "set_random_se": 374, "setup": [398, 404, 405, 406, 407, 413, 414, 416, 417, 419, 421, 422, 428], "shap": [92, 93, 94, 96, 97, 98, 99, 448], "shap_explain": 96, "shap_plot": 97, "shapinsight": 95, "signatur": 409, "simplex": [416, 452], "simul": [239, 240, 241, 242, 243, 244, 245, 246, 247, 393, 394, 395, 396, 410, 419, 432, 433, 454], "simulate_experi": 241, "simulate_scenario": 245, "simulate_transfer_learn": 247, "singl": [129, 422, 454], "singletargetobject": [130, 449], "sklearnclusteringrecommend": 204, "slot": [416, 417], "smile": 152, "smiles_to_fingerprint_featur": 339, "smoothedboxprior": 173, "some": [401, 402, 421], "sort_paramet": 158, "space": [416, 417, 424, 426, 432, 436, 442, 444, 452, 459], "span": 416, "stage": 413, "start": 436, "statist": 444, "stop": 410, "str_to_acqf": 29, "strategi": [399, 436], "streamingsequentialmetarecommend": 183, "string": [429, 453], "strtobool": 334, "structure_constraint": 49, "studi": 455, "sub": 442, "subselectioncondit": [41, 445], "subspac": 452, "subspacecontinu": 210, "subspacediscret": 218, "substanc": [151, 152, 416, 436], "substanceencod": 147, "substanceparamet": [153, 450], "suggest": 437, "suitabl": 399, "sum": 407, "support": [437, 443], "surrog": [248, 249, 251, 253, 254, 256, 258, 260, 261, 262, 264, 267, 268, 269, 271, 272, 274, 276, 278, 280, 282, 284, 285, 286, 287, 288, 289, 290, 399, 412, 413, 414, 455], "surrogateprotocol": 255, "synchron": 439, "synthet": [425, 426], "tabl": [394, 395, 396, 432, 433, 436], "target": [291, 292, 293, 294, 296, 297, 300, 302, 303, 304, 305, 409, 420, 421, 422, 449, 456, 459], "targetmod": 298, "targettransform": 299, "task": [432, 433], "taskparamet": [140, 450, 457], "technologi": 457, "telemetri": [306, 307, 308, 309, 310, 436, 446], "telemetry_record_recommended_measurement_percentag": 309, "telemetry_record_valu": 310, "temporary_se": 375, "terminologi": [416, 453, 454, 457], "test": [401, 402, 425, 426], "theoret": 416, "thi": [394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 421, 425, 426, 448], "thresholdcondit": [42, 445], "through": 457, "to_kernel_factori": 267, "to_object": 121, "to_searchspac": 214, "to_str": 343, "to_tensor": 357, "to_tupl": 330, "toggl": 447, "toler": 444, "tool": 439, "torch": [382, 383, 384, 437], "tradit": 417, "train": 413, "trajectori": 447, "transfer": [431, 433, 454, 457], "transfer_learn": [246, 247], "transform": [302, 303, 304, 305, 421], "transform_target_column": 358, "treasur": 457, "triangular_transform": 305, "trigger": [409, 411], "two": 430, "twophasemetarecommend": 184, "type": 453, "uncertainti": 442, "unidentifiedsubclasserror": 88, "uninstal": 446, "uninterrupt": 410, "unlock": 457, "unmatchedattributeerror": 89, "unreleas": 438, "unspecifi": 317, "unspecifiedtyp": 318, "unstructure_bas": 233, "unusedobjectwarn": 90, "upperconfidencebound": 8, "us": [394, 395, 396, 398, 399, 404, 405, 406, 407, 413, 414, 419, 421, 425, 426, 452, 453, 454, 455], "usag": 448, "use_fallback_constructor_hook": 363, "user": 458, "util": [27, 28, 29, 60, 61, 154, 155, 156, 157, 158, 236, 237, 238, 284, 285, 286, 287, 311, 312, 313, 314, 315, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 459], "v": [409, 416, 422, 437, 444, 447], "valid": [62, 63, 64, 65, 131, 132, 159, 160, 161, 162, 222, 223, 224, 225, 288, 289, 290, 385, 386, 387, 388, 389, 390, 391, 414, 430], "validate_cardinality_constraint_parameter_bound": 63, "validate_cardinality_constraints_are_nonoverlap": 64, "validate_constraint": 65, "validate_custom_architecture_cl": 290, "validate_decorrel": 160, "validate_is_finit": 161, "validate_not_nan": 389, "validate_paramet": 225, "validate_parameter_input": 390, "validate_parameter_nam": 224, "validate_searchspace_from_config": 215, "validate_simplex_subspace_from_config": 221, "validate_target_input": 391, "validate_target_nam": 132, "validate_unique_valu": 162, "valu": [444, 450, 452, 453, 454], "variabl": 446, "varname_numpy_use_single_precis": 369, "varname_torch_use_single_precis": 384, "verif": [404, 405, 406, 407, 416, 417, 430], "verifi": 402, "via": 448, "visual": 422, "we": 454, "what": 454, "window": 437, "within": 452, "without": 437, "workflow": [439, 443], "wrap": [401, 402, 426], "write": 439}})