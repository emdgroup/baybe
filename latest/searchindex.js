Search.setIndex({"alltitles": {"Acquisition function": [[384, "acquisition-function"]], "AcquisitionFunction": [[21, null]], "Active Learning": [[426, null]], "Added": [[422, "added"], [422, "id6"], [422, "id15"], [422, "id19"], [422, "id25"], [422, "id32"], [422, "id41"], [422, "id47"], [422, "id51"], [422, "id58"], [422, "id63"], [422, "id69"], [422, "id75"], [422, "id79"], [422, "id83"], [422, "id87"], [422, "id92"], [422, "id96"], [422, "id99"], [422, "id103"], [422, "id107"], [422, "id111"], [422, "id114"], [422, "id118"], [422, "id122"], [422, "id126"], [422, "id130"], [422, "id136"], [422, "id139"]], "Addendum: Description of transformation functions": [[406, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[443, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[441, null]], "Adding Partial Results": [[427, "adding-partial-results"]], "Adding measurements": [[428, "adding-measurements"]], "AdditiveKernel": [[104, null]], "Advanced Example: Chemical Substances": [[420, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[404, "an-imaginary-use-case"]], "Array-Based Callables": [[438, null]], "Asynchronous Workflows": [[427, null]], "Automatic field conversion": [[437, "automatic-field-conversion"]], "Available Models": [[439, "available-models"]], "Available recommenders suitable for initial recommendation": [[384, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[384, "available-surrogate-models"]], "Backtesting": [[377, null], [416, null]], "BaseSequentialMetaRecommender": [[168, null]], "Basic Instructions": [[430, "basic-instructions"]], "Basic Usage": [[432, "basic-usage"]], "Basic creation": [[428, "basic-creation"]], "Basic example for using BayBE": [[383, null]], "Basic string assembly": [[437, "basic-string-assembly"]], "BasicKernel": [[91, null]], "Basics": [[382, null], [428, "basics"]], "Batch optimization": [[428, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[420, null]], "Bayesian Recommenders": [[435, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[261, null]], "BayesianRecommender": [[179, null]], "Bernoulli Multi Armed Bandit": [[404, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[237, null]], "BetaPrior": [[154, null]], "BinaryTarget": [[279, null]], "BotorchRecommender": [[181, null]], "Bound methods": [[394, "bound-methods"]], "Breaking Changes": [[422, "breaking-changes"], [422, "id24"], [422, "id31"]], "Building from the Product of Parameter Values": [[436, "building-from-the-product-of-parameter-values"], [436, "id2"]], "Building the Model": [[404, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[421, "cpus-without-avx-support-installation-of-polars"]], "Caching of recommendations": [[428, "caching-of-recommendations"]], "Campaign": [[28, null]], "Campaign Stopping": [[395, null]], "Campaigns": [[428, null]], "Candidate Control in Discrete Spaces": [[428, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[431, null]], "CardinalityConstraint": [[31, null]], "CategoricalEncoding": [[133, null]], "CategoricalParameter": [[128, null], [434, "categoricalparameter"]], "Caution": [[431, null]], "Changed": [[422, "changed"], [422, "id2"], [422, "id4"], [422, "id7"], [422, "id10"], [422, "id16"], [422, "id20"], [422, "id26"], [422, "id33"], [422, "id38"], [422, "id42"], [422, "id48"], [422, "id52"], [422, "id55"], [422, "id59"], [422, "id64"], [422, "id70"], [422, "id76"], [422, "id80"], [422, "id84"], [422, "id88"], [422, "id93"], [422, "id97"], [422, "id100"], [422, "id104"], [422, "id108"], [422, "id112"], [422, "id115"], [422, "id119"], [422, "id123"], [422, "id127"], [422, "id131"]], "Changelog": [[422, null]], "Clustering Recommenders": [[435, "clustering-recommenders"]], "Code Design": [[423, "code-design"]], "ColumnTransformer": [[366, null]], "Comparing recommendations in both objects": [[412, "comparing-recommendations-in-both-objects"]], "CompositeKernel": [[92, null]], "Condition": [[37, null]], "Conditions": [[429, "conditions"]], "Constraint": [[32, null]], "Constraint Setup": [[401, "constraint-setup"]], "Constraints": [[429, null]], "Constraints Continuous": [[385, null]], "Constraints Discrete": [[388, null]], "Constraints Setup": [[402, "constraints-setup"]], "Construct the campaign and run some iterations": [[386, "construct-the-campaign-and-run-some-iterations"], [387, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[436, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[379, "constructing-campaigns-for-the-simulation-loop"], [380, "constructing-campaigns-for-the-simulation-loop"], [381, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[436, "constructing-from-a-dataframe"], [436, "id1"], [436, "id3"]], "Constructing hybrid recommenders": [[410, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[409, "constructing-the-campaign-and-performing-a-recommendation"], [410, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[410, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[429, "continuous-constraints"]], "Continuous Parameters": [[434, "continuous-parameters"]], "Continuous Subspaces": [[436, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[41, null]], "ContinuousConstraint": [[33, null]], "ContinuousLinearConstraint": [[42, null], [429, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[34, null]], "ContinuousParameter": [[124, null]], "Contributing to BayBE": [[423, null]], "Contributors": [[424, null], [424, "id1"]], "Convenience construction and implicit conversion": [[433, null]], "Conventions for attrs classes": [[423, "conventions-for-attrs-classes"]], "Convert model to onnx": [[398, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[398, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[399, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[398, "create-campaign"]], "Creating Continuous Search Spaces": [[408, null]], "Creating a Simplex-Bound Discrete Subspace": [[436, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[428, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[413, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[389, "creating-and-printing-the-campaign"], [390, "creating-and-printing-the-campaign"], [392, "creating-and-printing-the-campaign"], [406, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[378, "creating-the-campaigns"]], "Creating the Objective": [[380, "creating-the-objective"]], "Creating the Optimization Objective": [[416, "creating-the-optimization-objective"], [417, "creating-the-optimization-objective"]], "Creating the Search Space": [[416, "creating-the-search-space"]], "Creating the Searchspace": [[417, "creating-the-searchspace"]], "Creating the campaign": [[384, "creating-the-campaign"], [399, "creating-the-campaign"], [412, "creating-the-campaign"]], "Creating the constraint": [[389, "creating-the-constraint"], [391, "creating-the-constraint"]], "Creating the constraints": [[390, "creating-the-constraints"], [392, "creating-the-constraints"]], "Creating the objective": [[406, "creating-the-objective"]], "Creating the recommender object": [[384, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[379, "creating-the-searchspace-and-the-objective"], [381, "creating-the-searchspace-and-the-objective"], [386, "creating-the-searchspace-and-the-objective"], [387, "creating-the-searchspace-and-the-objective"], [389, "creating-the-searchspace-and-the-objective"], [390, "creating-the-searchspace-and-the-objective"], [391, "creating-the-searchspace-and-the-objective"], [392, "creating-the-searchspace-and-the-objective"], [409, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[428, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[439, null]], "Custom Hooks": [[393, null]], "Custom Surrogates": [[397, null]], "CustomDiscreteParameter": [[131, null], [434, "customdiscreteparameter"]], "CustomEncoding": [[134, null]], "CustomONNXSurrogate": [[243, null]], "Dataframe deserialization": [[437, "dataframe-deserialization"]], "DefaultKernelFactory": [[257, null]], "Defining config dictionaries": [[414, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[395, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[396, "defining-the-hook"]], "Defining the Hooks": [[394, "defining-the-hooks"]], "Defining the Optimization Objective": [[420, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[378, "defining-the-optimization-problem"]], "Defining the Search Space": [[420, "defining-the-search-space"]], "Defining the Tasks": [[416, "defining-the-tasks"], [417, "defining-the-tasks"]], "Defining the targets": [[406, "defining-the-targets"]], "Defining the test function": [[386, "defining-the-test-function"], [387, "defining-the-test-function"], [409, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[410, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[422, "deprecations"], [422, "id22"], [422, "id29"], [422, "id36"], [422, "id45"], [422, "id61"], [422, "id67"], [422, "id73"], [422, "id90"]], "Deserialization from configuration strings": [[437, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[116, null], [433, "desirabilityobjective"]], "Developer Tools": [[423, "developer-tools"]], "Discrete Constraints": [[429, "discrete-constraints"]], "Discrete Parameters": [[434, "discrete-parameters"]], "Discrete Subspaces": [[436, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[401, null]], "DiscreteCardinalityConstraint": [[48, null]], "DiscreteConstraint": [[35, null]], "DiscreteCustomConstraint": [[49, null], [429, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[50, null], [429, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[51, null], [429, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[52, null], [429, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[53, null], [429, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[125, null]], "DiscretePermutationInvarianceConstraint": [[54, null], [429, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[55, null]], "DiscreteSamplingMethod": [[362, null]], "DiscreteSumConstraint": [[56, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[429, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[404, "discussion"]], "Disk Caching": [[430, "disk-caching"]], "Dummy": [[300, null]], "Duplicate Substances": [[401, "duplicate-substances"]], "Dynamic Exclusion": [[431, "dynamic-exclusion"]], "EDBOKernelFactory": [[259, null]], "EXPERIMENTAL: Floating Point Precision": [[430, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[443, null]], "Environment Variables": [[430, null]], "Equivalent copies": [[437, null]], "Estimation with Constraints": [[443, null]], "Example Searchspace and objective parameters": [[384, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[386, null]], "Example for creating campaigns from configs": [[413, null]], "Example for custom parameter passing in surrogate models": [[399, null]], "Example for full simulation loop using a table-based lookup mechanism": [[380, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[381, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[379, null]], "Example for linear constraints in a continuous searchspace": [[387, null]], "Example for surrogate model with a custom pretrained model": [[398, null]], "Example for the serialization of a campaign": [[412, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[409, null]], "Example for using custom constraints in discrete searchspaces": [[389, null]], "Example for using dependency constraints in discrete searchspaces": [[390, null]], "Example for using different strategies": [[384, null]], "Example for using exclusion constraints in discrete searchspaces": [[391, null]], "Example for using exclusion constraints incorporating sums and products": [[392, null]], "Example for using synthetic test functions in hybrid spaces": [[410, null]], "Example for using the multi target mode for the objective": [[406, null]], "Example for validation of a config file": [[414, null]], "Examples": [[418, null]], "Examples On This Page": [[432, null]], "Excluding Configurations": [[431, "excluding-configurations"]], "Expectations": [[441, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[398, "experiment-setup"], [399, "experiment-setup"]], "Experiment setup": [[389, "experiment-setup"], [390, "experiment-setup"], [391, "experiment-setup"], [392, "experiment-setup"], [412, "experiment-setup"]], "Experiment setup and creating the searchspace": [[406, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[431, null]], "Experimental Representation Limits": [[432, null]], "Experimental and Computational Representations": [[432, "experimental-and-computational-representations"]], "Experimental feature only!": [[430, null]], "Expired Deprecations (from 0.6.*)": [[422, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[422, "expired-deprecations-from-0-7"]], "Explainers": [[432, "explainers"]], "Extending BayBE\u2019s Functionality": [[423, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[439, "extracting-the-model-for-advanced-study"]], "FAQ": [[419, null]], "FPSRecommender": [[193, null]], "Fixed": [[422, "fixed"], [422, "id8"], [422, "id11"], [422, "id13"], [422, "id17"], [422, "id21"], [422, "id27"], [422, "id35"], [422, "id39"], [422, "id44"], [422, "id49"], [422, "id53"], [422, "id60"], [422, "id65"], [422, "id71"], [422, "id77"], [422, "id85"], [422, "id89"], [422, "id94"], [422, "id101"], [422, "id105"], [422, "id109"], [422, "id116"], [422, "id120"], [422, "id124"], [422, "id128"], [422, "id132"], [422, "id134"], [422, "id137"]], "From GitHub": [[420, "from-github"]], "From Local Clone": [[420, "from-local-clone"]], "From Package Index": [[420, "from-package-index"]], "From the Default Constructor": [[436, "from-the-default-constructor"]], "Further information": [[428, "further-information"]], "GammaPrior": [[155, null]], "GaussianMixtureClusteringRecommender": [[188, null]], "GaussianProcessPreset": [[254, null]], "GaussianProcessSurrogate": [[247, null]], "General Information": [[435, "general-information"]], "General Workflow": [[423, "general-workflow"]], "Generating Lookup Tables": [[416, "generating-lookup-tables"], [417, "generating-lookup-tables"]], "Getting Recommendations": [[431, null]], "Getting a recommendation and adding measurements": [[383, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[428, "getting-recommendations"]], "Global Uncertainty Reduction": [[426, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[156, null]], "HalfNormalPrior": [[157, null]], "Hook instance vs. target instance": [[394, null]], "Hybrid constraints": [[429, null]], "Imports": [[378, "imports"], [394, "imports"], [396, "imports"], [401, "imports"], [402, "imports"], [404, "imports"], [408, "imports"], [416, "imports"], [417, "imports"]], "Inclusion of initial data": [[379, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[239, null]], "Indices and Tables": [[420, "indices-and-tables"]], "Influence of Continuous Parameters": [[443, null]], "Insights": [[432, null]], "Installation Related Issues": [[421, "installation-related-issues"]], "Interval": [[342, null]], "Invoking alternative constructors": [[437, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[398, "iterate-with-recommendations-and-measurements"], [399, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[437, "json-de-serialization"]], "KMeansClusteringRecommender": [[189, null]], "Kernel": [[93, null]], "KernelFactory": [[249, null]], "Known Issues": [[421, null]], "License": [[425, null]], "Limitations": [[440, "limitations"]], "LinearKernel": [[95, null]], "Links for documentation": [[399, "links-for-documentation"]], "Local Uncertainty Reduction": [[426, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[158, null]], "Lookup functionality and data creation": [[379, "lookup-functionality-and-data-creation"], [380, "lookup-functionality-and-data-creation"], [381, "lookup-functionality-and-data-creation"]], "MATCH mode": [[440, "match-mode"]], "MIN and MAX mode": [[440, "min-and-max-mode"]], "Maintainers": [[424, "maintainers"]], "Mandatory target bounds": [[433, null]], "Manual verification of the constraint": [[389, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[390, "manual-verification-of-the-constraints"], [391, "manual-verification-of-the-constraints"], [392, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[427, "marking-experiments-as-pending"]], "MaternKernel": [[96, null]], "MeanPredictionSurrogate": [[263, null]], "Memory During Optimization": [[443, null]], "MemorySize": [[204, null]], "Meta Recommenders": [[431, null], [435, "meta-recommenders"]], "MetaRecommender": [[166, null]], "Method overrides": [[423, "method-overrides"]], "Missing Lookup Values": [[438, null]], "Mixtures": [[400, null]], "Model Interpretation in BO": [[432, null]], "Model Outputs": [[398, "model-outputs"], [399, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[401, null]], "Modeling a Mixture in Traditional Representation": [[402, null]], "Monitoring the Probability of Improvement": [[396, null]], "Monkeypatching": [[394, "monkeypatching"], [395, null], [396, "monkeypatching"]], "Multi Target": [[405, null]], "Multi-Armed Bandit": [[403, null]], "NGBoostSurrogate": [[265, null]], "NaiveHybridSpaceRecommender": [[173, null]], "Necessary imports": [[398, "necessary-imports"], [399, "necessary-imports"], [412, "necessary-imports"], [413, "necessary-imports"], [414, "necessary-imports"]], "Necessary imports for this example": [[379, "necessary-imports-for-this-example"], [380, "necessary-imports-for-this-example"], [381, "necessary-imports-for-this-example"], [383, "necessary-imports-for-this-example"], [384, "necessary-imports-for-this-example"], [386, "necessary-imports-for-this-example"], [387, "necessary-imports-for-this-example"], [389, "necessary-imports-for-this-example"], [390, "necessary-imports-for-this-example"], [391, "necessary-imports-for-this-example"], [392, "necessary-imports-for-this-example"], [406, "necessary-imports-for-this-example"], [409, "necessary-imports-for-this-example"], [410, "necessary-imports-for-this-example"]], "Nesting objects": [[437, "nesting-objects"]], "NonPredictiveRecommender": [[186, null]], "NormalPrior": [[159, null]], "NumericalContinuousParameter": [[138, null], [434, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[139, null], [434, "numericaldiscreteparameter"]], "NumericalTarget": [[285, null], [440, "numericaltarget"]], "Objective": [[111, null], [433, null]], "Optimizing a Custom Black-Box Function": [[378, null]], "Optional Dependencies": [[420, "optional-dependencies"]], "Optional dependency": [[434, null]], "Optional: Defining the Optimization Strategy": [[420, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[401, null]], "PAMClusteringRecommender": [[190, null]], "Parameter": [[126, null]], "Parameter Importance via SHAP": [[432, "parameter-importance-via-shap"]], "Parameter Setup": [[401, "parameter-setup"], [402, "parameter-setup"]], "Parameter encoding": [[434, null]], "Parameter names": [[434, null]], "Parameter tolerances": [[428, null]], "ParameterEncoding": [[135, null]], "Parameters": [[434, null]], "Parameters for a full simulation loop": [[379, "parameters-for-a-full-simulation-loop"], [380, "parameters-for-a-full-simulation-loop"], [381, "parameters-for-a-full-simulation-loop"]], "PartialAcquisitionFunction": [[23, null]], "Performing some iterations": [[406, "performing-some-iterations"]], "Performing the simulation loop": [[379, "performing-the-simulation-loop"]], "PeriodicKernel": [[97, null]], "Permanent Exclusion": [[431, "permanent-exclusion"]], "Permutation Invariance": [[401, "permutation-invariance"]], "PiecewisePolynomialKernel": [[98, null]], "PlainKernelFactory": [[250, null]], "Plots": [[432, "plots"]], "Plotting the Results": [[378, "plotting-the-results"], [395, "plotting-the-results"], [396, "plotting-the-results"]], "Polars": [[430, "polars"]], "PolynomialKernel": [[99, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[152, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[395, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[105, null]], "Pure Recommenders": [[435, "pure-recommenders"]], "PureRecommender": [[176, null]], "Purely Continuous Search Spaces": [[426, null]], "PyCharm vs. exceptiongroup": [[421, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[100, null]], "RFFKernel": [[101, null]], "RQKernel": [[102, null]], "RandomForestSurrogate": [[267, null]], "RandomRecommender": [[194, null]], "RecommenderProtocol": [[163, null]], "Recommenders": [[435, null]], "Registering Custom Hooks": [[394, null]], "Removed": [[422, "removed"], [422, "id28"], [422, "id34"], [422, "id43"], [422, "id56"], [422, "id66"], [422, "id72"], [422, "id81"]], "Representation of Data within Discrete Subspaces": [[436, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[443, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[436, "restricting-search-spaces-using-constraints"]], "Row Order": [[430, null]], "Running the Simulation": [[404, "running-the-simulation"]], "Running the Simulation Loop": [[378, "running-the-simulation-loop"]], "SHAPInsight": [[84, null]], "SKLearnClusteringRecommender": [[191, null]], "Sampling Recommenders": [[435, "sampling-recommenders"]], "Scalarizer": [[119, null]], "ScaleKernel": [[106, null]], "Search Space Creation": [[401, "search-space-creation"], [402, "search-space-creation"]], "Search Space Memory Estimation": [[443, "search-space-memory-estimation"]], "Search Spaces": [[436, null]], "SearchSpace": [[199, null]], "SearchSpaceType": [[200, null]], "Searchspaces": [[407, null]], "Seeing Transfer Learning in Action": [[441, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[428, null]], "SequentialMetaRecommender": [[169, null]], "SerialMixin": [[222, null]], "Serialization": [[411, null], [428, "serialization"], [437, null]], "Serialization and de-serialization": [[412, "serialization-and-de-serialization"]], "Settings": [[378, "settings"], [395, "settings"], [396, "settings"], [408, "settings"], [416, "settings"], [417, "settings"]], "Setup": [[383, "setup"], [404, "setup"]], "Signature components": [[394, null]], "Simplex Construction": [[401, null]], "Simulating Multiple Scenarios": [[438, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[438, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[438, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[395, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[395, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[438, null]], "Simulation Loop": [[416, "simulation-loop"], [417, "simulation-loop"]], "SingleTargetObjective": [[121, null], [433, "singletargetobjective"]], "Slot-based Representation": [[402, null]], "SmoothedBoxPrior": [[160, null]], "StreamingSequentialMetaRecommender": [[170, null]], "Sub-Sampling Method": [[426, null]], "SubSelectionCondition": [[38, null], [429, "subselectioncondition"]], "SubspaceContinuous": [[197, null]], "SubspaceDiscrete": [[205, null]], "Substance Amounts": [[401, "substance-amounts"]], "SubstanceEncoding": [[136, null]], "SubstanceParameter": [[142, null], [434, "substanceparameter"]], "Suggested Fix": [[421, null], [421, null], [421, null], [421, null]], "Supported Acquisition Functions": [[427, null]], "Supported Recommenders": [[427, null]], "Surrogate": [[240, null]], "SurrogateProtocol": [[241, null]], "Surrogates": [[439, null]], "Synchronizing Pull Requests": [[423, "synchronizing-pull-requests"]], "Target": [[277, null]], "TargetMode": [[282, null]], "TargetTransformation": [[283, null]], "Targets": [[440, null]], "TaskParameter": [[129, null], [434, "taskparameter"]], "Technology": [[441, null]], "Telemetry": [[430, "telemetry"]], "Telemetry Scope": [[430, null]], "Terminology": [[401, "terminology"], [437, null], [441, null]], "Terminology Continued": [[441, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[438, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[404, "the-black-box-model"]], "The Lookup Mechanism": [[438, "the-lookup-mechanism"]], "The Optimization Loop": [[420, "the-optimization-loop"]], "The Role of the TaskParameter": [[441, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[413, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[431, "the-recommend-call"]], "The type field": [[437, "the-type-field"]], "Theoretical Span": [[401, null]], "ThresholdCondition": [[39, null], [429, "thresholdcondition"]], "Trajectory-Based Control": [[431, null]], "Transfer Learning": [[415, null], [417, null], [441, null]], "Triggering the Hook": [[396, "triggering-the-hook"]], "Triggering the Hooks": [[394, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[171, null]], "Uninstalling Internet Packages": [[430, null]], "Unlocking Data Treasures Through Transfer Learning": [[441, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[302, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[442, null]], "Using Custom Models": [[439, "using-custom-models"]], "Using Explicit Bounds": [[436, "using-explicit-bounds"]], "Using None": [[438, "using-none"]], "Using a Callable": [[438, "using-a-callable"]], "Using a Dataframe": [[438, "using-a-dataframe"]], "Using abbreviations": [[437, "using-abbreviations"]], "Using configuration instead": [[398, "using-configuration-instead"], [399, "using-configuration-instead"]], "Using default values": [[437, "using-default-values"]], "Utilities": [[443, null]], "Validation of model parameters": [[399, "validation-of-model-parameters"]], "Verification of Constraints": [[401, "verification-of-constraints"], [402, "verification-of-constraints"]], "Verification of Span": [[401, "verification-of-span"]], "Verification of the two dictionaries": [[414, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[387, "verify-the-constraints"]], "Windows \u2013 Torch Problems": [[421, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[386, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [387, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [410, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[423, "writing-docstrings"]], "Writing classes": [[423, "writing-classes"]], "[0.1.0] - 2022-10-01": [[422, "id138"]], "[0.10.0] - 2024-08-02": [[422, "id30"]], "[0.11.0] - 2024-09-09": [[422, "id23"]], "[0.11.1] - 2024-10-01": [[422, "id18"]], "[0.11.2] - 2024-10-11": [[422, "id14"]], "[0.11.3] - 2024-11-06": [[422, "id12"]], "[0.11.4] - 2025-01-27": [[422, "id9"]], "[0.12.0] - 2025-01-28": [[422, "id5"]], "[0.12.1] - 2025-01-29": [[422, "id3"]], "[0.12.2] - 2025-01-31": [[422, "id1"]], "[0.2.0] - 2022-11-10": [[422, "id135"]], "[0.2.1] - 2022-12-01": [[422, "id133"]], "[0.2.2] - 2023-01-13": [[422, "id129"]], "[0.2.3] - 2023-03-14": [[422, "id125"]], "[0.2.4] - 2023-03-24": [[422, "id121"]], "[0.3.0] - 2023-06-27": [[422, "id117"]], "[0.3.1] - 2023-07-17": [[422, "id113"]], "[0.3.2] - 2023-07-24": [[422, "id110"]], "[0.4.0] - 2023-08-16": [[422, "id106"]], "[0.4.1] - 2023-08-23": [[422, "id102"]], "[0.4.2] - 2023-08-29": [[422, "id98"]], "[0.5.0] - 2023-09-15": [[422, "id95"]], "[0.5.1] - 2023-10-19": [[422, "id91"]], "[0.6.0] - 2023-11-17": [[422, "id86"]], "[0.6.1] - 2023-11-27": [[422, "id82"]], "[0.7.0] - 2023-12-04": [[422, "id78"]], "[0.7.1] - 2023-12-07": [[422, "id74"]], "[0.7.2] - 2024-01-24": [[422, "id68"]], "[0.7.3] - 2024-02-09": [[422, "id62"]], "[0.7.4] - 2024-02-28": [[422, "id57"]], "[0.8.0] - 2024-02-29": [[422, "id54"]], "[0.8.1] - 2024-03-11": [[422, "id50"]], "[0.8.2] - 2024-03-27": [[422, "id46"]], "[0.9.0] - 2024-05-21": [[422, "id40"]], "[0.9.1] - 2024-06-04": [[422, "id37"]], "[Unreleased]": [[422, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[20, null]], "baybe.acquisition.partial": [[22, null]], "baybe.acquisition.utils": [[24, null]], "baybe.acquisition.utils.convert_acqf": [[25, null]], "baybe.acquisition.utils.str_to_acqf": [[26, null]], "baybe.campaign": [[27, null]], "baybe.constraints": [[29, null]], "baybe.constraints.base": [[30, null]], "baybe.constraints.conditions": [[36, null]], "baybe.constraints.continuous": [[40, null]], "baybe.constraints.deprecation": [[43, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[44, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[45, null]], "baybe.constraints.deprecation.structure_constraints": [[46, null]], "baybe.constraints.discrete": [[47, null]], "baybe.constraints.validation": [[57, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[58, null]], "baybe.constraints.validation.validate_constraints": [[59, null]], "baybe.exceptions": [[60, null]], "baybe.exceptions.DeprecationError": [[61, null]], "baybe.exceptions.EmptySearchSpaceError": [[62, null]], "baybe.exceptions.IncompatibilityError": [[63, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[64, null]], "baybe.exceptions.IncompatibleArgumentError": [[65, null]], "baybe.exceptions.IncompatibleExplainerError": [[66, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[67, null]], "baybe.exceptions.InvalidSurrogateModelError": [[68, null]], "baybe.exceptions.InvalidTargetValueError": [[69, null]], "baybe.exceptions.ModelNotTrainedError": [[70, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[71, null]], "baybe.exceptions.NoRecommendersLeftError": [[72, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[73, null]], "baybe.exceptions.NothingToSimulateError": [[74, null]], "baybe.exceptions.NumericalUnderflowError": [[75, null]], "baybe.exceptions.OptionalImportError": [[76, null]], "baybe.exceptions.UnidentifiedSubclassError": [[77, null]], "baybe.exceptions.UnmatchedAttributeError": [[78, null]], "baybe.exceptions.UnusedObjectWarning": [[79, null]], "baybe.insights": [[80, null]], "baybe.insights.shap": [[81, null]], "baybe.insights.shap.EXPLAINERS": [[82, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[83, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[85, null]], "baybe.insights.shap.SHAP_PLOTS": [[86, null]], "baybe.insights.shap.is_shap_explainer": [[87, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[88, null]], "baybe.kernels": [[89, null]], "baybe.kernels.base": [[90, null]], "baybe.kernels.basic": [[94, null]], "baybe.kernels.composite": [[103, null]], "baybe.objective": [[107, null]], "baybe.objective.Objective": [[108, null]], "baybe.objectives": [[109, null]], "baybe.objectives.base": [[110, null]], "baybe.objectives.base.to_objective": [[112, null]], "baybe.objectives.deprecation": [[113, null]], "baybe.objectives.deprecation.structure_objective": [[114, null]], "baybe.objectives.desirability": [[115, null]], "baybe.objectives.desirability.scalarize": [[117, null]], "baybe.objectives.enum": [[118, null]], "baybe.objectives.single": [[120, null]], "baybe.parameters": [[122, null]], "baybe.parameters.base": [[123, null]], "baybe.parameters.categorical": [[127, null]], "baybe.parameters.custom": [[130, null]], "baybe.parameters.enum": [[132, null]], "baybe.parameters.numerical": [[137, null]], "baybe.parameters.substance": [[140, null]], "baybe.parameters.substance.Smiles": [[141, null]], "baybe.parameters.utils": [[143, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[144, null]], "baybe.parameters.utils.sort_parameters": [[145, null]], "baybe.parameters.validation": [[146, null]], "baybe.parameters.validation.validate_decorrelation": [[147, null]], "baybe.parameters.validation.validate_is_finite": [[148, null]], "baybe.parameters.validation.validate_unique_values": [[149, null]], "baybe.priors": [[150, null]], "baybe.priors.base": [[151, null]], "baybe.priors.basic": [[153, null]], "baybe.recommenders": [[161, null]], "baybe.recommenders.base": [[162, null]], "baybe.recommenders.meta": [[164, null]], "baybe.recommenders.meta.base": [[165, null]], "baybe.recommenders.meta.sequential": [[167, null]], "baybe.recommenders.naive": [[172, null]], "baybe.recommenders.pure": [[174, null]], "baybe.recommenders.pure.base": [[175, null]], "baybe.recommenders.pure.bayesian": [[177, null]], "baybe.recommenders.pure.bayesian.base": [[178, null]], "baybe.recommenders.pure.bayesian.botorch": [[180, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[182, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[183, null]], "baybe.recommenders.pure.nonpredictive": [[184, null]], "baybe.recommenders.pure.nonpredictive.base": [[185, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[187, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[192, null]], "baybe.searchspace": [[195, null]], "baybe.searchspace.continuous": [[196, null]], "baybe.searchspace.core": [[198, null]], "baybe.searchspace.core.to_searchspace": [[201, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[202, null]], "baybe.searchspace.discrete": [[203, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[206, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[207, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[208, null]], "baybe.searchspace.validation": [[209, null]], "baybe.searchspace.validation.get_transform_parameters": [[210, null]], "baybe.searchspace.validation.validate_parameter_names": [[211, null]], "baybe.searchspace.validation.validate_parameters": [[212, null]], "baybe.serialization": [[213, null]], "baybe.serialization.core": [[214, null]], "baybe.serialization.core.block_deserialization_hook": [[215, null]], "baybe.serialization.core.block_serialization_hook": [[216, null]], "baybe.serialization.core.converter": [[217, null]], "baybe.serialization.core.get_base_structure_hook": [[218, null]], "baybe.serialization.core.select_constructor_hook": [[219, null]], "baybe.serialization.core.unstructure_base": [[220, null]], "baybe.serialization.mixin": [[221, null]], "baybe.serialization.utils": [[223, null]], "baybe.serialization.utils.deserialize_dataframe": [[224, null]], "baybe.serialization.utils.serialize_dataframe": [[225, null]], "baybe.simulation": [[226, null]], "baybe.simulation.core": [[227, null]], "baybe.simulation.core.simulate_experiment": [[228, null]], "baybe.simulation.lookup": [[229, null]], "baybe.simulation.lookup.look_up_targets": [[230, null]], "baybe.simulation.scenarios": [[231, null]], "baybe.simulation.scenarios.simulate_scenarios": [[232, null]], "baybe.simulation.transfer_learning": [[233, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[234, null]], "baybe.surrogates": [[235, null]], "baybe.surrogates.bandit": [[236, null]], "baybe.surrogates.base": [[238, null]], "baybe.surrogates.custom": [[242, null]], "baybe.surrogates.custom.register_custom_architecture": [[244, null]], "baybe.surrogates.gaussian_process": [[245, null]], "baybe.surrogates.gaussian_process.core": [[246, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[248, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[251, null]], "baybe.surrogates.gaussian_process.presets": [[252, null]], "baybe.surrogates.gaussian_process.presets.core": [[253, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[255, null]], "baybe.surrogates.gaussian_process.presets.default": [[256, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[258, null]], "baybe.surrogates.linear": [[260, null]], "baybe.surrogates.naive": [[262, null]], "baybe.surrogates.ngboost": [[264, null]], "baybe.surrogates.random_forest": [[266, null]], "baybe.surrogates.utils": [[268, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[269, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[270, null]], "baybe.surrogates.utils.catch_constant_targets": [[271, null]], "baybe.surrogates.validation": [[272, null]], "baybe.surrogates.validation.get_model_params_validator": [[273, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[274, null]], "baybe.targets": [[275, null]], "baybe.targets.base": [[276, null]], "baybe.targets.binary": [[278, null]], "baybe.targets.binary.ChoiceValue": [[280, null]], "baybe.targets.enum": [[281, null]], "baybe.targets.numerical": [[284, null]], "baybe.targets.transforms": [[286, null]], "baybe.targets.transforms.bell_transform": [[287, null]], "baybe.targets.transforms.linear_transform": [[288, null]], "baybe.targets.transforms.triangular_transform": [[289, null]], "baybe.telemetry": [[290, null]], "baybe.telemetry.get_user_details": [[291, null]], "baybe.telemetry.is_enabled": [[292, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[293, null]], "baybe.telemetry.telemetry_record_value": [[294, null]], "baybe.utils": [[295, null]], "baybe.utils.augmentation": [[296, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[297, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[298, null]], "baybe.utils.basic": [[299, null]], "baybe.utils.basic.UNSPECIFIED": [[301, null]], "baybe.utils.basic.find_subclass": [[304, null]], "baybe.utils.basic.get_baseclasses": [[305, null]], "baybe.utils.basic.get_subclasses": [[306, null]], "baybe.utils.basic.group_duplicate_values": [[307, null]], "baybe.utils.basic.hilberts_factory": [[308, null]], "baybe.utils.basic.is_all_instance": [[309, null]], "baybe.utils.basic.match_attributes": [[310, null]], "baybe.utils.basic.refers_to": [[311, null]], "baybe.utils.basic.register_hooks": [[312, null]], "baybe.utils.basic.to_tuple": [[313, null]], "baybe.utils.boolean": [[314, null]], "baybe.utils.boolean.check_if_in": [[315, null]], "baybe.utils.boolean.is_abstract": [[316, null]], "baybe.utils.boolean.strtobool": [[317, null]], "baybe.utils.chemistry": [[318, null]], "baybe.utils.chemistry.get_canonical_smiles": [[319, null]], "baybe.utils.chemistry.get_fingerprint_class": [[320, null]], "baybe.utils.chemistry.name_to_smiles": [[321, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[322, null]], "baybe.utils.conversion": [[323, null]], "baybe.utils.conversion.fraction_to_float": [[324, null]], "baybe.utils.conversion.nonstring_to_tuple": [[325, null]], "baybe.utils.dataframe": [[326, null]], "baybe.utils.dataframe.add_fake_measurements": [[327, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[328, null]], "baybe.utils.dataframe.add_parameter_noise": [[329, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[330, null]], "baybe.utils.dataframe.create_fake_input": [[331, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[332, null]], "baybe.utils.dataframe.df_drop_string_columns": [[333, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[334, null]], "baybe.utils.dataframe.filter_df": [[335, null]], "baybe.utils.dataframe.fuzzy_row_match": [[336, null]], "baybe.utils.dataframe.get_transform_objects": [[337, null]], "baybe.utils.dataframe.pretty_print_df": [[338, null]], "baybe.utils.dataframe.to_tensor": [[339, null]], "baybe.utils.interval": [[340, null]], "baybe.utils.interval.InfiniteIntervalError": [[341, null]], "baybe.utils.interval.convert_bounds": [[343, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[344, null]], "baybe.utils.memory": [[345, null]], "baybe.utils.memory.bytes_to_human_readable": [[346, null]], "baybe.utils.numerical": [[347, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[348, null]], "baybe.utils.numerical.DTypeFloatONNX": [[349, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[350, null]], "baybe.utils.numerical.closer_element": [[351, null]], "baybe.utils.numerical.closest_element": [[352, null]], "baybe.utils.numerical.geom_mean": [[353, null]], "baybe.utils.plotting": [[354, null]], "baybe.utils.plotting.create_example_plots": [[355, null]], "baybe.utils.plotting.indent": [[356, null]], "baybe.utils.plotting.to_string": [[357, null]], "baybe.utils.random": [[358, null]], "baybe.utils.random.set_random_seed": [[359, null]], "baybe.utils.random.temporary_seed": [[360, null]], "baybe.utils.sampling_algorithms": [[361, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[363, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[364, null]], "baybe.utils.scaling": [[365, null]], "baybe.utils.torch": [[367, null]], "baybe.utils.torch.DTypeFloatTorch": [[368, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[369, null]], "baybe.utils.validation": [[370, null]], "baybe.utils.validation.finite_float": [[371, null]], "baybe.utils.validation.non_inf_float": [[372, null]], "baybe.utils.validation.non_nan_float": [[373, null]], "baybe.utils.validation.validate_not_nan": [[374, null]], "baybe.utils.validation.validate_parameter_input": [[375, null]], "baybe.utils.validation.validate_target_input": [[376, null]], "classproperty": [[303, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[421, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedImprovement": [[12, null]], "qNegIntegratedPosteriorVariance": [[13, null]], "qNoisyExpectedImprovement": [[14, null]], "qPosteriorStandardDeviation": [[15, null]], "qProbabilityOfImprovement": [[16, null]], "qSimpleRegret": [[17, null]], "qThompsonSampling": [[18, null]], "qUpperConfidenceBound": [[19, null]], "\u201cPre-training\u201d stage": [[398, "pre-training-stage"]], "\u26a1 Quick Start": [[420, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[420, "maintainers"]], "\ud83d\udcbb Installation": [[420, "installation"]], "\ud83d\udcc4 License": [[420, "license"]], "\ud83d\udce1 Telemetry": [[420, "telemetry"]], "\ud83d\udd0b Batteries Included": [[420, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[420, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[21, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[31, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[32, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[33, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[61, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[62, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[63, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[64, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[65, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[66, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[67, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[68, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[69, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[70, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[71, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[72, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[73, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[74, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[75, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[76, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[77, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[78, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[79, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[84, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[91, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[92, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[93, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[95, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[96, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[97, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[99, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[100, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[101, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[102, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[104, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[105, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[106, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[111, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[116, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[121, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[126, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[152, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[154, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[155, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[156, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[157, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[158, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[159, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[160, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[163, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[176, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[199, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[204, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[240, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[241, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[249, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[257, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[259, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[277, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[279, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[285, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[303, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[300, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[341, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[342, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[366, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[61, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[62, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[63, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[64, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[65, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[66, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[67, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[68, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[69, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[70, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[71, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[72, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[73, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[74, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[75, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[76, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[77, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[78, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[79, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[133, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[134, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[136, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[341, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[160, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[21, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[21, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[129, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[327, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[328, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[329, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[104, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[176, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[176, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[176, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[154, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[330, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[160, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[84, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[106, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[104, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[105, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[91, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[269, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[270, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[254, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[20, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[22, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[24, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[27, "module-baybe.campaign", false]], "baybe.constraints": [[29, "module-baybe.constraints", false]], "baybe.constraints.base": [[30, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[36, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[40, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[43, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[47, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[57, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[60, "module-baybe.exceptions", false]], "baybe.insights": [[80, "module-baybe.insights", false]], "baybe.insights.shap": [[81, "module-baybe.insights.shap", false]], "baybe.kernels": [[89, "module-baybe.kernels", false]], "baybe.kernels.base": [[90, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[94, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[103, "module-baybe.kernels.composite", false]], "baybe.objective": [[107, "module-baybe.objective", false]], "baybe.objectives": [[109, "module-baybe.objectives", false]], "baybe.objectives.base": [[110, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[113, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[115, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[118, "module-baybe.objectives.enum", false]], "baybe.objectives.single": [[120, "module-baybe.objectives.single", false]], "baybe.parameters": [[122, "module-baybe.parameters", false]], "baybe.parameters.base": [[123, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[127, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[130, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[132, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[137, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[140, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[143, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[146, "module-baybe.parameters.validation", false]], "baybe.priors": [[150, "module-baybe.priors", false]], "baybe.priors.base": [[151, "module-baybe.priors.base", false]], "baybe.priors.basic": [[153, "module-baybe.priors.basic", false]], "baybe.recommenders": [[161, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[162, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[164, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[165, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[167, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[172, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[174, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[175, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[177, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[178, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[180, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[182, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[184, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[185, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[187, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[192, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[195, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[196, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[198, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[203, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[209, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[213, "module-baybe.serialization", false]], "baybe.serialization.core": [[214, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[221, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[223, "module-baybe.serialization.utils", false]], "baybe.simulation": [[226, "module-baybe.simulation", false]], "baybe.simulation.core": [[227, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[229, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[231, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[233, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[235, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[236, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[238, "module-baybe.surrogates.base", false]], "baybe.surrogates.custom": [[242, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[245, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[246, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[248, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[252, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[253, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[256, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[258, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[260, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[262, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[264, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[266, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[268, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[272, "module-baybe.surrogates.validation", false]], "baybe.targets": [[275, "module-baybe.targets", false]], "baybe.targets.base": [[276, "module-baybe.targets.base", false]], "baybe.targets.binary": [[278, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[281, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[284, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[286, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[290, "module-baybe.telemetry", false]], "baybe.utils": [[295, "module-baybe.utils", false]], "baybe.utils.augmentation": [[296, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[299, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[314, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[318, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[323, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[326, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[340, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[345, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[347, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[354, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[358, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[361, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[365, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[367, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[370, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[283, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[287, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[154, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[154, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[279, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[215, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[216, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[285, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[346, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[28, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[31, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[271, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[133, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[128, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[342, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[315, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[280, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[303, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[351, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[352, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[366, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[125, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[128, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[129, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[142, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[204, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[124, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[125, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[126, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[128, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[129, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[142, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[204, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[204, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[176, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[92, "baybe.kernels.base.CompositeKernel", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[155, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[37, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[342, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[199, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[200, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[44, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[45, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[124, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[25, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[343, "baybe.utils.interval.convert_bounds", false]], "converter (in module baybe.serialization.core)": [[217, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[342, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[355, "baybe.utils.plotting.create_example_plots", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[331, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[134, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[131, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[134, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[257, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[61, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[224, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[116, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[297, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[298, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[332, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[333, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[334, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[199, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[200, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[125, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[362, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[348, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[349, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[368, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[300, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[259, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[200, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[62, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[125, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[128, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[129, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[199, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[204, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[204, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[204, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[84, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[84, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[82, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[279, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[363, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[335, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[304, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[371, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[240, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[241, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[366, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[362, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[324, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[84, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[28, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[199, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[21, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[28, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[31, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[32, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[33, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[35, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[37, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[39, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[91, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[92, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[93, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[95, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[96, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[97, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[99, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[100, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[101, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[102, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[104, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[105, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[106, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[111, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[116, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[121, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[124, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[125, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[126, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[128, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[129, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[142, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[152, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[154, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[155, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[156, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[157, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[158, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[159, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[160, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[199, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[222, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[240, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[277, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[279, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[285, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[342, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[21, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[28, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[31, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[32, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[33, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[35, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[37, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[39, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[91, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[92, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[93, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[95, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[96, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[97, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[99, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[100, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[101, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[102, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[104, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[105, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[106, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[111, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[116, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[121, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[124, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[125, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[126, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[128, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[129, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[142, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[152, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[154, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[155, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[156, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[157, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[158, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[159, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[160, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[199, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[222, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[240, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[277, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[279, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[285, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[342, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[199, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[199, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[84, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[84, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[336, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[155, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[254, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[119, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[353, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[218, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[305, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[319, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[199, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[320, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[273, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[199, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[144, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[306, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[337, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[210, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[291, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[307, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[156, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[157, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[308, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[200, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatibilityerror": [[63, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[64, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[65, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[66, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[67, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "indent() (in module baybe.utils.plotting)": [[356, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infiniteintervalerror": [[341, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[133, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[342, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[68, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[69, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[316, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[309, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[342, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[31, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[32, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[33, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[35, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[124, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[125, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[126, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[128, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[129, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[142, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[342, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[31, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[32, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[33, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[35, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[124, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[125, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[126, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[128, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[129, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[142, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[292, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[342, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[342, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[126, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[342, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[124, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[125, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[126, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[128, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[129, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[342, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[87, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[166, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[93, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[249, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[96, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[97, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[100, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[101, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[102, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[96, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[97, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[100, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[101, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[102, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[283, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[288, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[95, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[158, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[159, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[158, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[230, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[342, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[88, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[255, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[366, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[282, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[310, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[96, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[282, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[119, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[28, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[204, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[166, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[282, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[285, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[70, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [20, "module-baybe.acquisition.base", false], [22, "module-baybe.acquisition.partial", false], [24, "module-baybe.acquisition.utils", false], [27, "module-baybe.campaign", false], [29, "module-baybe.constraints", false], [30, "module-baybe.constraints.base", false], [36, "module-baybe.constraints.conditions", false], [40, "module-baybe.constraints.continuous", false], [43, "module-baybe.constraints.deprecation", false], [47, "module-baybe.constraints.discrete", false], [57, "module-baybe.constraints.validation", false], [60, "module-baybe.exceptions", false], [80, "module-baybe.insights", false], [81, "module-baybe.insights.shap", false], [89, "module-baybe.kernels", false], [90, "module-baybe.kernels.base", false], [94, "module-baybe.kernels.basic", false], [103, "module-baybe.kernels.composite", false], [107, "module-baybe.objective", false], [109, "module-baybe.objectives", false], [110, "module-baybe.objectives.base", false], [113, "module-baybe.objectives.deprecation", false], [115, "module-baybe.objectives.desirability", false], [118, "module-baybe.objectives.enum", false], [120, "module-baybe.objectives.single", false], [122, "module-baybe.parameters", false], [123, "module-baybe.parameters.base", false], [127, "module-baybe.parameters.categorical", false], [130, "module-baybe.parameters.custom", false], [132, "module-baybe.parameters.enum", false], [137, "module-baybe.parameters.numerical", false], [140, "module-baybe.parameters.substance", false], [143, "module-baybe.parameters.utils", false], [146, "module-baybe.parameters.validation", false], [150, "module-baybe.priors", false], [151, "module-baybe.priors.base", false], [153, "module-baybe.priors.basic", false], [161, "module-baybe.recommenders", false], [162, "module-baybe.recommenders.base", false], [164, "module-baybe.recommenders.meta", false], [165, "module-baybe.recommenders.meta.base", false], [167, "module-baybe.recommenders.meta.sequential", false], [172, "module-baybe.recommenders.naive", false], [174, "module-baybe.recommenders.pure", false], [175, "module-baybe.recommenders.pure.base", false], [177, "module-baybe.recommenders.pure.bayesian", false], [178, "module-baybe.recommenders.pure.bayesian.base", false], [180, "module-baybe.recommenders.pure.bayesian.botorch", false], [182, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [184, "module-baybe.recommenders.pure.nonpredictive", false], [185, "module-baybe.recommenders.pure.nonpredictive.base", false], [187, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [192, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [195, "module-baybe.searchspace", false], [196, "module-baybe.searchspace.continuous", false], [198, "module-baybe.searchspace.core", false], [203, "module-baybe.searchspace.discrete", false], [209, "module-baybe.searchspace.validation", false], [213, "module-baybe.serialization", false], [214, "module-baybe.serialization.core", false], [221, "module-baybe.serialization.mixin", false], [223, "module-baybe.serialization.utils", false], [226, "module-baybe.simulation", false], [227, "module-baybe.simulation.core", false], [229, "module-baybe.simulation.lookup", false], [231, "module-baybe.simulation.scenarios", false], [233, "module-baybe.simulation.transfer_learning", false], [235, "module-baybe.surrogates", false], [236, "module-baybe.surrogates.bandit", false], [238, "module-baybe.surrogates.base", false], [242, "module-baybe.surrogates.custom", false], [245, "module-baybe.surrogates.gaussian_process", false], [246, "module-baybe.surrogates.gaussian_process.core", false], [248, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [252, "module-baybe.surrogates.gaussian_process.presets", false], [253, "module-baybe.surrogates.gaussian_process.presets.core", false], [256, "module-baybe.surrogates.gaussian_process.presets.default", false], [258, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [260, "module-baybe.surrogates.linear", false], [262, "module-baybe.surrogates.naive", false], [264, "module-baybe.surrogates.ngboost", false], [266, "module-baybe.surrogates.random_forest", false], [268, "module-baybe.surrogates.utils", false], [272, "module-baybe.surrogates.validation", false], [275, "module-baybe.targets", false], [276, "module-baybe.targets.base", false], [278, "module-baybe.targets.binary", false], [281, "module-baybe.targets.enum", false], [284, "module-baybe.targets.numerical", false], [286, "module-baybe.targets.transforms", false], [290, "module-baybe.telemetry", false], [295, "module-baybe.utils", false], [296, "module-baybe.utils.augmentation", false], [299, "module-baybe.utils.basic", false], [314, "module-baybe.utils.boolean", false], [318, "module-baybe.utils.chemistry", false], [323, "module-baybe.utils.conversion", false], [326, "module-baybe.utils.dataframe", false], [340, "module-baybe.utils.interval", false], [345, "module-baybe.utils.memory", false], [347, "module-baybe.utils.numerical", false], [354, "module-baybe.utils.plotting", false], [358, "module-baybe.utils.random", false], [361, "module-baybe.utils.sampling_algorithms", false], [365, "module-baybe.utils.scaling", false], [367, "module-baybe.utils.torch", false], [370, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.n_fits_done", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[124, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[125, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[126, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[128, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[129, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[277, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[279, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[285, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[321, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[71, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[372, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[373, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[83, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[325, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[72, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[159, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[73, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[74, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[96, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[101, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[285, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[75, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[111, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[108, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[99, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[99, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[133, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[39, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[76, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[106, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[106, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[126, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[206, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[207, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameterencoding (class in baybe.parameters.enum)": [[135, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[28, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[97, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[97, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[97, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[84, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[99, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[240, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[99, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[338, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[152, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[105, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[176, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[362, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[155, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[100, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[163, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[176, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[163, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "refers_to() (in module baybe.utils.basic)": [[311, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[244, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[312, "baybe.utils.basic.register_hooks", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "rffkernel (class in baybe.kernels.basic)": [[101, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[102, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[364, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[117, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[116, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[119, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[156, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[157, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[158, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[159, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[106, "baybe.kernels.composite.ScaleKernel", false]], "searchspace (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[199, "baybe.searchspace.core.SearchSpace", false]], "searchspacetype (class in baybe.searchspace.core)": [[200, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[219, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[38, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[183, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[225, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[222, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[359, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[85, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[86, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[84, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[160, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[228, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[232, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[234, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[121, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[141, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[322, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[160, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[145, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[26, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[317, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[46, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[114, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[197, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[136, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[142, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[279, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[31, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[32, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[33, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[126, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[277, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[279, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[285, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[240, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[240, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[241, "baybe.surrogates.base.SurrogateProtocol", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[277, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[282, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[28, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[111, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[116, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[121, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[283, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[129, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[293, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[294, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[360, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[39, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[39, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[21, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[240, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[241, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[21, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[31, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[32, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[33, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[91, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[92, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[93, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[95, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[96, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[97, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[99, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[100, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[101, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[102, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[104, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[105, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[106, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[111, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[116, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[121, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[126, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[152, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[154, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[155, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[156, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[157, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[158, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[159, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[160, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[199, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[222, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[240, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[277, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[279, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[285, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[342, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[91, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[92, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[93, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[95, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[96, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[97, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[99, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[100, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[101, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[102, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[104, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[105, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[106, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[91, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[92, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[93, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[95, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[96, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[97, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[99, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[100, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[101, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[102, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[104, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[105, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[106, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[152, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[154, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[155, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[156, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[157, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[158, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[159, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[160, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[21, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[31, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[32, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[33, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[91, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[92, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[93, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[95, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[96, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[97, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[99, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[100, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[101, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[102, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[104, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[105, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[106, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[111, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[116, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[121, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[126, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[152, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[154, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[155, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[156, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[157, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[158, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[159, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[160, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[199, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[222, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[240, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[277, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[279, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[285, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[342, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[251, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[342, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[277, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[279, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[285, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[112, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[126, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[201, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[357, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[342, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[339, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[342, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[313, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[39, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[111, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[116, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[121, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[199, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[277, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[279, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[285, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[366, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[285, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[283, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[289, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[77, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[78, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[301, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[302, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[220, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[79, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[342, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[344, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[84, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[58, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[28, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[59, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[274, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[147, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[148, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[374, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[375, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[211, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[212, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[202, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[208, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[376, "baybe.utils.validation.validate_target_input", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[149, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[125, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[128, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[129, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[142, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[95, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[95, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[350, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[369, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[116, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [27, 0, 0, "-", "campaign"], [29, 0, 0, "-", "constraints"], [60, 0, 0, "-", "exceptions"], [80, 0, 0, "-", "insights"], [89, 0, 0, "-", "kernels"], [107, 0, 0, "-", "objective"], [109, 0, 0, "-", "objectives"], [122, 0, 0, "-", "parameters"], [150, 0, 0, "-", "priors"], [161, 0, 0, "-", "recommenders"], [195, 0, 0, "-", "searchspace"], [213, 0, 0, "-", "serialization"], [226, 0, 0, "-", "simulation"], [235, 0, 0, "-", "surrogates"], [275, 0, 0, "-", "targets"], [290, 0, 0, "-", "telemetry"], [295, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [20, 0, 0, "-", "base"], [22, 0, 0, "-", "partial"], [24, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedImprovement"], [13, 1, 1, "", "qNegIntegratedPosteriorVariance"], [14, 1, 1, "", "qNoisyExpectedImprovement"], [15, 1, 1, "", "qPosteriorStandardDeviation"], [16, 1, 1, "", "qProbabilityOfImprovement"], [17, 1, 1, "", "qSimpleRegret"], [18, 1, 1, "", "qThompsonSampling"], [19, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 2, 1, "", "get_integration_points"], [13, 3, 1, "", "sampling_fraction"], [13, 3, 1, "", "sampling_method"], [13, 3, 1, "", "sampling_n_points"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[13, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "n_mc_samples"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 3, 1, "", "beta"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.base": [[21, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.partial": [[23, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "botorch_acqf"], [23, 3, 1, "", "pin_discrete"], [23, 3, 1, "", "pinned_part"], [23, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[23, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[25, 5, 1, "", "convert_acqf"], [26, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[28, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "add_measurements"], [28, 3, 1, "", "allow_recommending_already_measured"], [28, 3, 1, "", "allow_recommending_already_recommended"], [28, 3, 1, "", "allow_recommending_pending_experiments"], [28, 2, 1, "", "from_config"], [28, 2, 1, "", "from_dict"], [28, 2, 1, "", "from_json"], [28, 2, 1, "", "get_surrogate"], [28, 6, 1, "", "measurements"], [28, 3, 1, "", "n_batches_done"], [28, 3, 1, "", "n_fits_done"], [28, 3, 1, "", "objective"], [28, 6, 1, "", "parameters"], [28, 2, 1, "", "posterior"], [28, 2, 1, "", "recommend"], [28, 3, 1, "", "recommender"], [28, 3, 1, "", "searchspace"], [28, 6, 1, "", "targets"], [28, 2, 1, "", "to_dict"], [28, 2, 1, "", "to_json"], [28, 2, 1, "", "toggle_discrete_candidates"], [28, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[28, 4, 1, "", "data"], [28, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[28, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[28, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[28, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_surrogate.params": [[28, 4, 1, "", "batch_size"], [28, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[28, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.recommend.params": [[28, 4, 1, "", "batch_size"], [28, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[28, 4, 1, "", "complement"], [28, 4, 1, "", "constraints"], [28, 4, 1, "", "dry_run"], [28, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[28, 4, 1, "", "config_json"]], "baybe.constraints": [[30, 0, 0, "-", "base"], [36, 0, 0, "-", "conditions"], [40, 0, 0, "-", "continuous"], [43, 0, 0, "-", "deprecation"], [47, 0, 0, "-", "discrete"], [57, 0, 0, "-", "validation"]], "baybe.constraints.base": [[31, 1, 1, "", "CardinalityConstraint"], [32, 1, 1, "", "Constraint"], [33, 1, 1, "", "ContinuousConstraint"], [34, 1, 1, "", "ContinuousNonlinearConstraint"], [35, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "eval_during_augmentation"], [31, 3, 1, "", "eval_during_creation"], [31, 3, 1, "", "eval_during_modeling"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 6, 1, "", "is_continuous"], [31, 6, 1, "", "is_discrete"], [31, 3, 1, "", "max_cardinality"], [31, 3, 1, "", "min_cardinality"], [31, 3, 1, "", "numerical_only"], [31, 3, 1, "", "parameters"], [31, 2, 1, "", "summary"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[31, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 6, 1, "", "is_continuous"], [32, 6, 1, "", "is_discrete"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[32, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[32, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 6, 1, "", "is_continuous"], [33, 6, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[33, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[33, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 2, 1, "", "get_invalid"], [35, 2, 1, "", "get_invalid_polars"], [35, 2, 1, "", "get_valid"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[35, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[35, 4, 1, "", "df"]], "baybe.constraints.conditions": [[37, 1, 1, "", "Condition"], [38, 1, 1, "", "SubSelectionCondition"], [39, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[37, 2, 1, "", "evaluate"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"], [37, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[37, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[37, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 6, 1, "", "selection"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[38, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[38, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "evaluate"], [39, 2, 1, "", "from_dict"], [39, 2, 1, "", "from_json"], [39, 3, 1, "", "operator"], [39, 3, 1, "", "threshold"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "to_json"], [39, 2, 1, "", "to_polars"], [39, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[39, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[39, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[39, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[39, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[41, 1, 1, "", "ContinuousCardinalityConstraint"], [42, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 3, 1, "", "max_cardinality"], [41, 3, 1, "", "min_cardinality"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "parameters"], [41, 2, 1, "", "sample_inactive_parameters"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[41, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[42, 2, 1, "", "__init__"], [42, 3, 1, "", "coefficients"], [42, 3, 1, "", "eval_during_augmentation"], [42, 3, 1, "", "eval_during_creation"], [42, 3, 1, "", "eval_during_modeling"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 6, 1, "", "is_continuous"], [42, 6, 1, "", "is_discrete"], [42, 6, 1, "", "is_eq"], [42, 3, 1, "", "numerical_only"], [42, 3, 1, "", "operator"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "rhs"], [42, 2, 1, "", "summary"], [42, 2, 1, "", "to_botorch"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[42, 4, 1, "", "idx_offset"], [42, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[44, 5, 1, "", "ContinuousLinearEqualityConstraint"], [45, 5, 1, "", "ContinuousLinearInequalityConstraint"], [46, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[48, 1, 1, "", "DiscreteCardinalityConstraint"], [49, 1, 1, "", "DiscreteCustomConstraint"], [50, 1, 1, "", "DiscreteDependenciesConstraint"], [51, 1, 1, "", "DiscreteExcludeConstraint"], [52, 1, 1, "", "DiscreteLinkedParametersConstraint"], [53, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [54, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [55, 1, 1, "", "DiscreteProductConstraint"], [56, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 2, 1, "", "get_invalid"], [48, 2, 1, "", "get_invalid_polars"], [48, 2, 1, "", "get_valid"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 3, 1, "", "max_cardinality"], [48, 3, 1, "", "min_cardinality"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "parameters"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[48, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[48, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[48, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 2, 1, "", "get_valid"], [49, 6, 1, "", "is_continuous"], [49, 6, 1, "", "is_discrete"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"], [49, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[49, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[49, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[49, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[49, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "affected_parameters"], [50, 3, 1, "", "conditions"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 2, 1, "", "get_valid"], [50, 6, 1, "", "is_continuous"], [50, 6, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 3, 1, "", "permutation_invariant"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[50, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[50, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[50, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[50, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "combiner"], [51, 3, 1, "", "conditions"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "dependencies"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "condition"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "condition"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.validation": [[58, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [59, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[58, 4, 1, "", "constraints"]], "baybe.exceptions": [[61, 7, 1, "", "DeprecationError"], [62, 7, 1, "", "EmptySearchSpaceError"], [63, 7, 1, "", "IncompatibilityError"], [64, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [65, 7, 1, "", "IncompatibleArgumentError"], [66, 7, 1, "", "IncompatibleExplainerError"], [67, 7, 1, "", "IncompatibleSearchSpaceError"], [68, 7, 1, "", "InvalidSurrogateModelError"], [69, 7, 1, "", "InvalidTargetValueError"], [70, 7, 1, "", "ModelNotTrainedError"], [71, 7, 1, "", "NoMCAcquisitionFunctionError"], [72, 7, 1, "", "NoRecommendersLeftError"], [73, 7, 1, "", "NotEnoughPointsLeftError"], [74, 7, 1, "", "NothingToSimulateError"], [75, 7, 1, "", "NumericalUnderflowError"], [76, 7, 1, "", "OptionalImportError"], [77, 7, 1, "", "UnidentifiedSubclassError"], [78, 7, 1, "", "UnmatchedAttributeError"], [79, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.insights": [[81, 0, 0, "-", "shap"]], "baybe.insights.shap": [[82, 8, 1, "", "EXPLAINERS"], [83, 8, 1, "", "NON_SHAP_EXPLAINERS"], [84, 1, 1, "", "SHAPInsight"], [85, 8, 1, "", "SHAP_EXPLAINERS"], [86, 8, 1, "", "SHAP_PLOTS"], [87, 5, 1, "", "is_shap_explainer"], [88, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[84, 2, 1, "", "__init__"], [84, 3, 1, "", "background_data"], [84, 2, 1, "", "explain"], [84, 3, 1, "", "explainer"], [84, 2, 1, "", "from_campaign"], [84, 2, 1, "", "from_recommender"], [84, 2, 1, "", "from_surrogate"], [84, 2, 1, "", "plot"], [84, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[84, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[84, 4, 1, "", "campaign"], [84, 4, 1, "", "explainer_cls"], [84, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[84, 4, 1, "", "explainer_cls"], [84, 4, 1, "", "measurements"], [84, 4, 1, "", "objective"], [84, 4, 1, "", "recommender"], [84, 4, 1, "", "searchspace"], [84, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[84, 4, 1, "", "**kwargs"], [84, 4, 1, "", "data"], [84, 4, 1, "", "explanation_index"], [84, 4, 1, "", "plot_type"], [84, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[88, 4, 1, "", "data"], [88, 4, 1, "", "explainer_cls"], [88, 4, 1, "", "surrogate"], [88, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[90, 0, 0, "-", "base"], [94, 0, 0, "-", "basic"], [103, 0, 0, "-", "composite"]], "baybe.kernels.base": [[91, 1, 1, "", "BasicKernel"], [92, 1, 1, "", "CompositeKernel"], [93, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "from_dict"], [91, 2, 1, "", "from_json"], [91, 2, 1, "", "to_dict"], [91, 2, 1, "", "to_factory"], [91, 2, 1, "", "to_gpytorch"], [91, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[91, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[91, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "from_dict"], [92, 2, 1, "", "from_json"], [92, 2, 1, "", "to_dict"], [92, 2, 1, "", "to_factory"], [92, 2, 1, "", "to_gpytorch"], [92, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[92, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[92, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "from_dict"], [93, 2, 1, "", "from_json"], [93, 2, 1, "", "to_dict"], [93, 2, 1, "", "to_factory"], [93, 2, 1, "", "to_gpytorch"], [93, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[93, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[93, 4, 1, "", "string"]], "baybe.kernels.basic": [[95, 1, 1, "", "LinearKernel"], [96, 1, 1, "", "MaternKernel"], [97, 1, 1, "", "PeriodicKernel"], [98, 1, 1, "", "PiecewisePolynomialKernel"], [99, 1, 1, "", "PolynomialKernel"], [100, 1, 1, "", "RBFKernel"], [101, 1, 1, "", "RFFKernel"], [102, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "from_dict"], [95, 2, 1, "", "from_json"], [95, 2, 1, "", "to_dict"], [95, 2, 1, "", "to_factory"], [95, 2, 1, "", "to_gpytorch"], [95, 2, 1, "", "to_json"], [95, 3, 1, "", "variance_initial_value"], [95, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[95, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[95, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "from_dict"], [96, 2, 1, "", "from_json"], [96, 3, 1, "", "lengthscale_initial_value"], [96, 3, 1, "", "lengthscale_prior"], [96, 3, 1, "", "nu"], [96, 2, 1, "", "to_dict"], [96, 2, 1, "", "to_factory"], [96, 2, 1, "", "to_gpytorch"], [96, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[96, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[96, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "from_dict"], [97, 2, 1, "", "from_json"], [97, 3, 1, "", "lengthscale_initial_value"], [97, 3, 1, "", "lengthscale_prior"], [97, 3, 1, "", "period_length_initial_value"], [97, 3, 1, "", "period_length_prior"], [97, 2, 1, "", "to_dict"], [97, 2, 1, "", "to_factory"], [97, 2, 1, "", "to_gpytorch"], [97, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[97, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[97, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "from_dict"], [98, 2, 1, "", "from_json"], [98, 3, 1, "", "lengthscale_initial_value"], [98, 3, 1, "", "lengthscale_prior"], [98, 3, 1, "", "q"], [98, 2, 1, "", "to_dict"], [98, 2, 1, "", "to_factory"], [98, 2, 1, "", "to_gpytorch"], [98, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[98, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[98, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "from_dict"], [99, 2, 1, "", "from_json"], [99, 3, 1, "", "offset_initial_value"], [99, 3, 1, "", "offset_prior"], [99, 3, 1, "", "power"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "to_factory"], [99, 2, 1, "", "to_gpytorch"], [99, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[99, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[99, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "from_dict"], [100, 2, 1, "", "from_json"], [100, 3, 1, "", "lengthscale_initial_value"], [100, 3, 1, "", "lengthscale_prior"], [100, 2, 1, "", "to_dict"], [100, 2, 1, "", "to_factory"], [100, 2, 1, "", "to_gpytorch"], [100, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[100, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[100, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "from_dict"], [101, 2, 1, "", "from_json"], [101, 3, 1, "", "lengthscale_initial_value"], [101, 3, 1, "", "lengthscale_prior"], [101, 3, 1, "", "num_samples"], [101, 2, 1, "", "to_dict"], [101, 2, 1, "", "to_factory"], [101, 2, 1, "", "to_gpytorch"], [101, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[101, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[101, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "from_dict"], [102, 2, 1, "", "from_json"], [102, 3, 1, "", "lengthscale_initial_value"], [102, 3, 1, "", "lengthscale_prior"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "to_factory"], [102, 2, 1, "", "to_gpytorch"], [102, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[102, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[102, 4, 1, "", "string"]], "baybe.kernels.composite": [[104, 1, 1, "", "AdditiveKernel"], [105, 1, 1, "", "ProductKernel"], [106, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[104, 2, 1, "", "__init__"], [104, 3, 1, "", "base_kernels"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[105, 2, 1, "", "__init__"], [105, 3, 1, "", "base_kernels"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[106, 2, 1, "", "__init__"], [106, 3, 1, "", "base_kernel"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 3, 1, "", "outputscale_initial_value"], [106, 3, 1, "", "outputscale_prior"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[106, 4, 1, "", "string"]], "baybe.objective": [[108, 5, 1, "", "Objective"]], "baybe.objectives": [[110, 0, 0, "-", "base"], [113, 0, 0, "-", "deprecation"], [115, 0, 0, "-", "desirability"], [118, 0, 0, "-", "enum"], [120, 0, 0, "-", "single"]], "baybe.objectives.base": [[111, 1, 1, "", "Objective"], [112, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 6, 1, "", "targets"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_json"], [111, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[111, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[111, 4, 1, "", "allow_extra"], [111, 4, 1, "", "allow_missing"], [111, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[114, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[116, 1, 1, "", "DesirabilityObjective"], [117, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 3, 1, "", "scalarizer"], [116, 6, 1, "", "targets"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_json"], [116, 2, 1, "", "transform"], [116, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[116, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[116, 4, 1, "", "allow_extra"], [116, 4, 1, "", "allow_missing"], [116, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[117, 4, 1, "", "scalarizer"], [117, 4, 1, "", "values"], [117, 4, 1, "", "weights"]], "baybe.objectives.enum": [[119, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[119, 3, 1, "", "GEOM_MEAN"], [119, 3, 1, "", "MEAN"]], "baybe.objectives.single": [[121, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "from_dict"], [121, 2, 1, "", "from_json"], [121, 6, 1, "", "targets"], [121, 2, 1, "", "to_dict"], [121, 2, 1, "", "to_json"], [121, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[121, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[121, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[121, 4, 1, "", "allow_extra"], [121, 4, 1, "", "allow_missing"], [121, 4, 1, "", "df"]], "baybe.parameters": [[123, 0, 0, "-", "base"], [127, 0, 0, "-", "categorical"], [130, 0, 0, "-", "custom"], [132, 0, 0, "-", "enum"], [137, 0, 0, "-", "numerical"], [140, 0, 0, "-", "substance"], [143, 0, 0, "-", "utils"], [146, 0, 0, "-", "validation"]], "baybe.parameters.base": [[124, 1, 1, "", "ContinuousParameter"], [125, 1, 1, "", "DiscreteParameter"], [126, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[124, 2, 1, "", "__init__"], [124, 6, 1, "", "comp_rep_columns"], [124, 2, 1, "", "from_dict"], [124, 2, 1, "", "from_json"], [124, 6, 1, "", "is_continuous"], [124, 6, 1, "", "is_discrete"], [124, 2, 1, "", "is_in_range"], [124, 3, 1, "", "is_numerical"], [124, 3, 1, "", "name"], [124, 2, 1, "", "summary"], [124, 2, 1, "", "to_dict"], [124, 2, 1, "", "to_json"], [124, 2, 1, "", "to_searchspace"], [124, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[124, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[124, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[124, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[125, 2, 1, "", "__init__"], [125, 6, 1, "", "comp_df"], [125, 6, 1, "", "comp_rep_columns"], [125, 3, 1, "", "encoding"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 6, 1, "", "is_continuous"], [125, 6, 1, "", "is_discrete"], [125, 2, 1, "", "is_in_range"], [125, 3, 1, "", "is_numerical"], [125, 3, 1, "", "name"], [125, 2, 1, "", "summary"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "to_searchspace"], [125, 2, 1, "", "to_subspace"], [125, 2, 1, "", "transform"], [125, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[125, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[125, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[125, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[125, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[126, 2, 1, "", "__init__"], [126, 6, 1, "", "comp_rep_columns"], [126, 2, 1, "", "from_dict"], [126, 2, 1, "", "from_json"], [126, 6, 1, "", "is_continuous"], [126, 6, 1, "", "is_discrete"], [126, 2, 1, "", "is_in_range"], [126, 3, 1, "", "is_numerical"], [126, 3, 1, "", "name"], [126, 2, 1, "", "summary"], [126, 2, 1, "", "to_dict"], [126, 2, 1, "", "to_json"], [126, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[126, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[126, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[126, 4, 1, "", "item"]], "baybe.parameters.categorical": [[128, 1, 1, "", "CategoricalParameter"], [129, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[128, 2, 1, "", "__init__"], [128, 6, 1, "", "comp_df"], [128, 6, 1, "", "comp_rep_columns"], [128, 3, 1, "", "encoding"], [128, 2, 1, "", "from_dict"], [128, 2, 1, "", "from_json"], [128, 6, 1, "", "is_continuous"], [128, 6, 1, "", "is_discrete"], [128, 2, 1, "", "is_in_range"], [128, 3, 1, "", "is_numerical"], [128, 3, 1, "", "name"], [128, 2, 1, "", "summary"], [128, 2, 1, "", "to_dict"], [128, 2, 1, "", "to_json"], [128, 2, 1, "", "to_searchspace"], [128, 2, 1, "", "to_subspace"], [128, 2, 1, "", "transform"], [128, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[128, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[128, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[128, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[128, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[129, 2, 1, "", "__init__"], [129, 3, 1, "", "active_values"], [129, 6, 1, "", "comp_df"], [129, 6, 1, "", "comp_rep_columns"], [129, 3, 1, "", "encoding"], [129, 2, 1, "", "from_dict"], [129, 2, 1, "", "from_json"], [129, 6, 1, "", "is_continuous"], [129, 6, 1, "", "is_discrete"], [129, 2, 1, "", "is_in_range"], [129, 3, 1, "", "is_numerical"], [129, 3, 1, "", "name"], [129, 2, 1, "", "summary"], [129, 2, 1, "", "to_dict"], [129, 2, 1, "", "to_json"], [129, 2, 1, "", "to_searchspace"], [129, 2, 1, "", "to_subspace"], [129, 2, 1, "", "transform"], [129, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[129, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[129, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[129, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[129, 4, 1, "", "series"]], "baybe.parameters.custom": [[131, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[131, 2, 1, "", "__init__"], [131, 6, 1, "", "comp_df"], [131, 6, 1, "", "comp_rep_columns"], [131, 3, 1, "", "data"], [131, 3, 1, "", "decorrelate"], [131, 3, 1, "", "encoding"], [131, 2, 1, "", "from_dict"], [131, 2, 1, "", "from_json"], [131, 6, 1, "", "is_continuous"], [131, 6, 1, "", "is_discrete"], [131, 2, 1, "", "is_in_range"], [131, 3, 1, "", "is_numerical"], [131, 3, 1, "", "name"], [131, 2, 1, "", "summary"], [131, 2, 1, "", "to_dict"], [131, 2, 1, "", "to_json"], [131, 2, 1, "", "to_searchspace"], [131, 2, 1, "", "to_subspace"], [131, 2, 1, "", "transform"], [131, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[131, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[131, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[131, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[131, 4, 1, "", "series"]], "baybe.parameters.enum": [[133, 1, 1, "", "CategoricalEncoding"], [134, 1, 1, "", "CustomEncoding"], [135, 1, 1, "", "ParameterEncoding"], [136, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[133, 3, 1, "", "INT"], [133, 3, 1, "", "OHE"], [133, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[134, 3, 1, "", "CUSTOM"], [134, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[136, 3, 1, "", "ATOMPAIR"], [136, 3, 1, "", "AUTOCORR"], [136, 3, 1, "", "AVALON"], [136, 3, 1, "", "BCUT2D"], [136, 3, 1, "", "E3FP"], [136, 3, 1, "", "ECFP"], [136, 3, 1, "", "ELECTROSHAPE"], [136, 3, 1, "", "ERG"], [136, 3, 1, "", "ESTATE"], [136, 3, 1, "", "FUNCTIONALGROUPS"], [136, 3, 1, "", "GETAWAY"], [136, 3, 1, "", "GHOSECRIPPEN"], [136, 3, 1, "", "KLEKOTAROTH"], [136, 3, 1, "", "LAGGNER"], [136, 3, 1, "", "LAYERED"], [136, 3, 1, "", "LINGO"], [136, 3, 1, "", "MACCS"], [136, 3, 1, "", "MAP"], [136, 3, 1, "", "MHFP"], [136, 3, 1, "", "MORDRED"], [136, 3, 1, "", "MORGAN_FP"], [136, 3, 1, "", "MORSE"], [136, 3, 1, "", "MQNS"], [136, 3, 1, "", "PATTERN"], [136, 3, 1, "", "PHARMACOPHORE"], [136, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [136, 3, 1, "", "PUBCHEM"], [136, 3, 1, "", "RDF"], [136, 3, 1, "", "RDKIT"], [136, 3, 1, "", "RDKIT2DDESCRIPTORS"], [136, 3, 1, "", "RDKITFINGERPRINT"], [136, 3, 1, "", "SECFP"], [136, 3, 1, "", "TOPOLOGICALTORSION"], [136, 3, 1, "", "USR"], [136, 3, 1, "", "USRCAT"], [136, 3, 1, "", "VSA"], [136, 3, 1, "", "WHIM"], [136, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[138, 1, 1, "", "NumericalContinuousParameter"], [139, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[138, 2, 1, "", "__init__"], [138, 3, 1, "", "bounds"], [138, 6, 1, "", "comp_rep_columns"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 6, 1, "", "is_continuous"], [138, 6, 1, "", "is_discrete"], [138, 2, 1, "", "is_in_range"], [138, 3, 1, "", "is_numerical"], [138, 3, 1, "", "name"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_json"], [138, 2, 1, "", "to_searchspace"], [138, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[138, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[138, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[138, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[139, 2, 1, "", "__init__"], [139, 6, 1, "", "comp_df"], [139, 6, 1, "", "comp_rep_columns"], [139, 3, 1, "", "encoding"], [139, 2, 1, "", "from_dict"], [139, 2, 1, "", "from_json"], [139, 6, 1, "", "is_continuous"], [139, 6, 1, "", "is_discrete"], [139, 2, 1, "", "is_in_range"], [139, 3, 1, "", "is_numerical"], [139, 3, 1, "", "name"], [139, 2, 1, "", "summary"], [139, 2, 1, "", "to_dict"], [139, 2, 1, "", "to_json"], [139, 2, 1, "", "to_searchspace"], [139, 2, 1, "", "to_subspace"], [139, 3, 1, "", "tolerance"], [139, 2, 1, "", "transform"], [139, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[139, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[139, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[139, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[139, 4, 1, "", "series"]], "baybe.parameters.substance": [[141, 3, 1, "", "Smiles"], [142, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "comp_df"], [142, 6, 1, "", "comp_rep_columns"], [142, 3, 1, "", "data"], [142, 3, 1, "", "decorrelate"], [142, 3, 1, "", "encoding"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "kwargs_conformer"], [142, 3, 1, "", "kwargs_fingerprint"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 2, 1, "", "to_subspace"], [142, 2, 1, "", "transform"], [142, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[142, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[142, 4, 1, "", "series"]], "baybe.parameters.utils": [[144, 5, 1, "", "get_parameters_from_dataframe"], [145, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[144, 4, 1, "", "df"], [144, 4, 1, "", "factory"], [144, 4, 1, "", "parameters"]], "baybe.parameters.validation": [[147, 5, 1, "", "validate_decorrelation"], [148, 5, 1, "", "validate_is_finite"], [149, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[151, 0, 0, "-", "base"], [153, 0, 0, "-", "basic"]], "baybe.priors.base": [[152, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_gpytorch"], [152, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[152, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[152, 4, 1, "", "string"]], "baybe.priors.basic": [[154, 1, 1, "", "BetaPrior"], [155, 1, 1, "", "GammaPrior"], [156, 1, 1, "", "HalfCauchyPrior"], [157, 1, 1, "", "HalfNormalPrior"], [158, 1, 1, "", "LogNormalPrior"], [159, 1, 1, "", "NormalPrior"], [160, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[154, 2, 1, "", "__init__"], [154, 3, 1, "", "alpha"], [154, 3, 1, "", "beta"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_gpytorch"], [154, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[154, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[155, 2, 1, "", "__init__"], [155, 3, 1, "", "concentration"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 3, 1, "", "rate"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_gpytorch"], [155, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[155, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 3, 1, "", "scale"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_gpytorch"], [156, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[156, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[156, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "from_dict"], [157, 2, 1, "", "from_json"], [157, 3, 1, "", "scale"], [157, 2, 1, "", "to_dict"], [157, 2, 1, "", "to_gpytorch"], [157, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[157, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[157, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "from_dict"], [158, 2, 1, "", "from_json"], [158, 3, 1, "", "loc"], [158, 3, 1, "", "scale"], [158, 2, 1, "", "to_dict"], [158, 2, 1, "", "to_gpytorch"], [158, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[158, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[158, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "from_dict"], [159, 2, 1, "", "from_json"], [159, 3, 1, "", "loc"], [159, 3, 1, "", "scale"], [159, 2, 1, "", "to_dict"], [159, 2, 1, "", "to_gpytorch"], [159, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[159, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[159, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[160, 2, 1, "", "__init__"], [160, 3, 1, "", "a"], [160, 3, 1, "", "b"], [160, 2, 1, "", "from_dict"], [160, 2, 1, "", "from_json"], [160, 3, 1, "", "sigma"], [160, 2, 1, "", "to_dict"], [160, 2, 1, "", "to_gpytorch"], [160, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[160, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[160, 4, 1, "", "string"]], "baybe.recommenders": [[162, 0, 0, "-", "base"], [164, 0, 0, "-", "meta"], [172, 0, 0, "-", "naive"], [174, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[163, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[163, 4, 1, "", "batch_size"], [163, 4, 1, "", "measurements"], [163, 4, 1, "", "objective"], [163, 4, 1, "", "pending_experiments"], [163, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[165, 0, 0, "-", "base"], [167, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[166, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "from_dict"], [166, 2, 1, "", "from_json"], [166, 2, 1, "", "get_current_recommender"], [166, 2, 1, "", "get_next_recommender"], [166, 2, 1, "", "get_non_meta_recommender"], [166, 6, 1, "", "is_stateful"], [166, 2, 1, "", "recommend"], [166, 2, 1, "", "select_recommender"], [166, 2, 1, "", "to_dict"], [166, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[166, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[166, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[168, 1, 1, "", "BaseSequentialMetaRecommender"], [169, 1, 1, "", "SequentialMetaRecommender"], [170, 1, 1, "", "StreamingSequentialMetaRecommender"], [171, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "from_dict"], [168, 2, 1, "", "from_json"], [168, 2, 1, "", "get_current_recommender"], [168, 2, 1, "", "get_next_recommender"], [168, 2, 1, "", "get_non_meta_recommender"], [168, 6, 1, "", "is_stateful"], [168, 2, 1, "", "recommend"], [168, 2, 1, "", "select_recommender"], [168, 2, 1, "", "to_dict"], [168, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[168, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[168, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 2, 1, "", "get_current_recommender"], [169, 2, 1, "", "get_next_recommender"], [169, 2, 1, "", "get_non_meta_recommender"], [169, 6, 1, "", "is_stateful"], [169, 3, 1, "", "mode"], [169, 2, 1, "", "recommend"], [169, 3, 1, "", "recommenders"], [169, 2, 1, "", "select_recommender"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[169, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 2, 1, "", "get_current_recommender"], [170, 2, 1, "", "get_next_recommender"], [170, 2, 1, "", "get_non_meta_recommender"], [170, 6, 1, "", "is_stateful"], [170, 2, 1, "", "recommend"], [170, 3, 1, "", "recommenders"], [170, 2, 1, "", "select_recommender"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[170, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 2, 1, "", "get_current_recommender"], [171, 2, 1, "", "get_next_recommender"], [171, 2, 1, "", "get_non_meta_recommender"], [171, 3, 1, "", "initial_recommender"], [171, 6, 1, "", "is_stateful"], [171, 2, 1, "", "recommend"], [171, 3, 1, "", "recommender"], [171, 3, 1, "", "remain_switched"], [171, 2, 1, "", "select_recommender"], [171, 3, 1, "", "switch_after"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[171, 4, 1, "", "string"]], "baybe.recommenders.naive": [[173, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[173, 2, 1, "", "__init__"], [173, 6, 1, "", "allow_recommending_already_measured"], [173, 6, 1, "", "allow_recommending_pending_experiments"], [173, 6, 1, "", "allow_repeated_recommendations"], [173, 3, 1, "", "compatibility"], [173, 3, 1, "", "cont_recommender"], [173, 3, 1, "", "disc_recommender"], [173, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[173, 4, 1, "", "batch_size"], [173, 4, 1, "", "measurements"], [173, 4, 1, "", "objective"], [173, 4, 1, "", "pending_experiments"], [173, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[175, 0, 0, "-", "base"], [177, 0, 0, "-", "bayesian"], [184, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[176, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[176, 2, 1, "", "__init__"], [176, 6, 1, "", "allow_recommending_already_measured"], [176, 6, 1, "", "allow_recommending_pending_experiments"], [176, 6, 1, "", "allow_repeated_recommendations"], [176, 3, 1, "", "compatibility"], [176, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[176, 4, 1, "", "batch_size"], [176, 4, 1, "", "measurements"], [176, 4, 1, "", "objective"], [176, 4, 1, "", "pending_experiments"], [176, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[178, 0, 0, "-", "base"], [180, 0, 0, "-", "botorch"], [182, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[179, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[179, 2, 1, "", "__init__"], [179, 3, 1, "", "acquisition_function"], [179, 3, 1, "", "acquisition_function_cls"], [179, 6, 1, "", "allow_recommending_already_measured"], [179, 6, 1, "", "allow_recommending_pending_experiments"], [179, 6, 1, "", "allow_repeated_recommendations"], [179, 3, 1, "", "compatibility"], [179, 2, 1, "", "get_surrogate"], [179, 2, 1, "", "recommend"], [179, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[179, 4, 1, "", "batch_size"], [179, 4, 1, "", "measurements"], [179, 4, 1, "", "objective"], [179, 4, 1, "", "pending_experiments"], [179, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[181, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[181, 2, 1, "", "__init__"], [181, 3, 1, "", "acquisition_function"], [181, 3, 1, "", "acquisition_function_cls"], [181, 6, 1, "", "allow_recommending_already_measured"], [181, 6, 1, "", "allow_recommending_pending_experiments"], [181, 6, 1, "", "allow_repeated_recommendations"], [181, 3, 1, "", "compatibility"], [181, 2, 1, "", "get_surrogate"], [181, 3, 1, "", "hybrid_sampler"], [181, 3, 1, "", "n_raw_samples"], [181, 3, 1, "", "n_restarts"], [181, 2, 1, "", "recommend"], [181, 3, 1, "", "sampling_percentage"], [181, 3, 1, "", "sequential_continuous"], [181, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[181, 4, 1, "", "batch_size"], [181, 4, 1, "", "measurements"], [181, 4, 1, "", "objective"], [181, 4, 1, "", "pending_experiments"], [181, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[183, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[185, 0, 0, "-", "base"], [187, 0, 0, "-", "clustering"], [192, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[186, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[186, 2, 1, "", "__init__"], [186, 6, 1, "", "allow_recommending_already_measured"], [186, 6, 1, "", "allow_recommending_pending_experiments"], [186, 6, 1, "", "allow_repeated_recommendations"], [186, 3, 1, "", "compatibility"], [186, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[186, 4, 1, "", "batch_size"], [186, 4, 1, "", "measurements"], [186, 4, 1, "", "objective"], [186, 4, 1, "", "pending_experiments"], [186, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[188, 1, 1, "", "GaussianMixtureClusteringRecommender"], [189, 1, 1, "", "KMeansClusteringRecommender"], [190, 1, 1, "", "PAMClusteringRecommender"], [191, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[188, 2, 1, "", "__init__"], [188, 6, 1, "", "allow_recommending_already_measured"], [188, 6, 1, "", "allow_recommending_pending_experiments"], [188, 6, 1, "", "allow_repeated_recommendations"], [188, 3, 1, "", "compatibility"], [188, 3, 1, "", "model_cluster_num_parameter_name"], [188, 3, 1, "", "model_params"], [188, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[188, 4, 1, "", "batch_size"], [188, 4, 1, "", "measurements"], [188, 4, 1, "", "objective"], [188, 4, 1, "", "pending_experiments"], [188, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[189, 2, 1, "", "__init__"], [189, 6, 1, "", "allow_recommending_already_measured"], [189, 6, 1, "", "allow_recommending_pending_experiments"], [189, 6, 1, "", "allow_repeated_recommendations"], [189, 3, 1, "", "compatibility"], [189, 3, 1, "", "model_cluster_num_parameter_name"], [189, 3, 1, "", "model_params"], [189, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[189, 4, 1, "", "batch_size"], [189, 4, 1, "", "measurements"], [189, 4, 1, "", "objective"], [189, 4, 1, "", "pending_experiments"], [189, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[190, 2, 1, "", "__init__"], [190, 6, 1, "", "allow_recommending_already_measured"], [190, 6, 1, "", "allow_recommending_pending_experiments"], [190, 6, 1, "", "allow_repeated_recommendations"], [190, 3, 1, "", "compatibility"], [190, 3, 1, "", "model_cluster_num_parameter_name"], [190, 3, 1, "", "model_params"], [190, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[190, 4, 1, "", "batch_size"], [190, 4, 1, "", "measurements"], [190, 4, 1, "", "objective"], [190, 4, 1, "", "pending_experiments"], [190, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[191, 2, 1, "", "__init__"], [191, 6, 1, "", "allow_recommending_already_measured"], [191, 6, 1, "", "allow_recommending_pending_experiments"], [191, 6, 1, "", "allow_repeated_recommendations"], [191, 3, 1, "", "compatibility"], [191, 3, 1, "", "model_cluster_num_parameter_name"], [191, 3, 1, "", "model_params"], [191, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[191, 4, 1, "", "batch_size"], [191, 4, 1, "", "measurements"], [191, 4, 1, "", "objective"], [191, 4, 1, "", "pending_experiments"], [191, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[193, 1, 1, "", "FPSRecommender"], [194, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[193, 2, 1, "", "__init__"], [193, 6, 1, "", "allow_recommending_already_measured"], [193, 6, 1, "", "allow_recommending_pending_experiments"], [193, 6, 1, "", "allow_repeated_recommendations"], [193, 3, 1, "", "compatibility"], [193, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[193, 4, 1, "", "batch_size"], [193, 4, 1, "", "measurements"], [193, 4, 1, "", "objective"], [193, 4, 1, "", "pending_experiments"], [193, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[194, 2, 1, "", "__init__"], [194, 6, 1, "", "allow_recommending_already_measured"], [194, 6, 1, "", "allow_recommending_pending_experiments"], [194, 6, 1, "", "allow_repeated_recommendations"], [194, 3, 1, "", "compatibility"], [194, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[194, 4, 1, "", "batch_size"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.searchspace": [[196, 0, 0, "-", "continuous"], [198, 0, 0, "-", "core"], [203, 0, 0, "-", "discrete"], [209, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[197, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[197, 2, 1, "", "__init__"], [197, 6, 1, "", "comp_rep_bounds"], [197, 6, 1, "", "comp_rep_columns"], [197, 6, 1, "", "constraints_cardinality"], [197, 3, 1, "", "constraints_lin_eq"], [197, 3, 1, "", "constraints_lin_ineq"], [197, 3, 1, "", "constraints_nonlin"], [197, 2, 1, "", "empty"], [197, 2, 1, "", "from_bounds"], [197, 2, 1, "", "from_dataframe"], [197, 2, 1, "", "from_dict"], [197, 2, 1, "", "from_json"], [197, 2, 1, "", "from_parameter"], [197, 2, 1, "", "from_product"], [197, 6, 1, "", "full_factorial"], [197, 2, 1, "", "get_parameters_by_name"], [197, 6, 1, "", "is_empty"], [197, 6, 1, "", "parameter_names"], [197, 3, 1, "", "parameters"], [197, 2, 1, "", "sample_from_full_factorial"], [197, 2, 1, "", "sample_uniform"], [197, 2, 1, "", "samples_full_factorial"], [197, 2, 1, "", "samples_random"], [197, 2, 1, "", "to_dict"], [197, 2, 1, "", "to_json"], [197, 2, 1, "", "to_searchspace"], [197, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[197, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[197, 4, 1, "", "df"], [197, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[197, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[197, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[197, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[197, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[197, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[197, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[199, 1, 1, "", "SearchSpace"], [200, 1, 1, "", "SearchSpaceType"], [201, 5, 1, "", "to_searchspace"], [202, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[199, 2, 1, "", "__init__"], [199, 6, 1, "", "comp_rep_bounds"], [199, 6, 1, "", "comp_rep_columns"], [199, 6, 1, "", "constraints"], [199, 6, 1, "", "constraints_augmentable"], [199, 3, 1, "", "continuous"], [199, 3, 1, "", "discrete"], [199, 2, 1, "", "estimate_product_space_size"], [199, 2, 1, "", "from_dataframe"], [199, 2, 1, "", "from_dict"], [199, 2, 1, "", "from_json"], [199, 2, 1, "", "from_parameter"], [199, 2, 1, "", "from_product"], [199, 2, 1, "", "get_comp_rep_parameter_indices"], [199, 2, 1, "", "get_parameters_by_name"], [199, 6, 1, "", "n_tasks"], [199, 6, 1, "", "parameter_names"], [199, 6, 1, "", "parameters"], [199, 6, 1, "", "task_idx"], [199, 2, 1, "", "to_dict"], [199, 2, 1, "", "to_json"], [199, 2, 1, "", "transform"], [199, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[199, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[199, 4, 1, "", "df"], [199, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[199, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[199, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[199, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[199, 4, 1, "", "constraints"], [199, 4, 1, "", "empty_encoding"], [199, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[199, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[199, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[199, 4, 1, "", "allow_extra"], [199, 4, 1, "", "allow_missing"], [199, 4, 1, "", "data"], [199, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[200, 3, 1, "", "CONTINUOUS"], [200, 3, 1, "", "DISCRETE"], [200, 3, 1, "", "EITHER"], [200, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[204, 1, 1, "", "MemorySize"], [205, 1, 1, "", "SubspaceDiscrete"], [206, 5, 1, "", "parameter_cartesian_prod_pandas"], [207, 5, 1, "", "parameter_cartesian_prod_polars"], [208, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[204, 2, 1, "", "__init__"], [204, 3, 1, "", "comp_rep_bytes"], [204, 6, 1, "", "comp_rep_human_readable"], [204, 3, 1, "", "comp_rep_shape"], [204, 3, 1, "", "exp_rep_bytes"], [204, 6, 1, "", "exp_rep_human_readable"], [204, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[205, 2, 1, "", "__init__"], [205, 3, 1, "", "comp_rep"], [205, 6, 1, "", "comp_rep_bounds"], [205, 6, 1, "", "comp_rep_columns"], [205, 3, 1, "", "constraints"], [205, 2, 1, "", "empty"], [205, 3, 1, "", "empty_encoding"], [205, 2, 1, "", "estimate_product_space_size"], [205, 3, 1, "", "exp_rep"], [205, 2, 1, "", "from_dataframe"], [205, 2, 1, "", "from_dict"], [205, 2, 1, "", "from_json"], [205, 2, 1, "", "from_parameter"], [205, 2, 1, "", "from_product"], [205, 2, 1, "", "from_simplex"], [205, 2, 1, "", "get_candidates"], [205, 2, 1, "", "get_parameters_by_name"], [205, 6, 1, "", "is_empty"], [205, 6, 1, "", "metadata"], [205, 6, 1, "", "parameter_names"], [205, 3, 1, "", "parameters"], [205, 2, 1, "", "to_dict"], [205, 2, 1, "", "to_json"], [205, 2, 1, "", "to_searchspace"], [205, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[205, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[205, 4, 1, "", "df"], [205, 4, 1, "", "empty_encoding"], [205, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[205, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[205, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[205, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[205, 4, 1, "", "boundary_only"], [205, 4, 1, "", "constraints"], [205, 4, 1, "", "max_nonzero"], [205, 4, 1, "", "max_sum"], [205, 4, 1, "", "min_nonzero"], [205, 4, 1, "", "product_parameters"], [205, 4, 1, "", "simplex_parameters"], [205, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[205, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[206, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[207, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[210, 5, 1, "", "get_transform_parameters"], [211, 5, 1, "", "validate_parameter_names"], [212, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[214, 0, 0, "-", "core"], [221, 0, 0, "-", "mixin"], [223, 0, 0, "-", "utils"]], "baybe.serialization.core": [[215, 5, 1, "", "block_deserialization_hook"], [216, 5, 1, "", "block_serialization_hook"], [217, 8, 1, "", "converter"], [218, 5, 1, "", "get_base_structure_hook"], [219, 5, 1, "", "select_constructor_hook"], [220, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[218, 4, 1, "", "base"], [218, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[220, 4, 1, "", "base"], [220, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[222, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[222, 2, 1, "", "from_dict"], [222, 2, 1, "", "from_json"], [222, 2, 1, "", "to_dict"], [222, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[222, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[222, 4, 1, "", "string"]], "baybe.serialization.utils": [[224, 5, 1, "", "deserialize_dataframe"], [225, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[227, 0, 0, "-", "core"], [229, 0, 0, "-", "lookup"], [231, 0, 0, "-", "scenarios"], [233, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[228, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[228, 4, 1, "", "batch_size"], [228, 4, 1, "", "campaign"], [228, 4, 1, "", "impute_mode"], [228, 4, 1, "", "initial_data"], [228, 4, 1, "", "lookup"], [228, 4, 1, "", "n_doe_iterations"], [228, 4, 1, "", "noise_percent"], [228, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[230, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[230, 4, 1, "", "impute_mode"], [230, 4, 1, "", "lookup"], [230, 4, 1, "", "queries"], [230, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[232, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[232, 4, 1, "", "batch_size"], [232, 4, 1, "", "groupby"], [232, 4, 1, "", "impute_mode"], [232, 4, 1, "", "initial_data"], [232, 4, 1, "", "lookup"], [232, 4, 1, "", "n_doe_iterations"], [232, 4, 1, "", "n_mc_iterations"], [232, 4, 1, "", "noise_percent"], [232, 4, 1, "", "random_seed"], [232, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[234, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[234, 4, 1, "", "batch_size"], [234, 4, 1, "", "campaign"], [234, 4, 1, "", "groupby"], [234, 4, 1, "", "lookup"], [234, 4, 1, "", "n_doe_iterations"], [234, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[236, 0, 0, "-", "bandit"], [238, 0, 0, "-", "base"], [242, 0, 0, "-", "custom"], [245, 0, 0, "-", "gaussian_process"], [260, 0, 0, "-", "linear"], [262, 0, 0, "-", "naive"], [264, 0, 0, "-", "ngboost"], [266, 0, 0, "-", "random_forest"], [268, 0, 0, "-", "utils"], [272, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[237, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[237, 2, 1, "", "__init__"], [237, 2, 1, "", "fit"], [237, 2, 1, "", "from_dict"], [237, 2, 1, "", "from_json"], [237, 2, 1, "", "posterior"], [237, 2, 1, "", "posterior_means"], [237, 2, 1, "", "posterior_modes"], [237, 3, 1, "", "prior"], [237, 3, 1, "", "supports_transfer_learning"], [237, 2, 1, "", "to_botorch"], [237, 2, 1, "", "to_dict"], [237, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[237, 4, 1, "", "measurements"], [237, 4, 1, "", "objective"], [237, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[237, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[237, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[237, 4, 1, "", "candidates"]], "baybe.surrogates.base": [[239, 1, 1, "", "IndependentGaussianSurrogate"], [240, 1, 1, "", "Surrogate"], [241, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[239, 2, 1, "", "__init__"], [239, 2, 1, "", "fit"], [239, 2, 1, "", "from_dict"], [239, 2, 1, "", "from_json"], [239, 2, 1, "", "posterior"], [239, 3, 1, "", "supports_transfer_learning"], [239, 2, 1, "", "to_botorch"], [239, 2, 1, "", "to_dict"], [239, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[239, 4, 1, "", "measurements"], [239, 4, 1, "", "objective"], [239, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[239, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[239, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[239, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "fit"], [240, 2, 1, "", "from_dict"], [240, 2, 1, "", "from_json"], [240, 2, 1, "", "posterior"], [240, 3, 1, "", "supports_transfer_learning"], [240, 2, 1, "", "to_botorch"], [240, 2, 1, "", "to_dict"], [240, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[240, 4, 1, "", "measurements"], [240, 4, 1, "", "objective"], [240, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[240, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[240, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[240, 4, 1, "", "candidates"]], "baybe.surrogates.base.SurrogateProtocol": [[241, 2, 1, "", "__init__"], [241, 2, 1, "", "fit"], [241, 2, 1, "", "to_botorch"]], "baybe.surrogates.custom": [[243, 1, 1, "", "CustomONNXSurrogate"], [244, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[243, 2, 1, "", "__init__"], [243, 2, 1, "", "default_model"], [243, 2, 1, "", "fit"], [243, 2, 1, "", "from_dict"], [243, 2, 1, "", "from_json"], [243, 3, 1, "", "onnx_input_name"], [243, 3, 1, "", "onnx_str"], [243, 2, 1, "", "posterior"], [243, 3, 1, "", "supports_transfer_learning"], [243, 2, 1, "", "to_botorch"], [243, 2, 1, "", "to_dict"], [243, 2, 1, "", "to_json"], [243, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[243, 4, 1, "", "measurements"], [243, 4, 1, "", "objective"], [243, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[243, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[243, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[243, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[243, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[246, 0, 0, "-", "core"], [248, 0, 0, "-", "kernel_factory"], [252, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[247, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[247, 2, 1, "", "__init__"], [247, 2, 1, "", "fit"], [247, 2, 1, "", "from_dict"], [247, 2, 1, "", "from_json"], [247, 2, 1, "", "from_preset"], [247, 3, 1, "", "kernel_factory"], [247, 2, 1, "", "posterior"], [247, 3, 1, "", "supports_transfer_learning"], [247, 2, 1, "", "to_botorch"], [247, 2, 1, "", "to_dict"], [247, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[247, 4, 1, "", "measurements"], [247, 4, 1, "", "objective"], [247, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[247, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[247, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[247, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.kernel_factory": [[249, 1, 1, "", "KernelFactory"], [250, 1, 1, "", "PlainKernelFactory"], [251, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[249, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[250, 2, 1, "", "__init__"], [250, 2, 1, "", "from_dict"], [250, 2, 1, "", "from_json"], [250, 3, 1, "", "kernel"], [250, 2, 1, "", "to_dict"], [250, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[250, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[250, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[253, 0, 0, "-", "core"], [256, 0, 0, "-", "default"], [258, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[254, 1, 1, "", "GaussianProcessPreset"], [255, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[254, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[257, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[257, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[259, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[259, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[261, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[261, 2, 1, "", "__init__"], [261, 2, 1, "", "fit"], [261, 2, 1, "", "from_dict"], [261, 2, 1, "", "from_json"], [261, 3, 1, "", "model_params"], [261, 2, 1, "", "posterior"], [261, 3, 1, "", "supports_transfer_learning"], [261, 2, 1, "", "to_botorch"], [261, 2, 1, "", "to_dict"], [261, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[261, 4, 1, "", "measurements"], [261, 4, 1, "", "objective"], [261, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[261, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[261, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[261, 4, 1, "", "candidates"]], "baybe.surrogates.naive": [[263, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[263, 2, 1, "", "__init__"], [263, 2, 1, "", "fit"], [263, 2, 1, "", "from_dict"], [263, 2, 1, "", "from_json"], [263, 2, 1, "", "posterior"], [263, 3, 1, "", "supports_transfer_learning"], [263, 2, 1, "", "to_botorch"], [263, 2, 1, "", "to_dict"], [263, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[263, 4, 1, "", "measurements"], [263, 4, 1, "", "objective"], [263, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[263, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[263, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[263, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost": [[265, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[265, 2, 1, "", "__init__"], [265, 2, 1, "", "fit"], [265, 2, 1, "", "from_dict"], [265, 2, 1, "", "from_json"], [265, 3, 1, "", "model_params"], [265, 2, 1, "", "posterior"], [265, 3, 1, "", "supports_transfer_learning"], [265, 2, 1, "", "to_botorch"], [265, 2, 1, "", "to_dict"], [265, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[265, 4, 1, "", "measurements"], [265, 4, 1, "", "objective"], [265, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[265, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[265, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[265, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest": [[267, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[267, 2, 1, "", "__init__"], [267, 2, 1, "", "fit"], [267, 2, 1, "", "from_dict"], [267, 2, 1, "", "from_json"], [267, 3, 1, "", "model_params"], [267, 2, 1, "", "posterior"], [267, 3, 1, "", "supports_transfer_learning"], [267, 2, 1, "", "to_botorch"], [267, 2, 1, "", "to_dict"], [267, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[267, 4, 1, "", "measurements"], [267, 4, 1, "", "objective"], [267, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[267, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[267, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[267, 4, 1, "", "candidates"]], "baybe.surrogates.utils": [[269, 5, 1, "", "batchify_ensemble_predictor"], [270, 5, 1, "", "batchify_mean_var_prediction"], [271, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[269, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[271, 4, 1, "", "cls"], [271, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[273, 5, 1, "", "get_model_params_validator"], [274, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[273, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[274, 4, 1, "", "model_cls"]], "baybe.targets": [[276, 0, 0, "-", "base"], [278, 0, 0, "-", "binary"], [281, 0, 0, "-", "enum"], [284, 0, 0, "-", "numerical"], [286, 0, 0, "-", "transforms"]], "baybe.targets.base": [[277, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[277, 2, 1, "", "__init__"], [277, 2, 1, "", "from_dict"], [277, 2, 1, "", "from_json"], [277, 3, 1, "", "name"], [277, 2, 1, "", "summary"], [277, 2, 1, "", "to_dict"], [277, 2, 1, "", "to_json"], [277, 2, 1, "", "to_objective"], [277, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[277, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[277, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[277, 4, 1, "", "series"]], "baybe.targets.binary": [[279, 1, 1, "", "BinaryTarget"], [280, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[279, 2, 1, "", "__init__"], [279, 3, 1, "", "failure_value"], [279, 2, 1, "", "from_dict"], [279, 2, 1, "", "from_json"], [279, 3, 1, "", "name"], [279, 3, 1, "", "success_value"], [279, 2, 1, "", "summary"], [279, 2, 1, "", "to_dict"], [279, 2, 1, "", "to_json"], [279, 2, 1, "", "to_objective"], [279, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[279, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[279, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[279, 4, 1, "", "series"]], "baybe.targets.enum": [[282, 1, 1, "", "TargetMode"], [283, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[282, 3, 1, "", "MATCH"], [282, 3, 1, "", "MAX"], [282, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[283, 3, 1, "", "BELL"], [283, 3, 1, "", "LINEAR"], [283, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[285, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[285, 2, 1, "", "__init__"], [285, 3, 1, "", "bounds"], [285, 2, 1, "", "from_dict"], [285, 2, 1, "", "from_json"], [285, 3, 1, "", "mode"], [285, 3, 1, "", "name"], [285, 2, 1, "", "summary"], [285, 2, 1, "", "to_dict"], [285, 2, 1, "", "to_json"], [285, 2, 1, "", "to_objective"], [285, 2, 1, "", "transform"], [285, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[285, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[285, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[285, 4, 1, "", "series"]], "baybe.targets.transforms": [[287, 5, 1, "", "bell_transform"], [288, 5, 1, "", "linear_transform"], [289, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[287, 4, 1, "", "arr"], [287, 4, 1, "", "lower"], [287, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[288, 4, 1, "", "arr"], [288, 4, 1, "", "descending"], [288, 4, 1, "", "lower"], [288, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[289, 4, 1, "", "arr"], [289, 4, 1, "", "lower"], [289, 4, 1, "", "upper"]], "baybe.telemetry": [[291, 5, 1, "", "get_user_details"], [292, 5, 1, "", "is_enabled"], [293, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [294, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[293, 4, 1, "", "cached_recommendation"], [293, 4, 1, "", "measurements"], [293, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[294, 4, 1, "", "instrument_name"], [294, 4, 1, "", "value"]], "baybe.utils": [[296, 0, 0, "-", "augmentation"], [299, 0, 0, "-", "basic"], [314, 0, 0, "-", "boolean"], [318, 0, 0, "-", "chemistry"], [323, 0, 0, "-", "conversion"], [326, 0, 0, "-", "dataframe"], [340, 0, 0, "-", "interval"], [345, 0, 0, "-", "memory"], [347, 0, 0, "-", "numerical"], [354, 0, 0, "-", "plotting"], [358, 0, 0, "-", "random"], [361, 0, 0, "-", "sampling_algorithms"], [365, 0, 0, "-", "scaling"], [367, 0, 0, "-", "torch"], [370, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[297, 5, 1, "", "df_apply_dependency_augmentation"], [298, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[297, 4, 1, "", "affected"], [297, 4, 1, "", "causing"], [297, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[298, 4, 1, "", "column_groups"], [298, 4, 1, "", "df"]], "baybe.utils.basic": [[300, 1, 1, "", "Dummy"], [301, 8, 1, "", "UNSPECIFIED"], [302, 1, 1, "", "UnspecifiedType"], [303, 1, 1, "", "classproperty"], [304, 5, 1, "", "find_subclass"], [305, 5, 1, "", "get_baseclasses"], [306, 5, 1, "", "get_subclasses"], [307, 5, 1, "", "group_duplicate_values"], [308, 5, 1, "", "hilberts_factory"], [309, 5, 1, "", "is_all_instance"], [310, 5, 1, "", "match_attributes"], [311, 5, 1, "", "refers_to"], [312, 5, 1, "", "register_hooks"], [313, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[300, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[303, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[305, 4, 1, "", "abstract"], [305, 4, 1, "", "cls"], [305, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[306, 4, 1, "", "abstract"], [306, 4, 1, "", "cls"], [306, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[307, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[310, 4, 1, "", "callable_"], [310, 4, 1, "", "ignore"], [310, 4, 1, "", "object"], [310, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[312, 4, 1, "", "post_hooks"], [312, 4, 1, "", "pre_hooks"], [312, 4, 1, "", "target"]], "baybe.utils.boolean": [[315, 5, 1, "", "check_if_in"], [316, 5, 1, "", "is_abstract"], [317, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[315, 4, 1, "", "allowed"], [315, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[316, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[317, 4, 1, "", "val"]], "baybe.utils.chemistry": [[319, 5, 1, "", "get_canonical_smiles"], [320, 5, 1, "", "get_fingerprint_class"], [321, 5, 1, "", "name_to_smiles"], [322, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[320, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[321, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[322, 4, 1, "", "encoding"], [322, 4, 1, "", "kwargs_conformer"], [322, 4, 1, "", "kwargs_fingerprint"], [322, 4, 1, "", "prefix"], [322, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[324, 5, 1, "", "fraction_to_float"], [325, 5, 1, "", "nonstring_to_tuple"]], "baybe.utils.conversion.fraction_to_float.params": [[324, 4, 1, "", "value"]], "baybe.utils.dataframe": [[327, 5, 1, "", "add_fake_measurements"], [328, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [329, 5, 1, "", "add_parameter_noise"], [330, 5, 1, "", "arrays_to_dataframes"], [331, 5, 1, "", "create_fake_input"], [332, 5, 1, "", "df_drop_single_value_columns"], [333, 5, 1, "", "df_drop_string_columns"], [334, 5, 1, "", "df_uncorrelated_features"], [335, 5, 1, "", "filter_df"], [336, 5, 1, "", "fuzzy_row_match"], [337, 5, 1, "", "get_transform_objects"], [338, 5, 1, "", "pretty_print_df"], [339, 5, 1, "", "to_tensor"]], "baybe.utils.dataframe.add_fake_measurements.params": [[327, 4, 1, "", "bad_intervals"], [327, 4, 1, "", "data"], [327, 4, 1, "", "good_intervals"], [327, 4, 1, "", "good_reference_values"], [327, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[328, 4, 1, "", "df"], [328, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[329, 4, 1, "", "data"], [329, 4, 1, "", "noise_level"], [329, 4, 1, "", "noise_type"], [329, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[330, 4, 1, "", "input_labels"], [330, 4, 1, "", "output_labels"], [330, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[331, 4, 1, "", "**kwargs"], [331, 4, 1, "", "n_rows"], [331, 4, 1, "", "parameters"], [331, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[332, 4, 1, "", "df"], [332, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[333, 4, 1, "", "df"], [333, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[334, 4, 1, "", "df"], [334, 4, 1, "", "exclude_list"], [334, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[335, 4, 1, "", "complement"], [335, 4, 1, "", "df"], [335, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[336, 4, 1, "", "left_df"], [336, 4, 1, "", "parameters"], [336, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[337, 4, 1, "", "allow_extra"], [337, 4, 1, "", "allow_missing"], [337, 4, 1, "", "df"], [337, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[338, 4, 1, "", "df"], [338, 4, 1, "", "max_columns"], [338, 4, 1, "", "max_colwidth"], [338, 4, 1, "", "max_rows"], [338, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[339, 4, 1, "", "*x"]], "baybe.utils.interval": [[341, 7, 1, "", "InfiniteIntervalError"], [342, 1, 1, "", "Interval"], [343, 5, 1, "", "convert_bounds"], [344, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[341, 2, 1, "", "__init__"], [341, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[342, 2, 1, "", "__init__"], [342, 6, 1, "", "center"], [342, 2, 1, "", "contains"], [342, 2, 1, "", "create"], [342, 2, 1, "", "from_dict"], [342, 2, 1, "", "from_json"], [342, 6, 1, "", "is_bounded"], [342, 6, 1, "", "is_degenerate"], [342, 6, 1, "", "is_fully_unbounded"], [342, 6, 1, "", "is_half_bounded"], [342, 6, 1, "", "is_left_bounded"], [342, 6, 1, "", "is_right_bounded"], [342, 3, 1, "", "lower"], [342, 2, 1, "", "to_dict"], [342, 2, 1, "", "to_json"], [342, 2, 1, "", "to_ndarray"], [342, 2, 1, "", "to_tensor"], [342, 2, 1, "", "to_tuple"], [342, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[342, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[342, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[342, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[343, 4, 1, "", "bounds"]], "baybe.utils.memory": [[346, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[346, 4, 1, "", "num"]], "baybe.utils.numerical": [[348, 3, 1, "", "DTypeFloatNumpy"], [349, 3, 1, "", "DTypeFloatONNX"], [350, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [351, 5, 1, "", "closer_element"], [352, 5, 1, "", "closest_element"], [353, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[351, 4, 1, "", "target"], [351, 4, 1, "", "x"], [351, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[352, 4, 1, "", "array"], [352, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[353, 4, 1, "", "arr"], [353, 4, 1, "", "weights"]], "baybe.utils.plotting": [[355, 5, 1, "", "create_example_plots"], [356, 5, 1, "", "indent"], [357, 5, 1, "", "to_string"]], "baybe.utils.plotting.create_example_plots.params": [[355, 4, 1, "", "ax"], [355, 4, 1, "", "base_name"], [355, 4, 1, "", "path"]], "baybe.utils.plotting.to_string.params": [[357, 4, 1, "", "*fields"], [357, 4, 1, "", "header"], [357, 4, 1, "", "single_line"]], "baybe.utils.random": [[359, 5, 1, "", "set_random_seed"], [360, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[359, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[360, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[362, 1, 1, "", "DiscreteSamplingMethod"], [363, 5, 1, "", "farthest_point_sampling"], [364, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[362, 3, 1, "", "FPS"], [362, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[363, 4, 1, "", "initialization"], [363, 4, 1, "", "n_samples"], [363, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[364, 4, 1, "", "df"], [364, 4, 1, "", "method"], [364, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[366, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[366, 2, 1, "", "__init__"], [366, 2, 1, "", "fit"], [366, 3, 1, "", "mapping"], [366, 2, 1, "", "transform"]], "baybe.utils.torch": [[368, 8, 1, "", "DTypeFloatTorch"], [369, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[371, 5, 1, "", "finite_float"], [372, 5, 1, "", "non_inf_float"], [373, 5, 1, "", "non_nan_float"], [374, 5, 1, "", "validate_not_nan"], [375, 5, 1, "", "validate_parameter_input"], [376, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[375, 4, 1, "", "data"], [375, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [375, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[376, 4, 1, "", "data"], [376, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 181, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 308, 339, 342, 377, 380, 387, 391, 394, 395, 398, 399, 401, 402, 403, 404, 405, 411, 415, 416, 417, 420, 421, 422, 425, 426, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441], "0": [8, 19, 31, 41, 42, 48, 96, 131, 139, 142, 160, 168, 169, 170, 181, 205, 228, 230, 287, 288, 289, 297, 298, 317, 328, 329, 334, 335, 349, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 402, 404, 406, 408, 409, 410, 412, 413, 414, 416, 417, 420, 425, 426, 429, 433, 434, 436, 437, 438, 440, 443], "00": [410, 436], "000": [391, 412], "001": [328, 429], "0011552350000556544": 394, "005": [379, 380, 381, 383, 384], "007234": 402, "009293": 410, "01": [160, 386, 387, 392, 395, 409, 410, 417], "02": 417, "021": [259, 334], "022123": 406, "029553": 402, "030127": 402, "03213": [259, 334], "032484": 402, "045795": 410, "047122": 408, "048106": 408, "049001": 406, "05": 417, "053246": 409, "057": [379, 380, 381, 383, 384, 394], "058027": 406, "06": [205, 271], "066595": 402, "066683": 402, "071632": 402, "077545": 408, "08": 417, "082066": 408, "089867": 402, "092893": 402, "09653736976391157": 404, "0f": 395, "1": [23, 28, 41, 96, 117, 131, 142, 171, 181, 197, 228, 230, 232, 234, 287, 288, 289, 294, 297, 298, 307, 317, 329, 331, 335, 349, 353, 363, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 402, 404, 406, 408, 409, 410, 412, 413, 414, 416, 417, 420, 421, 425, 428, 429, 433, 434, 436, 437, 438, 440, 443], "10": [181, 230, 259, 334, 378, 380, 389, 390, 391, 392, 395, 398, 399, 401, 402, 404, 406, 408, 410, 412, 413, 414, 416, 417, 420, 427, 434, 438, 443], "100": [384, 389, 390, 391, 392, 395, 398, 399, 401, 402, 406, 412, 417, 432, 433, 434, 438, 440, 443], "1000": 438, "1024": [136, 422, 434], "103": 410, "1038": [259, 334], "105": [379, 380, 381, 383, 384, 394, 406, 436], "109043": 402, "11": [303, 401, 402, 421], "111": 412, "1147": 391, "1148": 391, "1149": 391, "1150": 391, "118": 410, "119994": 402, "12": [401, 402, 410, 423, 436], "120": [379, 380, 381, 383, 384, 389, 391, 394, 434], "120000": 409, "122": 412, "125": 409, "126": [389, 391, 392, 421], "126780": 402, "1268824": [379, 380, 381], "128": 10, "13": [401, 402, 416, 436], "1337": [395, 396, 443], "139382": 402, "14": [401, 402, 436], "141": 384, "143": 410, "14448993259018328": 404, "1454": 422, "15": [230, 391, 401, 402, 410, 416, 417, 420, 428, 436], "150": [389, 392, 429], "1500": 434, "151": 391, "153": [379, 380, 381, 383, 384, 394], "153736": 402, "155364": 402, "159": 409, "16": [338, 349, 401], "160": 406, "162": 406, "165": 406, "167981": 402, "17": [401, 402], "177": 412, "177302": 383, "18": [401, 402, 428], "180": 389, "181809": 408, "188": 412, "19": [383, 401, 402, 406], "190": 406, "190576": 384, "191": 406, "191220": 402, "192": 391, "198": 406, "198272": 402, "1e": [205, 271], "2": [8, 19, 96, 98, 117, 230, 297, 298, 307, 327, 335, 353, 363, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 395, 396, 398, 399, 401, 402, 404, 406, 408, 409, 410, 412, 413, 414, 416, 417, 420, 425, 428, 429, 433, 434, 436, 437, 438, 440], "20": [142, 230, 378, 379, 380, 381, 395, 396, 401, 402, 406, 410, 422, 434, 441, 443], "200": [380, 389, 391, 398, 399, 404, 412], "2004": 425, "2007": 441, "2021": 380, "2022": 420, "2025": 420, "209203": 402, "21": [401, 402, 413], "215369": 402, "215444": 406, "218": 406, "218094": 408, "22": [401, 406], "221": 422, "221230": 402, "222": 412, "224370": 408, "225032": 402, "228352": 384, "23": [401, 402, 438], "230": 409, "230157": 408, "24": [390, 401, 436], "241": 434, "248425": 402, "25": [395, 401, 416, 436], "250": 426, "252863": 408, "256": 406, "258": 384, "26": [401, 436], "260935": 408, "264885": 402, "265815": 408, "27": [401, 436], "271459": 402, "272522": 402, "273": 406, "275996": 408, "277": 406, "278": 406, "279": 406, "279567": 402, "28": [401, 402], "280": 406, "284162": 402, "289013": 408, "29": [398, 401, 402, 420], "293381": 402, "295682": 402, "296081": 402, "297490": 402, "3": [230, 297, 298, 303, 307, 335, 338, 356, 379, 380, 381, 384, 387, 389, 390, 391, 392, 394, 396, 399, 401, 402, 404, 406, 408, 409, 410, 412, 413, 416, 417, 420, 421, 423, 425, 428, 429, 432, 434, 436, 437, 438, 440, 441], "30": [378, 392, 396, 401, 434], "300396": 408, "301884": 402, "302935": 402, "3078f3": 422, "31": [384, 401, 402, 406, 413], "311": 383, "315427": 406, "32": [390, 401, 434], "325334": 410, "329243": 406, "33": [390, 401, 406], "334368": 402, "34": [390, 406], "342665": 402, "35": [390, 401, 402, 406], "352749": 408, "353225": 408, "359646": 402, "36": 402, "37": [402, 406], "378297": 406, "385867": 410, "386602": 402, "39": [402, 434], "392739": 406, "393056": 402, "395568": 402, "395584": 410, "3d": 396, "4": [136, 297, 298, 338, 386, 387, 389, 390, 391, 392, 396, 401, 402, 404, 406, 408, 409, 410, 420, 425, 428, 429, 434, 436], "40": [401, 402, 433, 434], "402803": 402, "413744": 410, "42": [404, 406], "420115": 408, "420781": 402, "423091": 406, "424": 384, "426413": 384, "428947": 402, "429465": 406, "432455": 410, "438961": 406, "44": 402, "441802": 408, "443521": 402, "443828": 402, "444852": 408, "447": 389, "448": 389, "449": 389, "45": [401, 402, 406, 440], "450": 389, "46": 406, "466711": 406, "467677": 406, "468": 422, "473381": 402, "479449": 408, "482078": 408, "483072": 410, "483327": 408, "5": [96, 142, 297, 298, 379, 381, 386, 389, 390, 391, 392, 395, 398, 399, 401, 402, 406, 408, 409, 410, 412, 413, 414, 416, 417, 420, 425, 426, 427, 428, 429, 434, 436, 438, 441, 443], "50": [392, 399, 401, 404, 416, 417, 425, 426, 434, 436, 440], "500": [396, 434], "500518": 402, "505998": 408, "5066666666666667": 404, "51": 406, "52": 406, "53": 406, "5313": 313, "54": [406, 420], "540889": 402, "546720": 406, "55": [406, 440], "551691": 402, "555480": 402, "56": 438, "57": 406, "573617": 406, "579731": 408, "58": 402, "582627": 402, "587298": 402, "588762": 402, "589463": 402, "589640": 406, "59": [412, 420], "590": 380, "594312": 408, "6": [297, 298, 338, 379, 380, 381, 383, 389, 390, 391, 392, 401, 402, 404, 406, 408, 410, 412, 425, 429, 436], "60": [402, 406, 433], "609024": 408, "618088": 402, "619464": 402, "62": 404, "621956": 402, "622162": 402, "626194": 408, "629193": 406, "632708": 402, "632841": 402, "638582": 406, "64": 181, "65": 404, "66": 406, "660187": 406, "66368270ffd51418ec58bd793f2d9b1b": 441, "674225": 406, "675415": 406, "680637": 408, "69": [379, 380, 381, 402], "693588": 402, "694597": 402, "695506": 402, "7": [142, 297, 298, 334, 390, 392, 396, 401, 402, 406, 408, 416, 425, 434, 436], "70": [401, 402], "706566": 406, "706667": 409, "71": 434, "72": 406, "722101": 402, "723455": 406, "725015": 383, "730442": 409, "733142": 406, "733341": 402, "736804": 410, "741849": 410, "745": 443, "75": [401, 409, 436], "755845": 406, "76": [402, 406], "762693": 402, "765908": 406, "771845": 408, "773935": 402, "775510": 408, "778": 412, "782033": 402, "787494": 408, "79": 420, "797211": 402, "7gz": 434, "7hf": 434, "8": [298, 379, 381, 389, 391, 392, 401, 402, 404, 406, 408, 420, 425, 429], "80": [402, 429], "808719": 406, "821377": 402, "821706": 406, "829673": 406, "833415": 408, "835853": 402, "838334": 410, "8389": 313, "841649": 402, "8417": 313, "848179": 402, "85": 406, "855607": 402, "855974": 406, "857": 391, "861": 392, "862": 392, "863": 392, "864": 392, "867879": 406, "87": 412, "874862": 408, "88": [406, 412], "880458": 406, "882277": 402, "8859": 398, "888000": 408, "889": 412, "89": [380, 409, 412], "899577": 406, "899885": 408, "8jq": 434, "9": [392, 396, 401, 402, 406, 408, 425, 428, 436, 437], "90": [379, 380, 381, 383, 384, 394, 412, 436], "901417": 408, "917311": 408, "93": 406, "932618": 406, "937983": 406, "943081": 402, "945488": 410, "95": 406, "959853": 408, "96": 380, "964084": 408, "969990": 402, "970648": 402, "980477": 408, "987258": 406, "991916": 402, "992955": 402, "999": 429, "A": [0, 23, 28, 35, 37, 38, 39, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 69, 70, 71, 72, 75, 77, 79, 84, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 114, 116, 117, 121, 125, 128, 129, 131, 139, 142, 144, 153, 154, 155, 156, 157, 158, 159, 160, 163, 169, 170, 171, 173, 176, 179, 181, 183, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 206, 207, 222, 223, 228, 230, 232, 234, 237, 239, 240, 243, 247, 249, 250, 257, 259, 261, 263, 265, 267, 273, 277, 279, 285, 287, 288, 289, 297, 303, 305, 306, 307, 310, 320, 327, 334, 335, 337, 346, 353, 361, 363, 366, 378, 390, 399, 401, 402, 404, 406, 413, 414, 419, 421, 422, 423, 425, 429, 431, 432, 434, 435, 436, 437, 440, 441], "AND": [51, 391, 425, 429], "AS": [420, 425], "And": 398, "As": [379, 380, 381, 396, 404, 406, 416, 417, 420, 421, 422, 429, 432, 435, 436, 438], "At": 440, "But": 440, "By": [84, 116, 129, 144, 205, 316, 335, 402, 423, 427, 430, 431, 435, 436], "FOR": 425, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 150, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 228, 234, 237, 239, 240, 241, 243, 247, 250, 257, 259, 261, 263, 265, 267, 277, 279, 285, 290, 312, 336, 342, 355, 366, 379, 380, 381, 383, 384, 390, 394, 395, 396, 401, 402, 404, 406, 410, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443], "If": [6, 13, 28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 84, 88, 111, 116, 117, 121, 144, 148, 149, 169, 170, 173, 197, 199, 205, 211, 212, 228, 230, 232, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 288, 293, 298, 305, 306, 310, 312, 315, 317, 320, 324, 327, 328, 329, 331, 334, 335, 336, 337, 355, 357, 363, 364, 375, 376, 384, 386, 395, 401, 409, 410, 413, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 443], "In": [28, 42, 54, 181, 199, 226, 228, 310, 338, 379, 380, 381, 383, 395, 396, 398, 401, 402, 404, 406, 409, 410, 413, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443], "It": [23, 163, 170, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 242, 263, 327, 379, 383, 384, 390, 399, 401, 404, 406, 410, 412, 413, 414, 416, 420, 427, 428, 429, 430, 431, 434, 435, 436, 438, 443], "Its": [230, 398], "No": [336, 408, 419, 422], "Not": [425, 429], "OF": [420, 425], "OR": [420, 425], "Of": [384, 393, 418, 437], "On": [398, 404], "One": [133, 379, 381, 420], "Or": 430, "Such": [384, 429, 432, 438], "That": [199, 230, 237, 239, 240, 243, 247, 261, 263, 265, 267, 288, 384, 389, 401, 423, 436, 438, 441], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 84, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 117, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 150, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 217, 218, 220, 222, 226, 228, 230, 232, 237, 239, 240, 241, 243, 247, 250, 261, 263, 265, 267, 269, 271, 273, 274, 277, 279, 282, 285, 287, 288, 289, 291, 293, 294, 297, 298, 303, 305, 306, 307, 310, 312, 315, 316, 317, 320, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 346, 351, 352, 353, 355, 357, 359, 360, 363, 364, 375, 376, 379, 380, 381, 384, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 406, 409, 410, 414, 416, 417, 419, 421, 422, 423, 425, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 442, 443], "Then": 396, "There": [74, 271, 349, 401, 408, 420, 421, 423, 427, 431, 436], "These": [291, 377, 380, 381, 382, 385, 388, 393, 397, 400, 403, 405, 407, 411, 415, 423, 427, 429, 430, 434, 436], "To": [379, 384, 395, 396, 402, 404, 412, 416, 417, 420, 421, 423, 427, 428, 430, 431, 434, 438], "Will": 426, "With": [327, 395, 396, 401, 404, 416, 417, 420, 427, 429, 434, 437], "_": [148, 149, 202, 208, 215, 355, 386, 395, 417], "__class__": [394, 404], "__excepthook__": 421, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 237, 239, 240, 241, 243, 247, 249, 250, 257, 259, 261, 263, 265, 267, 277, 279, 285, 300, 303, 341, 342, 366, 436, 437], "__name__": [394, 404], "__new__": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 133, 134, 136, 341], "__str__": 422, "__version__": 422, "_amount": 401, "_arraylik": 330, "_c": 306, "_cumbest": 228, "_default_my_attribut": 423, "_fit": 274, "_has_switch": 171, "_iterbest": 228, "_label": 401, "_measur": 228, "_n_last_measur": [168, 169, 170], "_nbase": 322, "_nestedsequ": [117, 287, 288, 289, 352], "_no_tl": 416, "_option": 422, "_posterior": 274, "_step": [168, 169, 170], "_supportsarrai": [117, 287, 288, 289, 352], "_surrogate_model": [395, 396], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 210, 218, 219, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 307, 308, 309, 325, 337, 342], "_target": 422, "_tparamet": 144, "_tsurrog": 270, "_u": 307, "_validate_my_attribut": 423, "_was_us": [168, 169, 170], "a1": 298, "a2": 298, "ab": [392, 401], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 304, 311, 422, 442], "abc": [21, 31, 32, 33, 34, 35, 37, 91, 92, 93, 111, 125, 126, 152, 166, 176, 179, 186, 191, 239, 240, 277, 316], "abil": [426, 431, 441], "abl": [396, 421, 427, 429, 434, 437, 443], "about": [8, 23, 28, 126, 142, 277, 294, 379, 380, 381, 401, 409, 410, 420, 422, 423, 432, 434, 436], "abov": [271, 289, 316, 334, 378, 384, 391, 392, 394, 395, 402, 408, 420, 423, 425, 426, 427, 428, 429, 430, 431, 434, 437, 438, 441], "absenc": 433, "absolut": [139, 329, 420], "abstract": [21, 31, 32, 33, 34, 35, 37, 91, 92, 93, 111, 124, 125, 126, 152, 166, 176, 179, 186, 240, 277, 305, 306, 316, 422, 429, 441], "abstractli": 404, "acceler": [420, 422, 424, 441], "accept": [28, 169, 247, 330, 395, 396, 422, 425, 430, 433, 434, 438, 440], "access": [197, 205, 237, 239, 240, 243, 247, 261, 263, 265, 267, 379, 380, 381, 389, 394, 417, 422, 429, 437], "accord": [41, 164, 402, 426, 429, 430, 435, 443], "accordingli": [181, 428, 431, 437], "account": 427, "accumul": [154, 404, 441], "accur": 428, "acet": [379, 380, 381, 383, 384], "aceton": 401, "achiev": [18, 205, 396, 401, 404, 420, 423, 426, 428, 429, 431], "ack": 420, "acq_funct": 384, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 395, 396, 404], "acqf1": 437, "acqf2": 437, "acqf_valu": 395, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 64, 71, 179, 181, 389, 390, 391, 392, 395, 396, 404, 406, 412, 420, 422, 426, 435, 437, 439], "acquisition_funct": [179, 181, 384, 404, 413, 414, 422], "acquisition_function_cl": [179, 181, 422], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 23, 25, 26, 179, 181, 404, 437], "across": [401, 404, 416, 427, 435, 441], "act": [401, 422, 425, 429, 438], "action": [18, 394, 404, 419, 422, 442], "activ": [13, 31, 129, 171, 395, 396, 404, 420, 421, 422, 423, 429, 430, 431, 432, 433, 435, 441, 442, 443], "active_dim": [91, 92, 93, 96, 98, 100, 101, 102], "active_valu": [129, 416, 417, 431, 441], "actual": [169, 199, 226, 409, 422, 432, 436, 438, 441, 443], "ad": [28, 205, 293, 297, 327, 363, 401, 402, 419, 423, 426, 430, 431, 433, 434, 439, 440, 442], "adapt": [170, 259, 317, 334], "add": [28, 220, 230, 327, 328, 384, 398, 399, 401, 406, 416, 420, 425, 427, 428, 429, 432, 436, 441, 443], "add_collection3d": 396, "add_fake_measur": [331, 383, 384, 389, 390, 391, 392, 398, 399, 406, 422, 427, 438, 443], "add_fake_result": 422, "add_measur": [28, 331, 383, 384, 386, 387, 389, 390, 391, 392, 396, 398, 399, 404, 406, 409, 410, 420, 422, 427, 428, 430, 431], "add_noise_to_perturb_degenerate_row": 422, "add_parameter_nois": [331, 422, 443], "add_subplot": 396, "addendum": 425, "addit": [28, 84, 111, 116, 121, 169, 181, 199, 220, 228, 230, 232, 329, 331, 379, 380, 381, 402, 409, 417, 420, 422, 424, 425, 428, 429, 430, 432, 433, 434, 436, 437, 438, 441, 443], "addition": [394, 402, 420, 432], "additiveexplain": [82, 85], "additivekernel": 422, "address": 438, "adher": [422, 423], "adjust": [170, 380, 384, 409, 422, 431], "adopt": 384, "adrian": [420, 424], "advanc": [170, 404, 421, 422, 430, 437, 441, 442], "advantag": [401, 423], "advic": 423, "advis": [425, 438], "affect": [28, 50, 181, 297, 394, 412, 419, 421, 429], "affected_paramet": [50, 389, 390, 391, 392, 401, 429], "affili": [420, 430], "afford": 428, "aforement": [199, 430], "after": [171, 312, 383, 384, 389, 390, 391, 392, 396, 406, 412, 420, 428, 432, 437], "afterward": 437, "again": [395, 427, 428, 429, 441], "against": [78, 293, 310, 401, 425, 431, 441], "agent": 402, "agraw": 424, "agre": [420, 425, 432], "agreement": 425, "ai": [89, 150, 349], "aim": [428, 432], "akin": 427, "al": [380, 420, 434], "aldrich": 424, "alex": 424, "alexand": [420, 424], "algorithm": [174, 181, 327, 361, 363, 378, 401, 406, 420, 422, 427, 432, 435], "alia": [141, 183, 434], "alias": 422, "align": [197, 312, 395, 436, 441], "all": [20, 21, 30, 32, 37, 50, 52, 84, 90, 91, 92, 93, 110, 111, 116, 123, 126, 129, 131, 135, 142, 151, 152, 162, 165, 166, 169, 175, 176, 178, 181, 185, 186, 199, 206, 207, 230, 237, 238, 240, 276, 277, 297, 309, 310, 327, 379, 380, 381, 384, 386, 387, 389, 390, 394, 395, 396, 401, 402, 404, 406, 408, 409, 416, 417, 420, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443], "allclos": [386, 387, 402], "alleg": 425, "allow": [18, 28, 31, 41, 48, 52, 111, 116, 121, 139, 144, 170, 199, 205, 232, 294, 315, 336, 337, 375, 376, 379, 380, 381, 384, 401, 402, 416, 417, 420, 422, 426, 428, 429, 430, 431, 433, 435, 436, 437, 438, 439, 440, 443], "allow_": [422, 431], "allow_extra": [111, 116, 121, 197, 199, 205, 210, 337, 406, 422], "allow_miss": [111, 116, 121, 197, 199, 205, 210, 337, 422], "allow_recommending_already_measur": [28, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 404, 413, 414, 419, 422, 428], "allow_recommending_already_recommend": [28, 404, 413, 414, 419, 422, 428], "allow_recommending_pending_experi": [28, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 422, 428], "allow_repeated_recommend": [173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 422], "almost": 380, "alon": [422, 425], "along": [353, 425, 434, 441], "alongsid": 425, "alpha": [154, 396], "alphabet": [145, 422], "alreadi": [28, 205, 401, 410, 420, 422, 426, 427, 428, 431, 436, 438, 439, 441, 443], "also": [54, 84, 144, 237, 239, 240, 243, 247, 261, 263, 265, 267, 294, 310, 312, 327, 328, 329, 379, 386, 387, 395, 396, 398, 399, 401, 406, 409, 410, 412, 416, 417, 420, 422, 423, 426, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443], "alter": [401, 422, 428, 431], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 271, 353, 394, 401, 402, 408, 420, 422, 431, 442, 443], "although": [401, 410, 413, 436, 438], "alwai": [13, 28, 37, 215, 216, 398, 401, 402, 420, 426, 428, 429, 438, 439, 441, 443], "ambigu": [139, 301, 302, 436], "amend": 429, "among": [31, 401, 420, 441], "amount": [298, 356, 364, 402, 416, 417, 427, 432, 434, 443], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 64, 65, 66, 68, 71, 76, 78, 79, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 112, 114, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 218, 220, 222, 226, 228, 230, 232, 237, 239, 240, 243, 244, 247, 250, 261, 263, 265, 267, 269, 270, 277, 279, 285, 297, 301, 302, 308, 310, 312, 315, 321, 325, 334, 335, 336, 338, 341, 342, 343, 352, 355, 357, 363, 364, 379, 381, 382, 384, 391, 392, 394, 395, 398, 399, 402, 406, 408, 412, 413, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "analog": [199, 327, 436, 437], "analogi": [164, 435], "analysi": [420, 432, 439], "analyt": [3, 4, 7, 8, 71, 438, 441], "analyz": [420, 423, 432], "angl": 396, "ani": [58, 59, 84, 117, 124, 125, 126, 128, 129, 131, 142, 144, 147, 148, 149, 215, 216, 220, 224, 225, 232, 261, 265, 267, 287, 288, 289, 294, 297, 309, 310, 312, 313, 315, 316, 331, 336, 342, 344, 352, 357, 371, 372, 373, 374, 376, 394, 401, 416, 417, 419, 420, 421, 422, 423, 425, 428, 430, 431, 434, 437, 438, 441], "annot": [312, 394, 425], "anonym": [420, 430], "anoth": [50, 343, 380, 390, 391, 398, 399, 401, 410, 423, 429, 441], "ansatz": 422, "answer": 428, "anti": 335, "anymor": [422, 441], "anyth": 317, "anywai": 439, "anywher": 386, "apach": [420, 425], "apart": [423, 428], "api": [420, 421, 437], "aplei": 432, "appar": 437, "appdata": 421, "appear": [310, 421, 422, 425, 437], "append": [396, 417], "appendix": 425, "appli": [28, 37, 38, 39, 54, 181, 199, 226, 228, 310, 321, 329, 331, 366, 384, 385, 388, 389, 391, 392, 394, 395, 401, 416, 421, 422, 425, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441], "applic": [357, 420, 423, 425, 434, 435, 438], "approach": [205, 395, 404, 420, 423, 426, 428, 431, 435, 437, 441], "appropri": [44, 45, 108, 205, 404, 423, 425, 431, 436], "approxim": [10, 18, 432], "ar": [6, 12, 14, 28, 31, 35, 37, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 63, 72, 73, 74, 84, 111, 116, 117, 121, 129, 142, 144, 149, 163, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 228, 230, 232, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 289, 291, 293, 294, 297, 298, 305, 306, 307, 309, 310, 312, 316, 317, 327, 328, 330, 331, 332, 336, 337, 355, 363, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 399, 401, 402, 404, 406, 408, 409, 412, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443], "arang": [386, 396, 434], "arbitrari": [170, 199, 344, 422, 429, 434, 435, 438, 441, 443], "arbitrarili": [433, 437], "architectur": [274, 422, 439, 441], "ard_num_dim": [91, 92, 93, 96, 98, 100, 101, 102], "area": 396, "arg": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 95, 97, 99, 104, 105, 106, 152, 154, 155, 156, 157, 158, 159, 160, 163, 183, 241, 244, 249, 341, 423], "argu": 401, "argument": [65, 79, 84, 89, 142, 144, 150, 166, 168, 169, 170, 171, 197, 205, 241, 312, 331, 335, 384, 399, 406, 422, 429, 432, 434, 435, 436, 437, 438, 441], "aris": [53, 401, 422, 425, 429, 437, 443], "arithmet": [119, 433], "arizona": 424, "arm": [236, 237, 418, 424], "arm_index": 404, "around": [190, 232, 234, 406, 422, 435, 437, 443], "arr": [287, 288, 289, 353], "arrai": [117, 287, 288, 289, 300, 330, 339, 348, 352, 353, 363, 396, 422, 435, 439], "arrays_to_datafram": [386, 387, 396, 409, 410, 416, 417, 422, 438], "arriv": [420, 431], "artifici": 443, "aryl": [379, 380, 381, 383, 420, 434], "ascend": 406, "ask": [401, 420, 422, 423, 428, 431], "aspect": [382, 386, 387, 410, 427, 430], "assembl": [401, 437], "assembli": 442, "assert": [59, 336, 389, 390, 391, 392, 398, 399, 401, 402, 408, 412, 422, 425, 428, 429, 437], "assess": 438, "assign": [327, 395, 402, 408, 434], "associ": [199, 404, 425, 428, 430, 433, 441], "assum": [23, 42, 242, 312, 336, 337, 379, 380, 381, 384, 386, 387, 389, 390, 391, 392, 398, 399, 401, 404, 406, 409, 410, 412, 420, 425, 429, 431, 434, 437, 439, 440, 443], "assumpt": 438, "assur": 429, "asynchron": [420, 428, 442], "atol": [386, 387], "atompair": 136, "atompairfingerprint": 136, "attach": [23, 312, 394, 395, 396, 425], "attempt": [70, 76, 242, 355, 404, 421, 422, 427, 429, 432, 435], "attent": 171, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 237, 239, 240, 243, 247, 250, 257, 259, 261, 263, 265, 267, 277, 279, 285, 310, 313, 342, 366, 374, 422], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 78, 81, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 119, 121, 124, 125, 126, 128, 129, 131, 133, 134, 136, 138, 139, 140, 142, 144, 147, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 200, 204, 205, 214, 218, 220, 237, 239, 240, 243, 247, 250, 254, 257, 259, 261, 263, 265, 267, 274, 277, 278, 279, 282, 283, 285, 299, 302, 310, 325, 337, 342, 347, 362, 366, 367, 370, 371, 372, 373, 374, 408, 422, 423, 425, 435, 437, 439, 440], "audit": [420, 422, 423], "augment": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 199, 269, 270, 271, 422, 428], "author": 425, "authorship": 425, "auto": [12, 14, 422, 424], "auto_tutori": 349, "autocorr": 136, "autocorrfingerprint": 136, "autodoc": 422, "automat": [28, 114, 181, 247, 378, 396, 409, 421, 422, 423, 432, 433, 435, 436, 441, 442], "avail": [2, 119, 131, 133, 134, 136, 142, 169, 170, 228, 230, 254, 282, 283, 294, 362, 363, 364, 381, 383, 386, 387, 401, 406, 409, 410, 420, 421, 422, 423, 425, 427, 428, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442], "available_acq_funct": 384, "avalon": 136, "avalonfingerprint": 136, "averag": [263, 395, 396, 417, 434, 438], "avoid": [199, 313, 353, 422, 423, 427, 428, 434, 436], "awai": 440, "awar": [401, 416, 417, 422, 426, 431, 437], "ax": [84, 355, 378, 380, 395, 396, 416, 417], "axes3d": [355, 396], "axi": [197, 228, 353, 378, 386, 387, 392, 395, 396, 401, 402, 404, 406, 409, 410, 416, 417, 436], "azim": 396, "azur": 422, "b": [53, 160, 259, 297, 307, 334, 335, 380, 390, 399, 404, 413, 414, 419, 420, 423, 425, 428, 431, 434, 437], "b1": 298, "b2": 298, "back": [0, 412, 419, 422, 423, 431], "backend": 294, "background": [84, 88, 422, 432], "background_data": 84, "backport": 421, "backtest": [226, 227, 233, 379, 380, 381, 395, 415, 418, 420, 422, 435, 438], "backtick": 423, "backward": [107, 113, 182, 183, 199, 422], "bad": [406, 428, 430, 440], "bad_interv": 327, "badg": 422, "bai": 420, "baird": 424, "balanc": [116, 404, 420], "banana": 423, "bandit": [237, 384, 418, 420, 422, 424], "banner": 422, "bar": [84, 86, 398, 399, 401, 412, 413, 414, 420, 422, 432, 439], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 119, 121, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 167, 168, 169, 170, 171, 173, 176, 179, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 199, 200, 204, 205, 218, 220, 222, 237, 239, 240, 241, 242, 243, 247, 249, 250, 254, 257, 259, 261, 263, 265, 267, 271, 273, 277, 279, 282, 283, 285, 300, 302, 303, 304, 305, 306, 330, 335, 342, 355, 362, 363, 366, 378, 383, 384, 395, 396, 398, 400, 404, 418, 420, 422, 425, 426, 428, 429, 430, 432, 434, 435, 436, 437, 439], "base1": 402, "base2": 402, "base_data": 395, "base_kernel": [104, 105, 106], "base_nam": [355, 378, 380, 395, 396, 416, 417], "base_predictor": 269, "base_smil": 395, "basefingerprinttransform": 320, "baselin": [378, 380, 416, 420, 434], "basesequentialmetarecommend": [169, 170], "bashrc": 430, "basi": [100, 420, 425, 432], "basic": [91, 95, 96, 97, 98, 99, 100, 101, 102, 154, 155, 156, 157, 158, 159, 160, 228, 300, 302, 303, 379, 380, 381, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 406, 409, 410, 411, 412, 415, 418, 422, 423, 431, 433, 434, 438, 442], "basic_transfer_learn": 417, "basickernel": [95, 96, 97, 98, 99, 100, 101, 102, 422], "batch": [28, 163, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 231, 269, 270, 384, 389, 390, 391, 392, 396, 406, 409, 410, 412, 416, 417, 422, 427, 431, 435, 438], "batch_quant": 422, "batch_shap": [91, 92, 93, 96, 98, 100, 101, 102], "batch_siz": [28, 41, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 228, 232, 234, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 402, 404, 406, 409, 410, 412, 413, 416, 417, 420, 422, 427, 428, 430, 431, 438], "batchnr": 406, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 119, 121, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 200, 204, 205, 222, 237, 239, 240, 241, 243, 247, 249, 250, 254, 257, 259, 261, 263, 265, 267, 277, 279, 282, 283, 285, 300, 302, 303, 342, 362, 366, 377, 378, 379, 380, 381, 382, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443], "baybe_cach": 430, "baybe_cache_dir": [422, 430], "baybe_deactivate_polar": [422, 430], "baybe_debug_fake_hosthash": 422, "baybe_debug_fake_userhash": 422, "baybe_numpy_use_single_precis": [350, 422, 430], "baybe_telemetry_en": [420, 430], "baybe_telemetry_endpoint": [422, 430], "baybe_telemetry_host": 422, "baybe_telemetry_hostnam": [422, 430], "baybe_telemetry_usernam": [422, 430], "baybe_telemetry_vpn_check": [422, 430], "baybe_telemetry_vpn_check_timeout": [422, 430], "baybe_torch_use_single_precis": [369, 422, 430], "bayesian": [0, 173, 179, 181, 226, 228, 232, 234, 242, 261, 404, 422, 426, 428, 432, 439, 442], "bayesian_recommend": 396, "bayesianlinearmodel": 399, "bayesianlinearsurrog": [384, 439], "bayesianrecommend": [173, 181, 242, 422, 435], "bayesianridg": 398, "bcut2d": [136, 422], "bcut2dfingerprint": 136, "bcw07": 441, "becaus": [74, 139, 199, 205, 234, 316, 394, 395, 401, 417, 423, 426, 428, 429, 430, 431, 432, 433, 434, 437, 438, 441], "becom": [199, 401, 422, 426, 428, 429, 437, 440, 443], "been": [23, 70, 71, 169, 237, 239, 240, 243, 247, 261, 263, 265, 267, 336, 379, 380, 420, 421, 422, 425, 427, 428, 435, 441], "beeswarm": [84, 86, 432], "befor": [70, 171, 228, 237, 239, 240, 243, 247, 261, 263, 265, 267, 312, 378, 381, 384, 390, 395, 420, 422, 423, 430, 431, 434, 436], "begin": [169, 389, 391, 408, 412, 435], "behalf": 425, "behav": [396, 412, 437], "behavior": [181, 420, 422, 430, 433, 435, 436, 441], "behind": [433, 437, 438, 440], "being": [106, 327, 355, 404, 421, 422, 429, 430, 434, 436], "bell": [283, 287, 406, 440], "belong": [394, 437], "below": [171, 271, 289, 391, 394, 395, 401, 423, 425, 426, 428, 429, 433, 437, 439, 440, 441], "benchmark": [420, 422, 424], "benefici": [425, 426, 430], "benefit": [429, 441], "benzo": 441, "bernoulli": [237, 403, 418, 424], "besid": [420, 433, 440], "best": [12, 14, 228, 230, 232, 381, 404, 420, 430, 435], "bet": 428, "beta": [8, 19, 154, 237, 384, 422, 426], "betabernoullimultiarmedbanditsurrog": [384, 404, 422], "betaprior": [237, 422], "better": [10, 327, 380, 422, 428, 429, 431, 434], "between": [31, 50, 139, 170, 197, 205, 257, 335, 394, 396, 401, 404, 406, 410, 416, 417, 420, 422, 423, 427, 428, 429, 430, 434, 435, 436, 437, 440, 441], "beyond": [420, 432], "bias": 434, "bin": 401, "binar": 422, "binari": [279, 376, 412, 421, 422, 437], "binarytarget": [280, 404, 422], "bind": [394, 396, 425], "bit": [422, 434], "black": [226, 438, 441], "blackbox": [377, 378, 418], "blank": 423, "blob": 259, "block": [395, 401, 420, 421, 422, 430, 437], "bodi": 394, "bonilla": 441, "bool": [6, 12, 14, 23, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 87, 88, 111, 116, 117, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 210, 237, 239, 240, 243, 247, 261, 263, 265, 267, 279, 280, 287, 288, 289, 292, 305, 306, 310, 311, 316, 317, 330, 335, 337, 342, 352, 357, 375, 404], "boolean": [31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 88, 124, 125, 126, 128, 129, 131, 138, 139, 142, 166, 168, 169, 170, 171, 337, 428, 430], "boost": [265, 417], "both": [10, 144, 199, 205, 234, 289, 312, 378, 390, 395, 398, 401, 402, 404, 406, 416, 417, 420, 423, 426, 429, 432, 434, 436, 437, 440, 443], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 42, 173, 181, 183, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 386, 387, 396, 410, 416, 417, 422, 430, 435], "botorch_acqf": [23, 395, 396], "botorch_function_wrapp": 422, "botorchrecommend": [173, 183, 384, 389, 390, 391, 392, 395, 396, 398, 399, 404, 406, 410, 412, 413, 414, 420, 422, 427, 428, 431, 435], "bottom": 428, "bound": [8, 19, 31, 138, 144, 160, 197, 199, 205, 210, 270, 285, 286, 306, 312, 337, 342, 343, 378, 384, 386, 387, 396, 402, 406, 408, 409, 410, 416, 417, 422, 434, 437, 440, 442, 443], "boundari": [205, 287, 288, 406], "boundary_onli": [205, 401], "bounded": 422, "bounds_transform_func": 422, "box": [160, 226, 438, 441], "brain": [438, 441], "branch": [420, 423], "break": [242, 437], "brettpho": [379, 380, 381, 383, 384], "briefli": [438, 441], "bring": [420, 422], "bro": 259, "broad": 437, "brute": [181, 435], "bu": [379, 380, 381, 383, 384], "bucket": 401, "budget": 428, "bug": [422, 423], "build": [197, 205, 242, 395, 401, 421, 422, 423, 429, 432, 437, 441, 442, 443], "built": [205, 398, 420, 423, 428, 435], "builtin": 303, "bump": 422, "button": 422, "butyl": [379, 380, 381, 383, 384], "butylphenylphosphin": [379, 380, 381, 383, 384], "butyornitril": [379, 380, 381, 383, 384], "bypass": [144, 395], "byte": [117, 204, 243, 287, 288, 289, 346, 352, 422, 443], "c": [53, 297, 307, 379, 380, 381, 383, 384, 389, 390, 391, 392, 399, 401, 413, 414, 420, 421, 425, 428, 431, 434, 436, 437], "c1": [379, 380, 381, 383, 384, 389, 390, 391, 392, 434], "c1c2": [379, 380, 381, 383, 384], "c1ccccc1": [379, 380, 381, 389, 391], "c1ccoc1": 429, "c2": [379, 380, 381, 383, 384, 389, 391, 392], "c2ccccc2": [379, 380, 381], "c2oc": [379, 380, 381, 383, 384], "c2p": [379, 380, 381, 383, 384], "c3": [379, 380, 381, 383, 384, 389, 391], "c3c": [379, 380, 381], "c3ccccc3": [379, 380, 381, 383, 384], "c4": [379, 380, 381, 389, 391], "c4ccccc4": [379, 380, 381, 383, 384], "c5": [389, 391], "c6": [389, 391], "c_g2_min": 402, "c_g3_max": 402, "c_i": 429, "c_total_sum": 402, "cach": [293, 422, 437, 442], "cached_recommend": 293, "calcul": [293, 353, 386, 396, 416, 430, 434, 436], "calibr": 441, "call": [42, 79, 166, 168, 169, 170, 171, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 293, 294, 312, 330, 379, 380, 381, 394, 399, 401, 402, 413, 414, 420, 421, 422, 426, 428, 429, 430, 434, 437, 438, 441, 442], "callabl": [49, 65, 78, 144, 218, 226, 228, 230, 232, 234, 269, 270, 273, 274, 303, 308, 310, 312, 330, 378, 394, 422, 442], "callable_": 310, "campaign": [84, 228, 231, 232, 234, 327, 329, 331, 382, 383, 391, 393, 396, 404, 414, 416, 417, 418, 419, 420, 422, 426, 427, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443], "campaign1": 438, "campaign2": 438, "campaign_json": 428, "campaign_oh": 380, "campaign_rand": [379, 380, 381], "campaign_recr": 412, "campaign_stop": 395, "campaign_with_hook": 395, "campaignstoppedexcept": 395, "can": [13, 18, 23, 28, 31, 37, 38, 39, 53, 84, 125, 131, 139, 142, 163, 170, 173, 174, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 226, 230, 237, 239, 240, 241, 242, 243, 247, 261, 263, 265, 267, 271, 280, 292, 294, 310, 312, 316, 327, 329, 330, 349, 378, 379, 380, 381, 384, 385, 388, 389, 390, 391, 394, 395, 396, 398, 399, 401, 402, 404, 406, 408, 409, 410, 413, 416, 417, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443], "canada": 424, "candid": [12, 14, 28, 191, 193, 197, 205, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 395, 417, 422, 426, 435, 436, 442], "candidates_comp_rep": 395, "cannot": [13, 77, 78, 242, 243, 271, 317, 355, 404, 422, 425, 427, 429, 430, 434, 435, 437, 439, 441], "canon": [319, 437], "capabl": [377, 403, 405, 411, 415, 417, 422, 424, 428, 441], "captur": 434, "cardin": [31, 41, 48, 58, 59, 197, 422, 424], "cardinalityconstraint": [41, 48, 422], "care": [46, 401, 423, 429, 432, 433], "carefulli": 430, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 71, 232, 378, 380, 381, 395, 404, 416, 417, 422, 427, 438], "carri": [312, 394, 425], "cartesian": [199, 205, 206, 207, 420, 422, 431, 436], "case": [170, 234, 271, 312, 327, 338, 395, 400, 401, 409, 410, 413, 420, 421, 423, 426, 427, 428, 429, 430, 431, 434, 437, 438, 440, 441, 443], "cast": [42, 422], "cat": 335, "cat_1": 406, "cat_1_22": 406, "cat_1_33": 406, "cat_2": 406, "catch_constant_target": 422, "categor": [28, 128, 129, 133, 205, 212, 336, 420, 422, 431, 434, 436, 440], "categori": [380, 395, 420, 422, 437, 440], "categorical_1": [406, 428], "categorical_2": [406, 428], "categorical_paramet": 437, "categorical_parameter_json": 437, "categorical_parameter_reconstruct": 437, "categoricalencod": [128, 129, 389, 390, 391, 392, 406, 412], "categoricalparamet": [129, 205, 380, 389, 390, 391, 392, 399, 404, 406, 412, 413, 414, 420, 422, 431, 432, 436, 437, 442], "cattr": [217, 218, 220, 414, 421, 422, 423], "cauchi": 156, "caus": [139, 297, 303, 422, 425], "caution": 441, "cc": [379, 380, 381, 383, 384, 389, 391, 392, 401, 434, 441], "cc1": [379, 380, 381, 383, 384, 434], "ccc": [389, 391, 399, 420], "cccc": [379, 380, 381, 383, 384, 389, 391], "ccccc": [389, 391, 413, 414], "cccccc": [389, 391], "cccccccco": [429, 434], "ccccoc": [379, 380, 381, 383, 384], "cco": 401, "ccoccoccn": [413, 414], "cdot": [429, 433], "ceil": 395, "cell": [398, 434, 438, 441], "cell_lin": 441, "center": [287, 289, 342, 406, 428], "central": [422, 428], "certain": [28, 50, 78, 171, 218, 220, 226, 294, 309, 327, 356, 390, 395, 404, 420, 423, 429, 431, 432, 435, 437, 441, 443], "cesium": [379, 380, 381, 383, 384], "ch": 356, "chai": 441, "chain": [35, 166, 168, 169, 170, 171, 303, 429], "challeng": [423, 437], "chanc": 421, "chang": [50, 169, 327, 328, 329, 384, 401, 409, 420, 421, 423, 425, 428, 430, 432, 434, 436, 441], "charact": 425, "characterist": 303, "charg": 425, "check": [28, 124, 125, 126, 128, 129, 131, 138, 139, 142, 293, 309, 311, 314, 315, 316, 317, 336, 342, 351, 409, 410, 412, 420, 422, 423, 430, 432, 436, 437], "checker": 422, "checkout": 423, "chem": [420, 422, 434], "chemic": [321, 380, 383, 401, 422, 424, 429, 432, 434, 441], "cheminformat": [142, 420, 422], "chemistri": [131, 389, 391, 392], "child": [188, 189, 190, 191, 423], "chocol": 423, "choic": [228, 230, 363, 394, 401, 404, 410, 422, 429, 431, 433, 434, 435, 436, 437, 440], "choos": [164, 401, 402, 404, 406, 408, 409, 410, 419, 420, 425, 426, 428, 435, 439, 440], "chose": [409, 437], "chosen": [68, 173, 228, 230, 234, 359, 360, 384, 404, 422, 426, 429, 434, 436], "christoph": 441, "ci": [387, 416, 417, 422, 423], "circular": 434, "circumv": [421, 437], "cl": [46, 114, 215, 219, 271, 305, 306, 311, 316, 344], "claim": 425, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 81, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 218, 220, 221, 222, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 299, 300, 302, 303, 304, 305, 306, 311, 316, 320, 340, 342, 357, 361, 362, 365, 366, 384, 394, 395, 398, 404, 413, 422, 428, 429, 432, 433, 434, 435, 436, 437, 439], "classic": [404, 433], "classifi": 434, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 303, 342, 422], "classvalidationerror": [414, 421], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 237, 239, 240, 243, 247, 261, 263, 265, 267], "clean": [332, 333, 334, 421, 422, 423], "clear": [349, 441], "click": [404, 434], "clone": 423, "close": [228, 234, 282, 378, 395, 416, 417, 438], "closer": [351, 434], "closest": 352, "closest_el": 422, "closur": [226, 438], "cluster": [188, 189, 190, 191, 384, 422, 424, 442], "clustering_x": 422, "cmap": 396, "cn": [379, 380, 381, 383, 384], "co": 401, "co1": [379, 380, 381], "co2": [379, 380, 381], "co3": [379, 380, 381], "coars": [399, 412, 413, 414, 420], "coc": [399, 413, 414, 420], "cococ": [413, 414], "code": [242, 380, 399, 404, 409, 413, 414, 420, 421, 422, 425, 429, 430, 434, 438, 441, 443], "coeffici": [42, 44, 45, 386, 387, 402, 429], "coerc": 422, "collect": [28, 58, 59, 94, 104, 105, 144, 145, 153, 169, 171, 197, 205, 211, 212, 223, 230, 295, 297, 299, 309, 310, 337, 361, 363, 378, 384, 396, 401, 404, 416, 417, 420, 422, 428, 430], "color": 396, "column": [37, 38, 39, 84, 111, 116, 117, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 228, 230, 232, 234, 297, 298, 328, 330, 332, 333, 334, 335, 337, 338, 366, 375, 376, 380, 383, 389, 390, 391, 392, 395, 401, 406, 412, 416, 417, 422, 428, 436, 437, 438], "column_group": 298, "com": [259, 313, 334, 420, 422], "comb": 401, "combin": [51, 144, 199, 205, 206, 207, 303, 321, 379, 380, 381, 389, 391, 394, 395, 401, 406, 420, 421, 425, 429, 431, 432, 433, 435, 436, 438, 441, 443], "combinatori": 443, "combine_func": 108, "come": [404, 420, 428, 432, 437, 441, 443], "command": 421, "comment": 422, "commerci": 425, "commit": [420, 422, 423], "common": [153, 398, 402, 422, 423, 425, 428, 429, 434, 437], "commonli": 433, "commun": [425, 433, 441], "comp_df": [125, 128, 129, 131, 139, 142, 422], "comp_rep": [205, 396, 398, 422, 436], "comp_rep_bound": [197, 199, 205, 422], "comp_rep_byt": [204, 443], "comp_rep_column": [124, 125, 126, 128, 129, 131, 138, 139, 142, 197, 199, 205, 422], "comp_rep_human_read": [204, 443], "comp_rep_shap": [204, 443], "comp_rep_tensor": [395, 396], "compar": [144, 169, 378, 401, 402, 404, 416, 420, 422, 423, 431, 434, 440], "comparison": [395, 416, 417, 435, 437], "compat": [107, 113, 144, 173, 176, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 199, 200, 230, 243, 312, 337, 374, 384, 389, 390, 391, 392, 394, 396, 406, 412, 422, 435], "compens": 422, "compil": [421, 425], "complain": 423, "complaint": 423, "complement": [28, 335, 431], "complet": [396, 401, 427, 429, 431, 433, 437], "complex": [117, 287, 288, 289, 352, 401, 412, 416, 417, 423, 426, 427, 429, 431, 438, 441], "compli": 425, "complianc": 420, "complic": [401, 441], "compon": [63, 401, 402, 423, 426, 428, 429, 430, 431, 437, 441], "compos": [103, 422, 437], "composit": [92, 104, 105, 106], "compositekernel": [104, 105, 106, 422], "compound": 321, "comprehens": [420, 439], "compress": 437, "comput": [23, 28, 75, 84, 88, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 197, 199, 204, 205, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 271, 277, 279, 285, 322, 353, 389, 390, 391, 392, 394, 401, 402, 406, 412, 422, 425, 426, 428, 430, 434, 436, 437, 438, 442, 443], "computation": 181, "concat": [386, 387, 395, 396, 406, 409, 410, 416, 417], "concentr": [154, 155, 379, 380, 381, 383, 384, 389, 394, 395, 429], "concentrati": 389, "concentration_valu": 395, "concept": [297, 401, 433, 434, 437], "concis": 422, "concret": [422, 437], "conda": 422, "condit": [31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 327, 335, 380, 386, 390, 391, 392, 401, 420, 422, 425, 441, 442], "conduct": [28, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 232, 237, 239, 240, 243, 247, 261, 263, 265, 267, 379, 380, 381, 420, 423, 428, 441], "confid": [8, 19, 384], "config": [398, 399, 411, 418, 422, 442], "config_json": 28, "configur": [28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 73, 74, 163, 170, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 226, 228, 234, 237, 239, 240, 241, 243, 247, 253, 261, 263, 265, 267, 327, 355, 363, 382, 383, 401, 407, 410, 414, 420, 421, 422, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 438, 440, 441, 442, 443], "confirm": 396, "conflict": [420, 423, 433], "conform": [142, 322, 434], "confront": [404, 420, 431], "conjunct": 439, "connect": [54, 327, 422, 430, 434, 440], "consequ": [381, 421, 429, 430, 435, 436, 438], "consequenti": 425, "consid": [28, 31, 32, 33, 34, 35, 38, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 116, 129, 169, 199, 232, 327, 336, 337, 378, 401, 404, 406, 416, 417, 420, 422, 423, 427, 429, 431, 432, 433, 434, 437, 443], "consider": [199, 427], "consist": [164, 204, 396, 423, 425, 432], "consol": 421, "consolid": [422, 435], "consortium": 424, "conspicu": 425, "constant": [263, 271, 288, 406, 422, 423, 434, 436], "constitut": 425, "constrain": [422, 429, 440, 441], "constraint": [28, 31, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 126, 197, 199, 205, 300, 398, 399, 406, 412, 413, 414, 418, 420, 422, 424, 430, 434, 442], "constraint_1": 391, "constraint_2": 391, "constraint_3": 391, "constraints_augment": 199, "constraints_cardin": 197, "constraints_lin_eq": 197, "constraints_lin_ineq": 197, "constraints_nonlin": 197, "constru": 425, "construct": [28, 197, 199, 205, 243, 273, 378, 408, 416, 417, 420, 422, 426, 432, 437, 442], "constructor": [188, 189, 190, 191, 199, 219, 261, 265, 267, 401, 408, 413, 414, 422, 426, 428, 431, 433, 434, 442, 443], "consult": 420, "consum": [169, 394], "consumpt": 430, "cont_ind": 410, "cont_indic": [409, 410], "cont_paramet": 410, "cont_recommend": [173, 410], "contact": [420, 424], "contain": [28, 31, 37, 38, 39, 59, 62, 67, 84, 111, 116, 117, 121, 125, 128, 129, 131, 139, 142, 144, 148, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 206, 207, 211, 226, 228, 230, 232, 237, 239, 240, 243, 247, 261, 263, 265, 267, 277, 279, 285, 287, 288, 289, 297, 298, 312, 322, 327, 329, 335, 336, 342, 353, 355, 357, 363, 375, 376, 380, 381, 395, 396, 402, 404, 410, 416, 417, 421, 422, 423, 425, 428, 429, 431, 432, 435, 436, 437, 438, 443], "content": [144, 169, 199, 230, 328, 364, 422, 425, 437], "context": [166, 168, 169, 170, 171, 226, 241, 360, 394, 404, 408, 416, 417, 422, 428, 431, 432, 434, 437, 438, 441, 443], "contextu": 441, "continu": [10, 13, 23, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 67, 124, 125, 126, 128, 129, 131, 138, 139, 142, 173, 181, 197, 199, 200, 205, 206, 207, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 384, 386, 389, 390, 391, 392, 402, 406, 407, 410, 412, 418, 420, 422, 428, 430, 431, 435, 437, 438, 442], "continuous_subspac": 436, "continuouscardinalityconstraint": [58, 197, 422], "continuousconstraint": [34, 42, 197, 422, 429, 431], "continuouslinearconstraint": [197, 386, 387, 402, 422, 442], "continuouslinearequalityconstraint": 422, "continuouslinearinequalityconstraint": 422, "continuousnonlinearconstraint": [41, 197, 422], "continuousparamet": [138, 197, 422], "contract": 425, "contrast": [205, 316, 402, 404, 427, 431], "contribut": [420, 422, 425, 443], "contributor": [420, 425], "contributori": 425, "control": [13, 18, 144, 154, 181, 197, 205, 337, 406, 409, 420, 422, 425, 426, 430, 433, 434, 435, 440, 442], "convei": 437, "conveni": [422, 436, 437], "convent": 199, "converg": 432, "convers": [28, 170, 398, 408, 422, 425, 432, 442], "convert": [25, 112, 201, 214, 313, 317, 321, 324, 325, 338, 339, 343, 346, 349, 399, 413, 414, 422, 428, 430, 437, 438], "convert_sklearn": 398, "convert_sklearn_bayesian_ridg": 398, "cooki": 423, "coordin": 363, "copi": [395, 420, 422, 425, 443], "copyright": [420, 425], "core": [28, 197, 199, 200, 205, 232, 234, 237, 239, 240, 241, 243, 247, 254, 261, 263, 265, 267, 384, 420, 422, 431, 440], "coregion": 441, "coretest": [422, 423], "corpu": 434, "correct": [28, 274, 396, 420, 422, 423, 437], "correctli": [401, 410, 422], "correl": [131, 142, 334, 434, 441], "correspond": [23, 28, 41, 111, 116, 121, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 218, 226, 228, 230, 237, 239, 240, 243, 247, 261, 263, 265, 267, 287, 293, 312, 315, 317, 320, 321, 327, 330, 331, 337, 338, 375, 376, 378, 383, 384, 401, 404, 410, 416, 417, 420, 422, 423, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "correspondingli": 28, "corrupt": 329, "cost": [380, 404], "costli": [199, 202, 208, 428], "could": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 139, 324, 384, 394, 395, 401, 402, 417, 422, 427, 429, 434, 438, 440, 441], "count": [294, 395, 401, 429], "counterclaim": 425, "counterpart": [312, 436], "coupl": 396, "cours": [416, 417, 423, 437, 441], "cov": [422, 423], "cover": [316, 327, 431], "coverag": [422, 423], "cp": [379, 380, 381], "craft": 438, "crash": [421, 422], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 84, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 206, 207, 222, 230, 237, 239, 240, 241, 243, 247, 250, 255, 261, 263, 265, 267, 277, 279, 285, 327, 330, 331, 342, 355, 357, 363, 383, 394, 395, 396, 401, 402, 410, 411, 418, 419, 420, 421, 422, 423, 429, 430, 431, 432, 437, 438, 439, 440, 442, 443], "create_example_plot": [378, 380, 395, 396, 416, 417], "create_from_config": [398, 399], "create_pi_plot": 396, "creation": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 144, 202, 205, 208, 390, 392, 398, 399, 436, 437, 442], "criteria": 396, "criterion": [395, 426], "critic": 422, "cross": [416, 425], "crucial": [420, 440], "cube": 429, "cuda": 421, "cultur": [434, 441], "curran": 441, "current": [10, 28, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 232, 234, 242, 292, 349, 395, 396, 401, 426, 428, 429, 430, 431, 434, 438, 440, 441, 443], "curv": [287, 396, 406, 429, 440], "custom": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 124, 125, 126, 128, 129, 131, 134, 138, 139, 142, 144, 243, 274, 277, 279, 285, 312, 338, 377, 384, 388, 395, 404, 410, 418, 420, 422, 429, 434, 435, 438, 441, 442, 443], "custom_blackbox": 378, "custom_conversion_funct": 398, "custom_filt": 429, "custom_funct": 389, "customari": 425, "customconstraint": 389, "customdiscreteparamet": [422, 432, 442], "customencod": 131, "customonnxsurrog": [384, 398, 422], "cycl": [169, 420, 422, 431], "cyclic": 169, "d": [23, 53, 117, 297, 307, 353, 363, 396, 399, 413, 414, 416, 417, 420, 425, 436, 441], "d401": 389, "damag": 425, "daniel": 424, "darmstadt": [420, 424, 430], "dashboard": 422, "data": [13, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 66, 84, 88, 116, 121, 131, 139, 142, 163, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 228, 232, 234, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 279, 285, 294, 296, 300, 327, 329, 336, 348, 349, 364, 368, 375, 376, 377, 378, 383, 384, 386, 387, 389, 390, 391, 392, 395, 399, 401, 406, 409, 412, 413, 414, 416, 417, 418, 419, 420, 422, 426, 427, 428, 429, 430, 432, 434, 435, 437, 438, 439, 442, 443], "data_typ": 398, "databas": [28, 406, 420, 437], "dataclass": [394, 404], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 88, 111, 116, 121, 125, 128, 129, 131, 139, 142, 144, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 206, 207, 210, 224, 225, 228, 230, 232, 234, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 279, 285, 293, 297, 298, 321, 322, 364, 375, 376, 378, 379, 383, 384, 389, 390, 391, 392, 395, 396, 398, 399, 401, 402, 406, 409, 412, 416, 417, 422, 427, 428, 429, 431, 434, 442, 443], "datapoint": 422, "dataset": [169, 226, 438], "datatyp": 422, "date": 425, "dditiv": 432, "de": [217, 411, 420, 421, 422, 423, 428, 429, 435, 442], "deactiv": [420, 422, 430], "deal": [381, 427, 434, 438], "debug": 422, "decid": [139, 401, 404, 410, 426], "declar": [50, 54, 59, 191, 390, 423, 429], "decod": 398, "decor": [106, 271, 303, 330, 394, 422, 423, 438], "decorrel": [131, 142, 147, 413, 414, 434], "decreas": [169, 288, 406, 437, 441], "deduc": [386, 387, 409], "dedupl": 422, "deep": 395, "deepcopi": 422, "deeper": 432, "def": [378, 389, 394, 395, 396, 401, 404, 416, 423, 429, 438], "default": [39, 84, 116, 129, 131, 142, 144, 173, 188, 189, 190, 191, 197, 199, 205, 217, 237, 254, 257, 335, 378, 379, 381, 384, 399, 406, 410, 420, 422, 423, 428, 430, 432, 433, 434, 442], "default_campaign": 378, "default_model": 243, "defaultkernelfactori": [384, 389, 390, 391, 392, 406, 412], "defaultscal": 422, "defend": 425, "defin": [23, 28, 38, 42, 49, 134, 163, 169, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 205, 226, 247, 249, 250, 274, 329, 334, 335, 366, 379, 380, 381, 383, 389, 390, 391, 392, 398, 399, 404, 408, 422, 423, 425, 428, 429, 431, 434, 437, 438, 440], "definit": [197, 205, 316, 402, 420, 422, 425, 433, 436], "degener": [328, 342, 422], "degr": 412, "degre": 437, "degree_c": [398, 399, 412], "deliber": 425, "delici": 423, "deliveri": 434, "demand": [28, 417], "demo": 422, "demonstr": [377, 378, 379, 382, 385, 388, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 411, 412, 415, 416, 417, 422, 433, 436, 437, 441], "denot": 23, "densiti": 396, "depend": [50, 54, 76, 108, 199, 205, 226, 288, 297, 380, 384, 388, 401, 402, 408, 418, 419, 421, 422, 423, 429, 430, 431, 432, 436, 438, 440, 441, 443], "dependenciesconstraint": 422, "deprec": [61, 136, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 205, 210, 244, 303, 389, 391, 392], "deprecationwarn": [389, 391, 392, 395], "depth": 436, "deriv": [188, 189, 190, 191, 205, 316, 425, 429, 436], "descend": 288, "describ": [129, 188, 189, 190, 191, 237, 239, 240, 243, 247, 261, 263, 265, 267, 384, 389, 394, 395, 402, 404, 406, 423, 425, 427, 428, 429, 433, 434, 437, 438], "descript": 423, "descriptor": [142, 322, 422, 432, 434, 441], "deseri": [215, 219, 224, 412, 421, 422, 428, 442], "deserialize_datafram": 437, "design": [0, 18, 23, 228, 330, 394, 398, 401, 404, 425, 426, 431, 432, 433, 435, 437], "desir": [108, 116, 119, 331, 405, 406, 418, 420, 422, 426, 428, 430, 432, 433, 435, 437, 440, 443], "desirabilityobject": [28, 406, 420, 422, 437, 439, 442], "desktop": 422, "despit": 422, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 150, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 228, 232, 237, 239, 240, 241, 243, 247, 250, 257, 259, 261, 263, 265, 267, 277, 279, 285, 290, 291, 335, 342, 366, 379, 381, 386, 387, 406, 410, 419, 420, 421, 422, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441], "detect": [300, 336, 421, 423], "determin": [28, 84, 114, 171, 205, 316, 335, 346, 351, 363, 379, 401, 404, 425, 430, 435], "determinist": 363, "detriment": 434, "dev": [420, 422, 423], "develop": [420, 422, 427, 434, 438], "deviat": [6, 15, 271, 336, 398, 422], "df": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 111, 116, 121, 144, 197, 199, 205, 210, 225, 230, 297, 298, 321, 328, 332, 333, 334, 335, 337, 338, 364, 378, 389, 404, 420, 429, 436, 437, 438], "dfa": [297, 298], "di": [379, 380, 381, 383, 384, 424], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 114, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 188, 189, 190, 191, 197, 199, 202, 205, 208, 218, 219, 220, 222, 232, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 291, 307, 310, 322, 327, 342, 366, 395, 398, 416, 417, 422], "dict_bas": [379, 380, 381, 383, 384], "dict_ligand": [379, 380, 381, 383, 384], "dict_solv": [379, 380, 381, 383, 384, 389, 390, 391, 392, 401, 429], "dictat": [111, 116, 121, 199, 416, 417], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 218, 220, 222, 232, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 271, 277, 279, 285, 307, 310, 327, 342, 379, 380, 381, 383, 434, 438], "diff": 423, "differ": [52, 116, 181, 197, 199, 200, 205, 226, 234, 293, 298, 327, 329, 366, 380, 389, 394, 401, 404, 406, 409, 410, 416, 417, 420, 422, 423, 425, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438, 440, 441], "differenti": [438, 441], "difficult": 441, "digit": 338, "dilemma": 404, "dim": [23, 386, 387, 396, 398, 409, 410, 416, 417], "dimens": [23, 363, 378, 386, 387, 396, 398, 408, 409, 416, 417, 422, 434, 436, 441], "dimension": [117, 124, 125, 126, 128, 129, 131, 138, 139, 142, 257, 330, 363, 378, 416, 417, 422], "dimethylisoxazol": 441, "direct": [379, 380, 381, 383, 420, 422, 425, 431, 434, 443], "directli": [316, 417, 420, 422, 429, 433, 437, 439], "directori": [355, 410, 422], "disabl": [292, 389, 391, 392, 422, 428, 431], "disadvantag": 437, "disappear": 422, "disc_ind": 410, "disc_indic": [409, 410], "disc_paramet": 410, "disc_recommend": [173, 410], "discard": [8, 401], "disclaim": 425, "discourag": 428, "discret": [13, 23, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 67, 124, 125, 126, 128, 129, 131, 138, 139, 142, 173, 181, 188, 189, 190, 191, 193, 197, 199, 200, 204, 205, 234, 362, 383, 386, 392, 395, 396, 398, 406, 407, 410, 412, 417, 418, 420, 422, 426, 431, 432, 435, 437, 438, 442, 443], "discrete_param": [396, 416, 417], "discrete_spac": [386, 387, 410], "discrete_subspac": 436, "discretecardinalityconstraint": 422, "discreteconstraint": [28, 48, 49, 50, 51, 52, 53, 54, 55, 56, 205, 422, 429, 431], "discretecust": 389, "discretecustomconstraint": [389, 422, 442], "discretedep": 390, "discretedependenciesconstraint": [54, 59, 390, 401, 442], "discreteexcl": 391, "discreteexcludeconstraint": [391, 422, 431, 442], "discretelinkedparametersconstraint": [422, 442], "discretenolabelduplicatesconstraint": [54, 401, 422, 442], "discreteparamet": [128, 131, 139, 142, 205, 422], "discretepermutationinvarianceconstraint": [401, 442], "discreteprod": 392, "discreteproductconstraint": [392, 422, 442], "discretesamplingmethod": [13, 181, 364, 422, 426], "discretesumc": 392, "discretesumconstraint": [386, 392, 401, 422, 442], "discuss": [406, 425, 429, 436, 438], "disjoint": 205, "disk": [422, 442], "dispatch": 107, "displai": [338, 395, 425], "distanc": [139, 363], "distinct": [394, 428, 435], "distinguish": [328, 401, 422, 429, 434, 441], "distribut": [28, 150, 153, 237, 239, 240, 243, 247, 261, 263, 265, 267, 401, 406, 410, 420, 422, 425, 426, 427], "distutil": 317, "div": 398, "divers": 439, "divid": 402, "divis": 353, "dll": 421, "dmac": [379, 380, 381, 383, 384], "dmf": 429, "do": [199, 205, 242, 394, 398, 399, 401, 404, 410, 412, 413, 414, 416, 419, 420, 421, 425, 427, 429, 430, 431, 432, 434, 435, 437, 441, 442, 443], "do_baybe_work": 430, "doc": [89, 150, 303, 389, 391, 392, 420, 422], "doc101": 423, "doc103": 423, "docstr": 422, "doctest": 422, "document": [28, 349, 398, 420, 422, 423, 424, 425, 428, 432, 438], "doe": [27, 28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 181, 226, 228, 230, 232, 237, 239, 240, 242, 243, 247, 261, 263, 265, 267, 274, 312, 321, 349, 381, 384, 395, 398, 399, 401, 413, 414, 416, 417, 422, 423, 425, 429, 433, 435, 438, 439, 441, 443], "doi": [259, 334], "domain": [237, 239, 240, 243, 247, 261, 263, 265, 267, 378, 420, 436, 438], "don": [419, 431], "done": [28, 335, 336, 381, 383, 389, 390, 391, 392, 398, 399, 406, 412, 422, 426, 428, 429, 430, 431], "doubl": [349, 423, 430], "down": [437, 443], "downsid": 170, "draft": 422, "dramat": 441, "drastic": 434, "draw": [10, 101, 197, 402, 404, 408], "draw_arm": 404, "drawn": [18, 181], "drive": [396, 441], "driven": [327, 426], "driver": 421, "drop": [332, 333, 334, 395, 422, 429], "dry_run": 28, "dtype": [117, 287, 288, 289, 352], "due": [294, 417, 420, 422, 426, 429, 430, 434, 435, 436, 437, 440], "duplic": [54, 149, 300, 307, 422, 429], "dure": [28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 199, 205, 226, 310, 363, 401, 404, 416, 417, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 436, 437, 438, 439], "dynam": [404, 422, 437, 442], "d\u00fcbendorf": 424, "e": [8, 18, 23, 28, 31, 50, 52, 53, 67, 84, 87, 131, 144, 171, 199, 205, 226, 294, 300, 305, 306, 322, 327, 335, 336, 342, 371, 379, 380, 381, 399, 401, 402, 404, 420, 421, 422, 423, 426, 427, 429, 430, 432, 434, 435, 436, 437, 438, 441, 443], "e3fp": 136, "e3fpfingerprint": 136, "each": [18, 28, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 111, 116, 121, 144, 163, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 199, 228, 230, 232, 234, 242, 298, 322, 327, 328, 355, 378, 380, 381, 384, 396, 401, 402, 404, 406, 410, 416, 417, 423, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 443], "eagerli": 422, "earli": [395, 422], "earlier": [28, 419, 421], "earn": 404, "earned_reward": 404, "easi": [321, 423, 437], "easier": [423, 443], "easiest": [420, 423], "easili": [395, 420, 423, 428, 431, 434, 436, 437, 441], "ecfp": [136, 380, 422, 434], "ecfpfingerprint": 136, "ecosystem": 437, "edbo": [257, 259, 334, 422], "edbokernelfactori": [257, 422], "edit": [420, 423], "editor": 441, "editori": 425, "edwin": 441, "effect": [52, 166, 168, 169, 170, 171, 234, 394, 395, 404, 417, 422, 426, 429, 434, 435, 438, 441, 443], "effici": [205, 401, 420, 422, 436], "effortlessli": 438, "ei": [3, 384], "either": [23, 28, 200, 228, 234, 247, 271, 380, 391, 406, 410, 420, 425, 433, 434, 435, 436, 438], "elabor": 425, "elaps": 394, "elapsedtimeprint": 394, "electron": [424, 425], "electroshap": 136, "electroshapefingerprint": 136, "eleg": [416, 437], "element": [37, 38, 39, 49, 234, 300, 309, 315, 351, 352, 357, 401, 416, 417, 422, 429, 438], "elev": 396, "elif": [409, 410], "elimin": [423, 426], "els": [316, 317, 378, 379, 380, 381, 386, 387, 389, 390, 392, 395, 396, 404, 409, 410, 416, 417], "elsewher": 398, "emd": 424, "emdgroup": [290, 420], "emelin": 424, "emerg": 428, "empir": 404, "emploi": [28, 404, 435], "employe": [420, 430], "empow": 439, "empti": [88, 197, 199, 205, 212, 298, 312, 321, 335, 338, 375, 376, 401, 406, 410, 412, 422, 436], "empty_encod": [199, 205], "emptysearchspaceerror": 212, "emul": [18, 421, 422], "en": [89, 150], "enabl": [170, 292, 293, 379, 380, 381, 401, 416, 420, 421, 422, 428, 429, 430, 431, 432, 433, 435, 437, 438, 440, 441], "encod": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 138, 139, 142, 199, 205, 237, 239, 240, 243, 247, 261, 263, 265, 267, 320, 322, 379, 380, 381, 383, 384, 389, 390, 391, 392, 395, 399, 401, 404, 406, 412, 413, 414, 416, 417, 420, 422, 429, 436, 437, 441], "encompass": 428, "encount": [166, 168, 169, 170, 171, 363, 421, 422, 423, 433], "end": [0, 289, 342, 395, 399, 404, 406, 412, 425, 429, 437], "endeavor": 426, "endpoint": [422, 430], "enforc": [350, 369, 422, 423], "engin": [421, 435, 437, 438, 443], "enhanc": [23, 420], "enlarg": 434, "enough": [197, 437], "ensembl": 269, "ensur": [144, 379, 380, 381, 401, 402, 420, 429, 437, 438], "enter": [69, 205, 436], "entir": [293, 342, 364, 422, 423, 426, 430, 443], "entiti": 425, "entri": [35, 38, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 220, 237, 239, 240, 243, 247, 261, 263, 265, 267, 298, 327, 336, 364, 381, 389, 390, 391, 392, 401, 419, 422, 429, 430, 431, 432, 440, 443], "enum": [119, 133, 134, 135, 136, 200, 254, 282, 283, 302, 362, 422, 437], "enumer": [118, 132, 281, 396, 416, 417, 433], "env": [422, 423], "envar_nam": 430, "environ": [292, 350, 369, 378, 379, 380, 381, 387, 389, 390, 392, 395, 396, 398, 404, 416, 417, 420, 421, 422, 423, 442], "envvar": 290, "envvar_nam": 430, "eq": [389, 401], "equal": [42, 116, 171, 197, 404, 406, 412, 422, 429, 433, 436, 437, 440], "equat": [42, 429, 438], "equidist": 434, "equip": 429, "equival": [18, 31, 54, 387, 408, 426, 429, 438], "erg": 136, "ergfingerprint": 136, "erron": 422, "error": [169, 179, 181, 228, 230, 232, 244, 310, 353, 381, 399, 404, 421, 422, 429, 433, 434, 435], "esian": 420, "especi": 423, "essenti": [428, 435], "establish": [395, 416, 417, 441], "estat": 136, "estatefingerprint": 136, "ester": [379, 380, 381, 383, 384], "estim": [199, 204, 205, 237, 404, 422, 439, 442], "estimate_product_space_s": [199, 205, 443], "estimated_win_r": 404, "estimation_bia": 404, "estimation_vari": 404, "et": [380, 420, 434], "etc": [37, 38, 39, 126, 199, 277, 441], "ethanol": [401, 429], "euclidean": 363, "eval_during_augment": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56], "eval_during_cr": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56], "eval_during_model": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56], "evalu": [23, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 269, 270, 317, 409, 410, 422, 428, 430, 435, 438, 441], "even": [171, 271, 333, 416, 417, 425, 427, 428, 430, 434, 438, 439, 441, 443], "event": [28, 293, 395, 425], "everi": [427, 443], "everyth": [423, 429], "evolv": [396, 423], "ex": 432, "exabyt": 443, "exact": [28, 336, 394, 421, 422, 429, 434], "exactexplain": [82, 85, 432], "exactli": [111, 116, 121, 199, 401, 422, 427, 428, 436, 437], "exampl": [144, 230, 297, 298, 307, 316, 335, 377, 378, 382, 385, 388, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 407, 408, 411, 415, 416, 417, 421, 422, 423, 424, 425, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443], "example_input_nam": 398, "exceed": 395, "exceedingli": 438, "except": [28, 312, 321, 325, 340, 341, 379, 380, 381, 395, 399, 413, 414, 420, 421, 422, 425, 431], "excepthook": 421, "exceptiongroup": 422, "excess": 443, "exclud": [28, 53, 332, 389, 390, 391, 392, 406, 412, 422, 425, 429, 442], "exclude_list": 334, "exclus": [51, 388, 418, 422, 425, 429, 438, 442], "execut": [28, 61, 228, 312, 378, 380, 421, 422, 423, 425, 430, 437, 438, 441], "exemplari": 428, "exercis": 425, "exhaust": [169, 432, 435], "exist": [106, 199, 293, 303, 312, 401, 421, 422, 423, 426, 428, 429, 431, 437, 441], "exp_rep": [205, 389, 390, 391, 392, 401, 436], "exp_rep_byt": [204, 443], "exp_rep_human_read": [204, 443], "exp_rep_shap": [204, 443], "expect": [3, 4, 9, 11, 12, 14, 49, 241, 249, 312, 330, 384, 390, 396, 398, 401, 402, 404, 414, 422, 423, 428, 429, 432, 433, 434, 437, 438, 440, 443], "expens": [10, 181, 386, 438], "experi": [0, 28, 163, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 228, 237, 239, 240, 243, 247, 261, 263, 265, 267, 379, 380, 381, 383, 384, 409, 410, 422, 426, 428, 429, 431, 433, 434, 435, 440, 441, 442], "experiment": [28, 88, 111, 116, 121, 125, 128, 129, 131, 139, 142, 163, 166, 167, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 199, 204, 205, 226, 237, 239, 240, 243, 247, 261, 263, 265, 267, 277, 279, 285, 327, 329, 389, 390, 391, 392, 396, 406, 412, 420, 422, 426, 427, 429, 433, 434, 436, 437, 438, 440, 441, 442, 443], "experimentalist": 419, "explain": [66, 83, 84, 85, 87, 88, 396, 422, 424, 439, 442], "explainer_cl": [84, 88, 432], "explan": [84, 88, 422, 428, 439], "explanation_index": [84, 432], "explicit": [144, 170, 394, 395, 399, 401, 408, 413, 414, 422, 423, 437, 441, 442], "explicitli": [197, 205, 394, 410, 417, 425, 431, 436, 441], "exploit": [8, 18, 404, 422], "explor": [8, 28, 404, 426, 435, 436, 441], "exploratori": 426, "exponenti": 205, "expos": [28, 394, 422], "exposur": 422, "expr": [35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56], "express": [35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 420, 422, 425, 429], "extend": [431, 434, 441], "extens": [422, 435], "extra": [380, 421, 422], "extract": [28, 166, 168, 169, 170, 171, 337, 396, 416, 432, 442], "extract_pi": 396, "f": [317, 378, 379, 380, 381, 386, 387, 389, 390, 391, 392, 394, 395, 396, 401, 402, 406, 408, 409, 410, 416, 417, 443], "f1": 438, "f2": 438, "fabian": 424, "face": [237, 239, 240, 243, 247, 261, 263, 265, 267, 402, 404], "facilit": 435, "fact": [18, 396, 401, 419, 429, 433], "factor": [144, 428, 443], "factori": [144, 197, 247, 248, 249, 250, 251, 257, 259, 308, 384, 389, 390, 391, 392, 406, 412, 422], "fail": [410, 414, 421, 422], "failur": [279, 425], "failure_valu": 279, "fairli": 433, "fake": [230, 327, 331, 383, 384, 398, 399, 406, 422, 427, 438, 442], "fall": [171, 395, 428, 440], "fallback": [114, 205, 344, 355, 398, 422, 436], "fals": [6, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 88, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 168, 169, 170, 171, 181, 197, 199, 205, 210, 237, 243, 261, 263, 265, 267, 279, 288, 305, 306, 310, 316, 317, 330, 335, 337, 357, 375, 384, 389, 390, 391, 392, 406, 412, 413, 414, 420, 422, 430], "famili": 429, "familiar": [379, 380, 381, 384, 386, 387, 389, 390, 391, 392, 398, 399, 406, 409, 410, 412], "fang": 424, "fantasi": 10, "far": 428, "farthest": [193, 362, 363, 384, 420, 422, 424, 426, 435], "farthest_point_sampl": 422, "fashion": [287, 289], "fast": [389, 391, 392, 436, 440], "faster": 205, "fault": 79, "faulti": 421, "favicon": 422, "favor": 422, "fc": [379, 380, 381], "feasibl": [428, 432], "featur": [84, 101, 142, 334, 420, 421, 423, 429, 432, 439, 441], "fed": [420, 432], "feder": 424, "fee": 425, "feed": [419, 420, 431, 441], "feedback": 424, "feel": 395, "few": [378, 404, 422, 423, 426, 434, 437, 441, 443], "field": [219, 325, 357, 422, 441, 442], "fifti": 425, "fig": 396, "figur": [355, 396], "file": [355, 379, 380, 381, 398, 399, 410, 420, 422, 425, 430, 437, 441], "filenotfounderror": [379, 380, 381, 395], "fill": [28, 230, 396], "filler": 429, "filter": [28, 35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 199, 205, 332, 335, 389, 401, 422, 429, 431, 436, 441, 443], "filter_attribut": 422, "filter_df": [28, 422], "filterwarn": 395, "final": [378, 380, 383, 395, 401, 417], "find": [199, 310, 352, 355, 420, 426, 428, 429, 441], "fine": [399, 412, 413, 414, 420], "finer": [144, 420], "fingerprint": [136, 142, 320, 322, 420, 422, 424, 434], "finish": 427, "finit": [169, 226, 234, 341, 371, 404, 434, 438], "first": [199, 232, 351, 363, 378, 380, 383, 384, 389, 394, 395, 398, 399, 401, 406, 410, 414, 416, 417, 420, 421, 422, 428, 429, 433, 434, 435, 436, 441, 443], "fit": [28, 191, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 364, 366, 379, 380, 381, 389, 390, 391, 392, 398, 406, 412, 422, 425, 429, 434, 439], "fit_gpytorch_ml": 422, "fit_gpytorch_mll_torch": 422, "fitnr": 406, "fitzner": [420, 424], "fix": [226, 250, 395, 396, 401, 404, 409, 410, 423, 428, 434, 438, 441, 443], "flag": [23, 28, 50, 84, 88, 111, 116, 121, 181, 199, 200, 205, 330, 337, 419, 422, 428, 430, 431, 432, 435], "flake8": 422, "flexibl": [394, 408, 422, 437, 438], "flexibli": 435, "float": [8, 13, 19, 39, 42, 44, 45, 95, 96, 97, 98, 99, 100, 101, 102, 106, 108, 116, 117, 131, 138, 139, 142, 147, 148, 154, 155, 156, 157, 158, 159, 160, 181, 204, 205, 228, 232, 237, 271, 279, 280, 287, 288, 289, 294, 324, 327, 328, 329, 334, 342, 346, 348, 349, 351, 352, 353, 368, 371, 372, 373, 394, 396, 398, 404, 406, 422, 423, 442], "float64": 368, "floattensortyp": 398, "fly": [170, 437], "fn": 303, "focu": 428, "focus": [121, 410, 420], "folder": [380, 420, 423, 430, 439], "follow": [166, 168, 169, 170, 171, 199, 228, 230, 232, 379, 380, 381, 384, 386, 387, 389, 390, 391, 392, 394, 395, 399, 404, 406, 410, 413, 414, 416, 417, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "footprint": [10, 199], "forbid": 374, "forc": [84, 86, 181, 422, 423, 432, 435], "forest": [266, 267], "forgiv": 440, "fork": 423, "form": [205, 226, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 327, 419, 420, 425, 426, 428, 433, 434, 435, 436, 437, 438, 443], "formal": [402, 419], "format": [42, 291, 338, 343, 346, 398, 399, 412, 413, 420, 421, 422, 423, 428, 430, 437, 438], "format_except": 421, "former": [401, 422], "formul": 441, "formula": 401, "forrest": 422, "found": [77, 144, 197, 205, 310, 320, 349, 352, 355, 395, 401, 406, 420, 421, 423, 428, 429, 435, 441], "foundat": 435, "four": 401, "fourier": 101, "fourth": 429, "fp": [362, 422, 426], "fp_size": [136, 434], "fpsrecommend": [384, 398, 399, 412, 413, 414, 420, 427, 435], "frac": [417, 433], "frac1": 390, "fraction": [13, 96, 324, 395, 426, 429, 430], "fraction1": 390, "fraction_1": 429, "fraction_2": 429, "fraction_3": 429, "frame": [329, 432, 443], "frame1": 390, "frame2": 390, "frame_1": 429, "frame_2": 429, "framea": 390, "framea_a": 390, "frameb": 390, "framework": [428, 434], "free": [423, 425, 430], "freedom": 437, "freeli": 401, "frequenc": 101, "frequent": 404, "fresh": 395, "frictionless": 437, "friendli": 422, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 136, 138, 139, 142, 144, 150, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 222, 230, 232, 234, 237, 239, 240, 243, 247, 250, 255, 259, 261, 263, 265, 267, 271, 277, 279, 285, 288, 289, 312, 316, 317, 321, 329, 330, 332, 334, 342, 353, 355, 364, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 402, 404, 406, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 421, 423, 425, 426, 427, 429, 431, 432, 433, 434, 435, 438, 440, 441, 442, 443], "from_bound": [197, 422, 436], "from_campaign": [84, 432], "from_config": [28, 413, 414, 428], "from_datafram": [197, 199, 205, 422, 431, 436, 437, 443], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 342, 398], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 342, 398, 399, 412, 428, 437], "from_paramet": [197, 199, 205, 422], "from_preset": 247, "from_product": [197, 199, 205, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 402, 406, 408, 409, 410, 412, 413, 414, 416, 417, 420, 422, 429, 431, 436, 437, 438], "from_recommend": [84, 432], "from_record": [437, 438], "from_simplex": [205, 401, 422, 431, 436, 443], "from_surrog": [84, 432], "frozenset": 401, "fsspec": 422, "fulfil": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 395, 401, 402], "full": [23, 197, 349, 377, 418, 422, 428, 431, 432, 434, 441, 442], "full_factori": 197, "full_lik": 396, "full_lookup": [379, 380, 381], "fulli": [401, 420, 422, 430, 431, 438], "fulltest": 423, "func": 423, "func_nam": 416, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 36, 42, 43, 49, 57, 64, 71, 79, 81, 84, 100, 107, 110, 113, 115, 120, 143, 146, 179, 181, 182, 198, 203, 209, 213, 214, 222, 223, 226, 227, 229, 231, 232, 233, 238, 242, 248, 253, 268, 272, 273, 276, 283, 286, 287, 288, 289, 290, 293, 294, 296, 299, 314, 318, 323, 326, 329, 331, 336, 337, 338, 340, 345, 347, 354, 355, 358, 361, 370, 383, 389, 390, 391, 392, 394, 396, 401, 404, 412, 416, 417, 420, 421, 422, 426, 428, 429, 431, 433, 435, 436, 438, 439, 440, 441, 443], "function_nam": [416, 417], "functionalgroup": 136, "functionalgroupsfingerprint": 136, "fundament": [434, 437], "furo": 422, "further": [336, 401, 402, 412, 420, 427, 431, 435, 436, 439, 441, 442], "furthermor": 406, "furyl": [379, 380, 381], "futur": [54, 199, 242, 389, 391, 392, 395, 416, 431, 432, 440], "fuzzi": 293, "fuzzy_row_match": 293, "g": [50, 52, 53, 67, 84, 87, 131, 144, 199, 205, 300, 322, 336, 404, 420, 421, 422, 423, 426, 427, 429, 430, 432, 434, 435, 436, 438, 443], "g1": 402, "g2": 402, "g3": 402, "gain": [205, 428, 432], "gamma": 155, "gammaprior": 422, "garbag": 422, "gather": [171, 416, 417, 426, 441], "gaussian": [89, 188, 239, 245, 246, 247, 248, 252, 253, 254, 256, 257, 258, 259, 287, 384, 406, 422, 429, 435, 441], "gaussian_kd": 396, "gaussian_process": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 247, 249, 250, 254, 257, 259, 384, 422], "gaussianmixtureclusteringrecommend": 435, "gaussianprocesspreset": [247, 255], "gaussianprocesssurrog": [255, 384, 389, 390, 391, 392, 396, 406, 412, 413, 414, 422, 439], "gcf": [379, 381], "ge": 387, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 135, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 237, 239, 240, 243, 247, 250, 257, 259, 261, 263, 265, 267, 277, 279, 285, 291, 316, 322, 328, 342, 358, 366, 378, 384, 394, 401, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 437, 438, 439, 440, 441, 442, 443], "geom_mean": [108, 116, 119, 406, 433], "geometr": [119, 353, 406, 433], "germani": [420, 424, 430], "get": [28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 179, 181, 197, 247, 327, 384, 395, 401, 409, 410, 419, 420, 422, 427, 442, 443], "get_candid": [205, 395], "get_cmap": 396, "get_comp_rep_parameter_indic": [199, 422], "get_current_recommend": [166, 168, 169, 170, 171, 422], "get_integration_point": 13, "get_invalid": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56], "get_invalid_polar": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56], "get_lin": 395, "get_next_recommend": [166, 168, 169, 170, 171, 422], "get_non_meta_recommend": [166, 168, 169, 170, 171, 422], "get_parameters_by_nam": [197, 199, 205], "get_parameters_from_datafram": [197, 205], "get_subclass": 384, "get_surrog": [28, 84, 179, 181, 422, 432, 439], "get_transform_object": 422, "get_transform_paramet": 422, "get_valid": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 422], "getawai": 136, "getawayfingerprint": 136, "ghosecrippen": 136, "ghosecrippenfingerprint": 136, "git": [420, 423], "github": [259, 290, 313, 334, 398, 422, 423, 424], "give": [398, 399, 401, 417, 425, 428, 433, 437], "given": [26, 28, 31, 37, 38, 39, 59, 77, 84, 87, 88, 111, 116, 121, 129, 142, 144, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 211, 226, 230, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 271, 282, 294, 298, 305, 306, 310, 311, 312, 315, 316, 319, 320, 324, 327, 330, 337, 342, 343, 351, 353, 356, 357, 363, 366, 389, 390, 391, 392, 395, 401, 404, 406, 410, 416, 417, 428, 436, 438], "glass_transition_tempc": 434, "global": [13, 359, 422, 442, 443], "gmean": 353, "gmm": 188, "go": [297, 401, 420], "goal": [378, 404, 433, 441], "goe": 439, "good": [327, 395, 406, 428, 430, 440], "good_interv": 327, "good_reference_valu": 327, "goodwil": 425, "googl": [422, 423], "govern": 420, "gp": [237, 239, 240, 243, 247, 261, 263, 265, 267, 422], "gpytorch": [89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 150, 152, 154, 155, 156, 157, 158, 159, 160, 422], "grab": 419, "gradient": [10, 181, 265, 422, 430, 435], "grant": [422, 425], "granular": [399, 412, 413, 414, 420], "granularity_coar": 412, "granularity_fin": 412, "great": [404, 437], "greater": 171, "greatli": 423, "greedi": [181, 422, 435], "grid": [416, 417], "grid_d": [416, 417], "grossli": 425, "group": [298, 307, 366, 402, 420, 422, 428, 432], "groupbi": [232, 234], "grow": 443, "gt": [392, 401], "gu16": 434, "guarante": [422, 429, 430, 435], "guid": [383, 420, 421, 422, 423, 426, 428, 431, 433, 436, 438, 441], "guidelin": [422, 423, 426], "ha": [50, 70, 71, 84, 169, 197, 199, 205, 237, 239, 240, 243, 247, 261, 263, 265, 267, 297, 310, 312, 316, 328, 363, 364, 380, 384, 389, 390, 391, 392, 401, 406, 410, 412, 420, 422, 423, 425, 427, 428, 429, 432, 434, 436, 437, 438, 440, 441], "had": [226, 429, 434, 438], "half": [139, 156, 157, 342, 410, 427], "halfcauchyprior": 422, "halfnormalprior": 422, "hamster": 441, "hand": [42, 142, 402, 404, 416, 417, 420, 428, 437], "handl": [84, 126, 228, 230, 271, 340, 389, 390, 404, 406, 422, 428, 433, 443], "happen": [169, 406, 410, 417, 421, 422, 423, 436, 437, 441], "happili": 433, "hard": [422, 441, 443], "harmless": 425, "hartmann": [396, 416, 417], "hasattr": [386, 387, 409, 410], "hash": [291, 420, 430, 434], "hashabledict": 422, "have": [23, 28, 35, 37, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 111, 116, 121, 142, 191, 199, 226, 242, 274, 298, 307, 310, 327, 336, 337, 349, 379, 380, 383, 384, 389, 390, 394, 396, 401, 402, 404, 406, 409, 410, 416, 417, 420, 421, 422, 423, 425, 426, 427, 428, 429, 431, 433, 434, 435, 437, 438, 439, 441, 443], "head": 422, "header": 357, "heart": 441, "heatmap": [84, 86], "help": [404, 437, 438, 441], "helper": [394, 396, 398, 401, 437], "henc": [321, 401, 404, 412, 429, 434, 443], "here": [53, 349, 379, 381, 383, 386, 387, 394, 395, 399, 401, 402, 409, 410, 412, 416, 417, 419, 420, 421, 427, 429, 431, 433, 434, 435, 436, 437, 438, 440, 441], "herebi": 425, "herein": [425, 428], "heurist": 181, "hierarch": 437, "hierarchi": [77, 422, 423, 428, 437], "high": [257, 378, 404, 422, 423, 426, 428, 429, 434, 437], "higher": [142, 404, 421, 429, 432, 435], "highest": [426, 437], "highlight": 441, "hint": 423, "histogram": 294, "histori": 423, "hold": [41, 307, 425, 437], "home": [389, 391, 392], "homepag": [420, 422], "hood": 434, "hook": [46, 114, 205, 214, 218, 312, 418, 421, 422, 423], "hopp": [420, 424], "host": [420, 422, 430], "hostnam": [291, 430], "hot": [133, 380, 404, 420, 422, 434], "how": [51, 228, 230, 363, 378, 379, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 410, 412, 413, 414, 417, 420, 428, 429, 430, 433, 438, 439, 440, 441], "howev": [144, 205, 242, 312, 394, 401, 404, 409, 410, 419, 421, 423, 425, 426, 427, 428, 429, 430, 432, 434, 436, 437, 438, 439, 441, 443], "hrovatin": 424, "html": [89, 150, 290, 303, 349, 398, 422], "http": [89, 150, 259, 290, 303, 313, 334, 349, 420, 422, 425, 441], "hue": [378, 379, 380, 381, 395, 416, 417], "human": [204, 346, 412, 422, 424, 437], "hybrid": [22, 23, 67, 172, 173, 181, 194, 199, 200, 384, 385, 389, 390, 391, 392, 406, 407, 412, 418, 420, 422, 435, 436], "hybrid_recommend": 410, "hybrid_sampl": [181, 435], "hyperrectangl": [197, 436], "hypothesi": [420, 422, 423], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 66, 67, 69, 70, 71, 72, 74, 84, 87, 88, 103, 106, 117, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 212, 226, 228, 230, 232, 234, 237, 239, 240, 241, 242, 243, 247, 257, 261, 263, 265, 267, 271, 274, 282, 287, 288, 289, 292, 293, 294, 298, 301, 302, 303, 305, 306, 310, 312, 313, 315, 316, 317, 320, 321, 327, 328, 329, 330, 331, 335, 336, 337, 338, 341, 342, 349, 351, 352, 355, 357, 363, 364, 371, 375, 376, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 402, 404, 406, 409, 410, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443], "ideal": [427, 429, 438], "ident": [144, 297, 298, 431, 434, 437, 441], "identif": 404, "identifi": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 232, 307, 321, 336, 337, 395, 422, 429, 432, 434, 436, 437, 438, 441], "idx_offset": 42, "ignor": [111, 116, 121, 169, 181, 199, 206, 207, 228, 230, 232, 310, 334, 381, 395, 410, 422, 429, 437, 443], "ignore_exampl": 422, "ignore_list": 333, "ii": 425, "iii": 425, "illustr": [408, 431], "iloc": 427, "imag": [404, 422], "imagin": [401, 404], "immedi": [355, 394, 428], "immut": 422, "impact": [380, 417, 430], "imperfect": 329, "implement": [18, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 117, 163, 174, 234, 241, 314, 389, 395, 401, 416, 422, 423, 424, 426, 432, 435, 436, 438, 441], "impli": [401, 420, 425, 429, 434], "implicitli": 437, "import": [76, 84, 116, 230, 395, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "impos": [401, 402, 429], "imposs": [420, 430, 431, 437], "improv": [3, 4, 7, 9, 11, 12, 14, 16, 384, 387, 393, 395, 418, 420, 422, 425, 430], "imput": [228, 230, 377, 381, 418, 420], "impute_mod": [228, 230, 232, 381, 438], "inabl": [420, 425], "inaccuraci": 420, "inact": 41, "inc": 441, "incident": 425, "includ": [59, 111, 116, 121, 171, 228, 305, 306, 333, 379, 390, 399, 401, 413, 414, 417, 422, 423, 425, 426, 427, 429, 431, 443], "inclus": 425, "incom": 437, "incompat": [63, 64, 65, 66, 67, 88, 243, 391, 429], "incompatibilityerror": 28, "incompatibleacquisitionfunctionerror": 427, "incompatibleexplainererror": 432, "incomplet": 422, "inconsist": 422, "incorpor": [425, 427, 439, 443], "incorrect": 422, "incorrectli": 422, "increas": [10, 169, 232, 288, 289, 406, 416, 417, 422, 426, 434, 441], "increment": 205, "incur": 425, "indefinit": [169, 228], "indemn": 425, "indemnifi": 425, "indent": 357, "independ": [173, 239, 263, 398, 422, 435, 438], "independentgaussiansurrog": [243, 261, 263, 265, 422], "index": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 199, 232, 297, 298, 335, 336, 398, 399, 406, 410, 412, 422, 432, 434, 436, 438], "indexkernel": 422, "indic": [28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 79, 84, 87, 124, 125, 126, 128, 129, 131, 138, 139, 142, 166, 168, 169, 170, 171, 199, 297, 298, 301, 302, 330, 363, 401, 410, 422, 425, 431, 435, 438, 439], "indirect": [305, 306, 425], "indistinguish": 401, "individu": [50, 51, 104, 105, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 228, 338, 395, 402, 425, 428, 431, 433, 435, 441], "induc": 404, "industri": 441, "ineffici": 205, "inequ": [42, 197, 436], "inf": [8, 389, 390, 391, 392, 412], "infeas": 431, "infer": [144, 243, 416, 417, 422, 436], "inferencesess": 243, "infin": 148, "infinit": [169, 170, 308, 341, 371, 372, 422, 434], "influenti": 441, "info": [294, 422], "inform": [23, 126, 277, 337, 379, 380, 381, 396, 401, 409, 410, 417, 420, 422, 423, 425, 427, 430, 431, 434, 436, 441, 442], "infring": 425, "ingest": [205, 228, 434, 435], "ingredi": [401, 402, 429], "inher": [18, 401], "inherit": 423, "init": 273, "initi": [95, 96, 97, 98, 99, 100, 101, 102, 106, 171, 173, 181, 188, 189, 190, 191, 193, 205, 228, 232, 293, 363, 377, 389, 390, 391, 392, 395, 396, 406, 412, 417, 418, 422, 424, 428, 430, 434, 435, 437, 438, 441], "initial_data": [228, 232, 379, 417, 438], "initial_recommend": [171, 384, 395, 396, 398, 399, 404, 412, 413, 414, 420, 435], "initial_recommender_cl": 422, "initial_strategi": 422, "initial_typ": 398, "inject": 437, "inner": [164, 335, 432, 435, 437], "inplac": [380, 416, 417, 443], "input": [37, 38, 39, 117, 125, 128, 129, 131, 139, 142, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 277, 279, 285, 287, 307, 324, 325, 329, 330, 331, 335, 342, 344, 351, 363, 375, 376, 378, 398, 406, 416, 417, 422, 437, 438, 441], "input_dim": 398, "input_label": 330, "inputtransform": 366, "insid": [395, 398, 399, 421, 437], "insight": [84, 395, 420, 422, 424, 442], "inspect": [316, 394, 401], "instabl": [422, 429], "instal": [422, 423, 430, 432, 434, 443], "instanc": [37, 38, 39, 50, 53, 84, 171, 199, 327, 390, 395, 401, 402, 420, 421, 423, 427, 428, 429, 430, 432, 434, 436, 437, 438, 443], "instanti": [243, 395, 428], "instead": [166, 168, 169, 170, 171, 293, 321, 330, 389, 391, 392, 420, 421, 422, 428, 429, 433, 434, 437, 438, 440, 441, 443], "institut": [424, 425], "instruct": [420, 422, 440, 442], "instrument_nam": 294, "int": [10, 13, 18, 28, 31, 41, 42, 48, 84, 91, 92, 93, 96, 98, 99, 100, 101, 102, 117, 133, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 228, 232, 234, 279, 280, 287, 288, 289, 294, 331, 338, 352, 356, 359, 360, 363, 364, 366, 389, 391, 392, 401, 404, 406, 417, 423, 434], "integ": [31, 133, 199, 232, 410, 422, 423, 434], "integr": [13, 422, 423, 426, 428], "intend": [383, 394, 416, 423, 435], "intens": 434, "intention": 425, "interact": [27, 28, 383, 420, 421, 428, 431, 437], "interchang": 401, "interconnect": 428, "interest": [432, 433, 443], "interfac": [163, 241, 249, 394, 396, 422, 425, 428, 431, 432], "intermedi": [191, 363], "intern": [28, 42, 54, 169, 378, 395, 406, 422, 429, 430, 434, 435, 436, 437], "internet": 420, "internship": 424, "interplai": 422, "interpol": [96, 257, 422], "interpret": [199, 226, 324, 399, 401, 413, 414, 417, 430, 436, 438], "interrupt": 61, "intersect": 410, "interv": [138, 285, 287, 288, 289, 406, 422, 428, 434, 437, 440], "intrins": 441, "introduc": [421, 422, 429, 434, 435, 438], "intuit": [428, 432], "invalid": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 68, 205, 321, 364, 399, 413, 421, 428, 429, 436], "invalid_config": 414, "invalid_surrogate_model": 399, "invalid_typ": 414, "invari": [50, 53, 54, 297, 298, 429], "invers": [218, 437], "invert": [28, 335], "investig": [226, 438, 439], "invok": [438, 442, 443], "involv": [28, 205, 394, 401, 420, 430, 432, 433, 434, 437, 441], "io": 290, "irrelev": [401, 422, 429], "irrevoc": 425, "is_bound": [342, 422], "is_continu": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142], "is_degener": 342, "is_discret": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142], "is_empti": [197, 205, 422], "is_eq": 42, "is_finit": 422, "is_fully_unbound": 342, "is_half_bound": 342, "is_in_rang": [124, 125, 126, 128, 129, 131, 138, 139, 142], "is_left_bound": 342, "is_mc": 422, "is_numer": [124, 125, 126, 128, 129, 131, 138, 139, 142, 422], "is_right_bound": 342, "is_stat": [166, 168, 169, 170, 171, 422, 431], "iso": 398, "isoxazol": 441, "issu": [242, 303, 313, 422, 425, 438, 443], "item": [38, 124, 125, 126, 128, 129, 131, 138, 139, 142, 401, 404, 416, 417, 434], "iter": [28, 138, 169, 170, 199, 228, 242, 285, 308, 327, 329, 331, 343, 375, 376, 379, 389, 390, 391, 392, 395, 396, 404, 416, 417, 420, 422, 426, 428, 434, 435, 438, 439, 443], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 197, 199, 205, 222, 234, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 294, 297, 304, 312, 316, 327, 342, 346, 378, 384, 394, 396, 401, 402, 404, 417, 420, 421, 423, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 438, 441, 443], "itself": [394, 416, 421, 441], "j": [380, 420, 434, 441], "jackiepho": [379, 380, 381], "januari": 425, "javadi": 424, "jin": 424, "join": [335, 421], "joint": 428, "jointli": 428, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 342, 355, 398, 399, 412, 413, 422, 442], "json_str": 437, "juli": 424, "julian": 424, "jump": [422, 441], "jupyt": 398, "just": [404, 419, 423, 437], "k": [139, 189, 363, 378, 379, 380, 381, 383, 384, 386, 387, 395, 401, 408, 409, 410, 422, 431, 435, 443], "karin": 424, "kde": 396, "keep": [49, 142, 197, 205, 395, 422, 423], "kei": [307, 327, 380, 423, 432], "kept": [335, 434, 439], "kernel": [91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 247, 248, 249, 250, 251, 257, 259, 384, 389, 390, 391, 392, 406, 412, 422, 429, 441], "kernel_factori": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 247, 249, 250], "kernel_or_factori": 247, "kernelexplain": [82, 84, 85, 88, 432], "kernelfactori": [247, 250, 251, 257, 259, 422], "keyword": [84, 142, 381, 384, 410, 417, 422, 427, 429, 436, 438], "kgaa": [420, 424, 430], "kian": 441, "kickstart": 437, "kind": [181, 420, 422, 425, 429, 434, 435], "kiter": [389, 390, 391, 392, 406], "klekotaroth": 136, "klekotarothfingerprint": 136, "kmean": 384, "kmeansclusteringrecommend": [384, 435], "knob": 420, "know": [404, 413, 420, 421, 437, 441], "knowledg": [8, 10, 420, 422, 441], "known": [429, 431, 441], "koller": 441, "kwarg": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 95, 97, 99, 104, 105, 106, 152, 154, 155, 156, 157, 158, 159, 160, 163, 183, 241, 244, 249, 322, 331, 341], "kwargs_conform": [142, 322, 434], "kwargs_fingerprint": [142, 322, 434], "l0": 31, "l1": 434, "l664": 259, "label": [53, 54, 131, 142, 294, 330, 401, 402, 420, 422, 429, 434, 436, 438], "labelpad": 396, "laggner": 136, "laggnerfingerprint": 136, "lambda": [389, 391, 392, 395, 401, 416, 439], "lanat": 432, "land": 422, "languag": [303, 402, 420], "larg": [142, 205, 386, 387, 402, 422, 430, 434, 438, 443], "larger": [96, 139, 364, 384, 391, 428, 429, 437, 441], "largest": [363, 404, 426], "last": [169, 404, 423, 428, 435], "last_call_tim": 394, "lastli": 396, "latent": 434, "later": [139, 421, 428, 437], "latest": [170, 420, 423, 428], "latter": [18, 28, 297, 316, 395, 401, 428, 441], "law": [420, 425], "lawsuit": 425, "layer": 136, "layeredfingerprint": 136, "layout": 422, "lazi": [207, 367, 422], "lazili": [422, 430], "lazyfram": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 207], "le": 387, "le_method": 423, "lead": [75, 406, 422, 437], "lean": 423, "learn": [13, 233, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 384, 389, 390, 391, 392, 404, 406, 412, 416, 418, 420, 422, 429, 432, 434, 439, 440, 442], "least": [169, 402, 420, 425, 427, 428], "leav": 437, "lee": 424, "left": [72, 73, 160, 228, 328, 336, 342, 390, 422, 433], "left_df": 336, "leftov": 422, "legal": 425, "legend": [379, 381], "len": [390, 395, 396, 401, 402, 404], "length": [97, 169, 170, 237], "lengthi": 428, "lengthscal": [96, 97, 98, 100, 101, 102], "lengthscale_initial_valu": [96, 97, 98, 100, 101, 102], "lengthscale_prior": [96, 97, 98, 100, 101, 102], "leq": 31, "less": [8, 298, 331, 395, 396, 404, 428, 443], "let": [378, 380, 394, 395, 396, 398, 399, 401, 402, 408, 417, 420, 429, 433, 437], "level": [329, 422, 423, 427, 428, 429, 435, 437], "leverag": [395, 428, 435], "li": 434, "liabil": 425, "liabl": 425, "lib": [389, 391, 392, 421], "librari": 421, "licensor": 425, "lie": [28, 237, 239, 240, 243, 247, 261, 263, 265, 267, 327], "liebig": 424, "life": [420, 423, 424, 443], "lifecycl": 428, "ligand": [379, 380, 381, 383, 384, 395, 420, 432, 434], "ligand_data": 395, "ligand_smil": 395, "like": [191, 232, 300, 396, 401, 404, 420, 421, 422, 423, 427, 428, 429, 431, 434, 437, 438, 441, 443], "likelihood": 237, "lime": [84, 87, 432], "limetabular": [82, 83, 432], "limit": [8, 257, 294, 396, 420, 424, 425, 429, 436, 442], "line": [342, 357, 379, 381, 395, 404, 422, 423, 426, 428, 434, 438, 441], "linear": [42, 95, 197, 261, 283, 288, 384, 385, 406, 418, 422, 423, 432, 436, 440], "linear_model": 398, "linear_regressor": 398, "linearkernel": 422, "linearli": [257, 288, 289, 406, 422], "lineplot": [378, 379, 380, 381, 395, 416, 417], "lingo": 136, "lingofingerprint": 136, "link": [52, 421, 422, 425, 434], "linspac": [389, 390, 391, 392, 396, 398, 399, 401, 409, 410, 412, 416, 417, 443], "lint": [420, 422, 423], "linter": [422, 423], "list": [31, 32, 33, 34, 35, 38, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 108, 129, 144, 149, 169, 170, 197, 199, 205, 206, 207, 210, 211, 212, 228, 232, 234, 293, 305, 306, 307, 315, 322, 327, 332, 333, 334, 336, 337, 363, 379, 384, 389, 390, 391, 392, 396, 401, 402, 404, 406, 409, 410, 417, 420, 423, 425, 429, 433, 434, 435, 436, 438], "liter": [84, 108, 169, 228, 230, 232, 329, 363, 423], "literatur": 422, "litig": 425, "littl": 421, "liver": [438, 441], "ll": 431, "load": [355, 367, 395, 398, 413, 414, 421, 422], "loc": [158, 159, 379, 381], "local": [421, 423, 430, 432, 442], "locat": [158, 159, 427, 430, 441], "lockfil": 422, "log": [158, 294, 384, 420, 430], "logarithm": [4, 11, 12, 353], "logei": [4, 422], "logic": [164, 327, 330, 378, 422, 429, 435, 438, 443], "lognormalprior": 422, "logo": 422, "long": [428, 437, 438], "longer": 422, "look": [230, 384, 401, 404, 421, 426, 428, 429, 431, 432, 437, 438, 440], "look_up_target": 228, "lookup": [226, 228, 232, 234, 330, 336, 377, 378, 396, 409, 418, 422, 432, 442], "lookup_df": 230, "lookup_test_task": 417, "lookup_training_task": 417, "lookup_valu": [386, 387, 396, 409, 410], "lookup_withmiss": 381, "loop": [226, 228, 234, 389, 390, 391, 392, 395, 406, 422, 427, 432, 438, 443], "loss": 425, "lost": 437, "lot": 408, "low": [257, 404, 421, 422, 432, 434, 437], "lower": [160, 287, 288, 289, 342, 379, 381, 396, 406, 416, 417, 434, 440], "lower_bound": 436, "lst_exclud": 332, "lt": 421, "luxuri": 428, "m": 401, "m1": 421, "mac": 421, "macc": 136, "maccsfingerprint": 136, "machin": [404, 420, 421, 423, 426, 430, 434, 440, 441], "machineri": [18, 181, 421, 423, 431, 441, 443], "made": [76, 228, 363, 381, 420, 421, 425, 429, 430, 431, 438], "magic": 441, "magnitud": [328, 329, 443], "mai": [28, 111, 116, 121, 199, 312, 419, 420, 425, 428, 431, 437, 438], "mail": 425, "main": [27, 28, 420, 422], "maintain": [271, 423, 431], "major": [422, 438], "make": [54, 181, 269, 270, 271, 303, 328, 330, 379, 381, 384, 386, 401, 402, 420, 421, 423, 425, 427, 428, 429, 431, 432, 434, 437, 441, 443], "make_explainer_for_surrog": 84, "malfunct": 425, "manag": [27, 197, 198, 199, 205, 360, 422, 425, 438], "mandatori": [419, 422, 440], "mani": [364, 401, 409, 410, 420, 428, 434, 437, 440, 441], "manipul": [422, 430], "manner": 430, "manual": [410, 421, 422, 437], "map": [131, 136, 142, 230, 232, 287, 288, 289, 310, 330, 366, 379, 380, 381, 406, 438, 440], "mapfingerprint": 136, "mapl": [82, 83, 84, 87, 432], "margin": 422, "mark": [425, 428, 441, 442], "markdown": [399, 413, 414, 422], "marker": [378, 379, 380, 381, 395, 416, 417, 422], "markers": [378, 380, 395, 416, 417], "market": 404, "marketplac": 422, "martin": [420, 424], "mask_bad1": 389, "mask_bad2": 389, "mask_bad3": 389, "mask_good": [389, 429], "mass": 154, "master": 259, "match": [28, 78, 125, 128, 129, 131, 139, 142, 144, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 277, 279, 282, 285, 293, 310, 312, 336, 337, 375, 394, 396, 406, 410, 420, 422, 427, 428, 431, 433, 437, 438, 442], "match_attribut": 422, "match_targeta": 440, "match_targetb": 440, "materi": [404, 424, 441], "matern": 96, "maternkernel": 422, "math": [395, 401], "mathemat": 422, "matmin": 421, "matplotlib": [379, 381, 396, 422], "matter": [401, 408, 423, 433], "max": [230, 282, 328, 379, 380, 381, 383, 384, 389, 390, 391, 392, 395, 396, 398, 399, 404, 406, 412, 413, 414, 420, 422, 433, 437, 438, 442], "max_cardin": [31, 41, 48], "max_column": [338, 401], "max_colwidth": 338, "max_nonzero": 205, "max_row": [338, 401], "max_sum": [205, 401, 436], "max_target": 440, "max_yield": [379, 381], "maxim": [6, 282, 383, 396, 404, 406, 420, 422, 432, 440], "maximum": [6, 31, 41, 48, 142, 197, 199, 205, 287, 338, 401, 402, 406, 422, 429, 434, 436], "mc": [404, 427], "md": 422, "me2pph": [379, 380, 381], "mean": [5, 8, 18, 28, 54, 108, 119, 189, 226, 228, 230, 232, 237, 263, 271, 353, 381, 384, 398, 404, 406, 422, 423, 425, 426, 427, 428, 429, 431, 433, 434, 435, 437, 439, 442], "meaning": 433, "meaningless": [401, 426], "meanpredictionsurrog": [271, 384, 439], "meantim": [423, 429], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 84, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 228, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 277, 279, 285, 293, 327, 331, 336, 379, 380, 381, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 406, 409, 410, 412, 419, 420, 422, 423, 426, 427, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442], "mechan": [28, 61, 116, 117, 119, 226, 229, 230, 234, 312, 335, 344, 363, 378, 394, 395, 396, 416, 417, 422, 425, 431, 432, 436, 437, 441, 442], "mechanist": 420, "media": [425, 434, 441], "mediocr": 440, "medium": [399, 412, 420, 425, 434], "medoid": [190, 422, 435], "meet": [327, 425], "mem_estim": 443, "member": [316, 429, 434], "memori": [10, 199, 204, 205, 422, 430, 442], "memorys": [199, 205, 443], "mention": 426, "merchant": 425, "merck": [420, 424, 430], "mere": [425, 433], "merg": 423, "meshgrid": [416, 417], "messag": 395, "meta": [28, 72, 166, 168, 169, 170, 171, 174, 389, 390, 391, 392, 406, 412, 420, 422, 442], "metadata": [28, 197, 205, 291, 422], "metarecommend": [168, 169, 170, 171, 422, 431], "methanol": 401, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 79, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 222, 237, 239, 240, 241, 243, 247, 249, 250, 257, 259, 261, 263, 265, 267, 270, 273, 274, 277, 279, 285, 300, 303, 312, 316, 342, 355, 362, 363, 364, 366, 396, 399, 413, 414, 419, 422, 424, 428, 430, 431, 432, 433, 434, 436, 437, 438, 439, 441], "methodtyp": [394, 395, 396], "methyldiphenylphosphin": [379, 380, 381], "methylisoxazol": 441, "metric": [404, 420, 430, 434], "mhfp": 136, "mhfpfingerprint": 136, "micromamba": 422, "middl": 431, "midpoint": 440, "might": [50, 54, 142, 199, 380, 384, 386, 390, 410, 417, 421, 427, 428, 429, 430, 432, 436, 438, 441, 443], "mimic": [89, 150, 429], "min": [282, 328, 378, 386, 387, 396, 406, 409, 410, 416, 417, 420, 422, 433, 437, 442], "min_cardin": [31, 41, 48], "min_nonzero": 205, "min_target": 440, "mind": [404, 439], "miniconda": 422, "minim": [6, 282, 406, 416, 417, 422, 436, 440], "minimum": [31, 41, 48, 139, 197, 199, 205], "minor": 422, "mirror": [428, 437], "miss": [228, 230, 381, 422, 423], "mistak": 423, "mix": [234, 401, 402, 420, 429, 434, 437, 441], "mixin": 222, "mixtur": [188, 418, 422, 429, 434, 435, 441, 443], "mobil": 422, "mode": [108, 131, 142, 169, 228, 237, 282, 285, 288, 310, 327, 377, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 395, 396, 398, 399, 409, 410, 412, 413, 414, 416, 417, 418, 420, 421, 422, 433, 435, 437, 442], "model": [13, 28, 31, 32, 33, 34, 35, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 68, 70, 84, 88, 89, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 237, 239, 240, 241, 242, 243, 247, 261, 263, 265, 267, 271, 273, 274, 349, 386, 387, 397, 416, 417, 420, 422, 424, 426, 427, 428, 429, 434, 435, 437, 438, 440, 441, 442], "model_cl": 274, "model_cluster_num_parameter_nam": [188, 189, 190, 191], "model_from_config": 398, "model_from_python": 398, "model_init": 273, "model_json": 398, "model_param": [188, 189, 190, 191, 261, 265, 267, 399, 422], "modelnottrainederror": [237, 239, 240, 243, 247, 261, 263, 265, 267], "modif": [421, 425], "modifi": [170, 230, 271, 327, 328, 329, 422, 425, 443], "modul": [0, 1, 29, 80, 81, 89, 109, 122, 140, 150, 161, 164, 174, 177, 184, 195, 213, 214, 226, 235, 245, 252, 275, 278, 295, 299, 347, 367, 370, 420, 421, 422, 423], "modular": 423, "molecul": [52, 142, 321, 401, 434], "molecular": [322, 434], "moment": [234, 257, 423, 440], "monitor": [422, 430], "monkeypatch": 421, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 71, 232, 378, 380, 381, 395, 404, 416, 417, 422, 427, 438], "monte_carlo_run": [232, 395], "mordr": [136, 142, 379, 380, 381, 383, 384, 390, 395, 399, 401, 413, 414, 420, 422, 429, 434], "mordredcommun": 422, "mordredfingerprint": [136, 434], "more": [8, 10, 54, 59, 73, 142, 169, 170, 197, 199, 205, 212, 228, 271, 290, 293, 316, 357, 381, 384, 396, 401, 402, 416, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 440, 443], "morgan": 434, "morgan_fp": [136, 422], "mors": 136, "morsefingerprint": 136, "most": [205, 228, 382, 404, 420, 423, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443], "motiv": 422, "move": [422, 437], "mpl_toolkit": 396, "mplot3d": 396, "mqn": 136, "mqnsfingerprint": 136, "mse": 404, "mu": [158, 159], "much": [380, 433, 434], "multi": [236, 237, 418, 422, 424, 427, 441], "multiarmedbandit": 404, "multipl": [37, 116, 231, 232, 329, 379, 380, 381, 390, 401, 404, 420, 422, 427, 429, 433, 440, 441, 442], "multipli": 105, "multitask": 422, "must": [50, 111, 116, 121, 199, 205, 230, 234, 312, 329, 375, 384, 394, 395, 401, 404, 406, 422, 423, 425, 426, 429, 430, 431, 433, 434, 438], "mutual": 438, "my_attribut": 423, "my_valu": 430, "mypi": [303, 313, 420, 422, 423], "mystr": 423, "n": [23, 237, 298, 317, 363, 379, 380, 381, 383, 384, 389, 390, 391, 392, 399, 401, 404, 406, 409, 410, 412], "n_arm": 404, "n_batches_don": 28, "n_cluster": [189, 190], "n_combin": 401, "n_combinations_actu": 401, "n_combinations_expect": 401, "n_compon": 188, "n_doe_iter": [228, 232, 234, 378, 379, 380, 381, 395, 396, 416, 417, 438], "n_duplic": 401, "n_estim": 399, "n_fits_don": 28, "n_interrupted_campaign": 395, "n_iter": [386, 387, 389, 390, 391, 392, 404, 406], "n_mc_iter": [232, 234, 378, 380, 381, 395, 416, 417, 438], "n_mc_run": 404, "n_mc_sampl": 18, "n_permut": 401, "n_pis_ov": 395, "n_pis_over_requir": 395, "n_point": [197, 364], "n_raw_sampl": [181, 422, 435], "n_restart": [181, 422, 435], "n_row": 331, "n_sampl": 363, "n_task": 199, "n_task_param": 422, "n_wrong_sum": 401, "naiv": [173, 263, 271, 384, 422, 436], "naivehybridrecommend": 422, "naivehybridspacerecommend": [410, 422, 435], "nake": [293, 430], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 41, 59, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 145, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 211, 220, 232, 243, 277, 279, 285, 297, 304, 310, 311, 312, 321, 322, 327, 332, 337, 350, 355, 357, 369, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 402, 404, 406, 408, 409, 410, 412, 413, 414, 416, 417, 420, 422, 423, 425, 427, 429, 430, 433, 436, 437, 438, 439, 440, 441, 443], "name_or_abbr": [304, 311], "namedtupl": 404, "namespac": [182, 422, 423], "nan": [148, 237, 371, 373, 374, 375, 376, 406], "nativ": [398, 422], "natur": [265, 380, 423, 429, 435, 437, 440], "navig": [420, 428], "nbase": 322, "nbviewer": 398, "nd": 420, "ndarrai": [117, 287, 288, 289, 330, 339, 342, 353, 363, 396, 404, 422, 438], "ne": 401, "nearli": 440, "necessari": [337, 394, 422, 423, 428, 429, 433, 434, 436, 438], "necessarili": [425, 428, 429, 436, 441], "need": [23, 28, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 234, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 312, 336, 337, 379, 380, 381, 384, 389, 392, 394, 396, 398, 401, 404, 406, 416, 417, 419, 420, 421, 422, 423, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 443], "neg": [13, 422], "negat": [6, 42, 417, 422, 441], "neglig": 425, "neither": [8, 234, 329], "neq": 31, "nest": [357, 428, 442], "neural": 441, "neurip": 441, "neutral": 8, "never": 391, "nevertheless": [316, 421], "new": [28, 44, 45, 108, 169, 171, 197, 230, 242, 287, 288, 289, 297, 334, 335, 383, 395, 396, 412, 420, 422, 423, 428, 429, 439, 441], "new_measur": 432, "new_rec": 428, "newli": [420, 423, 430, 431, 441], "next": [28, 378, 394, 396, 401, 402, 412, 416, 417, 420, 426, 427, 428, 435, 437], "ngboost": [265, 384, 422], "ngboostmodel": 399, "ngboostsurrog": [384, 399, 439], "nice": [396, 421], "nicknam": 321, "nintern": 406, "no_duplicates_constraint": 401, "no_grad": 396, "no_tl": 416, "nois": [228, 328, 329, 417, 422, 442], "noise_level": 329, "noise_perc": [228, 232, 438], "noise_ratio": 328, "noise_std": [416, 417], "noise_typ": 329, "noisi": [12, 14, 331, 416, 420, 422, 441], "non": [58, 59, 83, 111, 116, 121, 166, 168, 169, 170, 171, 173, 199, 228, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 310, 312, 316, 328, 364, 371, 372, 373, 375, 376, 401, 416, 420, 422, 425, 427, 431, 432, 436, 437], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 39, 44, 45, 54, 58, 59, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 106, 108, 116, 121, 125, 138, 139, 144, 147, 148, 149, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 202, 205, 208, 211, 212, 215, 216, 218, 220, 228, 230, 232, 234, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 273, 274, 279, 285, 293, 294, 301, 302, 312, 322, 327, 332, 333, 334, 338, 342, 343, 355, 366, 371, 372, 373, 374, 375, 376, 384, 389, 390, 391, 392, 394, 395, 396, 398, 399, 406, 412, 436, 440, 442], "nonetheless": 441, "nonlinear": [34, 197], "nonpredict": [186, 188, 189, 190, 191, 193, 194], "nonpredictiverecommend": [191, 193, 194, 422], "nonzero": [31, 205, 422], "noqa": [389, 423], "nor": [8, 329, 419], "norecommenderslefterror": [169, 170], "noreturn": [173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 244], "normal": [157, 158, 159, 389, 391, 392, 406, 421, 425, 433, 436], "normaliz": 433, "normalprior": 422, "not_a_param": 399, "notabl": [422, 431], "note": [31, 54, 199, 228, 232, 234, 242, 243, 327, 328, 329, 379, 380, 381, 384, 390, 394, 398, 399, 401, 406, 409, 410, 412, 413, 414, 419, 420, 428, 429, 430, 431, 433, 435, 436, 437, 438, 439, 441], "notebook": 398, "noteworthi": 428, "noth": [13, 28, 31, 39, 41, 42, 48, 74, 116, 129, 142, 171, 173, 179, 181, 188, 189, 190, 191, 197, 199, 205, 237, 247, 261, 265, 267, 285, 425, 434], "notic": [394, 423, 425, 437], "notimplementederror": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 117, 212, 215, 216, 234, 237, 239, 240, 242, 243, 247, 261, 263, 265, 267], "notwithstand": 425, "now": [378, 379, 380, 381, 383, 384, 389, 391, 394, 395, 396, 401, 402, 404, 406, 408, 412, 413, 416, 417, 419, 420, 422, 441, 443], "np": [117, 386, 387, 389, 390, 391, 392, 396, 398, 399, 401, 402, 404, 408, 409, 410, 412, 416, 417, 429, 434, 438, 443], "nrecommend": [383, 384, 406, 409, 410], "nu": 96, "num": [335, 346], "num_disc_1": [406, 428], "num_disc_2": 406, "num_experi": [228, 378, 379, 380, 381, 395, 416, 417], "num_fantasi": 10, "num_parameter_1": 392, "num_parameter_2": 392, "num_parameter_3": 392, "num_parameter_4": 392, "num_parameter_5": 392, "num_parameter_6": 392, "num_sampl": 101, "num_valu": [389, 390, 391, 392, 406, 412, 436], "number": [10, 13, 18, 28, 41, 101, 142, 163, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 228, 232, 234, 237, 331, 338, 342, 346, 358, 363, 364, 379, 380, 381, 386, 387, 389, 390, 391, 392, 396, 401, 404, 409, 416, 417, 420, 421, 422, 426, 428, 429, 430, 433, 434, 436, 437, 438, 443], "numer": [28, 31, 32, 33, 34, 35, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 75, 124, 125, 126, 128, 129, 131, 138, 139, 142, 197, 205, 230, 285, 328, 329, 336, 364, 375, 376, 378, 383, 386, 401, 402, 422, 429, 430, 432, 433, 434, 436, 438, 440], "numerical_measurements_must_be_within_toler": [28, 375, 422, 428], "numerical_onli": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56], "numericalcontinuousparamet": [42, 197, 378, 386, 387, 402, 408, 410, 417, 436, 438, 442], "numericaldiscreteparamet": [205, 379, 380, 381, 383, 384, 386, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 406, 409, 410, 412, 413, 414, 416, 417, 420, 436, 437, 438, 442, 443], "numericaltarget": [230, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 395, 396, 398, 399, 406, 409, 410, 412, 413, 414, 416, 417, 420, 422, 433, 437, 438, 442], "numericcontinu": 410, "numparam1": 392, "numparam2": 392, "numparam3": 392, "numparam4": 392, "numparam5": 392, "numparam6": 392, "numpi": [330, 339, 342, 348, 350, 386, 387, 389, 390, 391, 392, 396, 398, 399, 401, 402, 404, 408, 409, 410, 412, 416, 417, 422, 429, 438, 443], "nuniqu": 401, "nyou": [409, 410], "o": [378, 379, 380, 381, 383, 384, 387, 389, 390, 391, 392, 395, 396, 399, 401, 404, 416, 417, 420, 429, 430, 434], "o2": [379, 380, 381], "obj": [147, 148, 149, 216], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 116, 119, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 206, 207, 216, 217, 220, 222, 237, 239, 240, 241, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 300, 303, 310, 312, 329, 336, 337, 342, 355, 366, 378, 383, 394, 395, 396, 398, 399, 404, 408, 410, 413, 414, 421, 422, 423, 425, 428, 429, 431, 432, 435, 436, 438, 439, 440, 442, 443], "objective_json": 437, "oblig": 425, "observ": [226, 404, 438, 440], "obsolet": 422, "obtain": [228, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 380, 396, 404, 417, 420, 422, 428, 432, 437, 441], "oc": [379, 380, 381, 383, 384], "oc1": [379, 380, 381], "occur": [53, 423], "occurr": 429, "octanol": [429, 434], "off": [8, 234, 317, 390, 420, 422, 429, 430, 440], "offer": [312, 396, 401, 404, 409, 419, 420, 421, 425, 426, 431, 434, 435, 437, 438, 439, 441, 443], "offset": [42, 99], "offset_initial_valu": 99, "offset_prior": 99, "often": [402, 404, 421, 426, 429, 430, 431, 432, 434, 437, 443], "oftentim": [437, 438], "oh": [128, 133, 380, 390, 399, 404, 406, 412, 413, 414, 420, 436, 437], "ok": 406, "old": 441, "omit": [232, 312, 394, 420, 436, 437], "onc": [232, 395, 434, 438], "one": [18, 59, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 154, 163, 164, 169, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 199, 212, 230, 247, 271, 297, 298, 331, 357, 379, 380, 381, 384, 386, 401, 404, 406, 414, 416, 417, 419, 420, 421, 422, 423, 425, 427, 428, 429, 431, 433, 434, 436, 437, 438, 439, 440, 441], "onehot": 380, "ones": [199, 293, 336, 380, 410, 422, 427, 441], "ongo": [395, 441], "onli": [10, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 84, 96, 111, 116, 121, 142, 199, 205, 230, 234, 271, 293, 294, 312, 313, 316, 327, 336, 342, 357, 363, 364, 379, 384, 389, 390, 395, 396, 398, 399, 401, 409, 410, 417, 420, 421, 422, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443], "onlin": 404, "onnx": [242, 243, 349, 397, 420, 422, 439], "onnx_input_nam": [243, 398], "onnx_str": [243, 398], "onto": 423, "open": [420, 423], "opentelemetri": [420, 422, 430], "oper": [39, 42, 51, 218, 271, 330, 347, 386, 387, 391, 392, 401, 402, 421, 422, 427, 429, 430, 431, 432, 435, 437], "operator_convert": 398, "opposit": 429, "opt": [420, 430], "optim": [18, 28, 42, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 228, 232, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 327, 380, 382, 383, 386, 387, 395, 396, 401, 404, 406, 410, 422, 424, 426, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441], "optimize_acqf": [42, 181], "optimize_acqf_": 42, "optimize_acqf_discret": 181, "optimize_acqf_mix": 181, "option": [28, 76, 80, 84, 95, 96, 97, 98, 99, 100, 101, 102, 106, 116, 121, 125, 128, 129, 131, 139, 142, 144, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 218, 220, 228, 232, 234, 261, 265, 267, 273, 279, 285, 312, 322, 327, 332, 333, 334, 355, 381, 384, 398, 399, 404, 421, 422, 423, 426, 428, 429, 431, 432, 433, 436, 437, 438, 439, 440, 443], "oracl": 438, "orchestr": [423, 428], "order": [199, 205, 395, 404, 419, 420, 422, 423, 428, 429, 434, 437, 441], "ordin": 440, "org": [259, 303, 334, 398, 420, 425], "organ": 423, "origin": [23, 28, 297, 298, 307, 330, 412, 419, 422, 423, 425, 435, 437, 439], "orthogon": 423, "oserror": 421, "other": [50, 103, 197, 298, 379, 381, 383, 384, 386, 387, 395, 402, 404, 410, 416, 417, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 443], "otherwis": [42, 124, 125, 126, 128, 129, 131, 138, 139, 142, 425, 426, 431, 433, 441], "our": [378, 389, 391, 394, 395, 396, 399, 401, 402, 404, 408, 409, 410, 413, 414, 416, 417, 420, 423, 426, 428, 429, 431, 437, 438], "out": [205, 406, 417, 420, 425, 430, 438, 441], "outcom": [163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 380, 420, 434, 440], "output": [28, 106, 329, 330, 331, 355, 378, 416, 417, 421, 422, 424, 438, 439], "output_label": 330, "outputscal": 106, "outputscale_initial_valu": 106, "outputscale_prior": 106, "outsid": [28, 170, 271, 288, 289, 327, 406, 422, 437], "outstand": 425, "over": [28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 401, 419, 422, 426, 428, 431, 441], "overal": [199, 398, 399, 401, 402, 404, 422, 423, 428, 433, 441], "overlap": [58, 59, 386, 387, 429], "overrid": [218, 220, 394, 422], "overridden": [394, 423], "overview": [420, 437], "overwritten": 410, "own": [173, 378, 402, 420, 421, 422, 423, 425, 429, 434], "owner": 425, "ownership": 425, "p": [378, 379, 380, 381, 383, 384, 386, 387, 394, 396, 409, 416, 417, 423, 431, 432, 439, 443], "p1": [436, 437, 438], "p1_json": 437, "p1_via_json": 437, "p2": [436, 437, 438], "p2_json": 437, "p2_via_json": 437, "p3c4": [379, 380, 381], "p_cont": 436, "p_disc": 436, "p_g1_amount": 402, "p_g2_amount": 402, "p_g3_amount": 402, "p_i": 31, "pack": 437, "packag": [84, 136, 291, 389, 391, 392, 421, 422, 423, 434, 438, 439, 443], "page": [398, 420, 422, 423, 431], "pair": [297, 420, 434], "pam": 190, "pamclusteringrecommend": 435, "panda": [49, 206, 224, 225, 230, 321, 339, 378, 379, 380, 381, 386, 387, 389, 395, 396, 401, 402, 406, 409, 410, 416, 417, 422, 429, 430, 434, 436, 437, 438], "panic": 419, "paper": 441, "paper_fil": 441, "parallel": 423, "param": [397, 399, 418], "param1": [436, 438], "param2": [436, 438], "param_bounds_comp": 422, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 73, 84, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 117, 121, 124, 125, 128, 129, 131, 133, 134, 135, 136, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 201, 204, 205, 206, 207, 210, 211, 212, 218, 220, 222, 226, 228, 230, 232, 234, 237, 239, 240, 243, 247, 250, 257, 259, 261, 263, 265, 267, 269, 271, 273, 274, 277, 279, 285, 287, 288, 289, 293, 294, 297, 298, 305, 306, 307, 310, 312, 315, 316, 317, 320, 321, 322, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 346, 351, 352, 353, 355, 357, 359, 360, 363, 364, 366, 375, 376, 378, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 404, 406, 408, 409, 410, 412, 413, 414, 416, 417, 420, 422, 423, 429, 430, 431, 433, 437, 438, 439, 441, 442], "parameter": [154, 155, 156, 157, 158, 159, 160], "parameter_json": 437, "parameter_nam": [197, 199, 205, 410], "parameterencod": [125, 133, 134, 136, 139], "parametr": 429, "parent": 423, "pars": [344, 422], "parser": 422, "part": [13, 23, 28, 37, 67, 174, 197, 199, 205, 327, 376, 399, 410, 413, 414, 416, 417, 422, 423, 425, 426, 427, 428, 429, 435, 436, 437, 443], "parti": [425, 438], "partial": [23, 395, 442], "particl": 441, "particular": [28, 205, 226, 394, 410, 419, 420, 421, 423, 425, 428, 434, 436, 437, 438], "particularli": [312, 428], "partit": [190, 232, 234, 422, 435, 438], "partitionexplain": [82, 85], "pass": [28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 65, 84, 142, 188, 189, 190, 191, 199, 205, 216, 247, 261, 265, 267, 331, 337, 401, 412, 417, 422, 423, 427, 431, 432, 433, 434, 437], "passthrough": [25, 112, 201, 251], "patch": 395, "patent": 425, "path": [355, 380, 401, 422, 423, 430, 443], "pattern": [136, 423, 441], "patternfingerprint": 136, "pd": [28, 230, 297, 298, 335, 378, 379, 380, 381, 386, 387, 389, 395, 396, 401, 402, 406, 409, 410, 416, 417, 422, 429, 431, 434, 436, 437, 438], "pdf": 441, "peek": 437, "pend": [23, 28, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 420, 422, 442], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 422, 427, 428], "per": [228, 379, 380, 381, 384, 401, 406, 409, 416, 417, 422, 434, 436, 438], "percent": [228, 425], "percentag": [181, 293, 329, 384, 389, 390, 391, 392, 401, 406, 412, 417, 435], "perf_count": 394, "perfectli": 437, "perform": [181, 228, 293, 380, 389, 390, 391, 392, 396, 401, 413, 416, 417, 419, 420, 422, 423, 425, 426, 428, 430, 432, 434, 435, 438, 439, 441], "period": 97, "period_length_initial_valu": 97, "period_length_prior": 97, "periodickernel": 422, "perm_inv_constraint": 401, "perman": 442, "permiss": [420, 425], "permut": [50, 53, 54, 298, 422, 429], "permutation_invari": 50, "permutationexplain": [82, 85], "perpetu": 425, "persist": [422, 424, 428, 430, 437, 439], "perspect": 437, "pertain": 425, "pharmacophor": 136, "pharmacophorefingerprint": 136, "phase": [171, 402], "phaseagent1": 402, "phaseagent2": 402, "phcpho": [379, 380, 381, 383, 384], "phenomenon": 428, "philosophi": 437, "physic": [432, 438], "physiochemicalproperti": 136, "physiochemicalpropertiesfingerprint": 136, "pi": [7, 384, 395, 396], "pi_max": 396, "pi_per_iter": 396, "pi_required_fract": 395, "pi_threshold": 395, "pickl": 422, "pictur": 420, "piec": [404, 420, 428, 429], "piecewis": 98, "piecewisepolynomialkernel": 422, "pin": [23, 422], "pin_discret": 23, "pinned_part": 23, "pip": [420, 422, 423, 432, 443], "pipelin": [416, 417, 422, 423], "pival": [379, 380, 381, 383, 384], "pl": [35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56], "place": [31, 230, 327, 328, 329, 398, 399, 401, 404, 421, 422, 423, 425, 428, 431, 434, 437, 441], "placehold": 300, "plai": [428, 432, 440], "plain": 251, "plainkernelfactori": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 247], "plan": [242, 431, 434], "platt": 441, "pleas": [398, 399, 420, 426, 432, 435], "plenti": 432, "plot": [84, 86, 228, 379, 380, 381, 416, 417, 422, 439, 441, 442], "plot_abegin_convert_pipelin": 349, "plot_ebegin_float_doubl": 349, "plot_typ": 84, "plotting_them": 355, "plt": [379, 381, 396], "plu": [230, 420], "plugin": 422, "pm": [5, 384], "png": [379, 381], "po16": 434, "poetri": 422, "point": [6, 13, 18, 23, 27, 28, 84, 139, 163, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 336, 348, 349, 361, 362, 363, 364, 368, 379, 383, 384, 395, 402, 409, 410, 416, 417, 419, 420, 422, 424, 426, 427, 428, 431, 432, 435, 436, 442, 443], "points_per_dim": [396, 409, 410, 416, 417], "polar": [35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 207, 420, 422, 424, 442, 443], "poli": 396, "polici": 404, "polycollect": 396, "polym": 434, "polynomi": [98, 99], "polynomialkernel": 422, "polytop": 422, "popul": 401, "popular": [432, 434, 439], "posit": [84, 312, 363, 422, 432, 433], "posixpath": 355, "possibl": [28, 144, 205, 206, 207, 226, 312, 327, 381, 395, 396, 401, 406, 420, 422, 425, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440, 441, 443], "post": 434, "post_hook": [312, 394, 395, 396], "posterior": [5, 6, 13, 15, 18, 28, 237, 239, 240, 243, 247, 261, 263, 265, 267, 270, 384, 422, 426, 439], "posterior_mean": [237, 404], "posterior_mod": 237, "posteriorstandarddevi": [404, 426], "postprocess": 321, "potassium": [379, 380, 381, 383, 384], "potenti": [199, 336, 420, 421, 422, 423, 428, 432, 433, 436, 443], "power": [99, 425, 429, 435], "pph3": [379, 380, 381], "pr": [422, 423], "practic": [426, 432, 435], "pre": [144, 169, 250, 397, 421, 422, 423], "pre_hook": [312, 394], "precis": [54, 169, 197, 293, 338, 349, 350, 369, 422, 442], "precomput": 131, "predefin": [355, 428, 435], "predict": [28, 70, 191, 237, 239, 240, 243, 247, 261, 263, 265, 267, 420, 422, 426, 427, 428, 438, 439, 441], "predictor": 269, "prefer": [28, 425, 431, 437], "prefix": 322, "preliminari": 441, "prepar": [396, 423, 425, 443], "preprocess": 422, "presenc": 421, "present": [66, 84, 111, 116, 121, 199, 297, 298, 312, 336, 383, 404, 422, 429, 438, 443], "preset": [247, 254, 257, 259, 422], "pressur": [391, 398, 399, 412, 413, 414, 420, 429], "pretrain": [243, 397, 418], "pretti": 338, "pretty_print_df": [401, 422], "prevent": [215, 216, 312, 421, 422, 423], "previou": [169, 395, 396, 422, 428, 430, 441], "previous": [293, 379, 380, 381, 383, 391, 427, 428], "price": 434, "primari": 428, "primarili": 426, "principl": [401, 404, 439], "print": [230, 338, 357, 379, 380, 381, 383, 384, 386, 387, 391, 394, 398, 399, 401, 402, 404, 408, 409, 410, 412, 413, 414, 420, 422, 436, 443], "print_parameter_names_hook": 394, "printer_inst": 394, "prior": [95, 96, 97, 98, 99, 100, 101, 102, 106, 154, 155, 156, 157, 158, 159, 160, 237, 257, 392, 420, 421, 422], "priori": [429, 437, 441], "privat": [422, 424], "probabilist": 426, "probability_of_improv": 396, "probabilityofimprov": [395, 396], "probabl": [7, 16, 18, 384, 393, 395, 418, 422], "problem": [401, 402, 404, 416, 417, 422, 423, 428, 433, 437], "problemat": [316, 421, 434], "proce": [228, 383, 430], "procedur": [426, 441], "proceed": 441, "process": [28, 89, 245, 246, 247, 248, 252, 253, 254, 256, 257, 258, 259, 335, 363, 384, 394, 401, 404, 416, 417, 422, 423, 426, 427, 428, 429, 430, 431, 434, 437, 441], "prod": 392, "prod_constraint": 392, "prod_i": 433, "produc": [117, 230, 420, 422, 423, 430, 438], "product": [55, 105, 199, 205, 206, 207, 308, 388, 418, 420, 422, 425, 429, 431, 442, 443], "product_paramet": [205, 401, 436], "productkernel": 422, "programmat": 401, "progress": [28, 167, 396, 422, 431], "prohibit": 426, "project": [396, 420, 422, 430], "promin": 425, "promis": [395, 427], "proper": 422, "properli": [23, 406, 421, 436], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 119, 121, 124, 125, 126, 128, 129, 131, 133, 134, 136, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 200, 204, 205, 237, 239, 240, 243, 247, 250, 254, 257, 259, 261, 263, 265, 267, 277, 279, 282, 283, 285, 302, 303, 342, 362, 366, 422, 423, 429, 431], "proport": 417, "propos": 428, "protobuf": 422, "protocol": [162, 163, 241, 249, 316, 422], "prototyp": 424, "provid": [13, 28, 42, 84, 88, 117, 131, 142, 144, 163, 169, 170, 173, 174, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 218, 222, 226, 228, 230, 232, 234, 237, 239, 240, 243, 247, 257, 259, 261, 263, 265, 267, 297, 308, 312, 324, 328, 329, 334, 337, 339, 363, 364, 378, 379, 380, 381, 394, 401, 408, 409, 410, 413, 416, 417, 420, 422, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "prune": [12, 14], "prune_baselin": [12, 14], "pstd": [6, 422, 426], "pubchem": 136, "pubchemfingerprint": 136, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 119, 121, 124, 125, 126, 128, 129, 131, 133, 134, 136, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 200, 204, 205, 222, 237, 239, 240, 241, 243, 247, 249, 250, 254, 257, 259, 261, 263, 265, 267, 277, 279, 282, 283, 285, 300, 302, 303, 342, 362, 366, 422, 423], "publicli": 425, "publish": 422, "pull": [404, 422], "punish": 8, "pure": [8, 10, 13, 164, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 199, 234, 242, 364, 409, 422, 442], "purerecommend": [166, 168, 169, 170, 171, 173, 179, 186, 422], "purpos": [13, 394, 395, 398, 404, 420, 421, 423, 425, 431, 437, 443], "push": 423, "put": [401, 404, 430, 434], "puzzl": 420, "py": [259, 389, 391, 392, 422, 430], "py310": [389, 391, 392], "py312": 423, "pyarrow": 422, "pydant": 422, "pydoclint": [422, 423], "pydocstyl": 423, "pylint": 422, "pymatgen": 421, "pypi": [420, 422], "pyplot": [379, 381, 396], "pyproject": 422, "pytest": [422, 423], "python": [27, 303, 313, 380, 399, 413, 414, 420, 421, 422, 423, 428, 430, 437], "python3": [389, 391, 392], "python310": 421, "pytorch": 422, "pyupgrad": 422, "q": [98, 269, 270, 384, 427], "qei": [9, 384, 413, 414, 422], "qkg": [10, 422], "qlogei": [11, 384, 422], "qlogexpectedimprov": [384, 389, 390, 391, 392, 406, 412], "qlognei": [12, 422], "qnegintegratedposteriorvari": 426, "qnei": [14, 422], "qnipv": [13, 422, 426], "qpi": [16, 384], "qposteriorstandarddevi": 426, "qpstd": [15, 422, 426], "qsimpleregret": 18, "qsr": [17, 422], "qt": 18, "qthompsonsampl": [404, 422], "quadrat": [102, 378], "qualiti": 423, "quantif": 441, "quantifi": [404, 426, 441], "quantiti": [28, 52, 430, 432, 433, 439, 443], "quantum": 131, "qucb": [19, 384, 422, 426], "queri": [164, 174, 226, 228, 230, 420, 428, 430, 431, 438], "question": [423, 428, 441], "qupperconfidencebound": 426, "qvarucb": 422, "r": [379, 380, 381, 383, 384], "radial": 100, "radiu": [136, 422, 434], "rais": [13, 28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 84, 88, 117, 144, 148, 149, 169, 170, 179, 181, 197, 199, 205, 211, 212, 215, 216, 228, 230, 234, 237, 239, 240, 242, 243, 244, 247, 261, 263, 265, 267, 274, 298, 310, 312, 315, 317, 320, 324, 325, 327, 328, 329, 331, 336, 337, 357, 363, 364, 375, 376, 394, 395, 396, 410, 421, 422, 423, 427, 435], "rand": 398, "random": [13, 101, 197, 199, 228, 230, 232, 266, 267, 327, 362, 363, 364, 378, 379, 380, 381, 384, 395, 396, 398, 402, 404, 417, 420, 422, 426, 434, 435, 438, 443], "random_campaign": 378, "random_forest": [267, 384], "random_se": [228, 232, 395, 438], "randomforestmodel": 399, "randomforestsurrog": [384, 422, 439], "randomli": [194, 378, 380, 426, 432, 435], "randomrecommend": [378, 379, 380, 381, 384, 389, 390, 391, 392, 394, 395, 396, 402, 404, 406, 422, 427, 435], "rang": [124, 125, 126, 128, 129, 131, 138, 139, 142, 277, 327, 328, 378, 386, 387, 389, 390, 391, 392, 396, 401, 404, 406, 408, 409, 410, 417, 420, 429, 436, 437, 438, 440, 443], "rank": 440, "rare": 422, "rastrigin": [386, 387, 409, 410], "rate": [155, 237, 404], "rather": [412, 421, 426, 437], "ration": 102, "ravel": [416, 417], "raw": [181, 437], "rbf": 100, "rbfkernel": 422, "rdf": 136, "rdffingerprint": 136, "rdkit": [136, 389, 391, 392, 422, 429, 434], "rdkit2ddescriptor": [136, 380, 389, 391, 392, 422], "rdkit2ddescriptorsfingerprint": 136, "rdkitfingerprint": 136, "re": [395, 409, 410, 423, 435], "reach": [287, 289, 406], "reachabl": 430, "reactant": [432, 434], "reaction": [380, 383, 420, 429, 432, 434, 441], "reactor": [427, 441], "reactora": 441, "reactorb": 441, "reactorc": 441, "read": [131, 199, 355, 380, 383, 420, 422, 423], "read_excel": [379, 380, 381, 395], "readabl": [204, 338, 346, 412, 422, 424, 425, 437], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 228, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 423, 427], "readm": [422, 423], "reagent": [429, 434], "real": [342, 420, 428, 440], "realist": 438, "realiz": [226, 438], "reason": [39, 188, 189, 190, 191, 380, 409, 422, 425, 426, 427, 429, 430, 434, 438], "reassembl": 437, "rebas": 423, "rec": [389, 390, 391, 392, 406, 427, 428], "rec_finish": 427, "rec_next": 427, "rec_pend": 427, "receiv": [425, 430, 437], "recip": 423, "recipi": 425, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 67, 72, 73, 84, 129, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 228, 241, 242, 293, 327, 329, 331, 378, 379, 380, 381, 382, 386, 387, 389, 390, 391, 392, 394, 395, 396, 402, 404, 406, 413, 414, 416, 417, 418, 419, 420, 422, 423, 426, 430, 432, 434, 438, 439, 441, 442, 443], "recommendation_orig": 412, "recommendation_recr": 412, "recommended_arm_idx": 404, "recommender_with_hook": 395, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 84, 166, 168, 169, 170, 171, 176, 241, 394, 396, 419, 422, 427], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 342, 420, 428, 430, 437], "record": [28, 293, 294, 420, 430, 441], "recreat": [254, 412, 437], "recreate_model": 399, "recurs": [166, 168, 169, 170, 171, 305, 306], "redesign": 422, "redistribut": 425, "reduc": [142, 396, 404, 416, 417, 431, 434], "reduct": 442, "ref": 420, "refactor": 422, "refer": [226, 259, 311, 327, 336, 349, 379, 380, 381, 384, 386, 387, 389, 390, 391, 392, 394, 396, 398, 399, 401, 406, 409, 410, 412, 421, 422, 428, 432, 433, 434, 435, 436, 437, 438, 439, 441], "referenc": 423, "refin": [395, 420, 422, 428, 431], "reflect": [173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 396, 422, 423, 426, 429, 434], "regard": [31, 37, 386, 387, 423, 425], "regim": [422, 432], "regist": [312, 393, 395], "register_custom_architectur": 422, "register_hook": [393, 394, 395, 396, 422], "registr": 422, "regress": 261, "regressor": 398, "regret": [17, 18], "regroup": 422, "regular": [18, 271, 408, 421, 422, 427, 441], "reinstal": 420, "rel": [228, 328, 429, 433], "relat": [52, 111, 116, 118, 121, 132, 199, 217, 281, 296, 410, 416, 417, 419, 420, 422, 428, 429, 430, 441], "relationship": [416, 417, 420, 423, 433, 441], "relative_perc": 329, "releas": [420, 422], "relev": [50, 84, 230, 337, 390, 401, 422, 423, 428, 429, 431, 441, 443], "reli": [421, 422], "reliabl": 434, "remain": [53, 171, 234, 288, 378, 384, 389, 390, 391, 392, 401, 404, 406, 410, 412, 416, 417, 425, 434, 437, 438], "remain_switch": [171, 422], "remaind": 364, "remind": 422, "remot": 423, "remov": [49, 52, 53, 199, 205, 401, 423, 429, 436], "renam": [380, 416, 417, 422, 423], "render": [84, 398], "reoccur": 441, "reorder": 422, "reorgan": 422, "repeat": [404, 422, 423, 427, 428], "repetit": [232, 384, 395], "rephras": 429, "replac": [409, 410, 422, 423], "replic": 437, "repo": 422, "report": [163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 404, 421], "repositori": [380, 420, 423], "repr": 398, "repres": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 104, 105, 131, 199, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 324, 339, 342, 346, 363, 378, 401, 402, 404, 413, 414, 420, 422, 425, 428, 434, 436, 438, 443], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 222, 237, 239, 240, 241, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 317, 319, 324, 327, 338, 342, 357, 389, 390, 391, 392, 398, 400, 406, 412, 422, 427, 428, 434, 437, 438, 442, 443], "reproduc": [395, 404, 422, 425, 442], "reproduct": 425, "request": [28, 72, 73, 117, 169, 170, 171, 212, 250, 291, 331, 363, 364, 419, 422, 427, 428, 431], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 41, 42, 48, 71, 171, 205, 274, 312, 383, 394, 395, 398, 402, 404, 406, 409, 413, 419, 420, 421, 422, 423, 425, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 440, 441, 443], "rerun": 398, "reserv": [420, 423], "reset_index": 416, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 390, 392, 401, 437], "resolv": 321, "resort": [271, 423, 437, 443], "resource_track": 421, "resp": [200, 381, 410], "respect": [28, 181, 200, 228, 232, 292, 297, 327, 401, 402, 423, 428, 429, 431, 432, 433, 437, 438, 439, 440, 443], "respond": 419, "respons": [166, 168, 169, 170, 171, 425, 428, 435], "restart": [169, 181], "restor": 437, "restr": 18, "restrain": 434, "restrict": [199, 205, 226, 232, 234, 389, 402, 422, 431, 438, 441, 442], "result": [10, 28, 142, 205, 228, 327, 335, 379, 380, 381, 383, 398, 399, 401, 402, 404, 406, 408, 416, 417, 420, 422, 424, 425, 426, 428, 429, 430, 432, 434, 435, 437, 438, 441, 442, 443], "result_baselin": [416, 417], "result_fract": 417, "results_interrupt": 395, "results_uninterrupt": 395, "retain": [425, 429], "retrain": [242, 243, 439], "retriev": [199, 226, 304, 305, 306, 320, 423, 438], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 84, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 111, 112, 114, 116, 117, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 145, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 183, 186, 188, 189, 190, 191, 193, 194, 197, 199, 201, 202, 205, 206, 207, 208, 210, 211, 212, 215, 216, 218, 219, 220, 222, 224, 225, 228, 230, 232, 234, 237, 239, 240, 241, 243, 244, 247, 250, 251, 255, 261, 263, 265, 267, 269, 270, 271, 273, 274, 277, 279, 285, 287, 288, 289, 291, 292, 293, 294, 297, 298, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 351, 352, 353, 355, 356, 357, 363, 364, 366, 371, 372, 373, 374, 375, 376, 378, 389, 395, 396, 398, 401, 404, 416, 422, 428, 429, 438, 439, 443], "return_std": 398, "reus": [171, 422], "reuse_last": 169, "reveal": [396, 402, 417], "review": 423, "revis": [422, 425], "reward": [8, 404], "rework": 422, "rewrit": 422, "rff": 101, "rffkernel": 422, "rh": [42, 44, 45, 386, 387, 402, 429], "right": [42, 160, 336, 342, 379, 381, 390, 404, 420, 421, 423, 425, 429, 431, 433, 434, 440], "right_df": 336, "rihana": 424, "rim": 424, "risk": [8, 421, 425, 428], "roam": 421, "robust": [420, 422, 441], "robustli": 271, "role": [422, 423, 428, 432, 433, 438, 440, 442], "room": [396, 428], "root": [380, 420, 423, 429], "round": [338, 386, 398, 399, 429], "roundtrip": [422, 437], "rout": 437, "row": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 117, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 230, 293, 297, 298, 328, 331, 335, 336, 338, 353, 379, 381, 389, 390, 391, 392, 401, 402, 406, 412, 422, 428, 431, 436, 438], "rowei": 441, "roya": 424, "royalti": 425, "rq": 102, "rqkernel": 422, "ruff": [422, 423], "rule": [394, 422], "run": [228, 232, 379, 380, 381, 395, 396, 416, 417, 420, 421, 422, 423, 428, 431, 437, 438, 443], "run_full_initial_data": 379, "run_impute_mod": 381, "runner": [389, 391, 392], "runtim": [349, 421], "runtimeerror": [28, 169, 394], "rv": 404, "s3": 422, "s41586": [259, 334], "safe": [422, 423, 428], "safeti": 312, "sai": 429, "said": 423, "sake": 401, "same": [52, 171, 205, 211, 230, 237, 239, 240, 243, 247, 261, 263, 265, 267, 307, 384, 395, 398, 399, 401, 404, 412, 421, 422, 429, 430, 431, 437, 438, 441], "sampl": [10, 13, 18, 41, 181, 193, 194, 197, 294, 361, 362, 363, 364, 379, 384, 389, 390, 391, 392, 404, 406, 408, 412, 417, 420, 422, 424, 432, 442], "sample_from_full_factori": [197, 422], "sample_inactive_paramet": 41, "sample_uniform": [197, 408, 422, 438], "sampler": [384, 389, 390, 391, 392, 406, 412], "samples_full_factori": [197, 422], "samples_random": [197, 422], "sampling_algorithm": [362, 426], "sampling_fract": [13, 426], "sampling_method": [13, 426], "sampling_n_point": [13, 426], "sampling_percentag": [181, 435], "satisfi": [37, 38, 39, 205, 386, 387, 401], "save": [355, 379, 381, 398, 422, 438], "savefig": [379, 381], "scalar": [116, 406, 422, 433, 437], "scale": [106, 156, 157, 158, 159, 160, 366, 406, 416, 422, 426, 433], "scalekernel": 422, "scaler": 422, "scatter": [84, 86], "scenario": [234, 378, 379, 380, 381, 395, 401, 416, 417, 427, 429, 433, 441, 442, 443], "scene": [433, 438], "schema": 428, "schembl15068049": [379, 380, 381], "scheme": 422, "scienc": [420, 424], "scientif": [422, 441], "scikit": [136, 420, 422, 424, 434], "scipi": [353, 396, 404, 422], "scope": 378, "screen": [307, 441], "script": [321, 421, 422, 430, 443], "seaborn": [378, 379, 380, 381, 395, 416, 417], "seamlessli": 437, "search": [13, 23, 28, 35, 49, 52, 62, 67, 73, 124, 125, 126, 128, 129, 131, 138, 139, 142, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205, 209, 228, 232, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 293, 336, 337, 378, 381, 383, 385, 388, 389, 390, 391, 392, 394, 395, 396, 404, 406, 407, 412, 417, 422, 424, 427, 428, 429, 430, 431, 432, 435, 437, 438, 442], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 84, 124, 125, 126, 128, 129, 131, 138, 139, 142, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 200, 204, 205, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 378, 380, 383, 394, 395, 396, 398, 399, 401, 402, 404, 408, 412, 413, 414, 416, 418, 420, 422, 428, 429, 430, 431, 432, 434, 436, 437, 438, 443], "searchspace1": 408, "searchspace2": 408, "searchspace3": 408, "searchspace_ful": 431, "searchspace_json": 437, "searchspace_reduc": 431, "searchspacetyp": [173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 199, 384, 389, 390, 391, 392, 395, 396, 406, 412, 436], "secfp": 136, "secfpfingerprint": 136, "second": [335, 351, 353, 398, 399, 406, 414, 416, 429, 430, 432], "secondari": [420, 430], "section": [420, 422, 423, 425, 437], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 150, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 228, 232, 234, 237, 239, 240, 241, 243, 247, 250, 257, 259, 261, 263, 265, 267, 277, 279, 285, 290, 310, 316, 329, 335, 342, 366, 379, 380, 381, 386, 387, 394, 395, 399, 402, 410, 419, 420, 423, 428, 430, 431, 432, 433, 434, 437, 438, 442], "seed": [228, 232, 359, 360, 395, 396, 404, 420, 422, 443], "seek": 406, "seem": [349, 414, 421], "seen": 426, "select": [6, 37, 38, 39, 64, 71, 166, 168, 169, 170, 171, 174, 191, 193, 237, 239, 240, 243, 247, 261, 263, 265, 267, 288, 335, 363, 384, 390, 391, 401, 402, 404, 410, 420, 422, 426, 428, 429, 432, 434, 435, 437, 439], "select_recommend": [166, 168, 169, 170, 171, 422], "self": [312, 325, 371, 372, 373, 374, 394, 395, 396, 404, 423], "sell": 425, "semant": [422, 437], "sens": [54, 312, 316, 335, 429, 434], "sent": 425, "sentinel": [301, 302], "separ": [232, 234, 271, 310, 366, 367, 396, 419, 422, 423, 425, 437], "sequenc": [28, 42, 116, 148, 169, 170, 197, 199, 205, 206, 207, 210, 293, 297, 298, 312, 313, 322, 325, 330, 336, 337, 353, 433, 435], "sequenti": [168, 169, 170, 171, 181, 384, 389, 390, 391, 392, 406, 412, 422, 435], "sequential_continu": [181, 435], "sequential_greedy_x": 422, "sequentialgreedyrecommend": 422, "sequentialmetarecommend": [170, 435], "sequentialstrategi": 422, "seri": [28, 37, 38, 39, 49, 125, 128, 129, 131, 139, 142, 277, 279, 285, 389, 401, 422, 429, 431], "serial": [170, 205, 222, 294, 398, 418, 421, 422, 423, 429, 435, 442], "serializ": [420, 429, 435], "serialize_datafram": 437, "serialized_df": 224, "serializetostr": 398, "serialmixin": [21, 28, 32, 37, 93, 111, 126, 152, 166, 197, 199, 205, 240, 250, 277, 279, 285, 342, 422], "serv": [234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 336, 416, 417, 428, 429, 434], "servic": 425, "session": [243, 430, 437], "set": [28, 31, 39, 41, 52, 54, 58, 59, 84, 88, 142, 163, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 228, 232, 254, 292, 327, 334, 335, 355, 359, 360, 379, 380, 381, 382, 384, 389, 391, 394, 399, 400, 401, 402, 404, 406, 410, 419, 420, 422, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 443], "set_box_aspect": 396, "set_dash": 395, "set_random_se": [396, 404, 443], "set_size_inch": [379, 381], "set_x_pend": 23, "set_xlabel": 396, "set_xtick": 396, "set_xticklabel": 396, "set_ylabel": 396, "set_ylim": 396, "set_zlabel": 396, "setpoint": 139, "setup": [228, 395, 429, 438, 443], "sever": [144, 164, 378, 380, 384, 395, 398, 404, 406, 408, 417, 420, 422, 423, 427, 429, 430, 431, 432, 433, 434, 436, 437, 438, 441, 443], "sh": 432, "shall": [169, 329, 425, 433], "shap": [84, 420, 422, 424, 439, 442], "shap_valu": 439, "shape": [18, 197, 204, 283, 287, 289, 363, 436, 443], "shapinsight": [82, 83, 85, 86, 422, 432], "shaplei": 84, "share": [422, 425, 441], "shield": [259, 334, 380, 420, 434], "shift": 416, "shifted_hartmann": 416, "ship": [367, 430, 437], "shm": 421, "short": 423, "shortcut": [205, 436, 437], "shorten": [422, 423], "shot": 441, "should": [28, 50, 84, 129, 142, 171, 220, 232, 282, 297, 298, 327, 329, 333, 334, 336, 338, 341, 342, 343, 351, 355, 389, 391, 395, 398, 401, 402, 410, 414, 420, 422, 423, 427, 428, 429, 436, 438, 439, 441, 443], "show": [84, 379, 380, 381, 383, 384, 389, 390, 391, 398, 399, 401, 404, 410, 412, 413, 414, 416, 417, 429, 432], "showcas": 435, "shown": [395, 404, 417, 422], "shrink": 396, "shutdown": 421, "side": [42, 288, 422], "sigma": [157, 158, 159, 160, 287, 406, 424], "signal": [61, 433], "signatur": [78, 274, 310, 312, 396, 422, 423, 429, 437], "significantli": [205, 404, 416, 417], "silenc": 423, "silent": [422, 429], "similar": [170, 421, 429, 430, 432, 434, 435, 436, 437, 441, 443], "similarli": 434, "simpl": [17, 18, 303, 380, 394, 395, 402, 420, 422, 435, 438, 440, 441], "simpler": [423, 437], "simplest": 436, "simplex": [205, 442], "simplex_paramet": [205, 401, 436], "simpli": [316, 394, 395, 423, 429, 431, 434, 435, 436, 437, 440, 441], "simplic": 312, "simplifi": 423, "simul": [74, 329, 391, 396, 420, 422, 441, 442], "simulate_experi": [232, 234, 438], "simulate_scenario": [234, 378, 379, 380, 381, 395, 416, 417, 438], "simulate_transfer_learn": [416, 438], "simulationresult": 404, "simultan": 433, "sinc": [54, 199, 242, 312, 379, 386, 387, 399, 409, 412, 413, 414, 416, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 441], "singer": 441, "singl": [18, 28, 37, 50, 84, 108, 121, 197, 199, 205, 228, 277, 279, 285, 342, 350, 357, 363, 369, 379, 380, 381, 390, 395, 401, 406, 416, 417, 420, 422, 429, 430, 431, 432, 433, 434, 436, 441, 442], "single_lin": 357, "singledispatch": 344, "singletargetobject": [28, 277, 279, 285, 379, 380, 381, 383, 384, 389, 390, 391, 392, 395, 398, 399, 412, 413, 414, 420, 422, 439, 442], "site": [389, 391, 392, 421], "situat": [389, 391, 401, 421, 423, 427, 429, 433, 434, 437, 438, 441], "six": [401, 402], "size": [18, 91, 92, 93, 96, 98, 100, 101, 102, 169, 171, 199, 204, 205, 294, 346, 396, 398, 404, 409, 410, 416, 417, 428, 437, 438, 441, 443], "sk": 398, "skeleton": 422, "skfp": 136, "skicit": 422, "skin": 438, "skip": [202, 208, 422, 428], "skl2onnx": 398, "sklearn": [191, 349, 398, 421], "sklearnclusteringrecommend": [188, 189, 190, 422, 427], "slightli": [226, 380, 401, 438], "slot": [400, 404, 418, 422, 429], "slot1_amount": 401, "slot1_label": 401, "slot2_amount": 401, "slot2_label": 401, "slot3_amount": 401, "slot3_label": 401, "slow": [389, 391, 392, 436], "slowest": 422, "small": [295, 299, 386, 401, 416, 417, 422, 426, 434], "smaller": [28, 404, 428, 441], "smallest": [197, 336, 436], "smart": 420, "smartli": 401, "smile": [142, 319, 321, 322, 420, 434], "smoke": 422, "smoke_test": [355, 378, 379, 380, 381, 387, 389, 390, 392, 395, 396, 404, 416, 417], "smooth": [96, 98, 160], "smoothedboxprior": 422, "smoother": 96, "sn": [378, 379, 380, 381, 395, 416, 417], "snippet": 430, "so": [28, 228, 242, 335, 381, 395, 401, 404, 409, 410, 420, 421, 428, 429, 430, 431, 433, 434, 435, 437, 440], "softwar": [420, 425], "sola": 424, "sole": 425, "solut": [428, 436, 437, 441], "solv": [242, 390, 391, 401, 404], "solv_rdkit2ddesc": 391, "solvent": [379, 380, 381, 383, 384, 389, 390, 391, 392, 395, 399, 401, 402, 413, 414, 420, 429, 434], "solvent1": [401, 402], "solvent2": [401, 402], "solvent3": 401, "solvent4": 401, "solvent5": 401, "solvent8": 401, "solvent9": 401, "solvent_1": 429, "solvent_2": 429, "solvent_3": 429, "solvent_data": 395, "solvent_encoding1": 429, "solvent_encoding2": 429, "solvent_mordred_enc": 429, "solvent_rdkit2dd": [389, 392], "solvent_rdkit_enc": 429, "solvent_smil": 395, "solver": 438, "some": [50, 336, 349, 379, 380, 381, 384, 389, 390, 391, 392, 395, 396, 398, 399, 401, 402, 408, 409, 410, 412, 417, 427, 429, 430, 434, 435, 437, 438, 439, 443], "someth": 414, "sometim": [429, 438], "somewhat": 430, "somewher": 428, "soon": [420, 428, 435], "sophist": [422, 431, 437], "sort": 145, "sourabh": 424, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 111, 112, 114, 116, 117, 119, 121, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 138, 139, 142, 144, 145, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 183, 186, 188, 189, 190, 191, 193, 194, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 218, 219, 220, 222, 224, 225, 228, 230, 232, 234, 237, 239, 240, 241, 243, 244, 247, 249, 250, 251, 254, 255, 257, 259, 261, 263, 265, 267, 269, 270, 271, 273, 274, 277, 279, 282, 283, 285, 287, 288, 289, 291, 292, 293, 294, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 351, 352, 353, 355, 356, 357, 359, 360, 362, 363, 364, 366, 374, 375, 376, 420, 421, 422, 423, 425], "space": [10, 13, 22, 23, 28, 35, 42, 49, 52, 62, 67, 69, 73, 124, 125, 126, 128, 129, 131, 138, 139, 142, 163, 172, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205, 208, 209, 228, 232, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 293, 336, 363, 378, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 404, 406, 407, 409, 412, 417, 418, 422, 424, 427, 429, 430, 431, 432, 434, 435, 437, 438, 442], "span": [124, 125, 126, 128, 129, 131, 138, 139, 142, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 293, 394, 404, 408, 432], "speak": 441, "spec": [202, 208, 219], "special": [171, 420, 421, 425, 426, 431, 441, 443], "specif": [89, 144, 150, 191, 199, 202, 215, 232, 271, 304, 375, 394, 395, 409, 420, 423, 428, 429, 431, 434, 435, 436, 437, 438, 439, 440, 441], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 50, 77, 88, 131, 142, 144, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 218, 219, 228, 230, 232, 241, 287, 288, 289, 297, 311, 320, 327, 330, 336, 337, 363, 364, 380, 384, 386, 398, 399, 404, 406, 416, 420, 421, 422, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441], "speed": [205, 389, 391, 392, 416, 417, 430, 436], "speed_fast": 436, "speed_norm": 436, "speed_slow": 436, "speedup": 441, "spell": 423, "spellcheck": 422, "sphinx": [422, 423], "split": [173, 427], "sporad": 422, "spread": 440, "sqrt": 429, "squar": [404, 429], "squash": 423, "stabil": [422, 430], "stabl": [89, 150, 290], "stage": [428, 429, 437], "stand": 422, "standard": [6, 15, 271, 398, 422, 434], "star": 401, "start": [228, 378, 394, 395, 396, 402, 404, 421, 422, 427, 434, 435, 437, 438, 441], "startup": 422, "stat": [291, 396, 402, 404], "state": [166, 168, 169, 170, 171, 395, 401, 419, 422, 425, 428, 431], "stateless": [404, 419, 422, 431], "statement": [338, 409, 420, 425], "static": [199, 205, 247, 420, 423, 441], "statist": [294, 417, 420, 430], "statu": 428, "std_threshold": 271, "stem": [421, 441], "step": [202, 208, 228, 401, 404, 419, 420, 423, 428, 433, 437, 439], "sterl": 424, "steven": 380, "still": [144, 327, 395, 404, 427, 429, 430, 432, 434, 441, 443], "stop": [393, 418, 422, 423], "stop_on_pi": 395, "stoppag": 425, "storag": [428, 430, 437], "store": [23, 126, 271, 277, 396, 401, 404, 420, 422, 428, 443], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 117, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 179, 181, 188, 189, 190, 191, 197, 199, 204, 205, 218, 222, 232, 234, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 280, 285, 287, 288, 289, 291, 294, 297, 298, 304, 310, 311, 317, 319, 321, 322, 324, 327, 330, 333, 334, 338, 342, 346, 352, 355, 356, 357, 399, 404, 413, 414, 416, 417], "straightforward": [440, 441], "strategi": [13, 181, 199, 226, 378, 404, 422], "stream": [308, 422, 430], "streamingsequentialmetarecommend": [169, 435], "streamingsequentialstrategi": 422, "streamlin": 423, "streamlit": [420, 422], "streibel": 424, "strict": 310, "strictli": [399, 413, 414], "stride": 386, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 141, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 317, 321, 322, 324, 325, 333, 342, 357, 398, 412, 422, 428, 429, 434, 440, 442], "strip": [228, 381], "strong": 422, "strongli": 428, "strtobool": [422, 430], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 46, 114, 218, 420, 421, 422, 423, 424, 428, 434, 437], "studi": [164, 420, 432, 435, 442], "style": [108, 416, 422, 423], "sub": [191, 422, 432, 437], "subclass": [77, 218, 304, 306, 316, 384, 422, 423, 435, 437], "subfold": 430, "subgraph": 434, "subgroup": 402, "subject": 425, "sublicens": 425, "submiss": [422, 425], "submit": [23, 291, 293, 420, 423, 425], "subpackag": [422, 423, 438], "subselectioncondit": [390, 391, 422, 431, 442], "subsequ": [171, 199, 205, 232, 321, 419, 425, 428, 437, 439], "subset": [28, 111, 116, 121, 142, 199, 307, 337, 363, 428, 429, 431], "subspac": [23, 173, 181, 196, 197, 199, 201, 203, 205, 386, 389, 390, 391, 392, 406, 408, 410, 412, 422, 435, 437, 442, 443], "subspace_json": 437, "subspacecontinu": [28, 124, 138, 199, 201, 408, 422, 436], "subspacediscret": [28, 125, 128, 129, 131, 139, 142, 199, 201, 204, 389, 390, 391, 392, 401, 406, 412, 422, 436, 437, 443], "substanc": [136, 142, 320, 380, 383, 389, 391, 392, 402, 422, 429, 432, 434, 441], "substance_12": 429, "substance_3": 429, "substance_43": 429, "substance_data": 422, "substance_encod": 380, "substanceencod": [142, 320, 322, 389, 390, 391, 392, 422, 434], "substanceparamet": [379, 380, 381, 383, 384, 389, 390, 391, 392, 395, 399, 401, 413, 414, 420, 422, 429, 430, 432, 436, 442], "substanti": [142, 443], "substrat": 441, "subtyp": 437, "success": [279, 363, 404, 437], "success_valu": 279, "suffic": 423, "suffici": [395, 436, 437], "suggest": [432, 438], "suit": 423, "suitabl": [191, 205, 228, 317, 423, 426, 428, 434, 438, 439, 441], "sum": [56, 104, 205, 378, 388, 389, 390, 391, 395, 401, 402, 404, 418, 429, 433, 436], "sum_": [429, 433], "sum_constraint": 401, "sum_constraint_1": 392, "sum_constraint_2": 392, "sum_toler": 401, "summar": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142, 277, 279, 285], "summari": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142, 277, 279, 285, 422, 423], "superior": 426, "supersed": 425, "support": [10, 82, 83, 84, 85, 86, 170, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 349, 384, 389, 390, 391, 392, 395, 396, 398, 401, 406, 412, 422, 423, 424, 425, 429, 432, 434, 435, 436, 438, 439], "supports_batch": 422, "supports_pending_experi": 422, "supports_transfer_learn": [237, 239, 240, 243, 247, 261, 263, 265, 267, 439], "suppos": [293, 429], "sure": [401, 408, 420, 423], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 68, 84, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 179, 181, 188, 189, 190, 191, 237, 239, 241, 243, 247, 249, 250, 254, 257, 259, 261, 263, 265, 267, 389, 390, 391, 392, 396, 404, 406, 412, 418, 420, 422, 424, 429, 432, 434, 435, 441, 442], "surrogate_model": [179, 181, 384, 396, 398, 399, 404, 413, 414, 422], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 84, 179, 181, 240, 422], "svg": 355, "sw": 390, "swiss": 424, "switch": [50, 167, 170, 171, 271, 384, 389, 390, 391, 392, 404, 406, 412, 420, 422, 429, 435], "switch1": 390, "switch2": 390, "switch2_left": 390, "switch2_right": 390, "switch_1": 429, "switch_2": 429, "switch_aft": [171, 413, 414, 435], "switzerland": 424, "sy": 421, "symmetri": 429, "syntax": [420, 422], "synthet": [386, 387, 396, 416, 417], "system": [380, 404, 420, 421, 425, 430, 438, 441], "t": [269, 270, 309, 317, 379, 380, 381, 383, 384, 391, 396, 416, 417, 419, 431, 437, 438], "t1": [437, 438], "t2": 437, "t3": 437, "t_1": 433, "t_2": 433, "t_3": 433, "t_i": 433, "tabl": [338, 422, 429, 432], "tabular": 438, "tag": [420, 422, 437], "tailor": 428, "take": [8, 46, 96, 125, 139, 144, 237, 239, 240, 243, 247, 257, 261, 263, 265, 267, 280, 394, 401, 422, 427, 428, 429, 433, 434, 435, 441], "taken": [169, 395, 422, 428, 431, 433], "tantamount": 426, "target": [28, 69, 108, 111, 112, 116, 120, 121, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 228, 229, 230, 237, 239, 240, 243, 247, 261, 263, 265, 267, 271, 279, 282, 283, 285, 312, 327, 330, 331, 337, 351, 352, 358, 376, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 395, 396, 398, 399, 404, 409, 410, 412, 413, 414, 416, 417, 418, 420, 422, 427, 428, 430, 432, 437, 438, 439, 442], "target_1": [390, 391, 392, 406, 433, 440], "target_2": [406, 433, 440], "target_3": [406, 433], "target_3a": 440, "target_3b": 440, "target_cumbest": [378, 416, 417], "target_max": 428, "target_transform": 406, "targetmod": [285, 437, 440], "targetnam": 228, "targettransform": [285, 422, 440], "task": [129, 199, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 277, 279, 285, 404, 422, 428, 435, 437, 438, 441], "task_idx": [199, 422], "task_param": [416, 417, 438], "task_paramet": 437, "task_parameter_json": 437, "task_parameter_reconstruct": 437, "taskparamet": [212, 416, 417, 422, 431, 437, 438, 442], "tb": 443, "technic": [205, 427, 438, 441], "techniqu": [191, 435], "technologi": 424, "telemetri": [422, 424, 442], "tell": 292, "temp": [389, 391, 424], "temp_c": [379, 380, 381, 395], "temperatur": [379, 381, 383, 384, 389, 391, 394, 398, 399, 412, 429, 434, 436, 441], "temperature_resolut": 389, "temperature_valu": 395, "temporari": [107, 113, 182, 199, 360, 395, 422, 430, 437], "temporarili": [422, 443], "temporary_se": 443, "tempt": 441, "tenac": 422, "tend": 396, "tensor": [23, 42, 237, 269, 270, 330, 339, 342, 366, 368, 416, 422], "term": [99, 226, 395, 404, 423, 425, 428, 432, 436, 437, 438, 441], "termin": [395, 396, 421, 425], "terminologi": 442, "tert": [379, 380, 381, 383, 384], "test": [205, 228, 243, 327, 404, 416, 417, 420, 421, 422, 423, 428, 432, 438, 443], "test_funct": [386, 387, 396, 409, 410, 416, 417], "test_scenario": [379, 381], "testabl": [74, 228], "testfunct": [386, 387, 409, 410], "testfunctionclass": [386, 387, 409, 410], "text": [31, 356, 398, 425, 429, 430, 433], "th": [298, 429], "than": [28, 59, 73, 139, 169, 170, 171, 197, 199, 212, 298, 316, 331, 357, 364, 380, 391, 395, 402, 426, 429, 430, 432, 434, 437], "thei": [144, 164, 174, 288, 333, 337, 384, 392, 395, 401, 404, 408, 422, 423, 427, 428, 429, 432, 434, 435, 436, 437, 440, 441, 443], "them": [35, 257, 328, 355, 384, 420, 421, 422, 423, 427, 429, 430, 431, 432, 434, 435, 437, 441], "theme": [355, 422], "theori": 425, "therebi": 205, "therefor": [171, 237, 239, 240, 243, 247, 261, 263, 265, 267, 384, 421, 428, 437, 441], "therein": 422, "thereof": 425, "thf": 429, "thi": [10, 13, 18, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 166, 168, 169, 170, 171, 173, 181, 188, 189, 190, 191, 197, 199, 205, 226, 230, 232, 234, 237, 239, 240, 241, 242, 243, 247, 257, 261, 263, 265, 267, 271, 294, 297, 312, 313, 316, 321, 327, 329, 331, 332, 334, 336, 338, 355, 378, 394, 395, 396, 398, 399, 401, 402, 404, 408, 412, 413, 414, 416, 417, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443], "think": [404, 434], "third": [406, 425, 438], "thompson": [18, 424], "thomson": 18, "those": [144, 171, 173, 226, 363, 384, 421, 425, 429, 438], "though": 441, "three": [380, 401, 402, 406, 420, 428, 429, 432, 433, 435, 436, 441], "threshold": [39, 131, 142, 171, 271, 334, 386, 391, 392, 395, 401, 422, 429, 434], "thresholdcondit": [55, 56, 386, 391, 392, 401, 442], "through": [28, 199, 287, 297, 327, 337, 399, 401, 404, 406, 420, 422, 423, 425, 429, 437, 438, 442], "throughout": 171, "throw": [321, 429, 434], "thrown": [230, 381, 395, 413, 421, 433], "thu": [181, 312, 337, 379, 380, 386, 387, 389, 390, 391, 392, 398, 399, 401, 404, 406, 409, 410, 412, 421, 423, 428, 430, 431, 434, 435, 437, 438, 441, 443], "tick": 396, "time": [10, 181, 294, 364, 387, 394, 401, 404, 420, 422, 427, 428, 429, 431, 434, 437, 438, 443], "timeout": [422, 430], "timer": 394, "titl": 425, "tl": 416, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 42, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 395, 396, 422], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 342], "to_factori": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106], "to_fram": 378, "to_gpytorch": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 152, 154, 155, 156, 157, 158, 159, 160, 422], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 342, 398, 399, 412, 428, 437], "to_keep": 335, "to_ndarrai": 342, "to_object": [277, 279, 285, 378, 386, 387, 396, 404, 409, 410, 416, 417, 433, 438], "to_polar": [37, 38, 39], "to_searchspac": [124, 125, 126, 128, 129, 131, 138, 139, 142, 197, 205, 404, 408, 422, 431], "to_subspac": [124, 125, 128, 129, 131, 138, 139, 142, 422], "to_tensor": [342, 395, 396, 398, 422], "to_tupl": 342, "togeth": [35, 63, 298, 384, 404, 410, 420, 422], "toggl": 28, "toggle_discrete_candid": [28, 422, 431], "toler": [28, 39, 139, 205, 336, 375, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 395, 398, 399, 401, 406, 409, 410, 412, 413, 414, 420, 422, 429, 434], "tolist": 386, "toluen": 434, "toml": 422, "too": [386, 438, 441], "tool": [318, 422, 437], "toolbox": 420, "top": [422, 423], "topic": 428, "topolog": 434, "topologicaltors": 136, "topologicaltorsionfingerprint": 136, "torch": [330, 342, 395, 396, 398, 416, 422], "toronto": 424, "tort": 425, "total": [170, 171, 363, 401, 402, 404, 436], "total_bas": 402, "total_phase_ag": 402, "toward": [154, 327, 429], "towel": 419, "tox": [389, 391, 392, 420, 422, 423], "tracebackexcept": 421, "track": [163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 205, 395, 425, 431], "trade": [8, 425], "trademark": 425, "tradit": [380, 400, 401, 418, 420, 422], "train": [70, 84, 163, 169, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 234, 237, 239, 240, 241, 242, 243, 247, 261, 263, 265, 267, 271, 397, 416, 417, 422, 438], "train_i": 398, "train_x": 398, "training_funct": 417, "trajectori": [226, 378, 395, 404, 428, 438], "transfer": [233, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 384, 389, 390, 391, 392, 406, 412, 416, 418, 420, 422, 425, 434, 439, 442], "transform": [28, 70, 111, 116, 121, 125, 126, 128, 129, 131, 139, 142, 197, 199, 205, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 277, 279, 283, 285, 322, 330, 337, 342, 343, 366, 389, 390, 391, 392, 412, 422, 425, 430, 434, 439, 440], "transform_rep_exp2comp": 422, "transit": 422, "translat": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 422, 425, 431, 434], "transmiss": 437, "transmit": 294, "travers": 422, "treasur": 442, "treat": [142, 380, 420, 429, 434, 440, 443], "tree": 422, "tremend": 380, "trend": 441, "tri": 436, "triangl": 289, "triangular": [283, 289, 406, 440], "tricki": 432, "tricyclohexylphosphin": [379, 380, 381], "trigger": [169, 297, 395, 399, 404, 422, 423, 427, 433, 437], "trivial": [250, 263, 433, 434], "true": [6, 12, 14, 28, 31, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 199, 247, 279, 288, 305, 306, 310, 316, 317, 335, 357, 375, 380, 384, 386, 387, 389, 390, 391, 392, 396, 398, 399, 401, 404, 406, 409, 410, 412, 413, 414, 416, 417, 422, 428, 429, 430, 431, 432, 434, 437], "truncat": [420, 430], "trust": [398, 430], "truth": 317, "truthi": 430, "try": [327, 379, 380, 381, 395, 398, 399, 414, 421, 422, 443], "tune": 420, "tupl": [28, 38, 42, 91, 92, 93, 96, 98, 100, 101, 102, 104, 105, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 145, 197, 199, 204, 205, 270, 297, 310, 313, 325, 327, 339, 342, 346, 366], "turn": [197, 205, 346, 408, 420, 421, 422, 429, 430], "turnaround": 438, "twice": [431, 433], "two": [31, 52, 58, 59, 117, 171, 181, 226, 298, 303, 330, 351, 363, 378, 379, 381, 394, 401, 404, 406, 410, 416, 417, 419, 420, 422, 423, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440], "twofold": 404, "twophasemetarecommend": [379, 381, 384, 389, 390, 391, 392, 395, 396, 398, 399, 404, 406, 410, 412, 413, 414, 420, 422, 435], "twophasestrategi": 422, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 112, 114, 116, 117, 121, 124, 125, 126, 128, 129, 131, 138, 139, 141, 142, 144, 145, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 183, 186, 188, 189, 190, 191, 193, 194, 197, 199, 200, 201, 202, 205, 206, 207, 208, 210, 211, 212, 215, 216, 218, 219, 220, 222, 224, 225, 228, 230, 232, 234, 237, 239, 240, 241, 243, 244, 247, 250, 251, 255, 261, 263, 265, 267, 269, 270, 271, 273, 274, 277, 279, 280, 285, 287, 288, 289, 291, 292, 293, 294, 297, 298, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 342, 343, 344, 346, 348, 349, 351, 352, 353, 355, 356, 357, 363, 364, 366, 368, 371, 372, 373, 374, 375, 376, 380, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 402, 404, 406, 412, 413, 414, 420, 422, 423, 425, 426, 429, 432, 433, 434, 435, 436, 441, 442], "typealia": 280, "typeerror": [84, 88, 228, 243, 312, 327, 328, 364, 375, 376, 395, 396], "typeguard": 309, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 210, 218, 219, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 270, 277, 279, 285, 306, 307, 308, 309, 325, 330, 337, 342], "typic": [13, 312, 357, 380, 420, 427, 428, 432, 434, 437, 443], "typing_extens": 423, "typo": [422, 423], "u": [18, 378, 379, 380, 381, 394, 396, 401, 402, 404, 408, 417, 420, 426, 429, 433], "ucb": [8, 384, 422, 426, 437], "ultim": 423, "ultra": [413, 414], "un": 422, "unabl": 398, "unavail": 422, "unawar": 427, "unbound": [342, 394], "uncaught": 422, "uncertainti": [8, 13, 384, 442], "uncharacter": 441, "uncorrel": [334, 441], "undefin": [237, 431], "under": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 294, 337, 392, 396, 404, 420, 421, 425, 427, 434], "underflow": 75, "underli": [28, 52, 395, 404, 420, 428, 432, 435, 437], "underscor": 422, "understand": [420, 441], "undesir": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 79, 429, 431, 434, 443], "undo": 421, "unequ": 392, "unevenli": 434, "unfinish": 427, "unfortun": 441, "unhandl": 422, "uniform": [197, 237, 328, 329, 422], "uniformli": 363, "uniniti": 316, "uninstal": [76, 420], "unintend": [79, 312, 422, 423], "unintention": 443, "union": [117, 228, 232, 287, 288, 289, 352, 410, 425, 436], "uniqu": [53, 144, 401, 422, 434], "unit": [204, 346], "unknown": [170, 363, 378, 404, 422, 439, 441], "unlabel": 330, "unless": [420, 423, 425, 430, 434, 437], "unlik": [12, 14, 401, 443], "unlock": 442, "unmaintain": 422, "unmatch": 310, "unmatchedattributeerror": 310, "unmeasur": [228, 381], "unnecessari": [422, 428], "unpromis": 395, "unreach": 422, "unrealist": 438, "unrecogn": 327, "unrestrict": 312, "unsaf": 422, "unspecifi": [302, 422, 437], "unspecifiedtyp": 28, "unsqueez": [395, 396], "unstructur": [220, 437], "unstructure_bas": 218, "unsupport": [197, 230], "until": [166, 168, 169, 170, 171, 228, 404, 420, 438], "untouch": 328, "untransform": [28, 439], "unusedobjectwarn": [395, 422, 427], "unveil": 417, "unwant": 35, "up": [28, 205, 228, 230, 378, 379, 380, 381, 382, 389, 391, 394, 396, 400, 401, 402, 410, 416, 417, 420, 421, 422, 426, 429, 443], "updat": [28, 380, 383, 422, 423, 427], "upgrad": 422, "upon": [173, 250, 421, 422, 423, 429, 436, 439, 441], "upper": [8, 19, 160, 199, 205, 287, 288, 289, 342, 384, 396, 406, 416, 417, 422, 440, 443], "upper_bound": [389, 390, 391, 392, 412, 436], "upperconfidencebound": [19, 426, 437], "upstream": 423, "urg": 432, "url": [430, 441], "us": [13, 18, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 63, 67, 84, 96, 116, 117, 131, 136, 139, 142, 144, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 206, 207, 219, 228, 230, 232, 237, 239, 240, 243, 244, 247, 261, 263, 265, 267, 283, 293, 294, 300, 312, 313, 321, 322, 327, 329, 330, 336, 344, 348, 349, 355, 363, 368, 378, 386, 387, 393, 394, 395, 396, 397, 400, 401, 402, 408, 412, 413, 414, 416, 417, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 440, 441, 442, 443], "usa": 424, "usabl": [316, 421, 422, 434, 437], "usag": [345, 420, 422, 429, 430, 435, 442], "use_comp_rep": [84, 88, 432], "use_torch": [330, 386, 387, 396, 409, 410, 416, 417], "user": [49, 50, 61, 71, 79, 131, 134, 237, 239, 240, 243, 247, 261, 263, 265, 267, 274, 291, 329, 383, 384, 389, 406, 414, 420, 421, 422, 423, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 441], "userguid": 290, "usernam": [291, 422, 430], "userwarn": 421, "uses_shap_explain": 84, "usort": 422, "usr": 136, "usrcat": 136, "usrcatfingerprint": 136, "usrfingerprint": 136, "usual": [228, 379, 380, 381, 413, 421, 432, 434], "util": [28, 181, 197, 205, 293, 300, 302, 303, 342, 362, 366, 378, 380, 383, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 404, 406, 409, 410, 416, 417, 420, 422, 426, 427, 432, 433, 434, 435, 437, 438, 439, 441, 442], "uv": 422, "v": 441, "val": [46, 114, 317, 416], "val_from_param1": 54, "val_from_param2": 54, "valid": [28, 31, 32, 33, 34, 35, 38, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 144, 199, 202, 205, 208, 243, 331, 336, 389, 411, 413, 418, 421, 422, 423, 428, 429, 438], "validate_compat": 243, "validate_config": [28, 414, 422, 428], "validate_parameter_input": 28, "validate_target_input": 28, "valu": [6, 23, 28, 31, 37, 38, 39, 42, 50, 52, 69, 84, 95, 96, 97, 98, 99, 100, 101, 102, 106, 111, 116, 117, 121, 125, 128, 129, 131, 133, 134, 136, 139, 142, 144, 147, 148, 149, 171, 188, 189, 190, 191, 197, 199, 205, 206, 207, 226, 228, 230, 232, 237, 239, 240, 243, 247, 261, 263, 265, 267, 279, 280, 282, 287, 288, 289, 294, 297, 301, 302, 307, 310, 317, 324, 327, 328, 329, 331, 333, 336, 337, 338, 342, 344, 351, 352, 353, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 384, 386, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 404, 406, 409, 410, 412, 413, 414, 416, 417, 420, 422, 423, 426, 428, 429, 430, 431, 432, 433, 434, 440, 441, 442, 443], "valuabl": [435, 438], "valueerror": [13, 28, 58, 59, 84, 88, 117, 144, 148, 149, 197, 199, 205, 211, 228, 230, 237, 239, 240, 243, 247, 261, 263, 265, 267, 274, 298, 310, 315, 317, 320, 324, 327, 329, 331, 336, 337, 357, 363, 364, 375, 376, 399, 410, 421], "var": [404, 442], "vari": [28, 205, 380, 433], "variabl": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 237, 239, 240, 243, 247, 261, 263, 265, 267, 277, 292, 294, 350, 355, 369, 409, 420, 422, 423, 429, 434, 435, 437], "varianc": [8, 13, 95, 263, 332, 422, 426], "variance_initial_valu": 95, "variance_prior": 95, "variant": [384, 416, 432, 441], "varieti": [409, 423, 437, 438], "variou": [342, 401, 407, 422, 427, 432, 435, 438], "varucb": 422, "vector": [31, 398, 424], "vendor": 434, "verbal": 425, "verbos": [399, 422], "veri": [389, 391, 406, 427, 430, 432, 434, 443], "verifi": [316, 386, 389, 390, 391, 392, 401, 402, 408, 410, 412, 420, 423], "versa": [416, 441], "versatil": 435, "version": [199, 291, 349, 389, 391, 392, 401, 404, 408, 416, 417, 420, 421, 422, 423, 425, 437], "vert": 396, "via": [13, 18, 27, 28, 84, 171, 181, 193, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 293, 304, 312, 327, 335, 381, 387, 394, 395, 398, 408, 420, 422, 423, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 440, 441, 442], "via_init": 437, "via_json": 437, "viabl": [73, 406], "vice": [416, 441], "view": [197, 205, 396, 436], "view_init": 396, "violat": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56], "viridi": 396, "virtual": 423, "visibl": 422, "visual": [380, 416, 417, 432, 440], "volum": 441, "vpn": [420, 430], "vsa": 136, "vsafingerprint": 136, "vulner": [422, 423], "w_i": 433, "wa": [13, 64, 65, 68, 69, 76, 79, 144, 171, 237, 239, 240, 243, 247, 261, 263, 265, 267, 324, 327, 331, 364, 380, 421, 422, 423, 425, 430, 432, 434, 437, 441], "wai": [199, 394, 401, 402, 407, 408, 416, 419, 420, 430, 431, 432, 434, 436, 437, 438, 440, 441, 443], "wall": 10, "want": [49, 384, 389, 401, 404, 410, 417, 420, 423, 429, 430, 431, 432, 434, 435, 437, 440], "warn": [60, 313, 389, 391, 392, 395, 409, 410, 422, 423], "warranti": [420, 425], "watch": 394, "water": [389, 390, 391, 392, 401, 429, 434], "waterfal": [84, 86, 422], "we": [23, 226, 378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 402, 404, 406, 408, 409, 410, 412, 413, 414, 416, 417, 420, 421, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443], "web": 423, "weber": 424, "weight": [108, 116, 117, 353, 406, 433, 437], "weight_kdalton": 434, "welcom": 423, "well": [291, 355, 384, 395, 400, 419, 423, 428, 429, 432, 434, 438], "were": [28, 327, 381, 417, 421, 422, 427, 429, 430, 434, 436], "what": [144, 169, 199, 226, 327, 366, 378, 398, 406, 414, 419, 423, 426, 428, 432, 434, 441, 442], "whatsnew": 303, "when": [28, 50, 139, 169, 170, 171, 179, 181, 199, 237, 239, 240, 243, 244, 247, 261, 263, 265, 267, 274, 301, 302, 310, 312, 316, 327, 330, 357, 364, 389, 390, 392, 394, 399, 401, 402, 404, 406, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 441, 443], "whenev": [23, 169, 327, 437], "where": [18, 23, 31, 35, 41, 48, 49, 50, 51, 52, 53, 54, 55, 56, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 297, 327, 363, 379, 380, 381, 384, 389, 391, 401, 404, 420, 421, 422, 423, 425, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 440, 441], "wherea": 437, "wherev": [425, 427], "whether": [23, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 88, 124, 125, 126, 128, 129, 131, 138, 139, 142, 181, 197, 205, 237, 239, 240, 243, 247, 261, 263, 265, 267, 292, 329, 342, 401, 422, 425, 428, 430, 431, 440], "which": [13, 28, 37, 38, 39, 79, 84, 111, 116, 121, 129, 144, 163, 164, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 199, 205, 232, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 271, 293, 294, 312, 316, 327, 329, 334, 336, 338, 351, 352, 355, 366, 378, 380, 384, 387, 394, 395, 401, 402, 404, 408, 409, 410, 414, 416, 417, 420, 421, 422, 423, 425, 426, 428, 429, 431, 432, 434, 436, 437, 438, 439, 440, 441, 443], "while": [199, 202, 208, 395, 404, 406, 417, 421, 425, 426, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441], "whilst": 327, "whim": 136, "whimfingerprint": 136, "whole": 425, "whom": 425, "whose": [117, 144, 199, 230, 307, 310, 330, 378, 394, 401, 427, 438], "wide": 438, "wider": 440, "width": 338, "wieczorek": 424, "william": 441, "willing": 428, "win": [237, 404], "win_rat": 404, "window": [422, 430], "winerror": 421, "wise": 353, "wish": 437, "within": [28, 124, 125, 126, 128, 129, 131, 138, 139, 142, 375, 408, 425, 429, 430, 434, 439, 441, 442, 443], "without": [170, 416, 417, 420, 422, 425, 427, 428, 429, 430, 434, 438, 441, 443], "work": [23, 268, 297, 330, 389, 391, 392, 395, 406, 412, 414, 420, 422, 423, 424, 425, 429, 430, 433, 435, 437, 438], "workaround": [421, 422], "workflow": [398, 420, 428, 437, 442], "world": [420, 428], "worldwid": 425, "worst": [228, 230, 232, 381], "would": [53, 75, 144, 226, 228, 234, 242, 394, 401, 404, 420, 423, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 443], "wrap": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 247, 251, 269, 270, 312, 420, 422, 433], "wrapper": [1, 22, 232, 234, 243, 313, 416, 417, 420, 435], "write": [420, 421, 425, 437], "written": [409, 410, 423, 425], "wrong": [414, 422], "wrongli": 421, "www": [420, 425], "x": [23, 112, 201, 228, 230, 251, 309, 313, 325, 339, 351, 366, 378, 379, 380, 381, 389, 390, 391, 392, 395, 396, 401, 406, 412, 416, 417, 420, 422, 436, 439], "x0": 436, "x1": 436, "x2": 436, "x_": [378, 386, 387, 408, 409, 410], "x_1": [386, 387, 408, 409, 410, 429], "x_2": [386, 387, 408, 409, 410, 429], "x_3": [386, 387, 408, 409, 410, 429], "x_4": [386, 387, 408, 409, 410], "x_5": 410, "x_6": 410, "x_i": 429, "x_pend": 23, "xlsx": [379, 380, 381, 395], "xpho": [379, 380, 381], "xxxx": 421, "xylen": [379, 380, 381, 383, 384], "y": [259, 317, 334, 351, 378, 379, 380, 381, 395, 396, 398, 401, 416, 417, 420, 441], "ye": 317, "year": 441, "yet": [23, 422, 427, 435], "yield": [6, 96, 379, 380, 381, 383, 384, 389, 395, 398, 399, 401, 410, 412, 413, 414, 420, 422, 426, 432, 433, 437], "yield_cumbest": [379, 380, 381, 395], "yml": 422, "you": [28, 49, 380, 384, 386, 394, 399, 401, 404, 409, 410, 413, 419, 420, 421, 423, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443], "your": [380, 394, 401, 404, 410, 419, 420, 421, 422, 423, 425, 428, 430, 431, 432, 434, 437, 438, 439, 440, 441, 443], "your_branch_nam": 423, "yourself": 404, "z": [396, 420], "zdir": 396, "zero": [154, 332, 401, 404, 441], "zip": [395, 396], "\u00b5fmt": 422, "\u0161o\u0161i\u0107": [420, 424]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.single", "SingleTargetObjective", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "Surrogate", "SurrogateProtocol", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 423, "0": 422, "01": 422, "02": 422, "03": 422, "04": 422, "05": 422, "06": 422, "07": 422, "08": 422, "09": 422, "1": 422, "10": 422, "11": 422, "12": 422, "13": 422, "14": 422, "15": 422, "16": 422, "17": 422, "19": 422, "2": 422, "2022": 422, "2023": 422, "2024": 422, "2025": 422, "21": 422, "23": 422, "24": 422, "27": 422, "28": 422, "29": 422, "3": 422, "31": 422, "4": 422, "5": 422, "6": 422, "7": 422, "8": 422, "9": 422, "A": 420, "On": 432, "The": [404, 413, 420, 431, 437, 438, 441], "abbrevi": 437, "acqf": 2, "acquisit": [1, 2, 20, 22, 24, 25, 26, 384, 427], "acquisitionfunct": 21, "action": 441, "activ": 426, "ad": [383, 422, 427, 428, 441, 443], "add_fake_measur": 327, "add_noise_to_perturb_degenerate_row": 328, "add_parameter_nois": 329, "addendum": 406, "addit": 401, "additivekernel": 104, "advanc": [420, 439], "altern": 437, "amount": 401, "an": 404, "appli": 431, "arm": [403, 404], "arm64": 421, "arrai": 438, "arrays_to_datafram": 330, "assembli": 437, "asynchron": 427, "attr": 423, "augment": [296, 297, 298], "automat": 437, "avail": [384, 439], "avx": 421, "back": 420, "backtest": [377, 416], "bandit": [236, 403, 404], "base": [20, 30, 90, 110, 112, 123, 151, 162, 165, 175, 178, 185, 238, 276, 379, 380, 381, 386, 387, 401, 402, 410, 431, 438], "basesequentialmetarecommend": 168, "basic": [94, 153, 299, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 382, 383, 428, 430, 432, 437], "basickernel": 91, "batch": 428, "batchify_ensemble_predictor": 269, "batchify_mean_var_predict": 270, "batteri": 420, "bayb": [0, 1, 2, 20, 22, 24, 25, 26, 27, 29, 30, 36, 40, 43, 44, 45, 46, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 94, 103, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 120, 122, 123, 127, 130, 132, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 161, 162, 164, 165, 167, 172, 174, 175, 177, 178, 180, 182, 183, 184, 185, 187, 192, 195, 196, 198, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 244, 245, 246, 248, 251, 252, 253, 255, 256, 258, 260, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 420, 423], "bayesian": [177, 178, 180, 182, 183, 420, 435], "bayesianlinearsurrog": 261, "bayesianrecommend": 179, "bell_transform": 287, "bernoulli": 404, "betabernoullimultiarmedbanditsurrog": 237, "betaprior": 154, "binari": [278, 280], "binarytarget": 279, "black": [378, 404], "block_deserialization_hook": 215, "block_serialization_hook": 216, "bo": 432, "boolean": [314, 315, 316, 317], "both": 412, "botorch": [180, 409], "botorchrecommend": 181, "bound": [394, 433, 436], "box": [378, 404], "break": 422, "build": [404, 436], "bytes_to_human_read": 346, "cach": [428, 430], "call": 431, "callabl": [386, 387, 410, 438], "campaign": [27, 28, 378, 379, 380, 381, 384, 386, 387, 389, 390, 392, 395, 398, 399, 406, 409, 410, 412, 413, 428], "candid": [428, 431], "cardinalityconstraint": 31, "case": 404, "catch_constant_target": 271, "categor": 127, "categoricalencod": 133, "categoricalparamet": [128, 434], "caution": 431, "chang": 422, "changelog": 422, "check_if_in": 315, "chemic": 420, "chemistri": [318, 319, 320, 321, 322], "choicevalu": 280, "class": 423, "classproperti": 303, "clone": 420, "closer_el": 351, "closest_el": 352, "cluster": [187, 435], "code": 423, "columntransform": 366, "compar": 412, "compon": 394, "composit": 103, "compositekernel": 92, "comput": 432, "condit": [36, 37, 429], "config": [413, 414, 428], "configur": [398, 399, 413, 431, 437], "constraint": [29, 30, 32, 36, 40, 43, 44, 45, 46, 47, 57, 58, 59, 385, 386, 387, 388, 389, 390, 391, 392, 401, 402, 429, 431, 436, 443], "construct": [379, 380, 381, 386, 387, 401, 409, 410, 433, 436], "constructor": [436, 437], "continu": [40, 196, 385, 387, 401, 408, 426, 429, 434, 436, 441, 443], "continuouscardinalityconstraint": 41, "continuousconstraint": 33, "continuouslinearconstraint": [42, 429], "continuouslinearequalityconstraint": 44, "continuouslinearinequalityconstraint": 45, "continuousnonlinearconstraint": 34, "continuousparamet": 124, "contribut": 423, "contributor": 424, "control": [428, 431], "conveni": 433, "convent": 423, "convers": [323, 324, 325, 433, 437], "convert": [217, 398], "convert_acqf": 25, "convert_bound": 343, "copi": 437, "core": [198, 201, 202, 214, 215, 216, 217, 218, 219, 220, 227, 228, 246, 253, 255], "cpu": 421, "creat": [378, 379, 380, 381, 384, 386, 387, 389, 390, 391, 392, 398, 399, 406, 408, 409, 412, 413, 416, 417, 428, 436], "create_example_plot": 355, "create_fake_input": 331, "creation": [379, 380, 381, 401, 402, 428, 443], "current": 439, "custom": [130, 242, 244, 378, 389, 393, 394, 397, 398, 399, 439], "customdiscreteparamet": [131, 434], "customencod": 134, "customonnxsurrog": 243, "data": [379, 380, 381, 436, 441], "datafram": [326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 386, 387, 410, 436, 437, 438], "de": [412, 437], "default": [256, 436, 437], "defaultkernelfactori": 257, "defin": [378, 386, 387, 394, 395, 396, 406, 409, 410, 414, 416, 417, 420], "definit": 395, "depend": [390, 420, 434], "deprec": [43, 44, 45, 46, 113, 114, 422], "deprecationerror": 61, "descript": 406, "deseri": 437, "deserialize_datafram": 224, "design": [420, 423], "desir": [115, 117], "desirabilityobject": [116, 433], "develop": 423, "df_apply_dependency_augment": 297, "df_apply_permutation_augment": 298, "df_drop_single_value_column": 332, "df_drop_string_column": 333, "df_uncorrelated_featur": 334, "dictionari": [413, 414], "differ": 384, "dimens": 410, "discret": [47, 203, 206, 207, 208, 388, 389, 390, 391, 401, 409, 428, 429, 434, 436], "discretecardinalityconstraint": 48, "discreteconstraint": 35, "discretecustomconstraint": [49, 429], "discretedependenciesconstraint": [50, 429], "discreteexcludeconstraint": [51, 429], "discretelinkedparametersconstraint": [52, 429], "discretenolabelduplicatesconstraint": [53, 429], "discreteparamet": 125, "discretepermutationinvarianceconstraint": [54, 429], "discreteproductconstraint": [55, 429], "discretesamplingmethod": 362, "discretesumconstraint": [56, 429], "discuss": 404, "disk": 430, "do": 438, "docstr": 423, "document": 399, "dtypefloatnumpi": 348, "dtypefloatonnx": 349, "dtypefloattorch": 368, "dummi": 300, "duplic": 401, "dure": 443, "dynam": 431, "edbo": 258, "edbokernelfactori": 259, "effici": 443, "emptysearchspaceerror": 62, "encod": 434, "end": 420, "enum": [118, 132, 281], "environ": 430, "equival": 437, "estim": 443, "exampl": [379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 398, 399, 406, 409, 410, 412, 413, 414, 418, 420, 432], "except": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "exceptiongroup": 421, "exclud": 431, "exclus": [391, 392, 431], "expect": 441, "expectedimprov": 3, "experi": [389, 390, 391, 392, 398, 399, 406, 412, 420, 427, 438], "experiment": [428, 430, 431, 432], "expir": 422, "explain": [82, 432], "explicit": 436, "extend": 423, "extract": 439, "fake": 443, "faq": 419, "farthest_point_sampl": 363, "featur": [430, 431], "field": 437, "file": [413, 414], "filter_df": 335, "find_subclass": 304, "finite_float": 371, "fix": [421, 422], "float": 430, "fpsrecommend": 193, "fraction_to_float": 324, "from": [413, 420, 422, 428, 436, 437], "full": [379, 380, 381, 436], "function": [378, 379, 380, 381, 384, 386, 387, 395, 406, 409, 410, 423, 427], "further": 428, "fuzzy_row_match": 336, "gammaprior": 155, "gaussian_process": [245, 246, 248, 251, 252, 253, 255, 256, 258], "gaussianmixtureclusteringrecommend": 188, "gaussianprocesspreset": 254, "gaussianprocesssurrog": 247, "gener": [416, 417, 423, 435], "geom_mean": 353, "get": [383, 428, 431], "get_base_structure_hook": 218, "get_baseclass": 305, "get_canonical_smil": 319, "get_fingerprint_class": 320, "get_model_params_valid": 273, "get_parameters_from_datafram": 144, "get_subclass": 306, "get_transform_object": 337, "get_transform_paramet": 210, "get_user_detail": 291, "github": 420, "global": 426, "group_duplicate_valu": 307, "guid": 442, "halfcauchyprior": 156, "halfnormalprior": 157, "hilberts_factori": 308, "hook": [393, 394, 395, 396], "hybrid": [386, 410, 429], "imaginari": 404, "implicit": 433, "import": [378, 379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 394, 396, 398, 399, 401, 402, 404, 406, 408, 409, 410, 412, 413, 414, 416, 417, 432], "improv": 396, "includ": 420, "inclus": 379, "incompatibilityerror": 63, "incompatibleacquisitionfunctionerror": 64, "incompatibleargumenterror": 65, "incompatibleexplainererror": 66, "incompatiblesearchspaceerror": 67, "incomplet": 381, "incorpor": 392, "indent": 356, "independentgaussiansurrog": 239, "index": 420, "indic": 420, "infiniteintervalerror": 341, "influenc": 443, "inform": [428, 435], "initi": [379, 384], "insight": [80, 81, 82, 83, 85, 86, 87, 88, 432], "instal": [420, 421], "instanc": 394, "instead": [398, 399], "instruct": 430, "internet": 430, "interpret": 432, "interrupt": 395, "interv": [340, 341, 342, 343, 344], "invalidsurrogatemodelerror": 68, "invalidtargetvalueerror": 69, "invari": 401, "invok": 437, "irrelev": 441, "is_abstract": 316, "is_all_inst": 309, "is_en": 292, "is_shap_explain": 87, "issu": [420, 421], "iter": [386, 387, 398, 399, 406], "json": [428, 437], "kernel": [89, 90, 93, 94, 103], "kernel_factori": [248, 251], "kernelfactori": 249, "kmeansclusteringrecommend": 189, "known": [420, 421], "leak": 421, "learn": [415, 417, 426, 438, 441], "licens": [420, 425], "limit": [432, 439, 440], "linear": [260, 387], "linear_transform": 288, "linearkernel": 95, "link": 399, "local": [420, 426], "logexpectedimprov": 4, "lognormalprior": 158, "look_up_target": 230, "lookup": [229, 230, 379, 380, 381, 386, 387, 395, 410, 416, 417, 438], "loop": [378, 379, 380, 381, 416, 417, 420], "maco": 421, "maintain": [420, 424], "make_explainer_for_surrog": 88, "make_gp_from_preset": 255, "mandatori": 433, "manual": [389, 390, 391, 392], "mark": 427, "match": 440, "match_attribut": 310, "maternkernel": 96, "max": 440, "mean": 438, "meanpredictionsurrog": 263, "measur": [383, 398, 399, 428, 443], "mechan": [379, 380, 381, 438], "memori": [345, 346, 443], "memorys": 204, "meta": [164, 165, 167, 431, 435], "metarecommend": 166, "method": [394, 423, 426], "min": 440, "miss": 438, "mixin": 221, "mixtur": [400, 401, 402], "mode": [406, 440], "model": [384, 398, 399, 401, 402, 404, 432, 439], "modelnottrainederror": 70, "monitor": 396, "monkeypatch": [394, 395, 396], "multi": [403, 404, 405, 406], "multipl": 438, "naiv": [172, 262], "naivehybridspacerecommend": 173, "name": 434, "name_to_smil": 321, "necessari": [379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 398, 399, 406, 409, 410, 412, 413, 414], "nest": 437, "ngboost": 264, "ngboostsurrog": 265, "nois": 443, "nomcacquisitionfunctionerror": 71, "non_inf_float": 372, "non_nan_float": 373, "non_shap_explain": 83, "none": 438, "nonpredict": [184, 185, 187, 192], "nonpredictiverecommend": 186, "nonstring_to_tupl": 325, "norecommenderslefterror": 72, "normalprior": 159, "notenoughpointslefterror": 73, "nothingtosimulateerror": 74, "numer": [137, 284, 347, 348, 349, 350, 351, 352, 353], "numericalcontinuousparamet": [138, 434], "numericaldiscreteparamet": [139, 434], "numericaltarget": [285, 440], "numericalunderflowerror": 75, "object": [107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 379, 380, 381, 384, 386, 387, 389, 390, 391, 392, 406, 409, 412, 416, 417, 420, 433, 437], "onli": 430, "onnx": 398, "optim": [378, 416, 417, 420, 428, 443], "option": [420, 434], "optionalimporterror": 76, "order": [401, 430], "output": [398, 399], "overrid": 423, "packag": [420, 430], "page": 432, "pamclusteringrecommend": 190, "parallel": 428, "paramet": [122, 123, 126, 127, 130, 132, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 379, 380, 381, 384, 399, 401, 402, 428, 432, 434, 436, 443], "parameter_cartesian_prod_panda": 206, "parameter_cartesian_prod_polar": 207, "parameterencod": 135, "partial": [22, 427], "partialacquisitionfunct": 23, "pass": 399, "pend": 427, "perform": [379, 406, 409, 410], "periodickernel": 97, "perman": 431, "permut": 401, "piecewisepolynomialkernel": 98, "plainkernelfactori": 250, "plot": [354, 355, 356, 357, 378, 395, 396, 432], "point": 430, "polar": [421, 430], "polynomialkernel": 99, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 398, "precis": 430, "preset": [252, 253, 255, 256, 258], "pretrain": 398, "pretty_print_df": 338, "print": [389, 390, 392, 406], "prior": [150, 151, 152, 153], "probabilityofimprov": 7, "probabl": 396, "problem": [378, 395, 421], "product": [392, 436], "productkernel": 105, "pull": 423, "pure": [174, 175, 177, 178, 180, 182, 183, 184, 185, 187, 192, 426, 435], "purerecommend": 176, "pycharm": 421, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedimprov": 12, "qnegintegratedposteriorvari": 13, "qnoisyexpectedimprov": 14, "qposteriorstandarddevi": 15, "qprobabilityofimprov": 16, "qsimpleregret": 17, "qthompsonsampl": 18, "quick": 420, "qupperconfidencebound": 19, "random": [358, 359, 360], "random_forest": 266, "randomforestsurrog": 267, "randomrecommend": 194, "rbfkernel": 100, "recommend": [161, 162, 164, 165, 167, 172, 174, 175, 177, 178, 180, 182, 183, 184, 185, 187, 192, 383, 384, 398, 399, 409, 410, 412, 427, 428, 431, 435], "recommenderprotocol": 163, "reduct": 426, "refers_to": 311, "regist": 394, "register_custom_architectur": 244, "register_hook": 312, "relat": 421, "remov": 422, "represent": [401, 402, 432, 436], "reproduc": 443, "request": 423, "restrict": 436, "result": [378, 395, 396, 427], "rffkernel": 101, "role": 441, "row": 430, "rqkernel": 102, "run": [378, 386, 387, 404], "sampl": [192, 426, 435], "sample_numerical_df": 364, "sampling_algorithm": [361, 363, 364], "scalar": [117, 119, 439], "scale": 365, "scalekernel": 106, "scenario": [231, 232, 438], "scope": 430, "search": [401, 402, 408, 416, 420, 426, 436, 443], "searchspac": [195, 196, 198, 199, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 379, 381, 384, 386, 387, 389, 390, 391, 392, 406, 407, 409, 410, 417], "searchspacetyp": 200, "see": 441, "select_constructor_hook": 219, "semaphor": 421, "sequenti": [167, 428], "sequential_greedi": [182, 183], "sequentialgreedyrecommend": 183, "sequentialmetarecommend": 169, "serial": [213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 411, 412, 428, 437], "serialize_datafram": 225, "serialmixin": 222, "set": [378, 395, 396, 408, 416, 417], "set_random_se": 359, "setup": [383, 389, 390, 391, 392, 398, 399, 401, 402, 404, 406, 412], "shap": [81, 82, 83, 85, 86, 87, 88, 432], "shap_explain": 85, "shap_plot": 86, "shapinsight": 84, "signatur": 394, "simplex": [401, 436], "simul": [226, 227, 228, 229, 230, 231, 232, 233, 234, 378, 379, 380, 381, 395, 404, 416, 417, 438], "simulate_experi": 228, "simulate_scenario": 232, "simulate_transfer_learn": 234, "singl": [120, 438], "singletargetobject": [121, 433], "sklearnclusteringrecommend": 191, "slot": [401, 402], "smile": 141, "smiles_to_fingerprint_featur": 322, "smoothedboxprior": 160, "some": [386, 387, 406], "sort_paramet": 145, "space": [401, 402, 408, 410, 416, 420, 426, 428, 436, 443], "span": 401, "stage": 398, "start": 420, "stop": 395, "str_to_acqf": 26, "strategi": [384, 420], "streamingsequentialmetarecommend": 170, "string": [413, 437], "strtobool": 317, "structure_constraint": 46, "structure_object": 114, "studi": 439, "sub": 426, "subselectioncondit": [38, 429], "subspac": 436, "subspacecontinu": 197, "subspacediscret": 205, "substanc": [140, 141, 401, 420], "substanceencod": 136, "substanceparamet": [142, 434], "suggest": 421, "suitabl": 384, "sum": 392, "support": [421, 427], "surrog": [235, 236, 238, 240, 242, 244, 245, 246, 248, 251, 252, 253, 255, 256, 258, 260, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 384, 397, 398, 399, 439], "surrogateprotocol": 241, "synchron": 423, "synthet": [409, 410], "tabl": [379, 380, 381, 416, 417, 420], "target": [275, 276, 277, 278, 280, 281, 284, 286, 287, 288, 289, 394, 405, 406, 433, 440, 443], "targetmod": 282, "targettransform": 283, "task": [416, 417], "taskparamet": [129, 434, 441], "technologi": 441, "telemetri": [290, 291, 292, 293, 294, 420, 430], "telemetry_record_recommended_measurement_percentag": 293, "telemetry_record_valu": 294, "temporary_se": 360, "terminologi": [401, 437, 438, 441], "test": [386, 387, 409, 410], "theoret": 401, "thi": [379, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 406, 409, 410, 432], "thresholdcondit": [39, 429], "through": 441, "to_kernel_factori": 251, "to_object": 112, "to_searchspac": 201, "to_str": 357, "to_tensor": 339, "to_tupl": 313, "toggl": 431, "toler": 428, "tool": 423, "torch": [367, 368, 369, 421], "tradit": 402, "train": 398, "trajectori": 431, "transfer": [415, 417, 438, 441], "transfer_learn": [233, 234], "transform": [286, 287, 288, 289, 406], "treasur": 441, "triangular_transform": 289, "trigger": [394, 396], "two": 414, "twophasemetarecommend": 171, "type": 437, "uncertainti": 426, "unidentifiedsubclasserror": 77, "uninstal": 430, "uninterrupt": 395, "unlock": 441, "unmatchedattributeerror": 78, "unreleas": 422, "unspecifi": 301, "unspecifiedtyp": 302, "unstructure_bas": 220, "unusedobjectwarn": 79, "upperconfidencebound": 8, "us": [379, 380, 381, 383, 384, 389, 390, 391, 392, 398, 399, 404, 406, 409, 410, 436, 437, 438, 439], "usag": 432, "use_fallback_constructor_hook": 344, "user": 442, "util": [24, 25, 26, 143, 144, 145, 223, 224, 225, 268, 269, 270, 271, 295, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 443], "v": [394, 401, 421, 428, 431], "valid": [57, 58, 59, 146, 147, 148, 149, 209, 210, 211, 212, 272, 273, 274, 370, 371, 372, 373, 374, 375, 376, 399, 414], "validate_cardinality_constraints_are_nonoverlap": 58, "validate_constraint": 59, "validate_custom_architecture_cl": 274, "validate_decorrel": 147, "validate_is_finit": 148, "validate_not_nan": 374, "validate_paramet": 212, "validate_parameter_input": 375, "validate_parameter_nam": 211, "validate_searchspace_from_config": 202, "validate_simplex_subspace_from_config": 208, "validate_target_input": 376, "validate_unique_valu": 149, "valu": [436, 437, 438], "variabl": 430, "varname_numpy_use_single_precis": 350, "varname_torch_use_single_precis": 369, "verif": [389, 390, 391, 392, 401, 402, 414], "verifi": 387, "via": 432, "we": 438, "what": 438, "window": 421, "within": 436, "without": 421, "workflow": [423, 427], "wrap": [386, 387, 410], "write": 423}})