Search.setIndex({"alltitles": {"Acquisition function": [[403, "acquisition-function"]], "AcquisitionFunction": [[24, null]], "Active Learning": [[446, null]], "Added": [[442, "added"], [442, "id6"], [442, "id16"], [442, "id20"], [442, "id26"], [442, "id33"], [442, "id42"], [442, "id48"], [442, "id52"], [442, "id59"], [442, "id64"], [442, "id70"], [442, "id76"], [442, "id80"], [442, "id84"], [442, "id88"], [442, "id93"], [442, "id97"], [442, "id100"], [442, "id104"], [442, "id108"], [442, "id112"], [442, "id115"], [442, "id119"], [442, "id123"], [442, "id127"], [442, "id131"], [442, "id137"], [442, "id140"]], "Addendum: Description of transformation functions": [[425, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[463, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[461, null]], "Adding Measurements": [[448, "adding-measurements"]], "Adding Partial Results": [[447, "adding-partial-results"]], "AdditiveKernel": [[115, null]], "Advanced Example: Chemical Substances": [[440, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[423, "an-imaginary-use-case"]], "Array-Based Callables": [[458, null]], "Asynchronous Workflows": [[447, null]], "Auto-Replication": [[459, null]], "Automatic field conversion": [[457, "automatic-field-conversion"]], "Available Models": [[459, "available-models"]], "Available recommenders suitable for initial recommendation": [[403, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[403, "available-surrogate-models"]], "Backtesting": [[396, null], [436, null]], "BaseSequentialMetaRecommender": [[185, null]], "Basic Creation": [[448, "basic-creation"]], "Basic Instructions": [[450, "basic-instructions"]], "Basic Usage": [[452, "basic-usage"]], "Basic example for using BayBE": [[402, null]], "Basic string assembly": [[457, "basic-string-assembly"]], "BasicKernel": [[102, null]], "Basics": [[401, null], [448, "basics"]], "Batch Optimization": [[448, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[440, null]], "Bayesian Recommenders": [[455, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[281, null]], "BayesianRecommender": [[196, null]], "Bernoulli Multi Armed Bandit": [[423, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[254, null]], "BetaPrior": [[171, null]], "BinaryTarget": [[299, null]], "BotorchRecommender": [[198, null]], "Bound methods": [[413, "bound-methods"]], "Breaking Changes": [[442, "breaking-changes"], [442, "id25"], [442, "id32"]], "Building from the Product of Parameter Values": [[456, "building-from-the-product-of-parameter-values"], [456, "id2"]], "Building the Model": [[423, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[441, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[448, "caching-of-recommendations"]], "Campaign": [[31, null]], "Campaign Setup": [[426, "campaign-setup"]], "Campaign Stopping": [[414, null]], "Campaigns": [[448, null]], "Candidate Control in Discrete Spaces": [[448, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[451, null]], "CardinalityConstraint": [[34, null]], "CategoricalEncoding": [[148, null]], "CategoricalParameter": [[143, null], [454, "categoricalparameter"]], "Caution": [[451, null]], "Changed": [[442, "changed"], [442, "id2"], [442, "id4"], [442, "id7"], [442, "id11"], [442, "id17"], [442, "id21"], [442, "id27"], [442, "id34"], [442, "id39"], [442, "id43"], [442, "id49"], [442, "id53"], [442, "id56"], [442, "id60"], [442, "id65"], [442, "id71"], [442, "id77"], [442, "id81"], [442, "id85"], [442, "id89"], [442, "id94"], [442, "id98"], [442, "id101"], [442, "id105"], [442, "id109"], [442, "id113"], [442, "id116"], [442, "id120"], [442, "id124"], [442, "id128"], [442, "id132"]], "Changelog": [[442, null]], "Clustering Recommenders": [[455, "clustering-recommenders"]], "Code Design": [[443, "code-design"]], "ColumnTransformer": [[385, null]], "Comparing recommendations in both objects": [[432, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[459, "composite-surrogates"]], "CompositeKernel": [[103, null]], "CompositeSurrogate": [[261, null]], "Computational Challenges": [[449, null]], "Condition": [[40, null]], "Conditions": [[449, "conditions"]], "Constraint": [[35, null]], "Constraint Setup": [[420, "constraint-setup"]], "Constraints": [[449, null]], "Constraints Continuous": [[404, null]], "Constraints Discrete": [[407, null]], "Constraints Setup": [[421, "constraints-setup"]], "Construct the campaign and run some iterations": [[405, "construct-the-campaign-and-run-some-iterations"], [406, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[456, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[398, "constructing-campaigns-for-the-simulation-loop"], [399, "constructing-campaigns-for-the-simulation-loop"], [400, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[456, "constructing-from-a-dataframe"], [456, "id1"], [456, "id3"]], "Constructing hybrid recommenders": [[430, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[429, "constructing-the-campaign-and-performing-a-recommendation"], [430, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[430, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[449, "continuous-constraints"]], "Continuous Parameters": [[454, "continuous-parameters"]], "Continuous Subspaces": [[456, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[44, null], [449, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[36, null]], "ContinuousLinearConstraint": [[45, null], [449, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[37, null]], "ContinuousParameter": [[139, null]], "Contributing to BayBE": [[443, null]], "Contributors": [[444, null], [444, "id1"]], "Convenience construction and implicit conversion": [[453, null]], "Conventions for attrs classes": [[443, "conventions-for-attrs-classes"]], "Convert model to onnx": [[417, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[417, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[418, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[417, "create-campaign"]], "Creating Continuous Search Spaces": [[428, null]], "Creating a Campaign": [[448, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[456, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[433, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[408, "creating-and-printing-the-campaign"], [409, "creating-and-printing-the-campaign"], [411, "creating-and-printing-the-campaign"], [425, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[397, "creating-the-campaigns"]], "Creating the Objective": [[399, "creating-the-objective"]], "Creating the Optimization Objective": [[436, "creating-the-optimization-objective"], [437, "creating-the-optimization-objective"]], "Creating the Search Space": [[436, "creating-the-search-space"]], "Creating the Searchspace": [[437, "creating-the-searchspace"]], "Creating the campaign": [[403, "creating-the-campaign"], [418, "creating-the-campaign"], [432, "creating-the-campaign"]], "Creating the constraint": [[408, "creating-the-constraint"], [410, "creating-the-constraint"]], "Creating the constraints": [[409, "creating-the-constraints"], [411, "creating-the-constraints"]], "Creating the objective": [[425, "creating-the-objective"]], "Creating the recommender object": [[403, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[398, "creating-the-searchspace-and-the-objective"], [400, "creating-the-searchspace-and-the-objective"], [405, "creating-the-searchspace-and-the-objective"], [406, "creating-the-searchspace-and-the-objective"], [408, "creating-the-searchspace-and-the-objective"], [409, "creating-the-searchspace-and-the-objective"], [410, "creating-the-searchspace-and-the-objective"], [411, "creating-the-searchspace-and-the-objective"], [429, "creating-the-searchspace-and-the-objective"]], "Creation From a JSON Config": [[448, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[459, null]], "Custom Hooks": [[412, null]], "Custom Surrogates": [[416, null]], "CustomDiscreteParameter": [[146, null], [454, "customdiscreteparameter"]], "CustomEncoding": [[149, null]], "CustomONNXSurrogate": [[263, null]], "Dataframe deserialization": [[457, "dataframe-deserialization"]], "DefaultKernelFactory": [[277, null]], "Defining config dictionaries": [[434, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[414, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[415, "defining-the-hook"]], "Defining the Hooks": [[413, "defining-the-hooks"]], "Defining the Optimization Objective": [[440, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[397, "defining-the-optimization-problem"], [426, "defining-the-optimization-problem"]], "Defining the Search Space": [[440, "defining-the-search-space"]], "Defining the Tasks": [[436, "defining-the-tasks"], [437, "defining-the-tasks"]], "Defining the targets": [[425, "defining-the-targets"]], "Defining the test function": [[405, "defining-the-test-function"], [406, "defining-the-test-function"], [429, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[430, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[442, "deprecations"], [442, "id23"], [442, "id30"], [442, "id37"], [442, "id46"], [442, "id62"], [442, "id68"], [442, "id74"], [442, "id91"]], "Deserialization from configuration strings": [[457, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[127, null], [453, "desirabilityobjective"]], "Developer Tools": [[443, "developer-tools"]], "Discrete Constraints": [[449, "discrete-constraints"]], "Discrete Parameters": [[454, "discrete-parameters"]], "Discrete Subspaces": [[456, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[420, null]], "DiscreteCardinalityConstraint": [[51, null], [449, "discretecardinalityconstraint"]], "DiscreteConstraint": [[38, null]], "DiscreteCustomConstraint": [[52, null], [449, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[53, null], [449, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[54, null], [449, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[55, null], [449, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[56, null], [449, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[140, null]], "DiscretePermutationInvarianceConstraint": [[57, null], [449, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[58, null]], "DiscreteSamplingMethod": [[381, null]], "DiscreteSumConstraint": [[59, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[449, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[423, "discussion"]], "Disk Caching": [[450, "disk-caching"]], "Dummy": [[320, null]], "Duplicate Substances": [[420, "duplicate-substances"]], "Dynamic Exclusion": [[451, "dynamic-exclusion"]], "EDBOKernelFactory": [[279, null]], "EXPERIMENTAL: Floating Point Precision": [[450, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[463, null]], "Environment Variables": [[450, null]], "Equivalent copies": [[457, null]], "Estimation with Constraints": [[463, null]], "Example Searchspace and objective parameters": [[403, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[405, null]], "Example for creating campaigns from configs": [[433, null]], "Example for custom parameter passing in surrogate models": [[418, null]], "Example for full simulation loop using a table-based lookup mechanism": [[399, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[400, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[398, null]], "Example for linear constraints in a continuous searchspace": [[406, null]], "Example for surrogate model with a custom pretrained model": [[417, null]], "Example for the serialization of a campaign": [[432, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[429, null]], "Example for using custom constraints in discrete searchspaces": [[408, null]], "Example for using dependency constraints in discrete searchspaces": [[409, null]], "Example for using different strategies": [[403, null]], "Example for using exclusion constraints in discrete searchspaces": [[410, null]], "Example for using exclusion constraints incorporating sums and products": [[411, null]], "Example for using synthetic test functions in hybrid spaces": [[430, null]], "Example for using the multi target mode for the objective": [[425, null]], "Example for validation of a config file": [[434, null]], "Examples": [[438, null]], "Examples On This Page": [[452, null]], "Excluding Configurations": [[451, "excluding-configurations"]], "Expectations": [[461, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[417, "experiment-setup"], [418, "experiment-setup"]], "Experiment setup": [[408, "experiment-setup"], [409, "experiment-setup"], [410, "experiment-setup"], [411, "experiment-setup"], [432, "experiment-setup"]], "Experiment setup and creating the searchspace": [[425, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[450, null]], "Experimental Representation Limits": [[452, null]], "Experimental and Computational Representations": [[452, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.6.*)": [[442, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[442, "expired-deprecations-from-0-7"]], "Explainers": [[452, "explainers"]], "Extending BayBE\u2019s Functionality": [[443, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[459, "extracting-the-model-for-advanced-study"]], "FAQ": [[439, null]], "FPSRecommender": [[210, null]], "Fixed": [[442, "fixed"], [442, "id8"], [442, "id12"], [442, "id14"], [442, "id18"], [442, "id22"], [442, "id28"], [442, "id36"], [442, "id40"], [442, "id45"], [442, "id50"], [442, "id54"], [442, "id61"], [442, "id66"], [442, "id72"], [442, "id78"], [442, "id86"], [442, "id90"], [442, "id95"], [442, "id102"], [442, "id106"], [442, "id110"], [442, "id117"], [442, "id121"], [442, "id125"], [442, "id129"], [442, "id133"], [442, "id135"], [442, "id138"]], "For Label-Like Parameters: Values and Active Values": [[454, "label-like"]], "From GitHub": [[440, "from-github"]], "From Local Clone": [[440, "from-local-clone"]], "From Package Index": [[440, "from-package-index"]], "From the Default Constructor": [[456, "from-the-default-constructor"]], "Further Information": [[448, "further-information"]], "GammaPrior": [[172, null]], "GaussianMixtureClusteringRecommender": [[205, null]], "GaussianProcessPreset": [[274, null]], "GaussianProcessSurrogate": [[267, null]], "General Information": [[455, "general-information"]], "General Workflow": [[443, "general-workflow"]], "Generating Lookup Tables": [[436, "generating-lookup-tables"], [437, "generating-lookup-tables"]], "Getting Recommendations": [[448, "getting-recommendations"], [451, null]], "Getting a recommendation and adding measurements": [[402, "getting-a-recommendation-and-adding-measurements"]], "Global Uncertainty Reduction": [[446, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[173, null]], "HalfNormalPrior": [[174, null]], "Hook instance vs. target instance": [[413, null]], "Hybrid constraints": [[449, null]], "Imports": [[397, "imports"], [413, "imports"], [415, "imports"], [420, "imports"], [421, "imports"], [423, "imports"], [426, "imports"], [428, "imports"], [436, "imports"], [437, "imports"]], "Inclusion of initial data": [[398, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[256, null]], "Indices and Tables": [[440, "indices-and-tables"]], "Influence of Continuous Parameters": [[463, null]], "Insights": [[452, null]], "Installation Related Issues": [[441, "installation-related-issues"]], "Interval": [[365, null]], "Invoking alternative constructors": [[457, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[417, "iterate-with-recommendations-and-measurements"], [418, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[457, "json-de-serialization"]], "KMeansClusteringRecommender": [[206, null]], "Kernel": [[104, null]], "KernelFactory": [[269, null]], "Known Issues": [[441, null]], "License": [[445, null]], "Limitations": [[460, "limitations"]], "LinearKernel": [[106, null]], "Links for documentation": [[418, "links-for-documentation"]], "Local Uncertainty Reduction": [[446, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[175, null]], "Lookup functionality and data creation": [[398, "lookup-functionality-and-data-creation"], [399, "lookup-functionality-and-data-creation"], [400, "lookup-functionality-and-data-creation"]], "MATCH mode": [[460, "match-mode"]], "MIN and MAX mode": [[460, "min-and-max-mode"]], "Maintainers": [[444, "maintainers"]], "Mandatory target bounds": [[453, null]], "Manual verification of the constraint": [[408, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[409, "manual-verification-of-the-constraints"], [410, "manual-verification-of-the-constraints"], [411, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[447, "marking-experiments-as-pending"]], "MaternKernel": [[107, null]], "MeanPredictionSurrogate": [[283, null]], "Memory During Optimization": [[463, null]], "MemorySize": [[221, null]], "Meta Recommenders": [[451, null], [455, "meta-recommenders"]], "MetaRecommender": [[183, null]], "Method overrides": [[443, "method-overrides"]], "Missing Lookup Values": [[458, null]], "Mixtures": [[419, null]], "Model Interpretation in BO": [[452, null]], "Model Outputs": [[417, "model-outputs"], [418, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[420, null]], "Modeling a Mixture in Traditional Representation": [[421, null]], "Monitoring the Probability of Improvement": [[415, null]], "Monkeypatching": [[413, "monkeypatching"], [414, null], [415, "monkeypatching"]], "Multi Target": [[424, null]], "Multi-Armed Bandit": [[422, null]], "Multi-output Modeling": [[459, "multi-output-modeling"]], "NGBoostSurrogate": [[285, null]], "NaiveHybridSpaceRecommender": [[190, null]], "Necessary imports": [[417, "necessary-imports"], [418, "necessary-imports"], [432, "necessary-imports"], [433, "necessary-imports"], [434, "necessary-imports"]], "Necessary imports for this example": [[398, "necessary-imports-for-this-example"], [399, "necessary-imports-for-this-example"], [400, "necessary-imports-for-this-example"], [402, "necessary-imports-for-this-example"], [403, "necessary-imports-for-this-example"], [405, "necessary-imports-for-this-example"], [406, "necessary-imports-for-this-example"], [408, "necessary-imports-for-this-example"], [409, "necessary-imports-for-this-example"], [410, "necessary-imports-for-this-example"], [411, "necessary-imports-for-this-example"], [425, "necessary-imports-for-this-example"], [429, "necessary-imports-for-this-example"], [430, "necessary-imports-for-this-example"]], "Nesting objects": [[457, "nesting-objects"]], "Non-dominated Configurations": [[453, null]], "NonPredictiveRecommender": [[203, null]], "NormalPrior": [[176, null]], "NumericalContinuousParameter": [[153, null], [454, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[154, null], [454, "numericaldiscreteparameter"]], "NumericalTarget": [[305, null], [460, "numericaltarget"]], "Objective": [[122, null], [453, null]], "Optimizing a Custom Black-Box Function": [[397, null]], "Optional Dependencies": [[440, "optional-dependencies"]], "Optional Dependency": [[454, null]], "Optional: Defining the Optimization Strategy": [[440, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[420, null]], "PAMClusteringRecommender": [[207, null]], "Parameter": [[141, null]], "Parameter Encoding": [[454, null]], "Parameter Importance via SHAP": [[452, "parameter-importance-via-shap"]], "Parameter Names": [[454, null]], "Parameter Setup": [[420, "parameter-setup"], [421, "parameter-setup"]], "Parameter tolerances": [[448, null]], "ParameterEncoding": [[150, null]], "Parameters": [[454, null]], "Parameters for a full simulation loop": [[398, "parameters-for-a-full-simulation-loop"], [399, "parameters-for-a-full-simulation-loop"], [400, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[132, null], [453, "paretoobjective"]], "PartialAcquisitionFunction": [[26, null]], "Performing some iterations": [[425, "performing-some-iterations"]], "Performing the simulation loop": [[398, "performing-the-simulation-loop"]], "PeriodicKernel": [[108, null]], "Permanent Exclusion": [[451, "permanent-exclusion"]], "Permutation Invariance": [[420, "permutation-invariance"]], "PiecewisePolynomialKernel": [[109, null]], "PlainKernelFactory": [[270, null]], "Plots": [[452, "plots"]], "Plotting the Results": [[397, "plotting-the-results"], [414, "plotting-the-results"], [415, "plotting-the-results"]], "Polars": [[450, "polars"]], "PolynomialKernel": [[110, null]], "Posterior Statistics with Desirability Objectives": [[448, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Predictive Statistics": [[448, "predictive-statistics"]], "Prior": [[169, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[414, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[116, null]], "Pure Recommenders": [[455, "pure-recommenders"]], "PureRecommender": [[193, null]], "Purely Continuous Search Spaces": [[446, null]], "PyCharm vs. exceptiongroup": [[441, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[111, null]], "RFFKernel": [[112, null]], "RQKernel": [[113, null]], "RandomForestSurrogate": [[287, null]], "RandomRecommender": [[211, null]], "RecommenderProtocol": [[180, null]], "Recommenders": [[455, null]], "Registering Custom Hooks": [[413, null]], "Removed": [[442, "removed"], [442, "id9"], [442, "id29"], [442, "id35"], [442, "id44"], [442, "id57"], [442, "id67"], [442, "id73"], [442, "id82"]], "Representation of Data within Discrete Subspaces": [[456, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[463, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[456, "restricting-search-spaces-using-constraints"]], "Row Order": [[450, null]], "Running the Simulation": [[423, "running-the-simulation"]], "Running the Simulation Loop": [[397, "running-the-simulation-loop"]], "SHAPInsight": [[95, null]], "SKLearnClusteringRecommender": [[208, null]], "Sampling Recommenders": [[455, "sampling-recommenders"]], "Scalarizer": [[130, null]], "ScaleKernel": [[117, null]], "Search Space Creation": [[420, "search-space-creation"], [421, "search-space-creation"]], "Search Space Memory Estimation": [[463, "search-space-memory-estimation"]], "Search Spaces": [[456, null]], "SearchSpace": [[216, null]], "SearchSpaceType": [[217, null]], "Searchspaces": [[427, null]], "Seeing Transfer Learning in Action": [[461, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[448, null]], "SequentialMetaRecommender": [[186, null]], "SerialMixin": [[239, null]], "Serialization": [[431, null], [448, "serialization"], [457, null]], "Serialization and de-serialization": [[432, "serialization-and-de-serialization"]], "Settings": [[397, "settings"], [414, "settings"], [415, "settings"], [426, "settings"], [428, "settings"], [436, "settings"], [437, "settings"]], "Setup": [[402, "setup"], [423, "setup"]], "Signature components": [[413, null]], "Simplex Construction": [[420, null]], "Simulating Multiple Scenarios": [[458, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[458, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[458, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[414, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[414, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[458, null]], "Simulation Loop": [[436, "simulation-loop"], [437, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[426, null]], "SingleTargetObjective": [[134, null], [453, "singletargetobjective"]], "Slot-based Representation": [[421, null]], "SmoothedBoxPrior": [[177, null]], "StreamingSequentialMetaRecommender": [[187, null]], "Sub-Sampling Method": [[446, null]], "SubSelectionCondition": [[41, null], [449, "subselectioncondition"]], "SubspaceContinuous": [[214, null]], "SubspaceDiscrete": [[222, null]], "Substance Amounts": [[420, "substance-amounts"]], "SubstanceEncoding": [[151, null]], "SubstanceParameter": [[157, null], [454, "substanceparameter"]], "Suggested Fix": [[441, null], [441, null], [441, null], [441, null]], "Supported Acquisition Functions": [[447, null]], "Supported Recommenders": [[447, null]], "Surrogate": [[258, null]], "Surrogate Replication": [[459, "surrogate-replication"]], "SurrogateProtocol": [[259, null]], "Surrogates": [[459, null]], "Synchronizing Pull Requests": [[443, "synchronizing-pull-requests"]], "Target": [[297, null]], "TargetMode": [[302, null]], "TargetTransformation": [[303, null]], "Targets": [[460, null]], "TaskParameter": [[144, null], [454, "taskparameter"]], "Technology": [[461, null]], "Telemetry": [[450, "telemetry"]], "Telemetry Scope": [[450, null]], "Terminology": [[420, "terminology"], [457, null], [461, null]], "Terminology Continued": [[461, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[458, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[423, "the-black-box-model"]], "The Lookup Mechanism": [[458, "the-lookup-mechanism"]], "The Optimization Loop": [[440, "the-optimization-loop"]], "The Role of the TaskParameter": [[461, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[433, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[451, "the-recommend-call"]], "The type field": [[457, "the-type-field"]], "Theoretical Span": [[420, null]], "ThresholdCondition": [[42, null], [449, "thresholdcondition"]], "Trajectory-Based Control": [[451, null]], "Transfer Learning": [[435, null], [437, null], [461, null]], "Triggering the Hook": [[415, "triggering-the-hook"]], "Triggering the Hooks": [[413, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[188, null]], "Uninstalling Internet Packages": [[450, null]], "Unlocking Data Treasures Through Transfer Learning": [[461, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[322, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[462, null]], "Using Custom Models": [[459, "using-custom-models"]], "Using Explicit Bounds": [[456, "using-explicit-bounds"]], "Using None": [[458, "using-none"]], "Using a Callable": [[458, "using-a-callable"]], "Using a Dataframe": [[458, "using-a-dataframe"]], "Using abbreviations": [[457, "using-abbreviations"]], "Using configuration instead": [[417, "using-configuration-instead"], [418, "using-configuration-instead"]], "Using default values": [[457, "using-default-values"]], "Utilities": [[463, null]], "Validation of model parameters": [[418, "validation-of-model-parameters"]], "Verification of Constraints": [[420, "verification-of-constraints"], [421, "verification-of-constraints"]], "Verification of Span": [[420, "verification-of-span"]], "Verification of the two dictionaries": [[434, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[406, "verify-the-constraints"]], "Visualization": [[426, "visualization"]], "Windows \u2013 Torch Problems": [[441, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[405, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [406, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [430, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[443, "writing-docstrings"]], "Writing classes": [[443, "writing-classes"]], "[0.1.0] - 2022-10-01": [[442, "id139"]], "[0.10.0] - 2024-08-02": [[442, "id31"]], "[0.11.0] - 2024-09-09": [[442, "id24"]], "[0.11.1] - 2024-10-01": [[442, "id19"]], "[0.11.2] - 2024-10-11": [[442, "id15"]], "[0.11.3] - 2024-11-06": [[442, "id13"]], "[0.11.4] - 2025-01-27": [[442, "id10"]], "[0.12.0] - 2025-01-28": [[442, "id5"]], "[0.12.1] - 2025-01-29": [[442, "id3"]], "[0.12.2] - 2025-01-31": [[442, "id1"]], "[0.2.0] - 2022-11-10": [[442, "id136"]], "[0.2.1] - 2022-12-01": [[442, "id134"]], "[0.2.2] - 2023-01-13": [[442, "id130"]], "[0.2.3] - 2023-03-14": [[442, "id126"]], "[0.2.4] - 2023-03-24": [[442, "id122"]], "[0.3.0] - 2023-06-27": [[442, "id118"]], "[0.3.1] - 2023-07-17": [[442, "id114"]], "[0.3.2] - 2023-07-24": [[442, "id111"]], "[0.4.0] - 2023-08-16": [[442, "id107"]], "[0.4.1] - 2023-08-23": [[442, "id103"]], "[0.4.2] - 2023-08-29": [[442, "id99"]], "[0.5.0] - 2023-09-15": [[442, "id96"]], "[0.5.1] - 2023-10-19": [[442, "id92"]], "[0.6.0] - 2023-11-17": [[442, "id87"]], "[0.6.1] - 2023-11-27": [[442, "id83"]], "[0.7.0] - 2023-12-04": [[442, "id79"]], "[0.7.1] - 2023-12-07": [[442, "id75"]], "[0.7.2] - 2024-01-24": [[442, "id69"]], "[0.7.3] - 2024-02-09": [[442, "id63"]], "[0.7.4] - 2024-02-28": [[442, "id58"]], "[0.8.0] - 2024-02-29": [[442, "id55"]], "[0.8.1] - 2024-03-11": [[442, "id51"]], "[0.8.2] - 2024-03-27": [[442, "id47"]], "[0.9.0] - 2024-05-21": [[442, "id41"]], "[0.9.1] - 2024-06-04": [[442, "id38"]], "[Unreleased]": [[442, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[23, null]], "baybe.acquisition.partial": [[25, null]], "baybe.acquisition.utils": [[27, null]], "baybe.acquisition.utils.convert_acqf": [[28, null]], "baybe.acquisition.utils.str_to_acqf": [[29, null]], "baybe.campaign": [[30, null]], "baybe.constraints": [[32, null]], "baybe.constraints.base": [[33, null]], "baybe.constraints.conditions": [[39, null]], "baybe.constraints.continuous": [[43, null]], "baybe.constraints.deprecation": [[46, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[47, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[48, null]], "baybe.constraints.deprecation.structure_constraints": [[49, null]], "baybe.constraints.discrete": [[50, null]], "baybe.constraints.utils": [[60, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[61, null]], "baybe.constraints.validation": [[62, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[63, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[64, null]], "baybe.constraints.validation.validate_constraints": [[65, null]], "baybe.exceptions": [[66, null]], "baybe.exceptions.DeprecationError": [[67, null]], "baybe.exceptions.EmptySearchSpaceError": [[68, null]], "baybe.exceptions.IncompatibilityError": [[69, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, null]], "baybe.exceptions.IncompatibleArgumentError": [[71, null]], "baybe.exceptions.IncompatibleExplainerError": [[72, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, null]], "baybe.exceptions.IncompatibleSurrogateError": [[74, null]], "baybe.exceptions.InfeasibilityError": [[75, null]], "baybe.exceptions.InvalidSurrogateModelError": [[76, null]], "baybe.exceptions.InvalidTargetValueError": [[77, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[78, null]], "baybe.exceptions.ModelNotTrainedError": [[79, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[80, null]], "baybe.exceptions.NoMeasurementsError": [[81, null]], "baybe.exceptions.NoRecommendersLeftError": [[82, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[83, null]], "baybe.exceptions.NothingToSimulateError": [[84, null]], "baybe.exceptions.NumericalUnderflowError": [[85, null]], "baybe.exceptions.OptionalImportError": [[86, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[87, null]], "baybe.exceptions.UnidentifiedSubclassError": [[88, null]], "baybe.exceptions.UnmatchedAttributeError": [[89, null]], "baybe.exceptions.UnusedObjectWarning": [[90, null]], "baybe.insights": [[91, null]], "baybe.insights.shap": [[92, null]], "baybe.insights.shap.EXPLAINERS": [[93, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[94, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[96, null]], "baybe.insights.shap.SHAP_PLOTS": [[97, null]], "baybe.insights.shap.is_shap_explainer": [[98, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[99, null]], "baybe.kernels": [[100, null]], "baybe.kernels.base": [[101, null]], "baybe.kernels.basic": [[105, null]], "baybe.kernels.composite": [[114, null]], "baybe.objective": [[118, null]], "baybe.objective.Objective": [[119, null]], "baybe.objectives": [[120, null]], "baybe.objectives.base": [[121, null]], "baybe.objectives.base.to_objective": [[123, null]], "baybe.objectives.deprecation": [[124, null]], "baybe.objectives.deprecation.structure_objective": [[125, null]], "baybe.objectives.desirability": [[126, null]], "baybe.objectives.desirability.scalarize": [[128, null]], "baybe.objectives.enum": [[129, null]], "baybe.objectives.pareto": [[131, null]], "baybe.objectives.single": [[133, null]], "baybe.objectives.validation": [[135, null]], "baybe.objectives.validation.validate_target_names": [[136, null]], "baybe.parameters": [[137, null]], "baybe.parameters.base": [[138, null]], "baybe.parameters.categorical": [[142, null]], "baybe.parameters.custom": [[145, null]], "baybe.parameters.enum": [[147, null]], "baybe.parameters.numerical": [[152, null]], "baybe.parameters.substance": [[155, null]], "baybe.parameters.substance.Smiles": [[156, null]], "baybe.parameters.utils": [[158, null]], "baybe.parameters.utils.activate_parameter": [[159, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[160, null]], "baybe.parameters.utils.is_inactive": [[161, null]], "baybe.parameters.utils.sort_parameters": [[162, null]], "baybe.parameters.validation": [[163, null]], "baybe.parameters.validation.validate_decorrelation": [[164, null]], "baybe.parameters.validation.validate_is_finite": [[165, null]], "baybe.parameters.validation.validate_unique_values": [[166, null]], "baybe.priors": [[167, null]], "baybe.priors.base": [[168, null]], "baybe.priors.basic": [[170, null]], "baybe.recommenders": [[178, null]], "baybe.recommenders.base": [[179, null]], "baybe.recommenders.meta": [[181, null]], "baybe.recommenders.meta.base": [[182, null]], "baybe.recommenders.meta.sequential": [[184, null]], "baybe.recommenders.naive": [[189, null]], "baybe.recommenders.pure": [[191, null]], "baybe.recommenders.pure.base": [[192, null]], "baybe.recommenders.pure.bayesian": [[194, null]], "baybe.recommenders.pure.bayesian.base": [[195, null]], "baybe.recommenders.pure.bayesian.botorch": [[197, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[199, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[200, null]], "baybe.recommenders.pure.nonpredictive": [[201, null]], "baybe.recommenders.pure.nonpredictive.base": [[202, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[204, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[209, null]], "baybe.searchspace": [[212, null]], "baybe.searchspace.continuous": [[213, null]], "baybe.searchspace.core": [[215, null]], "baybe.searchspace.core.to_searchspace": [[218, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[219, null]], "baybe.searchspace.discrete": [[220, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[223, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[224, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[225, null]], "baybe.searchspace.validation": [[226, null]], "baybe.searchspace.validation.get_transform_parameters": [[227, null]], "baybe.searchspace.validation.validate_parameter_names": [[228, null]], "baybe.searchspace.validation.validate_parameters": [[229, null]], "baybe.serialization": [[230, null]], "baybe.serialization.core": [[231, null]], "baybe.serialization.core.block_deserialization_hook": [[232, null]], "baybe.serialization.core.block_serialization_hook": [[233, null]], "baybe.serialization.core.converter": [[234, null]], "baybe.serialization.core.get_base_structure_hook": [[235, null]], "baybe.serialization.core.select_constructor_hook": [[236, null]], "baybe.serialization.core.unstructure_base": [[237, null]], "baybe.serialization.mixin": [[238, null]], "baybe.serialization.utils": [[240, null]], "baybe.serialization.utils.deserialize_dataframe": [[241, null]], "baybe.serialization.utils.serialize_dataframe": [[242, null]], "baybe.simulation": [[243, null]], "baybe.simulation.core": [[244, null]], "baybe.simulation.core.simulate_experiment": [[245, null]], "baybe.simulation.lookup": [[246, null]], "baybe.simulation.lookup.look_up_targets": [[247, null]], "baybe.simulation.scenarios": [[248, null]], "baybe.simulation.scenarios.simulate_scenarios": [[249, null]], "baybe.simulation.transfer_learning": [[250, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[251, null]], "baybe.surrogates": [[252, null]], "baybe.surrogates.bandit": [[253, null]], "baybe.surrogates.base": [[255, null]], "baybe.surrogates.base.PosteriorStatistic": [[257, null]], "baybe.surrogates.composite": [[260, null]], "baybe.surrogates.custom": [[262, null]], "baybe.surrogates.custom.register_custom_architecture": [[264, null]], "baybe.surrogates.gaussian_process": [[265, null]], "baybe.surrogates.gaussian_process.core": [[266, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[268, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[271, null]], "baybe.surrogates.gaussian_process.presets": [[272, null]], "baybe.surrogates.gaussian_process.presets.core": [[273, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[275, null]], "baybe.surrogates.gaussian_process.presets.default": [[276, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[278, null]], "baybe.surrogates.linear": [[280, null]], "baybe.surrogates.naive": [[282, null]], "baybe.surrogates.ngboost": [[284, null]], "baybe.surrogates.random_forest": [[286, null]], "baybe.surrogates.utils": [[288, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[289, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[290, null]], "baybe.surrogates.utils.catch_constant_targets": [[291, null]], "baybe.surrogates.validation": [[292, null]], "baybe.surrogates.validation.get_model_params_validator": [[293, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[294, null]], "baybe.targets": [[295, null]], "baybe.targets.base": [[296, null]], "baybe.targets.binary": [[298, null]], "baybe.targets.binary.ChoiceValue": [[300, null]], "baybe.targets.enum": [[301, null]], "baybe.targets.numerical": [[304, null]], "baybe.targets.transforms": [[306, null]], "baybe.targets.transforms.bell_transform": [[307, null]], "baybe.targets.transforms.linear_transform": [[308, null]], "baybe.targets.transforms.triangular_transform": [[309, null]], "baybe.telemetry": [[310, null]], "baybe.telemetry.get_user_details": [[311, null]], "baybe.telemetry.is_enabled": [[312, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[313, null]], "baybe.telemetry.telemetry_record_value": [[314, null]], "baybe.utils": [[315, null]], "baybe.utils.augmentation": [[316, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[317, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[318, null]], "baybe.utils.basic": [[319, null]], "baybe.utils.basic.UNSPECIFIED": [[321, null]], "baybe.utils.basic.convert_to_float": [[324, null]], "baybe.utils.basic.find_subclass": [[325, null]], "baybe.utils.basic.get_baseclasses": [[326, null]], "baybe.utils.basic.get_subclasses": [[327, null]], "baybe.utils.basic.group_duplicate_values": [[328, null]], "baybe.utils.basic.hilberts_factory": [[329, null]], "baybe.utils.basic.is_all_instance": [[330, null]], "baybe.utils.basic.match_attributes": [[331, null]], "baybe.utils.basic.refers_to": [[332, null]], "baybe.utils.basic.register_hooks": [[333, null]], "baybe.utils.basic.to_tuple": [[334, null]], "baybe.utils.boolean": [[335, null]], "baybe.utils.boolean.check_if_in": [[336, null]], "baybe.utils.boolean.is_abstract": [[337, null]], "baybe.utils.boolean.strtobool": [[338, null]], "baybe.utils.chemistry": [[339, null]], "baybe.utils.chemistry.get_canonical_smiles": [[340, null]], "baybe.utils.chemistry.get_fingerprint_class": [[341, null]], "baybe.utils.chemistry.name_to_smiles": [[342, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[343, null]], "baybe.utils.conversion": [[344, null]], "baybe.utils.conversion.fraction_to_float": [[345, null]], "baybe.utils.conversion.nonstring_to_tuple": [[346, null]], "baybe.utils.conversion.to_string": [[347, null]], "baybe.utils.dataframe": [[348, null]], "baybe.utils.dataframe.add_fake_measurements": [[349, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[350, null]], "baybe.utils.dataframe.add_parameter_noise": [[351, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[352, null]], "baybe.utils.dataframe.create_fake_input": [[353, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[354, null]], "baybe.utils.dataframe.df_drop_string_columns": [[355, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[356, null]], "baybe.utils.dataframe.filter_df": [[357, null]], "baybe.utils.dataframe.fuzzy_row_match": [[358, null]], "baybe.utils.dataframe.get_transform_objects": [[359, null]], "baybe.utils.dataframe.pretty_print_df": [[360, null]], "baybe.utils.dataframe.to_tensor": [[361, null]], "baybe.utils.dataframe.transform_target_columns": [[362, null]], "baybe.utils.interval": [[363, null]], "baybe.utils.interval.InfiniteIntervalError": [[364, null]], "baybe.utils.interval.convert_bounds": [[366, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[367, null]], "baybe.utils.memory": [[368, null]], "baybe.utils.memory.bytes_to_human_readable": [[369, null]], "baybe.utils.numerical": [[370, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[371, null]], "baybe.utils.numerical.DTypeFloatONNX": [[372, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[373, null]], "baybe.utils.numerical.closer_element": [[374, null]], "baybe.utils.numerical.closest_element": [[375, null]], "baybe.utils.numerical.geom_mean": [[376, null]], "baybe.utils.random": [[377, null]], "baybe.utils.random.set_random_seed": [[378, null]], "baybe.utils.random.temporary_seed": [[379, null]], "baybe.utils.sampling_algorithms": [[380, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[382, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[383, null]], "baybe.utils.scaling": [[384, null]], "baybe.utils.torch": [[386, null]], "baybe.utils.torch.DTypeFloatTorch": [[387, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[388, null]], "baybe.utils.validation": [[389, null]], "baybe.utils.validation.finite_float": [[390, null]], "baybe.utils.validation.non_inf_float": [[391, null]], "baybe.utils.validation.non_nan_float": [[392, null]], "baybe.utils.validation.validate_not_nan": [[393, null]], "baybe.utils.validation.validate_parameter_input": [[394, null]], "baybe.utils.validation.validate_target_input": [[395, null]], "classproperty": [[323, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[441, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNParEGO": [[12, null]], "qLogNoisyExpectedHypervolumeImprovement": [[13, null]], "qLogNoisyExpectedImprovement": [[14, null]], "qNegIntegratedPosteriorVariance": [[15, null]], "qNoisyExpectedHypervolumeImprovement": [[16, null]], "qNoisyExpectedImprovement": [[17, null]], "qPosteriorStandardDeviation": [[18, null]], "qProbabilityOfImprovement": [[19, null]], "qSimpleRegret": [[20, null]], "qThompsonSampling": [[21, null]], "qUpperConfidenceBound": [[22, null]], "\u201cPre-training\u201d stage": [[417, "pre-training-stage"]], "\u26a1 Quick Start": [[440, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[440, "maintainers"]], "\ud83d\udcbb Installation": [[440, "installation"]], "\ud83d\udcc4 License": [[440, "license"]], "\ud83d\udce1 Telemetry": [[440, "telemetry"]], "\ud83d\udd0b Batteries Included": [[440, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[440, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoMeasurementsError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.conversion.to_string", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoMeasurementsError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.conversion.to_string.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[75, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[76, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[77, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[78, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[79, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[80, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.nomeasurementserror method)": [[81, "baybe.exceptions.NoMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[82, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[83, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[84, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[85, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[86, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[87, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[88, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[89, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[90, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[95, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[102, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[103, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[104, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[106, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[107, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[108, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[110, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[111, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[112, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[113, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[115, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[116, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[117, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[127, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[132, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[134, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[139, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[140, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[141, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[143, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[144, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[157, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[169, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[171, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[172, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[173, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[174, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[175, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[176, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[177, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[180, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[183, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[190, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[193, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[196, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[221, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[258, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[259, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[261, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[277, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[279, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[323, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[320, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[364, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[365, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[385, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[75, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[76, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[77, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[78, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[79, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[80, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.nomeasurementserror method)": [[81, "baybe.exceptions.NoMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[82, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[83, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[84, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[85, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[86, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[87, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[88, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[89, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[90, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[148, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[149, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[151, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[364, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[177, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[24, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[159, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[140, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[143, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[144, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[157, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[349, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[350, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[351, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[115, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[190, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[193, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[196, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[190, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[193, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[196, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[190, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[193, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[196, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[171, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[352, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[177, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[95, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[117, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[115, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[116, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[185, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[102, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[289, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[290, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[274, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[23, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[25, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[27, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[30, "module-baybe.campaign", false]], "baybe.constraints": [[32, "module-baybe.constraints", false]], "baybe.constraints.base": [[33, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[39, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[43, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[46, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[50, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[60, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[62, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[66, "module-baybe.exceptions", false]], "baybe.insights": [[91, "module-baybe.insights", false]], "baybe.insights.shap": [[92, "module-baybe.insights.shap", false]], "baybe.kernels": [[100, "module-baybe.kernels", false]], "baybe.kernels.base": [[101, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[105, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[114, "module-baybe.kernels.composite", false]], "baybe.objective": [[118, "module-baybe.objective", false]], "baybe.objectives": [[120, "module-baybe.objectives", false]], "baybe.objectives.base": [[121, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[124, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[126, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[129, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[131, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[133, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[135, "module-baybe.objectives.validation", false]], "baybe.parameters": [[137, "module-baybe.parameters", false]], "baybe.parameters.base": [[138, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[142, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[145, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[147, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[152, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[155, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[158, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[163, "module-baybe.parameters.validation", false]], "baybe.priors": [[167, "module-baybe.priors", false]], "baybe.priors.base": [[168, "module-baybe.priors.base", false]], "baybe.priors.basic": [[170, "module-baybe.priors.basic", false]], "baybe.recommenders": [[178, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[179, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[181, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[182, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[184, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[189, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[191, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[192, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[194, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[195, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[197, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[199, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[201, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[202, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[204, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[209, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[212, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[213, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[215, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[220, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[226, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[230, "module-baybe.serialization", false]], "baybe.serialization.core": [[231, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[238, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[240, "module-baybe.serialization.utils", false]], "baybe.simulation": [[243, "module-baybe.simulation", false]], "baybe.simulation.core": [[244, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[246, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[248, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[250, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[252, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[253, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[255, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[260, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[262, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[265, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[266, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[268, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[272, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[273, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[276, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[278, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[280, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[282, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[284, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[286, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[288, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[292, "module-baybe.surrogates.validation", false]], "baybe.targets": [[295, "module-baybe.targets", false]], "baybe.targets.base": [[296, "module-baybe.targets.base", false]], "baybe.targets.binary": [[298, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[301, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[304, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[306, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[310, "module-baybe.telemetry", false]], "baybe.utils": [[315, "module-baybe.utils", false]], "baybe.utils.augmentation": [[316, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[319, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[335, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[339, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[344, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[348, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[363, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[368, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[370, "module-baybe.utils.numerical", false]], "baybe.utils.random": [[377, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[380, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[384, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[386, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[389, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[196, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[303, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[307, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[171, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[171, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[299, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[232, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[233, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[369, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[31, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[291, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[148, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[143, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[365, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[336, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[300, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[323, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[374, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[375, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[385, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[140, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[143, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[144, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[157, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[221, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[139, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[140, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[141, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[143, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[144, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[157, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[221, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[221, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[190, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[193, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[103, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[261, "baybe.surrogates.composite.CompositeSurrogate", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[172, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[40, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[190, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[365, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[216, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[217, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[36, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[47, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[48, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[139, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[28, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[366, "baybe.utils.interval.convert_bounds", false]], "convert_to_float() (in module baybe.utils.basic)": [[324, "baybe.utils.basic.convert_to_float", false]], "converter (in module baybe.serialization.core)": [[234, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[365, "baybe.utils.interval.Interval.create", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[353, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[149, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[146, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[149, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[157, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[157, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[277, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[67, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[241, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[127, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[317, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[318, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[354, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[355, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[356, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[190, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[216, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[217, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[140, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[381, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[371, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[372, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[387, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[320, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[279, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[217, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[68, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[140, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[143, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[144, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[157, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[216, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[221, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[221, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[221, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[95, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[95, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[93, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[299, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[382, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[357, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[325, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[390, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[258, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[259, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[261, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[385, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[381, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[345, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[95, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[102, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[103, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[104, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[106, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[107, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[108, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[110, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[111, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[112, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[113, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[115, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[116, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[117, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[122, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[127, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[132, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[134, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[139, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[140, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[141, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[143, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[144, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[157, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[169, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[171, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[172, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[173, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[174, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[175, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[176, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[177, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[183, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[239, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[258, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[261, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[297, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[299, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[305, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[365, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[102, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[103, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[104, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[106, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[107, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[108, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[110, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[111, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[112, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[113, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[115, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[116, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[117, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[122, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[127, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[132, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[134, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[139, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[140, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[141, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[143, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[144, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[157, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[169, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[171, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[172, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[173, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[174, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[175, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[176, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[177, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[183, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[239, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[258, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[261, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[297, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[299, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[305, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[365, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[95, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[261, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[95, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[358, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[172, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[274, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[130, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[376, "baybe.utils.numerical.geom_mean", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[235, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[326, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[340, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[183, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[341, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[293, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[183, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[183, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[160, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[327, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[196, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[359, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[227, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[311, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[328, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[329, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[217, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[69, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[71, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[72, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[73, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[74, "baybe.exceptions.IncompatibleSurrogateError", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infeasibilityerror": [[75, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[364, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[148, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[365, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[76, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[77, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[337, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[330, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[365, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[61, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[139, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[140, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[141, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[143, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[144, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[157, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[365, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[139, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[140, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[141, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[143, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[144, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[157, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[312, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[365, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[365, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[139, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[140, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[141, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[143, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[144, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[157, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[161, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[365, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[122, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[127, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[132, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[134, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[139, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[140, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[141, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[143, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[144, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[157, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[365, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[98, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[183, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[185, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[104, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[157, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[157, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[107, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[108, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[111, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[112, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[113, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[107, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[108, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[111, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[112, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[113, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[303, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[308, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[106, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[175, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[176, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[175, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[247, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[365, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[99, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[275, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[385, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[302, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[331, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[107, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[302, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[130, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[221, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[183, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[302, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimumcardinalityviolatedwarning": [[78, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[79, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [23, "module-baybe.acquisition.base", false], [25, "module-baybe.acquisition.partial", false], [27, "module-baybe.acquisition.utils", false], [30, "module-baybe.campaign", false], [32, "module-baybe.constraints", false], [33, "module-baybe.constraints.base", false], [39, "module-baybe.constraints.conditions", false], [43, "module-baybe.constraints.continuous", false], [46, "module-baybe.constraints.deprecation", false], [50, "module-baybe.constraints.discrete", false], [60, "module-baybe.constraints.utils", false], [62, "module-baybe.constraints.validation", false], [66, "module-baybe.exceptions", false], [91, "module-baybe.insights", false], [92, "module-baybe.insights.shap", false], [100, "module-baybe.kernels", false], [101, "module-baybe.kernels.base", false], [105, "module-baybe.kernels.basic", false], [114, "module-baybe.kernels.composite", false], [118, "module-baybe.objective", false], [120, "module-baybe.objectives", false], [121, "module-baybe.objectives.base", false], [124, "module-baybe.objectives.deprecation", false], [126, "module-baybe.objectives.desirability", false], [129, "module-baybe.objectives.enum", false], [131, "module-baybe.objectives.pareto", false], [133, "module-baybe.objectives.single", false], [135, "module-baybe.objectives.validation", false], [137, "module-baybe.parameters", false], [138, "module-baybe.parameters.base", false], [142, "module-baybe.parameters.categorical", false], [145, "module-baybe.parameters.custom", false], [147, "module-baybe.parameters.enum", false], [152, "module-baybe.parameters.numerical", false], [155, "module-baybe.parameters.substance", false], [158, "module-baybe.parameters.utils", false], [163, "module-baybe.parameters.validation", false], [167, "module-baybe.priors", false], [168, "module-baybe.priors.base", false], [170, "module-baybe.priors.basic", false], [178, "module-baybe.recommenders", false], [179, "module-baybe.recommenders.base", false], [181, "module-baybe.recommenders.meta", false], [182, "module-baybe.recommenders.meta.base", false], [184, "module-baybe.recommenders.meta.sequential", false], [189, "module-baybe.recommenders.naive", false], [191, "module-baybe.recommenders.pure", false], [192, "module-baybe.recommenders.pure.base", false], [194, "module-baybe.recommenders.pure.bayesian", false], [195, "module-baybe.recommenders.pure.bayesian.base", false], [197, "module-baybe.recommenders.pure.bayesian.botorch", false], [199, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [201, "module-baybe.recommenders.pure.nonpredictive", false], [202, "module-baybe.recommenders.pure.nonpredictive.base", false], [204, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [209, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [212, "module-baybe.searchspace", false], [213, "module-baybe.searchspace.continuous", false], [215, "module-baybe.searchspace.core", false], [220, "module-baybe.searchspace.discrete", false], [226, "module-baybe.searchspace.validation", false], [230, "module-baybe.serialization", false], [231, "module-baybe.serialization.core", false], [238, "module-baybe.serialization.mixin", false], [240, "module-baybe.serialization.utils", false], [243, "module-baybe.simulation", false], [244, "module-baybe.simulation.core", false], [246, "module-baybe.simulation.lookup", false], [248, "module-baybe.simulation.scenarios", false], [250, "module-baybe.simulation.transfer_learning", false], [252, "module-baybe.surrogates", false], [253, "module-baybe.surrogates.bandit", false], [255, "module-baybe.surrogates.base", false], [260, "module-baybe.surrogates.composite", false], [262, "module-baybe.surrogates.custom", false], [265, "module-baybe.surrogates.gaussian_process", false], [266, "module-baybe.surrogates.gaussian_process.core", false], [268, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [272, "module-baybe.surrogates.gaussian_process.presets", false], [273, "module-baybe.surrogates.gaussian_process.presets.core", false], [276, "module-baybe.surrogates.gaussian_process.presets.default", false], [278, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [280, "module-baybe.surrogates.linear", false], [282, "module-baybe.surrogates.naive", false], [284, "module-baybe.surrogates.ngboost", false], [286, "module-baybe.surrogates.random_forest", false], [288, "module-baybe.surrogates.utils", false], [292, "module-baybe.surrogates.validation", false], [295, "module-baybe.targets", false], [296, "module-baybe.targets.base", false], [298, "module-baybe.targets.binary", false], [301, "module-baybe.targets.enum", false], [304, "module-baybe.targets.numerical", false], [306, "module-baybe.targets.transforms", false], [310, "module-baybe.telemetry", false], [315, "module-baybe.utils", false], [316, "module-baybe.utils.augmentation", false], [319, "module-baybe.utils.basic", false], [335, "module-baybe.utils.boolean", false], [339, "module-baybe.utils.chemistry", false], [344, "module-baybe.utils.conversion", false], [348, "module-baybe.utils.dataframe", false], [363, "module-baybe.utils.interval", false], [368, "module-baybe.utils.memory", false], [370, "module-baybe.utils.numerical", false], [377, "module-baybe.utils.random", false], [380, "module-baybe.utils.sampling_algorithms", false], [384, "module-baybe.utils.scaling", false], [386, "module-baybe.utils.torch", false], [389, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[122, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[127, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[132, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[134, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[190, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[139, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[140, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[141, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[143, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[144, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[157, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[297, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[299, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[342, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[80, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "nomeasurementserror": [[81, "baybe.exceptions.NoMeasurementsError", false]], "non_inf_float() (in module baybe.utils.validation)": [[391, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[392, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[94, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[346, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[82, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[176, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[83, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[84, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[107, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[112, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[305, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[85, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[122, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[119, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[110, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[110, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[148, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[86, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[117, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[117, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[141, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[223, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[224, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[150, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[132, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[108, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[108, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[108, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[95, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[110, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[258, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[261, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[258, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[261, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[257, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[110, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[360, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[169, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[116, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[193, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[381, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[172, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[180, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[183, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[190, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[193, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[196, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[180, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[332, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[264, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[333, "baybe.utils.basic.register_hooks", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[258, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "rffkernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[113, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[383, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[128, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[127, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[130, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[173, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[174, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[175, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[176, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[117, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[216, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[87, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[217, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[236, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[183, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[41, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[200, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[242, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[239, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[378, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[96, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[97, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[95, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[177, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[245, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[249, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[251, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[134, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[156, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[343, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[177, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[162, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[29, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[338, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[49, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[125, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[41, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[214, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[151, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[157, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[299, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[139, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[140, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[141, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[143, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[144, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[157, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[258, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[258, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[258, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[196, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[198, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[259, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[261, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[297, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[302, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[122, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[127, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[132, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[134, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[303, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[144, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[313, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[314, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[379, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[42, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[258, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[259, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[261, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[102, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[103, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[104, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[106, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[107, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[108, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[110, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[111, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[112, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[113, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[115, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[116, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[117, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[127, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[132, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[134, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[139, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[140, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[141, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[143, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[144, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[157, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[169, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[171, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[172, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[173, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[174, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[175, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[176, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[177, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[183, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[239, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[258, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[261, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[365, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[102, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[103, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[104, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[106, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[107, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[108, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[110, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[111, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[112, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[113, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[115, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[116, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[117, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[102, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[103, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[104, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[106, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[107, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[108, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[110, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[111, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[112, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[113, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[115, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[116, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[117, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[169, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[171, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[172, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[173, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[174, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[175, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[176, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[177, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[102, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[103, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[104, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[106, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[107, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[108, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[109, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[110, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[111, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[112, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[113, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[115, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[116, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[117, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[127, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[132, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[134, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[139, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[140, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[141, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[143, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[144, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[157, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[169, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[171, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[172, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[173, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[174, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[175, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[176, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[177, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[183, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[239, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[254, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[256, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[258, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[261, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[267, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[281, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[283, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[285, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[287, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[365, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[365, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[123, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[139, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[140, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[141, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[143, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[144, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[157, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[218, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.conversion)": [[347, "baybe.utils.conversion.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[139, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[140, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[143, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[144, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[153, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[157, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[365, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[361, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[365, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[334, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[127, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[132, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[134, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[140, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[143, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[144, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[157, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[385, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[362, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[303, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[309, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[188, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[88, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[89, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[321, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[322, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[237, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[90, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[365, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[367, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[95, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[63, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[64, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[263, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[65, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[294, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[164, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[165, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[393, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[394, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[228, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[229, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[219, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[225, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[395, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[136, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[166, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[140, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[143, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[144, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[146, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[154, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[157, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[106, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[106, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[373, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[388, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[127, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[151, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [30, 0, 0, "-", "campaign"], [32, 0, 0, "-", "constraints"], [66, 0, 0, "-", "exceptions"], [91, 0, 0, "-", "insights"], [100, 0, 0, "-", "kernels"], [118, 0, 0, "-", "objective"], [120, 0, 0, "-", "objectives"], [137, 0, 0, "-", "parameters"], [167, 0, 0, "-", "priors"], [178, 0, 0, "-", "recommenders"], [212, 0, 0, "-", "searchspace"], [230, 0, 0, "-", "serialization"], [243, 0, 0, "-", "simulation"], [252, 0, 0, "-", "surrogates"], [295, 0, 0, "-", "targets"], [310, 0, 0, "-", "telemetry"], [315, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [23, 0, 0, "-", "base"], [25, 0, 0, "-", "partial"], [27, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNParEGO"], [13, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [14, 1, 1, "", "qLogNoisyExpectedImprovement"], [15, 1, 1, "", "qNegIntegratedPosteriorVariance"], [16, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [17, 1, 1, "", "qNoisyExpectedImprovement"], [18, 1, 1, "", "qPosteriorStandardDeviation"], [19, 1, 1, "", "qProbabilityOfImprovement"], [20, 1, 1, "", "qSimpleRegret"], [21, 1, 1, "", "qThompsonSampling"], [22, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNParEGO": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "compute_ref_point"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "prune_baseline"], [13, 3, 1, "", "reference_point"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[13, 4, 1, "", "array"], [13, 4, 1, "", "factor"], [13, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "get_integration_points"], [15, 3, 1, "", "sampling_fraction"], [15, 3, 1, "", "sampling_method"], [15, 3, 1, "", "sampling_n_points"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[15, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "compute_ref_point"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "reference_point"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[16, 4, 1, "", "array"], [16, 4, 1, "", "factor"], [16, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "prune_baseline"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "n_mc_samples"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 3, 1, "", "beta"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[22, 4, 1, "", "string"]], "baybe.acquisition.base": [[24, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[24, 4, 1, "", "string"]], "baybe.acquisition.partial": [[26, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "botorch_acqf"], [26, 3, 1, "", "pin_discrete"], [26, 3, 1, "", "pinned_part"], [26, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[26, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[28, 5, 1, "", "convert_acqf"], [29, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[31, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "add_measurements"], [31, 3, 1, "", "allow_recommending_already_measured"], [31, 3, 1, "", "allow_recommending_already_recommended"], [31, 3, 1, "", "allow_recommending_pending_experiments"], [31, 2, 1, "", "from_config"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 2, 1, "", "get_surrogate"], [31, 6, 1, "", "measurements"], [31, 3, 1, "", "n_batches_done"], [31, 3, 1, "", "n_fits_done"], [31, 3, 1, "", "objective"], [31, 6, 1, "", "parameters"], [31, 2, 1, "", "posterior"], [31, 2, 1, "", "posterior_stats"], [31, 2, 1, "", "recommend"], [31, 3, 1, "", "recommender"], [31, 3, 1, "", "searchspace"], [31, 6, 1, "", "targets"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"], [31, 2, 1, "", "toggle_discrete_candidates"], [31, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[31, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[31, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_surrogate.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[31, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[31, 4, 1, "", "candidates"], [31, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[31, 4, 1, "", "complement"], [31, 4, 1, "", "constraints"], [31, 4, 1, "", "dry_run"], [31, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[31, 4, 1, "", "config_json"]], "baybe.constraints": [[33, 0, 0, "-", "base"], [39, 0, 0, "-", "conditions"], [43, 0, 0, "-", "continuous"], [46, 0, 0, "-", "deprecation"], [50, 0, 0, "-", "discrete"], [60, 0, 0, "-", "utils"], [62, 0, 0, "-", "validation"]], "baybe.constraints.base": [[34, 1, 1, "", "CardinalityConstraint"], [35, 1, 1, "", "Constraint"], [36, 1, 1, "", "ContinuousConstraint"], [37, 1, 1, "", "ContinuousNonlinearConstraint"], [38, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "max_cardinality"], [34, 3, 1, "", "min_cardinality"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "eval_during_augmentation"], [36, 3, 1, "", "eval_during_creation"], [36, 3, 1, "", "eval_during_modeling"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 6, 1, "", "is_continuous"], [36, 6, 1, "", "is_discrete"], [36, 3, 1, "", "numerical_only"], [36, 3, 1, "", "parameters"], [36, 2, 1, "", "summary"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 2, 1, "", "get_invalid"], [38, 2, 1, "", "get_invalid_polars"], [38, 2, 1, "", "get_valid"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[38, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[38, 4, 1, "", "df"]], "baybe.constraints.conditions": [[40, 1, 1, "", "Condition"], [41, 1, 1, "", "SubSelectionCondition"], [42, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[40, 2, 1, "", "evaluate"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"], [40, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[40, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[40, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "selection"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"], [41, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[41, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[41, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "evaluate"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 3, 1, "", "operator"], [42, 3, 1, "", "threshold"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"], [42, 2, 1, "", "to_polars"], [42, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[42, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[42, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[44, 1, 1, "", "ContinuousCardinalityConstraint"], [45, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "eval_during_augmentation"], [44, 3, 1, "", "eval_during_creation"], [44, 3, 1, "", "eval_during_modeling"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 2, 1, "", "get_absolute_thresholds"], [44, 2, 1, "", "inactive_parameter_combinations"], [44, 6, 1, "", "is_continuous"], [44, 6, 1, "", "is_discrete"], [44, 3, 1, "", "max_cardinality"], [44, 3, 1, "", "min_cardinality"], [44, 6, 1, "", "n_inactive_parameter_combinations"], [44, 3, 1, "", "numerical_only"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "relative_threshold"], [44, 2, 1, "", "sample_inactive_parameters"], [44, 2, 1, "", "summary"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[44, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[44, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[44, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[45, 2, 1, "", "__init__"], [45, 3, 1, "", "coefficients"], [45, 3, 1, "", "eval_during_augmentation"], [45, 3, 1, "", "eval_during_creation"], [45, 3, 1, "", "eval_during_modeling"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 6, 1, "", "is_continuous"], [45, 6, 1, "", "is_discrete"], [45, 6, 1, "", "is_eq"], [45, 3, 1, "", "numerical_only"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "rhs"], [45, 2, 1, "", "summary"], [45, 2, 1, "", "to_botorch"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[45, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[45, 4, 1, "", "idx_offset"], [45, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[47, 5, 1, "", "ContinuousLinearEqualityConstraint"], [48, 5, 1, "", "ContinuousLinearInequalityConstraint"], [49, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[51, 1, 1, "", "DiscreteCardinalityConstraint"], [52, 1, 1, "", "DiscreteCustomConstraint"], [53, 1, 1, "", "DiscreteDependenciesConstraint"], [54, 1, 1, "", "DiscreteExcludeConstraint"], [55, 1, 1, "", "DiscreteLinkedParametersConstraint"], [56, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [57, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [58, 1, 1, "", "DiscreteProductConstraint"], [59, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "max_cardinality"], [51, 3, 1, "", "min_cardinality"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"], [52, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "affected_parameters"], [53, 3, 1, "", "conditions"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 3, 1, "", "permutation_invariant"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "combiner"], [54, 3, 1, "", "conditions"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "dependencies"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "condition"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[58, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[59, 2, 1, "", "__init__"], [59, 3, 1, "", "condition"], [59, 3, 1, "", "eval_during_augmentation"], [59, 3, 1, "", "eval_during_creation"], [59, 3, 1, "", "eval_during_modeling"], [59, 2, 1, "", "from_dict"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_invalid"], [59, 2, 1, "", "get_invalid_polars"], [59, 2, 1, "", "get_valid"], [59, 6, 1, "", "is_continuous"], [59, 6, 1, "", "is_discrete"], [59, 3, 1, "", "numerical_only"], [59, 3, 1, "", "parameters"], [59, 2, 1, "", "summary"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[59, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[59, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[59, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[59, 4, 1, "", "df"]], "baybe.constraints.utils": [[61, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[61, 4, 1, "", "check_maximum"], [61, 4, 1, "", "check_minimum"], [61, 4, 1, "", "df"], [61, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[63, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [64, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [65, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[63, 4, 1, "", "constraint"], [63, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[64, 4, 1, "", "constraints"]], "baybe.exceptions": [[67, 7, 1, "", "DeprecationError"], [68, 7, 1, "", "EmptySearchSpaceError"], [69, 7, 1, "", "IncompatibilityError"], [70, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [71, 7, 1, "", "IncompatibleArgumentError"], [72, 7, 1, "", "IncompatibleExplainerError"], [73, 7, 1, "", "IncompatibleSearchSpaceError"], [74, 7, 1, "", "IncompatibleSurrogateError"], [75, 7, 1, "", "InfeasibilityError"], [76, 7, 1, "", "InvalidSurrogateModelError"], [77, 7, 1, "", "InvalidTargetValueError"], [78, 7, 1, "", "MinimumCardinalityViolatedWarning"], [79, 7, 1, "", "ModelNotTrainedError"], [80, 7, 1, "", "NoMCAcquisitionFunctionError"], [81, 7, 1, "", "NoMeasurementsError"], [82, 7, 1, "", "NoRecommendersLeftError"], [83, 7, 1, "", "NotEnoughPointsLeftError"], [84, 7, 1, "", "NothingToSimulateError"], [85, 7, 1, "", "NumericalUnderflowError"], [86, 7, 1, "", "OptionalImportError"], [87, 7, 1, "", "SearchSpaceMatchWarning"], [88, 7, 1, "", "UnidentifiedSubclassError"], [89, 7, 1, "", "UnmatchedAttributeError"], [90, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.NoMeasurementsError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__new__"]], "baybe.insights": [[92, 0, 0, "-", "shap"]], "baybe.insights.shap": [[93, 8, 1, "", "EXPLAINERS"], [94, 8, 1, "", "NON_SHAP_EXPLAINERS"], [95, 1, 1, "", "SHAPInsight"], [96, 8, 1, "", "SHAP_EXPLAINERS"], [97, 8, 1, "", "SHAP_PLOTS"], [98, 5, 1, "", "is_shap_explainer"], [99, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[95, 2, 1, "", "__init__"], [95, 3, 1, "", "background_data"], [95, 2, 1, "", "explain"], [95, 3, 1, "", "explainer"], [95, 2, 1, "", "from_campaign"], [95, 2, 1, "", "from_recommender"], [95, 2, 1, "", "from_surrogate"], [95, 2, 1, "", "plot"], [95, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[95, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[95, 4, 1, "", "campaign"], [95, 4, 1, "", "explainer_cls"], [95, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[95, 4, 1, "", "explainer_cls"], [95, 4, 1, "", "measurements"], [95, 4, 1, "", "objective"], [95, 4, 1, "", "recommender"], [95, 4, 1, "", "searchspace"], [95, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[95, 4, 1, "", "**kwargs"], [95, 4, 1, "", "data"], [95, 4, 1, "", "explanation_index"], [95, 4, 1, "", "plot_type"], [95, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[99, 4, 1, "", "data"], [99, 4, 1, "", "explainer_cls"], [99, 4, 1, "", "surrogate"], [99, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[101, 0, 0, "-", "base"], [105, 0, 0, "-", "basic"], [114, 0, 0, "-", "composite"]], "baybe.kernels.base": [[102, 1, 1, "", "BasicKernel"], [103, 1, 1, "", "CompositeKernel"], [104, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "from_dict"], [102, 2, 1, "", "from_json"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "to_factory"], [102, 2, 1, "", "to_gpytorch"], [102, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[102, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[102, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "from_dict"], [103, 2, 1, "", "from_json"], [103, 2, 1, "", "to_dict"], [103, 2, 1, "", "to_factory"], [103, 2, 1, "", "to_gpytorch"], [103, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[103, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[103, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.kernels.basic": [[106, 1, 1, "", "LinearKernel"], [107, 1, 1, "", "MaternKernel"], [108, 1, 1, "", "PeriodicKernel"], [109, 1, 1, "", "PiecewisePolynomialKernel"], [110, 1, 1, "", "PolynomialKernel"], [111, 1, 1, "", "RBFKernel"], [112, 1, 1, "", "RFFKernel"], [113, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"], [106, 3, 1, "", "variance_initial_value"], [106, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[106, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 3, 1, "", "lengthscale_initial_value"], [107, 3, 1, "", "lengthscale_prior"], [107, 3, 1, "", "nu"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[107, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 3, 1, "", "lengthscale_initial_value"], [108, 3, 1, "", "lengthscale_prior"], [108, 3, 1, "", "period_length_initial_value"], [108, 3, 1, "", "period_length_prior"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 3, 1, "", "lengthscale_initial_value"], [109, 3, 1, "", "lengthscale_prior"], [109, 3, 1, "", "q"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 3, 1, "", "offset_initial_value"], [110, 3, 1, "", "offset_prior"], [110, 3, 1, "", "power"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_factory"], [110, 2, 1, "", "to_gpytorch"], [110, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[110, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 3, 1, "", "lengthscale_initial_value"], [111, 3, 1, "", "lengthscale_prior"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[111, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "lengthscale_initial_value"], [112, 3, 1, "", "lengthscale_prior"], [112, 3, 1, "", "num_samples"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[112, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 3, 1, "", "lengthscale_initial_value"], [113, 3, 1, "", "lengthscale_prior"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_factory"], [113, 2, 1, "", "to_gpytorch"], [113, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[113, 4, 1, "", "string"]], "baybe.kernels.composite": [[115, 1, 1, "", "AdditiveKernel"], [116, 1, 1, "", "ProductKernel"], [117, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[115, 2, 1, "", "__init__"], [115, 3, 1, "", "base_kernels"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_factory"], [115, 2, 1, "", "to_gpytorch"], [115, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[115, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[116, 2, 1, "", "__init__"], [116, 3, 1, "", "base_kernels"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_factory"], [116, 2, 1, "", "to_gpytorch"], [116, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[116, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "base_kernel"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 3, 1, "", "outputscale_initial_value"], [117, 3, 1, "", "outputscale_prior"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_factory"], [117, 2, 1, "", "to_gpytorch"], [117, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[117, 4, 1, "", "string"]], "baybe.objective": [[119, 5, 1, "", "Objective"]], "baybe.objectives": [[121, 0, 0, "-", "base"], [124, 0, 0, "-", "deprecation"], [126, 0, 0, "-", "desirability"], [129, 0, 0, "-", "enum"], [131, 0, 0, "-", "pareto"], [133, 0, 0, "-", "single"], [135, 0, 0, "-", "validation"]], "baybe.objectives.base": [[122, 1, 1, "", "Objective"], [123, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "from_dict"], [122, 2, 1, "", "from_json"], [122, 3, 1, "", "is_multi_output"], [122, 6, 1, "", "n_outputs"], [122, 6, 1, "", "targets"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "to_json"], [122, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[122, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[122, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[122, 4, 1, "", "allow_extra"], [122, 4, 1, "", "allow_missing"], [122, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[125, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[127, 1, 1, "", "DesirabilityObjective"], [128, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "from_dict"], [127, 2, 1, "", "from_json"], [127, 3, 1, "", "is_multi_output"], [127, 6, 1, "", "n_outputs"], [127, 3, 1, "", "scalarizer"], [127, 6, 1, "", "targets"], [127, 2, 1, "", "to_dict"], [127, 2, 1, "", "to_json"], [127, 2, 1, "", "transform"], [127, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[127, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[127, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[127, 4, 1, "", "allow_extra"], [127, 4, 1, "", "allow_missing"], [127, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[128, 4, 1, "", "scalarizer"], [128, 4, 1, "", "values"], [128, 4, 1, "", "weights"]], "baybe.objectives.enum": [[130, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[130, 3, 1, "", "GEOM_MEAN"], [130, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[132, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "from_dict"], [132, 2, 1, "", "from_json"], [132, 3, 1, "", "is_multi_output"], [132, 6, 1, "", "n_outputs"], [132, 6, 1, "", "targets"], [132, 2, 1, "", "to_dict"], [132, 2, 1, "", "to_json"], [132, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[132, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[132, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[132, 4, 1, "", "allow_extra"], [132, 4, 1, "", "allow_missing"], [132, 4, 1, "", "df"]], "baybe.objectives.single": [[134, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "from_dict"], [134, 2, 1, "", "from_json"], [134, 3, 1, "", "is_multi_output"], [134, 6, 1, "", "n_outputs"], [134, 6, 1, "", "targets"], [134, 2, 1, "", "to_dict"], [134, 2, 1, "", "to_json"], [134, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[134, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[134, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[134, 4, 1, "", "allow_extra"], [134, 4, 1, "", "allow_missing"], [134, 4, 1, "", "df"]], "baybe.objectives.validation": [[136, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[138, 0, 0, "-", "base"], [142, 0, 0, "-", "categorical"], [145, 0, 0, "-", "custom"], [147, 0, 0, "-", "enum"], [152, 0, 0, "-", "numerical"], [155, 0, 0, "-", "substance"], [158, 0, 0, "-", "utils"], [163, 0, 0, "-", "validation"]], "baybe.parameters.base": [[139, 1, 1, "", "ContinuousParameter"], [140, 1, 1, "", "DiscreteParameter"], [141, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[139, 2, 1, "", "__init__"], [139, 6, 1, "", "comp_rep_columns"], [139, 2, 1, "", "from_dict"], [139, 2, 1, "", "from_json"], [139, 6, 1, "", "is_continuous"], [139, 6, 1, "", "is_discrete"], [139, 2, 1, "", "is_in_range"], [139, 3, 1, "", "is_numerical"], [139, 3, 1, "", "name"], [139, 2, 1, "", "summary"], [139, 2, 1, "", "to_dict"], [139, 2, 1, "", "to_json"], [139, 2, 1, "", "to_searchspace"], [139, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[139, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[139, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[139, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[140, 2, 1, "", "__init__"], [140, 6, 1, "", "active_values"], [140, 6, 1, "", "comp_df"], [140, 6, 1, "", "comp_rep_columns"], [140, 3, 1, "", "encoding"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 6, 1, "", "is_continuous"], [140, 6, 1, "", "is_discrete"], [140, 2, 1, "", "is_in_range"], [140, 3, 1, "", "is_numerical"], [140, 3, 1, "", "name"], [140, 2, 1, "", "summary"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_json"], [140, 2, 1, "", "to_searchspace"], [140, 2, 1, "", "to_subspace"], [140, 2, 1, "", "transform"], [140, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[140, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[140, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[140, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[140, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "comp_rep_columns"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 6, 1, "", "is_continuous"], [141, 6, 1, "", "is_discrete"], [141, 2, 1, "", "is_in_range"], [141, 3, 1, "", "is_numerical"], [141, 3, 1, "", "name"], [141, 2, 1, "", "summary"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_json"], [141, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[141, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[141, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[141, 4, 1, "", "item"]], "baybe.parameters.categorical": [[143, 1, 1, "", "CategoricalParameter"], [144, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[143, 2, 1, "", "__init__"], [143, 6, 1, "", "active_values"], [143, 6, 1, "", "comp_df"], [143, 6, 1, "", "comp_rep_columns"], [143, 3, 1, "", "encoding"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_json"], [143, 6, 1, "", "is_continuous"], [143, 6, 1, "", "is_discrete"], [143, 2, 1, "", "is_in_range"], [143, 3, 1, "", "is_numerical"], [143, 3, 1, "", "name"], [143, 2, 1, "", "summary"], [143, 2, 1, "", "to_dict"], [143, 2, 1, "", "to_json"], [143, 2, 1, "", "to_searchspace"], [143, 2, 1, "", "to_subspace"], [143, 2, 1, "", "transform"], [143, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[143, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[143, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[143, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[143, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[144, 2, 1, "", "__init__"], [144, 6, 1, "", "active_values"], [144, 6, 1, "", "comp_df"], [144, 6, 1, "", "comp_rep_columns"], [144, 3, 1, "", "encoding"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_json"], [144, 6, 1, "", "is_continuous"], [144, 6, 1, "", "is_discrete"], [144, 2, 1, "", "is_in_range"], [144, 3, 1, "", "is_numerical"], [144, 3, 1, "", "name"], [144, 2, 1, "", "summary"], [144, 2, 1, "", "to_dict"], [144, 2, 1, "", "to_json"], [144, 2, 1, "", "to_searchspace"], [144, 2, 1, "", "to_subspace"], [144, 2, 1, "", "transform"], [144, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[144, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[144, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[144, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[144, 4, 1, "", "series"]], "baybe.parameters.custom": [[146, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[146, 2, 1, "", "__init__"], [146, 6, 1, "", "active_values"], [146, 6, 1, "", "comp_df"], [146, 6, 1, "", "comp_rep_columns"], [146, 3, 1, "", "data"], [146, 3, 1, "", "decorrelate"], [146, 3, 1, "", "encoding"], [146, 2, 1, "", "from_dict"], [146, 2, 1, "", "from_json"], [146, 6, 1, "", "is_continuous"], [146, 6, 1, "", "is_discrete"], [146, 2, 1, "", "is_in_range"], [146, 3, 1, "", "is_numerical"], [146, 3, 1, "", "name"], [146, 2, 1, "", "summary"], [146, 2, 1, "", "to_dict"], [146, 2, 1, "", "to_json"], [146, 2, 1, "", "to_searchspace"], [146, 2, 1, "", "to_subspace"], [146, 2, 1, "", "transform"], [146, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[146, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[146, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[146, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[146, 4, 1, "", "series"]], "baybe.parameters.enum": [[148, 1, 1, "", "CategoricalEncoding"], [149, 1, 1, "", "CustomEncoding"], [150, 1, 1, "", "ParameterEncoding"], [151, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[148, 3, 1, "", "INT"], [148, 3, 1, "", "OHE"], [148, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[149, 3, 1, "", "CUSTOM"], [149, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[151, 3, 1, "", "ATOMPAIR"], [151, 3, 1, "", "AUTOCORR"], [151, 3, 1, "", "AVALON"], [151, 3, 1, "", "BCUT2D"], [151, 3, 1, "", "E3FP"], [151, 3, 1, "", "ECFP"], [151, 3, 1, "", "ELECTROSHAPE"], [151, 3, 1, "", "ERG"], [151, 3, 1, "", "ESTATE"], [151, 3, 1, "", "FUNCTIONALGROUPS"], [151, 3, 1, "", "GETAWAY"], [151, 3, 1, "", "GHOSECRIPPEN"], [151, 3, 1, "", "KLEKOTAROTH"], [151, 3, 1, "", "LAGGNER"], [151, 3, 1, "", "LAYERED"], [151, 3, 1, "", "LINGO"], [151, 3, 1, "", "MACCS"], [151, 3, 1, "", "MAP"], [151, 3, 1, "", "MHFP"], [151, 3, 1, "", "MORDRED"], [151, 3, 1, "", "MORGAN_FP"], [151, 3, 1, "", "MORSE"], [151, 3, 1, "", "MQNS"], [151, 3, 1, "", "PATTERN"], [151, 3, 1, "", "PHARMACOPHORE"], [151, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [151, 3, 1, "", "PUBCHEM"], [151, 3, 1, "", "RDF"], [151, 3, 1, "", "RDKIT"], [151, 3, 1, "", "RDKIT2DDESCRIPTORS"], [151, 3, 1, "", "RDKITFINGERPRINT"], [151, 3, 1, "", "SECFP"], [151, 3, 1, "", "TOPOLOGICALTORSION"], [151, 3, 1, "", "USR"], [151, 3, 1, "", "USRCAT"], [151, 3, 1, "", "VSA"], [151, 3, 1, "", "WHIM"], [151, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[153, 1, 1, "", "NumericalContinuousParameter"], [154, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[153, 2, 1, "", "__init__"], [153, 3, 1, "", "bounds"], [153, 6, 1, "", "comp_rep_columns"], [153, 2, 1, "", "from_dict"], [153, 2, 1, "", "from_json"], [153, 6, 1, "", "is_continuous"], [153, 6, 1, "", "is_discrete"], [153, 2, 1, "", "is_in_range"], [153, 3, 1, "", "is_numerical"], [153, 3, 1, "", "name"], [153, 2, 1, "", "summary"], [153, 2, 1, "", "to_dict"], [153, 2, 1, "", "to_json"], [153, 2, 1, "", "to_searchspace"], [153, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[153, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[153, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[153, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[154, 2, 1, "", "__init__"], [154, 6, 1, "", "active_values"], [154, 6, 1, "", "comp_df"], [154, 6, 1, "", "comp_rep_columns"], [154, 3, 1, "", "encoding"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 6, 1, "", "is_continuous"], [154, 6, 1, "", "is_discrete"], [154, 2, 1, "", "is_in_range"], [154, 3, 1, "", "is_numerical"], [154, 3, 1, "", "name"], [154, 2, 1, "", "summary"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_json"], [154, 2, 1, "", "to_searchspace"], [154, 2, 1, "", "to_subspace"], [154, 3, 1, "", "tolerance"], [154, 2, 1, "", "transform"], [154, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[154, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[154, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[154, 4, 1, "", "series"]], "baybe.parameters.substance": [[156, 3, 1, "", "Smiles"], [157, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[157, 2, 1, "", "__init__"], [157, 6, 1, "", "active_values"], [157, 6, 1, "", "comp_df"], [157, 6, 1, "", "comp_rep_columns"], [157, 3, 1, "", "data"], [157, 3, 1, "", "decorrelate"], [157, 3, 1, "", "encoding"], [157, 2, 1, "", "from_dict"], [157, 2, 1, "", "from_json"], [157, 6, 1, "", "is_continuous"], [157, 6, 1, "", "is_discrete"], [157, 2, 1, "", "is_in_range"], [157, 3, 1, "", "is_numerical"], [157, 3, 1, "", "kwargs_conformer"], [157, 3, 1, "", "kwargs_fingerprint"], [157, 3, 1, "", "name"], [157, 2, 1, "", "summary"], [157, 2, 1, "", "to_dict"], [157, 2, 1, "", "to_json"], [157, 2, 1, "", "to_searchspace"], [157, 2, 1, "", "to_subspace"], [157, 2, 1, "", "transform"], [157, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[157, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[157, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[157, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[157, 4, 1, "", "series"]], "baybe.parameters.utils": [[159, 5, 1, "", "activate_parameter"], [160, 5, 1, "", "get_parameters_from_dataframe"], [161, 5, 1, "", "is_inactive"], [162, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[159, 4, 1, "", "parameter"], [159, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[160, 4, 1, "", "df"], [160, 4, 1, "", "factory"], [160, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[161, 4, 1, "", "lower_threshold"], [161, 4, 1, "", "upper_threshold"], [161, 4, 1, "", "x"]], "baybe.parameters.validation": [[164, 5, 1, "", "validate_decorrelation"], [165, 5, 1, "", "validate_is_finite"], [166, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[168, 0, 0, "-", "base"], [170, 0, 0, "-", "basic"]], "baybe.priors.base": [[169, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_gpytorch"], [169, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[169, 4, 1, "", "string"]], "baybe.priors.basic": [[171, 1, 1, "", "BetaPrior"], [172, 1, 1, "", "GammaPrior"], [173, 1, 1, "", "HalfCauchyPrior"], [174, 1, 1, "", "HalfNormalPrior"], [175, 1, 1, "", "LogNormalPrior"], [176, 1, 1, "", "NormalPrior"], [177, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[171, 2, 1, "", "__init__"], [171, 3, 1, "", "alpha"], [171, 3, 1, "", "beta"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_gpytorch"], [171, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[171, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[172, 2, 1, "", "__init__"], [172, 3, 1, "", "concentration"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 3, 1, "", "rate"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_gpytorch"], [172, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[172, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 3, 1, "", "scale"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[173, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "scale"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[174, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "from_json"], [175, 3, 1, "", "loc"], [175, 3, 1, "", "scale"], [175, 2, 1, "", "to_dict"], [175, 2, 1, "", "to_gpytorch"], [175, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[175, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[175, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "from_dict"], [176, 2, 1, "", "from_json"], [176, 3, 1, "", "loc"], [176, 3, 1, "", "scale"], [176, 2, 1, "", "to_dict"], [176, 2, 1, "", "to_gpytorch"], [176, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[176, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[176, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[177, 2, 1, "", "__init__"], [177, 3, 1, "", "a"], [177, 3, 1, "", "b"], [177, 2, 1, "", "from_dict"], [177, 2, 1, "", "from_json"], [177, 3, 1, "", "sigma"], [177, 2, 1, "", "to_dict"], [177, 2, 1, "", "to_gpytorch"], [177, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[177, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[177, 4, 1, "", "string"]], "baybe.recommenders": [[179, 0, 0, "-", "base"], [181, 0, 0, "-", "meta"], [189, 0, 0, "-", "naive"], [191, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[180, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[180, 4, 1, "", "batch_size"], [180, 4, 1, "", "measurements"], [180, 4, 1, "", "objective"], [180, 4, 1, "", "pending_experiments"], [180, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[182, 0, 0, "-", "base"], [184, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[183, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "from_dict"], [183, 2, 1, "", "from_json"], [183, 2, 1, "", "get_current_recommender"], [183, 2, 1, "", "get_next_recommender"], [183, 2, 1, "", "get_non_meta_recommender"], [183, 6, 1, "", "is_stateful"], [183, 2, 1, "", "recommend"], [183, 2, 1, "", "select_recommender"], [183, 2, 1, "", "to_dict"], [183, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[183, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[183, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[185, 1, 1, "", "BaseSequentialMetaRecommender"], [186, 1, 1, "", "SequentialMetaRecommender"], [187, 1, 1, "", "StreamingSequentialMetaRecommender"], [188, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "get_current_recommender"], [185, 2, 1, "", "get_next_recommender"], [185, 2, 1, "", "get_non_meta_recommender"], [185, 6, 1, "", "is_stateful"], [185, 2, 1, "", "recommend"], [185, 2, 1, "", "select_recommender"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[185, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[185, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "from_dict"], [186, 2, 1, "", "from_json"], [186, 2, 1, "", "get_current_recommender"], [186, 2, 1, "", "get_next_recommender"], [186, 2, 1, "", "get_non_meta_recommender"], [186, 6, 1, "", "is_stateful"], [186, 3, 1, "", "mode"], [186, 2, 1, "", "recommend"], [186, 3, 1, "", "recommenders"], [186, 2, 1, "", "select_recommender"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[186, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[186, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "from_dict"], [187, 2, 1, "", "from_json"], [187, 2, 1, "", "get_current_recommender"], [187, 2, 1, "", "get_next_recommender"], [187, 2, 1, "", "get_non_meta_recommender"], [187, 6, 1, "", "is_stateful"], [187, 2, 1, "", "recommend"], [187, 3, 1, "", "recommenders"], [187, 2, 1, "", "select_recommender"], [187, 2, 1, "", "to_dict"], [187, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[187, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[187, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[188, 2, 1, "", "__init__"], [188, 2, 1, "", "from_dict"], [188, 2, 1, "", "from_json"], [188, 2, 1, "", "get_current_recommender"], [188, 2, 1, "", "get_next_recommender"], [188, 2, 1, "", "get_non_meta_recommender"], [188, 3, 1, "", "initial_recommender"], [188, 6, 1, "", "is_stateful"], [188, 2, 1, "", "recommend"], [188, 3, 1, "", "recommender"], [188, 3, 1, "", "remain_switched"], [188, 2, 1, "", "select_recommender"], [188, 3, 1, "", "switch_after"], [188, 2, 1, "", "to_dict"], [188, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[188, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[188, 4, 1, "", "string"]], "baybe.recommenders.naive": [[190, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[190, 2, 1, "", "__init__"], [190, 6, 1, "", "allow_recommending_already_measured"], [190, 6, 1, "", "allow_recommending_pending_experiments"], [190, 6, 1, "", "allow_repeated_recommendations"], [190, 3, 1, "", "compatibility"], [190, 3, 1, "", "cont_recommender"], [190, 3, 1, "", "disc_recommender"], [190, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[190, 4, 1, "", "batch_size"], [190, 4, 1, "", "measurements"], [190, 4, 1, "", "objective"], [190, 4, 1, "", "pending_experiments"], [190, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[192, 0, 0, "-", "base"], [194, 0, 0, "-", "bayesian"], [201, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[193, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[193, 2, 1, "", "__init__"], [193, 6, 1, "", "allow_recommending_already_measured"], [193, 6, 1, "", "allow_recommending_pending_experiments"], [193, 6, 1, "", "allow_repeated_recommendations"], [193, 3, 1, "", "compatibility"], [193, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[193, 4, 1, "", "batch_size"], [193, 4, 1, "", "measurements"], [193, 4, 1, "", "objective"], [193, 4, 1, "", "pending_experiments"], [193, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[195, 0, 0, "-", "base"], [197, 0, 0, "-", "botorch"], [199, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[196, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[196, 2, 1, "", "__init__"], [196, 3, 1, "", "acquisition_function"], [196, 3, 1, "", "acquisition_function_cls"], [196, 6, 1, "", "allow_recommending_already_measured"], [196, 6, 1, "", "allow_recommending_pending_experiments"], [196, 6, 1, "", "allow_repeated_recommendations"], [196, 3, 1, "", "compatibility"], [196, 2, 1, "", "get_surrogate"], [196, 2, 1, "", "recommend"], [196, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[196, 4, 1, "", "batch_size"], [196, 4, 1, "", "measurements"], [196, 4, 1, "", "objective"], [196, 4, 1, "", "pending_experiments"], [196, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[198, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[198, 2, 1, "", "__init__"], [198, 3, 1, "", "acquisition_function"], [198, 3, 1, "", "acquisition_function_cls"], [198, 6, 1, "", "allow_recommending_already_measured"], [198, 6, 1, "", "allow_recommending_pending_experiments"], [198, 6, 1, "", "allow_repeated_recommendations"], [198, 3, 1, "", "compatibility"], [198, 2, 1, "", "get_surrogate"], [198, 3, 1, "", "hybrid_sampler"], [198, 3, 1, "", "max_n_subspaces"], [198, 3, 1, "", "n_raw_samples"], [198, 3, 1, "", "n_restarts"], [198, 2, 1, "", "recommend"], [198, 3, 1, "", "sampling_percentage"], [198, 3, 1, "", "sequential_continuous"], [198, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[198, 4, 1, "", "batch_size"], [198, 4, 1, "", "measurements"], [198, 4, 1, "", "objective"], [198, 4, 1, "", "pending_experiments"], [198, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[200, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[202, 0, 0, "-", "base"], [204, 0, 0, "-", "clustering"], [209, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[203, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[203, 2, 1, "", "__init__"], [203, 6, 1, "", "allow_recommending_already_measured"], [203, 6, 1, "", "allow_recommending_pending_experiments"], [203, 6, 1, "", "allow_repeated_recommendations"], [203, 3, 1, "", "compatibility"], [203, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[203, 4, 1, "", "batch_size"], [203, 4, 1, "", "measurements"], [203, 4, 1, "", "objective"], [203, 4, 1, "", "pending_experiments"], [203, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[205, 1, 1, "", "GaussianMixtureClusteringRecommender"], [206, 1, 1, "", "KMeansClusteringRecommender"], [207, 1, 1, "", "PAMClusteringRecommender"], [208, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[205, 2, 1, "", "__init__"], [205, 6, 1, "", "allow_recommending_already_measured"], [205, 6, 1, "", "allow_recommending_pending_experiments"], [205, 6, 1, "", "allow_repeated_recommendations"], [205, 3, 1, "", "compatibility"], [205, 3, 1, "", "model_cluster_num_parameter_name"], [205, 3, 1, "", "model_params"], [205, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[205, 4, 1, "", "batch_size"], [205, 4, 1, "", "measurements"], [205, 4, 1, "", "objective"], [205, 4, 1, "", "pending_experiments"], [205, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[206, 2, 1, "", "__init__"], [206, 6, 1, "", "allow_recommending_already_measured"], [206, 6, 1, "", "allow_recommending_pending_experiments"], [206, 6, 1, "", "allow_repeated_recommendations"], [206, 3, 1, "", "compatibility"], [206, 3, 1, "", "model_cluster_num_parameter_name"], [206, 3, 1, "", "model_params"], [206, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[206, 4, 1, "", "batch_size"], [206, 4, 1, "", "measurements"], [206, 4, 1, "", "objective"], [206, 4, 1, "", "pending_experiments"], [206, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[207, 2, 1, "", "__init__"], [207, 6, 1, "", "allow_recommending_already_measured"], [207, 6, 1, "", "allow_recommending_pending_experiments"], [207, 6, 1, "", "allow_repeated_recommendations"], [207, 3, 1, "", "compatibility"], [207, 3, 1, "", "model_cluster_num_parameter_name"], [207, 3, 1, "", "model_params"], [207, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[207, 4, 1, "", "batch_size"], [207, 4, 1, "", "measurements"], [207, 4, 1, "", "objective"], [207, 4, 1, "", "pending_experiments"], [207, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[208, 2, 1, "", "__init__"], [208, 6, 1, "", "allow_recommending_already_measured"], [208, 6, 1, "", "allow_recommending_pending_experiments"], [208, 6, 1, "", "allow_repeated_recommendations"], [208, 3, 1, "", "compatibility"], [208, 3, 1, "", "model_cluster_num_parameter_name"], [208, 3, 1, "", "model_params"], [208, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[208, 4, 1, "", "batch_size"], [208, 4, 1, "", "measurements"], [208, 4, 1, "", "objective"], [208, 4, 1, "", "pending_experiments"], [208, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[210, 1, 1, "", "FPSRecommender"], [211, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[210, 2, 1, "", "__init__"], [210, 6, 1, "", "allow_recommending_already_measured"], [210, 6, 1, "", "allow_recommending_pending_experiments"], [210, 6, 1, "", "allow_repeated_recommendations"], [210, 3, 1, "", "compatibility"], [210, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[210, 4, 1, "", "batch_size"], [210, 4, 1, "", "measurements"], [210, 4, 1, "", "objective"], [210, 4, 1, "", "pending_experiments"], [210, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[211, 2, 1, "", "__init__"], [211, 6, 1, "", "allow_recommending_already_measured"], [211, 6, 1, "", "allow_recommending_pending_experiments"], [211, 6, 1, "", "allow_repeated_recommendations"], [211, 3, 1, "", "compatibility"], [211, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[211, 4, 1, "", "batch_size"], [211, 4, 1, "", "measurements"], [211, 4, 1, "", "objective"], [211, 4, 1, "", "pending_experiments"], [211, 4, 1, "", "searchspace"]], "baybe.searchspace": [[213, 0, 0, "-", "continuous"], [215, 0, 0, "-", "core"], [220, 0, 0, "-", "discrete"], [226, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[214, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[214, 2, 1, "", "__init__"], [214, 6, 1, "", "comp_rep_bounds"], [214, 6, 1, "", "comp_rep_columns"], [214, 6, 1, "", "constraints_cardinality"], [214, 3, 1, "", "constraints_lin_eq"], [214, 3, 1, "", "constraints_lin_ineq"], [214, 3, 1, "", "constraints_nonlin"], [214, 2, 1, "", "empty"], [214, 2, 1, "", "from_bounds"], [214, 2, 1, "", "from_dataframe"], [214, 2, 1, "", "from_dict"], [214, 2, 1, "", "from_json"], [214, 2, 1, "", "from_parameter"], [214, 2, 1, "", "from_product"], [214, 6, 1, "", "full_factorial"], [214, 2, 1, "", "get_parameters_by_name"], [214, 2, 1, "", "inactive_parameter_combinations"], [214, 6, 1, "", "is_empty"], [214, 6, 1, "", "n_inactive_parameter_combinations"], [214, 6, 1, "", "parameter_names"], [214, 6, 1, "", "parameter_names_in_cardinality_constraints"], [214, 3, 1, "", "parameters"], [214, 2, 1, "", "sample_from_full_factorial"], [214, 2, 1, "", "sample_uniform"], [214, 2, 1, "", "samples_full_factorial"], [214, 2, 1, "", "samples_random"], [214, 6, 1, "", "scaling_bounds"], [214, 2, 1, "", "to_dict"], [214, 2, 1, "", "to_json"], [214, 2, 1, "", "to_searchspace"], [214, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[214, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[214, 4, 1, "", "df"], [214, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[214, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[214, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[214, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[214, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[214, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[214, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[216, 1, 1, "", "SearchSpace"], [217, 1, 1, "", "SearchSpaceType"], [218, 5, 1, "", "to_searchspace"], [219, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[216, 2, 1, "", "__init__"], [216, 6, 1, "", "comp_rep_bounds"], [216, 6, 1, "", "comp_rep_columns"], [216, 6, 1, "", "constraints"], [216, 6, 1, "", "constraints_augmentable"], [216, 3, 1, "", "continuous"], [216, 3, 1, "", "discrete"], [216, 2, 1, "", "estimate_product_space_size"], [216, 2, 1, "", "from_dataframe"], [216, 2, 1, "", "from_dict"], [216, 2, 1, "", "from_json"], [216, 2, 1, "", "from_parameter"], [216, 2, 1, "", "from_product"], [216, 2, 1, "", "get_comp_rep_parameter_indices"], [216, 2, 1, "", "get_parameters_by_name"], [216, 6, 1, "", "n_tasks"], [216, 6, 1, "", "parameter_names"], [216, 6, 1, "", "parameters"], [216, 6, 1, "", "scaling_bounds"], [216, 6, 1, "", "task_idx"], [216, 2, 1, "", "to_dict"], [216, 2, 1, "", "to_json"], [216, 2, 1, "", "transform"], [216, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[216, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[216, 4, 1, "", "df"], [216, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[216, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[216, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[216, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[216, 4, 1, "", "constraints"], [216, 4, 1, "", "empty_encoding"], [216, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[216, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[216, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[216, 4, 1, "", "allow_extra"], [216, 4, 1, "", "allow_missing"], [216, 4, 1, "", "data"], [216, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[217, 3, 1, "", "CONTINUOUS"], [217, 3, 1, "", "DISCRETE"], [217, 3, 1, "", "EITHER"], [217, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[221, 1, 1, "", "MemorySize"], [222, 1, 1, "", "SubspaceDiscrete"], [223, 5, 1, "", "parameter_cartesian_prod_pandas"], [224, 5, 1, "", "parameter_cartesian_prod_polars"], [225, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[221, 2, 1, "", "__init__"], [221, 3, 1, "", "comp_rep_bytes"], [221, 6, 1, "", "comp_rep_human_readable"], [221, 3, 1, "", "comp_rep_shape"], [221, 3, 1, "", "exp_rep_bytes"], [221, 6, 1, "", "exp_rep_human_readable"], [221, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[222, 2, 1, "", "__init__"], [222, 3, 1, "", "comp_rep"], [222, 6, 1, "", "comp_rep_bounds"], [222, 6, 1, "", "comp_rep_columns"], [222, 3, 1, "", "constraints"], [222, 2, 1, "", "empty"], [222, 3, 1, "", "empty_encoding"], [222, 2, 1, "", "estimate_product_space_size"], [222, 3, 1, "", "exp_rep"], [222, 2, 1, "", "from_dataframe"], [222, 2, 1, "", "from_dict"], [222, 2, 1, "", "from_json"], [222, 2, 1, "", "from_parameter"], [222, 2, 1, "", "from_product"], [222, 2, 1, "", "from_simplex"], [222, 2, 1, "", "get_candidates"], [222, 2, 1, "", "get_parameters_by_name"], [222, 6, 1, "", "is_empty"], [222, 6, 1, "", "metadata"], [222, 6, 1, "", "parameter_names"], [222, 3, 1, "", "parameters"], [222, 6, 1, "", "scaling_bounds"], [222, 2, 1, "", "to_dict"], [222, 2, 1, "", "to_json"], [222, 2, 1, "", "to_searchspace"], [222, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[222, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[222, 4, 1, "", "df"], [222, 4, 1, "", "empty_encoding"], [222, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[222, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[222, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[222, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[222, 4, 1, "", "boundary_only"], [222, 4, 1, "", "constraints"], [222, 4, 1, "", "max_nonzero"], [222, 4, 1, "", "max_sum"], [222, 4, 1, "", "min_nonzero"], [222, 4, 1, "", "product_parameters"], [222, 4, 1, "", "simplex_parameters"], [222, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[222, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[223, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[224, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[227, 5, 1, "", "get_transform_parameters"], [228, 5, 1, "", "validate_parameter_names"], [229, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[231, 0, 0, "-", "core"], [238, 0, 0, "-", "mixin"], [240, 0, 0, "-", "utils"]], "baybe.serialization.core": [[232, 5, 1, "", "block_deserialization_hook"], [233, 5, 1, "", "block_serialization_hook"], [234, 8, 1, "", "converter"], [235, 5, 1, "", "get_base_structure_hook"], [236, 5, 1, "", "select_constructor_hook"], [237, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[235, 4, 1, "", "base"], [235, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[237, 4, 1, "", "base"], [237, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[239, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[239, 2, 1, "", "from_dict"], [239, 2, 1, "", "from_json"], [239, 2, 1, "", "to_dict"], [239, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[239, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[239, 4, 1, "", "string"]], "baybe.serialization.utils": [[241, 5, 1, "", "deserialize_dataframe"], [242, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[244, 0, 0, "-", "core"], [246, 0, 0, "-", "lookup"], [248, 0, 0, "-", "scenarios"], [250, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[245, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[245, 4, 1, "", "batch_size"], [245, 4, 1, "", "campaign"], [245, 4, 1, "", "impute_mode"], [245, 4, 1, "", "initial_data"], [245, 4, 1, "", "lookup"], [245, 4, 1, "", "n_doe_iterations"], [245, 4, 1, "", "noise_percent"], [245, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[247, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[247, 4, 1, "", "impute_mode"], [247, 4, 1, "", "lookup"], [247, 4, 1, "", "queries"], [247, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[249, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[249, 4, 1, "", "batch_size"], [249, 4, 1, "", "groupby"], [249, 4, 1, "", "impute_mode"], [249, 4, 1, "", "initial_data"], [249, 4, 1, "", "lookup"], [249, 4, 1, "", "n_doe_iterations"], [249, 4, 1, "", "n_mc_iterations"], [249, 4, 1, "", "noise_percent"], [249, 4, 1, "", "random_seed"], [249, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[251, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[251, 4, 1, "", "batch_size"], [251, 4, 1, "", "campaign"], [251, 4, 1, "", "groupby"], [251, 4, 1, "", "lookup"], [251, 4, 1, "", "n_doe_iterations"], [251, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[253, 0, 0, "-", "bandit"], [255, 0, 0, "-", "base"], [260, 0, 0, "-", "composite"], [262, 0, 0, "-", "custom"], [265, 0, 0, "-", "gaussian_process"], [280, 0, 0, "-", "linear"], [282, 0, 0, "-", "naive"], [284, 0, 0, "-", "ngboost"], [286, 0, 0, "-", "random_forest"], [288, 0, 0, "-", "utils"], [292, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[254, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[254, 2, 1, "", "__init__"], [254, 2, 1, "", "fit"], [254, 2, 1, "", "from_dict"], [254, 2, 1, "", "from_json"], [254, 2, 1, "", "posterior"], [254, 2, 1, "", "posterior_means"], [254, 2, 1, "", "posterior_modes"], [254, 2, 1, "", "posterior_stats"], [254, 3, 1, "", "prior"], [254, 2, 1, "", "replicate"], [254, 3, 1, "", "supports_multi_output"], [254, 3, 1, "", "supports_transfer_learning"], [254, 2, 1, "", "to_botorch"], [254, 2, 1, "", "to_dict"], [254, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[254, 4, 1, "", "measurements"], [254, 4, 1, "", "objective"], [254, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[254, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[254, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[254, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[254, 4, 1, "", "candidates"], [254, 4, 1, "", "stats"]], "baybe.surrogates.base": [[256, 1, 1, "", "IndependentGaussianSurrogate"], [257, 8, 1, "", "PosteriorStatistic"], [258, 1, 1, "", "Surrogate"], [259, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[256, 2, 1, "", "__init__"], [256, 2, 1, "", "fit"], [256, 2, 1, "", "from_dict"], [256, 2, 1, "", "from_json"], [256, 2, 1, "", "posterior"], [256, 2, 1, "", "posterior_stats"], [256, 2, 1, "", "replicate"], [256, 3, 1, "", "supports_multi_output"], [256, 3, 1, "", "supports_transfer_learning"], [256, 2, 1, "", "to_botorch"], [256, 2, 1, "", "to_dict"], [256, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[256, 4, 1, "", "measurements"], [256, 4, 1, "", "objective"], [256, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[256, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[256, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[256, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[256, 4, 1, "", "candidates"], [256, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "fit"], [258, 2, 1, "", "from_dict"], [258, 2, 1, "", "from_json"], [258, 2, 1, "", "posterior"], [258, 2, 1, "", "posterior_stats"], [258, 2, 1, "", "replicate"], [258, 3, 1, "", "supports_multi_output"], [258, 3, 1, "", "supports_transfer_learning"], [258, 2, 1, "", "to_botorch"], [258, 2, 1, "", "to_dict"], [258, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[258, 4, 1, "", "measurements"], [258, 4, 1, "", "objective"], [258, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[258, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[258, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[258, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[258, 4, 1, "", "candidates"], [258, 4, 1, "", "stats"]], "baybe.surrogates.base.SurrogateProtocol": [[259, 2, 1, "", "__init__"], [259, 2, 1, "", "fit"], [259, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[261, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[261, 2, 1, "", "__init__"], [261, 2, 1, "", "fit"], [261, 2, 1, "", "from_dict"], [261, 2, 1, "", "from_json"], [261, 2, 1, "", "from_replication"], [261, 2, 1, "", "posterior"], [261, 2, 1, "", "posterior_stats"], [261, 3, 1, "", "surrogates"], [261, 2, 1, "", "to_botorch"], [261, 2, 1, "", "to_dict"], [261, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[261, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[261, 4, 1, "", "string"]], "baybe.surrogates.custom": [[263, 1, 1, "", "CustomONNXSurrogate"], [264, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[263, 2, 1, "", "__init__"], [263, 2, 1, "", "default_model"], [263, 2, 1, "", "fit"], [263, 2, 1, "", "from_dict"], [263, 2, 1, "", "from_json"], [263, 3, 1, "", "onnx_input_name"], [263, 3, 1, "", "onnx_str"], [263, 2, 1, "", "posterior"], [263, 2, 1, "", "posterior_stats"], [263, 2, 1, "", "replicate"], [263, 3, 1, "", "supports_multi_output"], [263, 3, 1, "", "supports_transfer_learning"], [263, 2, 1, "", "to_botorch"], [263, 2, 1, "", "to_dict"], [263, 2, 1, "", "to_json"], [263, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[263, 4, 1, "", "measurements"], [263, 4, 1, "", "objective"], [263, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[263, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[263, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[263, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[263, 4, 1, "", "candidates"], [263, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[263, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[266, 0, 0, "-", "core"], [268, 0, 0, "-", "kernel_factory"], [272, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[267, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[267, 2, 1, "", "__init__"], [267, 2, 1, "", "fit"], [267, 2, 1, "", "from_dict"], [267, 2, 1, "", "from_json"], [267, 2, 1, "", "from_preset"], [267, 3, 1, "", "kernel_factory"], [267, 2, 1, "", "posterior"], [267, 2, 1, "", "posterior_stats"], [267, 2, 1, "", "replicate"], [267, 3, 1, "", "supports_multi_output"], [267, 3, 1, "", "supports_transfer_learning"], [267, 2, 1, "", "to_botorch"], [267, 2, 1, "", "to_dict"], [267, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[267, 4, 1, "", "measurements"], [267, 4, 1, "", "objective"], [267, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[267, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[267, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[267, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[267, 4, 1, "", "candidates"], [267, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.kernel_factory": [[269, 1, 1, "", "KernelFactory"], [270, 1, 1, "", "PlainKernelFactory"], [271, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[269, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[270, 2, 1, "", "__init__"], [270, 2, 1, "", "from_dict"], [270, 2, 1, "", "from_json"], [270, 3, 1, "", "kernel"], [270, 2, 1, "", "to_dict"], [270, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[270, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[270, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[273, 0, 0, "-", "core"], [276, 0, 0, "-", "default"], [278, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[274, 1, 1, "", "GaussianProcessPreset"], [275, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[274, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[277, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[277, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[279, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[279, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[281, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[281, 2, 1, "", "__init__"], [281, 2, 1, "", "fit"], [281, 2, 1, "", "from_dict"], [281, 2, 1, "", "from_json"], [281, 3, 1, "", "model_params"], [281, 2, 1, "", "posterior"], [281, 2, 1, "", "posterior_stats"], [281, 2, 1, "", "replicate"], [281, 3, 1, "", "supports_multi_output"], [281, 3, 1, "", "supports_transfer_learning"], [281, 2, 1, "", "to_botorch"], [281, 2, 1, "", "to_dict"], [281, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[281, 4, 1, "", "measurements"], [281, 4, 1, "", "objective"], [281, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[281, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[281, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[281, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[281, 4, 1, "", "candidates"], [281, 4, 1, "", "stats"]], "baybe.surrogates.naive": [[283, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[283, 2, 1, "", "__init__"], [283, 2, 1, "", "fit"], [283, 2, 1, "", "from_dict"], [283, 2, 1, "", "from_json"], [283, 2, 1, "", "posterior"], [283, 2, 1, "", "posterior_stats"], [283, 2, 1, "", "replicate"], [283, 3, 1, "", "supports_multi_output"], [283, 3, 1, "", "supports_transfer_learning"], [283, 2, 1, "", "to_botorch"], [283, 2, 1, "", "to_dict"], [283, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[283, 4, 1, "", "measurements"], [283, 4, 1, "", "objective"], [283, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[283, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[283, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[283, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[283, 4, 1, "", "candidates"], [283, 4, 1, "", "stats"]], "baybe.surrogates.ngboost": [[285, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[285, 2, 1, "", "__init__"], [285, 2, 1, "", "fit"], [285, 2, 1, "", "from_dict"], [285, 2, 1, "", "from_json"], [285, 3, 1, "", "model_params"], [285, 2, 1, "", "posterior"], [285, 2, 1, "", "posterior_stats"], [285, 2, 1, "", "replicate"], [285, 3, 1, "", "supports_multi_output"], [285, 3, 1, "", "supports_transfer_learning"], [285, 2, 1, "", "to_botorch"], [285, 2, 1, "", "to_dict"], [285, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[285, 4, 1, "", "measurements"], [285, 4, 1, "", "objective"], [285, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[285, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[285, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[285, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[285, 4, 1, "", "candidates"], [285, 4, 1, "", "stats"]], "baybe.surrogates.random_forest": [[287, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[287, 2, 1, "", "__init__"], [287, 2, 1, "", "fit"], [287, 2, 1, "", "from_dict"], [287, 2, 1, "", "from_json"], [287, 3, 1, "", "model_params"], [287, 2, 1, "", "posterior"], [287, 2, 1, "", "posterior_stats"], [287, 2, 1, "", "replicate"], [287, 3, 1, "", "supports_multi_output"], [287, 3, 1, "", "supports_transfer_learning"], [287, 2, 1, "", "to_botorch"], [287, 2, 1, "", "to_dict"], [287, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[287, 4, 1, "", "measurements"], [287, 4, 1, "", "objective"], [287, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[287, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[287, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[287, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[287, 4, 1, "", "candidates"], [287, 4, 1, "", "stats"]], "baybe.surrogates.utils": [[289, 5, 1, "", "batchify_ensemble_predictor"], [290, 5, 1, "", "batchify_mean_var_prediction"], [291, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[289, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[291, 4, 1, "", "cls"], [291, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[293, 5, 1, "", "get_model_params_validator"], [294, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[293, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[294, 4, 1, "", "model_cls"]], "baybe.targets": [[296, 0, 0, "-", "base"], [298, 0, 0, "-", "binary"], [301, 0, 0, "-", "enum"], [304, 0, 0, "-", "numerical"], [306, 0, 0, "-", "transforms"]], "baybe.targets.base": [[297, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[297, 2, 1, "", "__init__"], [297, 2, 1, "", "from_dict"], [297, 2, 1, "", "from_json"], [297, 3, 1, "", "name"], [297, 2, 1, "", "summary"], [297, 2, 1, "", "to_dict"], [297, 2, 1, "", "to_json"], [297, 2, 1, "", "to_objective"], [297, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[297, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[297, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[297, 4, 1, "", "series"]], "baybe.targets.binary": [[299, 1, 1, "", "BinaryTarget"], [300, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[299, 2, 1, "", "__init__"], [299, 3, 1, "", "failure_value"], [299, 2, 1, "", "from_dict"], [299, 2, 1, "", "from_json"], [299, 3, 1, "", "name"], [299, 3, 1, "", "success_value"], [299, 2, 1, "", "summary"], [299, 2, 1, "", "to_dict"], [299, 2, 1, "", "to_json"], [299, 2, 1, "", "to_objective"], [299, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[299, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[299, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[299, 4, 1, "", "series"]], "baybe.targets.enum": [[302, 1, 1, "", "TargetMode"], [303, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[302, 3, 1, "", "MATCH"], [302, 3, 1, "", "MAX"], [302, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[303, 3, 1, "", "BELL"], [303, 3, 1, "", "LINEAR"], [303, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[305, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[305, 2, 1, "", "__init__"], [305, 3, 1, "", "bounds"], [305, 2, 1, "", "from_dict"], [305, 2, 1, "", "from_json"], [305, 3, 1, "", "mode"], [305, 3, 1, "", "name"], [305, 2, 1, "", "summary"], [305, 2, 1, "", "to_dict"], [305, 2, 1, "", "to_json"], [305, 2, 1, "", "to_objective"], [305, 2, 1, "", "transform"], [305, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[305, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[305, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[305, 4, 1, "", "series"]], "baybe.targets.transforms": [[307, 5, 1, "", "bell_transform"], [308, 5, 1, "", "linear_transform"], [309, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[307, 4, 1, "", "arr"], [307, 4, 1, "", "lower"], [307, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[308, 4, 1, "", "arr"], [308, 4, 1, "", "descending"], [308, 4, 1, "", "lower"], [308, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[309, 4, 1, "", "arr"], [309, 4, 1, "", "lower"], [309, 4, 1, "", "upper"]], "baybe.telemetry": [[311, 5, 1, "", "get_user_details"], [312, 5, 1, "", "is_enabled"], [313, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [314, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[313, 4, 1, "", "cached_recommendation"], [313, 4, 1, "", "measurements"], [313, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[314, 4, 1, "", "instrument_name"], [314, 4, 1, "", "value"]], "baybe.utils": [[316, 0, 0, "-", "augmentation"], [319, 0, 0, "-", "basic"], [335, 0, 0, "-", "boolean"], [339, 0, 0, "-", "chemistry"], [344, 0, 0, "-", "conversion"], [348, 0, 0, "-", "dataframe"], [363, 0, 0, "-", "interval"], [368, 0, 0, "-", "memory"], [370, 0, 0, "-", "numerical"], [377, 0, 0, "-", "random"], [380, 0, 0, "-", "sampling_algorithms"], [384, 0, 0, "-", "scaling"], [386, 0, 0, "-", "torch"], [389, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[317, 5, 1, "", "df_apply_dependency_augmentation"], [318, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[317, 4, 1, "", "affected"], [317, 4, 1, "", "causing"], [317, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[318, 4, 1, "", "column_groups"], [318, 4, 1, "", "df"]], "baybe.utils.basic": [[320, 1, 1, "", "Dummy"], [321, 8, 1, "", "UNSPECIFIED"], [322, 1, 1, "", "UnspecifiedType"], [323, 1, 1, "", "classproperty"], [324, 5, 1, "", "convert_to_float"], [325, 5, 1, "", "find_subclass"], [326, 5, 1, "", "get_baseclasses"], [327, 5, 1, "", "get_subclasses"], [328, 5, 1, "", "group_duplicate_values"], [329, 5, 1, "", "hilberts_factory"], [330, 5, 1, "", "is_all_instance"], [331, 5, 1, "", "match_attributes"], [332, 5, 1, "", "refers_to"], [333, 5, 1, "", "register_hooks"], [334, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[320, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[323, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[326, 4, 1, "", "abstract"], [326, 4, 1, "", "cls"], [326, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[327, 4, 1, "", "abstract"], [327, 4, 1, "", "cls"], [327, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[328, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[331, 4, 1, "", "callable_"], [331, 4, 1, "", "ignore"], [331, 4, 1, "", "object"], [331, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[333, 4, 1, "", "post_hooks"], [333, 4, 1, "", "pre_hooks"], [333, 4, 1, "", "target"]], "baybe.utils.boolean": [[336, 5, 1, "", "check_if_in"], [337, 5, 1, "", "is_abstract"], [338, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[336, 4, 1, "", "allowed"], [336, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[337, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[338, 4, 1, "", "val"]], "baybe.utils.chemistry": [[340, 5, 1, "", "get_canonical_smiles"], [341, 5, 1, "", "get_fingerprint_class"], [342, 5, 1, "", "name_to_smiles"], [343, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[341, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[342, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[343, 4, 1, "", "encoding"], [343, 4, 1, "", "kwargs_conformer"], [343, 4, 1, "", "kwargs_fingerprint"], [343, 4, 1, "", "prefix"], [343, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[345, 5, 1, "", "fraction_to_float"], [346, 5, 1, "", "nonstring_to_tuple"], [347, 5, 1, "", "to_string"]], "baybe.utils.conversion.fraction_to_float.params": [[345, 4, 1, "", "value"]], "baybe.utils.conversion.to_string.params": [[347, 4, 1, "", "*fields"], [347, 4, 1, "", "header"], [347, 4, 1, "", "single_line"]], "baybe.utils.dataframe": [[349, 5, 1, "", "add_fake_measurements"], [350, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [351, 5, 1, "", "add_parameter_noise"], [352, 5, 1, "", "arrays_to_dataframes"], [353, 5, 1, "", "create_fake_input"], [354, 5, 1, "", "df_drop_single_value_columns"], [355, 5, 1, "", "df_drop_string_columns"], [356, 5, 1, "", "df_uncorrelated_features"], [357, 5, 1, "", "filter_df"], [358, 5, 1, "", "fuzzy_row_match"], [359, 5, 1, "", "get_transform_objects"], [360, 5, 1, "", "pretty_print_df"], [361, 5, 1, "", "to_tensor"], [362, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[349, 4, 1, "", "bad_intervals"], [349, 4, 1, "", "data"], [349, 4, 1, "", "good_intervals"], [349, 4, 1, "", "good_reference_values"], [349, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[350, 4, 1, "", "df"], [350, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[351, 4, 1, "", "data"], [351, 4, 1, "", "noise_level"], [351, 4, 1, "", "noise_type"], [351, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[352, 4, 1, "", "input_labels"], [352, 4, 1, "", "output_labels"], [352, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[353, 4, 1, "", "**kwargs"], [353, 4, 1, "", "n_rows"], [353, 4, 1, "", "parameters"], [353, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[354, 4, 1, "", "df"], [354, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[355, 4, 1, "", "df"], [355, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[356, 4, 1, "", "df"], [356, 4, 1, "", "exclude_list"], [356, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[357, 4, 1, "", "complement"], [357, 4, 1, "", "df"], [357, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[358, 4, 1, "", "left_df"], [358, 4, 1, "", "parameters"], [358, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[359, 4, 1, "", "allow_extra"], [359, 4, 1, "", "allow_missing"], [359, 4, 1, "", "df"], [359, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[360, 4, 1, "", "df"], [360, 4, 1, "", "max_columns"], [360, 4, 1, "", "max_colwidth"], [360, 4, 1, "", "max_rows"], [360, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[361, 4, 1, "", "*x"]], "baybe.utils.interval": [[364, 7, 1, "", "InfiniteIntervalError"], [365, 1, 1, "", "Interval"], [366, 5, 1, "", "convert_bounds"], [367, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[364, 2, 1, "", "__init__"], [364, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[365, 2, 1, "", "__init__"], [365, 6, 1, "", "center"], [365, 2, 1, "", "contains"], [365, 2, 1, "", "create"], [365, 2, 1, "", "from_dict"], [365, 2, 1, "", "from_json"], [365, 6, 1, "", "is_bounded"], [365, 6, 1, "", "is_degenerate"], [365, 6, 1, "", "is_fully_unbounded"], [365, 6, 1, "", "is_half_bounded"], [365, 6, 1, "", "is_left_bounded"], [365, 6, 1, "", "is_right_bounded"], [365, 3, 1, "", "lower"], [365, 2, 1, "", "to_dict"], [365, 2, 1, "", "to_json"], [365, 2, 1, "", "to_ndarray"], [365, 2, 1, "", "to_tensor"], [365, 2, 1, "", "to_tuple"], [365, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[365, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[365, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[365, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[366, 4, 1, "", "bounds"]], "baybe.utils.memory": [[369, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[369, 4, 1, "", "num"]], "baybe.utils.numerical": [[371, 3, 1, "", "DTypeFloatNumpy"], [372, 3, 1, "", "DTypeFloatONNX"], [373, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [374, 5, 1, "", "closer_element"], [375, 5, 1, "", "closest_element"], [376, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[374, 4, 1, "", "target"], [374, 4, 1, "", "x"], [374, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[375, 4, 1, "", "array"], [375, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[376, 4, 1, "", "arr"], [376, 4, 1, "", "weights"]], "baybe.utils.random": [[378, 5, 1, "", "set_random_seed"], [379, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[378, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[379, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[381, 1, 1, "", "DiscreteSamplingMethod"], [382, 5, 1, "", "farthest_point_sampling"], [383, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[381, 3, 1, "", "FPS"], [381, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[382, 4, 1, "", "initialization"], [382, 4, 1, "", "n_samples"], [382, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[383, 4, 1, "", "df"], [383, 4, 1, "", "method"], [383, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[385, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[385, 2, 1, "", "__init__"], [385, 2, 1, "", "fit"], [385, 3, 1, "", "mapping"], [385, 2, 1, "", "transform"]], "baybe.utils.torch": [[387, 8, 1, "", "DTypeFloatTorch"], [388, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[390, 5, 1, "", "finite_float"], [391, 5, 1, "", "non_inf_float"], [392, 5, 1, "", "non_nan_float"], [393, 5, 1, "", "validate_not_nan"], [394, 5, 1, "", "validate_parameter_input"], [395, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[394, 4, 1, "", "data"], [394, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [394, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[395, 4, 1, "", "data"], [395, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 198, 214, 216, 222, 239, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 329, 361, 365, 396, 399, 406, 410, 413, 414, 417, 418, 420, 421, 422, 423, 424, 426, 431, 435, 436, 437, 440, 441, 442, 445, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458, 459, 461], "0": [8, 13, 16, 22, 31, 34, 44, 45, 51, 107, 146, 154, 157, 177, 185, 186, 187, 198, 222, 245, 247, 254, 256, 258, 263, 267, 281, 283, 285, 287, 307, 308, 309, 317, 318, 338, 350, 351, 356, 357, 372, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 421, 423, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 440, 445, 446, 448, 449, 453, 454, 456, 457, 458, 460, 463], "00": [430, 456], "000": [410, 432], "0008892500000001746": 413, "001": [44, 350, 449], "002132": 425, "005": [398, 399, 400, 402, 403], "006118": 428, "01": [177, 405, 406, 411, 414, 429, 430, 437], "010704": 425, "02": 437, "021": [279, 356], "024178": 421, "026197": 425, "028389": 421, "032061": 425, "03213": [279, 356], "042934": 428, "047586": 421, "047726": 425, "05": 437, "053246": 429, "055306": 421, "056769": 425, "057": [398, 399, 400, 402, 403, 413], "06": [222, 291], "069780": 430, "070893": 425, "077957": 421, "08": 437, "080099": 403, "085793": 421, "092393": 428, "093661": 428, "095506": 430, "09653736976391157": 423, "0f": 414, "1": [13, 16, 26, 31, 44, 107, 128, 146, 157, 188, 198, 214, 245, 247, 249, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 307, 308, 309, 314, 317, 318, 328, 338, 351, 353, 357, 372, 376, 382, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 421, 423, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 440, 441, 445, 448, 449, 453, 454, 456, 457, 458, 460, 463], "10": [13, 16, 198, 247, 279, 356, 397, 399, 403, 408, 409, 410, 414, 417, 418, 420, 421, 423, 425, 426, 428, 432, 433, 434, 436, 437, 440, 447, 448, 454, 458, 463], "100": [408, 409, 410, 411, 414, 417, 418, 420, 421, 425, 426, 432, 437, 452, 453, 454, 458, 460, 463], "1000": [426, 458], "102": 429, "1024": [151, 442, 454], "1038": [279, 356], "105": [398, 399, 400, 402, 403, 413, 425, 456], "109580": 421, "11": [323, 420, 421, 425, 441], "111": 432, "113886": 425, "1147": 410, "1148": 410, "1149": 410, "1150": 410, "12": [420, 421, 425, 430, 443, 448, 456], "120": [398, 399, 400, 402, 403, 408, 410, 413, 454], "120000": 429, "121": 430, "122": 432, "125": 403, "126": [408, 410, 411, 441], "1268824": [398, 399, 400], "127": 429, "128": 10, "128211": 425, "13": [420, 421, 436, 456], "133": 429, "1337": [414, 415, 463], "138233": 430, "14": [420, 430, 456], "142534": 421, "14448993259018328": 423, "1454": 442, "15": [247, 410, 420, 421, 436, 437, 440, 448, 456], "150": [408, 411, 449], "1500": 454, "150390": 428, "151": 410, "153": [398, 399, 400, 402, 403, 413], "16": [360, 372, 420, 421], "164591": 402, "17": [402, 420, 421, 425, 429], "170958": 425, "176188": 421, "177": [403, 432], "178615": 430, "18": [420, 421, 448], "180": 408, "182783": 421, "188": 432, "189742": 425, "19": [420, 421], "192": 410, "1e": [222, 291], "2": [8, 13, 16, 22, 107, 109, 128, 247, 317, 318, 328, 349, 357, 376, 382, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 414, 415, 417, 418, 420, 421, 423, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 440, 445, 448, 449, 453, 454, 456, 457, 458, 460], "20": [13, 16, 157, 247, 397, 398, 399, 400, 414, 415, 420, 421, 425, 442, 454, 461, 463], "200": [399, 408, 410, 417, 418, 423, 432], "2004": 445, "2007": 461, "2021": 399, "2022": 440, "2025": 440, "209816": 428, "21": [420, 421, 433], "213300": 421, "219531": 421, "22": [13, 16, 420, 425, 448], "221": 442, "222": 432, "23": [420, 421, 448, 458], "230": 402, "230024": 428, "230918": 421, "234562": 421, "235221": 430, "238807": 425, "24": [409, 420, 456], "241": [425, 454], "244728": 428, "25": [414, 420, 421, 430, 436, 456], "250": 446, "258994": 421, "26": [420, 421, 425, 456], "262225": 421, "266278": 421, "268": 425, "27": [420, 456], "276438": 421, "277": 425, "278": 425, "279": 425, "28": [403, 420, 425], "280": 425, "285216": 425, "29": [417, 420, 440], "290869": 421, "295273": 421, "295430": 421, "297818": 428, "3": [247, 317, 318, 323, 328, 357, 360, 398, 399, 400, 403, 406, 408, 409, 410, 411, 413, 415, 418, 420, 421, 423, 425, 426, 428, 429, 430, 432, 433, 436, 437, 440, 441, 443, 445, 448, 449, 452, 454, 456, 457, 458, 460, 461], "30": [397, 411, 415, 420, 454], "303350": 421, "306078": 428, "3078f3": 442, "31": [420, 433], "32": [409, 420, 421, 425, 448, 454], "320625": 425, "322242": 425, "324745": 421, "328410": 421, "33": [409, 420, 425], "339733": 421, "34": [409, 448], "346943": 428, "35": [409, 420], "37": 421, "370072": 421, "376050": 429, "377411": 421, "38": 448, "384295": 421, "39": 454, "390": 402, "3d": 415, "4": [13, 16, 151, 317, 318, 360, 405, 406, 408, 409, 410, 411, 415, 420, 421, 423, 425, 428, 429, 430, 440, 445, 448, 449, 454, 456], "40": [420, 421, 425, 453, 454], "405317": 421, "405944": 421, "408215": 428, "409611": 421, "40x": 442, "414083": 421, "42": [423, 426, 448], "424153": 428, "43": 421, "433942": 430, "444738": 421, "447": 408, "448": 408, "449": 408, "45": [420, 421, 425, 460], "450": 408, "453530": 421, "465411": 421, "468": 442, "470152": 428, "471229": 402, "475747": 421, "475794": 421, "48": 425, "486005": 428, "486411": 421, "487963": 421, "492096": 421, "495674": 425, "4x": 442, "5": [107, 157, 317, 318, 398, 400, 405, 408, 409, 410, 411, 414, 417, 418, 420, 421, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 440, 445, 446, 447, 448, 449, 454, 456, 458, 461, 463], "50": [411, 418, 420, 421, 423, 436, 437, 445, 446, 454, 456, 460], "500": [415, 454], "5066666666666667": 423, "507946": 428, "51": 425, "510424": 421, "511151": 428, "512432": 428, "517750": 428, "52": 425, "521101": 428, "521199": 430, "53": [421, 425], "530961": 425, "530968": 428, "5313": 334, "533055": 428, "533886": 421, "54": [425, 440, 448], "547431": 428, "55": [425, 460], "551943": 425, "558867": 421, "56": [421, 425, 448, 458], "561943": 425, "567650": 421, "574339": 428, "58": 425, "586807": 425, "59": [432, 440, 448], "590": 399, "598056": 421, "598060": 428, "6": [317, 318, 360, 398, 399, 400, 408, 409, 410, 411, 420, 421, 423, 425, 428, 430, 432, 445, 449, 456], "60": [421, 425, 453], "605494": 428, "61": 425, "612304": 403, "62": [423, 448], "625252": 425, "639316": 421, "64": 198, "640984": 421, "645699": 421, "65": [423, 425, 430], "650017": 421, "651705": 421, "660938": 428, "66368270ffd51418ec58bd793f2d9b1b": 461, "664269": 421, "664518": 428, "666271": 428, "671987": 425, "674310": 421, "68": 425, "683519": 421, "689208": 421, "69": [398, 399, 400, 421], "692345": 421, "695756": 425, "7": [157, 317, 318, 356, 409, 411, 415, 420, 421, 425, 426, 428, 436, 445, 448, 454, 456], "70": [420, 421], "702895": 428, "703024": 425, "706667": 429, "707697": 421, "71": 454, "714288": 430, "72": [425, 448], "725797": 425, "728451": 421, "73": 425, "730442": 429, "730942": 428, "744037": 421, "745": 463, "75": [420, 429, 456], "751801": 421, "759281": 428, "762413": 428, "764044": 428, "77": 425, "771525": 421, "776750": 425, "777466": 421, "778": 432, "778022": 421, "78": 421, "780867": 421, "783248": 421, "79": 440, "793542": 421, "796977": 428, "7gz": 454, "7hf": 454, "8": [318, 398, 400, 402, 408, 410, 411, 420, 421, 423, 425, 428, 440, 445, 449], "80": [421, 449], "805902": 425, "81": 403, "810514": 428, "811667": 421, "814495": 425, "816373": 421, "82": 425, "83": 448, "833044": 421, "834811": 421, "8389": 334, "839487": 425, "840057": 421, "8417": 334, "844376": 425, "849818": 425, "85": 430, "852256": 425, "853934": 425, "857": 410, "858431": 425, "86": 425, "861": 411, "862": 411, "862674": 428, "863": 411, "864": 411, "864491": 421, "867247": 428, "87": [425, 432, 448], "871075": 430, "871499": 421, "871795": 403, "878492": 421, "88": 432, "8859": 417, "889": 432, "89": [399, 429, 432], "898249": 421, "8jq": 454, "9": [13, 16, 411, 415, 420, 421, 425, 428, 445, 448, 456, 457], "90": [398, 399, 400, 402, 403, 413, 432, 456], "91": 448, "911136": 421, "912407": 428, "915158": 428, "915754": 421, "917983": 421, "921542": 430, "922755": 430, "922800": 421, "940972": 421, "945884": 430, "947500": 425, "95": 425, "951821": 421, "96": 399, "985490": 425, "999": 449, "A": [0, 13, 16, 26, 31, 38, 40, 41, 42, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 73, 77, 79, 80, 81, 82, 85, 88, 90, 95, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 125, 127, 128, 132, 134, 140, 143, 144, 146, 154, 157, 159, 160, 161, 170, 171, 172, 173, 174, 175, 176, 177, 180, 186, 187, 188, 190, 193, 196, 198, 200, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 223, 224, 239, 240, 245, 247, 249, 251, 254, 256, 258, 261, 263, 267, 269, 270, 277, 279, 281, 283, 285, 287, 293, 297, 299, 305, 307, 308, 309, 317, 323, 326, 327, 328, 331, 341, 349, 356, 357, 359, 369, 376, 380, 382, 385, 397, 409, 418, 420, 421, 423, 425, 433, 434, 439, 441, 442, 443, 445, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461], "AND": [54, 410, 445, 449], "AS": [440, 445], "And": 417, "As": [398, 399, 400, 415, 423, 425, 436, 437, 440, 441, 442, 448, 449, 452, 455, 456, 458], "But": 460, "By": [95, 127, 160, 222, 337, 357, 421, 443, 447, 450, 451, 453, 455, 456], "FOR": 445, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 159, 167, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 222, 245, 251, 254, 256, 258, 259, 261, 263, 267, 270, 277, 279, 281, 283, 285, 287, 297, 299, 305, 310, 333, 358, 362, 365, 385, 398, 399, 400, 402, 403, 409, 413, 414, 415, 420, 421, 423, 425, 430, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 463], "If": [6, 13, 15, 16, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 95, 99, 122, 127, 128, 132, 134, 136, 159, 160, 165, 166, 186, 187, 190, 198, 214, 216, 222, 228, 229, 245, 247, 249, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 308, 313, 318, 326, 327, 331, 333, 336, 338, 341, 345, 347, 349, 350, 351, 353, 356, 357, 358, 359, 382, 383, 394, 395, 403, 405, 414, 420, 429, 430, 433, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 459, 460, 461, 463], "In": [31, 45, 57, 159, 198, 216, 243, 245, 331, 360, 398, 399, 400, 402, 414, 415, 417, 420, 421, 423, 425, 426, 429, 430, 433, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463], "It": [26, 180, 187, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 243, 262, 283, 349, 398, 402, 403, 409, 418, 420, 423, 425, 430, 432, 433, 434, 436, 447, 448, 449, 450, 454, 455, 456, 458, 463], "Its": [247, 417], "No": [358, 428, 439, 442], "Not": [445, 449], "OF": [440, 445], "OR": [440, 445], "Of": [403, 412, 438, 457], "On": [417, 423], "One": [148, 398, 400, 426, 440], "Or": 450, "Such": [403, 449, 452, 458], "That": [44, 216, 247, 254, 256, 258, 263, 267, 281, 283, 285, 287, 308, 403, 408, 420, 443, 456, 458, 461], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 95, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 128, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 159, 160, 161, 167, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 222, 234, 235, 237, 239, 243, 245, 247, 249, 254, 256, 258, 259, 261, 263, 267, 270, 281, 283, 285, 287, 289, 291, 293, 294, 297, 299, 302, 305, 307, 308, 309, 311, 313, 314, 317, 318, 323, 326, 327, 328, 331, 333, 336, 337, 338, 341, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 369, 374, 375, 376, 378, 379, 382, 383, 394, 395, 398, 399, 400, 403, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 425, 429, 430, 434, 436, 437, 439, 441, 442, 443, 445, 448, 449, 450, 452, 453, 454, 455, 456, 459, 460, 462, 463], "Then": 415, "There": [84, 291, 372, 420, 428, 440, 441, 443, 447, 451, 456, 459], "These": [311, 396, 399, 400, 401, 404, 407, 412, 416, 419, 422, 424, 427, 431, 435, 440, 443, 447, 449, 450, 454, 456], "To": [398, 403, 414, 415, 421, 423, 426, 432, 436, 437, 440, 441, 443, 447, 448, 449, 450, 451, 453, 454, 458, 459], "Will": 446, "With": [349, 414, 415, 420, 423, 426, 436, 437, 440, 447, 449, 454, 457], "_": [136, 165, 166, 219, 225, 232, 405, 414, 437], "__": 136, "__class__": [413, 423], "__excepthook__": 441, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 222, 254, 256, 258, 259, 261, 263, 267, 269, 270, 277, 279, 281, 283, 285, 287, 297, 299, 305, 320, 323, 364, 365, 385, 456, 457], "__name__": [413, 423], "__new__": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 148, 149, 151, 364], "__str__": 442, "__version__": 442, "_amount": 420, "_arraylik": 352, "_c": 327, "_cumbest": 245, "_default_my_attribut": 443, "_discretelabellikeparamet": [143, 146, 157], "_expectedhypervolumeimprov": [13, 16], "_fit": 294, "_has_switch": 188, "_iterbest": 245, "_label": 420, "_measur": 245, "_n_last_measur": [185, 186, 187], "_nbase": 343, "_nestedsequ": [13, 16, 128, 161, 307, 308, 309, 375], "_no_tl": 436, "_option": 442, "_posterior": 294, "_step": [185, 186, 187], "_supportsarrai": [13, 16, 128, 161, 307, 308, 309, 375], "_surrogate_model": [414, 415], "_surrogategett": 261, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 214, 216, 222, 227, 235, 236, 239, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 328, 329, 330, 346, 359, 365], "_target": 442, "_tparamet": 160, "_tsurrog": 290, "_u": 328, "_validate_my_attribut": 443, "_was_us": [185, 186, 187], "a1": 318, "a2": 318, "ab": [411, 420], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 325, 332, 442, 462], "abc": [24, 34, 35, 36, 37, 38, 40, 102, 103, 104, 122, 140, 141, 169, 183, 193, 196, 203, 208, 256, 258, 297, 337], "abil": [446, 451, 461], "abl": [415, 441, 447, 449, 454, 457, 463], "about": [8, 26, 31, 141, 157, 297, 314, 398, 399, 400, 420, 429, 430, 440, 442, 443, 448, 452, 454, 456, 459], "abov": [291, 309, 337, 356, 397, 403, 410, 411, 413, 414, 421, 428, 440, 443, 445, 446, 447, 448, 449, 450, 451, 454, 457, 458, 459, 461], "absenc": 453, "absolut": [44, 154, 351, 440], "abstract": [24, 34, 35, 36, 37, 38, 40, 102, 103, 104, 122, 139, 140, 141, 169, 183, 193, 196, 203, 258, 297, 326, 327, 337, 442, 449, 461], "abstractli": 423, "acceler": [440, 442, 444, 461], "accept": [31, 186, 254, 256, 258, 263, 267, 281, 283, 285, 287, 352, 414, 415, 442, 445, 450, 453, 454, 458, 460], "access": [214, 222, 254, 256, 258, 263, 267, 281, 283, 285, 287, 398, 399, 400, 408, 413, 437, 442, 449, 454, 457], "accord": [44, 181, 421, 446, 449, 450, 455, 463], "accordingli": [198, 448, 451, 453, 457], "account": 447, "accumul": [171, 423, 461], "accur": 448, "acet": [398, 399, 400, 402, 403], "aceton": 420, "achiev": [21, 222, 415, 420, 423, 426, 440, 443, 446, 448, 449, 451, 459], "ack": 440, "acq_funct": 403, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 414, 415, 423], "acqf1": 457, "acqf2": 457, "acqf_valu": 414, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 70, 80, 196, 198, 408, 409, 410, 411, 414, 415, 423, 425, 432, 440, 442, 446, 453, 455, 457, 459], "acquisition_funct": [196, 198, 403, 423, 433, 434, 442], "acquisition_function_cl": [196, 198, 442], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 196, 198, 423, 442, 457], "across": [420, 423, 436, 447, 455, 461], "act": [420, 442, 445, 449, 458], "action": [21, 413, 423, 439, 442, 462], "activ": [15, 34, 159, 188, 198, 414, 415, 423, 440, 441, 442, 443, 449, 450, 451, 452, 455, 461, 462, 463], "activate_paramet": 442, "active_dim": [102, 103, 104, 107, 109, 111, 112, 113], "active_valu": [140, 143, 144, 146, 154, 157, 436, 437, 442, 451, 454, 461], "actual": [186, 216, 243, 429, 442, 452, 456, 458, 461, 463], "ad": [31, 222, 313, 317, 349, 382, 420, 421, 439, 443, 446, 450, 451, 459, 460, 462], "adapt": [187, 279, 338, 356], "add": [31, 237, 247, 349, 350, 403, 417, 418, 420, 425, 436, 440, 445, 447, 448, 449, 452, 456, 461, 463], "add_collection3d": 415, "add_fake_measur": [353, 402, 403, 408, 409, 410, 411, 417, 418, 425, 442, 447, 458, 463], "add_fake_result": 442, "add_measur": [31, 353, 402, 403, 405, 406, 408, 409, 410, 411, 415, 417, 418, 423, 425, 426, 429, 430, 440, 442, 447, 448, 450, 451], "add_noise_to_perturb_degenerate_row": 442, "add_parameter_nois": [353, 442, 463], "add_subplot": 415, "addendum": 445, "addit": [31, 95, 122, 127, 132, 134, 186, 198, 216, 237, 245, 247, 249, 351, 353, 398, 399, 400, 421, 429, 437, 440, 442, 444, 445, 448, 449, 450, 452, 453, 454, 456, 457, 458, 461, 463], "addition": [413, 421, 440, 452], "additiveexplain": [93, 96], "additivekernel": 442, "address": 458, "adher": [442, 443], "adjust": [159, 187, 399, 403, 429, 442, 451, 453], "adopt": 403, "adrian": [440, 444], "advanc": [187, 423, 441, 442, 450, 453, 457, 461, 462], "advantag": [420, 443], "advic": 443, "advis": [445, 458], "affect": [31, 53, 63, 65, 198, 214, 317, 413, 432, 439, 441, 449], "affected_paramet": [53, 408, 409, 410, 411, 420, 449], "affili": [440, 450], "afford": 448, "aforement": [216, 450], "after": [188, 333, 402, 403, 408, 409, 410, 411, 415, 425, 432, 440, 448, 452, 453, 454, 457], "afterward": 457, "again": [414, 447, 448, 449, 461], "against": [89, 313, 331, 420, 445, 451, 461], "agent": 421, "aggreg": 453, "agraw": 444, "agre": [440, 445, 452], "agreement": 445, "ai": [100, 167, 372], "aim": [448, 452], "akin": 447, "al": [399, 440, 454], "aldrich": 444, "alex": 444, "alexand": [440, 444], "algorithm": [191, 198, 349, 380, 382, 397, 420, 425, 440, 442, 447, 452, 455], "alia": [156, 200, 257, 454], "alias": 442, "align": [159, 214, 333, 414, 456, 461], "all": [23, 24, 33, 35, 40, 44, 53, 55, 61, 63, 95, 101, 102, 103, 104, 121, 122, 127, 138, 141, 146, 150, 157, 168, 169, 179, 182, 183, 186, 192, 193, 195, 198, 202, 203, 214, 216, 223, 224, 247, 254, 255, 258, 296, 297, 317, 330, 331, 349, 398, 399, 400, 403, 405, 406, 408, 409, 413, 414, 415, 420, 421, 423, 425, 428, 429, 436, 437, 440, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463], "allclos": [405, 406, 421], "alleg": 445, "allow": [21, 31, 34, 44, 51, 55, 122, 127, 132, 134, 154, 160, 187, 216, 222, 249, 314, 336, 358, 359, 394, 395, 398, 399, 400, 403, 420, 421, 436, 437, 440, 442, 446, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 463], "allow_": [442, 451], "allow_extra": [122, 127, 132, 134, 214, 216, 222, 227, 359, 362, 425, 442], "allow_miss": [122, 127, 132, 134, 214, 216, 222, 227, 359, 362, 442], "allow_recommending_already_measur": [31, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 423, 433, 434, 439, 442, 448], "allow_recommending_already_recommend": [31, 423, 433, 434, 439, 442, 448], "allow_recommending_pending_experi": [31, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 442, 448], "allow_repeated_recommend": [190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 442], "almost": 399, "alon": [442, 445], "along": [376, 445, 454, 461], "alongsid": 445, "alpha": [171, 415, 426], "alphabet": [162, 442], "alreadi": [31, 222, 254, 256, 258, 263, 267, 281, 283, 285, 287, 420, 430, 440, 442, 446, 447, 448, 451, 456, 458, 459, 461, 463], "also": [31, 44, 57, 95, 160, 254, 256, 258, 263, 267, 281, 283, 285, 287, 314, 331, 333, 349, 350, 351, 398, 405, 406, 414, 415, 417, 418, 420, 425, 426, 429, 430, 432, 436, 437, 440, 442, 443, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463], "alter": [420, 442, 448, 451], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 291, 376, 413, 420, 421, 428, 440, 442, 451, 459, 462, 463], "although": [420, 430, 433, 456, 458], "alwai": [15, 31, 40, 232, 233, 417, 420, 421, 440, 446, 448, 449, 458, 459, 461, 463], "ambigu": [154, 321, 322, 456], "amend": 449, "among": [34, 420, 440, 453, 461], "amount": [318, 383, 421, 436, 437, 447, 452, 454, 463], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 70, 71, 72, 74, 75, 76, 80, 86, 89, 90, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 123, 125, 127, 132, 134, 136, 139, 140, 141, 143, 144, 146, 153, 154, 157, 159, 160, 161, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 235, 237, 239, 243, 245, 247, 249, 254, 256, 258, 261, 263, 264, 267, 270, 281, 283, 285, 287, 289, 290, 297, 299, 305, 317, 321, 322, 329, 331, 333, 336, 342, 346, 347, 356, 357, 358, 360, 364, 365, 366, 375, 382, 383, 398, 400, 401, 403, 410, 411, 413, 414, 417, 418, 421, 425, 428, 432, 433, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "analog": [216, 349, 449, 456, 457], "analogi": [181, 455], "analysi": [440, 452, 459], "analyt": [3, 4, 7, 8, 80, 458, 461], "analyz": [440, 443, 452], "angl": 415, "ani": [13, 16, 64, 65, 86, 95, 128, 139, 140, 141, 143, 144, 146, 157, 160, 161, 164, 165, 166, 232, 233, 237, 241, 242, 249, 281, 285, 287, 307, 308, 309, 314, 317, 330, 331, 333, 334, 336, 337, 347, 353, 358, 365, 367, 375, 390, 391, 392, 393, 395, 413, 420, 436, 437, 439, 440, 441, 442, 443, 445, 448, 450, 451, 454, 457, 458, 461], "annot": [333, 413, 445], "anonym": [440, 450], "anoth": [53, 366, 399, 409, 410, 417, 418, 420, 430, 443, 449, 461], "ansatz": 442, "answer": 448, "anti": 357, "anymor": [442, 461], "anyth": 338, "anywai": 459, "anywher": 405, "apach": [440, 445], "apart": [443, 448], "api": [440, 441, 457], "aplei": 452, "appar": 457, "appdata": 441, "appear": [331, 441, 442, 445, 457], "append": [415, 437], "appendix": 445, "appli": [31, 40, 41, 42, 57, 198, 216, 243, 245, 254, 256, 258, 263, 267, 281, 283, 285, 287, 331, 342, 351, 353, 385, 403, 404, 407, 408, 410, 411, 413, 414, 420, 436, 441, 442, 445, 449, 452, 453, 455, 456, 457, 458, 459, 460, 461], "applic": [347, 440, 443, 445, 454, 455, 458], "approach": [222, 414, 423, 440, 443, 446, 448, 451, 453, 455, 457, 459, 461], "appropri": [47, 48, 119, 222, 423, 443, 445, 451, 456], "approxim": [10, 21, 449, 452], "ar": [6, 12, 13, 14, 16, 17, 31, 34, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 69, 78, 82, 83, 84, 95, 122, 127, 128, 132, 134, 140, 143, 144, 146, 154, 157, 159, 160, 161, 166, 180, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 245, 247, 249, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 309, 311, 313, 314, 317, 318, 326, 327, 328, 330, 331, 333, 337, 338, 349, 350, 352, 353, 354, 358, 359, 382, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 418, 420, 421, 423, 425, 428, 429, 432, 433, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463], "arang": [405, 415, 454], "arbitrari": [187, 216, 367, 442, 449, 454, 455, 458, 461, 463], "arbitrarili": [453, 457], "architectur": [254, 256, 258, 263, 267, 281, 283, 285, 287, 294, 442, 459, 461], "ard_num_dim": [102, 103, 104, 107, 109, 111, 112, 113], "area": 415, "arg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 106, 108, 110, 115, 116, 117, 169, 171, 172, 173, 174, 175, 176, 177, 180, 200, 259, 264, 269, 364, 443], "argu": 420, "argument": [71, 90, 95, 100, 157, 160, 167, 183, 185, 186, 187, 188, 214, 222, 259, 261, 333, 353, 357, 403, 418, 425, 442, 449, 452, 454, 455, 456, 457, 458, 461], "aris": [56, 420, 442, 445, 449, 457, 463], "arithmet": [130, 453], "arizona": 444, "arm": [253, 254, 438, 444], "arm_index": 423, "around": [13, 16, 44, 207, 249, 251, 425, 442, 455, 457, 463], "arr": [307, 308, 309, 376, 426], "arrai": [13, 16, 128, 161, 307, 308, 309, 320, 352, 361, 371, 375, 376, 382, 415, 442, 455, 459], "arrays_to_datafram": [405, 406, 415, 426, 429, 430, 436, 437, 442, 458], "arriv": [440, 451], "artifici": 463, "aryl": [398, 399, 400, 402, 440, 454], "ascend": 425, "ask": [420, 440, 442, 443, 448, 451], "aspect": [401, 405, 406, 430, 447, 450], "assembl": [420, 457, 459], "assembli": [459, 462], "assert": [65, 136, 358, 408, 409, 410, 411, 417, 418, 420, 421, 428, 432, 442, 445, 448, 449, 457, 459], "assess": 458, "assign": [349, 414, 421, 428, 454], "associ": [216, 423, 445, 448, 450, 453, 461], "assum": [26, 45, 262, 333, 358, 359, 398, 399, 400, 403, 405, 406, 408, 409, 410, 411, 417, 418, 420, 423, 425, 429, 430, 432, 440, 445, 449, 451, 454, 457, 459, 460, 463], "assumpt": 458, "assur": 449, "asymmetr": 44, "asynchron": [440, 448, 462], "atol": [405, 406], "atompair": 151, "atompairfingerprint": 151, "attach": [26, 333, 413, 414, 415, 445], "attempt": [79, 86, 262, 423, 441, 442, 447, 449, 452, 455], "attent": 188, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 136, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 222, 254, 256, 258, 261, 263, 267, 270, 277, 279, 281, 283, 285, 287, 297, 299, 305, 331, 334, 365, 385, 393, 442], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 89, 92, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 130, 132, 134, 139, 140, 141, 143, 144, 146, 148, 149, 151, 153, 154, 155, 157, 160, 164, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 217, 221, 222, 231, 235, 237, 254, 255, 256, 258, 261, 263, 267, 270, 274, 277, 279, 281, 283, 285, 287, 294, 297, 298, 299, 302, 303, 305, 319, 322, 331, 346, 359, 365, 370, 381, 385, 386, 389, 390, 391, 392, 393, 428, 442, 443, 445, 449, 455, 457, 459, 460], "audit": [440, 442, 443], "augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 216, 289, 290, 291, 442, 448], "author": 445, "authorship": 445, "auto": [12, 13, 14, 16, 17, 442, 444], "auto_tutori": 372, "autocorr": 151, "autocorrfingerprint": 151, "autodoc": 442, "automat": [31, 125, 198, 267, 397, 415, 429, 441, 442, 443, 452, 453, 455, 456, 459, 461, 462], "avail": [2, 81, 130, 146, 148, 149, 151, 157, 186, 187, 245, 247, 274, 302, 303, 314, 381, 382, 383, 400, 402, 405, 406, 420, 425, 429, 430, 440, 441, 442, 443, 445, 447, 448, 450, 452, 454, 455, 456, 457, 458, 461, 462], "available_acq_funct": 403, "avalon": 151, "avalonfingerprint": 151, "averag": [283, 414, 415, 437, 454, 458], "avoid": [216, 334, 376, 442, 443, 447, 448, 454, 456], "awai": [13, 16, 159, 460], "awar": [420, 436, 437, 442, 446, 451, 457], "ax": [95, 397, 399, 414, 415, 426, 436, 437], "axes3d": 415, "axi": [214, 245, 376, 397, 405, 406, 411, 414, 415, 420, 421, 423, 425, 426, 429, 430, 436, 437, 456], "azim": 415, "azur": 442, "b": [44, 56, 177, 279, 317, 328, 356, 357, 399, 409, 418, 423, 433, 434, 439, 440, 443, 445, 448, 451, 454, 457], "b1": 318, "b2": 318, "back": [0, 432, 439, 442, 443, 451], "backend": 314, "background": [95, 99, 442, 452], "background_data": 95, "backport": 441, "backtest": [243, 244, 250, 398, 399, 400, 414, 435, 438, 440, 442, 455, 458], "backtick": 443, "backward": [118, 124, 199, 200, 216, 442], "bad": [425, 448, 450, 460], "bad_interv": 349, "badg": 442, "bai": 440, "baird": 444, "balanc": [127, 423, 440], "banana": 443, "bandit": [254, 403, 438, 440, 442, 444], "banner": 442, "bar": [95, 97, 417, 418, 420, 432, 433, 434, 440, 442, 452, 459], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 130, 132, 134, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 184, 185, 186, 187, 188, 190, 193, 196, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 221, 222, 235, 237, 239, 254, 256, 258, 259, 261, 262, 263, 267, 269, 270, 274, 277, 279, 281, 283, 285, 287, 291, 293, 297, 299, 302, 303, 305, 320, 322, 323, 325, 326, 327, 352, 357, 365, 381, 382, 385, 397, 402, 403, 414, 415, 417, 419, 423, 438, 440, 442, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 459], "base1": 421, "base2": 421, "base_data": 414, "base_kernel": [115, 116, 117], "base_nam": [397, 399, 414, 415, 436, 437], "base_predictor": 289, "base_smil": 414, "basefingerprinttransform": 341, "baselin": [397, 399, 436, 440, 454], "basesequentialmetarecommend": [186, 187], "bashrc": 450, "basi": [111, 440, 445, 452], "basic": [102, 106, 107, 108, 109, 110, 111, 112, 113, 171, 172, 173, 174, 175, 176, 177, 245, 320, 322, 323, 398, 399, 400, 403, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 425, 429, 430, 431, 432, 435, 438, 442, 443, 451, 453, 454, 458, 462], "basic_transfer_learn": 437, "basickernel": [106, 107, 108, 109, 110, 111, 112, 113, 442], "batch": [31, 180, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 248, 289, 290, 403, 408, 409, 410, 411, 415, 425, 429, 430, 432, 436, 437, 442, 447, 451, 455, 458], "batch_quant": 442, "batch_shap": [102, 103, 104, 107, 109, 111, 112, 113], "batch_siz": [31, 44, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 245, 249, 251, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 417, 418, 421, 423, 425, 426, 429, 430, 432, 433, 436, 437, 440, 442, 447, 448, 450, 451, 458], "batchnr": 425, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 130, 132, 134, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 217, 221, 222, 239, 254, 256, 258, 259, 261, 263, 267, 269, 270, 274, 277, 279, 281, 283, 285, 287, 297, 299, 302, 303, 305, 320, 322, 323, 365, 381, 385, 396, 397, 398, 399, 400, 401, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463], "baybe_cach": 450, "baybe_cache_dir": [442, 450], "baybe_deactivate_polar": [442, 450], "baybe_debug_fake_hosthash": 442, "baybe_debug_fake_userhash": 442, "baybe_numpy_use_single_precis": [373, 442, 450], "baybe_telemetry_en": [440, 450], "baybe_telemetry_endpoint": [442, 450], "baybe_telemetry_host": 442, "baybe_telemetry_hostnam": [442, 450], "baybe_telemetry_usernam": [442, 450], "baybe_telemetry_vpn_check": [442, 450], "baybe_telemetry_vpn_check_timeout": [442, 450], "baybe_torch_use_single_precis": [388, 442, 450], "bayesian": [0, 190, 196, 198, 243, 245, 249, 251, 262, 281, 423, 442, 446, 448, 452, 459, 462], "bayesian_recommend": 415, "bayesianlinearmodel": 418, "bayesianlinearsurrog": [403, 459], "bayesianrecommend": [190, 198, 262, 442, 455], "bayesianridg": 417, "bcut2d": [151, 442], "bcut2dfingerprint": 151, "bcw07": 461, "becaus": [44, 84, 154, 159, 216, 222, 251, 337, 413, 414, 420, 437, 443, 446, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 461], "becom": [216, 420, 442, 446, 448, 449, 457, 460, 463], "been": [26, 79, 80, 186, 254, 256, 258, 263, 267, 281, 283, 285, 287, 358, 398, 399, 440, 441, 442, 445, 447, 448, 453, 455, 461], "beeswarm": [95, 97, 452], "befor": [79, 188, 245, 254, 256, 258, 263, 267, 281, 283, 285, 287, 333, 397, 400, 403, 409, 414, 440, 442, 443, 450, 451, 454, 456], "begin": [186, 408, 410, 428, 432, 455, 459], "behalf": 445, "behav": [415, 432, 457], "behavior": [159, 198, 440, 442, 450, 453, 455, 456, 461], "behind": [453, 457, 458, 459, 460], "being": [13, 16, 117, 349, 423, 441, 442, 449, 450, 454, 456], "bell": [303, 307, 425, 460], "belong": [413, 457], "below": [188, 291, 309, 410, 413, 414, 420, 443, 445, 446, 448, 449, 453, 457, 459, 460, 461], "benchmark": [440, 442, 444], "benefici": [445, 446, 450], "benefit": [449, 461], "benzo": 461, "bernoulli": [254, 422, 438, 444], "besid": [440, 453, 460], "best": [12, 13, 14, 16, 17, 245, 247, 249, 400, 423, 440, 450, 455], "bet": 448, "beta": [8, 22, 171, 254, 403, 442, 446], "betabernoullimultiarmedbanditsurrog": [403, 423, 442], "betaprior": [254, 442], "better": [10, 349, 399, 442, 448, 449, 451, 453, 454], "between": [13, 16, 34, 53, 154, 187, 214, 222, 277, 357, 413, 415, 420, 423, 425, 426, 430, 436, 437, 440, 442, 443, 447, 448, 449, 450, 453, 454, 455, 456, 457, 460, 461], "beyond": [159, 440, 452], "bias": 454, "bin": 420, "binar": 442, "binari": [299, 395, 432, 440, 441, 442, 457], "binarytarget": [300, 423, 442], "bind": [413, 415, 445], "bit": [442, 454], "black": [243, 458, 461], "blackbox": [396, 397, 438], "blank": 443, "blob": 279, "block": [414, 420, 440, 441, 442, 450, 457], "blue": 426, "bodi": 413, "bonilla": 461, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 95, 98, 99, 122, 127, 128, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 161, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 227, 254, 256, 258, 263, 267, 281, 283, 285, 287, 299, 300, 307, 308, 309, 312, 326, 327, 331, 332, 337, 338, 347, 352, 357, 359, 362, 365, 375, 394, 423], "boolean": [13, 16, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 99, 139, 140, 141, 143, 144, 146, 153, 154, 157, 161, 183, 185, 186, 187, 188, 359, 448, 450], "boost": [285, 437], "both": [10, 13, 16, 159, 160, 216, 222, 251, 309, 333, 397, 409, 414, 417, 420, 421, 423, 425, 426, 436, 437, 440, 442, 443, 446, 449, 452, 454, 456, 457, 459, 460, 463], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 190, 198, 200, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 405, 406, 415, 430, 436, 437, 442, 450, 455], "botorch_acqf": [26, 414, 415], "botorch_function_wrapp": 442, "botorchrecommend": [190, 200, 403, 408, 409, 410, 411, 414, 415, 417, 418, 423, 425, 430, 432, 433, 434, 440, 442, 447, 448, 449, 451, 455], "bottom": 448, "bound": [8, 22, 34, 44, 153, 159, 160, 177, 214, 216, 222, 227, 290, 305, 306, 327, 333, 359, 365, 366, 397, 403, 405, 406, 415, 421, 425, 426, 428, 429, 430, 436, 437, 442, 454, 457, 460, 462, 463], "boundari": [44, 222, 307, 308, 425], "boundary_onli": [222, 420], "bounded": 442, "bounds_transform_func": 442, "box": [177, 243, 458, 461], "brain": [458, 461], "branch": [440, 443], "break": [262, 457], "brettpho": [398, 399, 400, 402, 403], "briefli": [458, 461], "bring": [440, 442], "bro": 279, "broad": 457, "broadcast": 161, "brute": [198, 455], "bu": [398, 399, 400, 402, 403], "bucket": 420, "budget": 448, "bug": [442, 443], "build": [214, 222, 262, 414, 420, 441, 442, 443, 449, 452, 457, 459, 461, 462, 463], "built": [222, 417, 440, 443, 448, 455, 459], "builtin": 323, "bump": 442, "button": 442, "butyl": [398, 399, 400, 402, 403], "butylphenylphosphin": [398, 399, 400, 402, 403], "butyornitril": [398, 399, 400, 402, 403], "bypass": [160, 414, 459], "byte": [13, 16, 128, 161, 221, 263, 307, 308, 309, 369, 375, 442, 463], "c": [56, 317, 328, 398, 399, 400, 402, 403, 408, 409, 410, 411, 418, 420, 433, 434, 440, 441, 445, 448, 451, 454, 456, 457], "c1": [398, 399, 400, 402, 403, 408, 409, 410, 411, 454], "c1c2": [398, 399, 400, 402, 403], "c1ccccc1": [398, 399, 400, 408, 410], "c1ccoc1": 449, "c2": [398, 399, 400, 402, 403, 408, 410, 411], "c2ccccc2": [398, 399, 400], "c2oc": [398, 399, 400, 402, 403], "c2p": [398, 399, 400, 402, 403], "c3": [398, 399, 400, 402, 403, 408, 410], "c3c": [398, 399, 400], "c3ccccc3": [398, 399, 400, 402, 403], "c4": [398, 399, 400, 408, 410], "c4ccccc4": [398, 399, 400, 402, 403], "c5": [408, 410], "c6": [408, 410], "c_": 426, "c_g2_min": 421, "c_g3_max": 421, "c_i": 449, "c_total_sum": 421, "cach": [313, 442, 457, 462], "cached_recommend": 313, "calcul": [31, 313, 376, 405, 415, 436, 448, 450, 454, 456], "calibr": 461, "call": [45, 90, 183, 185, 186, 187, 188, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 313, 314, 333, 352, 398, 399, 400, 413, 418, 420, 421, 433, 434, 440, 441, 442, 446, 448, 449, 450, 454, 457, 458, 459, 461, 462], "callabl": [52, 71, 89, 160, 235, 243, 245, 247, 249, 251, 289, 290, 293, 294, 323, 329, 331, 333, 352, 397, 413, 426, 442, 462], "callable_": 331, "campaign": [95, 245, 248, 249, 251, 349, 351, 353, 401, 402, 410, 412, 415, 423, 434, 436, 437, 438, 439, 440, 442, 446, 447, 449, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 463], "campaign1": 458, "campaign2": 458, "campaign_json": 448, "campaign_oh": 399, "campaign_par": 426, "campaign_rand": [398, 399, 400], "campaign_recr": 432, "campaign_stop": 414, "campaign_with_hook": 414, "campaign_y0": 426, "campaign_y1": 426, "campaignstoppedexcept": 414, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 56, 95, 140, 146, 154, 157, 161, 180, 187, 190, 191, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 243, 247, 254, 256, 258, 259, 261, 262, 263, 267, 281, 283, 285, 287, 291, 300, 312, 314, 331, 333, 337, 349, 351, 352, 372, 397, 398, 399, 400, 403, 404, 407, 408, 409, 410, 413, 414, 415, 417, 418, 420, 421, 423, 425, 426, 428, 429, 430, 433, 436, 437, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463], "canada": 444, "candid": [12, 13, 14, 16, 17, 31, 208, 210, 214, 222, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 414, 437, 442, 446, 455, 456, 462], "candidates_comp_rep": 414, "cannot": [15, 88, 89, 159, 262, 263, 291, 338, 423, 442, 445, 447, 449, 450, 454, 455, 457, 459, 461], "canon": [340, 457], "capabl": [396, 422, 424, 431, 435, 437, 442, 444, 448, 453, 459, 461], "captur": 454, "cardin": [34, 44, 51, 61, 63, 64, 65, 78, 198, 214, 440, 442, 444, 449], "cardinalityconstraint": [44, 51, 442], "care": [49, 420, 443, 449, 452, 453, 459], "carefulli": 450, "carlo": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 80, 249, 397, 399, 400, 414, 423, 436, 437, 442, 447, 458], "carri": [333, 413, 445, 453], "cartesian": [216, 222, 223, 224, 440, 442, 451, 456], "case": [159, 187, 251, 291, 333, 349, 360, 414, 419, 420, 429, 430, 433, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 454, 457, 458, 459, 460, 461, 463], "cast": [45, 442], "cat": 357, "cat_1": 425, "cat_1_22": 425, "cat_1_33": 425, "cat_2": 425, "catch_constant_target": 442, "categor": [31, 143, 144, 148, 222, 229, 358, 440, 442, 454, 456, 460], "categori": [399, 414, 440, 442, 457, 460], "categorical_1": [425, 448], "categorical_2": [425, 448], "categorical_paramet": 457, "categorical_parameter_json": 457, "categorical_parameter_reconstruct": 457, "categoricalencod": [143, 144, 408, 409, 410, 411, 425, 432], "categoricalparamet": [144, 222, 399, 408, 409, 410, 411, 418, 423, 425, 432, 433, 434, 440, 442, 451, 452, 456, 457, 462], "cattr": [234, 235, 237, 434, 441, 442, 443], "cauchi": 173, "caus": [154, 317, 323, 442, 445], "caution": 461, "cc": [398, 399, 400, 402, 403, 408, 410, 411, 420, 454, 461], "cc1": [398, 399, 400, 402, 403, 454], "ccc": [408, 410, 418, 440], "cccc": [398, 399, 400, 402, 403, 408, 410], "ccccc": [408, 410, 433, 434], "cccccc": [408, 410], "cccccccco": [449, 454], "ccccoc": [398, 399, 400, 402, 403], "cco": 420, "ccoccoccn": [433, 434], "cdot": [449, 453], "ceil": 414, "cell": [417, 454, 458, 461], "cell_lin": 461, "center": [307, 309, 365, 425, 426, 448], "center_y0": 426, "center_y1": 426, "central": [442, 448], "certain": [31, 53, 89, 188, 235, 237, 243, 314, 330, 349, 409, 414, 423, 440, 443, 449, 451, 452, 455, 457, 461, 463], "cesium": [398, 399, 400, 402, 403], "chai": 461, "chain": [38, 183, 185, 186, 187, 188, 323, 449], "challeng": [443, 457], "chanc": 441, "chang": [53, 186, 349, 350, 351, 403, 420, 429, 440, 441, 443, 445, 448, 450, 452, 454, 456, 461], "charact": 445, "characterist": 323, "charg": 445, "chebyshev": 12, "check": [31, 61, 139, 140, 141, 143, 144, 146, 153, 154, 157, 161, 313, 330, 332, 335, 336, 337, 338, 358, 365, 374, 429, 430, 432, 440, 442, 443, 450, 452, 456, 457], "check_maximum": 61, "check_minimum": 61, "checker": 442, "checkout": 443, "chem": [440, 442, 454], "chemic": [342, 399, 402, 420, 442, 444, 449, 452, 454, 461], "cheminformat": [157, 440, 442], "chemistri": [146, 408, 410, 411], "child": [205, 206, 207, 208, 443], "chocol": 443, "choic": [245, 247, 382, 413, 420, 423, 430, 442, 449, 451, 453, 454, 455, 456, 457, 460], "choos": [181, 420, 421, 423, 425, 428, 429, 430, 439, 440, 445, 446, 448, 455, 459, 460], "chose": [429, 457], "chosen": [76, 190, 245, 247, 251, 378, 379, 403, 423, 442, 446, 449, 454, 456], "christoph": 461, "ci": [406, 436, 437, 442, 443], "circular": 454, "circumv": [441, 457], "cl": [49, 125, 232, 236, 291, 326, 327, 332, 337, 367], "claim": 445, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 88, 92, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 126, 127, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 235, 237, 238, 239, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 319, 320, 322, 323, 325, 326, 327, 332, 337, 341, 347, 363, 365, 380, 381, 384, 385, 403, 413, 414, 417, 423, 433, 442, 448, 449, 452, 453, 454, 455, 456, 457, 459], "classic": [423, 453], "classifi": 454, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 214, 216, 222, 239, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 323, 365, 442], "classvalidationerror": [434, 441], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 254, 256, 258, 263, 267, 281, 283, 285, 287], "clean": [354, 355, 356, 441, 442, 443], "clear": [372, 461], "click": [423, 454], "clone": 443, "close": [245, 251, 302, 397, 414, 436, 437, 458], "closer": [13, 16, 374, 454], "closest": 375, "closest_el": 442, "closur": [243, 458], "cluster": [205, 206, 207, 208, 403, 442, 444, 462], "clustering_x": 442, "cmap": 415, "cn": [398, 399, 400, 402, 403], "co": 420, "co1": [398, 399, 400], "co2": [398, 399, 400], "co3": [398, 399, 400], "coars": [418, 432, 433, 434, 440], "coc": [418, 433, 434, 440], "cococ": [433, 434], "code": [262, 399, 418, 423, 429, 433, 434, 440, 441, 442, 445, 449, 450, 454, 458, 461, 463], "coeffici": [45, 47, 48, 405, 406, 421, 449], "coerc": 442, "collect": [31, 63, 64, 65, 105, 115, 116, 136, 160, 162, 170, 186, 188, 214, 222, 228, 229, 240, 247, 261, 315, 317, 319, 330, 331, 359, 380, 382, 397, 403, 415, 420, 423, 426, 436, 437, 440, 442, 448, 450], "color": [415, 426], "column": [40, 41, 42, 95, 122, 127, 128, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 160, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 245, 247, 249, 251, 317, 318, 350, 352, 354, 355, 356, 357, 358, 359, 360, 362, 385, 394, 395, 399, 402, 408, 409, 410, 411, 414, 420, 425, 426, 432, 436, 437, 442, 448, 456, 457, 458], "column_group": 318, "com": [279, 334, 356, 440, 442], "comb": 420, "combin": [44, 54, 160, 198, 214, 216, 222, 223, 224, 323, 342, 398, 399, 400, 408, 410, 413, 414, 420, 425, 440, 441, 445, 449, 451, 452, 453, 454, 455, 456, 458, 461, 463], "combinatori": [198, 463], "combine_func": 119, "come": [13, 16, 423, 440, 448, 449, 452, 457, 461, 463], "command": 441, "comment": 442, "commerci": 445, "commit": [440, 442, 443], "common": [170, 417, 421, 442, 443, 445, 448, 449, 454, 457], "commonli": 453, "commun": [445, 453, 461], "comp_df": [140, 143, 144, 146, 154, 157, 442], "comp_rep": [222, 415, 417, 442, 456], "comp_rep_bound": [214, 216, 222, 442], "comp_rep_byt": [221, 463], "comp_rep_column": [139, 140, 141, 143, 144, 146, 153, 154, 157, 214, 216, 222, 442], "comp_rep_human_read": [221, 463], "comp_rep_shap": [221, 463], "comp_rep_tensor": [414, 415], "compar": [160, 186, 397, 420, 421, 423, 426, 436, 440, 442, 443, 449, 451, 454, 460], "comparison": [414, 426, 436, 437, 455, 457], "compat": [118, 124, 136, 160, 190, 193, 196, 198, 199, 200, 203, 205, 206, 207, 208, 210, 211, 216, 217, 247, 254, 256, 258, 263, 267, 281, 283, 285, 287, 333, 359, 393, 403, 408, 409, 410, 411, 413, 415, 425, 432, 442, 455, 459], "compens": 442, "compil": [441, 445], "complain": 443, "complaint": 443, "complement": [31, 357, 451], "complementari": 44, "complet": [415, 420, 447, 449, 451, 453, 457], "complex": [13, 16, 128, 161, 307, 308, 309, 375, 420, 432, 436, 437, 443, 446, 447, 449, 451, 458, 461], "compli": 445, "complianc": 440, "complic": [420, 461], "compon": [69, 420, 421, 443, 446, 448, 449, 450, 451, 457, 459, 461], "compos": [114, 261, 442, 457], "composit": [103, 115, 116, 117, 261, 462], "composite_a": 459, "composite_b": 459, "compositekernel": [115, 116, 117, 442], "compositesurrog": [254, 256, 258, 263, 267, 281, 283, 285, 287, 442, 459], "compound": 342, "comprehens": [440, 459], "compress": 457, "comput": [13, 16, 26, 31, 85, 95, 99, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 214, 216, 221, 222, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 291, 297, 299, 305, 343, 376, 408, 409, 410, 411, 413, 420, 421, 425, 426, 432, 442, 445, 446, 448, 450, 454, 456, 457, 458, 462, 463], "computation": 198, "compute_ref_point": [13, 16], "concat": [405, 406, 414, 415, 425, 426, 429, 430, 436, 437], "concentr": [171, 172, 398, 399, 400, 402, 403, 408, 413, 414, 449], "concentrati": 408, "concentration_valu": 414, "concept": [317, 420, 453, 454, 457], "concis": 442, "concret": [442, 457], "conda": 442, "condit": [34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 349, 357, 399, 405, 409, 410, 411, 420, 426, 440, 442, 445, 461, 462], "conduct": [31, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 249, 254, 256, 258, 263, 267, 281, 283, 285, 287, 398, 399, 400, 440, 443, 448, 461], "confid": [8, 22, 403], "config": [417, 418, 431, 438, 442, 462], "config_json": 31, "configur": [13, 16, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 83, 84, 180, 187, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 243, 245, 251, 254, 256, 258, 259, 261, 263, 267, 273, 281, 283, 285, 287, 349, 382, 401, 402, 420, 427, 430, 434, 440, 441, 442, 445, 446, 447, 448, 449, 450, 454, 455, 456, 458, 460, 461, 462, 463], "confirm": 415, "conflict": [440, 443, 453], "conform": [157, 343, 454], "confront": [423, 440, 451], "conjunct": 459, "connect": [57, 349, 442, 450, 454, 460], "consequ": [400, 441, 449, 450, 455, 456, 458, 459], "consequenti": 445, "consid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 127, 140, 143, 144, 146, 154, 157, 159, 161, 186, 198, 216, 249, 349, 358, 359, 397, 420, 423, 425, 436, 437, 440, 442, 443, 447, 449, 451, 452, 453, 454, 457, 463], "consider": [216, 447], "consist": [181, 221, 415, 443, 445, 452], "consol": 441, "consolid": [442, 455], "consortium": 444, "conspicu": 445, "constant": [283, 291, 308, 425, 442, 443, 454, 456], "constitut": 445, "constrain": [442, 449, 460, 461], "constraint": [31, 34, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 141, 198, 214, 216, 222, 320, 417, 418, 425, 432, 433, 434, 438, 440, 442, 444, 450, 454, 462], "constraint_1": 410, "constraint_2": 410, "constraint_3": 410, "constraints_augment": 216, "constraints_cardin": 214, "constraints_lin_eq": 214, "constraints_lin_ineq": 214, "constraints_nonlin": 214, "constru": 445, "construct": [31, 214, 216, 222, 263, 293, 397, 426, 428, 436, 437, 440, 442, 446, 449, 452, 457, 459, 462], "constructor": [205, 206, 207, 208, 216, 236, 281, 285, 287, 420, 428, 433, 434, 442, 446, 448, 451, 453, 454, 459, 462, 463], "consult": 440, "consum": [186, 413], "consumpt": 450, "cont_ind": 430, "cont_indic": [429, 430], "cont_paramet": 430, "cont_recommend": [190, 430], "contact": [440, 444], "contain": [13, 16, 31, 34, 40, 41, 42, 44, 65, 68, 73, 95, 122, 127, 128, 132, 134, 136, 140, 143, 144, 146, 154, 157, 159, 160, 161, 165, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 223, 224, 228, 243, 245, 247, 249, 254, 256, 258, 263, 267, 281, 283, 285, 287, 297, 299, 305, 307, 308, 309, 317, 318, 333, 343, 347, 349, 351, 357, 358, 365, 376, 382, 394, 395, 399, 400, 414, 415, 421, 423, 430, 436, 437, 441, 442, 443, 445, 448, 449, 451, 452, 455, 456, 457, 458, 463], "content": [160, 186, 216, 247, 350, 383, 442, 445, 457], "context": [81, 159, 183, 185, 186, 187, 188, 243, 259, 261, 379, 413, 423, 428, 436, 437, 442, 448, 451, 452, 454, 457, 458, 459, 461, 463], "contextu": 461, "continu": [10, 15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 73, 139, 140, 141, 143, 144, 146, 153, 154, 157, 159, 190, 198, 214, 216, 217, 222, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 403, 405, 408, 409, 410, 411, 421, 425, 426, 427, 430, 432, 438, 440, 442, 448, 450, 451, 455, 457, 458, 462], "continuous_subspac": 456, "continuouscardinalityconstraint": [63, 64, 214, 442, 462], "continuousconstraint": [37, 45, 214, 442, 449, 451], "continuouslinearconstraint": [214, 405, 406, 421, 442, 462], "continuouslinearequalityconstraint": 442, "continuouslinearinequalityconstraint": 442, "continuousnonlinearconstraint": [44, 214, 442], "continuousparamet": [153, 214, 442], "contour": 426, "contract": 445, "contrast": [222, 337, 421, 423, 447, 451, 453], "contribut": [440, 442, 445, 463], "contributor": [440, 445], "contributori": 445, "control": [13, 15, 16, 21, 160, 171, 198, 214, 222, 359, 425, 429, 440, 442, 445, 446, 449, 450, 453, 454, 455, 460, 462], "convei": 457, "conveni": [442, 456, 457, 459], "convent": 216, "converg": 452, "convers": [31, 187, 417, 428, 442, 445, 452, 459, 462], "convert": [28, 123, 218, 231, 324, 334, 338, 342, 345, 346, 360, 361, 366, 369, 372, 418, 433, 434, 442, 448, 450, 457, 458], "convert_sklearn": 417, "convert_sklearn_bayesian_ridg": 417, "convertibletofloat": [13, 16, 324], "cooki": 443, "coordin": [13, 16, 382], "copi": [159, 254, 256, 258, 263, 267, 281, 283, 285, 287, 414, 440, 442, 445, 463], "copyright": [440, 445], "core": [31, 214, 216, 217, 222, 249, 251, 254, 256, 258, 259, 261, 263, 267, 274, 281, 283, 285, 287, 403, 440, 442, 451, 460], "coregion": 461, "coretest": [442, 443], "corpu": 454, "correct": [31, 294, 415, 440, 442, 443, 457], "correctli": [420, 430, 442], "correl": [146, 157, 356, 454, 461], "correspond": [26, 31, 44, 122, 127, 132, 134, 159, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 235, 243, 245, 247, 254, 256, 257, 258, 263, 267, 281, 283, 285, 287, 307, 313, 333, 336, 338, 341, 342, 349, 352, 353, 359, 360, 362, 394, 395, 397, 402, 403, 420, 423, 426, 430, 436, 437, 440, 442, 443, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "correspondingli": 31, "corrupt": 351, "cost": [399, 423], "costli": [216, 219, 225, 448], "could": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 154, 345, 403, 413, 414, 420, 421, 437, 442, 447, 449, 454, 458, 460, 461], "count": [314, 414, 420, 449], "counterclaim": 445, "counterpart": [333, 456], "coupl": 415, "cours": [436, 437, 443, 457, 461], "cousin": 449, "cov": [442, 443], "cover": [337, 349, 449, 451], "coverag": [442, 443], "cp": [398, 399, 400], "craft": 458, "crash": [441, 442], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 95, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 160, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 214, 216, 222, 223, 224, 239, 247, 254, 256, 258, 259, 261, 263, 267, 270, 275, 281, 283, 285, 287, 297, 299, 305, 347, 349, 352, 353, 365, 382, 402, 413, 414, 415, 420, 421, 426, 430, 431, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 454, 457, 458, 459, 460, 462, 463], "create_example_plot": [397, 399, 414, 415, 436, 437, 442], "create_from_config": [417, 418], "create_pi_plot": 415, "creation": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 160, 219, 222, 225, 409, 411, 417, 418, 456, 457, 462], "criteria": 415, "criterion": [414, 446], "critic": 442, "cross": [436, 445], "crucial": [440, 460], "cube": 449, "cuda": 441, "cultur": [454, 461], "curran": 461, "current": [10, 31, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 249, 251, 262, 312, 372, 414, 415, 420, 446, 448, 449, 450, 451, 454, 458, 460, 461, 463], "curv": [307, 415, 425, 449, 460], "custom": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 139, 140, 141, 143, 144, 146, 149, 153, 154, 157, 160, 263, 294, 297, 299, 305, 333, 360, 396, 403, 407, 414, 423, 430, 438, 440, 442, 449, 454, 455, 458, 461, 462, 463], "custom_blackbox": 397, "custom_conversion_funct": 417, "custom_filt": 449, "custom_funct": 408, "customari": 445, "customconstraint": 408, "customdiscreteparamet": [442, 452, 462], "customdisreteparamet": 442, "customencod": 146, "customonnxsurrog": [403, 417, 442], "cycl": [186, 440, 442, 451], "cyclic": 186, "d": [13, 16, 26, 56, 128, 317, 328, 376, 382, 415, 418, 433, 434, 436, 437, 440, 445, 456, 461], "d401": 408, "damag": 445, "daniel": 444, "darmstadt": [440, 444, 450], "dashboard": 442, "data": [13, 15, 16, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 72, 87, 95, 99, 127, 132, 134, 146, 154, 157, 180, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 245, 249, 251, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 299, 305, 314, 316, 320, 349, 351, 358, 371, 372, 383, 387, 394, 395, 396, 397, 402, 403, 405, 406, 408, 409, 410, 411, 414, 418, 420, 425, 426, 429, 432, 433, 434, 436, 437, 438, 439, 440, 442, 446, 447, 448, 449, 450, 452, 454, 455, 457, 458, 459, 462, 463], "data_typ": 417, "databas": [31, 425, 440, 457], "dataclass": [413, 423], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 87, 95, 99, 122, 127, 132, 134, 140, 143, 144, 146, 154, 157, 160, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 222, 223, 224, 227, 241, 242, 245, 247, 249, 251, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 299, 305, 313, 317, 318, 342, 343, 383, 394, 395, 397, 398, 402, 403, 408, 409, 410, 411, 414, 415, 417, 418, 420, 421, 425, 426, 429, 432, 436, 437, 442, 447, 448, 449, 451, 454, 462, 463], "datapoint": 442, "dataset": [186, 243, 458], "datatyp": 442, "date": 445, "dditiv": 452, "de": [234, 431, 440, 441, 442, 443, 448, 449, 455, 462], "deactiv": [440, 442, 450], "deal": [400, 447, 454, 458], "debug": 442, "decid": [154, 420, 423, 430, 446], "declar": [53, 57, 65, 208, 409, 443, 449], "decod": 417, "decor": [117, 291, 323, 352, 413, 442, 443, 458], "decorrel": [146, 157, 164, 433, 434, 454], "decreas": [186, 308, 425, 457, 461], "deduc": [405, 406, 429], "dedupl": 442, "deep": 414, "deepcopi": 442, "deeper": 452, "deepli": 459, "def": [397, 408, 413, 414, 415, 420, 423, 426, 436, 443, 449, 458], "default": [13, 16, 42, 95, 127, 146, 157, 160, 190, 196, 198, 205, 206, 207, 208, 214, 216, 222, 234, 254, 274, 277, 357, 397, 398, 400, 403, 418, 425, 430, 440, 442, 443, 448, 449, 450, 452, 453, 454, 462], "default_campaign": 397, "default_model": 263, "defaultkernelfactori": [403, 408, 409, 410, 411, 425, 432], "defaultscal": 442, "defend": 445, "defin": [26, 31, 41, 44, 45, 52, 149, 159, 180, 186, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 222, 243, 267, 269, 270, 294, 351, 356, 357, 385, 398, 399, 400, 402, 408, 409, 410, 411, 417, 418, 423, 428, 442, 443, 445, 448, 449, 451, 454, 457, 458, 460], "definit": [214, 222, 337, 421, 426, 440, 442, 445, 453, 456], "degener": [350, 365, 442], "degr": 432, "degre": 457, "degree_c": [417, 418, 432], "deliber": 445, "delici": 443, "deliveri": 454, "demand": [31, 437], "demo": 442, "demonstr": [396, 397, 398, 401, 404, 407, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 427, 431, 432, 435, 436, 437, 442, 453, 456, 457, 461], "denot": 26, "densiti": 415, "depend": [53, 57, 86, 119, 216, 222, 243, 308, 317, 399, 403, 407, 420, 421, 428, 438, 439, 441, 442, 443, 449, 450, 451, 452, 456, 458, 459, 460, 461, 463], "dependenciesconstraint": 442, "deprec": [67, 151, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 222, 227, 264, 323, 408, 410, 411], "deprecationwarn": [408, 410, 411, 414], "depth": 456, "deriv": [205, 206, 207, 208, 222, 337, 445, 449, 456], "descend": 308, "describ": [205, 206, 207, 208, 254, 256, 258, 263, 267, 281, 283, 285, 287, 403, 408, 413, 414, 421, 423, 425, 426, 443, 445, 447, 448, 449, 453, 454, 457, 458], "descript": 443, "descriptor": [157, 343, 442, 452, 454, 461], "deseri": [232, 236, 241, 432, 441, 442, 448, 462], "deserialize_datafram": 457, "design": [0, 21, 26, 245, 352, 413, 417, 420, 423, 445, 446, 449, 451, 452, 453, 455, 457], "desir": [119, 127, 130, 353, 424, 425, 438, 440, 442, 446, 450, 452, 453, 455, 457, 460, 463], "desirabilityobject": [31, 425, 440, 442, 448, 457, 459, 462], "desktop": 442, "despit": 442, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 167, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 222, 245, 249, 254, 256, 258, 259, 261, 263, 267, 270, 277, 279, 281, 283, 285, 287, 297, 299, 305, 310, 311, 357, 362, 365, 385, 398, 400, 405, 406, 425, 430, 439, 440, 441, 442, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 461], "detect": [320, 358, 441, 443], "determin": [13, 16, 31, 44, 95, 125, 188, 222, 337, 357, 369, 374, 382, 398, 420, 423, 442, 445, 450, 455], "determinist": 382, "detriment": 454, "dev": [440, 442, 443], "develop": [440, 442, 447, 454, 458], "deviat": [6, 18, 291, 358, 417, 442, 448], "df": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 122, 127, 132, 134, 160, 214, 216, 222, 227, 242, 247, 317, 318, 342, 350, 354, 355, 356, 357, 359, 360, 362, 383, 397, 408, 423, 440, 449, 456, 457, 458], "df_y": 426, "dfa": [317, 318], "di": [398, 399, 400, 402, 403, 444], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 125, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 205, 206, 207, 208, 214, 216, 219, 222, 225, 235, 236, 237, 239, 249, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 311, 328, 331, 343, 349, 365, 385, 414, 417, 436, 437, 442], "dict_bas": [398, 399, 400, 402, 403], "dict_ligand": [398, 399, 400, 402, 403], "dict_solv": [398, 399, 400, 402, 403, 408, 409, 410, 411, 420, 449], "dictat": [122, 127, 132, 134, 198, 216, 436, 437], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 214, 216, 222, 235, 237, 239, 249, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 291, 297, 299, 305, 328, 331, 349, 365, 398, 399, 400, 402, 454, 458], "diff": 443, "differ": [13, 16, 55, 127, 198, 214, 216, 217, 222, 243, 251, 313, 318, 349, 351, 385, 399, 408, 413, 420, 423, 425, 426, 429, 430, 436, 437, 440, 442, 443, 445, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461], "differenti": [458, 461], "difficult": 461, "digit": 360, "dilemma": 423, "dim": [26, 405, 406, 415, 417, 429, 430, 436, 437], "dimens": [26, 382, 397, 405, 406, 415, 417, 428, 429, 436, 437, 442, 454, 456, 459, 461], "dimension": [13, 16, 128, 139, 140, 141, 143, 144, 146, 153, 154, 157, 277, 352, 382, 397, 436, 437, 442], "dimethylisoxazol": 461, "direct": [13, 16, 398, 399, 400, 402, 440, 442, 445, 451, 454, 463], "directli": [13, 16, 337, 437, 440, 442, 449, 453, 457, 459], "directori": [430, 442], "disabl": [254, 256, 258, 263, 267, 281, 283, 285, 287, 312, 408, 410, 411, 442, 448, 451], "disadvantag": 457, "disappear": 442, "disc_ind": 430, "disc_indic": [429, 430], "disc_paramet": 430, "disc_recommend": [190, 430], "discard": [8, 420], "disclaim": 445, "discourag": 448, "discret": [15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 73, 139, 140, 141, 143, 144, 146, 153, 154, 157, 190, 198, 205, 206, 207, 208, 210, 214, 216, 217, 221, 222, 251, 381, 402, 405, 411, 414, 415, 417, 425, 427, 430, 432, 437, 438, 440, 442, 446, 451, 452, 455, 457, 458, 462, 463], "discrete_param": [415, 436, 437], "discrete_spac": [405, 406, 430], "discrete_subspac": 456, "discretecardinalityconstraint": [442, 462], "discreteconstraint": [31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 222, 442, 449, 451], "discretecust": 408, "discretecustomconstraint": [408, 442, 462], "discretedep": 409, "discretedependenciesconstraint": [57, 65, 409, 420, 462], "discreteexcl": 410, "discreteexcludeconstraint": [410, 442, 451, 462], "discretelinkedparametersconstraint": [442, 462], "discretenolabelduplicatesconstraint": [57, 420, 442, 462], "discreteparamet": [154, 222, 223, 224, 442], "discretepermutationinvarianceconstraint": [420, 462], "discreteprod": 411, "discreteproductconstraint": [411, 442, 462], "discretesamplingmethod": [15, 198, 383, 442, 446], "discretesumc": 411, "discretesumconstraint": [405, 411, 420, 442, 462], "discuss": [425, 445, 449, 456, 458], "disjoint": 222, "disk": [442, 462], "dispatch": 118, "displai": [360, 414, 445], "distanc": [154, 382], "distinct": [413, 448, 455], "distinguish": [350, 420, 442, 449, 454, 461], "distribut": [31, 167, 170, 254, 256, 258, 263, 267, 281, 283, 285, 287, 420, 425, 430, 440, 442, 445, 446, 447, 459], "distutil": 338, "div": 417, "divers": 459, "divid": 421, "divis": 376, "dll": 441, "dmac": [398, 399, 400, 402, 403], "dmf": 449, "do": [63, 216, 222, 262, 413, 417, 418, 420, 423, 430, 432, 433, 434, 436, 439, 440, 441, 445, 447, 449, 450, 451, 452, 454, 455, 457, 461, 462, 463], "do_baybe_work": 450, "doc": [100, 167, 323, 440, 442], "doc101": 443, "doc103": 443, "docstr": 442, "doctest": 442, "document": [31, 372, 417, 440, 442, 443, 444, 445, 448, 452, 458], "doe": [30, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 95, 159, 198, 243, 245, 247, 249, 254, 256, 258, 262, 263, 267, 281, 283, 285, 287, 294, 333, 342, 358, 372, 400, 403, 414, 417, 418, 420, 433, 434, 436, 437, 442, 443, 445, 449, 453, 455, 458, 459, 461, 463], "doi": [279, 356], "domain": [254, 256, 258, 263, 267, 281, 283, 285, 287, 397, 440, 442, 456, 458], "don": [439, 451], "done": [31, 357, 358, 400, 402, 408, 409, 410, 411, 417, 418, 425, 432, 442, 446, 448, 449, 450, 451], "doubl": [372, 443, 450], "down": [457, 463], "downsid": 187, "draft": 442, "dramat": 461, "drastic": 454, "draw": [10, 112, 214, 421, 423, 428], "draw_arm": 423, "drawback": 453, "drawn": [21, 198], "drive": [415, 461], "driven": [349, 446], "driver": 441, "drop": [354, 355, 356, 414, 442, 449], "dry_run": 31, "dtype": [13, 16, 128, 161, 307, 308, 309, 375], "due": [159, 314, 437, 440, 442, 446, 449, 450, 454, 455, 456, 457, 460], "duplic": [57, 166, 320, 328, 442, 449], "dure": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 216, 222, 243, 331, 382, 420, 423, 436, 437, 440, 441, 442, 443, 444, 448, 449, 450, 451, 452, 456, 457, 458, 459], "dynam": [423, 442, 457, 462], "d\u00fcbendorf": 444, "e": [8, 21, 26, 31, 34, 44, 53, 55, 56, 73, 95, 98, 146, 160, 161, 188, 216, 222, 243, 314, 320, 326, 327, 343, 349, 357, 358, 365, 390, 398, 399, 400, 418, 420, 421, 423, 440, 441, 442, 443, 446, 447, 449, 450, 452, 454, 455, 456, 457, 458, 461, 463], "e3fp": 151, "e3fpfingerprint": 151, "each": [13, 16, 21, 31, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 127, 132, 134, 160, 180, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 216, 245, 247, 249, 251, 254, 256, 258, 262, 263, 267, 281, 283, 285, 287, 318, 343, 349, 350, 358, 397, 399, 400, 403, 415, 420, 421, 423, 425, 426, 430, 436, 437, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463], "eagerli": 442, "earli": [414, 442], "earlier": [31, 439, 441], "earn": 423, "earned_reward": 423, "easi": [342, 443, 457], "easier": [443, 463], "easiest": [440, 443], "easili": [414, 440, 443, 448, 451, 454, 456, 457, 461], "ecfp": [151, 399, 442, 454], "ecfpfingerprint": 151, "ecosystem": 457, "edbo": [277, 279, 356, 442], "edbokernelfactori": [277, 442], "edg": 159, "edit": [440, 443], "editor": 461, "editori": 445, "edwin": 461, "effect": [55, 183, 185, 186, 187, 188, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 413, 414, 423, 437, 442, 446, 449, 454, 455, 458, 461, 463], "effici": [222, 420, 440, 442, 456], "effortlessli": 458, "ei": [3, 403], "either": [26, 31, 217, 245, 251, 267, 291, 358, 399, 410, 425, 430, 440, 445, 453, 454, 455, 456, 458, 459], "elabor": 445, "elaps": 413, "elapsedtimeprint": 413, "electron": [444, 445], "electroshap": 151, "electroshapefingerprint": 151, "eleg": [436, 457], "element": [40, 41, 42, 52, 161, 251, 320, 330, 336, 347, 374, 375, 420, 436, 437, 442, 449, 458], "elev": 415, "elif": [429, 430], "elimin": [443, 446], "els": [337, 338, 397, 398, 399, 400, 405, 406, 408, 409, 411, 414, 415, 423, 426, 429, 430, 436, 437], "elsewher": 417, "emd": 444, "emdgroup": [310, 440], "emelin": 444, "emerg": 448, "empir": 423, "emploi": [31, 423, 455], "employe": [440, 450], "empow": 459, "empti": [99, 214, 216, 222, 229, 318, 333, 342, 357, 360, 394, 395, 420, 425, 430, 432, 442, 456], "empty_encod": [216, 222], "emptysearchspaceerror": 229, "emul": [21, 441, 442], "en": [100, 167], "enabl": [187, 312, 313, 398, 399, 400, 420, 436, 440, 441, 442, 448, 449, 450, 451, 452, 453, 455, 457, 458, 460, 461], "encod": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 153, 154, 157, 216, 222, 254, 256, 258, 263, 267, 281, 283, 285, 287, 341, 343, 398, 399, 400, 402, 403, 408, 409, 410, 411, 414, 418, 420, 423, 425, 432, 433, 434, 436, 437, 440, 442, 449, 456, 457, 461], "encompass": 448, "encount": [159, 183, 185, 186, 187, 188, 382, 441, 442, 443, 453], "end": [0, 309, 365, 414, 418, 423, 425, 432, 445, 449, 457], "endeavor": 446, "endpoint": [442, 450], "enforc": [373, 388, 442, 443, 454], "engin": [441, 455, 457, 458, 463], "enhanc": [26, 440], "enlarg": 454, "enough": [214, 457], "ensembl": 289, "ensur": [159, 160, 398, 399, 400, 420, 421, 440, 449, 457, 458], "enter": [77, 222, 456], "entir": [313, 365, 383, 442, 443, 446, 450, 463], "entiti": 445, "entri": [38, 41, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 237, 254, 256, 258, 263, 267, 281, 283, 285, 287, 318, 349, 358, 383, 400, 408, 409, 410, 411, 420, 439, 442, 449, 450, 451, 452, 460, 463], "enum": [130, 148, 149, 150, 151, 217, 274, 302, 303, 322, 381, 442, 457], "enumer": [129, 147, 301, 415, 436, 437, 453], "env": [442, 443], "envar_nam": 450, "environ": [312, 373, 388, 397, 398, 399, 400, 406, 408, 409, 411, 414, 415, 417, 423, 426, 436, 437, 440, 441, 442, 443, 462], "envvar": 310, "envvar_nam": 450, "eq": [408, 420], "equal": [45, 127, 188, 214, 423, 425, 432, 442, 449, 453, 456, 457, 460], "equat": [45, 449, 458], "equidist": 454, "equip": 449, "equival": [21, 34, 57, 406, 428, 446, 449, 458], "erg": 151, "ergfingerprint": 151, "erron": 442, "error": [186, 196, 198, 245, 247, 249, 264, 331, 376, 400, 418, 423, 441, 442, 449, 453, 455], "esian": 440, "especi": 443, "essenti": [448, 455], "establish": [414, 436, 437, 461], "estat": 151, "estatefingerprint": 151, "ester": [398, 399, 400, 402, 403], "estim": [216, 221, 222, 254, 423, 442, 459, 462], "estimate_product_space_s": [216, 222, 463], "estimated_win_r": 423, "estimation_bia": 423, "estimation_vari": 423, "et": [399, 440, 454], "etc": [40, 41, 42, 141, 216, 297, 461], "ethanol": [420, 449], "euclidean": 382, "eval_during_augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_cr": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_model": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "evalu": [26, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 289, 290, 338, 429, 430, 442, 448, 450, 455, 458, 461], "even": [188, 291, 355, 436, 437, 445, 447, 448, 450, 454, 458, 459, 461, 463], "event": [31, 313, 414, 445], "everi": [447, 463], "everyth": [443, 449], "evolv": [415, 443], "ex": 452, "exabyt": 463, "exact": [31, 358, 413, 441, 442, 449, 453, 454, 459], "exactexplain": [93, 96, 452], "exactli": [13, 16, 44, 122, 127, 132, 134, 216, 420, 442, 447, 448, 456, 457], "exampl": [13, 16, 159, 160, 247, 317, 318, 328, 337, 357, 396, 397, 401, 404, 407, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 426, 427, 428, 431, 435, 436, 437, 441, 442, 443, 444, 445, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463], "example_input_nam": 417, "exceed": 414, "exceedingli": 458, "except": [31, 333, 342, 346, 363, 364, 398, 399, 400, 414, 418, 433, 434, 440, 441, 442, 445, 451, 459], "excepthook": 441, "exceptiongroup": [63, 442], "excess": 463, "exclud": [31, 56, 354, 408, 409, 410, 411, 425, 432, 442, 445, 449, 462], "exclude_list": 356, "exclus": [54, 407, 438, 442, 445, 449, 458, 462], "execut": [31, 67, 245, 333, 397, 399, 441, 442, 443, 445, 450, 457, 458, 461], "exemplari": 448, "exercis": 445, "exhaust": [186, 198, 452, 455], "exist": [31, 117, 216, 313, 323, 333, 420, 441, 442, 443, 446, 448, 449, 451, 457, 459, 461], "exp_rep": [222, 408, 409, 410, 411, 420, 456], "exp_rep_byt": [221, 463], "exp_rep_human_read": [221, 463], "exp_rep_shap": [221, 463], "expect": [3, 4, 9, 11, 13, 14, 16, 17, 52, 81, 259, 261, 269, 333, 352, 403, 409, 415, 417, 420, 421, 423, 434, 442, 443, 448, 449, 452, 453, 454, 457, 458, 460, 463], "expens": [10, 198, 405, 458], "experi": [0, 31, 180, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 243, 245, 254, 256, 258, 263, 267, 281, 283, 285, 287, 398, 399, 400, 402, 403, 429, 430, 442, 446, 448, 449, 451, 453, 454, 455, 460, 461, 462], "experiment": [31, 99, 122, 127, 132, 134, 140, 143, 144, 146, 154, 157, 180, 183, 184, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 216, 221, 222, 243, 254, 256, 258, 261, 263, 267, 281, 283, 285, 287, 297, 299, 305, 349, 351, 408, 409, 410, 411, 415, 425, 432, 440, 442, 446, 447, 449, 451, 453, 454, 456, 457, 458, 460, 461, 462, 463], "experimentalist": 439, "explain": [72, 94, 95, 96, 98, 99, 415, 442, 444, 459, 462], "explainer_cl": [95, 99, 452], "explan": [95, 99, 442, 448, 459], "explanation_index": [95, 452], "explicit": [160, 187, 413, 414, 418, 420, 428, 433, 434, 442, 443, 453, 457, 459, 461, 462], "explicitli": [214, 222, 413, 430, 437, 445, 451, 456, 461], "exploit": [8, 21, 423, 442], "explor": [8, 31, 423, 446, 455, 456, 461], "exploratori": 446, "exponenti": 222, "expos": [31, 413, 442], "exposur": 442, "expr": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "express": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 440, 442, 445, 449], "extend": [159, 451, 454, 461], "extens": [442, 455], "extra": [399, 440, 441, 442], "extract": [31, 183, 185, 186, 187, 188, 359, 415, 436, 452, 462], "extract_pi": 415, "f": [338, 397, 398, 399, 400, 405, 406, 408, 409, 410, 411, 413, 414, 415, 420, 421, 425, 428, 429, 430, 436, 437, 463], "f1": 458, "f2": 458, "fabian": 444, "face": [254, 256, 258, 263, 267, 281, 283, 285, 287, 421, 423], "facilit": 455, "fact": [21, 415, 420, 439, 449, 453], "factor": [13, 16, 160, 440, 448, 449, 463], "factori": [160, 214, 267, 268, 269, 270, 271, 277, 279, 329, 403, 408, 409, 410, 411, 425, 432, 442], "fail": [430, 434, 441, 442, 459], "failur": [299, 445], "failure_valu": 299, "fairli": 453, "fake": [247, 349, 353, 402, 403, 417, 418, 425, 442, 447, 458, 462], "fall": [159, 188, 414, 448, 460], "fallback": [125, 222, 367, 417, 442, 456], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 95, 99, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 185, 186, 187, 188, 214, 216, 222, 227, 254, 256, 258, 263, 267, 281, 283, 285, 287, 299, 308, 326, 327, 331, 337, 338, 347, 352, 357, 359, 362, 394, 403, 408, 409, 410, 411, 425, 432, 433, 434, 440, 442, 450], "famili": 449, "familiar": [398, 399, 400, 403, 405, 406, 408, 409, 410, 411, 417, 418, 425, 429, 430, 432], "fang": 444, "fantasi": 10, "far": 448, "farthest": [210, 381, 382, 403, 440, 442, 444, 446, 455], "farthest_point_sampl": 442, "fashion": [307, 309], "fast": [408, 410, 411, 456, 460], "faster": 222, "fault": 90, "faulti": 441, "favicon": 442, "favor": 442, "fc": [398, 399, 400], "feasibl": [75, 448, 452], "featur": [95, 112, 157, 356, 440, 441, 442, 443, 449, 452, 459, 461], "fed": [440, 452], "feder": 444, "fee": 445, "feed": [426, 439, 440, 451, 461], "feedback": 444, "feel": 414, "few": [397, 423, 442, 443, 446, 454, 457, 459, 461, 463], "field": [236, 346, 347, 442, 461, 462], "fifti": 445, "fig": [415, 426], "figsiz": 426, "figur": 415, "file": [398, 399, 400, 417, 418, 430, 440, 442, 445, 450, 457, 461], "filenotfounderror": [398, 399, 400, 414], "fill": [31, 247, 415], "filler": 449, "filter": [31, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 216, 222, 354, 357, 408, 420, 442, 449, 451, 456, 461, 463], "filter_attribut": 442, "filter_df": [31, 442], "filterwarn": 414, "final": [397, 399, 402, 414, 420, 437], "find": [216, 331, 375, 440, 446, 448, 449, 453, 461], "fine": [418, 432, 433, 434, 440], "finer": [160, 440], "fingerprint": [151, 157, 341, 343, 440, 442, 444, 454], "finish": 447, "finit": [186, 243, 251, 364, 390, 423, 454, 458], "first": [216, 249, 374, 382, 397, 399, 402, 403, 408, 413, 414, 417, 418, 420, 425, 426, 430, 434, 436, 437, 440, 441, 442, 448, 449, 453, 454, 455, 456, 461, 463], "fit": [31, 208, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 383, 385, 398, 399, 400, 408, 409, 410, 411, 417, 425, 432, 442, 445, 449, 454, 459], "fit_gpytorch_ml": 442, "fit_gpytorch_mll_torch": 442, "fitnr": 425, "fitzner": [440, 444], "fix": [243, 270, 414, 415, 420, 423, 426, 429, 430, 443, 448, 454, 458, 461, 463], "flag": [26, 31, 53, 95, 99, 122, 127, 132, 134, 198, 216, 217, 222, 352, 359, 439, 442, 448, 450, 451, 452, 455], "flake8": 442, "flexibl": [413, 428, 442, 457, 458], "flexibli": [453, 455], "float": [8, 13, 15, 16, 22, 31, 42, 44, 45, 47, 48, 106, 107, 108, 109, 110, 111, 112, 113, 117, 119, 127, 128, 146, 153, 154, 157, 161, 164, 165, 171, 172, 173, 174, 175, 176, 177, 198, 221, 222, 245, 249, 254, 256, 257, 258, 261, 263, 267, 281, 283, 285, 287, 291, 299, 300, 307, 308, 309, 314, 324, 345, 349, 350, 351, 356, 365, 369, 371, 372, 374, 375, 376, 387, 390, 391, 392, 413, 415, 417, 423, 425, 442, 443, 448, 462], "float64": 387, "floattensortyp": 417, "fly": [187, 457, 459], "fn": 323, "focu": 448, "focus": [134, 426, 430, 440], "folder": [399, 440, 443, 450, 459], "follow": [161, 183, 185, 186, 187, 188, 216, 245, 247, 249, 398, 399, 400, 403, 405, 406, 408, 409, 410, 411, 413, 414, 418, 423, 425, 430, 433, 434, 436, 437, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "footprint": [10, 216], "forbid": 393, "forc": [95, 97, 159, 198, 442, 443, 452, 455], "forest": [286, 287], "forgiv": 460, "fork": 443, "form": [222, 243, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 349, 439, 440, 445, 446, 448, 453, 454, 455, 456, 457, 458, 463], "formal": [421, 439], "format": [45, 311, 360, 366, 369, 417, 418, 432, 433, 440, 441, 442, 443, 448, 450, 457, 458], "format_except": 441, "former": [420, 442], "formul": 461, "formula": 420, "forrest": 442, "found": [88, 160, 214, 222, 331, 341, 372, 375, 414, 420, 425, 440, 441, 443, 448, 449, 455, 461], "foundat": 455, "four": 420, "fourier": 112, "fourth": 449, "fp": [381, 442, 446], "fp_size": [151, 454], "fpsrecommend": [403, 417, 418, 432, 433, 434, 440, 447, 455], "frac": [437, 453], "frac1": 409, "fraction": [15, 107, 345, 414, 446, 449, 450], "fraction1": 409, "fraction_1": 449, "fraction_2": 449, "fraction_3": 449, "fractur": 449, "frame": [351, 452, 463], "frame1": 409, "frame2": 409, "frame_1": 449, "frame_2": 449, "framea": 409, "framea_a": 409, "frameb": 409, "framework": [448, 454], "free": [443, 445, 450], "freedom": 457, "freeli": 420, "frequenc": 112, "frequent": 423, "fresh": 414, "frictionless": 457, "friendli": 442, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 151, 153, 154, 157, 159, 160, 167, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 239, 247, 249, 251, 254, 256, 258, 261, 263, 267, 270, 275, 279, 281, 283, 285, 287, 291, 297, 299, 305, 308, 309, 333, 337, 338, 342, 351, 352, 354, 356, 365, 376, 383, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 421, 423, 425, 426, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 441, 443, 445, 446, 447, 449, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463], "from_bound": [214, 442, 456], "from_campaign": [95, 452], "from_config": [31, 433, 434, 448], "from_datafram": [214, 216, 222, 442, 451, 456, 457, 463], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 214, 216, 222, 239, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 365, 417], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 214, 216, 222, 239, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 365, 417, 418, 432, 448, 457], "from_paramet": [214, 216, 222, 442], "from_preset": 267, "from_product": [214, 216, 222, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 421, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 440, 442, 449, 451, 456, 457, 458], "from_recommend": [95, 452], "from_record": [457, 458], "from_repl": [261, 459], "from_simplex": [222, 420, 442, 451, 456, 463], "from_surrog": [95, 452], "front": 453, "frontier": 426, "frozenset": [44, 214, 420], "fsspec": 442, "fulfil": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 414, 420, 421], "full": [26, 214, 372, 396, 438, 442, 448, 451, 452, 454, 461, 462], "full_factori": 214, "full_lik": 415, "full_lookup": [398, 399, 400], "fulli": [420, 440, 442, 450, 451, 458], "fulltest": 443, "func": 443, "func_nam": 436, "funci": 442, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 39, 45, 46, 52, 60, 62, 70, 80, 90, 92, 95, 111, 118, 121, 124, 126, 131, 133, 135, 158, 159, 163, 196, 198, 199, 215, 220, 226, 230, 231, 239, 240, 243, 244, 246, 248, 249, 250, 255, 262, 268, 273, 288, 292, 293, 296, 303, 306, 307, 308, 309, 310, 313, 314, 316, 319, 335, 339, 344, 348, 351, 353, 358, 359, 360, 363, 368, 370, 377, 380, 389, 402, 408, 409, 410, 411, 413, 415, 420, 423, 426, 432, 436, 437, 440, 441, 442, 446, 448, 449, 451, 453, 455, 456, 458, 459, 460, 461, 463], "function_nam": [436, 437], "functionalgroup": 151, "functionalgroupsfingerprint": 151, "fundament": [454, 457], "furo": 442, "further": [13, 16, 358, 420, 421, 432, 440, 447, 451, 455, 456, 459, 461, 462], "furthermor": 425, "furyl": [398, 399, 400], "futur": [57, 216, 262, 408, 410, 411, 414, 436, 452, 460], "fuzzi": 313, "fuzzy_row_match": [313, 442], "g": [53, 55, 56, 73, 95, 98, 146, 160, 216, 222, 320, 343, 358, 423, 440, 441, 442, 443, 446, 447, 449, 450, 452, 454, 455, 456, 458, 463], "g1": 421, "g2": 421, "g3": 421, "gain": [222, 448, 452], "gamma": 172, "gammaprior": 442, "garbag": 442, "gather": [188, 436, 437, 446, 461], "gaussian": [100, 205, 256, 265, 266, 267, 268, 272, 273, 274, 276, 277, 278, 279, 307, 403, 425, 442, 449, 455, 461], "gaussian_kd": 415, "gaussian_process": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 267, 269, 270, 274, 277, 279, 403, 442], "gaussianmixtureclusteringrecommend": 455, "gaussianprocesspreset": [267, 275], "gaussianprocesssurrog": [275, 403, 408, 409, 410, 411, 415, 425, 432, 433, 434, 442, 459], "gcf": [398, 400], "ge": 406, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 150, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 222, 254, 256, 258, 261, 263, 267, 270, 277, 279, 281, 283, 285, 287, 297, 299, 305, 311, 337, 343, 350, 365, 377, 385, 397, 403, 413, 420, 426, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 457, 458, 459, 460, 461, 462, 463], "geom_mean": [119, 127, 130, 425, 453], "geometr": [130, 376, 425, 453], "germani": [440, 444, 450], "get": [31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 196, 198, 214, 267, 349, 403, 414, 420, 429, 430, 439, 440, 442, 447, 462, 463], "get_absolute_threshold": [44, 442], "get_candid": [222, 414], "get_cmap": 415, "get_comp_rep_parameter_indic": [216, 442], "get_current_recommend": [183, 185, 186, 187, 188, 442], "get_integration_point": 15, "get_invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_invalid_polar": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_lin": 414, "get_next_recommend": [183, 185, 186, 187, 188, 442], "get_non_meta_recommend": [183, 185, 186, 187, 188, 442], "get_parameters_by_nam": [214, 216, 222], "get_parameters_from_datafram": [214, 222], "get_subclass": 403, "get_surrog": [31, 95, 196, 198, 442, 452, 459], "get_transform_object": [362, 442], "get_transform_paramet": 442, "get_valid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 442], "getawai": 151, "getawayfingerprint": 151, "ghosecrippen": 151, "ghosecrippenfingerprint": 151, "git": [440, 443], "github": [279, 310, 334, 356, 417, 442, 443, 444], "give": [417, 418, 420, 437, 445, 448, 449, 453, 457], "given": [13, 16, 29, 31, 34, 40, 41, 42, 44, 65, 88, 95, 98, 99, 122, 127, 132, 134, 136, 157, 159, 160, 161, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 228, 243, 247, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 291, 302, 314, 318, 326, 327, 331, 332, 333, 336, 337, 340, 341, 345, 347, 349, 352, 359, 365, 366, 374, 376, 382, 385, 408, 409, 410, 411, 414, 420, 423, 425, 430, 436, 437, 442, 448, 456, 458, 459], "glass_transition_tempc": 454, "global": [15, 378, 442, 462, 463], "gmean": 376, "gmm": 205, "go": [317, 420, 440], "goal": [397, 423, 453, 461], "goe": 459, "good": [349, 414, 425, 448, 450, 460], "good_interv": 349, "good_reference_valu": 349, "goodwil": 445, "googl": [442, 443], "govern": 440, "gp": [254, 256, 258, 263, 267, 281, 283, 285, 287, 442], "gpytorch": [100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 167, 169, 171, 172, 173, 174, 175, 176, 177, 442], "grab": 439, "gradient": [10, 198, 285, 442, 450, 455], "grant": [442, 445], "granular": [418, 432, 433, 434, 440], "granularity_coar": 432, "granularity_fin": 432, "great": [423, 457], "greater": [188, 198], "greatli": 443, "greedi": [198, 442, 455], "grid": [426, 436, 437], "grid_d": [436, 437], "grossli": 445, "ground": 442, "group": [86, 198, 318, 328, 385, 421, 440, 442, 448, 452], "groupbi": [249, 251], "grow": 463, "gt": [411, 420], "gu16": 454, "guarante": [442, 449, 450, 455], "guid": [402, 440, 441, 442, 443, 446, 448, 451, 453, 456, 458, 461], "guidelin": [442, 443, 446], "ha": [53, 75, 79, 80, 95, 186, 214, 216, 222, 254, 256, 258, 263, 267, 281, 283, 285, 287, 317, 331, 333, 337, 350, 382, 383, 399, 403, 408, 409, 410, 411, 420, 425, 430, 432, 440, 442, 443, 445, 447, 448, 449, 452, 454, 456, 457, 458, 460, 461], "had": [243, 449, 454, 458], "half": [154, 173, 174, 365, 430, 447], "halfcauchyprior": 442, "halfnormalprior": 442, "hamster": 461, "hand": [45, 157, 421, 423, 426, 436, 437, 440, 448, 457, 459], "handi": 449, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 95, 132, 141, 245, 247, 254, 256, 258, 263, 267, 281, 283, 285, 287, 291, 363, 408, 409, 423, 425, 442, 448, 453, 463], "happen": [87, 186, 425, 430, 437, 441, 442, 443, 456, 457, 461], "happili": 453, "hard": [442, 461, 463], "harmless": 445, "hartmann": [415, 436, 437], "hasattr": [405, 406, 429, 430], "hash": [311, 440, 450, 454], "hashabledict": 442, "have": [26, 31, 38, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 122, 127, 132, 134, 157, 159, 208, 216, 243, 262, 294, 318, 328, 331, 349, 358, 359, 372, 398, 399, 402, 403, 408, 409, 413, 415, 420, 421, 423, 425, 429, 430, 436, 437, 440, 441, 442, 443, 445, 446, 447, 448, 449, 451, 453, 454, 455, 457, 458, 459, 461, 463], "head": 442, "header": 347, "heart": 461, "heatmap": [95, 97], "help": [423, 457, 458, 461], "helper": [413, 415, 417, 420, 457], "henc": [342, 420, 423, 432, 449, 454, 463], "here": [56, 372, 398, 400, 402, 405, 406, 413, 414, 418, 420, 421, 429, 430, 432, 436, 437, 439, 440, 441, 447, 449, 451, 453, 454, 455, 456, 457, 458, 460, 461], "herebi": 445, "herein": [445, 448], "heurist": 198, "hierarch": 457, "hierarchi": [88, 442, 443, 448, 457], "high": [277, 397, 423, 442, 443, 446, 448, 449, 454, 457], "higher": [157, 423, 441, 449, 452, 455], "highest": [446, 457], "highlight": 461, "hint": 443, "histogram": 314, "histor": 454, "histori": 443, "hoc": 453, "hold": [44, 328, 445, 457], "home": [408, 410, 411], "homepag": [440, 442], "hood": 454, "hook": [49, 125, 222, 231, 235, 333, 438, 441, 442, 443], "hopp": [440, 444], "host": [440, 442, 450], "hostnam": [311, 450], "hot": [148, 399, 423, 440, 442, 454], "how": [54, 245, 247, 358, 382, 397, 398, 400, 401, 402, 403, 404, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 430, 432, 433, 434, 437, 440, 448, 449, 450, 453, 458, 459, 460, 461], "howev": [160, 222, 262, 333, 413, 420, 423, 429, 430, 439, 441, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 461, 463], "hrovatin": 444, "html": [100, 167, 310, 323, 372, 417, 442], "http": [100, 167, 279, 310, 323, 334, 356, 372, 440, 442, 445, 461], "hue": [397, 398, 399, 400, 414, 436, 437], "human": [221, 369, 432, 442, 444, 457], "hybrid": [25, 26, 73, 189, 190, 198, 211, 216, 217, 403, 404, 408, 409, 410, 411, 425, 427, 432, 438, 440, 442, 455, 456], "hybrid_recommend": 430, "hybrid_sampl": [198, 455], "hyperrectangl": [214, 456], "hypervolum": [13, 16], "hypothesi": [440, 442, 443], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 72, 73, 77, 79, 80, 82, 84, 95, 98, 99, 114, 117, 128, 139, 140, 141, 143, 144, 146, 153, 154, 157, 159, 160, 161, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 229, 243, 245, 247, 249, 251, 254, 256, 258, 259, 261, 262, 263, 267, 277, 281, 283, 285, 287, 291, 294, 302, 307, 308, 309, 312, 313, 314, 318, 321, 322, 323, 326, 327, 331, 333, 334, 336, 337, 338, 341, 342, 347, 349, 350, 351, 352, 353, 357, 358, 359, 360, 364, 365, 372, 374, 375, 382, 383, 390, 394, 395, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 421, 423, 425, 429, 430, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463], "ideal": [447, 449, 458], "ident": [160, 317, 318, 451, 454, 457, 461], "identif": 423, "identifi": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 249, 328, 342, 358, 359, 414, 442, 449, 452, 453, 454, 456, 457, 458, 461], "idx_offset": 45, "ignor": [122, 127, 132, 134, 186, 198, 216, 245, 247, 249, 331, 356, 400, 414, 430, 442, 449, 457, 463], "ignore_exampl": 442, "ignore_list": 355, "ii": 445, "iii": 445, "illustr": [426, 428, 451], "iloc": 447, "imag": [423, 442], "imagin": [420, 423], "immedi": [413, 448], "immut": 442, "impact": [399, 437, 450], "imperfect": 351, "implement": [21, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 128, 180, 191, 251, 259, 335, 408, 414, 420, 436, 442, 443, 444, 446, 452, 455, 456, 458, 461], "impli": [420, 440, 445, 449, 454], "implicitli": 457, "import": [13, 16, 86, 95, 127, 247, 414, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463], "impos": [420, 421, 449], "imposs": [440, 450, 451, 457], "improv": [3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 403, 406, 412, 414, 438, 440, 442, 445, 450], "imput": [245, 247, 396, 400, 438, 440], "impute_mod": [245, 247, 249, 400, 458], "inabl": [440, 445], "inaccuraci": 440, "inact": [44, 159, 161, 198, 214, 442], "inactive_parameter_combin": [44, 214, 442], "inc": 461, "incident": 445, "includ": [63, 65, 122, 127, 132, 134, 159, 188, 245, 326, 327, 355, 398, 409, 418, 420, 433, 434, 437, 442, 443, 445, 446, 447, 449, 451, 463], "inclus": 445, "incom": 457, "incompat": [69, 70, 71, 72, 73, 74, 99, 263, 410, 449], "incompatibilityerror": 31, "incompatibleacquisitionfunctionerror": 447, "incompatibleexplainererror": 452, "incomplet": 442, "inconsist": 442, "incorpor": [445, 447, 459, 463], "incorrect": 442, "incorrectli": 442, "increas": [10, 186, 249, 308, 309, 425, 436, 437, 442, 446, 454, 461], "increment": 222, "incur": 445, "inde": 448, "indefinit": [186, 245], "indemn": 445, "indemnifi": 445, "indent": [347, 442], "independ": [190, 254, 256, 258, 261, 263, 267, 281, 283, 285, 287, 417, 442, 455, 458, 459], "independentgaussiansurrog": [263, 281, 283, 285, 442], "index": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 216, 249, 261, 317, 318, 357, 358, 417, 418, 425, 430, 432, 442, 452, 454, 456, 458], "indexkernel": 442, "indic": [13, 16, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 90, 95, 98, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 161, 183, 185, 186, 187, 188, 216, 254, 256, 258, 263, 267, 281, 283, 285, 287, 317, 318, 321, 322, 352, 382, 420, 430, 442, 445, 451, 455, 458, 459], "indirect": [326, 327, 445], "indistinguish": 420, "individu": [53, 54, 115, 116, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 245, 261, 360, 414, 421, 426, 445, 448, 451, 453, 455, 461], "induc": [44, 423], "industri": 461, "ineffici": 222, "inequ": [45, 214, 456], "inf": [8, 408, 409, 410, 411, 432], "infeas": [449, 451], "infer": [160, 263, 436, 437, 442, 456], "inferencesess": 263, "infin": 165, "infinit": [186, 187, 329, 364, 390, 391, 442, 454], "influenti": 461, "info": [314, 442], "inform": [26, 141, 297, 359, 398, 399, 400, 415, 420, 429, 430, 437, 440, 442, 443, 445, 447, 450, 451, 454, 456, 461, 462], "infring": 445, "ingest": [222, 245, 454, 455], "ingredi": [420, 421, 449], "inher": [21, 159, 254, 256, 258, 263, 267, 281, 283, 285, 287, 420, 459], "inherit": 443, "init": 293, "initi": [106, 107, 108, 109, 110, 111, 112, 113, 117, 188, 190, 198, 205, 206, 207, 208, 210, 222, 245, 249, 313, 382, 396, 408, 409, 410, 411, 414, 415, 425, 432, 437, 438, 442, 444, 448, 450, 454, 455, 457, 458, 461], "initial_data": [245, 249, 398, 437, 458], "initial_recommend": [188, 403, 414, 415, 417, 418, 423, 432, 433, 434, 440, 455], "initial_recommender_cl": 442, "initial_strategi": 442, "initial_typ": 417, "inject": 457, "inner": [181, 357, 452, 455, 457], "inplac": [399, 436, 437, 463], "input": [40, 41, 42, 128, 140, 143, 144, 146, 154, 157, 214, 216, 222, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 297, 299, 305, 307, 328, 345, 346, 351, 352, 353, 357, 365, 367, 374, 382, 394, 395, 397, 417, 425, 426, 436, 437, 442, 453, 457, 458, 461], "input_dim": 417, "input_label": 352, "inputtransform": 385, "insid": [414, 417, 418, 441, 457], "insight": [95, 414, 440, 442, 444, 462], "inspect": [337, 413, 420], "instabl": [442, 449], "instal": [442, 443, 450, 452, 454, 463], "instanc": [40, 41, 42, 53, 56, 95, 188, 216, 349, 409, 414, 420, 421, 440, 441, 443, 447, 448, 449, 450, 452, 454, 456, 457, 458, 463], "instanti": [263, 414, 448], "instead": [183, 185, 186, 187, 188, 313, 342, 352, 408, 410, 411, 440, 441, 442, 448, 449, 453, 454, 457, 458, 460, 461, 463], "institut": [444, 445], "instruct": [440, 442, 460, 462], "instrument_nam": 314, "int": [10, 13, 15, 16, 21, 31, 34, 44, 45, 51, 95, 102, 103, 104, 107, 109, 110, 111, 112, 113, 122, 127, 128, 132, 134, 148, 161, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 222, 245, 249, 251, 299, 300, 307, 308, 309, 314, 353, 360, 375, 378, 379, 382, 383, 385, 408, 410, 411, 420, 423, 425, 437, 443, 454], "integ": [34, 148, 216, 249, 430, 442, 443, 454], "integr": [15, 442, 443, 446, 448], "intend": [402, 413, 436, 443, 455], "intens": 454, "intention": 445, "interact": [30, 31, 402, 440, 441, 448, 451, 457], "interchang": 420, "interconnect": 448, "interest": [448, 452, 453, 454, 463], "interfac": [180, 259, 269, 413, 415, 442, 445, 448, 451, 452], "intermedi": [208, 382], "intern": [31, 45, 57, 186, 397, 414, 425, 442, 449, 450, 454, 455, 456, 457], "internet": 440, "internship": 444, "interplai": 442, "interpol": [107, 277, 442], "interpret": [13, 16, 216, 243, 345, 418, 420, 433, 434, 437, 450, 456, 458], "interrupt": 67, "intersect": 430, "interv": [31, 44, 153, 159, 161, 254, 256, 258, 263, 267, 281, 283, 285, 287, 305, 307, 308, 309, 425, 442, 448, 454, 457, 460], "intrins": 461, "introduc": [441, 442, 449, 454, 455, 458], "intuit": [448, 452], "invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 76, 222, 342, 383, 418, 433, 441, 448, 449, 456], "invalid_config": 434, "invalid_surrogate_model": 418, "invalid_typ": 434, "invari": [53, 56, 57, 317, 318, 449], "invers": [235, 457], "invert": [31, 357], "investig": [243, 458, 459], "invok": [458, 462, 463], "involv": [31, 222, 261, 413, 420, 440, 450, 452, 453, 454, 457, 461], "io": 310, "irrelev": [420, 442, 449], "irrevoc": 445, "is_bound": [365, 442], "is_cardinality_fulfil": 442, "is_continu": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 139, 140, 141, 143, 144, 146, 153, 154, 157], "is_degener": 365, "is_discret": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 139, 140, 141, 143, 144, 146, 153, 154, 157], "is_empti": [214, 222, 442], "is_eq": 45, "is_finit": 442, "is_fully_unbound": 365, "is_half_bound": 365, "is_in_rang": [139, 140, 141, 143, 144, 146, 153, 154, 157], "is_inact": 442, "is_left_bound": 365, "is_mc": 442, "is_multi_output": [122, 127, 132, 134, 442], "is_numer": [139, 140, 141, 143, 144, 146, 153, 154, 157, 442], "is_right_bound": 365, "is_stat": [183, 185, 186, 187, 188, 442, 451], "iso": 417, "isoxazol": 461, "issu": [262, 323, 334, 442, 445, 458, 463], "item": [41, 139, 140, 141, 143, 144, 146, 153, 154, 157, 420, 423, 436, 437, 454], "iter": [13, 16, 31, 44, 153, 186, 187, 214, 216, 245, 262, 305, 324, 329, 349, 351, 353, 366, 394, 395, 398, 408, 409, 410, 411, 414, 415, 423, 436, 437, 440, 442, 446, 448, 454, 455, 458, 459, 463], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 159, 160, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 190, 214, 216, 222, 239, 251, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 314, 317, 325, 333, 337, 349, 365, 369, 397, 403, 413, 415, 420, 421, 423, 437, 440, 441, 443, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 463], "itself": [254, 256, 258, 263, 267, 281, 283, 285, 287, 413, 436, 441, 461], "j": [399, 440, 454, 461], "jackiepho": [398, 399, 400], "januari": 445, "javadi": 444, "jin": 444, "join": [357, 441], "joint": [261, 448, 459], "jointli": [426, 448], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 214, 216, 222, 239, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 365, 417, 418, 432, 433, 442, 462], "json_str": 457, "juli": 444, "julian": 444, "jump": [442, 461], "jupyt": 417, "just": [423, 439, 443, 457], "k": [154, 206, 382, 397, 398, 399, 400, 402, 403, 405, 406, 414, 420, 426, 428, 429, 430, 442, 451, 455, 463], "karin": 444, "kde": 415, "keep": [52, 157, 214, 222, 414, 442, 443], "kei": [328, 349, 399, 443, 452], "kept": [357, 454, 459], "kernel": [102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 267, 268, 269, 270, 271, 277, 279, 403, 408, 409, 410, 411, 425, 432, 442, 449, 461], "kernel_factori": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 267, 269, 270], "kernel_or_factori": 267, "kernelexplain": [93, 95, 96, 99, 452], "kernelfactori": [267, 270, 271, 277, 279, 442], "keyword": [95, 157, 400, 403, 430, 437, 442, 447, 449, 456, 458], "kgaa": [440, 444, 450], "kian": 461, "kickstart": 457, "kind": [198, 440, 442, 445, 449, 454, 455], "kiter": [408, 409, 410, 411, 425], "klekotaroth": 151, "klekotarothfingerprint": 151, "kmean": 403, "kmeansclusteringrecommend": [403, 455], "knob": 440, "know": [423, 433, 440, 441, 453, 457, 461], "knowledg": [8, 10, 440, 442, 461], "known": [449, 451, 459, 461], "koller": 461, "kwarg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 106, 108, 110, 115, 116, 117, 169, 171, 172, 173, 174, 175, 176, 177, 180, 200, 259, 264, 269, 343, 353, 364], "kwargs_conform": [157, 343, 454], "kwargs_fingerprint": [157, 343, 454], "l0": 34, "l1": 454, "l664": 279, "label": [56, 57, 146, 157, 314, 352, 420, 421, 426, 440, 442, 449, 451, 456, 458], "labelpad": 415, "laboratori": 426, "laggner": 151, "laggnerfingerprint": 151, "lambda": [408, 410, 411, 414, 420, 436, 459], "lanat": 452, "land": 442, "languag": [323, 421, 440], "larg": [157, 222, 405, 406, 421, 442, 450, 454, 458, 463], "larger": [107, 154, 383, 403, 410, 448, 449, 457, 461], "largest": [382, 423, 446], "last": [186, 423, 443, 448, 455], "last_call_tim": 413, "lastli": 415, "latent": 454, "later": [154, 441, 448, 457], "latest": [187, 440, 443, 448], "latter": [21, 31, 317, 337, 414, 420, 448, 453, 461], "law": [440, 445], "lawsuit": 445, "layer": 151, "layeredfingerprint": 151, "layout": 442, "lazi": [224, 386, 442], "lazili": [442, 450], "lazyfram": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 224], "le": 406, "le_method": 443, "lead": [85, 425, 442, 457], "lean": 443, "learn": [15, 250, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 403, 408, 409, 410, 411, 423, 425, 432, 436, 438, 440, 442, 449, 452, 454, 459, 460, 462], "least": [161, 186, 421, 440, 445, 447, 448], "leav": 457, "lee": 444, "left": [82, 83, 177, 245, 350, 358, 365, 409, 426, 442, 453], "left_df": 358, "leftov": 442, "legal": 445, "legend": [398, 400, 426], "len": [409, 414, 415, 420, 421, 423], "length": [108, 186, 187, 254], "lengthi": 448, "lengthscal": [107, 108, 109, 111, 112, 113], "lengthscale_initial_valu": [107, 108, 109, 111, 112, 113], "lengthscale_prior": [107, 108, 109, 111, 112, 113], "leq": 34, "less": [8, 318, 353, 414, 415, 423, 448, 463], "let": [397, 399, 413, 414, 415, 417, 418, 420, 421, 426, 428, 437, 440, 449, 453, 457], "level": [351, 442, 443, 447, 448, 449, 455, 457], "leverag": [414, 448, 455], "li": [161, 454], "liabil": 445, "liabl": 445, "lib": 441, "librari": 441, "licensor": 445, "lie": [31, 254, 256, 258, 263, 267, 281, 283, 285, 287, 349], "liebig": 444, "life": [440, 443, 444, 463], "lifecycl": 448, "ligand": [398, 399, 400, 402, 403, 414, 440, 452, 454], "ligand_data": 414, "ligand_smil": 414, "like": [13, 16, 161, 208, 249, 320, 415, 420, 423, 440, 441, 442, 443, 447, 448, 449, 451, 457, 458, 461, 463], "likelihood": 254, "lime": [95, 98, 452], "limetabular": [93, 94, 452], "limit": [8, 277, 314, 415, 440, 444, 445, 449, 456, 462], "line": [347, 365, 398, 400, 414, 423, 442, 443, 446, 448, 454, 458, 461], "linear": [45, 106, 214, 281, 303, 308, 403, 404, 425, 438, 442, 443, 452, 456, 460], "linear_model": 417, "linear_regressor": 417, "linearkernel": 442, "linearli": [277, 308, 309, 425, 442], "lineplot": [397, 398, 399, 400, 414, 436, 437], "lingo": 151, "lingofingerprint": 151, "link": [55, 441, 442, 445, 454], "linspac": [408, 409, 410, 411, 415, 417, 418, 420, 426, 429, 430, 432, 436, 437, 463], "lint": [440, 442, 443], "linter": [442, 443], "list": [34, 35, 36, 37, 38, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 119, 160, 166, 186, 187, 214, 216, 222, 223, 224, 227, 228, 229, 245, 249, 251, 313, 326, 327, 328, 336, 343, 349, 354, 355, 356, 359, 382, 398, 403, 408, 409, 410, 411, 415, 420, 421, 423, 425, 429, 430, 437, 440, 442, 443, 445, 449, 453, 454, 455, 456, 458], "liter": [31, 95, 119, 186, 245, 247, 249, 254, 256, 257, 258, 261, 263, 267, 281, 283, 285, 287, 351, 382, 443], "literatur": 442, "litig": 445, "littl": 441, "live": 459, "liver": [458, 461], "ll": 451, "load": [386, 414, 417, 433, 434, 441, 442], "loc": [175, 176, 398, 400, 426], "local": [441, 443, 450, 452, 462], "locat": [13, 16, 175, 176, 447, 450, 461], "lockfil": 442, "log": [175, 314, 403, 440, 450], "logarithm": [4, 11, 13, 14, 376], "logei": [4, 442], "logic": [181, 261, 349, 352, 397, 442, 449, 455, 458, 463], "lognormalprior": 442, "logo": 442, "long": [448, 457, 458], "longer": [159, 442], "look": [247, 403, 420, 423, 441, 446, 448, 449, 451, 452, 457, 458, 460], "look_up_target": 245, "lookup": [243, 245, 249, 251, 352, 358, 396, 397, 415, 426, 429, 438, 442, 452, 462], "lookup_df": 247, "lookup_test_task": 437, "lookup_training_task": 437, "lookup_valu": [405, 406, 415, 429, 430], "lookup_withmiss": 400, "loop": [243, 245, 251, 408, 409, 410, 411, 414, 425, 442, 447, 452, 458, 463], "loss": 445, "lost": 457, "lot": 428, "low": [277, 423, 441, 442, 452, 454, 457], "lower": [161, 177, 307, 308, 309, 365, 398, 400, 415, 425, 436, 437, 449, 454, 460], "lower_bound": 456, "lower_threshold": 161, "lst_exclud": 354, "lt": 441, "luxuri": 448, "m": 420, "m1": 441, "mac": 441, "macc": 151, "maccsfingerprint": 151, "machin": [423, 440, 441, 443, 446, 450, 454, 460, 461], "machineri": [21, 198, 441, 443, 451, 461, 463], "made": [86, 245, 382, 400, 440, 441, 445, 449, 450, 458], "magic": 461, "magnitud": [350, 351, 463], "mai": [31, 44, 122, 127, 132, 134, 216, 333, 439, 440, 445, 448, 451, 457, 458, 459], "mail": 445, "main": [30, 31, 440, 442], "maintain": [291, 443, 451, 453], "major": [442, 458], "make": [57, 198, 254, 256, 258, 263, 267, 281, 283, 285, 287, 289, 290, 291, 323, 350, 352, 398, 400, 403, 405, 420, 421, 440, 441, 442, 443, 445, 447, 448, 449, 451, 452, 454, 457, 459, 461, 463], "make_explainer_for_surrog": 95, "malfunct": 445, "manag": [30, 214, 215, 216, 222, 379, 442, 445, 458], "mandatori": [439, 442, 460], "mani": [198, 383, 420, 429, 430, 440, 448, 454, 457, 460, 461], "manipul": [442, 450], "manner": 450, "manual": [430, 441, 442, 457, 459], "map": [146, 151, 157, 247, 249, 261, 307, 308, 309, 331, 352, 385, 398, 399, 400, 425, 458, 460], "mapfingerprint": 151, "mapl": [93, 94, 95, 98, 452], "margin": 442, "mark": [445, 448, 461, 462], "markdown": [418, 433, 434, 442], "marker": [397, 398, 399, 400, 414, 436, 437, 442], "markers": [397, 399, 414, 426, 436, 437], "market": 423, "marketplac": 442, "martin": [440, 444], "mask_bad1": 408, "mask_bad2": 408, "mask_bad3": 408, "mask_good": [408, 449], "mass": 171, "master": 279, "match": [31, 87, 89, 140, 143, 144, 146, 154, 157, 160, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 297, 299, 302, 305, 313, 331, 333, 358, 359, 394, 413, 415, 425, 430, 440, 442, 447, 448, 451, 453, 457, 458, 462], "match_attribut": 442, "match_targeta": 460, "match_targetb": 460, "materi": [423, 444, 461], "matern": 107, "maternkernel": 442, "math": [414, 420], "mathemat": 442, "matmin": 441, "matplotlib": [398, 400, 415, 426, 442], "matter": [420, 428, 443, 453], "max": [247, 302, 350, 398, 399, 400, 402, 403, 408, 409, 410, 411, 414, 415, 417, 418, 423, 425, 426, 432, 433, 434, 440, 442, 453, 457, 458, 462], "max_cardin": [34, 44, 51, 449], "max_column": [360, 420], "max_colwidth": 360, "max_n_subspac": [198, 442, 449], "max_nonzero": 222, "max_row": [360, 420], "max_sum": [222, 420, 456], "max_target": 460, "max_yield": [398, 400], "maxim": [6, 13, 16, 302, 402, 415, 423, 425, 440, 442, 452, 460], "maximum": [6, 34, 44, 51, 61, 157, 198, 214, 216, 222, 307, 360, 420, 421, 425, 442, 449, 454, 456], "mc": [423, 447], "md": 442, "me2pph": [398, 399, 400], "mean": [5, 8, 21, 31, 57, 119, 130, 206, 243, 245, 247, 249, 254, 256, 257, 258, 261, 263, 267, 281, 283, 285, 287, 291, 376, 400, 403, 417, 423, 425, 426, 442, 443, 445, 446, 447, 448, 449, 451, 453, 454, 455, 457, 459, 462], "meaning": 453, "meaningless": [420, 446], "meanpredictionsurrog": [291, 403, 459], "meantim": [443, 449], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 81, 95, 159, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 243, 245, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 297, 299, 305, 313, 349, 353, 358, 398, 399, 400, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 425, 429, 430, 432, 439, 440, 442, 443, 446, 447, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462], "mechan": [31, 67, 127, 128, 130, 243, 246, 247, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 333, 357, 367, 382, 397, 413, 414, 415, 436, 437, 442, 445, 451, 452, 454, 456, 457, 459, 461, 462], "mechanist": 440, "media": [445, 454, 461], "mediocr": 460, "medium": [418, 432, 440, 445, 454], "medoid": [207, 442, 455], "meet": [349, 445], "mem_estim": 463, "member": [337, 449, 454], "memori": [10, 216, 221, 222, 442, 450, 462], "memorys": [216, 222, 463], "mention": 446, "merchant": 445, "merck": [440, 444, 450], "mere": [445, 453], "merg": 443, "meshgrid": [426, 436, 437], "messag": [87, 414], "meta": [31, 82, 183, 185, 186, 187, 188, 191, 408, 409, 410, 411, 425, 432, 440, 442, 462], "metadata": [31, 214, 222, 311, 442], "metarecommend": [185, 186, 187, 188, 442, 451], "methanol": 420, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 90, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 222, 239, 254, 256, 258, 259, 261, 263, 267, 269, 270, 277, 279, 281, 283, 285, 287, 290, 293, 294, 297, 299, 305, 320, 323, 333, 337, 365, 381, 382, 383, 385, 415, 418, 433, 434, 439, 442, 444, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461], "methodtyp": [413, 414, 415], "methyldiphenylphosphin": [398, 399, 400], "methylisoxazol": 461, "metric": [423, 440, 450, 454], "mhfp": 151, "mhfpfingerprint": 151, "micromamba": 442, "middl": 451, "midpoint": 460, "might": [53, 57, 157, 216, 399, 403, 405, 409, 430, 437, 441, 447, 448, 449, 450, 452, 456, 458, 461, 463], "mimic": [100, 167, 449], "min": [302, 350, 397, 405, 406, 415, 425, 426, 429, 430, 436, 437, 440, 442, 453, 457, 462], "min_cardin": [34, 44, 51, 449], "min_nonzero": 222, "min_target": 460, "mind": [423, 459], "miniconda": 442, "minim": [6, 302, 425, 436, 437, 442, 449, 456, 460], "minimum": [34, 44, 51, 61, 78, 154, 214, 216, 222, 442, 449], "minimumcardinalityviolatedwarn": [442, 449], "minor": 442, "mirror": [13, 16, 448, 457], "miss": [245, 247, 400, 442, 443], "mistak": 443, "mix": [251, 420, 421, 440, 449, 454, 457, 461], "mixin": 239, "mixtur": [205, 438, 442, 449, 454, 455, 461, 463], "mobil": 442, "mode": [31, 119, 146, 157, 186, 245, 254, 256, 257, 258, 261, 263, 267, 281, 283, 285, 287, 302, 305, 308, 331, 349, 396, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 414, 415, 417, 418, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 448, 453, 455, 457, 462], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 76, 79, 95, 99, 100, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 254, 256, 258, 259, 260, 261, 262, 263, 267, 281, 283, 285, 287, 291, 293, 294, 372, 405, 406, 416, 426, 436, 437, 440, 442, 444, 446, 447, 448, 449, 453, 454, 455, 457, 458, 460, 461, 462], "model_cl": 294, "model_cluster_num_parameter_nam": [205, 206, 207, 208], "model_from_config": 417, "model_from_python": 417, "model_init": 293, "model_json": 417, "model_param": [205, 206, 207, 208, 281, 285, 287, 418, 442], "modellist": 261, "modelnottrainederror": [254, 256, 258, 263, 267, 281, 283, 285, 287], "modif": [441, 445], "modifi": [187, 247, 291, 349, 350, 351, 442, 445, 463], "modul": [0, 1, 32, 91, 92, 100, 120, 137, 155, 167, 178, 181, 191, 194, 201, 212, 230, 231, 243, 252, 255, 265, 272, 295, 298, 315, 319, 370, 386, 389, 440, 441, 442, 443], "modular": 443, "molecul": [55, 157, 342, 420, 454], "molecular": [343, 454], "moment": [251, 277, 443], "monitor": [442, 450], "monkeypatch": 441, "mont": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 80, 249, 397, 399, 400, 414, 423, 436, 437, 442, 447, 458], "monte_carlo_run": [249, 414], "mordr": [151, 157, 398, 399, 400, 402, 403, 409, 414, 418, 420, 433, 434, 440, 442, 449, 454], "mordredcommun": 442, "mordredfingerprint": [151, 454], "more": [8, 10, 57, 65, 83, 157, 186, 187, 214, 216, 222, 229, 245, 291, 310, 313, 337, 347, 362, 400, 403, 415, 420, 421, 436, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 454, 456, 457, 458, 459, 460, 463], "morgan": 454, "morgan_fp": [151, 442], "mors": 151, "morsefingerprint": 151, "most": [222, 245, 401, 423, 440, 443, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 463], "motiv": 442, "move": [13, 16, 159, 442, 457], "mpl_toolkit": 415, "mplot3d": 415, "mqn": 151, "mqnsfingerprint": 151, "mse": 423, "mu": [175, 176], "much": [399, 453, 454], "multi": [131, 253, 254, 256, 258, 261, 263, 267, 281, 283, 285, 287, 426, 438, 440, 442, 444, 447, 461, 462], "multiarmedbandit": 423, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 40, 122, 127, 132, 134, 248, 249, 254, 256, 258, 261, 263, 267, 281, 283, 285, 287, 351, 398, 399, 400, 409, 420, 423, 440, 442, 447, 449, 453, 459, 460, 461, 462], "multipli": 116, "multitask": 442, "must": [53, 122, 127, 132, 134, 216, 222, 247, 251, 333, 351, 394, 403, 413, 414, 420, 423, 425, 442, 443, 445, 446, 449, 450, 451, 453, 454, 458], "mutual": 458, "my_attribut": 443, "my_valu": 450, "mypi": [323, 334, 440, 442, 443], "mystr": 443, "n": [26, 254, 318, 338, 382, 398, 399, 400, 402, 403, 408, 409, 410, 411, 418, 420, 423, 425, 429, 430, 432], "n_arm": 423, "n_batches_don": 31, "n_cluster": [206, 207], "n_combin": 420, "n_combinations_actu": 420, "n_combinations_expect": 420, "n_compon": 205, "n_doe_iter": [245, 249, 251, 397, 398, 399, 400, 414, 415, 436, 437, 458], "n_duplic": 420, "n_estim": 418, "n_fits_don": 31, "n_grid_point": 426, "n_inactive_parameter_combin": [44, 214, 442], "n_interrupted_campaign": 414, "n_iter": [405, 406, 408, 409, 410, 411, 423, 425], "n_mc_iter": [249, 251, 397, 399, 400, 414, 436, 437, 458], "n_mc_run": 423, "n_mc_sampl": 21, "n_output": [122, 127, 132, 134, 442], "n_permut": 420, "n_pis_ov": 414, "n_pis_over_requir": 414, "n_point": [214, 383], "n_raw_sampl": [198, 442, 455], "n_restart": [198, 442, 455], "n_row": 353, "n_sampl": 382, "n_task": 216, "n_task_param": 442, "n_training_data": 426, "n_wrong_sum": 420, "nactivevalu": [408, 409, 410, 411, 425, 432], "naiv": [190, 283, 291, 403, 442, 456], "naivehybridrecommend": 442, "naivehybridspacerecommend": [430, 442, 455], "nake": [313, 450], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 44, 65, 86, 136, 139, 140, 141, 143, 144, 146, 153, 154, 157, 160, 162, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 228, 237, 249, 261, 263, 297, 299, 305, 317, 325, 331, 332, 333, 342, 343, 347, 349, 354, 358, 359, 373, 388, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 421, 423, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 440, 442, 443, 445, 447, 448, 449, 450, 453, 456, 457, 458, 459, 460, 461, 463], "name_or_abbr": [325, 332], "namedtupl": 423, "namespac": [199, 442, 443], "nan": [165, 254, 390, 392, 393, 394, 395, 408, 409, 410, 411, 425, 432], "nativ": [417, 442, 459], "natur": [285, 399, 443, 449, 455, 457, 460], "navig": [440, 448], "nbase": 343, "nbviewer": 417, "nd": 440, "ndarrai": [13, 16, 128, 161, 307, 308, 309, 352, 361, 365, 376, 382, 415, 423, 426, 442, 458], "ne": 420, "nearli": 460, "necessari": [359, 413, 442, 443, 448, 449, 453, 454, 456, 458, 459], "necessarili": [445, 448, 449, 456, 461], "need": [26, 31, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 251, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 333, 358, 359, 398, 399, 400, 403, 408, 411, 413, 415, 417, 420, 423, 425, 436, 437, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 463], "neg": [15, 426, 442, 449], "negat": [6, 45, 437, 442, 461], "neglig": 445, "neither": [8, 251, 351], "neq": 34, "nest": [347, 448, 462], "neural": 461, "neurip": 461, "neutral": 8, "never": 410, "nevertheless": [337, 441], "new": [31, 47, 48, 119, 186, 188, 214, 247, 262, 307, 308, 309, 317, 356, 357, 402, 414, 415, 432, 440, 442, 443, 448, 449, 459, 461], "new_measur": 452, "new_rec": 448, "newli": [440, 443, 450, 451, 461], "next": [31, 397, 413, 415, 420, 421, 426, 432, 436, 437, 440, 446, 447, 448, 455, 457], "ngboost": [285, 403, 442], "ngboostmodel": 418, "ngboostsurrog": [403, 418, 459], "nice": [415, 441], "nicknam": 342, "nintern": 425, "no_duplicates_constraint": 420, "no_grad": 415, "no_tl": 436, "nois": [245, 350, 351, 437, 442, 462], "noise_level": 351, "noise_perc": [245, 249, 458], "noise_ratio": 350, "noise_std": [436, 437], "noise_typ": 351, "noisi": [13, 14, 16, 17, 353, 436, 440, 442, 461], "non": [64, 65, 94, 122, 127, 132, 134, 183, 185, 186, 187, 188, 190, 216, 245, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 331, 333, 337, 350, 383, 390, 391, 392, 394, 395, 420, 436, 440, 442, 445, 447, 449, 451, 452, 456, 457], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 42, 47, 48, 57, 63, 64, 65, 81, 86, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 117, 119, 127, 132, 134, 136, 140, 143, 144, 146, 153, 154, 157, 160, 164, 165, 166, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 219, 222, 225, 228, 229, 232, 233, 235, 237, 245, 247, 249, 251, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 293, 294, 299, 305, 313, 314, 321, 322, 333, 343, 349, 354, 355, 356, 360, 365, 366, 385, 390, 391, 392, 393, 394, 395, 403, 408, 409, 410, 411, 413, 414, 415, 417, 418, 425, 432, 456, 460, 462], "nonetheless": 461, "nonlinear": [37, 214], "nonpredict": [203, 205, 206, 207, 208, 210, 211], "nonpredictiverecommend": [208, 210, 211, 442], "nonzero": [34, 44, 222, 442], "noqa": [408, 443], "nor": [8, 351, 439], "norecommenderslefterror": [186, 187], "noreturn": [190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 264], "normal": [174, 175, 176, 408, 410, 411, 425, 441, 445, 453, 456], "normaliz": 453, "normalprior": 442, "not_a_param": 418, "notabl": [442, 451, 459], "note": [34, 44, 57, 216, 245, 249, 251, 262, 263, 349, 350, 351, 398, 399, 400, 403, 409, 413, 417, 418, 420, 425, 429, 430, 432, 433, 434, 439, 440, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 461], "notebook": 417, "noteworthi": 448, "noth": [15, 31, 34, 42, 44, 45, 51, 84, 127, 157, 188, 190, 196, 198, 205, 206, 207, 208, 214, 216, 222, 254, 267, 281, 285, 287, 305, 445, 454], "notic": [413, 443, 445, 457, 459], "notimplementederror": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 128, 159, 229, 232, 233, 251, 254, 256, 258, 262, 263, 267, 281, 283, 285, 287], "notwithstand": 445, "now": [397, 398, 399, 400, 402, 403, 408, 410, 413, 414, 415, 420, 421, 423, 425, 426, 428, 432, 433, 436, 437, 439, 440, 442, 461, 463], "np": [128, 405, 406, 408, 409, 410, 411, 415, 417, 418, 420, 421, 423, 426, 428, 429, 430, 432, 436, 437, 449, 454, 458, 463], "nrecommend": [402, 403, 425, 429, 430], "nu": 107, "num": [357, 369], "num_disc_1": [425, 448], "num_disc_2": 425, "num_experi": [245, 397, 398, 399, 400, 414, 436, 437], "num_fantasi": 10, "num_parameter_1": 411, "num_parameter_2": 411, "num_parameter_3": 411, "num_parameter_4": 411, "num_parameter_5": 411, "num_parameter_6": 411, "num_sampl": 112, "num_valu": 456, "number": [10, 15, 21, 31, 44, 112, 122, 127, 132, 134, 157, 180, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 245, 249, 251, 254, 353, 360, 365, 369, 377, 382, 383, 398, 399, 400, 405, 406, 408, 409, 410, 411, 415, 420, 423, 429, 436, 437, 440, 441, 442, 446, 448, 449, 450, 453, 454, 456, 457, 458, 463], "numer": [13, 16, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 85, 139, 140, 141, 143, 144, 146, 153, 154, 157, 161, 214, 222, 247, 305, 350, 351, 358, 383, 394, 395, 397, 402, 405, 420, 421, 440, 442, 449, 450, 452, 453, 454, 456, 458, 460], "numerical_measurements_must_be_within_toler": [31, 394, 442, 448], "numerical_onli": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "numericalcontinuousparamet": [45, 63, 159, 214, 397, 405, 406, 421, 426, 428, 430, 437, 456, 458, 462], "numericaldiscreteparamet": [222, 398, 399, 400, 402, 403, 405, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 425, 429, 430, 432, 433, 434, 436, 437, 440, 456, 457, 458, 462, 463], "numericaltarget": [247, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 414, 415, 417, 418, 425, 426, 429, 430, 432, 433, 434, 436, 437, 440, 442, 453, 457, 458, 462], "numericcontinu": 430, "numparam1": 411, "numparam2": 411, "numparam3": 411, "numparam4": 411, "numparam5": 411, "numparam6": 411, "numpi": [161, 352, 361, 365, 371, 373, 405, 406, 408, 409, 410, 411, 415, 417, 418, 420, 421, 423, 426, 428, 429, 430, 432, 436, 437, 442, 449, 458, 463], "nuniqu": 420, "nyou": [429, 430], "o": [397, 398, 399, 400, 402, 403, 406, 408, 409, 410, 411, 414, 415, 418, 420, 423, 426, 436, 437, 440, 449, 450, 454], "o2": [398, 399, 400], "obj": [164, 165, 166, 233], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 127, 130, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 160, 161, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 222, 223, 224, 233, 234, 237, 239, 254, 256, 258, 259, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 320, 323, 331, 333, 351, 358, 359, 362, 365, 385, 397, 402, 413, 414, 415, 417, 418, 423, 426, 428, 430, 433, 434, 441, 442, 443, 445, 449, 451, 452, 455, 456, 458, 459, 460, 462, 463], "objective_json": 457, "oblig": 445, "observ": [243, 254, 256, 258, 263, 267, 281, 283, 285, 287, 423, 458, 460], "obsolet": 442, "obtain": [245, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 399, 415, 423, 426, 437, 440, 442, 448, 452, 453, 457, 461], "oc": [398, 399, 400, 402, 403], "oc1": [398, 399, 400], "occur": [56, 443], "occurr": 449, "octanol": [449, 454], "off": [8, 251, 338, 409, 440, 442, 449, 450, 453, 460], "offer": [333, 415, 420, 423, 429, 439, 440, 441, 445, 446, 451, 454, 455, 457, 458, 459, 461, 463], "offset": [45, 110], "offset_initial_valu": 110, "offset_prior": 110, "often": [421, 423, 441, 446, 449, 450, 451, 452, 454, 457, 463], "oftentim": [457, 458], "oh": [143, 148, 399, 409, 418, 423, 425, 432, 433, 434, 440, 456, 457], "ok": 425, "old": 461, "omit": [13, 16, 196, 198, 249, 333, 413, 440, 456, 457], "onc": [249, 414, 454, 458], "one": [13, 16, 21, 63, 65, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 159, 160, 161, 171, 180, 181, 186, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 216, 229, 247, 267, 291, 317, 318, 347, 353, 398, 399, 400, 403, 405, 420, 423, 425, 434, 436, 437, 439, 440, 441, 442, 443, 445, 447, 448, 449, 451, 453, 454, 456, 457, 458, 459, 460, 461], "onehot": 399, "ones": [216, 313, 358, 399, 430, 442, 447, 461], "ongo": [414, 461], "onli": [10, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 95, 107, 122, 127, 132, 134, 157, 216, 222, 247, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 291, 313, 314, 333, 334, 337, 347, 349, 358, 365, 382, 383, 398, 403, 408, 409, 414, 415, 417, 418, 420, 429, 430, 437, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 463], "onlin": 423, "onnx": [262, 263, 372, 416, 440, 442, 459], "onnx_input_nam": [263, 417], "onnx_str": [263, 417], "onto": [13, 16, 443], "open": [31, 44, 159, 161, 254, 256, 258, 263, 267, 281, 283, 285, 287, 440, 443], "opentelemetri": [440, 442, 450], "oper": [42, 45, 54, 235, 254, 256, 258, 263, 267, 281, 283, 285, 287, 291, 352, 370, 405, 406, 410, 411, 420, 421, 441, 442, 447, 449, 450, 451, 452, 455, 457], "operator_convert": 417, "opposit": 449, "opt": [440, 450], "optim": [12, 21, 31, 44, 45, 75, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 243, 245, 249, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 349, 399, 401, 402, 405, 406, 414, 415, 420, 423, 425, 430, 442, 444, 446, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461], "optimize_acqf": [45, 198], "optimize_acqf_": 45, "optimize_acqf_discret": 198, "optimize_acqf_mix": 198, "option": [31, 86, 91, 95, 106, 107, 108, 109, 110, 111, 112, 113, 117, 127, 132, 134, 140, 143, 144, 146, 154, 157, 160, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 235, 237, 245, 249, 251, 281, 285, 287, 293, 299, 305, 333, 343, 349, 354, 355, 356, 400, 403, 417, 418, 423, 441, 442, 443, 446, 448, 449, 451, 452, 453, 456, 457, 458, 459, 460, 463], "oracl": 458, "orchestr": [443, 448], "order": [216, 222, 414, 423, 439, 440, 442, 443, 448, 449, 454, 457, 461], "ordin": 460, "org": [279, 323, 356, 417, 440, 445], "organ": 443, "origin": [26, 31, 159, 317, 318, 328, 352, 432, 439, 442, 443, 445, 455, 457, 459], "orthogon": 443, "oserror": 441, "other": [53, 114, 159, 214, 318, 398, 400, 402, 403, 405, 406, 414, 421, 423, 430, 436, 437, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 463], "otherwis": [45, 61, 139, 140, 141, 143, 144, 146, 153, 154, 157, 445, 446, 451, 453, 461], "our": [397, 408, 410, 413, 414, 415, 418, 420, 421, 423, 426, 428, 429, 430, 433, 434, 436, 437, 440, 443, 446, 448, 449, 451, 457, 458], "out": [222, 425, 437, 440, 445, 450, 453, 458, 461], "out_par": 426, "out_y0": 426, "out_y1": 426, "outcom": [180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 399, 440, 454, 460], "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 117, 122, 127, 132, 134, 254, 256, 258, 263, 267, 281, 283, 285, 287, 351, 352, 353, 397, 426, 436, 437, 441, 442, 444, 458, 462], "output_label": 352, "outputscal": 117, "outputscale_initial_valu": 117, "outputscale_prior": 117, "outsid": [31, 159, 187, 254, 256, 258, 263, 267, 281, 283, 285, 287, 291, 308, 309, 349, 425, 442, 457], "outstand": 445, "over": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 214, 420, 439, 442, 446, 448, 451, 461], "overal": [216, 417, 418, 420, 421, 423, 442, 443, 448, 453, 461], "overlap": [64, 65, 159, 405, 406, 449], "overrid": [235, 237, 413, 442], "overridden": [413, 443], "overview": [440, 457], "overwritten": 430, "own": [190, 397, 421, 440, 441, 442, 443, 445, 449, 454], "owner": 445, "ownership": 445, "p": [397, 398, 399, 400, 402, 403, 405, 406, 413, 415, 429, 436, 437, 443, 451, 452, 459, 463], "p1": [456, 457, 458], "p1_json": 457, "p1_via_json": 457, "p2": [456, 457, 458], "p2_json": 457, "p2_via_json": 457, "p3c4": [398, 399, 400], "p_cont": 456, "p_disc": 456, "p_g1_amount": 421, "p_g2_amount": 421, "p_g3_amount": 421, "p_i": 34, "pack": 457, "packag": [95, 151, 311, 441, 442, 443, 454, 458, 459, 463], "page": [417, 440, 442, 443, 451], "pair": [317, 426, 440, 454], "pam": 207, "pamclusteringrecommend": 455, "panda": [52, 223, 241, 242, 247, 342, 361, 397, 398, 399, 400, 405, 406, 408, 414, 415, 420, 421, 425, 426, 429, 430, 436, 437, 442, 449, 450, 454, 456, 457, 458], "panic": 439, "paper": 461, "paper_fil": 461, "parallel": 443, "param": [416, 418, 438], "param1": [456, 458], "param2": [456, 458], "param_bounds_comp": 442, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 68, 83, 87, 95, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 128, 132, 134, 139, 140, 143, 144, 146, 148, 149, 150, 151, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 218, 221, 222, 223, 224, 227, 228, 229, 235, 237, 239, 243, 245, 247, 249, 251, 254, 256, 258, 261, 263, 267, 270, 277, 279, 281, 283, 285, 287, 289, 291, 293, 294, 297, 299, 305, 307, 308, 309, 313, 314, 317, 318, 326, 327, 328, 331, 333, 336, 337, 338, 341, 342, 343, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 369, 374, 375, 376, 378, 379, 382, 383, 385, 394, 395, 397, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 423, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 440, 442, 443, 449, 450, 451, 453, 457, 458, 459, 461, 462], "parameter": [171, 172, 173, 174, 175, 176, 177], "parameter_json": 457, "parameter_nam": [214, 216, 222, 430], "parameter_names_in_cardinality_constraint": 214, "parameterencod": [140, 148, 149, 151, 154], "parametr": 449, "parent": 443, "pareto": [12, 132, 424, 438, 440, 442, 453], "paretoobject": [426, 440, 442, 462], "pars": [367, 442], "parser": 442, "part": [15, 26, 31, 40, 73, 191, 214, 216, 222, 349, 395, 418, 430, 433, 434, 436, 437, 442, 443, 445, 446, 447, 448, 449, 454, 455, 456, 457, 463], "parti": [445, 458], "partial": [26, 414, 462], "particl": 461, "particular": [31, 222, 243, 413, 426, 430, 439, 440, 441, 443, 445, 448, 453, 454, 456, 457, 458], "particularli": [333, 448], "partit": [207, 249, 251, 442, 455, 458], "partitionexplain": [93, 96], "pass": [31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 95, 157, 205, 206, 207, 208, 216, 222, 233, 267, 281, 285, 287, 353, 359, 420, 432, 437, 442, 443, 447, 451, 452, 453, 454, 457], "passthrough": [28, 123, 218, 271], "patch": 414, "patent": 445, "path": [86, 399, 420, 442, 443, 450, 463], "pattern": [151, 443, 461], "patternfingerprint": 151, "pd": [3, 31, 247, 261, 317, 318, 357, 397, 398, 399, 400, 405, 406, 408, 414, 415, 420, 421, 425, 426, 429, 430, 436, 437, 442, 449, 451, 454, 456, 457, 458], "pdf": 461, "peek": 457, "pend": [26, 31, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 440, 442, 462], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 442, 447, 448], "per": [245, 261, 398, 399, 400, 403, 420, 425, 429, 436, 437, 442, 454, 456, 458], "percent": [245, 445], "percentag": [198, 313, 351, 403, 408, 409, 410, 411, 420, 425, 432, 437, 455], "perf_count": 413, "perfectli": 457, "perform": [198, 245, 313, 358, 399, 408, 409, 410, 411, 415, 420, 433, 436, 437, 439, 440, 442, 443, 445, 446, 448, 450, 452, 454, 455, 458, 459, 461], "period": 108, "period_length_initial_valu": 108, "period_length_prior": 108, "periodickernel": 442, "perm_inv_constraint": 420, "perman": 462, "permiss": [440, 445], "permut": [53, 56, 57, 318, 442, 449], "permutation_invari": 53, "permutationexplain": [93, 96], "perpetu": 445, "persist": [442, 444, 448, 450, 457, 459], "perspect": 457, "pertain": 445, "pharmacophor": 151, "pharmacophorefingerprint": 151, "phase": [188, 421], "phaseagent1": 421, "phaseagent2": 421, "phcpho": [398, 399, 400, 402, 403], "phenomenon": 448, "philosophi": 457, "physic": [452, 458], "physiochemicalproperti": 151, "physiochemicalpropertiesfingerprint": 151, "pi": [7, 403, 414, 415], "pi_max": 415, "pi_per_iter": 415, "pi_required_fract": 414, "pi_threshold": 414, "pickl": 442, "pictur": 440, "piec": [423, 440, 448, 449], "piecewis": 109, "piecewisepolynomialkernel": 442, "pin": [26, 442], "pin_discret": 26, "pinned_part": 26, "pip": [440, 442, 443, 452, 463], "pipelin": [436, 437, 442, 443], "pival": [398, 399, 400, 402, 403], "pl": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "place": [13, 16, 34, 247, 349, 350, 351, 417, 418, 420, 423, 441, 442, 443, 445, 448, 451, 454, 457, 461], "placehold": 320, "plai": [448, 452, 460], "plain": 271, "plainkernelfactori": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 267], "plan": [262, 451, 454], "platt": 461, "pleas": [417, 418, 440, 446, 452, 455], "plenti": 452, "plot": [95, 97, 245, 398, 400, 426, 437, 442, 459, 461, 462], "plot_abegin_convert_pipelin": 372, "plot_ebegin_float_doubl": 372, "plot_typ": 95, "plt": [398, 400, 415, 426], "plu": [247, 440], "plugin": 442, "pm": [5, 403], "png": [398, 400], "po16": 454, "poetri": 442, "point": [6, 13, 15, 16, 21, 26, 30, 31, 95, 154, 159, 180, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 358, 371, 372, 380, 381, 382, 383, 387, 398, 402, 403, 414, 421, 426, 429, 430, 436, 437, 439, 440, 442, 444, 446, 447, 448, 451, 452, 453, 455, 456, 462, 463], "points_per_dim": [415, 429, 430, 436, 437], "polar": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 224, 440, 442, 444, 462, 463], "poli": 415, "polici": 423, "polycollect": 415, "polym": 454, "polynomi": [109, 110], "polynomialkernel": 442, "polytop": 442, "popul": 420, "popular": [452, 454, 459], "posit": [13, 16, 95, 333, 382, 442, 449, 452, 453], "possibl": [31, 44, 160, 214, 222, 223, 224, 243, 333, 349, 400, 414, 415, 420, 425, 440, 442, 445, 448, 449, 450, 451, 454, 455, 456, 457, 458, 460, 461, 463], "possibli": 448, "post": [453, 454], "post_hook": [333, 413, 414, 415], "posterior": [5, 6, 15, 18, 21, 31, 254, 256, 258, 261, 263, 267, 281, 283, 285, 287, 290, 403, 442, 446, 459], "posterior_mean": [254, 423], "posterior_mod": 254, "posterior_stat": [31, 254, 256, 258, 261, 263, 267, 281, 283, 285, 287, 442, 448], "posteriorlist": 261, "posteriorstandarddevi": [423, 446], "postprocess": 342, "potassium": [398, 399, 400, 402, 403], "potenti": [216, 440, 441, 442, 443, 448, 449, 452, 453, 456, 463], "power": [110, 445, 449, 455], "pph3": [398, 399, 400], "pr": [442, 443], "practic": [446, 452, 455], "pre": [160, 186, 270, 416, 441, 442, 443], "pre_hook": [333, 413], "precis": [57, 186, 214, 313, 360, 372, 373, 388, 442, 462], "precomput": 146, "predefin": [448, 455], "predict": [31, 79, 208, 254, 256, 258, 263, 267, 281, 283, 285, 287, 440, 442, 446, 447, 453, 458, 459, 461, 462], "predictor": 289, "prefer": [31, 445, 451, 453, 457], "prefix": 343, "preliminari": 461, "prepar": [415, 443, 445, 463], "preprocess": 442, "presenc": [198, 441, 442], "present": [72, 95, 122, 127, 132, 134, 216, 317, 318, 333, 402, 423, 442, 449, 458, 463], "preset": [267, 274, 277, 279, 442], "pressur": [410, 417, 418, 432, 433, 434, 440, 449], "pretrain": [263, 416, 438], "pretti": 360, "pretty_print_df": [420, 442], "prevent": [159, 232, 233, 333, 441, 442, 443], "previou": [186, 414, 415, 442, 448, 450, 461], "previous": [313, 398, 399, 400, 402, 410, 447, 448], "price": 454, "primari": 448, "primarili": 446, "principl": [420, 423, 459], "print": [247, 347, 360, 398, 399, 400, 402, 403, 405, 406, 410, 413, 417, 418, 420, 421, 423, 428, 429, 430, 432, 433, 434, 440, 442, 456, 463], "print_parameter_names_hook": 413, "printer_inst": 413, "prior": [106, 107, 108, 109, 110, 111, 112, 113, 117, 171, 172, 173, 174, 175, 176, 177, 254, 277, 411, 440, 441, 442], "priori": [449, 457, 461], "privat": [442, 444], "probabilist": 446, "probability_of_improv": 415, "probabilityofimprov": [414, 415], "probabl": [7, 19, 21, 403, 412, 414, 438, 442], "problem": [75, 420, 421, 423, 436, 437, 442, 443, 448, 453, 457], "problemat": [337, 441, 454], "proce": [245, 402, 450], "procedur": [446, 461], "proceed": 461, "process": [31, 100, 265, 266, 267, 268, 272, 273, 274, 276, 277, 278, 279, 357, 382, 403, 413, 420, 423, 436, 437, 442, 443, 446, 447, 448, 449, 450, 451, 453, 454, 457, 461], "prod": 411, "prod_constraint": 411, "prod_i": 453, "produc": [122, 127, 128, 132, 134, 247, 440, 442, 443, 450, 458], "product": [58, 116, 216, 222, 223, 224, 329, 407, 438, 440, 442, 445, 449, 451, 462, 463], "product_paramet": [222, 420, 456], "productkernel": 442, "programmat": 420, "progress": [31, 184, 415, 442, 451], "prohibit": 446, "project": [415, 440, 442, 450], "promin": 445, "promis": [414, 447], "proper": 442, "properli": [26, 425, 441, 456], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 130, 132, 134, 139, 140, 141, 143, 144, 146, 148, 149, 151, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 217, 221, 222, 254, 256, 258, 261, 263, 267, 270, 274, 277, 279, 281, 283, 285, 287, 297, 299, 302, 303, 305, 322, 323, 365, 381, 385, 442, 443, 449, 451, 454], "proport": 437, "propos": 448, "protobuf": 442, "protocol": [179, 180, 259, 269, 337, 442], "prototyp": 444, "provid": [13, 15, 16, 31, 45, 95, 99, 128, 146, 157, 160, 180, 186, 187, 190, 191, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 235, 239, 243, 245, 247, 249, 251, 254, 256, 258, 263, 267, 277, 279, 281, 283, 285, 287, 317, 329, 333, 345, 350, 351, 356, 359, 361, 382, 383, 397, 398, 399, 400, 413, 420, 426, 428, 429, 430, 433, 436, 437, 440, 442, 443, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "prune": [12, 13, 14, 16, 17], "prune_baselin": [12, 13, 14, 16, 17], "pstd": [6, 442, 446], "pubchem": 151, "pubchemfingerprint": 151, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 130, 132, 134, 139, 140, 141, 143, 144, 146, 148, 149, 151, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 217, 221, 222, 239, 254, 256, 258, 259, 261, 263, 267, 269, 270, 274, 277, 279, 281, 283, 285, 287, 297, 299, 302, 303, 305, 320, 322, 323, 365, 381, 385, 442, 443], "publicli": 445, "publish": 442, "pull": [423, 442], "punish": 8, "pure": [8, 10, 15, 181, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 216, 251, 262, 383, 429, 442, 462], "purerecommend": [183, 185, 186, 187, 188, 190, 196, 203, 442], "purpl": 426, "purpos": [15, 413, 414, 417, 423, 440, 441, 443, 445, 451, 457, 463], "push": [44, 443], "put": [420, 423, 450, 454], "puzzl": 440, "py": [279, 408, 410, 411, 442, 450], "py312": 443, "pyarrow": 442, "pydant": 442, "pydoclint": [442, 443], "pydocstyl": 443, "pylint": 442, "pymatgen": 441, "pypi": [440, 442], "pyplot": [398, 400, 415, 426], "pyproject": 442, "pytest": [442, 443], "python": [30, 323, 334, 399, 418, 433, 434, 440, 441, 442, 443, 448, 450, 457], "python310": 441, "pytorch": 442, "pyupgrad": 442, "q": [109, 289, 290, 403, 447], "qei": [9, 403, 433, 434, 442], "qkg": [10, 442], "qlogei": [11, 403, 442], "qlogexpectedimprov": 403, "qlognehvi": [13, 16], "qlognei": [14, 442], "qlognoisyexpectedhypervolumeimprov": [442, 453], "qlognparego": 442, "qnegintegratedposteriorvari": 446, "qnehvi": 16, "qnei": [17, 442], "qnipv": [15, 442, 446], "qnoisyexpectedhypervolumeimprov": 442, "qpi": [19, 403], "qposteriorstandarddevi": 446, "qpstd": [18, 442, 446], "qsimpleregret": 21, "qsr": [20, 442], "qt": 21, "qthompsonsampl": [423, 442], "quadrat": [113, 397, 426], "qualiti": 443, "quantif": 461, "quantifi": [423, 446, 461], "quantil": [31, 254, 256, 257, 258, 263, 267, 281, 283, 285, 287, 448], "quantiti": [31, 55, 448, 450, 452, 453, 459, 463], "quantum": 146, "qucb": [22, 403, 442, 446], "queri": [181, 191, 243, 245, 247, 426, 440, 448, 450, 451, 458], "question": [443, 448, 461], "quickli": 449, "qupperconfidencebound": 446, "qvarucb": 442, "r": [44, 398, 399, 400, 402, 403], "radial": 111, "radiu": [151, 442, 454], "rais": [13, 15, 16, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 95, 99, 128, 136, 159, 160, 165, 166, 186, 187, 196, 198, 214, 216, 222, 228, 229, 232, 233, 245, 247, 251, 254, 256, 258, 262, 263, 264, 267, 281, 283, 285, 287, 294, 318, 331, 333, 336, 338, 341, 345, 346, 347, 349, 350, 351, 353, 358, 359, 382, 383, 394, 395, 413, 414, 415, 430, 441, 442, 443, 447, 455], "rand": 417, "random": [15, 112, 214, 216, 245, 247, 249, 286, 287, 349, 381, 382, 383, 397, 398, 399, 400, 403, 414, 415, 417, 421, 423, 426, 437, 440, 442, 446, 454, 455, 458, 463], "random_campaign": 397, "random_forest": [287, 403], "random_se": [245, 249, 414, 458], "randomforestmodel": 418, "randomforestsurrog": [403, 442, 459], "randomli": [198, 211, 397, 399, 426, 446, 452, 455], "randomrecommend": [397, 398, 399, 400, 403, 408, 409, 410, 411, 413, 414, 415, 421, 423, 425, 442, 447, 455], "rang": [44, 139, 140, 141, 143, 144, 146, 153, 154, 157, 159, 297, 349, 350, 397, 405, 406, 408, 409, 410, 411, 415, 420, 423, 425, 428, 429, 430, 437, 440, 442, 449, 456, 457, 458, 460, 463], "rank": 460, "rare": 442, "rastrigin": [405, 406, 429, 430], "rate": [172, 254, 423], "rather": [432, 441, 446, 457], "ration": 113, "ravel": [426, 436, 437], "raw": [198, 457], "rbf": 111, "rbfkernel": 442, "rdf": 151, "rdffingerprint": 151, "rdkit": [151, 408, 410, 411, 442, 449, 454], "rdkit2ddescriptor": [151, 399, 408, 410, 411, 442], "rdkit2ddescriptorsfingerprint": 151, "rdkitfingerprint": 151, "re": [414, 429, 430, 443, 455], "reach": [307, 309, 425], "reachabl": 450, "reactant": [452, 454], "reaction": [399, 402, 440, 449, 452, 454, 461], "reactor": [447, 461], "reactora": 461, "reactorb": 461, "reactorc": 461, "read": [146, 216, 399, 402, 440, 442, 443], "read_excel": [398, 399, 400, 414], "readabl": [221, 360, 369, 432, 442, 444, 445, 457], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 245, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 443, 447], "readm": [442, 443], "reagent": [449, 454], "real": [365, 440, 448, 460], "realist": 458, "realiz": [243, 458], "reason": [42, 205, 206, 207, 208, 399, 429, 442, 445, 446, 447, 449, 450, 454, 458], "reassembl": 457, "rebas": 443, "rec": [408, 409, 410, 411, 425, 447, 448], "rec_finish": 447, "rec_next": 447, "rec_par": 426, "rec_pend": 447, "rec_y0": 426, "rec_y1": 426, "receiv": [445, 450, 457], "recip": 443, "recipi": 445, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 73, 82, 83, 95, 140, 143, 144, 146, 154, 157, 159, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 243, 245, 259, 261, 262, 313, 349, 351, 353, 397, 398, 399, 400, 401, 405, 406, 408, 409, 410, 411, 413, 414, 415, 421, 423, 425, 426, 433, 434, 436, 437, 438, 439, 440, 442, 443, 446, 450, 452, 454, 458, 459, 461, 462, 463], "recommendation_orig": 432, "recommendation_recr": 432, "recommended_arm_idx": 423, "recommender_with_hook": 414, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 95, 183, 185, 186, 187, 188, 193, 259, 261, 413, 415, 439, 442, 447], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 214, 216, 222, 239, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 365, 440, 448, 450, 457], "record": [31, 313, 314, 440, 450, 461], "recreat": [274, 432, 457], "recreate_model": 418, "recurs": [183, 185, 186, 187, 188, 326, 327], "red": 426, "redesign": 442, "redistribut": 445, "reduc": [157, 415, 423, 436, 437, 451, 454], "reduct": 462, "ref": 440, "refactor": 442, "refer": [13, 16, 243, 279, 332, 349, 358, 372, 398, 399, 400, 403, 405, 406, 408, 409, 410, 411, 413, 415, 417, 418, 420, 425, 429, 430, 432, 441, 442, 448, 452, 453, 454, 455, 456, 457, 458, 459, 461], "referenc": 443, "reference_point": [13, 16], "refin": [414, 440, 442, 448, 451], "reflect": [190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 415, 442, 443, 446, 449, 454], "regard": [34, 40, 405, 406, 443, 445], "regardless": 459, "regim": [442, 452], "region": 161, "regist": [333, 412, 414], "register_custom_architectur": 442, "register_hook": [412, 413, 414, 415, 442], "registr": 442, "regress": 281, "regressor": 417, "regret": [20, 21], "regroup": 442, "regular": [21, 159, 291, 428, 441, 442, 447, 461], "reinstal": 440, "rel": [13, 16, 44, 245, 350, 449, 453], "relat": [55, 122, 127, 129, 132, 134, 147, 216, 234, 301, 316, 430, 436, 437, 439, 440, 442, 448, 449, 450, 461], "relationship": [436, 437, 440, 443, 453, 461], "relative_perc": 351, "relative_threshold": [44, 442, 449], "releas": [440, 442], "relev": [53, 95, 247, 358, 359, 409, 420, 442, 443, 448, 449, 451, 461, 463], "reli": [441, 442, 453], "reliabl": 454, "reloc": 442, "remain": [56, 159, 188, 251, 308, 397, 403, 408, 409, 410, 411, 420, 423, 425, 430, 432, 436, 437, 445, 454, 457, 458], "remain_switch": [188, 442], "remaind": 383, "remind": 442, "remot": 443, "remov": [52, 55, 56, 216, 222, 420, 443, 449, 456], "renam": [399, 436, 437, 442, 443], "render": [95, 417], "reoccur": 461, "reorder": 442, "reorgan": 442, "repeat": [423, 442, 443, 447, 448], "repetit": [249, 403, 414], "rephras": 449, "replac": [429, 430, 442, 443], "replic": [254, 256, 258, 261, 263, 267, 281, 283, 285, 287, 442, 457, 462], "repo": 442, "report": [180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 423, 441], "repositori": [399, 440, 443], "repr": 417, "repres": [13, 16, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 115, 116, 146, 216, 251, 254, 256, 258, 261, 263, 267, 281, 283, 285, 287, 345, 361, 365, 369, 382, 397, 420, 421, 423, 426, 433, 434, 440, 442, 445, 448, 453, 454, 456, 458, 463], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 222, 239, 254, 256, 258, 259, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 338, 340, 345, 347, 349, 360, 365, 408, 409, 410, 411, 417, 419, 425, 432, 442, 447, 448, 454, 457, 458, 462, 463], "reproduc": [414, 423, 426, 442, 445, 462], "reproduct": 445, "request": [31, 82, 83, 128, 186, 187, 188, 229, 254, 256, 257, 258, 263, 267, 270, 281, 283, 285, 287, 311, 353, 382, 383, 426, 439, 442, 447, 448, 451], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 45, 51, 80, 188, 222, 294, 333, 402, 413, 414, 417, 421, 423, 425, 429, 433, 439, 440, 441, 442, 443, 445, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 463], "rerun": 417, "reserv": [440, 443], "reset_index": 436, "reshap": 426, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 409, 411, 420, 457], "resolv": 342, "resort": [291, 443, 457, 463], "resource_track": 441, "resp": [217, 400, 430], "respect": [31, 198, 217, 245, 249, 312, 317, 349, 420, 421, 443, 448, 449, 451, 452, 453, 457, 458, 459, 460, 463], "respond": 439, "respons": [183, 185, 186, 187, 188, 445, 448, 455], "restart": [186, 198], "restor": 457, "restr": 21, "restrain": 454, "restrict": [216, 222, 243, 249, 251, 408, 421, 442, 451, 458, 461, 462], "result": [10, 13, 16, 31, 157, 159, 222, 245, 254, 256, 258, 263, 267, 281, 283, 285, 287, 349, 357, 398, 399, 400, 402, 417, 418, 420, 421, 423, 425, 426, 428, 436, 437, 440, 442, 444, 445, 446, 448, 449, 450, 452, 454, 455, 457, 458, 461, 462, 463], "result_baselin": [436, 437], "result_fract": 437, "results_interrupt": 414, "results_uninterrupt": 414, "retain": [445, 449], "retrain": [262, 263, 459], "retriev": [216, 243, 325, 326, 327, 341, 443, 458], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 95, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 122, 123, 125, 127, 128, 132, 134, 136, 139, 140, 141, 143, 144, 146, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 200, 203, 205, 206, 207, 208, 210, 211, 214, 216, 218, 219, 222, 223, 224, 225, 227, 228, 229, 232, 233, 235, 236, 237, 239, 241, 242, 245, 247, 249, 251, 254, 256, 258, 259, 261, 263, 264, 267, 270, 271, 275, 281, 283, 285, 287, 289, 290, 291, 293, 294, 297, 299, 305, 307, 308, 309, 311, 312, 313, 314, 317, 318, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 369, 374, 375, 376, 382, 383, 385, 390, 391, 392, 393, 394, 395, 397, 408, 414, 415, 417, 420, 423, 426, 436, 442, 448, 449, 458, 459, 463], "return_std": 417, "reus": [188, 442], "reuse_last": 186, "reveal": [415, 421, 437], "review": 443, "revis": [442, 445], "reward": [8, 423], "rework": 442, "rewrit": 442, "rff": 112, "rffkernel": 442, "rh": [45, 47, 48, 405, 406, 421, 449], "right": [45, 177, 358, 365, 398, 400, 409, 423, 440, 441, 443, 445, 449, 451, 453, 454, 460], "right_df": 358, "rihana": 444, "rim": 444, "risk": [8, 441, 445, 448], "roam": 441, "robust": [440, 442, 461], "robustli": 291, "role": [442, 443, 448, 452, 453, 458, 460, 462], "room": [415, 448], "root": [399, 440, 443, 449], "round": [360, 405, 417, 418, 449], "roundtrip": [442, 457], "rout": 457, "routin": 44, "row": [13, 16, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 128, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 247, 313, 317, 318, 350, 353, 357, 358, 360, 376, 398, 400, 408, 409, 410, 411, 420, 421, 425, 432, 442, 448, 451, 456, 458], "rowei": 461, "roya": 444, "royalti": 445, "rq": 113, "rqkernel": 442, "ruff": [442, 443], "rule": [413, 442], "run": [245, 249, 398, 399, 400, 414, 415, 436, 437, 440, 441, 442, 443, 448, 451, 454, 457, 458, 463], "run_full_initial_data": 398, "run_impute_mod": 400, "runner": [408, 410, 411], "runtim": [372, 441], "runtimeerror": [31, 186, 413], "rv": 423, "s3": 442, "s41586": [279, 356], "safe": [442, 443, 448], "safeti": 333, "sai": 449, "said": 443, "sake": 420, "same": [55, 136, 188, 222, 228, 247, 254, 256, 258, 263, 267, 281, 283, 285, 287, 328, 403, 414, 417, 418, 420, 423, 426, 432, 441, 442, 449, 450, 451, 457, 458, 459, 461], "sampl": [10, 15, 21, 44, 198, 210, 211, 214, 314, 380, 381, 382, 383, 398, 403, 408, 409, 410, 411, 423, 425, 426, 428, 432, 437, 440, 442, 444, 452, 462], "sample_from_full_factori": [214, 442], "sample_inactive_paramet": 44, "sample_uniform": [214, 426, 428, 442, 458], "sampler": [403, 408, 409, 410, 411, 425, 432], "samples_full_factori": [214, 442], "samples_random": [214, 442], "sampling_algorithm": [381, 446], "sampling_fract": [15, 446], "sampling_method": [15, 446], "sampling_n_point": [15, 446], "sampling_percentag": [198, 455], "satisfi": [40, 41, 42, 222, 405, 406, 420], "save": [398, 400, 417, 442, 458], "savefig": [398, 400, 426], "sca": 426, "scalar": [12, 127, 425, 440, 442, 448, 453, 457], "scale": [117, 173, 174, 175, 176, 177, 214, 216, 222, 385, 425, 426, 436, 442, 446, 453], "scalekernel": 442, "scaler": 442, "scaling_bound": [214, 216, 222], "scatter": [95, 97], "scenario": [251, 397, 398, 399, 400, 414, 420, 436, 437, 447, 449, 453, 461, 462, 463], "scene": [453, 458, 459], "schema": 448, "schembl15068049": [398, 399, 400], "scheme": [442, 449], "scienc": [440, 444], "scientif": [442, 461], "scikit": [151, 440, 442, 444, 454], "scipi": [376, 415, 423, 442], "scm": 442, "scope": 397, "screen": [328, 461], "script": [342, 441, 442, 450, 463], "seaborn": [397, 398, 399, 400, 414, 436, 437], "seamlessli": 457, "search": [15, 26, 31, 38, 52, 55, 68, 73, 83, 87, 139, 140, 141, 143, 144, 146, 153, 154, 157, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 222, 226, 245, 249, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 313, 358, 359, 397, 400, 402, 404, 407, 408, 409, 410, 411, 413, 414, 415, 423, 425, 427, 432, 437, 442, 444, 447, 448, 449, 450, 451, 452, 455, 457, 458, 462], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 95, 139, 140, 141, 143, 144, 146, 153, 154, 157, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 217, 221, 222, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 397, 399, 402, 413, 414, 415, 417, 418, 420, 421, 423, 426, 428, 432, 433, 434, 436, 438, 440, 442, 448, 449, 450, 451, 452, 454, 456, 457, 458, 463], "searchspace1": 428, "searchspace2": 428, "searchspace3": 428, "searchspace_ful": 451, "searchspace_json": 457, "searchspace_reduc": 451, "searchspacetyp": [190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 216, 403, 408, 409, 410, 411, 414, 415, 425, 432, 456], "secfp": 151, "secfpfingerprint": 151, "second": [357, 374, 376, 417, 418, 425, 426, 434, 436, 449, 450, 452], "secondari": [440, 450], "section": [440, 442, 443, 445, 457], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 95, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 167, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 221, 222, 245, 249, 251, 254, 256, 258, 259, 261, 263, 267, 270, 277, 279, 281, 283, 285, 287, 297, 299, 305, 310, 331, 337, 351, 357, 362, 365, 385, 398, 399, 400, 405, 406, 413, 414, 418, 421, 430, 439, 440, 443, 448, 450, 451, 452, 453, 454, 457, 458, 462], "seed": [245, 249, 378, 379, 414, 415, 423, 426, 440, 442, 463], "seek": [425, 453], "seem": [372, 434, 441], "seen": 446, "select": [6, 40, 41, 42, 70, 74, 80, 183, 185, 186, 187, 188, 191, 198, 208, 210, 254, 256, 258, 263, 267, 281, 283, 285, 287, 308, 357, 382, 403, 409, 410, 420, 421, 423, 430, 440, 442, 446, 448, 449, 452, 454, 455, 457, 459], "select_recommend": [183, 185, 186, 187, 188, 442], "selectivity_mean": 448, "selectivity_mod": 448, "selectivity_q_0": 448, "selectivity_std": 448, "self": [333, 346, 390, 391, 392, 393, 413, 414, 415, 423, 443], "sell": 445, "semant": [442, 457], "sens": [57, 132, 333, 337, 357, 449, 454, 459], "sent": 445, "sentinel": [321, 322], "separ": [249, 251, 291, 331, 385, 386, 415, 439, 442, 443, 445, 457], "sequenc": [31, 41, 45, 115, 116, 127, 132, 143, 144, 146, 157, 165, 186, 187, 214, 216, 222, 223, 224, 227, 254, 256, 258, 261, 263, 267, 281, 283, 285, 287, 313, 317, 318, 333, 334, 343, 346, 352, 358, 359, 362, 376, 448, 453, 455], "sequenti": [185, 186, 187, 188, 198, 403, 408, 409, 410, 411, 425, 432, 442, 455], "sequential_continu": [198, 442, 455], "sequential_greedy_x": 442, "sequentialgreedyrecommend": 442, "sequentialmetarecommend": [187, 455], "sequentialstrategi": 442, "seri": [31, 40, 41, 42, 52, 140, 143, 144, 146, 154, 157, 297, 299, 305, 408, 420, 442, 449, 451], "serial": [187, 222, 239, 314, 417, 438, 441, 442, 443, 449, 455, 462], "serializ": [440, 449, 455], "serialize_datafram": 457, "serialized_df": 241, "serializetostr": 417, "serialmixin": [24, 31, 35, 40, 104, 122, 141, 169, 183, 214, 216, 222, 258, 261, 270, 297, 299, 305, 365, 442], "serv": [251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 358, 436, 437, 448, 449, 454], "servic": 445, "session": [263, 450, 457], "set": [13, 16, 31, 34, 42, 44, 55, 57, 64, 65, 95, 99, 157, 180, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 245, 249, 274, 312, 349, 356, 357, 378, 379, 398, 399, 400, 401, 403, 408, 410, 413, 418, 419, 420, 421, 423, 425, 430, 439, 440, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463], "set_box_aspect": 415, "set_dash": 414, "set_random_se": [415, 423, 426, 463], "set_size_inch": [398, 400], "set_x_pend": 26, "set_xlabel": 415, "set_xtick": 415, "set_xticklabel": 415, "set_ylabel": 415, "set_ylim": 415, "set_zlabel": 415, "setpoint": 154, "setup": [245, 414, 449, 458, 463], "sever": [63, 160, 181, 397, 399, 403, 414, 417, 423, 425, 428, 437, 440, 442, 443, 447, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461, 463], "sh": 452, "shall": [186, 351, 445, 453], "shap": [95, 440, 442, 444, 459, 462], "shap_valu": 459, "shape": [21, 214, 221, 303, 307, 309, 382, 426, 456, 463], "shapinsight": [93, 94, 96, 97, 442, 452], "shaplei": 95, "share": [254, 256, 258, 263, 267, 281, 283, 285, 287, 442, 445, 461], "shield": [279, 356, 399, 440, 454], "shift": 436, "shifted_hartmann": 436, "ship": [386, 450, 457], "shm": 441, "short": 443, "shortcut": [222, 456, 457], "shorten": [442, 443], "shot": 461, "should": [31, 44, 53, 95, 157, 188, 237, 249, 302, 317, 318, 349, 351, 355, 356, 360, 364, 365, 366, 374, 408, 410, 414, 417, 420, 421, 430, 434, 440, 442, 443, 447, 448, 449, 456, 458, 459, 461, 463], "show": [95, 398, 399, 400, 402, 403, 408, 409, 410, 417, 418, 420, 423, 430, 432, 433, 434, 436, 437, 449, 452], "showcas": 455, "shown": [414, 423, 437, 442, 448], "shrink": 415, "shutdown": 441, "side": [45, 159, 308, 442], "sigma": [174, 175, 176, 177, 307, 425, 444], "signal": [67, 453], "signatur": [89, 294, 331, 333, 415, 442, 443, 449, 457], "significantli": [222, 423, 436, 437, 449], "silenc": 443, "silent": [442, 449], "similar": [187, 441, 449, 450, 452, 454, 455, 456, 457, 461, 463], "similarli": [426, 454], "simpl": [20, 21, 323, 399, 413, 414, 421, 440, 442, 448, 455, 458, 460, 461], "simpler": [443, 457], "simplest": [456, 459], "simplex": [222, 462], "simplex_paramet": [222, 420, 456], "simpli": [337, 413, 414, 443, 449, 451, 453, 454, 455, 456, 457, 460, 461], "simplic": 333, "simplifi": 443, "simul": [84, 351, 410, 415, 440, 442, 461, 462], "simulate_experi": [249, 251, 458], "simulate_scenario": [251, 397, 398, 399, 400, 414, 436, 437, 458], "simulate_transfer_learn": [436, 458], "simulationresult": 423, "simultan": [453, 459], "sinc": [57, 159, 216, 262, 333, 398, 405, 406, 418, 429, 432, 433, 434, 436, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461], "singer": 461, "singl": [21, 31, 40, 53, 95, 119, 134, 159, 214, 216, 222, 245, 254, 256, 258, 261, 263, 267, 281, 283, 285, 287, 297, 299, 305, 347, 365, 373, 382, 388, 398, 399, 400, 409, 414, 420, 425, 436, 437, 440, 442, 448, 449, 450, 451, 452, 453, 454, 456, 459, 461, 462], "single_lin": 347, "single_y0": 426, "single_y1": 426, "singledispatch": 367, "singletargetobject": [31, 297, 299, 305, 398, 399, 400, 402, 403, 408, 409, 410, 411, 414, 417, 418, 432, 433, 434, 440, 442, 459, 462], "site": 441, "situat": [159, 408, 410, 420, 441, 443, 447, 449, 453, 454, 457, 458, 461], "six": [420, 421], "size": [21, 102, 103, 104, 107, 109, 111, 112, 113, 186, 188, 216, 221, 222, 314, 369, 415, 417, 423, 429, 430, 436, 437, 448, 457, 458, 461, 463], "sk": 417, "skeleton": 442, "skfp": 151, "skicit": 442, "skin": 458, "skip": [219, 225, 442, 448], "skl2onnx": 417, "sklearn": [208, 372, 417, 441], "sklearnclusteringrecommend": [205, 206, 207, 442, 447], "slightli": [243, 399, 420, 458], "slot": [419, 423, 438, 442, 449], "slot1_amount": 420, "slot1_label": 420, "slot2_amount": 420, "slot2_label": 420, "slot3_amount": 420, "slot3_label": 420, "slow": [408, 410, 411, 456], "slowest": 442, "small": [315, 319, 405, 420, 436, 437, 442, 446, 454], "smaller": [31, 423, 448, 461], "smallest": [214, 358, 456], "smart": 440, "smartli": 420, "smile": [157, 340, 342, 343, 440, 454], "smoke": 442, "smoke_test": [397, 398, 399, 400, 406, 408, 409, 411, 414, 415, 423, 426, 436, 437], "smooth": [107, 109, 177], "smoothedboxprior": 442, "smoother": 107, "sn": [397, 398, 399, 400, 414, 436, 437], "snippet": 450, "so": [31, 245, 262, 357, 400, 414, 420, 423, 429, 430, 440, 441, 448, 449, 450, 451, 453, 454, 455, 457, 460], "softwar": [440, 445], "sola": 444, "sole": 445, "solut": [75, 448, 449, 453, 456, 457, 461], "solv": [262, 409, 410, 420, 423], "solv_rdkit2ddesc": 410, "solvent": [398, 399, 400, 402, 403, 408, 409, 410, 411, 414, 418, 420, 421, 433, 434, 440, 449, 454], "solvent1": [420, 421], "solvent2": [420, 421], "solvent3": 420, "solvent4": 420, "solvent5": 420, "solvent8": 420, "solvent9": 420, "solvent_1": 449, "solvent_2": 449, "solvent_3": 449, "solvent_data": 414, "solvent_encoding1": 449, "solvent_encoding2": 449, "solvent_mordred_enc": 449, "solvent_rdkit2dd": [408, 411], "solvent_rdkit_enc": 449, "solvent_smil": 414, "solver": 458, "some": [53, 372, 398, 399, 400, 403, 408, 409, 410, 411, 414, 415, 417, 418, 420, 421, 426, 428, 429, 430, 432, 437, 447, 449, 450, 454, 455, 457, 458, 459, 463], "someth": [87, 434], "sometim": [449, 458], "somewhat": 450, "somewher": 448, "soon": [440, 448, 455], "sophist": [442, 451, 457], "sort": 162, "sourabh": 444, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 122, 123, 125, 127, 128, 130, 132, 134, 136, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 200, 203, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 235, 236, 237, 239, 241, 242, 245, 247, 249, 251, 254, 256, 258, 259, 261, 263, 264, 267, 269, 270, 271, 274, 275, 277, 279, 281, 283, 285, 287, 289, 290, 291, 293, 294, 297, 299, 302, 303, 305, 307, 308, 309, 311, 312, 313, 314, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 369, 374, 375, 376, 378, 379, 381, 382, 383, 385, 393, 394, 395, 440, 441, 442, 443, 445], "space": [10, 15, 25, 26, 31, 38, 45, 52, 55, 68, 73, 77, 83, 87, 139, 140, 141, 143, 144, 146, 153, 154, 157, 180, 189, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 222, 225, 226, 245, 249, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 313, 358, 382, 397, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 423, 425, 426, 427, 429, 432, 437, 438, 442, 444, 447, 449, 450, 451, 452, 454, 455, 457, 458, 462], "span": [61, 139, 140, 141, 143, 144, 146, 153, 154, 157, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 313, 413, 423, 428, 452], "speak": 461, "spec": [219, 225, 236], "special": [188, 440, 441, 445, 446, 451, 461, 463], "specif": [100, 160, 167, 208, 216, 219, 232, 249, 291, 325, 394, 413, 414, 429, 440, 443, 448, 449, 451, 454, 455, 456, 457, 458, 459, 460, 461], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 53, 88, 99, 146, 157, 159, 160, 161, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 235, 236, 245, 247, 249, 259, 307, 308, 309, 317, 332, 341, 349, 352, 358, 359, 382, 383, 399, 403, 405, 417, 418, 423, 425, 436, 440, 441, 442, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461], "speed": [222, 408, 410, 411, 436, 437, 450, 456], "speed_fast": 456, "speed_norm": 456, "speed_slow": 456, "speedup": [442, 461], "spell": 443, "spellcheck": 442, "sphinx": [442, 443], "split": [190, 447], "sporad": 442, "spread": 460, "sqrt": 449, "squar": [423, 426, 449], "squash": 443, "stabil": [442, 450], "stabl": [100, 167, 310], "stage": [448, 449, 457], "stand": 442, "standard": [6, 18, 291, 417, 442, 448, 454], "star": 420, "start": [245, 397, 413, 414, 415, 421, 423, 426, 441, 442, 447, 454, 455, 457, 458, 461], "startup": 442, "stat": [31, 254, 256, 258, 261, 263, 267, 281, 283, 285, 287, 311, 415, 421, 423, 448], "state": [183, 185, 186, 187, 188, 414, 420, 439, 442, 445, 448, 451], "stateless": [423, 439, 442, 451], "statement": [360, 429, 440, 445], "static": [13, 16, 216, 222, 267, 440, 443, 461], "statist": [31, 254, 256, 257, 258, 263, 267, 281, 283, 285, 287, 314, 437, 440, 442, 450, 462], "statu": 448, "std": [31, 254, 256, 257, 258, 261, 263, 267, 281, 283, 285, 287], "std_threshold": 291, "stem": [441, 461], "step": [219, 225, 245, 420, 423, 439, 440, 443, 448, 453, 457, 459], "sterl": 444, "steven": 399, "still": [160, 349, 414, 423, 447, 449, 450, 452, 454, 459, 461, 463], "stop": [412, 438, 442, 443], "stop_on_pi": 414, "stoppag": 445, "storag": [448, 450, 457], "store": [26, 141, 291, 297, 415, 420, 423, 440, 442, 448, 463], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 87, 95, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 128, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 160, 161, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 196, 198, 205, 206, 207, 208, 214, 216, 221, 222, 235, 239, 249, 251, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 300, 305, 307, 308, 309, 311, 314, 317, 318, 325, 331, 332, 338, 340, 342, 343, 345, 347, 349, 352, 355, 356, 360, 365, 369, 375, 418, 423, 433, 434, 436, 437], "straightforward": [460, 461], "strategi": [15, 198, 216, 243, 397, 423, 442], "stream": [329, 442, 450], "streamingsequentialmetarecommend": [186, 455], "streamingsequentialstrategi": 442, "streamlin": 443, "streamlit": [440, 442], "streibel": 444, "strict": 331, "strictli": [418, 433, 434], "stride": 405, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 156, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 214, 216, 222, 239, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 338, 342, 343, 345, 346, 347, 355, 365, 417, 432, 442, 448, 449, 454, 460, 462], "strip": [245, 400], "strong": 442, "strongli": 448, "strtobool": [442, 450], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 49, 125, 235, 440, 441, 442, 443, 444, 448, 454, 457], "studi": [181, 440, 452, 455, 462], "style": [119, 436, 442, 443], "sub": [208, 442, 452, 457], "subclass": [88, 235, 325, 327, 337, 403, 442, 443, 455, 457], "subfold": 450, "subgraph": 454, "subgroup": 421, "subject": 445, "sublicens": 445, "submiss": [442, 445], "submit": [26, 311, 313, 440, 443, 445], "subpackag": [442, 443, 458], "subplot": 426, "subselectioncondit": [409, 410, 442, 451, 462], "subsequ": [188, 216, 222, 249, 342, 439, 445, 448, 457, 459], "subset": [31, 122, 127, 132, 134, 157, 216, 328, 359, 382, 448, 449, 451, 454], "subspac": [26, 61, 190, 198, 213, 214, 216, 218, 220, 222, 405, 408, 409, 410, 411, 425, 428, 430, 432, 442, 449, 455, 457, 462, 463], "subspace_continu": 61, "subspace_json": 457, "subspacecontinu": [31, 61, 139, 153, 216, 218, 428, 442, 456], "subspacediscret": [31, 140, 143, 144, 146, 154, 157, 216, 218, 221, 408, 409, 410, 411, 420, 425, 432, 442, 456, 457, 463], "substanc": [151, 157, 341, 399, 402, 408, 410, 411, 421, 442, 449, 452, 454, 461], "substance_12": 449, "substance_3": 449, "substance_43": 449, "substance_data": 442, "substance_encod": 399, "substanceencod": [157, 341, 343, 408, 409, 410, 411, 442, 454], "substanceparamet": [398, 399, 400, 402, 403, 408, 409, 410, 411, 414, 418, 420, 433, 434, 440, 442, 449, 450, 452, 456, 462], "substanti": [157, 463], "substrat": 461, "subtyp": 457, "success": [299, 382, 423, 457], "success_valu": 299, "suffic": 443, "suffici": [414, 456, 457], "suggest": [452, 458], "suit": 443, "suitabl": [208, 222, 245, 338, 443, 446, 448, 454, 458, 459, 461], "sum": [59, 115, 222, 397, 407, 408, 409, 410, 414, 420, 421, 423, 426, 438, 449, 453, 456], "sum_": [449, 453], "sum_constraint": 420, "sum_constraint_1": 411, "sum_constraint_2": 411, "sum_toler": 420, "summar": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 139, 140, 141, 143, 144, 146, 153, 154, 157, 297, 299, 305], "summari": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 139, 140, 141, 143, 144, 146, 153, 154, 157, 297, 299, 305, 442, 443], "superior": 446, "supersed": 445, "support": [10, 31, 93, 94, 95, 96, 97, 187, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 372, 403, 408, 409, 410, 411, 414, 415, 417, 420, 425, 432, 440, 442, 443, 444, 445, 449, 452, 454, 455, 456, 458, 459], "supports_batch": 442, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 254, 256, 258, 263, 267, 281, 283, 285, 287, 442, 459], "supports_pending_experi": 442, "supports_transfer_learn": [254, 256, 258, 263, 267, 281, 283, 285, 287, 459], "suppos": [313, 449], "sure": [420, 428, 440, 443], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 74, 76, 95, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 196, 198, 205, 206, 207, 208, 214, 216, 222, 254, 256, 259, 261, 263, 267, 269, 270, 274, 277, 279, 281, 283, 285, 287, 408, 409, 410, 411, 415, 423, 425, 432, 438, 440, 442, 444, 448, 449, 452, 454, 455, 461, 462], "surrogate_model": [196, 198, 403, 415, 417, 418, 423, 433, 434, 442], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 95, 196, 198, 258, 261, 442], "svg": 426, "sw": 409, "swiss": 444, "switch": [53, 184, 187, 188, 291, 403, 408, 409, 410, 411, 423, 425, 432, 440, 442, 449, 455], "switch1": 409, "switch2": 409, "switch2_left": 409, "switch2_right": 409, "switch_1": 449, "switch_2": 449, "switch_aft": [188, 433, 434, 455], "switzerland": 444, "sy": 441, "symmetri": 449, "syntax": [440, 442], "synthet": [405, 406, 415, 426, 436, 437], "system": [399, 423, 440, 441, 445, 450, 458, 461], "t": [289, 290, 330, 338, 398, 399, 400, 402, 403, 410, 415, 426, 436, 437, 439, 451, 454, 457, 458], "t1": [457, 458], "t2": 457, "t3": 457, "t_1": 453, "t_2": 453, "t_3": 453, "t_i": 453, "tab": 426, "tabl": [360, 442, 448, 449, 452], "tabular": 458, "tag": [440, 442, 457], "tailor": 448, "take": [8, 49, 107, 140, 154, 159, 160, 254, 256, 258, 263, 267, 277, 281, 283, 285, 287, 300, 413, 420, 442, 447, 448, 449, 453, 454, 455, 461], "taken": [186, 414, 442, 448, 451, 453], "tantamount": 446, "target": [12, 13, 16, 31, 77, 119, 122, 123, 127, 131, 132, 133, 134, 136, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 243, 245, 246, 247, 254, 256, 258, 261, 263, 267, 281, 283, 285, 287, 291, 299, 302, 303, 305, 333, 349, 352, 353, 359, 362, 374, 375, 377, 395, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 414, 415, 417, 418, 423, 429, 430, 432, 433, 434, 436, 437, 438, 440, 442, 447, 448, 450, 452, 457, 458, 459, 462], "target_1": [409, 410, 411, 425, 453, 460], "target_2": [425, 453, 460], "target_3": [425, 453], "target_3a": 460, "target_3b": 460, "target_a": 459, "target_b": 459, "target_cumbest": [397, 436, 437], "target_max": 448, "target_transform": 425, "targetmod": [305, 457, 460], "targetnam": 245, "targettransform": [305, 442, 460], "task": [144, 216, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 297, 299, 305, 423, 442, 448, 455, 457, 458, 461], "task_idx": [216, 442], "task_param": [436, 437, 458], "task_paramet": 457, "task_parameter_json": 457, "task_parameter_reconstruct": 457, "taskparamet": [229, 436, 437, 442, 451, 457, 458, 462], "tb": 463, "technic": [222, 447, 458, 461], "techniqu": [208, 455], "technologi": 444, "telemetri": [442, 444, 462], "tell": 312, "temp": [408, 410, 444], "temp_c": [398, 399, 400, 414], "temperatur": [398, 400, 402, 403, 408, 410, 413, 417, 418, 432, 449, 454, 456, 461], "temperature_resolut": 408, "temperature_valu": 414, "temporari": [118, 124, 199, 216, 379, 414, 442, 450, 457], "temporarili": [442, 463], "temporary_se": 463, "tempt": 461, "tenac": 442, "tend": 415, "tensor": [26, 45, 254, 289, 290, 352, 361, 365, 385, 387, 436, 442], "term": [110, 243, 414, 423, 443, 445, 448, 452, 456, 457, 458, 461], "termin": [414, 415, 441, 445], "terminologi": 462, "tert": [398, 399, 400, 402, 403], "test": [222, 245, 263, 349, 423, 436, 437, 440, 441, 442, 443, 448, 452, 458, 463], "test_funct": [405, 406, 415, 429, 430, 436, 437], "test_scenario": [398, 400], "testabl": [84, 245], "testfunct": [405, 406, 429, 430], "testfunctionclass": [405, 406, 429, 430], "text": [34, 417, 426, 445, 449, 450, 453], "th": [318, 449], "than": [31, 65, 83, 154, 186, 187, 188, 198, 214, 216, 229, 318, 337, 347, 353, 383, 399, 410, 414, 421, 446, 449, 450, 452, 454, 457, 459], "thei": [160, 181, 191, 308, 355, 359, 403, 411, 414, 420, 423, 428, 442, 443, 447, 448, 449, 452, 454, 455, 456, 457, 460, 461, 463], "them": [38, 277, 350, 403, 440, 441, 442, 443, 447, 449, 450, 451, 452, 454, 455, 457, 461], "theme": 442, "theori": 445, "therebi": 222, "therefor": [44, 188, 254, 256, 258, 263, 267, 281, 283, 285, 287, 403, 441, 448, 457, 459, 461], "therein": 442, "thereof": 445, "thf": 449, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 139, 140, 141, 143, 144, 146, 153, 154, 157, 159, 160, 183, 185, 186, 187, 188, 190, 198, 205, 206, 207, 208, 214, 216, 222, 243, 247, 249, 251, 254, 256, 258, 259, 261, 262, 263, 267, 277, 281, 283, 285, 287, 291, 314, 317, 333, 334, 337, 342, 349, 351, 353, 354, 356, 358, 360, 397, 413, 414, 415, 417, 418, 420, 421, 423, 426, 428, 432, 433, 434, 436, 437, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463], "think": [423, 454], "third": [425, 445, 458], "thompson": [21, 444], "thomson": 21, "those": [63, 160, 188, 190, 243, 382, 403, 441, 445, 449, 458], "though": 461, "three": [399, 420, 421, 425, 426, 440, 448, 449, 452, 453, 455, 456, 461], "threshold": [42, 44, 146, 157, 159, 161, 188, 198, 291, 356, 405, 410, 411, 414, 420, 442, 449, 454], "thresholdcondit": [58, 59, 405, 410, 411, 420, 462], "through": [31, 216, 307, 317, 349, 359, 418, 420, 423, 425, 440, 442, 443, 445, 449, 453, 457, 458, 462], "throughout": 188, "throw": [342, 449], "thrown": [247, 400, 414, 433, 441, 453], "thu": [198, 333, 359, 398, 399, 405, 406, 408, 409, 410, 411, 417, 418, 420, 423, 425, 429, 430, 432, 441, 443, 448, 450, 451, 454, 455, 457, 458, 461, 463], "tick": 415, "tight_layout": 426, "time": [10, 198, 314, 383, 406, 413, 420, 423, 440, 442, 447, 448, 449, 451, 454, 457, 458, 459, 463], "timeout": [442, 450], "timer": 413, "titl": [426, 445], "tl": 436, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 414, 415, 442], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 214, 216, 222, 239, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 365], "to_factori": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117], "to_fram": 397, "to_gpytorch": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 169, 171, 172, 173, 174, 175, 176, 177, 442], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 214, 216, 222, 239, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 297, 299, 305, 365, 417, 418, 432, 448, 457], "to_keep": 357, "to_ndarrai": 365, "to_numpi": 426, "to_object": [297, 299, 305, 397, 405, 406, 415, 423, 426, 429, 430, 436, 437, 453, 458], "to_polar": [40, 41, 42], "to_searchspac": [139, 140, 141, 143, 144, 146, 153, 154, 157, 214, 222, 423, 428, 442, 451], "to_str": 442, "to_subspac": [139, 140, 143, 144, 146, 153, 154, 157, 442], "to_tensor": [365, 414, 415, 417, 442], "to_tupl": [365, 426], "togeth": [38, 69, 318, 403, 423, 430, 440, 442, 449], "toggl": 31, "toggle_discrete_candid": [31, 442, 451], "toler": [31, 42, 154, 222, 394, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 414, 417, 418, 420, 425, 429, 430, 432, 433, 434, 440, 442, 449], "tolist": 405, "toluen": 454, "toml": 442, "too": [405, 458, 461], "tool": [339, 442, 449, 457], "toolbox": 440, "top": [442, 443], "topic": 448, "topolog": 454, "topologicaltors": 151, "topologicaltorsionfingerprint": 151, "torch": [352, 365, 414, 415, 417, 436, 442], "toronto": 444, "tort": 445, "total": [187, 188, 382, 420, 421, 423, 456], "total_bas": 421, "total_phase_ag": 421, "toward": [171, 349, 449], "towel": 439, "tox": [440, 442, 443], "tracebackexcept": 441, "track": [180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 222, 414, 445, 451], "trade": [8, 445, 453], "trademark": 445, "tradit": [399, 419, 420, 438, 440, 442], "train": [79, 95, 180, 186, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 251, 254, 256, 258, 259, 261, 262, 263, 267, 281, 283, 285, 287, 291, 416, 426, 436, 437, 442, 458], "train_i": 417, "train_x": 417, "training_funct": 437, "trajectori": [243, 397, 414, 423, 448, 458], "transfer": [250, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 403, 408, 409, 410, 411, 425, 432, 436, 438, 440, 442, 445, 454, 459, 462], "transform": [31, 79, 122, 127, 132, 134, 140, 141, 143, 144, 146, 154, 157, 214, 216, 222, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 297, 299, 303, 305, 343, 352, 359, 362, 365, 366, 385, 408, 409, 410, 411, 432, 442, 445, 450, 454, 459, 460], "transform_rep_exp2comp": 442, "transit": 442, "translat": [38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 442, 445, 451, 454], "transmiss": 457, "transmit": 314, "travers": 442, "treasur": 462, "treat": [157, 161, 254, 256, 258, 263, 267, 281, 283, 285, 287, 399, 440, 449, 454, 460, 463], "tree": 442, "tremend": 399, "trend": 461, "tri": 456, "triangl": 309, "triangular": [303, 309, 425, 460], "tricki": 452, "tricyclohexylphosphin": [398, 399, 400], "trigger": [186, 317, 414, 418, 423, 442, 443, 447, 453, 457], "trivial": [270, 283, 453, 454, 459], "true": [6, 12, 13, 14, 16, 17, 31, 34, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 95, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 161, 198, 216, 267, 299, 308, 326, 327, 331, 337, 338, 347, 357, 394, 399, 403, 405, 406, 408, 409, 410, 411, 415, 417, 418, 420, 423, 425, 429, 430, 432, 433, 434, 436, 437, 442, 448, 449, 450, 451, 452, 454, 457], "truncat": [440, 450], "trust": [417, 450], "truth": 338, "truthi": 450, "try": [87, 349, 398, 399, 400, 414, 417, 418, 434, 441, 442, 463], "tune": 440, "tupl": [13, 16, 31, 41, 45, 102, 103, 104, 107, 109, 111, 112, 113, 115, 116, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 162, 214, 216, 221, 222, 290, 317, 324, 331, 334, 346, 349, 361, 365, 369, 385], "turn": [44, 214, 222, 254, 256, 258, 263, 267, 281, 283, 285, 287, 369, 428, 440, 441, 442, 449, 450], "turnaround": 458, "twice": [451, 453], "two": [13, 16, 34, 55, 64, 65, 128, 188, 198, 243, 318, 323, 352, 374, 382, 397, 398, 400, 413, 420, 423, 425, 426, 430, 436, 437, 439, 440, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "twofold": 423, "twophasemetarecommend": [398, 400, 403, 408, 409, 410, 411, 414, 415, 417, 418, 423, 425, 430, 432, 433, 434, 440, 442, 455], "twophasestrategi": 442, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 123, 125, 127, 128, 132, 134, 136, 139, 140, 141, 143, 144, 146, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 200, 203, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 229, 232, 233, 235, 236, 237, 239, 241, 242, 245, 247, 249, 251, 254, 256, 257, 258, 259, 261, 263, 264, 267, 270, 271, 275, 281, 283, 285, 287, 289, 290, 291, 293, 294, 297, 299, 300, 305, 307, 308, 309, 311, 312, 313, 314, 317, 318, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 365, 366, 367, 369, 371, 372, 374, 375, 376, 382, 383, 385, 387, 390, 391, 392, 393, 394, 395, 399, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 421, 423, 425, 432, 433, 434, 440, 442, 443, 445, 446, 449, 452, 453, 454, 455, 456, 459, 461, 462], "typealia": 300, "typeerror": [31, 95, 99, 245, 254, 256, 258, 263, 267, 281, 283, 285, 287, 333, 349, 350, 383, 394, 395, 414, 415], "typeguard": 330, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 160, 169, 171, 172, 173, 174, 175, 176, 177, 183, 185, 186, 187, 188, 214, 216, 222, 227, 235, 236, 239, 254, 256, 258, 261, 263, 267, 270, 281, 283, 285, 287, 290, 297, 299, 305, 327, 328, 329, 330, 346, 352, 359, 365], "typic": [15, 333, 347, 399, 440, 447, 448, 452, 454, 457, 463], "typing_extens": 443, "typo": [442, 443], "u": [21, 397, 398, 399, 400, 413, 415, 420, 421, 423, 428, 437, 440, 446, 449, 453], "ucb": [8, 403, 442, 446, 457], "ultim": 443, "ultra": [433, 434], "un": 442, "unabl": 417, "unavail": 442, "unawar": 447, "unbound": [365, 413], "uncaught": 442, "uncertainti": [8, 15, 403, 462], "unchang": 159, "uncharacter": 461, "uncorrel": [356, 461], "undefin": [254, 451], "under": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 314, 359, 411, 415, 423, 426, 440, 441, 445, 447, 454], "underflow": 85, "underli": [31, 55, 414, 423, 440, 448, 452, 455, 457], "underscor": 442, "understand": [440, 461], "undesir": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 90, 449, 451, 454, 463], "undo": 441, "unequ": 411, "unevenli": 454, "unexpect": 87, "unfinish": 447, "unfortun": 461, "unhandl": 442, "uniform": [214, 254, 350, 351, 442], "uniformli": 382, "uniniti": 337, "uninstal": [86, 440], "unintend": [90, 333, 442, 443], "unintention": 463, "union": [13, 16, 31, 128, 161, 245, 249, 254, 256, 258, 263, 267, 281, 283, 285, 287, 307, 308, 309, 375, 430, 445, 456], "uniqu": [56, 136, 160, 420, 442, 454], "unit": [221, 369], "unknown": [187, 382, 397, 423, 442, 459, 461], "unlabel": 352, "unless": [440, 443, 445, 450, 454, 457], "unlik": [12, 13, 14, 16, 17, 420, 453, 463], "unlock": 462, "unmaintain": 442, "unmatch": 331, "unmatchedattributeerror": 331, "unmeasur": [245, 400], "unnecessari": [442, 448], "unpromis": 414, "unreach": 442, "unrealist": 458, "unrecogn": 349, "unrestrict": 333, "unsaf": 442, "unspecifi": [322, 442, 457], "unspecifiedtyp": 31, "unsqueez": [414, 415], "unstructur": [237, 457], "unstructure_bas": 235, "unsupport": [214, 247], "until": [183, 185, 186, 187, 188, 245, 423, 440, 458], "untouch": 350, "untransform": [31, 459], "unusedobjectwarn": [414, 442, 447], "unveil": 437, "unwant": 38, "up": [31, 222, 245, 247, 397, 398, 399, 400, 401, 408, 410, 413, 415, 419, 420, 421, 426, 430, 436, 437, 440, 441, 442, 446, 449, 453, 463], "updat": [31, 399, 402, 442, 443, 447], "upgrad": 442, "upon": [190, 270, 441, 442, 443, 449, 456, 459, 461], "upper": [8, 22, 161, 177, 216, 222, 307, 308, 309, 365, 403, 415, 425, 426, 436, 437, 442, 449, 460, 463], "upper_bound": [408, 409, 410, 411, 432, 456], "upper_threshold": 161, "upperconfidencebound": [22, 446, 457], "upstream": 443, "urg": 452, "url": [450, 461], "us": [15, 21, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 69, 73, 95, 107, 127, 128, 146, 151, 154, 157, 160, 180, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 222, 223, 224, 236, 245, 247, 249, 254, 256, 258, 263, 264, 267, 281, 283, 285, 287, 303, 313, 314, 320, 333, 334, 342, 343, 349, 351, 352, 358, 367, 371, 372, 382, 387, 397, 405, 406, 412, 413, 414, 415, 416, 419, 420, 421, 428, 432, 433, 434, 436, 437, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 460, 461, 462, 463], "usa": 444, "usabl": [337, 441, 442, 454, 457], "usag": [368, 440, 442, 449, 450, 455, 462], "use_comp_rep": [95, 99, 452], "use_torch": [352, 405, 406, 415, 429, 430, 436, 437], "user": [52, 53, 67, 80, 90, 146, 149, 254, 256, 258, 263, 267, 281, 283, 285, 287, 294, 311, 351, 402, 403, 408, 425, 434, 440, 441, 442, 443, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461], "userguid": 310, "usernam": [311, 442, 450], "userwarn": 441, "uses_shap_explain": 95, "usort": 442, "usr": 151, "usrcat": 151, "usrcatfingerprint": 151, "usrfingerprint": 151, "usual": [245, 398, 399, 400, 433, 441, 452, 454], "util": [31, 198, 214, 222, 254, 256, 258, 263, 267, 281, 283, 285, 287, 313, 320, 322, 323, 365, 381, 385, 397, 399, 402, 403, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 423, 425, 426, 429, 430, 436, 437, 440, 442, 446, 447, 452, 453, 454, 455, 457, 458, 459, 461, 462], "uv": [440, 442], "v": 461, "val": [49, 125, 338, 436], "val_from_param1": 57, "val_from_param2": 57, "valid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 159, 160, 216, 219, 222, 225, 263, 353, 358, 408, 431, 433, 438, 441, 442, 443, 448, 449, 458], "validate_compat": 263, "validate_config": [31, 434, 442, 448], "validate_parameter_input": 31, "validate_target_input": 31, "valu": [6, 13, 16, 26, 31, 34, 40, 41, 42, 44, 45, 53, 55, 77, 95, 106, 107, 108, 109, 110, 111, 112, 113, 117, 122, 127, 128, 132, 134, 140, 143, 144, 146, 148, 149, 151, 154, 157, 159, 160, 161, 164, 165, 166, 188, 205, 206, 207, 208, 214, 216, 222, 223, 224, 243, 245, 247, 249, 254, 256, 258, 263, 267, 281, 283, 285, 287, 299, 300, 302, 307, 308, 309, 314, 317, 321, 322, 328, 331, 338, 345, 349, 350, 351, 353, 355, 358, 359, 360, 365, 367, 374, 375, 376, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 405, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 423, 425, 426, 429, 430, 432, 433, 434, 436, 437, 440, 442, 443, 446, 448, 449, 450, 451, 452, 453, 460, 461, 462, 463], "valuabl": [455, 458], "valueerror": [13, 15, 16, 31, 44, 63, 64, 65, 95, 99, 128, 136, 159, 160, 165, 166, 214, 216, 222, 228, 245, 247, 254, 256, 258, 263, 267, 281, 283, 285, 287, 294, 318, 331, 336, 338, 341, 345, 347, 349, 351, 353, 358, 359, 382, 383, 394, 395, 418, 430, 441], "var": [31, 254, 256, 257, 258, 261, 263, 267, 281, 283, 285, 287, 423, 462], "vari": [31, 222, 399, 453], "variabl": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 127, 132, 134, 139, 140, 141, 143, 144, 146, 153, 154, 157, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 254, 256, 258, 263, 267, 281, 283, 285, 287, 297, 312, 314, 373, 388, 429, 440, 442, 443, 449, 454, 455, 457, 459], "varianc": [8, 15, 106, 283, 354, 442, 446], "variance_initial_valu": 106, "variance_prior": 106, "variant": [403, 436, 452, 461], "variat": 426, "varieti": [429, 443, 457, 458], "variou": [365, 420, 427, 442, 447, 452, 455, 458], "varucb": 442, "vector": [34, 417, 442, 444, 453], "vendor": 454, "verbal": 445, "verbos": [418, 442], "veri": [408, 410, 425, 447, 450, 452, 454, 459, 463], "verifi": [337, 405, 408, 409, 410, 411, 420, 421, 428, 430, 432, 440, 443], "versa": [436, 461], "versatil": 455, "version": [216, 311, 372, 408, 410, 411, 420, 423, 428, 436, 437, 440, 441, 442, 443, 445, 457], "vert": 415, "via": [12, 15, 21, 30, 31, 44, 95, 188, 198, 210, 254, 256, 258, 259, 261, 263, 267, 281, 283, 285, 287, 313, 325, 333, 349, 357, 400, 406, 413, 414, 417, 428, 440, 442, 443, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 460, 461, 462], "via_init": 457, "via_json": 457, "viabl": [83, 425], "vice": [436, 461], "view": [214, 222, 415, 456], "view_init": 415, "violat": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 442], "viridi": 415, "virtual": 443, "visibl": 442, "visual": [399, 436, 437, 452, 460], "volum": 461, "vpn": [440, 450], "vsa": 151, "vsafingerprint": 151, "vulner": [442, 443], "w_i": 453, "wa": [15, 70, 71, 74, 76, 77, 86, 90, 160, 188, 254, 256, 258, 263, 267, 281, 283, 285, 287, 345, 349, 353, 383, 399, 441, 442, 443, 445, 450, 452, 454, 457, 461], "wai": [216, 413, 420, 421, 427, 428, 436, 439, 440, 450, 451, 452, 454, 456, 457, 458, 459, 460, 461, 463], "wall": 10, "want": [52, 403, 408, 420, 423, 430, 437, 440, 443, 449, 450, 451, 452, 454, 455, 457, 459, 460], "warn": [66, 334, 408, 410, 411, 414, 429, 430, 442, 443], "warranti": [440, 445], "watch": 413, "water": [408, 409, 410, 411, 420, 449, 454], "waterfal": [95, 97, 442], "we": [26, 243, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 421, 423, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 460, 461, 462, 463], "web": 443, "weber": 444, "weight": [119, 127, 128, 376, 425, 453, 457], "weight_kdalton": 454, "welcom": 443, "well": [311, 403, 414, 419, 439, 443, 448, 449, 452, 454, 458], "were": [31, 81, 349, 400, 437, 441, 442, 447, 449, 450, 454, 456], "what": [160, 186, 216, 243, 349, 385, 397, 417, 425, 434, 439, 443, 446, 448, 452, 454, 461, 462], "whatsnew": 323, "when": [13, 16, 31, 44, 53, 87, 154, 159, 161, 186, 187, 188, 196, 198, 216, 254, 256, 258, 263, 264, 267, 281, 283, 285, 287, 294, 321, 322, 331, 333, 337, 347, 349, 352, 383, 408, 409, 411, 413, 418, 420, 421, 423, 425, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463], "whenev": [26, 186, 349, 457], "where": [13, 16, 21, 26, 34, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 180, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 243, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 317, 349, 382, 398, 399, 400, 403, 408, 410, 420, 423, 440, 441, 442, 443, 445, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461], "wherea": 457, "wherev": [445, 447], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 99, 139, 140, 141, 143, 144, 146, 153, 154, 157, 198, 214, 222, 254, 256, 258, 263, 267, 281, 283, 285, 287, 312, 351, 365, 420, 442, 445, 448, 450, 451, 460], "which": [13, 15, 16, 31, 40, 41, 42, 44, 90, 95, 122, 127, 132, 134, 160, 161, 180, 181, 183, 185, 186, 187, 188, 190, 193, 196, 198, 203, 205, 206, 207, 208, 210, 211, 216, 222, 249, 251, 254, 256, 258, 263, 267, 281, 283, 285, 287, 291, 313, 314, 333, 337, 349, 351, 356, 358, 360, 374, 375, 385, 397, 399, 403, 406, 413, 414, 420, 421, 423, 428, 429, 430, 434, 436, 437, 440, 441, 442, 443, 445, 446, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 463], "while": [216, 219, 225, 414, 423, 425, 437, 441, 442, 445, 446, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461], "whilst": 349, "whim": 151, "whimfingerprint": 151, "whole": 445, "whom": 445, "whose": [128, 159, 160, 216, 247, 328, 331, 352, 397, 413, 420, 447, 458], "wide": 458, "wider": 460, "width": 360, "wieczorek": 444, "william": 461, "willing": 448, "win": [254, 423], "win_rat": 423, "window": [442, 450], "winerror": 441, "wise": 376, "wish": 457, "within": [31, 139, 140, 141, 143, 144, 146, 153, 154, 157, 159, 394, 428, 442, 445, 449, 450, 454, 459, 461, 462, 463], "without": [187, 436, 437, 440, 442, 445, 447, 448, 449, 450, 454, 458, 461, 463], "won": 454, "work": [26, 288, 317, 352, 408, 410, 411, 414, 425, 432, 434, 440, 442, 443, 444, 445, 449, 450, 455, 457, 458], "workaround": [441, 442], "workflow": [417, 440, 448, 457, 462], "world": [440, 448], "worldwid": 445, "worst": [13, 16, 245, 247, 249, 400], "would": [56, 85, 159, 160, 243, 245, 251, 262, 413, 420, 423, 440, 443, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 461, 463], "wrap": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 267, 271, 289, 290, 333, 440, 442, 453], "wrapper": [1, 25, 249, 251, 263, 334, 436, 437, 440, 455], "write": [440, 441, 445, 457], "written": [429, 430, 443, 445], "wrong": [434, 442], "wrongli": 441, "www": [440, 445], "x": [26, 123, 161, 218, 245, 247, 271, 324, 330, 334, 346, 361, 374, 385, 397, 398, 399, 400, 408, 409, 410, 411, 414, 415, 420, 425, 432, 436, 437, 440, 442, 456, 459], "x0": [426, 456], "x0_mesh": 426, "x1": [426, 456], "x1_mesh": 426, "x2": 456, "x_": [397, 405, 406, 428, 429, 430], "x_1": [405, 406, 428, 429, 430, 449], "x_2": [405, 406, 428, 429, 430, 449], "x_3": [405, 406, 428, 429, 430, 449], "x_4": [405, 406, 428, 429, 430], "x_5": 430, "x_6": 430, "x_i": 449, "x_pend": 26, "xlabel": 426, "xlsx": [398, 399, 400, 414], "xpho": [398, 399, 400], "xxxx": 441, "xylen": [398, 399, 400, 402, 403], "y": [279, 338, 356, 374, 397, 398, 399, 400, 414, 415, 417, 420, 436, 437, 440, 461], "y0": 426, "y0_mesh": 426, "y1": 426, "y1_mesh": 426, "ye": 338, "year": 461, "yet": [26, 442, 447, 455], "yield": [6, 107, 257, 398, 399, 400, 402, 403, 408, 414, 417, 418, 420, 430, 432, 433, 434, 440, 442, 446, 452, 453, 457], "yield_cumbest": [398, 399, 400, 414], "yield_mean": 448, "yield_mod": 448, "yield_q_0": 448, "yield_std": 448, "ylabel": 426, "yml": 442, "you": [31, 52, 399, 403, 405, 413, 418, 420, 423, 429, 430, 433, 439, 440, 441, 443, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 463], "your": [399, 413, 420, 423, 430, 439, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452, 454, 457, 458, 459, 460, 461, 463], "your_branch_nam": 443, "yourself": 423, "z": [415, 440], "zdir": 415, "zero": [44, 63, 65, 159, 161, 171, 354, 420, 423, 449, 461], "zip": [414, 415], "\u00b5fmt": 442, "\u0161o\u0161i\u0107": [440, 444]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoMeasurementsError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.conversion.to_string", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 443, "0": 442, "01": 442, "02": 442, "03": 442, "04": 442, "05": 442, "06": 442, "07": 442, "08": 442, "09": 442, "1": 442, "10": 442, "11": 442, "12": 442, "13": 442, "14": 442, "15": 442, "16": 442, "17": 442, "19": 442, "2": 442, "2022": 442, "2023": 442, "2024": 442, "2025": 442, "21": 442, "23": 442, "24": 442, "27": 442, "28": 442, "29": 442, "3": 442, "31": 442, "4": 442, "5": 442, "6": 442, "7": 442, "8": 442, "9": 442, "A": 440, "For": 454, "On": 452, "The": [423, 433, 440, 451, 457, 458, 461], "abbrevi": 457, "acqf": 2, "acquisit": [1, 2, 23, 25, 27, 28, 29, 403, 447], "acquisitionfunct": 24, "action": 461, "activ": [446, 454], "activate_paramet": 159, "ad": [402, 442, 447, 448, 461, 463], "add_fake_measur": 349, "add_noise_to_perturb_degenerate_row": 350, "add_parameter_nois": 351, "addendum": 425, "addit": 420, "additivekernel": 115, "advanc": [440, 459], "altern": 457, "amount": 420, "an": 423, "appli": 451, "arm": [422, 423], "arm64": 441, "arrai": 458, "arrays_to_datafram": 352, "assembli": 457, "asynchron": 447, "attr": 443, "augment": [316, 317, 318], "auto": 459, "automat": 457, "avail": [403, 459], "avx": 441, "back": 440, "backtest": [396, 436], "bandit": [253, 422, 423], "base": [23, 33, 101, 121, 123, 138, 168, 179, 182, 192, 195, 202, 255, 257, 296, 398, 399, 400, 405, 406, 420, 421, 430, 451, 458], "basesequentialmetarecommend": 185, "basic": [105, 170, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 401, 402, 448, 450, 452, 457], "basickernel": 102, "batch": 448, "batchify_ensemble_predictor": 289, "batchify_mean_var_predict": 290, "batteri": 440, "bayb": [0, 1, 2, 23, 25, 27, 28, 29, 30, 32, 33, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 131, 133, 135, 136, 137, 138, 142, 145, 147, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 178, 179, 181, 182, 184, 189, 191, 192, 194, 195, 197, 199, 200, 201, 202, 204, 209, 212, 213, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 260, 262, 264, 265, 266, 268, 271, 272, 273, 275, 276, 278, 280, 282, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 402, 440, 443], "bayesian": [194, 195, 197, 199, 200, 440, 455], "bayesianlinearsurrog": 281, "bayesianrecommend": 196, "bell_transform": 307, "bernoulli": 423, "betabernoullimultiarmedbanditsurrog": 254, "betaprior": 171, "binari": [298, 300], "binarytarget": 299, "black": [397, 423], "block_deserialization_hook": 232, "block_serialization_hook": 233, "bo": 452, "boolean": [335, 336, 337, 338], "both": 432, "botorch": [197, 429], "botorchrecommend": 198, "bound": [413, 453, 456], "box": [397, 423], "break": 442, "build": [423, 456], "bytes_to_human_read": 369, "cach": [448, 450], "call": 451, "callabl": [405, 406, 430, 458], "campaign": [30, 31, 397, 398, 399, 400, 403, 405, 406, 408, 409, 411, 414, 417, 418, 425, 426, 429, 430, 432, 433, 448], "candid": [448, 451], "cardinalityconstraint": 34, "case": 423, "catch_constant_target": 291, "categor": 142, "categoricalencod": 148, "categoricalparamet": [143, 454], "caution": 451, "challeng": 449, "chang": 442, "changelog": 442, "check_if_in": 336, "chemic": 440, "chemistri": [339, 340, 341, 342, 343], "choicevalu": 300, "class": 443, "classproperti": 323, "clone": 440, "closer_el": 374, "closest_el": 375, "cluster": [204, 455], "code": 443, "columntransform": 385, "compar": 432, "compon": 413, "composit": [114, 260, 459], "compositekernel": 103, "compositesurrog": 261, "comput": [449, 452], "condit": [39, 40, 449], "config": [433, 434, 448], "configur": [417, 418, 433, 451, 453, 457], "constraint": [32, 33, 35, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 404, 405, 406, 407, 408, 409, 410, 411, 420, 421, 449, 451, 456, 463], "construct": [398, 399, 400, 405, 406, 420, 429, 430, 453, 456], "constructor": [456, 457], "continu": [43, 213, 404, 406, 420, 428, 446, 449, 454, 456, 461, 463], "continuouscardinalityconstraint": [44, 449], "continuousconstraint": 36, "continuouslinearconstraint": [45, 449], "continuouslinearequalityconstraint": 47, "continuouslinearinequalityconstraint": 48, "continuousnonlinearconstraint": 37, "continuousparamet": 139, "contribut": 443, "contributor": 444, "control": [448, 451], "conveni": 453, "convent": 443, "convers": [344, 345, 346, 347, 453, 457], "convert": [234, 417], "convert_acqf": 28, "convert_bound": 366, "convert_to_float": 324, "copi": 457, "core": [215, 218, 219, 231, 232, 233, 234, 235, 236, 237, 244, 245, 266, 273, 275], "cpu": 441, "creat": [397, 398, 399, 400, 403, 405, 406, 408, 409, 410, 411, 417, 418, 425, 428, 429, 432, 433, 436, 437, 448, 456], "create_fake_input": 353, "creation": [398, 399, 400, 420, 421, 448, 463], "current": 459, "custom": [145, 262, 264, 397, 408, 412, 413, 416, 417, 418, 459], "customdiscreteparamet": [146, 454], "customencod": 149, "customonnxsurrog": 263, "data": [398, 399, 400, 456, 461], "datafram": [348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 405, 406, 430, 456, 457, 458], "de": [432, 457], "default": [276, 456, 457], "defaultkernelfactori": 277, "defin": [397, 405, 406, 413, 414, 415, 425, 426, 429, 430, 434, 436, 437, 440], "definit": 414, "depend": [409, 440, 454], "deprec": [46, 47, 48, 49, 124, 125, 442], "deprecationerror": 67, "descript": 425, "deseri": 457, "deserialize_datafram": 241, "design": [440, 443], "desir": [126, 128, 448], "desirabilityobject": [127, 453], "develop": 443, "df_apply_dependency_augment": 317, "df_apply_permutation_augment": 318, "df_drop_single_value_column": 354, "df_drop_string_column": 355, "df_uncorrelated_featur": 356, "dictionari": [433, 434], "differ": 403, "dimens": 430, "discret": [50, 220, 223, 224, 225, 407, 408, 409, 410, 420, 429, 448, 449, 454, 456], "discretecardinalityconstraint": [51, 449], "discreteconstraint": 38, "discretecustomconstraint": [52, 449], "discretedependenciesconstraint": [53, 449], "discreteexcludeconstraint": [54, 449], "discretelinkedparametersconstraint": [55, 449], "discretenolabelduplicatesconstraint": [56, 449], "discreteparamet": 140, "discretepermutationinvarianceconstraint": [57, 449], "discreteproductconstraint": [58, 449], "discretesamplingmethod": 381, "discretesumconstraint": [59, 449], "discuss": 423, "disk": 450, "do": 458, "docstr": 443, "document": 418, "domin": 453, "dtypefloatnumpi": 371, "dtypefloatonnx": 372, "dtypefloattorch": 387, "dummi": 320, "duplic": 420, "dure": 463, "dynam": 451, "edbo": 278, "edbokernelfactori": 279, "effici": 463, "emptysearchspaceerror": 68, "encod": 454, "end": 440, "enum": [129, 147, 301], "environ": 450, "equival": 457, "estim": 463, "exampl": [398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 417, 418, 425, 429, 430, 432, 433, 434, 438, 440, 452], "except": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "exceptiongroup": 441, "exclud": 451, "exclus": [410, 411, 451], "expect": 461, "expectedimprov": 3, "experi": [408, 409, 410, 411, 417, 418, 425, 432, 440, 447, 458], "experiment": [448, 450, 452], "expir": 442, "explain": [93, 452], "explicit": 456, "extend": 443, "extract": 459, "fake": 463, "faq": 439, "farthest_point_sampl": 382, "featur": 450, "field": 457, "file": [433, 434], "filter_df": 357, "find_subclass": 325, "finite_float": 390, "fix": [441, 442], "float": 450, "fpsrecommend": 210, "fraction_to_float": 345, "from": [433, 440, 442, 448, 456, 457], "full": [398, 399, 400, 456], "function": [397, 398, 399, 400, 403, 405, 406, 414, 425, 429, 430, 443, 447], "further": 448, "fuzzy_row_match": 358, "gammaprior": 172, "gaussian_process": [265, 266, 268, 271, 272, 273, 275, 276, 278], "gaussianmixtureclusteringrecommend": 205, "gaussianprocesspreset": 274, "gaussianprocesssurrog": 267, "gener": [436, 437, 443, 455], "geom_mean": 376, "get": [402, 448, 451], "get_base_structure_hook": 235, "get_baseclass": 326, "get_canonical_smil": 340, "get_fingerprint_class": 341, "get_model_params_valid": 293, "get_parameters_from_datafram": 160, "get_subclass": 327, "get_transform_object": 359, "get_transform_paramet": 227, "get_user_detail": 311, "github": 440, "global": 446, "group_duplicate_valu": 328, "guid": 462, "halfcauchyprior": 173, "halfnormalprior": 174, "hilberts_factori": 329, "hook": [412, 413, 414, 415], "hybrid": [405, 430, 449], "imaginari": 423, "implicit": 453, "import": [397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 413, 415, 417, 418, 420, 421, 423, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 452], "improv": 415, "includ": 440, "inclus": 398, "incompatibilityerror": 69, "incompatibleacquisitionfunctionerror": 70, "incompatibleargumenterror": 71, "incompatibleexplainererror": 72, "incompatiblesearchspaceerror": 73, "incompatiblesurrogateerror": 74, "incomplet": 400, "incorpor": 411, "independentgaussiansurrog": 256, "index": 440, "indic": 440, "infeasibilityerror": 75, "infiniteintervalerror": 364, "influenc": 463, "inform": [448, 455], "initi": [398, 403], "insight": [91, 92, 93, 94, 96, 97, 98, 99, 452], "instal": [440, 441], "instanc": 413, "instead": [417, 418], "instruct": 450, "internet": 450, "interpret": 452, "interrupt": 414, "interv": [363, 364, 365, 366, 367], "invalidsurrogatemodelerror": 76, "invalidtargetvalueerror": 77, "invari": 420, "invok": 457, "irrelev": 461, "is_abstract": 337, "is_all_inst": 330, "is_cardinality_fulfil": 61, "is_en": 312, "is_inact": 161, "is_shap_explain": 98, "issu": [440, 441], "iter": [405, 406, 417, 418, 425], "json": [448, 457], "kernel": [100, 101, 104, 105, 114], "kernel_factori": [268, 271], "kernelfactori": 269, "kmeansclusteringrecommend": 206, "known": [440, 441], "label": 454, "leak": 441, "learn": [435, 437, 446, 458, 461], "licens": [440, 445], "like": 454, "limit": [452, 459, 460], "linear": [280, 406], "linear_transform": 308, "linearkernel": 106, "link": 418, "local": [440, 446], "logexpectedimprov": 4, "lognormalprior": 175, "look_up_target": 247, "lookup": [246, 247, 398, 399, 400, 405, 406, 414, 430, 436, 437, 458], "loop": [397, 398, 399, 400, 436, 437, 440], "maco": 441, "maintain": [440, 444], "make_explainer_for_surrog": 99, "make_gp_from_preset": 275, "mandatori": 453, "manual": [408, 409, 410, 411], "mark": 447, "match": 460, "match_attribut": 331, "maternkernel": 107, "max": 460, "mean": 458, "meanpredictionsurrog": 283, "measur": [402, 417, 418, 448, 463], "mechan": [398, 399, 400, 458], "memori": [368, 369, 463], "memorys": 221, "meta": [181, 182, 184, 451, 455], "metarecommend": 183, "method": [413, 443, 446], "min": 460, "minimumcardinalityviolatedwarn": 78, "miss": 458, "mixin": 238, "mixtur": [419, 420, 421], "mode": [425, 460], "model": [403, 417, 418, 420, 421, 423, 452, 459], "modelnottrainederror": 79, "monitor": 415, "monkeypatch": [413, 414, 415], "multi": [422, 423, 424, 425, 459], "multipl": 458, "naiv": [189, 282], "naivehybridspacerecommend": 190, "name": 454, "name_to_smil": 342, "necessari": [398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 417, 418, 425, 429, 430, 432, 433, 434], "nest": 457, "ngboost": 284, "ngboostsurrog": 285, "nois": 463, "nomcacquisitionfunctionerror": 80, "nomeasurementserror": 81, "non": 453, "non_inf_float": 391, "non_nan_float": 392, "non_shap_explain": 94, "none": 458, "nonpredict": [201, 202, 204, 209], "nonpredictiverecommend": 203, "nonstring_to_tupl": 346, "norecommenderslefterror": 82, "normalprior": 176, "notenoughpointslefterror": 83, "nothingtosimulateerror": 84, "numer": [152, 304, 370, 371, 372, 373, 374, 375, 376], "numericalcontinuousparamet": [153, 454], "numericaldiscreteparamet": [154, 454], "numericaltarget": [305, 460], "numericalunderflowerror": 85, "object": [118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 135, 136, 398, 399, 400, 403, 405, 406, 408, 409, 410, 411, 425, 429, 432, 436, 437, 440, 448, 453, 457], "onnx": 417, "optim": [397, 426, 436, 437, 440, 448, 463], "option": [440, 454], "optionalimporterror": 86, "order": [420, 450], "output": [417, 418, 459], "overrid": 443, "packag": [440, 450], "page": 452, "pamclusteringrecommend": 207, "parallel": 448, "paramet": [137, 138, 141, 142, 145, 147, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 398, 399, 400, 403, 418, 420, 421, 448, 452, 454, 456, 463], "parameter_cartesian_prod_panda": 223, "parameter_cartesian_prod_polar": 224, "parameterencod": 150, "pareto": [131, 426], "paretoobject": [132, 453], "partial": [25, 447], "partialacquisitionfunct": 26, "pass": 418, "pend": 447, "perform": [398, 425, 429, 430], "periodickernel": 108, "perman": 451, "permut": 420, "piecewisepolynomialkernel": 109, "plainkernelfactori": 270, "plot": [397, 414, 415, 452], "point": 450, "polar": [441, 450], "polynomialkernel": 110, "posterior": 448, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 257, "pre": 417, "precis": 450, "predict": 448, "preset": [272, 273, 275, 276, 278], "pretrain": 417, "pretty_print_df": 360, "print": [408, 409, 411, 425], "prior": [167, 168, 169, 170], "probabilityofimprov": 7, "probabl": 415, "problem": [397, 414, 426, 441], "product": [411, 456], "productkernel": 116, "pull": 443, "pure": [191, 192, 194, 195, 197, 199, 200, 201, 202, 204, 209, 446, 455], "purerecommend": 193, "pycharm": 441, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedhypervolumeimprov": 13, "qlognoisyexpectedimprov": 14, "qlognparego": 12, "qnegintegratedposteriorvari": 15, "qnoisyexpectedhypervolumeimprov": 16, "qnoisyexpectedimprov": 17, "qposteriorstandarddevi": 18, "qprobabilityofimprov": 19, "qsimpleregret": 20, "qthompsonsampl": 21, "quick": 440, "qupperconfidencebound": 22, "random": [377, 378, 379], "random_forest": 286, "randomforestsurrog": 287, "randomrecommend": 211, "rbfkernel": 111, "recommend": [178, 179, 181, 182, 184, 189, 191, 192, 194, 195, 197, 199, 200, 201, 202, 204, 209, 402, 403, 417, 418, 429, 430, 432, 447, 448, 451, 455], "recommenderprotocol": 180, "reduct": 446, "refers_to": 332, "regist": 413, "register_custom_architectur": 264, "register_hook": 333, "relat": 441, "remov": 442, "replic": 459, "represent": [420, 421, 452, 456], "reproduc": 463, "request": 443, "restrict": 456, "result": [397, 414, 415, 447], "rffkernel": 112, "role": 461, "row": 450, "rqkernel": 113, "run": [397, 405, 406, 423], "sampl": [209, 446, 455], "sample_numerical_df": 383, "sampling_algorithm": [380, 382, 383], "scalar": [128, 130, 459], "scale": 384, "scalekernel": 117, "scenario": [248, 249, 458], "scope": 450, "search": [420, 421, 428, 436, 440, 446, 456, 463], "searchspac": [212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 398, 400, 403, 405, 406, 408, 409, 410, 411, 425, 427, 429, 430, 437], "searchspacematchwarn": 87, "searchspacetyp": 217, "see": 461, "select_constructor_hook": 236, "semaphor": 441, "sequenti": [184, 448], "sequential_greedi": [199, 200], "sequentialgreedyrecommend": 200, "sequentialmetarecommend": 186, "serial": [230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 431, 432, 448, 457], "serialize_datafram": 242, "serialmixin": 239, "set": [397, 414, 415, 426, 428, 436, 437], "set_random_se": 378, "setup": [402, 408, 409, 410, 411, 417, 418, 420, 421, 423, 425, 426, 432], "shap": [92, 93, 94, 96, 97, 98, 99, 452], "shap_explain": 96, "shap_plot": 97, "shapinsight": 95, "signatur": 413, "simplex": [420, 456], "simul": [243, 244, 245, 246, 247, 248, 249, 250, 251, 397, 398, 399, 400, 414, 423, 436, 437, 458], "simulate_experi": 245, "simulate_scenario": 249, "simulate_transfer_learn": 251, "singl": [133, 426, 458], "singletargetobject": [134, 453], "sklearnclusteringrecommend": 208, "slot": [420, 421], "smile": 156, "smiles_to_fingerprint_featur": 343, "smoothedboxprior": 177, "some": [405, 406, 425], "sort_paramet": 162, "space": [420, 421, 428, 430, 436, 440, 446, 448, 456, 463], "span": 420, "stage": 417, "start": 440, "statist": 448, "stop": 414, "str_to_acqf": 29, "strategi": [403, 440], "streamingsequentialmetarecommend": 187, "string": [433, 457], "strtobool": 338, "structure_constraint": 49, "structure_object": 125, "studi": 459, "sub": 446, "subselectioncondit": [41, 449], "subspac": 456, "subspacecontinu": 214, "subspacediscret": 222, "substanc": [155, 156, 420, 440], "substanceencod": 151, "substanceparamet": [157, 454], "suggest": 441, "suitabl": 403, "sum": 411, "support": [441, 447], "surrog": [252, 253, 255, 257, 258, 260, 262, 264, 265, 266, 268, 271, 272, 273, 275, 276, 278, 280, 282, 284, 286, 288, 289, 290, 291, 292, 293, 294, 403, 416, 417, 418, 459], "surrogateprotocol": 259, "synchron": 443, "synthet": [429, 430], "tabl": [398, 399, 400, 436, 437, 440], "target": [295, 296, 297, 298, 300, 301, 304, 306, 307, 308, 309, 413, 424, 425, 426, 453, 460, 463], "targetmod": 302, "targettransform": 303, "task": [436, 437], "taskparamet": [144, 454, 461], "technologi": 461, "telemetri": [310, 311, 312, 313, 314, 440, 450], "telemetry_record_recommended_measurement_percentag": 313, "telemetry_record_valu": 314, "temporary_se": 379, "terminologi": [420, 457, 458, 461], "test": [405, 406, 429, 430], "theoret": 420, "thi": [398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 411, 425, 429, 430, 452], "thresholdcondit": [42, 449], "through": 461, "to_kernel_factori": 271, "to_object": 123, "to_searchspac": 218, "to_str": 347, "to_tensor": 361, "to_tupl": 334, "toggl": 451, "toler": 448, "tool": 443, "torch": [386, 387, 388, 441], "tradit": 421, "train": 417, "trajectori": 451, "transfer": [435, 437, 458, 461], "transfer_learn": [250, 251], "transform": [306, 307, 308, 309, 425], "transform_target_column": 362, "treasur": 461, "triangular_transform": 309, "trigger": [413, 415], "two": 434, "twophasemetarecommend": 188, "type": 457, "uncertainti": 446, "unidentifiedsubclasserror": 88, "uninstal": 450, "uninterrupt": 414, "unlock": 461, "unmatchedattributeerror": 89, "unreleas": 442, "unspecifi": 321, "unspecifiedtyp": 322, "unstructure_bas": 237, "unusedobjectwarn": 90, "upperconfidencebound": 8, "us": [398, 399, 400, 402, 403, 408, 409, 410, 411, 417, 418, 423, 425, 429, 430, 456, 457, 458, 459], "usag": 452, "use_fallback_constructor_hook": 367, "user": 462, "util": [27, 28, 29, 60, 61, 158, 159, 160, 161, 162, 240, 241, 242, 288, 289, 290, 291, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 463], "v": [413, 420, 426, 441, 448, 451], "valid": [62, 63, 64, 65, 135, 136, 163, 164, 165, 166, 226, 227, 228, 229, 292, 293, 294, 389, 390, 391, 392, 393, 394, 395, 418, 434], "validate_cardinality_constraint_parameter_bound": 63, "validate_cardinality_constraints_are_nonoverlap": 64, "validate_constraint": 65, "validate_custom_architecture_cl": 294, "validate_decorrel": 164, "validate_is_finit": 165, "validate_not_nan": 393, "validate_paramet": 229, "validate_parameter_input": 394, "validate_parameter_nam": 228, "validate_searchspace_from_config": 219, "validate_simplex_subspace_from_config": 225, "validate_target_input": 395, "validate_target_nam": 136, "validate_unique_valu": 166, "valu": [454, 456, 457, 458], "variabl": 450, "varname_numpy_use_single_precis": 373, "varname_torch_use_single_precis": 388, "verif": [408, 409, 410, 411, 420, 421, 434], "verifi": 406, "via": 452, "visual": 426, "we": 458, "what": 458, "window": 441, "within": 456, "without": 441, "workflow": [443, 447], "wrap": [405, 406, 430], "write": 443}})